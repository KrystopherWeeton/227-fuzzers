; ModuleID = '../../third_party/angle/src/compiler/translator/ParseContext.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/ParseContext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array.74" = type { [2 x i8] }
%"class.sh::ImmutableString" = type { i8*, i64 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sh::TParseContext" = type <{ %"class.sh::TSymbolTable"*, i8, [3 x i8], i32, i32, [4 x i8], i64, i32, [4 x i8], %"class.sh::TIntermBlock"*, i32, i32, i32, [4 x i8], %"class.sh::TType"*, i8, i8, i8, i8, i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"class.sh::TDiagnostics"*, %"class.sh::TDirectiveHandler", %"class.angle::pp::Preprocessor", i8*, i32, i32, i32, i32, i8, [3 x i8], %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.std::__1::map.64", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sh::TIntermBlock" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.30", i8, [7 x i8] }>
%"class.sh::TIntermNode" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }
%"class.sh::TIntermAggregateBase" = type { i32 (...)** }
%"class.sh::TVector.30" = type { %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"**, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.sh::TIntermNode"** }
%"class.sh::TType" = type { i32, i32, i32, i8, i8, %"struct.sh::TMemoryQualifier", i8, %"struct.sh::TLayoutQualifier", i8, i8, %"class.sh::TSpan", %"class.sh::TVector.0"*, %"class.sh::TInterfaceBlock"*, %"class.sh::TStructure"*, i8, i64, i8* }
%"struct.sh::TMemoryQualifier" = type { i8, i8, i8, i8, i8 }
%"struct.sh::TLayoutQualifier" = type <{ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.sh::TSpan" = type { i32*, i64 }
%"class.sh::TVector.0" = type { %"class.std::__1::vector.76" }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { i32*, i32*, %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { i32* }
%"class.sh::TInterfaceBlock" = type { %"class.sh::TSymbol.base", %"class.sh::TFieldListCollection", i32, i32 }
%"class.sh::TSymbol.base" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8 }>
%"class.sh::TSymbolUniqueId" = type { i32 }
%"class.sh::TFieldListCollection" = type { %"class.sh::TVector.1"*, i64, i32, %"class.std::__1::basic_string" }
%"class.sh::TVector.1" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sh::TField"**, %"class.sh::TField"**, %"class.std::__1::__compressed_pair" }
%"class.sh::TField" = type <{ %"class.sh::TType"*, %"class.sh::ImmutableString", %"struct.sh::TSourceLoc", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sh::TField"** }
%"class.sh::TStructure" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TFieldListCollection", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.sh::TDirectiveHandler" = type <{ %"class.angle::pp::DirectiveHandler", %struct.TPragma, [4 x i8], %"class.std::__1::map.53"*, %"class.sh::TDiagnostics"*, i32*, i32, i8, [3 x i8] }>
%"class.angle::pp::DirectiveHandler" = type { i32 (...)** }
%struct.TPragma = type { i8, i8, i8, %"struct.TPragma::STDGL" }
%"struct.TPragma::STDGL" = type { i8 }
%"class.angle::pp::Preprocessor" = type { %"struct.angle::pp::PreprocessorImpl"* }
%"struct.angle::pp::PreprocessorImpl" = type opaque
%"class.std::__1::map.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.sh::TSymbolTable" = type { %"class.sh::TSymbolTableBase", %"class.std::__1::vector.9", %"class.std::__1::vector.14", i8, i32, i32, i32, %struct.ShBuiltInResources, %"class.std::__1::map", %"class.sh::TVariable"* }
%"class.sh::TSymbolTableBase" = type { %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"*, %"class.sh::TSymbol"* }
%"class.sh::TSymbol" = type <{ %"class.sh::ImmutableString", %"class.sh::TSymbolUniqueId", i8, i8, i8, i8 }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.std::__1::unique_ptr.16"*, %"class.std::__1::unique_ptr.16"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::unique_ptr.16" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::unique_ptr.16"* }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.sh::TVariable" = type { %"class.sh::TSymbol.base", %"class.sh::TType"*, %"class.sh::TConstantUnion"* }
%"class.sh::TConstantUnion" = type { %union.anon.8, i32 }
%union.anon.8 = type { i32 }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.sh::TDiagnostics" = type { %"class.angle::pp::Diagnostics", %"class.sh::TInfoSinkBase"*, i32, i32 }
%"class.angle::pp::Diagnostics" = type { i32 (...)** }
%"class.sh::TInfoSinkBase" = type { %"class.std::__1::basic_string.38", %"class.std::__1::vector.46" }
%"class.std::__1::basic_string.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { i32*, i32*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"class.sh::TFunction" = type <{ %"class.sh::TSymbol.base", i8, %"class.sh::TVector"*, %"class.sh::TVariable"**, i64, %"class.sh::TType"*, %"class.sh::ImmutableString", i8, i8, i8, i8, [4 x i8] }>
%"class.sh::TVector" = type opaque
%"struct.std::__1::array.73" = type { [1 x i8] }
%"class.std::__1::__tree_node.137" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.138", [5 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.138" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i8, i8 }
%"struct.std::__1::array.75" = type { [3 x i8] }
%"struct.angle::pp::PreprocessorSettings" = type { i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.133" }
%"struct.std::__1::pair.133" = type { i32, %"class.sh::TParseContext::AtomicCounterBindingState" }
%"class.sh::TParseContext::AtomicCounterBindingState" = type { i32, %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.gl::Range"*, %"class.gl::Range"*, %"class.std::__1::__compressed_pair.100" }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.gl::Range"* }
%"class.sh::TVector.82" = type { %"class.std::__1::vector.83" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { i32*, i32*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.42 }
%struct.anon.42 = type { i8 }
%"class.sh::TIntermSwizzle" = type <{ %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TVector.82", i8, [7 x i8] }>
%"class.sh::TIntermExpression" = type { %"class.sh::TIntermTyped", %"class.sh::TType" }
%"class.sh::TIntermTyped" = type { %"class.sh::TIntermNode" }
%"class.sh::TIntermBinary" = type <{ %"class.sh::TIntermOperator.base", [7 x i8], %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i8, [7 x i8] }>
%"class.sh::TIntermOperator.base" = type <{ %"class.sh::TIntermExpression", i8 }>
%"class.sh::TIntermSymbol" = type { %"class.sh::TIntermTyped", %"class.sh::TVariable"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.38", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.sh::TPublicType" = type { %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TLayoutQualifier", %"struct.sh::TMemoryQualifier", i32, i8, i8, i32, %"class.sh::TVector.0"* }
%"struct.sh::TTypeSpecifierNonArray" = type { i32, i8, i8, %"class.sh::TStructure"*, %"struct.sh::TSourceLoc", i8 }
%"class.sh::TIntermConstantUnion" = type { %"class.sh::TIntermExpression", %"class.sh::TConstantUnion"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.123", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.125" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.sh::TTypeQualifierBuilder" = type <{ %"class.sh::TVector.90", i32, [4 x i8] }>
%"class.sh::TVector.90" = type { %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.sh::TQualifierWrapperBase"**, %"class.sh::TQualifierWrapperBase"**, %"class.std::__1::__compressed_pair.93" }
%"class.sh::TQualifierWrapperBase" = type { i32 (...)**, %"struct.sh::TSourceLoc" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.sh::TQualifierWrapperBase"** }
%"struct.sh::TTypeQualifier" = type { %"struct.sh::TLayoutQualifier", %"struct.sh::TMemoryQualifier", i32, i32, i8, i8, %"struct.sh::TSourceLoc" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.sh::TIntermAggregate" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.30", i8, i8, %"class.sh::TFunction"* }
%"struct.angle::pp::SourceLocation" = type { i32, i32 }
%"class.sh::TIntermDeclaration" = type { %"class.sh::TIntermNode", %"class.sh::TIntermAggregateBase", %"class.sh::TVector.30" }
%"class.sh::TIntermLoop" = type { %"class.sh::TIntermNode", i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermIfElse" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.sh::TIntermGlobalQualifierDeclaration" = type <{ %"class.sh::TIntermNode", %"class.sh::TIntermSymbol"*, i8, [7 x i8] }>
%"class.sh::TIntermFunctionPrototype" = type { %"class.sh::TIntermTyped", %"class.sh::TFunction"* }
%"class.sh::TIntermFunctionDefinition" = type { %"class.sh::TIntermNode", %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"* }
%"class.sh::TFunctionLookup" = type { %"class.sh::ImmutableString", %"class.sh::TType"*, %"class.sh::TIntermTyped"*, %"class.sh::TVector.30", %"class.sh::TSymbol"* }
%"class.sh::TStorageQualifierWrapper" = type <{ %"class.sh::TQualifierWrapperBase", i32, [4 x i8] }>
%"class.sh::TDeclarator" = type { %"class.sh::ImmutableString", %"class.sh::TVector.0"*, %"struct.sh::TSourceLoc" }
%"class.sh::TVector.107" = type { %"class.std::__1::vector.108" }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"**, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.sh::TDeclarator"** }
%"class.sh::TIntermSwitch" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"* }
%"class.sh::TIntermCase" = type { %"class.sh::TIntermNode", %"class.sh::TIntermTyped"* }
%"class.sh::TIntermUnary" = type { %"class.sh::TIntermOperator.base", %"class.sh::TIntermTyped"*, i8, %"class.sh::TFunction"* }
%"class.sh::TIntermBranch" = type { %"class.sh::TIntermNode", i8, %"class.sh::TIntermTyped"* }
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.sh::ImmutableString"*, %"class.sh::ImmutableString"*, %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.sh::ImmutableString"* }
%"class.sh::TIntermTernary" = type { %"class.sh::TIntermExpression", %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE = comdat any

$_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE = comdat any

$_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE = comdat any

$_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v = comdat any

$_ZNK2sh16TLayoutQualifier7isEmptyEv = comdat any

$_ZN2sh18getQualifierStringENS_10TQualifierE = comdat any

$_ZN2sh13TParseContext25AtomicCounterBindingState10insertSpanEim = comdat any

$_ZNK2sh16TLayoutQualifier18isCombinationValidEv = comdat any

$_ZN2sh15IsShaderIoBlockENS_10TQualifierE = comdat any

$_Z3Stri = comdat any

$_ZN2sh21TQualifierWrapperBaseD2Ev = comdat any

$_ZN2sh21TQualifierWrapperBaseD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16vectorIi14pool_allocatorIiEE8__appendEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN2sh21TQualifierWrapperBaseE = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"extension is not supported\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"extension is disabled\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"extension is being used\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"illegal vector field selection\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"vector field selection out of range\00", align 1
@.str.6 = private unnamed_addr constant [56 x i8] c"illegal - vector component fields not from the same set\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"cannot convert from '\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"' to '\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"wrong operand type - no operation '\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"' exists that takes an operand of type \00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c" (or there is no acceptable conversion)\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"wrong operand types - no operation '\00", align 1
@.str.14 = private unnamed_addr constant [50 x i8] c"' exists that takes a left-hand operand of type '\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"' and a right operand of type '\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"' (or there is no acceptable conversion)\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"illegal type for precision qualifier\00", align 1
@.str.18 = private unnamed_addr constant [35 x i8] c"No precision specified for (float)\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"No precision specified (int)\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"No precision specified\00", align 1
@.str.21 = private unnamed_addr constant [53 x i8] c" l-value of swizzle cannot have duplicate components\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"can't modify a readonly variable\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c" l-value required\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"can't modify a const\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"can't modify an attribute\00", align 1
@.str.26 = private unnamed_addr constant [22 x i8] c"can't modify an input\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"can't modify a uniform\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"can't modify a varying\00", align 1
@.str.29 = private unnamed_addr constant [26 x i8] c"can't modify gl_FragCoord\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"can't modify gl_FrontFacing\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"can't modify gl_HelperInvocation\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"can't modify gl_PointCoord\00", align 1
@.str.33 = private unnamed_addr constant [30 x i8] c"can't modify gl_NumWorkGroups\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"can't modify gl_WorkGroupSize\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"can't modify gl_WorkGroupID\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"can't modify gl_LocalInvocationID\00", align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"can't modify gl_GlobalInvocationID\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"can't modify gl_LocalInvocationIndex\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"can't modify gl_ViewID_OVR\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"can't modify work group size variable\00", align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"can't modify any member in gl_in\00", align 1
@.str.42 = private unnamed_addr constant [30 x i8] c"can't modify gl_PrimitiveIDIn\00", align 1
@.str.43 = private unnamed_addr constant [29 x i8] c"can't modify gl_InvocationID\00", align 1
@.str.44 = private unnamed_addr constant [49 x i8] c"can't modify gl_PrimitiveID in a fragment shader\00", align 1
@.str.45 = private unnamed_addr constant [43 x i8] c"can't modify gl_Layer in a fragment shader\00", align 1
@.str.46 = private unnamed_addr constant [25 x i8] c"can't modify gl_SampleID\00", align 1
@.str.47 = private unnamed_addr constant [29 x i8] c"can't modify gl_SampleMaskIn\00", align 1
@.str.48 = private unnamed_addr constant [31 x i8] c"can't modify gl_SamplePosition\00", align 1
@.str.49 = private unnamed_addr constant [50 x i8] c"can't modify gl_ClipDistance in a fragment shader\00", align 1
@.str.50 = private unnamed_addr constant [50 x i8] c"can't modify gl_CullDistance in a fragment shader\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"can't modify void\00", align 1
@.str.52 = private unnamed_addr constant [35 x i8] c"can't modify a variable with type \00", align 1
@.str.53 = private unnamed_addr constant [17 x i8] c"l-value required\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.55 = private unnamed_addr constant [3 x i8] c" \22\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"\22)\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"constant expression required\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"integer expression required\00", align 1
@.str.60 = private unnamed_addr constant [29 x i8] c"only allowed at global scope\00", align 1
@.str.61 = private unnamed_addr constant [23 x i8] c"reserved built-in name\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"gl_\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"webgl_\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"_webgl_\00", align 1
@.str.65 = private unnamed_addr constant [3 x i8] c"__\00", align 1
@.str.66 = private unnamed_addr constant [97 x i8] c"identifiers containing two consecutive underscores (__) are reserved as possible future keywords\00", align 1
@.str.67 = private unnamed_addr constant [40 x i8] c"constructor does not have any arguments\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@.str.69 = private unnamed_addr constant [37 x i8] c"cannot convert a variable with type \00", align 1
@.str.70 = private unnamed_addr constant [41 x i8] c"cannot convert a variable with writeonly\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"cannot convert a void\00", align 1
@.str.72 = private unnamed_addr constant [55 x i8] c"array constructor needs one argument per array element\00", align 1
@.str.73 = private unnamed_addr constant [43 x i8] c"constructing from a non-dereferenced array\00", align 1
@.str.74 = private unnamed_addr constant [49 x i8] c"Array constructor argument has an incorrect type\00", align 1
@.str.75 = private unnamed_addr constant [79 x i8] c"Number of constructor parameters does not match the number of structure fields\00", align 1
@.str.76 = private unnamed_addr constant [62 x i8] c"Structure constructor arguments do not match structure fields\00", align 1
@.str.77 = private unnamed_addr constant [64 x i8] c"a struct cannot be used as a constructor argument for this type\00", align 1
@.str.78 = private unnamed_addr constant [59 x i8] c"constructing matrix from matrix can only take one argument\00", align 1
@.str.79 = private unnamed_addr constant [42 x i8] c"not enough data provided for construction\00", align 1
@.str.80 = private unnamed_addr constant [19 x i8] c"too many arguments\00", align 1
@.str.81 = private unnamed_addr constant [27 x i8] c"illegal use of type 'void'\00", align 1
@.str.82 = private unnamed_addr constant [28 x i8] c"boolean expression expected\00", align 1
@.str.83 = private unnamed_addr constant [32 x i8] c" (structure contains a sampler)\00", align 1
@.str.84 = private unnamed_addr constant [70 x i8] c"location must only be specified for a single input or output variable\00", align 1
@.str.85 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.86 = private unnamed_addr constant [67 x i8] c"invalid layout qualifier: only valid on program inputs and outputs\00", align 1
@.str.87 = private unnamed_addr constant [77 x i8] c"invalid layout qualifier: only valid on shader inputs, outputs, and uniforms\00", align 1
@.str.88 = private unnamed_addr constant [63 x i8] c"The std430 layout is supported only for shader storage blocks.\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"std430\00", align 1
@.str.90 = private unnamed_addr constant [41 x i8] c"opaque types cannot be output parameters\00", align 1
@.str.91 = private unnamed_addr constant [49 x i8] c"array size must be a constant integer expression\00", align 1
@.str.92 = private unnamed_addr constant [32 x i8] c"array size must be non-negative\00", align 1
@.str.93 = private unnamed_addr constant [37 x i8] c"array size must be greater than zero\00", align 1
@.str.94 = private unnamed_addr constant [21 x i8] c"array size too large\00", align 1
@.str.95 = private unnamed_addr constant [40 x i8] c"cannot declare arrays of this qualifier\00", align 1
@.str.96 = private unnamed_addr constant [32 x i8] c"cannot declare arrays of arrays\00", align 1
@.str.97 = private unnamed_addr constant [50 x i8] c"vertex shader output cannot be an array of arrays\00", align 1
@.str.98 = private unnamed_addr constant [51 x i8] c"fragment shader input cannot be an array of arrays\00", align 1
@.str.99 = private unnamed_addr constant [52 x i8] c"fragment shader output cannot be an array of arrays\00", align 1
@.str.100 = private unnamed_addr constant [51 x i8] c"cannot declare arrays of structs of this qualifier\00", align 1
@.str.101 = private unnamed_addr constant [91 x i8] c"structures containing arrays may not be declared constant since they cannot be initialized\00", align 1
@.str.102 = private unnamed_addr constant [53 x i8] c"variables with qualifier 'const' must be initialized\00", align 1
@.str.103 = private unnamed_addr constant [81 x i8] c"implicitly sized arrays disallowed for shaders that are not tessellation shaders\00", align 1
@.str.104 = private unnamed_addr constant [95 x i8] c"If index layout qualifier is specified for a fragment output, location must also be specified.\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.106 = private unnamed_addr constant [16 x i8] c"gl_LastFragData\00", align 1
@.str.107 = private unnamed_addr constant [18 x i8] c"gl_MaxDrawBuffers\00", align 1
@.str.108 = private unnamed_addr constant [55 x i8] c"redeclaration of gl_LastFragData as an array of arrays\00", align 1
@.str.109 = private unnamed_addr constant [64 x i8] c"redeclaration of gl_LastFragData with size != gl_MaxDrawBuffers\00", align 1
@.str.110 = private unnamed_addr constant [16 x i8] c"gl_ClipDistance\00", align 1
@.str.111 = private unnamed_addr constant [20 x i8] c"gl_MaxClipDistances\00", align 1
@.str.112 = private unnamed_addr constant [55 x i8] c"redeclaration of gl_ClipDistance as an array of arrays\00", align 1
@.str.113 = private unnamed_addr constant [65 x i8] c"redeclaration of gl_ClipDistance with size > gl_MaxClipDistances\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"gl_CullDistance\00", align 1
@.str.115 = private unnamed_addr constant [20 x i8] c"gl_MaxCullDistances\00", align 1
@.str.116 = private unnamed_addr constant [55 x i8] c"redeclaration of gl_CullDistance as an array of arrays\00", align 1
@.str.117 = private unnamed_addr constant [65 x i8] c"redeclaration of gl_CullDistance with size > gl_MaxCullDistances\00", align 1
@.str.118 = private unnamed_addr constant [13 x i8] c"redefinition\00", align 1
@.str.119 = private unnamed_addr constant [56 x i8] c"Shared memory declarations cannot have layout specified\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"layout\00", align 1
@.str.121 = private unnamed_addr constant [49 x i8] c"layout qualifier only valid for interface blocks\00", align 1
@.str.122 = private unnamed_addr constant [37 x i8] c"invalid layout qualifier combination\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"yuv\00", align 1
@.str.124 = private unnamed_addr constant [59 x i8] c"storage qualifier supported in GLSL ES 3.00 and above only\00", align 1
@.str.125 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.126 = private unnamed_addr constant [18 x i8] c"Can only be highp\00", align 1
@.str.127 = private unnamed_addr constant [15 x i8] c"atomic counter\00", align 1
@.str.128 = private unnamed_addr constant [41 x i8] c"location must not be set for atomic_uint\00", align 1
@.str.129 = private unnamed_addr constant [21 x i8] c"no binding specified\00", align 1
@.str.130 = private unnamed_addr constant [48 x i8] c"empty array declaration needs to specify a size\00", align 1
@.str.131 = private unnamed_addr constant [32 x i8] c"cannot be used with a structure\00", align 1
@.str.132 = private unnamed_addr constant [65 x i8] c"cannot declare buffer variables at global scope(outside a block)\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"s must be uniform\00", align 1
@.str.134 = private unnamed_addr constant [40 x i8] c"cannot be used with a yuvCscStandardEXT\00", align 1
@.str.135 = private unnamed_addr constant [53 x i8] c"internal image format requires a floating image type\00", align 1
@.str.136 = private unnamed_addr constant [53 x i8] c"internal image format requires an integer image type\00", align 1
@.str.137 = private unnamed_addr constant [54 x i8] c"internal image format requires an unsigned image type\00", align 1
@.str.138 = private unnamed_addr constant [17 x i8] c"layout qualifier\00", align 1
@.str.139 = private unnamed_addr constant [35 x i8] c"No image internal format specified\00", align 1
@.str.140 = private unnamed_addr constant [19 x i8] c"unrecognized token\00", align 1
@.str.141 = private unnamed_addr constant [127 x i8] c"Except for images with the r32f, r32i and r32ui format qualifiers, image variables must be qualified readonly and/or writeonly\00", align 1
@_ZZN2sh13TParseContext26checkCanUseLayoutQualifierERKNS_10TSourceLocEE10extensions = internal constant %"struct.std::__1::array.74" { [2 x i8] c"\0F\10" }, align 1
@.str.142 = private unnamed_addr constant [51 x i8] c"qualifier supported in GLSL ES 3.00 and above only\00", align 1
@.str.143 = private unnamed_addr constant [40 x i8] c"invalid layout qualifier: not supported\00", align 1
@.str.144 = private unnamed_addr constant [103 x i8] c"invalid layout qualifier: only valid when used with 'in' in a compute shader global layout declaration\00", align 1
@.str.145 = private unnamed_addr constant [59 x i8] c"invalid layout qualifier: only valid when used with images\00", align 1
@.str.146 = private unnamed_addr constant [140 x i8] c"invalid layout qualifier: only valid when used with a fragment shader output in ESSL version >= 3.00 and EXT_blend_func_extended is enabled\00", align 1
@.str.147 = private unnamed_addr constant [75 x i8] c"invalid layout qualifier: only valid when used with opaque types or blocks\00", align 1
@.str.148 = private unnamed_addr constant [8 x i8] c"binding\00", align 1
@.str.149 = private unnamed_addr constant [68 x i8] c"invalid layout qualifier: only valid when used with atomic counters\00", align 1
@.str.150 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.151 = private unnamed_addr constant [44 x i8] c"image binding greater than gl_MaxImageUnits\00", align 1
@.str.152 = private unnamed_addr constant [51 x i8] c"sampler binding greater than maximum texture units\00", align 1
@.str.153 = private unnamed_addr constant [63 x i8] c"uniform block binding greater than MAX_UNIFORM_BUFFER_BINDINGS\00", align 1
@.str.154 = private unnamed_addr constant [77 x i8] c"shader storage block binding greater than MAX_SHADER_STORAGE_BUFFER_BINDINGS\00", align 1
@.str.155 = private unnamed_addr constant [64 x i8] c"atomic counter binding greater than gl_MaxAtomicCounterBindings\00", align 1
@.str.156 = private unnamed_addr constant [30 x i8] c"Uniform location out of range\00", align 1
@.str.157 = private unnamed_addr constant [32 x i8] c"Attribute location out of range\00", align 1
@.str.158 = private unnamed_addr constant [56 x i8] c"invalid layout qualifier: only valid on program outputs\00", align 1
@.str.159 = private unnamed_addr constant [78 x i8] c"invalid layout qualifier: only valid when used with 'in' in a fragment shader\00", align 1
@.str.160 = private unnamed_addr constant [21 x i8] c"early_fragment_tests\00", align 1
@.str.161 = private unnamed_addr constant [105 x i8] c"'noncoherent' qualifier must be used when GL_EXT_shader_framebuffer_fetch_non_coherent extension is used\00", align 1
@.str.162 = private unnamed_addr constant [12 x i8] c"noncoherent\00", align 1
@.str.163 = private unnamed_addr constant [130 x i8] c"invalid layout qualifier: only valid when used with 'gl_LastFragData' or the variable decorated with 'inout' in a fragment shader\00", align 1
@.str.164 = private unnamed_addr constant [16 x i8] c"gl_InvocationID\00", align 1
@.str.165 = private unnamed_addr constant [84 x i8] c"tessellation-control per-vertex output l-value must be indexed with gl_InvocationID\00", align 1
@.str.166 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.167 = private unnamed_addr constant [65 x i8] c"Writeonly value cannot be passed for 'in' or 'inout' parameters.\00", align 1
@.str.168 = private unnamed_addr constant [7 x i8] c"assign\00", align 1
@.str.169 = private unnamed_addr constant [65 x i8] c"Constant value cannot be passed for 'out' or 'inout' parameters.\00", align 1
@.str.170 = private unnamed_addr constant [34 x i8] c"Cannot be qualified as invariant.\00", align 1
@.str.171 = private unnamed_addr constant [10 x i8] c"invariant\00", align 1
@.str.172 = private unnamed_addr constant [22 x i8] c"undeclared identifier\00", align 1
@.str.173 = private unnamed_addr constant [18 x i8] c"variable expected\00", align 1
@.str.174 = private unnamed_addr constant [77 x i8] c"It is an error to use gl_WorkGroupSize before declaring the local group size\00", align 1
@.str.175 = private unnamed_addr constant [17 x i8] c"gl_WorkGroupSize\00", align 1
@.str.176 = private unnamed_addr constant [28 x i8] c"assigning non-constant to '\00", align 1
@.str.177 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.178 = private unnamed_addr constant [58 x i8] c"global variable initializers must be constant expressions\00", align 1
@.str.179 = private unnamed_addr constant [143 x i8] c"global variable initializers should be constant expressions (uniforms and globals are allowed in global initializers for legacy compatibility)\00", align 1
@.str.180 = private unnamed_addr constant [43 x i8] c" cannot initialize this type of qualifier \00", align 1
@.str.181 = private unnamed_addr constant [14 x i8] c"not supported\00", align 1
@.str.182 = private unnamed_addr constant [18 x i8] c"first-class array\00", align 1
@.str.183 = private unnamed_addr constant [22 x i8] c"cannot be bool or int\00", align 1
@.str.184 = private unnamed_addr constant [54 x i8] c"'in' can be only used to specify the local group size\00", align 1
@.str.185 = private unnamed_addr constant [15 x i8] c"cannot be bool\00", align 1
@.str.186 = private unnamed_addr constant [16 x i8] c"cannot be array\00", align 1
@.str.187 = private unnamed_addr constant [17 x i8] c"cannot be matrix\00", align 1
@.str.188 = private unnamed_addr constant [35 x i8] c"must use 'flat' interpolation here\00", align 1
@.str.189 = private unnamed_addr constant [33 x i8] c"cannot be an array of structures\00", align 1
@.str.190 = private unnamed_addr constant [42 x i8] c"cannot be a structure containing an array\00", align 1
@.str.191 = private unnamed_addr constant [45 x i8] c"cannot be a structure containing a structure\00", align 1
@.str.192 = private unnamed_addr constant [40 x i8] c"cannot be a structure containing a bool\00", align 1
@.str.193 = private unnamed_addr constant [58 x i8] c"Local variables can only use the const storage qualifier.\00", align 1
@.str.194 = private unnamed_addr constant [128 x i8] c"Only allowed with shader storage blocks, variables declared within shader storage blocks and variables declared as image types.\00", align 1
@.str.195 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.196 = private unnamed_addr constant [10 x i8] c"writeonly\00", align 1
@.str.197 = private unnamed_addr constant [9 x i8] c"coherent\00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"restrict\00", align 1
@.str.199 = private unnamed_addr constant [9 x i8] c"volatile\00", align 1
@.str.200 = private unnamed_addr constant [19 x i8] c"Offset overlapping\00", align 1
@.str.201 = private unnamed_addr constant [29 x i8] c"Offset must be multiple of 4\00", align 1
@.str.202 = private unnamed_addr constant [84 x i8] c"Missing a valid input primitive declaration before declaring an unsized array input\00", align 1
@.str.203 = private unnamed_addr constant [60 x i8] c"Geometry shader input variable must be declared as an array\00", align 1
@.str.204 = private unnamed_addr constant [62 x i8] c"Tessellation interface variables must be declared as an array\00", align 1
@.str.205 = private unnamed_addr constant [153 x i8] c"If a size is specified for a tessellation control or evaluation user-defined input variable, it must match the maximum patch size (gl_MaxPatchVertices).\00", align 1
@.str.206 = private unnamed_addr constant [153 x i8] c"If a size is specified for a tessellation control user-defined per-vertex output variable, it must match the the number of vertices in the output patch.\00", align 1
@_ZN2shL21kEmptyImmutableStringE = internal constant %"class.sh::ImmutableString" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i32 0, i32 0), i64 0 }, align 8
@.str.207 = private unnamed_addr constant [30 x i8] c"Expected invariant or precise\00", align 1
@.str.208 = private unnamed_addr constant [18 x i8] c"invariant varying\00", align 1
@.str.209 = private unnamed_addr constant [55 x i8] c"undeclared identifier declared as invariant or precise\00", align 1
@.str.210 = private unnamed_addr constant [53 x i8] c"invariant or precise declaration specifies qualifier\00", align 1
@.str.211 = private unnamed_addr constant [53 x i8] c"invariant or precise declaration specifies precision\00", align 1
@.str.212 = private unnamed_addr constant [50 x i8] c"invariant or precise declaration specifies layout\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"'layout'\00", align 1
@.str.214 = private unnamed_addr constant [33 x i8] c"Requires both binding and offset\00", align 1
@.str.215 = private unnamed_addr constant [46 x i8] c"precision is not supported in fragment shader\00", align 1
@.str.216 = private unnamed_addr constant [6 x i8] c"highp\00", align 1
@.str.217 = private unnamed_addr constant [54 x i8] c"illegal type argument for default precision qualifier\00", align 1
@.str.218 = private unnamed_addr constant [96 x i8] c"Array size or input primitive declaration doesn't match the size of earlier sized array inputs.\00", align 1
@.str.219 = private unnamed_addr constant [71 x i8] c"max_vertices can only be declared in 'out' layout in a geometry shader\00", align 1
@.str.220 = private unnamed_addr constant [39 x i8] c"invalid primitive type for 'in' layout\00", align 1
@.str.221 = private unnamed_addr constant [60 x i8] c"primitive doesn't match earlier input primitive declaration\00", align 1
@.str.222 = private unnamed_addr constant [51 x i8] c"invocations contradicts to the earlier declaration\00", align 1
@.str.223 = private unnamed_addr constant [69 x i8] c"invocations can only be declared in 'in' layout in a geometry shader\00", align 1
@.str.224 = private unnamed_addr constant [40 x i8] c"invalid primitive type for 'out' layout\00", align 1
@.str.225 = private unnamed_addr constant [61 x i8] c"primitive doesn't match earlier output primitive declaration\00", align 1
@.str.226 = private unnamed_addr constant [52 x i8] c"max_vertices contradicts to the earlier declaration\00", align 1
@.str.227 = private unnamed_addr constant [22 x i8] c"No vertices specified\00", align 1
@.str.228 = private unnamed_addr constant [30 x i8] c"Duplicated vertices specified\00", align 1
@.str.229 = private unnamed_addr constant [38 x i8] c"Duplicated primitive type declaration\00", align 1
@.str.230 = private unnamed_addr constant [38 x i8] c"Duplicated vertex spacing declaration\00", align 1
@.str.231 = private unnamed_addr constant [32 x i8] c"Duplicated ordering declaration\00", align 1
@.str.232 = private unnamed_addr constant [34 x i8] c"Duplicated point type declaration\00", align 1
@.str.233 = private unnamed_addr constant [39 x i8] c"Error during layout qualifier parsing.\00", align 1
@.str.234 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.235 = private unnamed_addr constant [56 x i8] c"Work group size does not match the previous declaration\00", align 1
@.str.236 = private unnamed_addr constant [49 x i8] c"in type qualifier supported in GLSL ES 3.10 only\00", align 1
@.str.237 = private unnamed_addr constant [35 x i8] c"No local work group size specified\00", align 1
@.str.238 = private unnamed_addr constant [27 x i8] c"gl_MaxComputeWorkGroupSize\00", align 1
@.str.239 = private unnamed_addr constant [61 x i8] c"invalid value: Value must be at least 1 and no greater than \00", align 1
@.str.240 = private unnamed_addr constant [50 x i8] c"out type qualifier supported in GLSL ES 3.10 only\00", align 1
@.str.241 = private unnamed_addr constant [56 x i8] c"Number of views does not match the previous declaration\00", align 1
@.str.242 = private unnamed_addr constant [23 x i8] c"No num_views specified\00", align 1
@.str.243 = private unnamed_addr constant [53 x i8] c"num_views greater than the value of GL_MAX_VIEWS_OVR\00", align 1
@.str.244 = private unnamed_addr constant [83 x i8] c"in type qualifier without variable declaration supported in GLSL ES 3.10 and after\00", align 1
@.str.245 = private unnamed_addr constant [87 x i8] c"only early_fragment_tests is allowed as layout qualifier when not declaring a variable\00", align 1
@.str.246 = private unnamed_addr constant [55 x i8] c"out type qualifier supported in GLSL ES 3.10 and after\00", align 1
@.str.247 = private unnamed_addr constant [54 x i8] c"in type qualifier supported in GLSL ES 3.10 and after\00", align 1
@.str.248 = private unnamed_addr constant [60 x i8] c"invalid qualifier: global layout can only be set for blocks\00", align 1
@.str.249 = private unnamed_addr constant [54 x i8] c"layout qualifiers supported in GLSL ES 3.00 and after\00", align 1
@.str.250 = private unnamed_addr constant [55 x i8] c"function parameter array must be sized at compile time\00", align 1
@.str.251 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@.str.252 = private unnamed_addr constant [58 x i8] c"duplicate function prototype declarations are not allowed\00", align 1
@.str.253 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.254 = private unnamed_addr constant [54 x i8] c"local function prototype declarations are not allowed\00", align 1
@.str.255 = private unnamed_addr constant [34 x i8] c"function does not return a value:\00", align 1
@.str.256 = private unnamed_addr constant [28 x i8] c"function already has a body\00", align 1
@.str.257 = private unnamed_addr constant [57 x i8] c"Function parameter type cannot be a structure definition\00", align 1
@.str.258 = private unnamed_addr constant [61 x i8] c"Name of a built-in function cannot be redeclared as function\00", align 1
@.str.259 = private unnamed_addr constant [39 x i8] c"built-in functions cannot be redefined\00", align 1
@.str.260 = private unnamed_addr constant [67 x i8] c"function must have the same return type in all of its declarations\00", align 1
@.str.261 = private unnamed_addr constant [76 x i8] c"function must have the same parameter qualifiers in all of its declarations\00", align 1
@.str.262 = private unnamed_addr constant [27 x i8] c"redefinition of a function\00", align 1
@.str.263 = private unnamed_addr constant [38 x i8] c"function cannot take any parameter(s)\00", align 1
@.str.264 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.265 = private unnamed_addr constant [36 x i8] c"main function cannot return a value\00", align 1
@.str.266 = private unnamed_addr constant [42 x i8] c"no qualifiers allowed for function return\00", align 1
@.str.267 = private unnamed_addr constant [34 x i8] c"s can't be function return values\00", align 1
@.str.268 = private unnamed_addr constant [61 x i8] c"structures containing arrays can't be function return values\00", align 1
@.str.269 = private unnamed_addr constant [59 x i8] c"array constructor supported in GLSL ES 3.00 and above only\00", align 1
@.str.270 = private unnamed_addr constant [44 x i8] c"constructor can't be a structure definition\00", align 1
@.str.271 = private unnamed_addr constant [27 x i8] c"cannot construct this type\00", align 1
@.str.272 = private unnamed_addr constant [45 x i8] c"function parameter array must specify a size\00", align 1
@.str.273 = private unnamed_addr constant [67 x i8] c"implicitly sized array constructor must have at least one argument\00", align 1
@.str.274 = private unnamed_addr constant [70 x i8] c"implicitly sized array of arrays constructor argument is not an array\00", align 1
@.str.275 = private unnamed_addr constant [80 x i8] c"implicitly sized array of arrays constructor argument dimensionality is too low\00", align 1
@.str.276 = private unnamed_addr constant [87 x i8] c"invalid qualifier: interface blocks must be uniform in version lower than GLSL ES 3.10\00", align 1
@.str.277 = private unnamed_addr constant [70 x i8] c"invalid qualifier: 'patch out' requires a tessellation control shader\00", align 1
@.str.278 = private unnamed_addr constant [72 x i8] c"invalid qualifier: 'patch in' requires a tessellation evaluation shader\00", align 1
@.str.279 = private unnamed_addr constant [67 x i8] c"invalid qualifier: shader IO blocks need shader io block extension\00", align 1
@.str.280 = private unnamed_addr constant [22 x i8] c"type must be an array\00", align 1
@.str.281 = private unnamed_addr constant [62 x i8] c"invalid qualifier: interface blocks must be uniform or buffer\00", align 1
@.str.282 = private unnamed_addr constant [44 x i8] c"invalid qualifier on interface block member\00", align 1
@.str.283 = private unnamed_addr constant [53 x i8] c"unsized arrays are not allowed with interface blocks\00", align 1
@.str.284 = private unnamed_addr constant [54 x i8] c"array of arrays are not allowed with interface blocks\00", align 1
@.str.285 = private unnamed_addr constant [67 x i8] c"geometry shader input block array size inconsistent with primitive\00", align 1
@.str.286 = private unnamed_addr constant [48 x i8] c"array of arrays are not allowed with I/O blocks\00", align 1
@.str.287 = private unnamed_addr constant [46 x i8] c"geometry shader input blocks must be an array\00", align 1
@.str.288 = private unnamed_addr constant [20 x i8] c"unsupported type - \00", align 1
@.str.289 = private unnamed_addr constant [43 x i8] c" types are not allowed in interface blocks\00", align 1
@.str.290 = private unnamed_addr constant [49 x i8] c"invalid qualifier on shader storage block member\00", align 1
@.str.291 = private unnamed_addr constant [42 x i8] c"invalid qualifier on uniform block member\00", align 1
@.str.292 = private unnamed_addr constant [46 x i8] c"invalid layout qualifier: cannot be used here\00", align 1
@.str.293 = private unnamed_addr constant [64 x i8] c"extraneous layout qualifier: only has an effect on matrix types\00", align 1
@.str.294 = private unnamed_addr constant [54 x i8] c"array members of interface blocks must specify a size\00", align 1
@.str.295 = private unnamed_addr constant [40 x i8] c"redefinition of an interface block name\00", align 1
@.str.296 = private unnamed_addr constant [47 x i8] c"redefinition of an interface block member name\00", align 1
@.str.297 = private unnamed_addr constant [49 x i8] c"redefinition of an interface block instance name\00", align 1
@.str.298 = private unnamed_addr constant [44 x i8] c"Embedded struct definitions are not allowed\00", align 1
@.str.299 = private unnamed_addr constant [7 x i8] c"struct\00", align 1
@.str.300 = private unnamed_addr constant [15 x i8] c"Struct nesting\00", align 1
@.str.301 = private unnamed_addr constant [26 x i8] c"Reference of struct type \00", align 1
@.str.302 = private unnamed_addr constant [43 x i8] c" exceeds maximum allowed nesting level of \00", align 1
@.str.303 = private unnamed_addr constant [54 x i8] c" left of '[' is not of type array, matrix, or vector \00", align 1
@.str.304 = private unnamed_addr constant [11 x i8] c"expression\00", align 1
@.str.305 = private unnamed_addr constant [59 x i8] c"missing input primitive declaration before indexing gl_in.\00", align 1
@.str.306 = private unnamed_addr constant [77 x i8] c"array indexes for uniform block arrays must be constant integral expressions\00", align 1
@.str.307 = private unnamed_addr constant [84 x i8] c"array indexes for shader storage block arrays must be constant integral expressions\00", align 1
@.str.308 = private unnamed_addr constant [73 x i8] c"array indexes for fragment outputs must be constant integral expressions\00", align 1
@.str.309 = private unnamed_addr constant [50 x i8] c"array index for gl_FragData must be constant zero\00", align 1
@.str.310 = private unnamed_addr constant [63 x i8] c"array index for samplers must be constant integral expressions\00", align 1
@.str.311 = private unnamed_addr constant [69 x i8] c"array indexes for image arrays must be constant integral expressions\00", align 1
@.str.312 = private unnamed_addr constant [29 x i8] c"index expression is negative\00", align 1
@.str.313 = private unnamed_addr constant [78 x i8] c"array index for gl_FragData must be zero when GL_EXT_draw_buffers is disabled\00", align 1
@.str.314 = private unnamed_addr constant [25 x i8] c"array index out of range\00", align 1
@.str.315 = private unnamed_addr constant [36 x i8] c"matrix field selection out of range\00", align 1
@.str.316 = private unnamed_addr constant [3 x i8] c" '\00", align 1
@.str.317 = private unnamed_addr constant [38 x i8] c"cannot apply dot operator to an array\00", align 1
@.str.318 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.319 = private unnamed_addr constant [24 x i8] c"structure has no fields\00", align 1
@.str.320 = private unnamed_addr constant [15 x i8] c"Internal Error\00", align 1
@.str.321 = private unnamed_addr constant [28 x i8] c" no such field in structure\00", align 1
@.str.322 = private unnamed_addr constant [30 x i8] c"interface block has no fields\00", align 1
@.str.323 = private unnamed_addr constant [34 x i8] c" no such field in interface block\00", align 1
@.str.324 = private unnamed_addr constant [64 x i8] c" field selection requires structure or vector on left hand side\00", align 1
@.str.325 = private unnamed_addr constant [82 x i8] c" field selection requires structure, vector, or interface block on left hand side\00", align 1
@.str.326 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.327 = private unnamed_addr constant [39 x i8] c"Only std140 layout is allowed in WebGL\00", align 1
@.str.328 = private unnamed_addr constant [7 x i8] c"packed\00", align 1
@.str.329 = private unnamed_addr constant [7 x i8] c"std140\00", align 1
@.str.330 = private unnamed_addr constant [10 x i8] c"row_major\00", align 1
@.str.331 = private unnamed_addr constant [13 x i8] c"column_major\00", align 1
@.str.332 = private unnamed_addr constant [56 x i8] c"invalid layout qualifier: location requires an argument\00", align 1
@.str.333 = private unnamed_addr constant [8 x i8] c"rgba32f\00", align 1
@.str.334 = private unnamed_addr constant [8 x i8] c"rgba16f\00", align 1
@.str.335 = private unnamed_addr constant [5 x i8] c"r32f\00", align 1
@.str.336 = private unnamed_addr constant [6 x i8] c"rgba8\00", align 1
@.str.337 = private unnamed_addr constant [12 x i8] c"rgba8_snorm\00", align 1
@.str.338 = private unnamed_addr constant [8 x i8] c"rgba32i\00", align 1
@.str.339 = private unnamed_addr constant [8 x i8] c"rgba16i\00", align 1
@.str.340 = private unnamed_addr constant [7 x i8] c"rgba8i\00", align 1
@.str.341 = private unnamed_addr constant [5 x i8] c"r32i\00", align 1
@.str.342 = private unnamed_addr constant [9 x i8] c"rgba32ui\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"rgba16ui\00", align 1
@.str.344 = private unnamed_addr constant [8 x i8] c"rgba8ui\00", align 1
@.str.345 = private unnamed_addr constant [6 x i8] c"r32ui\00", align 1
@.str.346 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.347 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str.348 = private unnamed_addr constant [16 x i8] c"lines_adjacency\00", align 1
@.str.349 = private unnamed_addr constant [10 x i8] c"triangles\00", align 1
@.str.350 = private unnamed_addr constant [20 x i8] c"triangles_adjacency\00", align 1
@.str.351 = private unnamed_addr constant [11 x i8] c"line_strip\00", align 1
@.str.352 = private unnamed_addr constant [15 x i8] c"triangle_strip\00", align 1
@.str.353 = private unnamed_addr constant [25 x i8] c"invalid layout qualifier\00", align 1
@.str.354 = private unnamed_addr constant [6 x i8] c"quads\00", align 1
@.str.355 = private unnamed_addr constant [9 x i8] c"isolines\00", align 1
@.str.356 = private unnamed_addr constant [14 x i8] c"equal_spacing\00", align 1
@.str.357 = private unnamed_addr constant [24 x i8] c"fractional_even_spacing\00", align 1
@.str.358 = private unnamed_addr constant [23 x i8] c"fractional_odd_spacing\00", align 1
@.str.359 = private unnamed_addr constant [3 x i8] c"cw\00", align 1
@.str.360 = private unnamed_addr constant [4 x i8] c"ccw\00", align 1
@.str.361 = private unnamed_addr constant [11 x i8] c"point_mode\00", align 1
@.str.362 = private unnamed_addr constant [15 x i8] c"out of range: \00", align 1
@.str.363 = private unnamed_addr constant [18 x i8] c" must be positive\00", align 1
@.str.364 = private unnamed_addr constant [41 x i8] c"out of range: num_views must be positive\00", align 1
@.str.365 = private unnamed_addr constant [91 x i8] c"out of range: invocations must be in the range of [1, MAX_GEOMETRY_SHADER_INVOCATIONS_OES]\00", align 1
@.str.366 = private unnamed_addr constant [85 x i8] c"out of range: max_vertices must be in the range of [0, gl_MaxGeometryOutputVertices]\00", align 1
@.str.367 = private unnamed_addr constant [73 x i8] c"out of range : vertices must be in the range of [1, gl_MaxPatchVertices]\00", align 1
@.str.368 = private unnamed_addr constant [56 x i8] c"out of range: index layout qualifier can only be 0 or 1\00", align 1
@__const._ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_.qualifier = private unnamed_addr constant { i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] } { i32 -1, i32 0, i32 0, i32 0, %"struct.sh::WorkGroupSize" { [3 x i32] [i32 -1, i32 -1, i32 -1] }, i32 -1, i32 -1, i32 0, i32 -1, i8 0, i8 0, [2 x i8] zeroinitializer, i32 0, i32 0, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 -1, i8 0, [3 x i8] zeroinitializer }, align 4
@.str.369 = private unnamed_addr constant [44 x i8] c"out of range: location must be non-negative\00", align 1
@.str.370 = private unnamed_addr constant [43 x i8] c"out of range: binding must be non-negative\00", align 1
@.str.371 = private unnamed_addr constant [42 x i8] c"out of range: offset must be non-negative\00", align 1
@.str.372 = private unnamed_addr constant [13 x i8] c"local_size_x\00", align 1
@.str.373 = private unnamed_addr constant [13 x i8] c"local_size_y\00", align 1
@.str.374 = private unnamed_addr constant [13 x i8] c"local_size_z\00", align 1
@.str.375 = private unnamed_addr constant [10 x i8] c"num_views\00", align 1
@.str.376 = private unnamed_addr constant [12 x i8] c"invocations\00", align 1
@.str.377 = private unnamed_addr constant [13 x i8] c"max_vertices\00", align 1
@.str.378 = private unnamed_addr constant [9 x i8] c"vertices\00", align 1
@.str.379 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.380 = private unnamed_addr constant [53 x i8] c"storage qualifier isn't supported in compute shaders\00", align 1
@.str.381 = private unnamed_addr constant [115 x i8] c"invalid qualifier: can be used with either function parameters or the variables for fetching input attachment data\00", align 1
@.str.382 = private unnamed_addr constant [6 x i8] c"inout\00", align 1
@.str.383 = private unnamed_addr constant [34 x i8] c"duplicate field name in structure\00", align 1
@.str.384 = private unnamed_addr constant [25 x i8] c"redefinition of a struct\00", align 1
@.str.385 = private unnamed_addr constant [35 x i8] c"invalid qualifier on struct member\00", align 1
@.str.386 = private unnamed_addr constant [26 x i8] c"disallowed type in struct\00", align 1
@.str.387 = private unnamed_addr constant [45 x i8] c"array members of structs must specify a size\00", align 1
@.str.388 = private unnamed_addr constant [63 x i8] c"init-expression in a switch statement must be a scalar integer\00", align 1
@.str.389 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.390 = private unnamed_addr constant [48 x i8] c"case labels need to be inside switch statements\00", align 1
@.str.391 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.392 = private unnamed_addr constant [33 x i8] c"case label must have a condition\00", align 1
@.str.393 = private unnamed_addr constant [36 x i8] c"case label must be a scalar integer\00", align 1
@.str.394 = private unnamed_addr constant [28 x i8] c"case label must be constant\00", align 1
@.str.395 = private unnamed_addr constant [51 x i8] c"default labels need to be inside switch statements\00", align 1
@.str.396 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.397 = private unnamed_addr constant [52 x i8] c"Invalid operation for variables with an opaque type\00", align 1
@.str.398 = private unnamed_addr constant [47 x i8] c"Invalid operation for variables with writeonly\00", align 1
@.str.399 = private unnamed_addr constant [30 x i8] c"Invalid operation for structs\00", align 1
@.str.400 = private unnamed_addr constant [39 x i8] c"Invalid operation for interface blocks\00", align 1
@.str.401 = private unnamed_addr constant [27 x i8] c"array / non-array mismatch\00", align 1
@.str.402 = private unnamed_addr constant [29 x i8] c"Invalid operation for arrays\00", align 1
@.str.403 = private unnamed_addr constant [20 x i8] c"array size mismatch\00", align 1
@.str.404 = private unnamed_addr constant [50 x i8] c"undefined operation for structs containing arrays\00", align 1
@.str.405 = private unnamed_addr constant [52 x i8] c"undefined operation for structs containing samplers\00", align 1
@.str.406 = private unnamed_addr constant [19 x i8] c"dimension mismatch\00", align 1
@.str.407 = private unnamed_addr constant [45 x i8] c"comparison operator only defined for scalars\00", align 1
@.str.408 = private unnamed_addr constant [80 x i8] c"sequence operator is not allowed for void, arrays, or structs containing arrays\00", align 1
@.str.409 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.410 = private unnamed_addr constant [41 x i8] c"continue statement only allowed in loops\00", align 1
@.str.411 = private unnamed_addr constant [60 x i8] c"break statement only allowed in loops and switch statements\00", align 1
@.str.412 = private unnamed_addr constant [38 x i8] c"non-void function must return a value\00", align 1
@.str.413 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.414 = private unnamed_addr constant [43 x i8] c"discard supported in fragment shaders only\00", align 1
@.str.415 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.416 = private unnamed_addr constant [36 x i8] c"void function cannot return a value\00", align 1
@.str.417 = private unnamed_addr constant [38 x i8] c"function return is not matching type:\00", align 1
@.str.418 = private unnamed_addr constant [48 x i8] c"Texture component must be a constant expression\00", align 1
@.str.419 = private unnamed_addr constant [37 x i8] c"Component must be in the range [0;3]\00", align 1
@.str.420 = private unnamed_addr constant [46 x i8] c"Texture offsets must be a constant expression\00", align 1
@.str.421 = private unnamed_addr constant [47 x i8] c"Texture offsets must be an array of 4 elements\00", align 1
@.str.422 = private unnamed_addr constant [45 x i8] c"Texture offset must be a constant expression\00", align 1
@.str.423 = private unnamed_addr constant [40 x i8] c"Texture offset value out of valid range\00", align 1
@.str.424 = private unnamed_addr constant [68 x i8] c"first argument must be an interpolant, or interpolant-array element\00", align 1
@.str.425 = private unnamed_addr constant [118 x i8] c"The value passed to the mem argument of an atomic memory function does not correspond to a buffer or shared variable.\00", align 1
@.str.426 = private unnamed_addr constant [64 x i8] c"'imageStore' cannot be used with images qualified as 'readonly'\00", align 1
@.str.427 = private unnamed_addr constant [64 x i8] c"'imageLoad' cannot be used with images qualified as 'writeonly'\00", align 1
@.str.428 = private unnamed_addr constant [65 x i8] c"'imageAtomic' cannot be used with images qualified as 'readonly'\00", align 1
@.str.429 = private unnamed_addr constant [66 x i8] c"'imageAtomic' cannot be used with images qualified as 'writeonly'\00", align 1
@.str.430 = private unnamed_addr constant [59 x i8] c"Function call discards the 'readonly' qualifier from image\00", align 1
@.str.431 = private unnamed_addr constant [60 x i8] c"Function call discards the 'writeonly' qualifier from image\00", align 1
@.str.432 = private unnamed_addr constant [59 x i8] c"Function call discards the 'coherent' qualifier from image\00", align 1
@.str.433 = private unnamed_addr constant [59 x i8] c"Function call discards the 'volatile' qualifier from image\00", align 1
@.str.434 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.435 = private unnamed_addr constant [15 x i8] c"invalid method\00", align 1
@.str.436 = private unnamed_addr constant [27 x i8] c"method takes no parameters\00", align 1
@.str.437 = private unnamed_addr constant [36 x i8] c"length can only be called on arrays\00", align 1
@.str.438 = private unnamed_addr constant [67 x i8] c"missing input primitive declaration before calling length on gl_in\00", align 1
@.str.439 = private unnamed_addr constant [23 x i8] c"function name expected\00", align 1
@.str.440 = private unnamed_addr constant [38 x i8] c"no matching overloaded function found\00", align 1
@.str.441 = private unnamed_addr constant [45 x i8] c"mismatching ternary operator operand types '\00", align 1
@.str.442 = private unnamed_addr constant [7 x i8] c" and '\00", align 1
@.str.443 = private unnamed_addr constant [3 x i8] c"?:\00", align 1
@.str.444 = private unnamed_addr constant [49 x i8] c"ternary operator is not allowed for opaque types\00", align 1
@.str.445 = private unnamed_addr constant [61 x i8] c"ternary operator is not allowed for variables with writeonly\00", align 1
@.str.446 = private unnamed_addr constant [57 x i8] c"ternary operator is not allowed for structures or arrays\00", align 1
@.str.447 = private unnamed_addr constant [53 x i8] c"ternary operator is not allowed for interface blocks\00", align 1
@.str.448 = private unnamed_addr constant [41 x i8] c"ternary operator is not allowed for void\00", align 1
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.450 = private unnamed_addr constant [23 x i8] c"unknown matrix packing\00", align 1
@.str.452 = private unnamed_addr constant [22 x i8] c"unknown block storage\00", align 1
@.str.453 = private unnamed_addr constant [10 x i8] c"Temporary\00", align 1
@.str.454 = private unnamed_addr constant [7 x i8] c"Global\00", align 1
@.str.455 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.456 = private unnamed_addr constant [10 x i8] c"attribute\00", align 1
@.str.457 = private unnamed_addr constant [8 x i8] c"varying\00", align 1
@.str.458 = private unnamed_addr constant [8 x i8] c"uniform\00", align 1
@.str.459 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@.str.460 = private unnamed_addr constant [6 x i8] c"patch\00", align 1
@.str.461 = private unnamed_addr constant [11 x i8] c"InstanceID\00", align 1
@.str.462 = private unnamed_addr constant [9 x i8] c"VertexID\00", align 1
@.str.463 = private unnamed_addr constant [9 x i8] c"Position\00", align 1
@.str.464 = private unnamed_addr constant [10 x i8] c"PointSize\00", align 1
@.str.465 = private unnamed_addr constant [7 x i8] c"DrawID\00", align 1
@.str.466 = private unnamed_addr constant [10 x i8] c"FragCoord\00", align 1
@.str.467 = private unnamed_addr constant [12 x i8] c"FrontFacing\00", align 1
@.str.468 = private unnamed_addr constant [17 x i8] c"HelperInvocation\00", align 1
@.str.469 = private unnamed_addr constant [11 x i8] c"PointCoord\00", align 1
@.str.470 = private unnamed_addr constant [10 x i8] c"FragColor\00", align 1
@.str.471 = private unnamed_addr constant [9 x i8] c"FragData\00", align 1
@.str.472 = private unnamed_addr constant [10 x i8] c"FragDepth\00", align 1
@.str.473 = private unnamed_addr constant [22 x i8] c"SecondaryFragColorEXT\00", align 1
@.str.474 = private unnamed_addr constant [21 x i8] c"SecondaryFragDataEXT\00", align 1
@.str.475 = private unnamed_addr constant [10 x i8] c"ViewIDOVR\00", align 1
@.str.476 = private unnamed_addr constant [14 x i8] c"ViewportIndex\00", align 1
@.str.477 = private unnamed_addr constant [6 x i8] c"Layer\00", align 1
@.str.478 = private unnamed_addr constant [14 x i8] c"LastFragColor\00", align 1
@.str.479 = private unnamed_addr constant [13 x i8] c"LastFragData\00", align 1
@.str.480 = private unnamed_addr constant [11 x i8] c"smooth out\00", align 1
@.str.481 = private unnamed_addr constant [20 x i8] c"smooth centroid out\00", align 1
@.str.482 = private unnamed_addr constant [9 x i8] c"flat out\00", align 1
@.str.483 = private unnamed_addr constant [18 x i8] c"noperspective out\00", align 1
@.str.484 = private unnamed_addr constant [10 x i8] c"smooth in\00", align 1
@.str.485 = private unnamed_addr constant [8 x i8] c"flat in\00", align 1
@.str.486 = private unnamed_addr constant [17 x i8] c"noperspective in\00", align 1
@.str.487 = private unnamed_addr constant [19 x i8] c"smooth centroid in\00", align 1
@.str.488 = private unnamed_addr constant [9 x i8] c"centroid\00", align 1
@.str.489 = private unnamed_addr constant [5 x i8] c"flat\00", align 1
@.str.490 = private unnamed_addr constant [14 x i8] c"noperspective\00", align 1
@.str.491 = private unnamed_addr constant [7 x i8] c"smooth\00", align 1
@.str.492 = private unnamed_addr constant [14 x i8] c"NumWorkGroups\00", align 1
@.str.493 = private unnamed_addr constant [14 x i8] c"WorkGroupSize\00", align 1
@.str.494 = private unnamed_addr constant [12 x i8] c"WorkGroupID\00", align 1
@.str.495 = private unnamed_addr constant [18 x i8] c"LocalInvocationID\00", align 1
@.str.496 = private unnamed_addr constant [19 x i8] c"GlobalInvocationID\00", align 1
@.str.497 = private unnamed_addr constant [21 x i8] c"LocalInvocationIndex\00", align 1
@.str.498 = private unnamed_addr constant [6 x i8] c"gl_in\00", align 1
@.str.499 = private unnamed_addr constant [17 x i8] c"gl_PrimitiveIDIn\00", align 1
@.str.500 = private unnamed_addr constant [15 x i8] c"gl_PrimitiveID\00", align 1
@.str.501 = private unnamed_addr constant [8 x i8] c"precise\00", align 1
@.str.502 = private unnamed_addr constant [13 x i8] c"ClipDistance\00", align 1
@.str.503 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.504 = private unnamed_addr constant [10 x i8] c"sample in\00", align 1
@.str.505 = private unnamed_addr constant [11 x i8] c"sample out\00", align 1
@.str.506 = private unnamed_addr constant [9 x i8] c"SampleID\00", align 1
@.str.507 = private unnamed_addr constant [15 x i8] c"SamplePosition\00", align 1
@.str.508 = private unnamed_addr constant [13 x i8] c"SampleMaskIn\00", align 1
@.str.509 = private unnamed_addr constant [11 x i8] c"SampleMask\00", align 1
@.str.510 = private unnamed_addr constant [11 x i8] c"NumSamples\00", align 1
@.str.511 = private unnamed_addr constant [9 x i8] c"patch in\00", align 1
@.str.512 = private unnamed_addr constant [10 x i8] c"patch out\00", align 1
@.str.513 = private unnamed_addr constant [7 x i8] c"gl_out\00", align 1
@.str.514 = private unnamed_addr constant [16 x i8] c"PatchVerticesIn\00", align 1
@.str.515 = private unnamed_addr constant [15 x i8] c"TessLevelOuter\00", align 1
@.str.516 = private unnamed_addr constant [15 x i8] c"TessLevelInner\00", align 1
@.str.517 = private unnamed_addr constant [10 x i8] c"TessCoord\00", align 1
@.str.518 = private unnamed_addr constant [18 x i8] c"unknown qualifier\00", align 1
@.str.519 = private unnamed_addr constant [24 x i8] c"dimension out of bounds\00", align 1
@.str.520 = private unnamed_addr constant [30 x i8] c"unknown internal image format\00", align 1
@_ZTVN2sh20TIntermConstantUnionE = external unnamed_addr constant { [34 x i8*] }, align 8
@_ZTVN2sh18TIntermDeclarationE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@_ZTVN2sh12TIntermBlockE = external unnamed_addr constant { [31 x i8*], [6 x i8*] }, align 8
@.str.522 = private unnamed_addr constant [8 x i8] c"mediump\00", align 1
@.str.523 = private unnamed_addr constant [5 x i8] c"lowp\00", align 1
@_ZTVN2sh25TIntermFunctionDefinitionE = external unnamed_addr constant { [29 x i8*] }, align 8
@_ZTVN2sh24TStorageQualifierWrapperE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN2sh21TQualifierWrapperBaseE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sh::TQualifierWrapperBase"*)* @_ZN2sh21TQualifierWrapperBaseD2Ev to i8*), i8* bitcast (void (%"class.sh::TQualifierWrapperBase"*)* @_ZN2sh21TQualifierWrapperBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN2sh11TIntermCaseE = external unnamed_addr constant { [29 x i8*] }, align 8
@_ZTVN2sh13TIntermBranchE = external unnamed_addr constant { [29 x i8*] }, align 8
@.str.524 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)], align 8
@switch.table._ZN2sh13TParseContext17parseVectorFieldsERKNS_10TSourceLocERKNS_15ImmutableStringEiPNS_7TVectorIiEE = private unnamed_addr constant [26 x i32] [i32 3, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 3, i32 0, i32 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 1, i32 2], align 4
@switch.table._ZN2sh13TParseContext17parseVectorFieldsERKNS_10TSourceLocERKNS_15ImmutableStringEiPNS_7TVectorIiEE.525 = private unnamed_addr constant [26 x i32] [i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 1, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 4
@switch.table._ZN2sh18getQualifierStringENS_10TQualifierE = private unnamed_addr constant [91 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.453, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.454, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.455, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.456, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.458, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.459, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.460, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.382, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.382, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.455, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.461, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.462, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.463, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.464, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.465, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.466, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.467, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.469, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.468, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.470, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.471, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.472, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.472, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.473, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.474, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.475, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.476, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.502, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.478, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.479, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.491, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.489, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.490, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.488, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.503, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.480, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.482, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.483, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.481, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.505, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.484, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.485, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.486, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.487, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.504, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.506, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.507, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.508, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.509, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.510, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.326, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.492, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.493, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.494, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.495, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.496, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.497, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.498, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.499, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.500, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.477, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.501, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.511, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.512, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.513, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.514, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.515, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.516, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.517, i64 0, i64 0)], align 8
@switch.table._ZN2sh13TParseContext39parseGeometryShaderInputLayoutQualifierERKNS_14TTypeQualifierE = private unnamed_addr constant [5 x i32] [i32 1, i32 2, i32 4, i32 3, i32 6], align 4
@switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.372, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.374, i64 0, i64 0)], align 8

@_ZN2sh13TParseContextC1ERNS_12TSymbolTableERNSt3__13mapINS_10TExtensionENS_9TBehaviorENS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S6_EEEEEEj12ShShaderSpecmbPNS_12TDiagnosticsERK18ShBuiltInResources14ShShaderOutput = hidden unnamed_addr alias void (%"class.sh::TParseContext"*, %"class.sh::TSymbolTable"*, %"class.std::__1::map.53"*, i32, i32, i64, i1, %"class.sh::TDiagnostics"*, %struct.ShBuiltInResources*, i32), void (%"class.sh::TParseContext"*, %"class.sh::TSymbolTable"*, %"class.std::__1::map.53"*, i32, i32, i64, i1, %"class.sh::TDiagnostics"*, %struct.ShBuiltInResources*, i32)* @_ZN2sh13TParseContextC2ERNS_12TSymbolTableERNSt3__13mapINS_10TExtensionENS_9TBehaviorENS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S6_EEEEEEj12ShShaderSpecmbPNS_12TDiagnosticsERK18ShBuiltInResources14ShShaderOutput
@_ZN2sh13TParseContextD1Ev = hidden unnamed_addr alias void (%"class.sh::TParseContext"*), void (%"class.sh::TParseContext"*)* @_ZN2sh13TParseContextD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup21isTextureOffsetNoBiasEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1132
  %5 = icmp ult i32 %4, 147
  ret i1 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup19isTextureOffsetBiasEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1279
  %5 = icmp ult i32 %4, 35
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup27isTextureGatherOffsetNoCompEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1358
  %5 = icmp ult i32 %4, 12
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup25isTextureGatherOffsetCompEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1370
  %5 = icmp ult i32 %4, 9
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup21isTextureGatherOffsetEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1358
  %5 = icmp ult i32 %4, 21
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup28isTextureGatherOffsetsNoCompEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1379
  %5 = icmp ult i32 %4, 21
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup26isTextureGatherOffsetsCompEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1400
  %5 = icmp ult i32 %4, 15
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup22isTextureGatherOffsetsEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1379
  %5 = icmp ult i32 %4, 36
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup15isTextureGatherEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1327
  %5 = icmp ult i32 %4, 88
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup17isInterpolationFSEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1451
  %5 = icmp ult i32 %4, 24
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup14isAtomicMemoryEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1488
  %5 = icmp ult i32 %4, 18
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup12isImageStoreEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1578
  %5 = icmp ult i32 %4, 33
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup11isImageLoadEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1611
  %5 = icmp ult i32 %4, 33
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup13isImageAtomicEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1644
  %5 = icmp ult i32 %4, 1122
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh12BuiltInGroup7isImageEPKNS_9TFunctionE(%"class.sh::TFunction"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1506
  %5 = icmp ult i32 %4, 1260
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.std::__1::array.73"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %5 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.std::__1::map.53", %"class.std::__1::map.53"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.137"**
  %9 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node.137"* %9, null
  %11 = load i8, i8* %6, align 1
  br i1 %10, label %41, label %12

12:                                               ; preds = %3, %12
  %13 = phi %"class.std::__1::__tree_end_node"* [ %23, %12 ], [ %7, %3 ]
  %14 = phi %"class.std::__1::__tree_node.137"* [ %24, %12 ], [ %9, %3 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp ult i8 %16, %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::__tree_node_base"** %18 to %"class.std::__1::__tree_node.137"**
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %14, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node.137"* %14 to %"class.std::__1::__tree_node.137"**
  %22 = select i1 %17, %"class.std::__1::__tree_node.137"** %19, %"class.std::__1::__tree_node.137"** %21
  %23 = select i1 %17, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %20
  %24 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %22, align 8
  %25 = icmp eq %"class.std::__1::__tree_node.137"* %24, null
  br i1 %25, label %26, label %12

26:                                               ; preds = %12
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %23, %7
  br i1 %27, label %41, label %28

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node.137"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %29, i64 0, i32 1, i32 0, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp ult i8 %11, %31
  br i1 %32, label %41, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node.137"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %34, i64 0, i32 1, i32 0, i32 1
  %36 = load i8, i8* %35, align 1
  switch i8 %36, label %46 [
    i8 4, label %41
    i8 3, label %41
    i8 2, label %37
  ]

37:                                               ; preds = %33
  %38 = tail call i8* @_ZN2sh22GetExtensionNameStringENS_10TExtensionE(i8 zeroext %11) #17
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %40 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %39, align 8
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %40, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %38) #17
  br label %46

41:                                               ; preds = %28, %26, %3, %33, %33
  %42 = phi i8* [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %33 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %33 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %3 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %26 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %28 ]
  %43 = tail call i8* @_ZN2sh22GetExtensionNameStringENS_10TExtensionE(i8 zeroext %11) #17
  %44 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %45 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %44, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %45, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* nonnull %42, i8* %43) #17
  br label %46

46:                                               ; preds = %33, %41, %37
  %47 = phi i1 [ true, %37 ], [ false, %41 ], [ true, %33 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %2, i8* %3) #17
  ret void
}

declare i8* @_ZN2sh22GetExtensionNameStringENS_10TExtensionE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %2, i8* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.std::__1::array.74"* dereferenceable(2)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %5 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.std::__1::map.53", %"class.std::__1::map.53"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.137"**
  %9 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node.137"* %9, null
  %11 = load i8, i8* %6, align 1
  br i1 %10, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %2, i64 0, i32 0, i64 1
  %14 = load i8, i8* %13, align 1
  br label %80

15:                                               ; preds = %3, %15
  %16 = phi %"class.std::__1::__tree_end_node"* [ %26, %15 ], [ %7, %3 ]
  %17 = phi %"class.std::__1::__tree_node.137"* [ %27, %15 ], [ %9, %3 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp ult i8 %19, %11
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %17, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node.137"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %17, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node.137"* %17 to %"class.std::__1::__tree_node.137"**
  %25 = select i1 %20, %"class.std::__1::__tree_node.137"** %22, %"class.std::__1::__tree_node.137"** %24
  %26 = select i1 %20, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %23
  %27 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %25, align 8
  %28 = icmp eq %"class.std::__1::__tree_node.137"* %27, null
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %26, %7
  br i1 %30, label %50, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node.137"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp ult i8 %11, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node.137"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %37, i64 0, i32 1, i32 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = add i8 %39, -2
  %41 = icmp ult i8 %40, 3
  br i1 %41, label %42, label %57

42:                                               ; preds = %36
  %43 = zext i8 %40 to i24
  %44 = shl nuw nsw i24 %43, 3
  %45 = lshr i24 1, %44
  %46 = trunc i24 %45 to i8
  %47 = sext i8 %40 to i64
  %48 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE, i64 0, i64 %47
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %42, %31, %29
  %51 = phi i8 [ 0, %29 ], [ 0, %31 ], [ %46, %42 ]
  %52 = phi i8* [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %29 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %31 ], [ %49, %42 ]
  %53 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %2, i64 0, i32 0, i64 1
  %54 = load i8, i8* %53, align 1
  br i1 %10, label %80, label %59

55:                                               ; preds = %104
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %112, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %110) #17
  br label %57

56:                                               ; preds = %104
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %112, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %106, i8* %110) #17
  br label %57

57:                                               ; preds = %36, %93, %99, %56, %55
  %58 = phi i1 [ true, %55 ], [ false, %56 ], [ true, %99 ], [ true, %93 ], [ true, %36 ]
  ret i1 %58

59:                                               ; preds = %50, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %70, %59 ], [ %7, %50 ]
  %61 = phi %"class.std::__1::__tree_node.137"* [ %71, %59 ], [ %9, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %61, i64 0, i32 1, i32 0, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp ult i8 %63, %54
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %61, i64 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::__tree_node_base"** %65 to %"class.std::__1::__tree_node.137"**
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %61, i64 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_node.137"* %61 to %"class.std::__1::__tree_node.137"**
  %69 = select i1 %64, %"class.std::__1::__tree_node.137"** %66, %"class.std::__1::__tree_node.137"** %68
  %70 = select i1 %64, %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"* %67
  %71 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %69, align 8
  %72 = icmp eq %"class.std::__1::__tree_node.137"* %71, null
  br i1 %72, label %73, label %59

73:                                               ; preds = %59
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %70, %7
  br i1 %74, label %80, label %75

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node.137"*
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp ult i8 %54, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %12, %75, %73, %50
  %81 = phi i8 [ %14, %12 ], [ %54, %75 ], [ %54, %73 ], [ %54, %50 ]
  %82 = phi i8* [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %12 ], [ %52, %75 ], [ %52, %73 ], [ %52, %50 ]
  %83 = phi i8 [ 0, %12 ], [ %51, %75 ], [ %51, %73 ], [ %51, %50 ]
  br label %84

84:                                               ; preds = %80, %75
  %85 = phi i8 [ %81, %80 ], [ %54, %75 ]
  %86 = phi i8* [ %82, %80 ], [ %52, %75 ]
  %87 = phi i8 [ %83, %80 ], [ %51, %75 ]
  %88 = phi %"class.std::__1::__tree_end_node"* [ %7, %80 ], [ %70, %75 ]
  %89 = and i8 %87, 1
  %90 = icmp eq i8 %89, 0
  %91 = icmp eq %"class.std::__1::__tree_end_node"* %88, %7
  br i1 %90, label %98, label %92

92:                                               ; preds = %84
  br i1 %91, label %104, label %93

93:                                               ; preds = %92
  %94 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.137"*
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %94, i64 0, i32 1, i32 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp ult i8 %96, 2
  br i1 %97, label %57, label %104

98:                                               ; preds = %84
  br i1 %91, label %104, label %99

99:                                               ; preds = %98
  %100 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.137"*
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %100, i64 0, i32 1, i32 0, i32 1
  %102 = load i8, i8* %101, align 1
  switch i8 %102, label %57 [
    i8 4, label %104
    i8 3, label %104
    i8 2, label %103
  ]

103:                                              ; preds = %99
  br label %104

104:                                              ; preds = %103, %99, %99, %98, %93, %92
  %105 = phi i8 [ %87, %92 ], [ %87, %98 ], [ %87, %99 ], [ %87, %99 ], [ 1, %103 ], [ %87, %93 ]
  %106 = phi i8* [ %86, %92 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %98 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %99 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %99 ], [ %86, %103 ], [ %86, %93 ]
  %107 = phi i8 [ %11, %92 ], [ %85, %98 ], [ %85, %99 ], [ %85, %99 ], [ %85, %103 ], [ %11, %93 ]
  %108 = and i8 %105, 1
  %109 = icmp eq i8 %108, 0
  %110 = tail call i8* @_ZN2sh22GetExtensionNameStringENS_10TExtensionE(i8 zeroext %107) #17
  %111 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %112 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %111, align 8
  br i1 %109, label %56, label %55
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.std::__1::array.75"* dereferenceable(3)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %5 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::array.75", %"struct.std::__1::array.75"* %2, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %"class.std::__1::map.53", %"class.std::__1::map.53"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.137"**
  %9 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node.137"* %9, null
  %11 = load i8, i8* %6, align 1
  br i1 %10, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.std::__1::array.75", %"struct.std::__1::array.75"* %2, i64 0, i32 0, i64 1
  %14 = load i8, i8* %13, align 1
  br label %80

15:                                               ; preds = %3, %15
  %16 = phi %"class.std::__1::__tree_end_node"* [ %26, %15 ], [ %7, %3 ]
  %17 = phi %"class.std::__1::__tree_node.137"* [ %27, %15 ], [ %9, %3 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp ult i8 %19, %11
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %17, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node.137"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %17, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node.137"* %17 to %"class.std::__1::__tree_node.137"**
  %25 = select i1 %20, %"class.std::__1::__tree_node.137"** %22, %"class.std::__1::__tree_node.137"** %24
  %26 = select i1 %20, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %23
  %27 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %25, align 8
  %28 = icmp eq %"class.std::__1::__tree_node.137"* %27, null
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %26, %7
  br i1 %30, label %50, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node.137"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %32, i64 0, i32 1, i32 0, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp ult i8 %11, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node.137"*
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %37, i64 0, i32 1, i32 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = add i8 %39, -2
  %41 = icmp ult i8 %40, 3
  br i1 %41, label %42, label %57

42:                                               ; preds = %36
  %43 = zext i8 %40 to i24
  %44 = shl nuw nsw i24 %43, 3
  %45 = lshr i24 1, %44
  %46 = trunc i24 %45 to i8
  %47 = sext i8 %40 to i64
  %48 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm3EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE, i64 0, i64 %47
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %42, %31, %29
  %51 = phi i8 [ 0, %29 ], [ 0, %31 ], [ %46, %42 ]
  %52 = phi i8* [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %29 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %31 ], [ %49, %42 ]
  %53 = getelementptr inbounds %"struct.std::__1::array.75", %"struct.std::__1::array.75"* %2, i64 0, i32 0, i64 1
  %54 = load i8, i8* %53, align 1
  br i1 %10, label %80, label %59

55:                                               ; preds = %149
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %157, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %155) #17
  br label %57

56:                                               ; preds = %149
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %157, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %151, i8* %155) #17
  br label %57

57:                                               ; preds = %36, %93, %99, %138, %144, %56, %55
  %58 = phi i1 [ true, %55 ], [ false, %56 ], [ true, %144 ], [ true, %138 ], [ true, %99 ], [ true, %93 ], [ true, %36 ]
  ret i1 %58

59:                                               ; preds = %50, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %70, %59 ], [ %7, %50 ]
  %61 = phi %"class.std::__1::__tree_node.137"* [ %71, %59 ], [ %9, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %61, i64 0, i32 1, i32 0, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp ult i8 %63, %54
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %61, i64 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::__tree_node_base"** %65 to %"class.std::__1::__tree_node.137"**
  %67 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %61, i64 0, i32 0, i32 0
  %68 = bitcast %"class.std::__1::__tree_node.137"* %61 to %"class.std::__1::__tree_node.137"**
  %69 = select i1 %64, %"class.std::__1::__tree_node.137"** %66, %"class.std::__1::__tree_node.137"** %68
  %70 = select i1 %64, %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"* %67
  %71 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %69, align 8
  %72 = icmp eq %"class.std::__1::__tree_node.137"* %71, null
  br i1 %72, label %73, label %59

73:                                               ; preds = %59
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %70, %7
  br i1 %74, label %80, label %75

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node.137"*
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp ult i8 %54, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %12, %75, %73, %50
  %81 = phi i8 [ %14, %12 ], [ %54, %75 ], [ %54, %73 ], [ %54, %50 ]
  %82 = phi i8* [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %12 ], [ %52, %75 ], [ %52, %73 ], [ %52, %50 ]
  %83 = phi i8 [ 0, %12 ], [ %51, %75 ], [ %51, %73 ], [ %51, %50 ]
  br label %84

84:                                               ; preds = %80, %75
  %85 = phi i8 [ %81, %80 ], [ %54, %75 ]
  %86 = phi i8* [ %82, %80 ], [ %52, %75 ]
  %87 = phi i8 [ %83, %80 ], [ %51, %75 ]
  %88 = phi %"class.std::__1::__tree_end_node"* [ %7, %80 ], [ %70, %75 ]
  %89 = and i8 %87, 1
  %90 = icmp eq i8 %89, 0
  %91 = icmp eq %"class.std::__1::__tree_end_node"* %88, %7
  br i1 %90, label %98, label %92

92:                                               ; preds = %84
  br i1 %91, label %104, label %93

93:                                               ; preds = %92
  %94 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.137"*
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %94, i64 0, i32 1, i32 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp ult i8 %96, 2
  br i1 %97, label %57, label %104

98:                                               ; preds = %84
  br i1 %91, label %104, label %99

99:                                               ; preds = %98
  %100 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node.137"*
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %100, i64 0, i32 1, i32 0, i32 1
  %102 = load i8, i8* %101, align 1
  switch i8 %102, label %57 [
    i8 4, label %104
    i8 3, label %104
    i8 2, label %103
  ]

103:                                              ; preds = %99
  br label %104

104:                                              ; preds = %103, %99, %99, %98, %93, %92
  %105 = phi i8 [ %87, %92 ], [ %87, %98 ], [ %87, %99 ], [ %87, %99 ], [ 1, %103 ], [ %87, %93 ]
  %106 = phi i8* [ %86, %92 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %98 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %99 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %99 ], [ %86, %103 ], [ %86, %93 ]
  %107 = phi i8 [ %11, %92 ], [ %85, %98 ], [ %85, %99 ], [ %85, %99 ], [ %85, %103 ], [ %11, %93 ]
  %108 = getelementptr inbounds %"struct.std::__1::array.75", %"struct.std::__1::array.75"* %2, i64 0, i32 0, i64 2
  %109 = load i8, i8* %108, align 1
  br i1 %10, label %131, label %110

110:                                              ; preds = %104, %110
  %111 = phi %"class.std::__1::__tree_end_node"* [ %121, %110 ], [ %7, %104 ]
  %112 = phi %"class.std::__1::__tree_node.137"* [ %122, %110 ], [ %9, %104 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %112, i64 0, i32 1, i32 0, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp ult i8 %114, %109
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %112, i64 0, i32 0, i32 1
  %117 = bitcast %"class.std::__1::__tree_node_base"** %116 to %"class.std::__1::__tree_node.137"**
  %118 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %112, i64 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::__tree_node.137"* %112 to %"class.std::__1::__tree_node.137"**
  %120 = select i1 %115, %"class.std::__1::__tree_node.137"** %117, %"class.std::__1::__tree_node.137"** %119
  %121 = select i1 %115, %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"* %118
  %122 = load %"class.std::__1::__tree_node.137"*, %"class.std::__1::__tree_node.137"** %120, align 8
  %123 = icmp eq %"class.std::__1::__tree_node.137"* %122, null
  br i1 %123, label %124, label %110

124:                                              ; preds = %110
  %125 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %125, label %131, label %126

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node.137"*
  %128 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %127, i64 0, i32 1, i32 0, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp ult i8 %109, %129
  br i1 %130, label %131, label %132

131:                                              ; preds = %126, %124, %104
  br label %132

132:                                              ; preds = %131, %126
  %133 = phi %"class.std::__1::__tree_end_node"* [ %7, %131 ], [ %121, %126 ]
  %134 = and i8 %105, 1
  %135 = icmp eq i8 %134, 0
  %136 = icmp eq %"class.std::__1::__tree_end_node"* %133, %7
  br i1 %135, label %143, label %137

137:                                              ; preds = %132
  br i1 %136, label %149, label %138

138:                                              ; preds = %137
  %139 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node.137"*
  %140 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %139, i64 0, i32 1, i32 0, i32 1
  %141 = load i8, i8* %140, align 1
  %142 = icmp ult i8 %141, 2
  br i1 %142, label %57, label %149

143:                                              ; preds = %132
  br i1 %136, label %149, label %144

144:                                              ; preds = %143
  %145 = bitcast %"class.std::__1::__tree_end_node"* %133 to %"class.std::__1::__tree_node.137"*
  %146 = getelementptr inbounds %"class.std::__1::__tree_node.137", %"class.std::__1::__tree_node.137"* %145, i64 0, i32 1, i32 0, i32 1
  %147 = load i8, i8* %146, align 1
  switch i8 %147, label %57 [
    i8 4, label %149
    i8 3, label %149
    i8 2, label %148
  ]

148:                                              ; preds = %144
  br label %149

149:                                              ; preds = %148, %144, %144, %143, %138, %137
  %150 = phi i8 [ %105, %137 ], [ %105, %143 ], [ %105, %144 ], [ %105, %144 ], [ 1, %148 ], [ %105, %138 ]
  %151 = phi i8* [ %106, %137 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), %143 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %144 ], [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), %144 ], [ %106, %148 ], [ %106, %138 ]
  %152 = phi i8 [ %107, %137 ], [ %109, %143 ], [ %109, %144 ], [ %109, %144 ], [ %109, %148 ], [ %107, %138 ]
  %153 = and i8 %150, 1
  %154 = icmp eq i8 %153, 0
  %155 = tail call i8* @_ZN2sh22GetExtensionNameStringENS_10TExtensionE(i8 zeroext %152) #17
  %156 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %157 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %156, align 8
  br i1 %154, label %56, label %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContextC2ERNS_12TSymbolTableERNSt3__13mapINS_10TExtensionENS_9TBehaviorENS3_4lessIS5_EENS3_9allocatorINS3_4pairIKS5_S6_EEEEEEj12ShShaderSpecmbPNS_12TDiagnosticsERK18ShBuiltInResources14ShShaderOutput(%"class.sh::TParseContext"*, %"class.sh::TSymbolTable"* dereferenceable(1720), %"class.std::__1::map.53"* dereferenceable(24), i32, i32, i64, i1 zeroext, %"class.sh::TDiagnostics"*, %struct.ShBuiltInResources* nocapture readonly dereferenceable(520), i32) unnamed_addr #2 align 2 {
  %11 = alloca %"struct.angle::pp::PreprocessorSettings", align 4
  %12 = zext i1 %6 to i8
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  store %"class.sh::TSymbolTable"* %1, %"class.sh::TSymbolTable"** %13, align 8
  %14 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  store i32 %3, i32* %15, align 4
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  store i32 %4, i32* %16, align 8
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 6
  store i64 %5, i64* %17, align 8
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  store i32 100, i32* %18, align 8
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 9
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 14
  store %"class.sh::TType"* null, %"class.sh::TType"** %20, align 8
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 15
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 16
  %23 = bitcast %"class.sh::TIntermBlock"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false)
  store i8 %12, i8* %22, align 1
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 17
  store i8 0, i8* %24, align 2
  %25 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 18
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 19
  store i32 2, i32* %26, align 4
  %27 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 20
  %28 = or i32 %4, 2
  %29 = icmp eq i32 %28, 3
  %30 = icmp eq i32 %4, 5
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 3, i32 1
  store i32 %32, i32* %27, align 8
  %33 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 21
  store i32 2, i32* %33, align 4
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 22
  store i32 %32, i32* %34, align 8
  %35 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 24
  %36 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #17
  %37 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  store %"class.sh::TDiagnostics"* %7, %"class.sh::TDiagnostics"** %37, align 8
  %38 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26
  %39 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 17
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  tail call void @_ZN2sh17TDirectiveHandlerC1ERNSt3__13mapINS_10TExtensionENS_9TBehaviorENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEERNS_12TDiagnosticsERijb(%"class.sh::TDirectiveHandler"* %38, %"class.std::__1::map.53"* dereferenceable(24) %2, %"class.sh::TDiagnostics"* dereferenceable(24) %7, i32* dereferenceable(4) %18, i32 %3, i1 zeroext %41) #17
  %42 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 27
  %43 = bitcast %"class.sh::TDiagnostics"** %37 to %"class.angle::pp::Diagnostics"**
  %44 = load %"class.angle::pp::Diagnostics"*, %"class.angle::pp::Diagnostics"** %43, align 8
  %45 = getelementptr inbounds %"class.sh::TDirectiveHandler", %"class.sh::TDirectiveHandler"* %38, i64 0, i32 0
  %46 = bitcast %"struct.angle::pp::PreprocessorSettings"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"struct.angle::pp::PreprocessorSettings", %"struct.angle::pp::PreprocessorSettings"* %11, i64 0, i32 0
  store i32 1000, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.angle::pp::PreprocessorSettings", %"struct.angle::pp::PreprocessorSettings"* %11, i64 0, i32 1
  store i32 %4, i32* %48, align 4
  call void @_ZN5angle2pp12PreprocessorC1EPNS0_11DiagnosticsEPNS0_16DirectiveHandlerERKNS0_20PreprocessorSettingsE(%"class.angle::pp::Preprocessor"* %42, %"class.angle::pp::Diagnostics"* %44, %"class.angle::pp::DirectiveHandler"* %45, %"struct.angle::pp::PreprocessorSettings"* nonnull dereferenceable(8) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 28
  store i8* null, i8** %49, align 8
  %50 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 29
  %51 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 54
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %50, align 8
  %53 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 30
  %54 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 55
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 31
  %57 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 63
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %56, align 8
  %59 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 32
  %60 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 64
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %59, align 4
  %62 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 33
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 35, i32 0, i64 0
  %64 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 37
  %65 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 57
  %66 = bitcast i32* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 -1, i64 16, i1 false)
  %67 = load i32, i32* %65, align 4
  store i32 %67, i32* %64, align 4
  %68 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 38
  %69 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 65
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %68, align 8
  %71 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 39
  %72 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 40
  %75 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 71
  %76 = load i32, i32* %75, align 8
  store i32 %76, i32* %74, align 8
  %77 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 41
  %78 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 87
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 4
  %80 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 42
  %81 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 43
  %84 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 82
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 44
  %87 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 88
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 45
  store i8 0, i8* %89, align 4
  %90 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0
  %92 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 0
  %93 = bitcast %"class.std::__1::__tree_node_base"** %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 48
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %95, align 8
  %96 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 52
  %97 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 100
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 8
  %99 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 53
  %100 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 94
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 54
  store i32 0, i32* %102, align 8
  %103 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 55
  %104 = getelementptr inbounds %struct.ShBuiltInResources, %struct.ShBuiltInResources* %8, i64 0, i32 111
  %105 = load i32, i32* %104, align 8
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 56
  %107 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 63
  %108 = bitcast i32* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 21, i1 false)
  store i32 %9, i32* %107, align 8
  ret void
}

declare void @_ZN2sh17TDirectiveHandlerC1ERNSt3__13mapINS_10TExtensionENS_9TBehaviorENS1_4lessIS3_EENS1_9allocatorINS1_4pairIKS3_S4_EEEEEERNS_12TDiagnosticsERijb(%"class.sh::TDirectiveHandler"*, %"class.std::__1::map.53"* dereferenceable(24), %"class.sh::TDiagnostics"* dereferenceable(24), i32* dereferenceable(4), i32, i1 zeroext) unnamed_addr #3

declare void @_ZN5angle2pp12PreprocessorC1EPNS0_11DiagnosticsEPNS0_16DirectiveHandlerERKNS0_20PreprocessorSettingsE(%"class.angle::pp::Preprocessor"*, %"class.angle::pp::Diagnostics"*, %"class.angle::pp::DirectiveHandler"*, %"struct.angle::pp::PreprocessorSettings"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContextD2Ev(%"class.sh::TParseContext"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.65"* %2, %"class.std::__1::__tree_node"* %5) #17
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 27
  tail call void @_ZN5angle2pp12PreprocessorD1Ev(%"class.angle::pp::Preprocessor"* %6) #17
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26
  tail call void @_ZN2sh17TDirectiveHandlerD1Ev(%"class.sh::TDirectiveHandler"* %7) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle2pp12PreprocessorD1Ev(%"class.angle::pp::Preprocessor"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2sh17TDirectiveHandlerD1Ev(%"class.sh::TDirectiveHandler"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext30anyMultiviewExtensionAvailableEv(%"class.sh::TParseContext"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %3 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %2, align 8
  %4 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %3, i8 zeroext 37) #17
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %2, align 8
  %7 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %6, i8 zeroext 38) #17
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i1 [ true, %1 ], [ %7, %5 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2sh13TParseContext18isExtensionEnabledENS_10TExtensionE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %4 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %3, align 8
  %5 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %4, i8 zeroext %1) #17
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext17parseVectorFieldsERKNS_10TSourceLocERKNS_15ImmutableStringEiPNS_7TVectorIiEE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i32, %"class.sh::TVector.82"*) local_unnamed_addr #2 align 2 {
  %6 = alloca [4 x i32], align 16
  %7 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, 4
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %12 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %11, align 8
  %13 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  %16 = select i1 %15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %14
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %12, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i8* %16) #17
  br label %122

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.sh::TVector.82", %"class.sh::TVector.82"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.sh::TVector.82"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = icmp ugt i64 %8, %24
  %26 = inttoptr i64 %22 to i32*
  br i1 %25, label %27, label %33

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.sh::TVector.82", %"class.sh::TVector.82"* %4, i64 0, i32 0
  %29 = sub nsw i64 %8, %24
  tail call void @_ZNSt3__16vectorIi14pool_allocatorIiEE8__appendEm(%"class.std::__1::vector.83"* %28, i64 %29) #17
  %30 = load i64, i64* %19, align 8
  %31 = load i64, i64* %21, align 8
  %32 = inttoptr i64 %31 to i32*
  br label %38

33:                                               ; preds = %17
  %34 = icmp ult i64 %8, %24
  br i1 %34, label %35, label %38

35:                                               ; preds = %33
  %36 = getelementptr inbounds i32, i32* %26, i64 %8
  store i32* %36, i32** %18, align 8
  %37 = ptrtoint i32* %36 to i64
  br label %38

38:                                               ; preds = %27, %33, %35
  %39 = phi i32* [ %32, %27 ], [ %26, %33 ], [ %26, %35 ]
  %40 = phi i64 [ %31, %27 ], [ %22, %33 ], [ %22, %35 ]
  %41 = phi i64 [ %30, %27 ], [ %20, %33 ], [ %37, %35 ]
  %42 = bitcast [4 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #17
  %43 = icmp eq i64 %41, %40
  %44 = bitcast [4 x i32]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 -86, i64 16, i1 false)
  br i1 %43, label %120, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  br label %50

47:                                               ; preds = %69
  %48 = inttoptr i64 %81 to i32*
  %49 = icmp eq i64 %82, 0
  br i1 %49, label %120, label %86

50:                                               ; preds = %45, %69
  %51 = phi i32* [ %39, %45 ], [ %85, %69 ]
  %52 = phi i64 [ 0, %45 ], [ %79, %69 ]
  %53 = phi i32 [ 0, %45 ], [ %78, %69 ]
  %54 = load i8*, i8** %46, align 8
  %55 = icmp eq i8* %54, null
  %56 = select i1 %55, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %54
  %57 = getelementptr inbounds i8, i8* %56, i64 %52
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = add nsw i32 %59, -97
  %61 = icmp ult i32 %60, 26
  br i1 %61, label %65, label %62

62:                                               ; preds = %65, %50
  %63 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %64 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %63, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %64, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i8* %56) #17
  br label %120

65:                                               ; preds = %50
  %66 = lshr i32 63930435, %60
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %62, label %69

69:                                               ; preds = %65
  %70 = sext i32 %60 to i64
  %71 = getelementptr inbounds [26 x i32], [26 x i32]* @switch.table._ZN2sh13TParseContext17parseVectorFieldsERKNS_10TSourceLocERKNS_15ImmutableStringEiPNS_7TVectorIiEE, i64 0, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %60 to i64
  %74 = getelementptr inbounds [26 x i32], [26 x i32]* @switch.table._ZN2sh13TParseContext17parseVectorFieldsERKNS_10TSourceLocERKNS_15ImmutableStringEiPNS_7TVectorIiEE.525, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32 %72, i32* %76, align 4
  %77 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 %52
  store i32 %75, i32* %77, align 4
  %78 = add i32 %53, 1
  %79 = zext i32 %78 to i64
  %80 = load i64, i64* %19, align 8
  %81 = load i64, i64* %21, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 2
  %84 = icmp ugt i64 %83, %79
  %85 = inttoptr i64 %81 to i32*
  br i1 %84, label %50, label %47

86:                                               ; preds = %47, %116
  %87 = phi i64 [ %118, %116 ], [ 0, %47 ]
  %88 = phi i32 [ %117, %116 ], [ 0, %47 ]
  %89 = getelementptr inbounds i32, i32* %48, i64 %87
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, %3
  br i1 %91, label %99, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %94 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %93, align 8
  %95 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  %98 = select i1 %97, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %96
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %94, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i8* %98) #17
  br label %120

99:                                               ; preds = %86
  %100 = icmp eq i32 %88, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 %87
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %88, -1
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %103, %107
  br i1 %108, label %116, label %109

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %111 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %110, align 8
  %112 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  %115 = select i1 %114, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %113
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %111, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.6, i64 0, i64 0), i8* %115) #17
  br label %120

116:                                              ; preds = %101, %99
  %117 = add i32 %88, 1
  %118 = zext i32 %117 to i64
  %119 = icmp ugt i64 %83, %118
  br i1 %119, label %86, label %120

120:                                              ; preds = %116, %38, %47, %109, %92, %62
  %121 = phi i1 [ false, %62 ], [ false, %92 ], [ false, %109 ], [ true, %47 ], [ true, %38 ], [ true, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #17
  br label %122

122:                                              ; preds = %120, %10
  %123 = phi i1 [ false, %10 ], [ %121, %120 ]
  ret i1 %123
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext5errorERKNS_10TSourceLocEPKcRKNS_15ImmutableStringE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  %7 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  %10 = select i1 %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %2, i8* %10) #17
  ret void
}

declare void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #3

declare void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext15outOfRangeErrorEbRKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"* nocapture readonly, i1 zeroext, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, i8*) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %7 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %6, align 8
  br i1 %1, label %8, label %9

8:                                                ; preds = %5
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %7, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %3, i8* %4) #17
  br label %10

9:                                                ; preds = %5
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %7, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %3, i8* %4) #17
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2sh13TParseContext11setTreeRootEPNS_12TIntermBlockE(%"class.sh::TParseContext"* nocapture, %"class.sh::TIntermBlock"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 9
  store %"class.sh::TIntermBlock"* %1, %"class.sh::TIntermBlock"** %3, align 8
  %4 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %1, i64 0, i32 3
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext11assignErrorERKNS_10TSourceLocEPKcRKNS_5TTypeES8_(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::TType"* dereferenceable(184), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TInfoSinkBase", align 8
  %7 = bitcast %"class.sh::TInfoSinkBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 48, i1 false) #17
  %10 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0
  %11 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #17
  %12 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %6, %"class.sh::TType"* dereferenceable(184) %4) #17
  %13 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %12, i64 0, i32 0
  %14 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0)) #17
  %15 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %12, %"class.sh::TType"* dereferenceable(184) %3) #17
  %16 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %15, i64 0, i32 0
  %17 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #17
  %18 = bitcast %"class.sh::TInfoSinkBase"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = load i8*, i8** %8, align 8
  %23 = select i1 %21, i8* %22, i8* %7
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %25 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %24, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %25, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %23, i8* %2) #17
  %26 = load i32*, i32** %9, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 1
  %30 = ptrtoint i32* %26 to i64
  %31 = bitcast i32** %29 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast i32* %26 to i8*
  call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %28, %5
  %34 = load i8, i8* %19, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %33, %36
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"*, %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext12unaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::TInfoSinkBase", align 8
  %6 = bitcast %"class.sh::TInfoSinkBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 48, i1 false) #17
  %9 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0
  %10 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0)) #17
  %11 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %9, i8* %2) #17
  %12 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %9, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0)) #17
  %13 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %5, %"class.sh::TType"* dereferenceable(184) %3) #17
  %14 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %13, i64 0, i32 0
  %15 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0)) #17
  %16 = bitcast %"class.sh::TInfoSinkBase"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %7, align 8
  %21 = select i1 %19, i8* %20, i8* %6
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %23 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %23, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %21, i8* %2) #17
  %24 = load i32*, i32** %8, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 1, i32 0, i32 1
  %28 = ptrtoint i32* %24 to i64
  %29 = bitcast i32** %27 to i64*
  store i64 %28, i64* %29, align 8
  %30 = bitcast i32* %24 to i8*
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %26, %4
  %32 = load i8, i8* %17, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %35) #18
  br label %36

36:                                               ; preds = %31, %34
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext13binaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeES8_(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::TType"* dereferenceable(184), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TInfoSinkBase", align 8
  %7 = bitcast %"class.sh::TInfoSinkBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 48, i1 false) #17
  %10 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0
  %11 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %10, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0)) #17
  %12 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %10, i8* %2) #17
  %13 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %10, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14, i64 0, i64 0)) #17
  %14 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %6, %"class.sh::TType"* dereferenceable(184) %3) #17
  %15 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %14, i64 0, i32 0
  %16 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %15, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0)) #17
  %17 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %14, %"class.sh::TType"* dereferenceable(184) %4) #17
  %18 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %17, i64 0, i32 0
  %19 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0)) #17
  %20 = bitcast %"class.sh::TInfoSinkBase"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i8*, i8** %8, align 8
  %25 = select i1 %23, i8* %24, i8* %7
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %27 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %26, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %27, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %25, i8* %2) #17
  %28 = load i32*, i32** %9, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %5
  %31 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 1
  %32 = ptrtoint i32* %28 to i64
  %33 = bitcast i32** %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %30, %5
  %36 = load i8, i8* %21, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext23checkPrecisionSpecifiedERKNS_10TSourceLocENS_10TPrecisionENS_10TBasicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 16
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %48, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %2, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %8
  switch i32 %3, label %11 [
    i32 4, label %48
    i32 3, label %48
    i32 1, label %48
  ]

11:                                               ; preds = %10
  %12 = add i32 %3, -8
  %13 = icmp ult i32 %12, 43
  %14 = add i32 %3, -51
  %15 = icmp ult i32 %14, 33
  %16 = or i1 %13, %15
  %17 = icmp eq i32 %3, 6
  %18 = or i1 %17, %16
  %19 = add i32 %3, -84
  %20 = icmp ult i32 %19, 6
  %21 = or i1 %20, %18
  br i1 %21, label %48, label %22

22:                                               ; preds = %11
  %23 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %3) #17
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %25 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %24, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %25, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i8* %23) #17
  br label %48

26:                                               ; preds = %8
  switch i32 %3, label %33 [
    i32 1, label %27
    i32 3, label %30
    i32 4, label %30
  ]

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %29 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %28, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %29, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %48

30:                                               ; preds = %26, %26
  %31 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %32 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %31, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %32, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %48

33:                                               ; preds = %26
  %34 = add i32 %3, -8
  %35 = icmp ult i32 %34, 43
  %36 = add i32 %3, -51
  %37 = icmp ult i32 %36, 33
  %38 = or i1 %35, %37
  %39 = icmp eq i32 %3, 6
  %40 = or i1 %39, %38
  %41 = add i32 %3, -84
  %42 = icmp ult i32 %41, 6
  %43 = or i1 %42, %40
  br i1 %43, label %44, label %48

44:                                               ; preds = %33
  %45 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %3) #17
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %47 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %46, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %47, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %45) #17
  br label %48

48:                                               ; preds = %33, %11, %10, %10, %10, %22, %4, %27, %30, %44
  ret void
}

declare i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext22markStaticReadIfSymbolEPNS_11TIntermNodeE(%"class.sh::TParseContext"* readonly, %"class.sh::TIntermNode"*) local_unnamed_addr #2 align 2 {
  br label %3

3:                                                ; preds = %13, %2
  %4 = phi %"class.sh::TIntermNode"* [ %1, %2 ], [ %16, %13 ]
  %5 = bitcast %"class.sh::TIntermNode"* %4 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %6 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %6, i64 12
  %8 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %7, align 8
  %9 = tail call %"class.sh::TIntermSwizzle"* %8(%"class.sh::TIntermNode"* %4) #17
  %10 = icmp eq %"class.sh::TIntermSwizzle"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %9, i64 0, i32 1
  br label %13

13:                                               ; preds = %11, %29
  %14 = phi %"class.sh::TIntermTyped"** [ %12, %11 ], [ %30, %29 ]
  %15 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %14, align 8
  %16 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %15, i64 0, i32 0
  br label %3

17:                                               ; preds = %3
  %18 = bitcast %"class.sh::TIntermNode"* %4 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %19 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %19, i64 13
  %21 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %20, align 8
  %22 = tail call %"class.sh::TIntermBinary"* %21(%"class.sh::TIntermNode"* %4) #17
  %23 = icmp eq %"class.sh::TIntermBinary"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %22, i64 0, i32 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, -4
  %28 = icmp eq i8 %27, 44
  br i1 %28, label %29, label %43

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %22, i64 0, i32 2
  br label %13

31:                                               ; preds = %17
  %32 = bitcast %"class.sh::TIntermNode"* %4 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %33 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %33, i64 19
  %35 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %34, align 8
  %36 = tail call %"class.sh::TIntermSymbol"* %35(%"class.sh::TIntermNode"* %4) #17
  %37 = icmp eq %"class.sh::TIntermSymbol"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %40 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %36, i64 0, i32 1
  %42 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %41, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %40, %"class.sh::TVariable"* dereferenceable(40) %42) #17
  br label %43

43:                                               ; preds = %24, %31, %38
  ret void
}

declare void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"*, %"class.sh::TVariable"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string.38", align 8
  %6 = alloca %"class.std::__1::basic_stringstream", align 8
  %7 = alloca %"class.sh::ImmutableString", align 8
  %8 = alloca %"class.std::__1::basic_string.38", align 8
  %9 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %3, i64 0, i32 0
  %10 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %11 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %11, i64 12
  %13 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermSwizzle"* %13(%"class.sh::TIntermNode"* %9) #17
  %15 = icmp eq %"class.sh::TIntermSwizzle"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %14, i64 0, i32 1
  %18 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %17, align 8
  %19 = tail call zeroext i1 @_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %2, %"class.sh::TIntermTyped"* %18)
  br i1 %19, label %20, label %315

20:                                               ; preds = %16
  %21 = tail call zeroext i1 @_ZNK2sh14TIntermSwizzle19hasDuplicateOffsetsEv(%"class.sh::TIntermSwizzle"* nonnull %14) #17
  br i1 %21, label %22, label %315

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21, i64 0, i64 0), i8* %2) #17
  br label %315

25:                                               ; preds = %4
  %26 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %27 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %27, i64 13
  %29 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %28, align 8
  %30 = tail call %"class.sh::TIntermBinary"* %29(%"class.sh::TIntermNode"* %9) #17
  %31 = icmp eq %"class.sh::TIntermBinary"* %30, null
  br i1 %31, label %58, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %30, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, -4
  %36 = icmp eq i8 %35, 44
  br i1 %36, label %37, label %55

37:                                               ; preds = %32
  %38 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %39 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %39, i64 31
  %41 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %40, align 8
  %42 = tail call dereferenceable(184) %"class.sh::TType"* %41(%"class.sh::TIntermTyped"* %3) #17
  %43 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %42, i64 0, i32 5
  %44 = bitcast %"struct.sh::TMemoryQualifier"* %43 to i40*
  %45 = load i40, i40* %44, align 2
  %46 = and i40 %45, 1
  %47 = icmp eq i40 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %50 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %49, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %50, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %2) #17
  br label %315

51:                                               ; preds = %37
  %52 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %30, i64 0, i32 2
  %53 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %52, align 8
  %54 = tail call zeroext i1 @_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %2, %"class.sh::TIntermTyped"* %53)
  br label %315

55:                                               ; preds = %32
  %56 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %57 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %56, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %57, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* %2) #17
  br label %315

58:                                               ; preds = %25
  %59 = bitcast %"class.std::__1::basic_string.38"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #17
  %60 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #17
  %62 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %63 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %63, i64 31
  %65 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %64, align 8
  %66 = tail call dereferenceable(184) %"class.sh::TType"* %65(%"class.sh::TIntermTyped"* %3) #17
  %67 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %66, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  switch i32 %68, label %151 [
    i32 2, label %69
    i32 17, label %73
    i32 3, label %77
    i32 12, label %79
    i32 9, label %79
    i32 72, label %79
    i32 82, label %79
    i32 88, label %79
    i32 50, label %79
    i32 51, label %79
    i32 49, label %79
    i32 52, label %79
    i32 53, label %79
    i32 6, label %83
    i32 4, label %87
    i32 23, label %91
    i32 24, label %93
    i32 26, label %95
    i32 25, label %97
    i32 61, label %99
    i32 62, label %101
    i32 63, label %103
    i32 64, label %105
    i32 65, label %107
    i32 66, label %109
    i32 33, label %111
    i32 60, label %113
    i32 74, label %115
    i32 75, label %117
    i32 76, label %119
    i32 77, label %121
    i32 78, label %127
    i32 54, label %133
    i32 56, label %135
    i32 55, label %137
    i32 35, label %139
    i32 36, label %145
  ]

69:                                               ; preds = %58
  %70 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 20, i8* %71, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i64 20, i1 false) #17
  %72 = getelementptr inbounds i8, i8* %59, i64 20
  store i8 0, i8* %72, align 4
  br label %202

73:                                               ; preds = %58
  %74 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  store i8 20, i8* %75, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i64 20, i1 false) #17
  %76 = getelementptr inbounds i8, i8* %59, i64 20
  store i8 0, i8* %76, align 4
  br label %202

77:                                               ; preds = %58
  %78 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i64 25) #17
  br label %202

79:                                               ; preds = %58, %58, %58, %58, %58, %58, %58, %58, %58, %58
  %80 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 21, i8* %81, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.26, i64 0, i64 0), i64 21, i1 false) #17
  %82 = getelementptr inbounds i8, i8* %59, i64 21
  store i8 0, i8* %82, align 1
  br label %202

83:                                               ; preds = %58
  %84 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  store i8 22, i8* %85, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i64 22, i1 false) #17
  %86 = getelementptr inbounds i8, i8* %59, i64 22
  store i8 0, i8* %86, align 2
  br label %202

87:                                               ; preds = %58
  %88 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  store i8 22, i8* %89, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0), i64 22, i1 false) #17
  %90 = getelementptr inbounds i8, i8* %59, i64 22
  store i8 0, i8* %90, align 2
  br label %202

91:                                               ; preds = %58
  %92 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i64 0, i64 0), i64 25) #17
  br label %202

93:                                               ; preds = %58
  %94 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i64 0, i64 0), i64 27) #17
  br label %202

95:                                               ; preds = %58
  %96 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i64 32) #17
  br label %202

97:                                               ; preds = %58
  %98 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i64 0, i64 0), i64 26) #17
  br label %202

99:                                               ; preds = %58
  %100 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i64 0, i64 0), i64 29) #17
  br label %202

101:                                              ; preds = %58
  %102 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i64 0, i64 0), i64 29) #17
  br label %202

103:                                              ; preds = %58
  %104 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i64 27) #17
  br label %202

105:                                              ; preds = %58
  %106 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0), i64 33) #17
  br label %202

107:                                              ; preds = %58
  %108 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0), i64 34) #17
  br label %202

109:                                              ; preds = %58
  %110 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i64 0, i64 0), i64 36) #17
  br label %202

111:                                              ; preds = %58
  %112 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i64 26) #17
  br label %202

113:                                              ; preds = %58
  %114 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i64 0, i64 0), i64 37) #17
  br label %202

115:                                              ; preds = %58
  %116 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0), i64 32) #17
  br label %202

117:                                              ; preds = %58
  %118 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42, i64 0, i64 0), i64 29) #17
  br label %202

119:                                              ; preds = %58
  %120 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i64 0, i64 0), i64 28) #17
  br label %202

121:                                              ; preds = %58
  %122 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 35632
  br i1 %124, label %125, label %202

125:                                              ; preds = %121
  %126 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.44, i64 0, i64 0), i64 48) #17
  br label %202

127:                                              ; preds = %58
  %128 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 35632
  br i1 %130, label %131, label %202

131:                                              ; preds = %127
  %132 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45, i64 0, i64 0), i64 42) #17
  br label %202

133:                                              ; preds = %58
  %134 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.46, i64 0, i64 0), i64 24) #17
  br label %202

135:                                              ; preds = %58
  %136 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i64 0, i64 0), i64 28) #17
  br label %202

137:                                              ; preds = %58
  %138 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48, i64 0, i64 0), i64 30) #17
  br label %202

139:                                              ; preds = %58
  %140 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 35632
  br i1 %142, label %143, label %202

143:                                              ; preds = %139
  %144 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.49, i64 0, i64 0), i64 49) #17
  br label %202

145:                                              ; preds = %58
  %146 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 35632
  br i1 %148, label %149, label %202

149:                                              ; preds = %145
  %150 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.50, i64 0, i64 0), i64 49) #17
  br label %202

151:                                              ; preds = %58
  %152 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %153 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %152, i64 31
  %154 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %153, align 8
  %155 = tail call dereferenceable(184) %"class.sh::TType"* %154(%"class.sh::TIntermTyped"* %3) #17
  %156 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %151
  %160 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  store i8 17, i8* %161, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i64 0, i64 0), i64 17, i1 false) #17
  %162 = getelementptr inbounds i8, i8* %59, i64 17
  store i8 0, i8* %162, align 1
  br label %163

163:                                              ; preds = %159, %151
  %164 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %165 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %164, i64 31
  %166 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %165, align 8
  %167 = tail call dereferenceable(184) %"class.sh::TType"* %166(%"class.sh::TIntermTyped"* %3) #17
  %168 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %167, i64 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, -8
  %171 = icmp ult i32 %170, 43
  %172 = add i32 %169, -51
  %173 = icmp ult i32 %172, 33
  %174 = or i1 %171, %173
  %175 = icmp eq i32 %169, 6
  %176 = or i1 %175, %174
  %177 = add i32 %169, -84
  %178 = icmp ult i32 %177, 6
  %179 = or i1 %178, %176
  br i1 %179, label %180, label %190

180:                                              ; preds = %163
  %181 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.52, i64 0, i64 0), i64 34) #17
  %182 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %183 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %182, i64 31
  %184 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %183, align 8
  %185 = call dereferenceable(184) %"class.sh::TType"* %184(%"class.sh::TIntermTyped"* %3) #17
  %186 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %185, i64 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %187) #17
  %189 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %5, i8* %188) #17
  br label %202

190:                                              ; preds = %163
  %191 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %192 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %191, i64 31
  %193 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %192, align 8
  %194 = tail call dereferenceable(184) %"class.sh::TType"* %193(%"class.sh::TIntermTyped"* %3) #17
  %195 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %194, i64 0, i32 5
  %196 = bitcast %"struct.sh::TMemoryQualifier"* %195 to i40*
  %197 = load i40, i40* %196, align 2
  %198 = and i40 %197, 1
  %199 = icmp eq i40 %198, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %190
  %201 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i64 32) #17
  br label %202

202:                                              ; preds = %200, %149, %143, %137, %135, %133, %131, %125, %119, %117, %115, %113, %111, %109, %107, %105, %103, %101, %99, %97, %95, %93, %91, %87, %83, %79, %77, %73, %69, %190, %180, %145, %139, %127, %121
  %203 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %204 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %203, align 8
  %205 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %204, i64 19
  %206 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %205, align 8
  %207 = call %"class.sh::TIntermSymbol"* %206(%"class.sh::TIntermNode"* %9) #17
  %208 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  %212 = load i64, i64* %61, align 8
  %213 = zext i8 %210 to i64
  %214 = select i1 %211, i64 %212, i64 %213
  %215 = icmp eq i64 %214, 0
  %216 = icmp ne %"class.sh::TIntermSymbol"* %207, null
  %217 = and i1 %216, %215
  br i1 %217, label %218, label %223

218:                                              ; preds = %202
  %219 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %220 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %219, align 8
  %221 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %207, i64 0, i32 1
  %222 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %221, align 8
  call void @_ZN2sh12TSymbolTable15markStaticWriteERKNS_9TVariableE(%"class.sh::TSymbolTable"* %220, %"class.sh::TVariable"* dereferenceable(40) %222) #17
  br label %308

223:                                              ; preds = %202
  %224 = bitcast %"class.std::__1::basic_stringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %224) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %6)
  %225 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 0, i32 1
  %226 = bitcast %"class.std::__1::basic_ostream.base"* %225 to %"class.std::__1::basic_ostream"*
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.53, i64 0, i64 0), i64 16) #17
  %228 = load i8, i8* %209, align 1
  %229 = icmp slt i8 %228, 0
  %230 = load i64, i64* %61, align 8
  %231 = zext i8 %228 to i64
  %232 = select i1 %229, i64 %230, i64 %231
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %265, label %234

234:                                              ; preds = %223
  br i1 %216, label %235, label %254

235:                                              ; preds = %234
  %236 = bitcast %"class.sh::ImmutableString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #17
  %237 = call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %207) #17
  %238 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %7, i64 0, i32 0
  %239 = extractvalue { i8*, i64 } %237, 0
  store i8* %239, i8** %238, align 8
  %240 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %7, i64 0, i32 1
  %241 = extractvalue { i8*, i64 } %237, 1
  store i64 %241, i64* %240, align 8
  %242 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i64 2) #17
  %243 = load i8, i8* %209, align 1
  %244 = icmp slt i8 %243, 0
  %245 = load i8*, i8** %60, align 8
  %246 = load i64, i64* %61, align 8
  %247 = zext i8 %243 to i64
  %248 = select i1 %244, i8* %245, i8* %59
  %249 = select i1 %244, i64 %246, i64 %247
  %250 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %242, i8* %248, i64 %249) #17
  %251 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %250, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.55, i64 0, i64 0), i64 2) #17
  %252 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %251, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %7) #17
  %253 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i64 2) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #17
  br label %265

254:                                              ; preds = %234
  %255 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i64 2) #17
  %256 = load i8, i8* %209, align 1
  %257 = icmp slt i8 %256, 0
  %258 = load i8*, i8** %60, align 8
  %259 = load i64, i64* %61, align 8
  %260 = zext i8 %256 to i64
  %261 = select i1 %257, i8* %258, i8* %59
  %262 = select i1 %257, i64 %259, i64 %260
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %255, i8* %261, i64 %262) #17
  %264 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %263, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i64 1) #17
  br label %265

265:                                              ; preds = %235, %254, %223
  %266 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %266) #17
  %267 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1
  %269 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %268) #17
  %270 = bitcast %"class.std::__1::basic_string.38"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  %274 = load i8*, i8** %267, align 8
  %275 = select i1 %273, i8* %274, i8* %266
  %276 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %277 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %276, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %277, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %275, i8* %2) #17
  %278 = load i8, i8* %271, align 1
  %279 = icmp slt i8 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %265
  %281 = load i8*, i8** %267, align 8
  call void @_ZdlPv(i8* %281) #18
  br label %282

282:                                              ; preds = %265, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %266) #17
  %283 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %284 = bitcast %"class.std::__1::basic_stringstream"* %6 to i64*
  store i64 %283, i64* %284, align 8
  %285 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %286 = inttoptr i64 %283 to i8*
  %287 = getelementptr i8, i8* %286, i64 -24
  %288 = bitcast i8* %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = getelementptr inbounds i8, i8* %224, i64 %289
  %291 = bitcast i8* %290 to i64*
  store i64 %285, i64* %291, align 8
  %292 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %293 = bitcast %"class.std::__1::basic_ostream.base"* %225 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %268, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1, i32 1
  %296 = bitcast %"class.std::__1::basic_string.38"* %295 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %296, i64 0, i32 1, i32 0
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %282
  %301 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load i8*, i8** %301, align 8
  call void @_ZdlPv(i8* %302) #18
  br label %303

303:                                              ; preds = %282, %300
  %304 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %268, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %304) #17
  %305 = bitcast %"class.std::__1::basic_stringstream"* %6 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %305, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %306 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 2
  %307 = bitcast %"class.std::__1::basic_ios.base"* %306 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %307) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %224) #17
  br label %308

308:                                              ; preds = %303, %218
  %309 = phi i1 [ true, %218 ], [ false, %303 ]
  %310 = load i8, i8* %209, align 1
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %308
  %313 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %313) #18
  br label %314

314:                                              ; preds = %308, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #17
  br label %315

315:                                              ; preds = %48, %51, %55, %314, %22, %20, %16
  %316 = phi i1 [ false, %22 ], [ true, %20 ], [ false, %16 ], [ false, %48 ], [ %54, %51 ], [ false, %55 ], [ %309, %314 ]
  ret i1 %316
}

declare zeroext i1 @_ZNK2sh14TIntermSwizzle19hasDuplicateOffsetsEv(%"class.sh::TIntermSwizzle"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2sh12TSymbolTable15markStaticWriteERKNS_9TVariableE(%"class.sh::TSymbolTable"*, %"class.sh::TVariable"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* noalias sret) local_unnamed_addr #2 comdat {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8*
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 272, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_stringstream"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_stringstream"* %0 to i8**
  %17 = inttoptr i64 %13 to i8*
  %18 = getelementptr i8, i8* %17, i64 -24
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  %24 = load i8*, i8** %16, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %5, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %11 to i8*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #17
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 0, i32 1
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_ostream.base"* %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %42
  %45 = bitcast i8* %44 to i64*
  store i64 %38, i64* %45, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %46, i64* %14, align 8
  %47 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %5, i64 %51
  %53 = bitcast i8* %52 to i64*
  store i64 %47, i64* %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %12) #17
  %54 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 1
  %56 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %0, i64 0, i32 1, i32 3
  %57 = bitcast %"class.std::__1::basic_string.38"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #17
  store i32 24, i32* %56, align 8
  %58 = load i8*, i8** %16, align 8
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %5, i64 %61
  %63 = tail call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() #17
  %64 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = bitcast %"class.std::__1::locale"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %4, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %66, align 8, !alias.scope !3
  %67 = bitcast i8* %62 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %67) #17
  call void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %67, %"class.std::__1::locale"* dereferenceable(8) %63) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #17
  %68 = getelementptr inbounds i8, i8* %62, i64 40
  %69 = bitcast i8* %68 to %"class.std::__1::basic_streambuf"**
  %70 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %69, align 8, !noalias !3
  %71 = icmp eq %"class.std::__1::basic_streambuf"* %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %1
  %73 = bitcast %"class.std::__1::basic_streambuf"* %70 to void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)***
  %74 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)**, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*** %73, align 8, !noalias !6
  %75 = getelementptr inbounds void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %74, i64 2
  %76 = load void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)*, void (%"class.std::__1::basic_streambuf"*, %"class.std::__1::locale"*)** %75, align 8, !noalias !6
  call void %76(%"class.std::__1::basic_streambuf"* nonnull %70, %"class.std::__1::locale"* dereferenceable(8) %63) #17, !noalias !6
  %77 = getelementptr inbounds %"class.std::__1::locale", %"class.std::__1::locale"* %3, i64 0, i32 0
  store %"class.std::__1::locale::__imp"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::locale::__imp"*), %"class.std::__1::locale::__imp"** %77, align 8, !alias.scope !6, !noalias !3
  %78 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %70, i64 0, i32 1
  call void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale"* dereferenceable(8) %78) #17
  %79 = call dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"* %78, %"class.std::__1::locale"* dereferenceable(8) %63) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #17
  br label %80

80:                                               ; preds = %1, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  ret void
}

declare { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext12checkIsConstEPNS_12TIntermTypedE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %4 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %4, i64 31
  %6 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.sh::TType"* %6(%"class.sh::TIntermTyped"* %1) #17
  %8 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %12, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %15

15:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext20checkIsScalarIntegerEPNS_12TIntermTypedEPKc(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, i8*) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %5 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %5, i64 31
  %7 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %6, align 8
  %8 = tail call dereferenceable(184) %"class.sh::TType"* %7(%"class.sh::TIntermTyped"* %1) #17
  %9 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %8, i64 0, i32 8
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %29

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %8, i64 0, i32 9
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %29

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %8, i64 0, i32 13
  %18 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %17, align 8
  %19 = icmp eq %"class.sh::TStructure"* %18, null
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %8, i64 0, i32 10, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %8, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -3
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %33, label %29

29:                                               ; preds = %3, %12, %16, %20, %24
  %30 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %32 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %31, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %32, %"struct.sh::TSourceLoc"* dereferenceable(16) %30, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i64 0, i64 0), i8* %2) #17
  br label %33

33:                                               ; preds = %29, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext20checkIsAtGlobalLevelERKNS_10TSourceLocEPKc(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %5 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %5) #17
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* %2) #17
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i1 [ false, %7 ], [ true, %3 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  %7 = select i1 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %5
  %8 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0)) #17
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %11 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %11, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0)) #17
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %31 [
    i32 5, label %15
    i32 3, label %15
    i32 1, label %15
  ]

15:                                               ; preds = %12, %12, %12
  %16 = load i8*, i8** %4, align 8
  %17 = icmp eq i8* %16, null
  %18 = select i1 %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %16
  %19 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)) #17
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %22, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)) #17
  br label %40

23:                                               ; preds = %15
  %24 = load i8*, i8** %4, align 8
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %24
  %27 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0)) #17
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %29, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.64, i64 0, i64 0)) #17
  br label %40

31:                                               ; preds = %12, %23
  %32 = load i8*, i8** %4, align 8
  %33 = icmp eq i8* %32, null
  %34 = select i1 %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %32
  %35 = tail call i8* @strstr(i8* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.65, i64 0, i64 0)) #19
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %39 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %38, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %39, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.66, i64 0, i64 0), i8* %34) #17
  br label %40

40:                                               ; preds = %31, %37, %28, %20, %9
  %41 = phi i1 [ false, %9 ], [ false, %20 ], [ false, %28 ], [ false, %37 ], [ true, %31 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext25checkConstructorArgumentsERKNS_10TSourceLocERKNS_7TVectorIPNS_11TIntermNodeEEERKNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.30"* nocapture readonly dereferenceable(24), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string.38", align 8
  %6 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %2, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %8, align 8
  %10 = icmp eq %"class.sh::TIntermNode"** %7, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 0
  br label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

17:                                               ; preds = %129
  %18 = icmp eq %"class.sh::TIntermNode"** %137, %9
  br i1 %18, label %141, label %19

19:                                               ; preds = %11, %17
  %20 = phi %"class.sh::TIntermNode"** [ %7, %11 ], [ %137, %17 ]
  %21 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %20, align 8
  br label %22

22:                                               ; preds = %32, %19
  %23 = phi %"class.sh::TIntermNode"* [ %21, %19 ], [ %35, %32 ]
  %24 = bitcast %"class.sh::TIntermNode"* %23 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %25 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %25, i64 12
  %27 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %26, align 8
  %28 = tail call %"class.sh::TIntermSwizzle"* %27(%"class.sh::TIntermNode"* %23) #17
  %29 = icmp eq %"class.sh::TIntermSwizzle"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %28, i64 0, i32 1
  br label %32

32:                                               ; preds = %48, %30
  %33 = phi %"class.sh::TIntermTyped"** [ %31, %30 ], [ %49, %48 ]
  %34 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %33, align 8
  %35 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %34, i64 0, i32 0
  br label %22

36:                                               ; preds = %22
  %37 = bitcast %"class.sh::TIntermNode"* %23 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %38 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %38, i64 13
  %40 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %39, align 8
  %41 = tail call %"class.sh::TIntermBinary"* %40(%"class.sh::TIntermNode"* %23) #17
  %42 = icmp eq %"class.sh::TIntermBinary"* %41, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %41, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 8
  %46 = and i8 %45, -4
  %47 = icmp eq i8 %46, 44
  br i1 %47, label %48, label %61

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %41, i64 0, i32 2
  br label %32

50:                                               ; preds = %36
  %51 = bitcast %"class.sh::TIntermNode"* %23 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %52 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %52, i64 19
  %54 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %53, align 8
  %55 = tail call %"class.sh::TIntermSymbol"* %54(%"class.sh::TIntermNode"* %23) #17
  %56 = icmp eq %"class.sh::TIntermSymbol"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %12, align 8
  %59 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %55, i64 0, i32 1
  %60 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %59, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %58, %"class.sh::TVariable"* dereferenceable(40) %60) #17
  br label %61

61:                                               ; preds = %43, %50, %57
  %62 = bitcast %"class.sh::TIntermNode"* %21 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %63 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %63, i64 4
  %65 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %64, align 8
  %66 = tail call %"class.sh::TIntermTyped"* %65(%"class.sh::TIntermNode"* %21) #17
  %67 = load i32, i32* %13, align 8
  %68 = icmp eq i32 %67, 90
  %69 = bitcast %"class.sh::TIntermTyped"* %66 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  br i1 %68, label %116, label %70

70:                                               ; preds = %61
  %71 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %69, align 8
  %72 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %71, i64 31
  %73 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %72, align 8
  %74 = tail call dereferenceable(184) %"class.sh::TType"* %73(%"class.sh::TIntermTyped"* %66) #17
  %75 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, -8
  %78 = icmp ult i32 %77, 43
  %79 = add i32 %76, -51
  %80 = icmp ult i32 %79, 33
  %81 = or i1 %78, %80
  %82 = icmp eq i32 %76, 6
  %83 = or i1 %82, %81
  %84 = add i32 %76, -84
  %85 = icmp ult i32 %84, 6
  %86 = or i1 %85, %83
  br i1 %86, label %87, label %116

87:                                               ; preds = %70
  %88 = bitcast %"class.sh::TIntermTyped"* %66 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %89 = bitcast %"class.std::__1::basic_string.38"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = tail call i8* @_Znwm(i64 48) #18
  store i8* %92, i8** %90, align 8
  %93 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %93, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69, i64 0, i64 0), i64 36, i1 false) #17
  %94 = getelementptr inbounds i8, i8* %92, i64 36
  store i8 0, i8* %94, align 1
  %95 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %88, align 8
  %96 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %95, i64 31
  %97 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %96, align 8
  %98 = tail call dereferenceable(184) %"class.sh::TType"* %97(%"class.sh::TIntermTyped"* %66) #17
  %99 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %100) #17
  %102 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %5, i8* %101) #17
  %103 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = load i8*, i8** %90, align 8
  %108 = select i1 %106, i8* %107, i8* %89
  %109 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %110 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %109, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %110, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %108, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  %111 = load i8, i8* %104, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %87
  %114 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %114) #18
  br label %115

115:                                              ; preds = %87, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #17
  br label %418

116:                                              ; preds = %61, %70
  %117 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %69, align 8
  %118 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %117, i64 31
  %119 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %118, align 8
  %120 = tail call dereferenceable(184) %"class.sh::TType"* %119(%"class.sh::TIntermTyped"* %66) #17
  %121 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %120, i64 0, i32 5
  %122 = bitcast %"struct.sh::TMemoryQualifier"* %121 to i40*
  %123 = load i40, i40* %122, align 2
  %124 = and i40 %123, 256
  %125 = icmp eq i40 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %128 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %127, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %128, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

129:                                              ; preds = %116
  %130 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %69, align 8
  %131 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %130, i64 31
  %132 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %131, align 8
  %133 = tail call dereferenceable(184) %"class.sh::TType"* %132(%"class.sh::TIntermTyped"* %66) #17
  %134 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %20, i64 1
  br i1 %136, label %138, label %17

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %140 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %139, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %140, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

141:                                              ; preds = %17
  %142 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %198, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %147 = load i32*, i32** %146, align 8
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i32, i32* %147, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  %152 = bitcast %"class.sh::TIntermNode"*** %8 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.sh::TVector.30"* %2 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %153, %155
  %157 = ashr exact i64 %156, 3
  %158 = icmp eq i64 %157, %151
  %159 = inttoptr i64 %155 to %"class.sh::TIntermNode"**
  %160 = inttoptr i64 %153 to %"class.sh::TIntermNode"**
  br i1 %158, label %164, label %161

161:                                              ; preds = %145
  %162 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %163 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %162, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %163, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

164:                                              ; preds = %145
  %165 = icmp eq %"class.sh::TIntermNode"** %159, %160
  br i1 %165, label %418, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  br label %170

168:                                              ; preds = %192
  %169 = icmp eq %"class.sh::TIntermNode"** %194, %160
  br i1 %169, label %418, label %170

170:                                              ; preds = %166, %168
  %171 = phi %"class.sh::TIntermNode"** [ %159, %166 ], [ %194, %168 ]
  %172 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %171, align 8
  %173 = bitcast %"class.sh::TIntermNode"* %172 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %174 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %173, align 8
  %175 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %174, i64 4
  %176 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %175, align 8
  %177 = tail call %"class.sh::TIntermTyped"* %176(%"class.sh::TIntermNode"* %172) #17
  %178 = bitcast %"class.sh::TIntermTyped"* %177 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %179 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %179, i64 31
  %181 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %180, align 8
  %182 = tail call dereferenceable(184) %"class.sh::TType"* %181(%"class.sh::TIntermTyped"* %177) #17
  %183 = load i32, i32* %167, align 8
  %184 = icmp slt i32 %183, 310
  br i1 %184, label %185, label %192

185:                                              ; preds = %170
  %186 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %182, i64 0, i32 10, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %192, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %191 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %190, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %191, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

192:                                              ; preds = %185, %170
  %193 = tail call zeroext i1 @_ZNK2sh5TType15isElementTypeOfERKS0_(%"class.sh::TType"* %182, %"class.sh::TType"* dereferenceable(184) %3) #17
  %194 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %171, i64 1
  br i1 %193, label %168, label %195

195:                                              ; preds = %192
  %196 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %197 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %196, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %197, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

198:                                              ; preds = %141
  %199 = load i32, i32* %13, align 8
  %200 = icmp eq i32 %199, 90
  br i1 %200, label %201, label %312

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 13
  %203 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %202, align 8
  %204 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %203, i64 0, i32 2, i32 0
  %205 = load %"class.sh::TVector.1"*, %"class.sh::TVector.1"** %204, align 8
  %206 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %205, i64 0, i32 0, i32 0, i32 1
  %207 = bitcast %"class.sh::TField"*** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.sh::TVector.1"* %205 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = sub i64 %208, %210
  %212 = bitcast %"class.sh::TIntermNode"*** %8 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = bitcast %"class.sh::TVector.30"* %2 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = sub i64 %213, %215
  %217 = icmp eq i64 %211, %216
  br i1 %217, label %218, label %223

218:                                              ; preds = %201
  %219 = icmp eq i64 %208, %210
  br i1 %219, label %418, label %220

220:                                              ; preds = %218
  %221 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %205, i64 0, i32 0, i32 0, i32 0
  %222 = icmp eq i64 %213, %215
  br i1 %222, label %309, label %237

223:                                              ; preds = %201
  %224 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %225 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %224, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %225, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

226:                                              ; preds = %302
  %227 = load i64, i64* %207, align 8
  %228 = sub i64 %227, %263
  %229 = ashr exact i64 %228, 3
  %230 = icmp ult i64 %308, %229
  br i1 %230, label %231, label %418

231:                                              ; preds = %226
  %232 = load i64, i64* %212, align 8
  %233 = load i64, i64* %214, align 8
  %234 = sub i64 %232, %233
  %235 = ashr exact i64 %234, 3
  %236 = icmp ult i64 %308, %235
  br i1 %236, label %237, label %309

237:                                              ; preds = %220, %231
  %238 = phi i64 [ %308, %231 ], [ 0, %220 ]
  %239 = phi i64 [ %233, %231 ], [ %215, %220 ]
  %240 = inttoptr i64 %239 to %"class.sh::TIntermNode"**
  %241 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %240, i64 %238
  %242 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %241, align 8
  %243 = bitcast %"class.sh::TIntermNode"* %242 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %244 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %243, align 8
  %245 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %244, i64 4
  %246 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %245, align 8
  %247 = tail call %"class.sh::TIntermTyped"* %246(%"class.sh::TIntermNode"* %242) #17
  %248 = bitcast %"class.sh::TIntermTyped"* %247 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %249 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %248, align 8
  %250 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %249, i64 31
  %251 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %250, align 8
  %252 = tail call dereferenceable(184) %"class.sh::TType"* %251(%"class.sh::TIntermTyped"* %247) #17
  %253 = load %"class.sh::TField"**, %"class.sh::TField"*** %221, align 8
  %254 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %253, i64 %238
  %255 = load %"class.sh::TField"*, %"class.sh::TField"** %254, align 8
  %256 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %255, i64 0, i32 0
  %257 = load %"class.sh::TType"*, %"class.sh::TType"** %256, align 8
  %258 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %252, i64 0, i32 10, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %257, i64 0, i32 10, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = icmp eq i64 %259, %261
  %263 = ptrtoint %"class.sh::TField"** %253 to i64
  br i1 %262, label %264, label %282

264:                                              ; preds = %237
  %265 = icmp eq i64 %259, 0
  br i1 %265, label %282, label %266

266:                                              ; preds = %264
  %267 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %252, i64 0, i32 10, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %257, i64 0, i32 10, i32 0
  %270 = load i32*, i32** %269, align 8
  %271 = icmp eq i32* %268, %270
  br i1 %271, label %282, label %274

272:                                              ; preds = %274
  %273 = icmp eq i64 %281, %259
  br i1 %273, label %282, label %274

274:                                              ; preds = %266, %272
  %275 = phi i64 [ %281, %272 ], [ 0, %266 ]
  %276 = getelementptr inbounds i32, i32* %268, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds i32, i32* %270, i64 %275
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %277, %279
  %281 = add nuw i64 %275, 1
  br i1 %280, label %272, label %282

282:                                              ; preds = %274, %272, %266, %264, %237
  %283 = phi i1 [ true, %237 ], [ false, %264 ], [ false, %266 ], [ false, %272 ], [ true, %274 ]
  %284 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %252, i64 0, i32 0
  %285 = load i32, i32* %284, align 8
  %286 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %257, i64 0, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %285, %287
  br i1 %288, label %289, label %309

289:                                              ; preds = %282
  %290 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %252, i64 0, i32 8
  %291 = load i8, i8* %290, align 8
  %292 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %257, i64 0, i32 8
  %293 = load i8, i8* %292, align 8
  %294 = icmp eq i8 %291, %293
  br i1 %294, label %295, label %309

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %252, i64 0, i32 9
  %297 = load i8, i8* %296, align 1
  %298 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %257, i64 0, i32 9
  %299 = load i8, i8* %298, align 1
  %300 = icmp ne i8 %297, %299
  %301 = or i1 %283, %300
  br i1 %301, label %309, label %302

302:                                              ; preds = %295
  %303 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %252, i64 0, i32 13
  %304 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %303, align 8
  %305 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %257, i64 0, i32 13
  %306 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %305, align 8
  %307 = icmp eq %"class.sh::TStructure"* %304, %306
  %308 = add nuw i64 %238, 1
  br i1 %307, label %226, label %309

309:                                              ; preds = %231, %295, %289, %282, %302, %220
  %310 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %311 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %310, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %311, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

312:                                              ; preds = %198
  %313 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %6, align 8
  %314 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %8, align 8
  %315 = icmp eq %"class.sh::TIntermNode"** %313, %314
  br i1 %315, label %381, label %316

316:                                              ; preds = %312, %363
  %317 = phi i8 [ %364, %363 ], [ 0, %312 ]
  %318 = phi i8 [ %373, %363 ], [ 0, %312 ]
  %319 = phi i8 [ %376, %363 ], [ 0, %312 ]
  %320 = phi i64 [ %370, %363 ], [ 0, %312 ]
  %321 = phi %"class.sh::TIntermNode"** [ %377, %363 ], [ %313, %312 ]
  %322 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %321, align 8
  %323 = bitcast %"class.sh::TIntermNode"* %322 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %324 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %323, align 8
  %325 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %324, i64 4
  %326 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %325, align 8
  %327 = tail call %"class.sh::TIntermTyped"* %326(%"class.sh::TIntermNode"* %322) #17
  %328 = bitcast %"class.sh::TIntermTyped"* %327 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %329 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %328, align 8
  %330 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %329, i64 31
  %331 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %330, align 8
  %332 = tail call dereferenceable(184) %"class.sh::TType"* %331(%"class.sh::TIntermTyped"* %327) #17
  %333 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %332, i64 0, i32 0
  %334 = load i32, i32* %333, align 8
  %335 = icmp eq i32 %334, 90
  br i1 %335, label %336, label %339

336:                                              ; preds = %316
  %337 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %338 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %337, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %338, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

339:                                              ; preds = %316
  %340 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %328, align 8
  %341 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %340, i64 31
  %342 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %341, align 8
  %343 = tail call dereferenceable(184) %"class.sh::TType"* %342(%"class.sh::TIntermTyped"* %327) #17
  %344 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %343, i64 0, i32 10, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %350, label %347

347:                                              ; preds = %339
  %348 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %349 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %348, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %349, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

350:                                              ; preds = %339
  %351 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %328, align 8
  %352 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %351, i64 31
  %353 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %352, align 8
  %354 = tail call dereferenceable(184) %"class.sh::TType"* %353(%"class.sh::TIntermTyped"* %327) #17
  %355 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %354, i64 0, i32 8
  %356 = load i8, i8* %355, align 8
  %357 = icmp ugt i8 %356, 1
  br i1 %357, label %358, label %363

358:                                              ; preds = %350
  %359 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %354, i64 0, i32 9
  %360 = load i8, i8* %359, align 1
  %361 = icmp ugt i8 %360, 1
  %362 = select i1 %361, i8 1, i8 %317
  br label %363

363:                                              ; preds = %358, %350
  %364 = phi i8 [ %317, %350 ], [ %362, %358 ]
  %365 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %328, align 8
  %366 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %365, i64 31
  %367 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %366, align 8
  %368 = tail call dereferenceable(184) %"class.sh::TType"* %367(%"class.sh::TIntermTyped"* %327) #17
  %369 = tail call i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"* %368) #17
  %370 = add i64 %369, %320
  %371 = and i8 %319, 1
  %372 = icmp eq i8 %371, 0
  %373 = select i1 %372, i8 %318, i8 1
  %374 = tail call i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"* %3) #17
  %375 = icmp ult i64 %370, %374
  %376 = select i1 %375, i8 %319, i8 1
  %377 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %321, i64 1
  %378 = icmp eq %"class.sh::TIntermNode"** %377, %314
  br i1 %378, label %379, label %316

379:                                              ; preds = %363
  %380 = and i8 %373, 1
  br label %381

381:                                              ; preds = %379, %312
  %382 = phi i64 [ 0, %312 ], [ %370, %379 ]
  %383 = phi i8 [ 0, %312 ], [ %380, %379 ]
  %384 = phi i8 [ 0, %312 ], [ %364, %379 ]
  %385 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %386 = load i8, i8* %385, align 8
  %387 = icmp ugt i8 %386, 1
  br i1 %387, label %388, label %405

388:                                              ; preds = %381
  %389 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %390 = load i8, i8* %389, align 1
  %391 = icmp ult i8 %390, 2
  %392 = and i8 %384, 1
  %393 = icmp eq i8 %392, 0
  %394 = or i1 %393, %391
  br i1 %394, label %405, label %395

395:                                              ; preds = %388
  %396 = bitcast %"class.sh::TIntermNode"*** %8 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"class.sh::TVector.30"* %2 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %397, %399
  %401 = icmp eq i64 %400, 8
  br i1 %401, label %418, label %402

402:                                              ; preds = %395
  %403 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %404 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %403, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %404, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

405:                                              ; preds = %381, %388
  %406 = icmp eq i64 %382, 1
  br i1 %406, label %413, label %407

407:                                              ; preds = %405
  %408 = tail call i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"* %3) #17
  %409 = icmp ult i64 %382, %408
  br i1 %409, label %410, label %413

410:                                              ; preds = %407
  %411 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %412 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %411, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %412, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

413:                                              ; preds = %405, %407
  %414 = icmp eq i8 %383, 0
  br i1 %414, label %418, label %415

415:                                              ; preds = %413
  %416 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %417 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %416, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %417, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %418

418:                                              ; preds = %168, %226, %218, %164, %347, %336, %415, %410, %402, %413, %395, %309, %195, %189, %138, %126, %115, %223, %161, %14
  %419 = phi i1 [ false, %14 ], [ false, %161 ], [ false, %309 ], [ false, %223 ], [ false, %115 ], [ false, %126 ], [ false, %138 ], [ false, %189 ], [ false, %195 ], [ true, %395 ], [ true, %413 ], [ false, %402 ], [ false, %410 ], [ false, %415 ], [ false, %336 ], [ false, %347 ], [ true, %218 ], [ true, %164 ], [ true, %226 ], [ true, %168 ]
  ret i1 %419
}

declare zeroext i1 @_ZNK2sh5TType15isElementTypeOfERKS0_(%"class.sh::TType"*, %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #3

declare i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext14checkIsNonVoidERKNS_10TSourceLocERKNS_15ImmutableStringERKNS_10TBasicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  %10 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %11
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0), i8* %13) #17
  br label %14

14:                                               ; preds = %4, %7
  %15 = phi i1 [ false, %7 ], [ true, %4 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext17checkIsScalarBoolERKNS_10TSourceLocEPKNS_12TIntermTypedE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %5 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %5, i64 31
  %7 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %6, align 8
  %8 = tail call dereferenceable(184) %"class.sh::TType"* %7(%"class.sh::TIntermTyped"* %2) #17
  %9 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 5
  br i1 %11, label %12, label %32

12:                                               ; preds = %3
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %4, align 8
  %14 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %13, i64 31
  %15 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.sh::TType"* %15(%"class.sh::TIntermTyped"* %2) #17
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 8
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 1
  br i1 %19, label %20, label %32

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 9
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 1
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 13
  %26 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %25, align 8
  %27 = icmp eq %"class.sh::TStructure"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 10, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %12, %20, %24, %3, %28
  %33 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %34 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %33, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %34, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi i1 [ false, %32 ], [ true, %28 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext17checkIsScalarBoolERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 5
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZNK2sh11TPublicType11isAggregateEv(%"struct.sh::TPublicType"* %2) #17
  br i1 %8, label %9, label %12

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %11 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %11, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %12

12:                                               ; preds = %9, %7
  ret void
}

declare zeroext i1 @_ZNK2sh11TPublicType11isAggregateEv(%"struct.sh::TPublicType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext20checkIsNotOpaqueTypeERKNS_10TSourceLocERKNS_22TTypeSpecifierNonArrayEPKc(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TTypeSpecifierNonArray"* nocapture readonly dereferenceable(40), i8*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_stringstream", align 8
  %6 = alloca %"class.std::__1::basic_string.38", align 8
  %7 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 90
  br i1 %9, label %10, label %65

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %2, i64 0, i32 3
  %12 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %11, align 8
  %13 = tail call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_115ContainsSamplerEPKNS_10TStructureE(%"class.sh::TStructure"* %12)
  br i1 %13, label %14, label %80

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_stringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %5)
  %16 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_ostream.base"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call i64 @strlen(i8* %3) #17
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* %3, i64 %18) #17
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.83, i64 0, i64 0), i64 31) #17
  %21 = bitcast %"class.std::__1::basic_string.38"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string.38"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %23) #17
  %25 = bitcast %"class.std::__1::basic_string.38"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %22, align 8
  %30 = select i1 %28, i8* %29, i8* %21
  %31 = load i32, i32* %7, align 8
  %32 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %31) #17
  %33 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %34 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %33, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %34, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %30, i8* %32) #17
  %35 = load i8, i8* %26, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %14
  %38 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %14, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  %40 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %41 = bitcast %"class.std::__1::basic_stringstream"* %5 to i64*
  store i64 %40, i64* %41, align 8
  %42 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %43 = inttoptr i64 %40 to i8*
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %15, i64 %46
  %48 = bitcast i8* %47 to i64*
  store i64 %42, i64* %48, align 8
  %49 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %50 = bitcast %"class.std::__1::basic_ostream.base"* %16 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %23, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1, i32 1
  %53 = bitcast %"class.std::__1::basic_string.38"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %39
  %58 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %39, %57
  %61 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %23, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %61) #17
  %62 = bitcast %"class.std::__1::basic_stringstream"* %5 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %62, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %63 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 2
  %64 = bitcast %"class.std::__1::basic_ios.base"* %63 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %64) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %15) #17
  br label %80

65:                                               ; preds = %4
  %66 = add i32 %8, -8
  %67 = icmp ult i32 %66, 43
  %68 = add i32 %8, -51
  %69 = icmp ult i32 %68, 33
  %70 = or i1 %67, %69
  %71 = icmp eq i32 %8, 6
  %72 = or i1 %71, %70
  %73 = add i32 %8, -84
  %74 = icmp ult i32 %73, 6
  %75 = or i1 %74, %72
  br i1 %75, label %76, label %80

76:                                               ; preds = %65
  %77 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %8) #17
  %78 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %79 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %78, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %79, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %3, i8* %77) #17
  br label %80

80:                                               ; preds = %65, %10, %76, %60
  %81 = phi i1 [ false, %60 ], [ false, %76 ], [ true, %10 ], [ true, %65 ]
  ret i1 %81
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_115ContainsSamplerEPKNS_10TStructureE(%"class.sh::TStructure"* nocapture readonly) unnamed_addr #6 {
  %2 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.sh::TVector.1"*, %"class.sh::TVector.1"** %2, align 8
  %4 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.sh::TField"**, %"class.sh::TField"*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.sh::TField"**, %"class.sh::TField"*** %6, align 8
  %8 = icmp eq %"class.sh::TField"** %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %1, %24
  %10 = phi %"class.sh::TField"** [ %25, %24 ], [ %5, %1 ]
  %11 = load %"class.sh::TField"*, %"class.sh::TField"** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %11, i64 0, i32 0
  %13 = load %"class.sh::TType"*, %"class.sh::TType"** %12, align 8
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -8
  %17 = icmp ult i32 %16, 43
  br i1 %17, label %27, label %18

18:                                               ; preds = %9
  %19 = icmp eq i32 %15, 90
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %13, i64 0, i32 13
  %22 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %21, align 8
  %23 = tail call fastcc zeroext i1 @_ZN2sh12_GLOBAL__N_115ContainsSamplerEPKNS_10TStructureE(%"class.sh::TStructure"* %22) #17
  br i1 %23, label %27, label %24

24:                                               ; preds = %18, %20
  %25 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %10, i64 1
  %26 = icmp eq %"class.sh::TField"** %25, %7
  br i1 %26, label %27, label %9

27:                                               ; preds = %20, %9, %24, %1
  %28 = phi i1 [ false, %1 ], [ false, %24 ], [ true, %9 ], [ true, %20 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext37checkDeclaratorLocationIsNotSpecifiedERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"* nocapture readonly dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext27checkLocationIsNotSpecifiedERKNS_10TSourceLocERKNS_16TLayoutQualifierE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TLayoutQualifier"* nocapture readonly dereferenceable(92)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 309
  %11 = select i1 %10, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.86, i64 0, i64 0)
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %13 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %12, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %13, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %14

14:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext34checkStd430IsForShaderStorageBlockERKNS_10TSourceLocERKNS_19TLayoutBlockStorageERKNS_10TQualifierE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %5 = load i32, i32* %2, align 4
  %6 = icmp ne i32 %5, 4
  %7 = load i32, i32* %3, align 4
  %8 = icmp eq i32 %7, 7
  %9 = or i1 %6, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %12 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %11, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %12, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %13

13:                                               ; preds = %4, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext32checkOutParameterIsNotOpaqueTypeERKNS_10TSourceLocENS_10TQualifierERKNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, %"class.sh::TType"* nocapture readonly dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -8
  %8 = icmp ult i32 %7, 43
  %9 = add i32 %6, -51
  %10 = icmp ult i32 %9, 33
  %11 = or i1 %8, %10
  %12 = icmp eq i32 %6, 6
  %13 = or i1 %12, %11
  %14 = add i32 %6, -84
  %15 = icmp ult i32 %14, 6
  %16 = or i1 %15, %13
  br i1 %16, label %17, label %21

17:                                               ; preds = %4
  %18 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %6) #17
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.90, i64 0, i64 0), i8* %18) #17
  br label %21

21:                                               ; preds = %4, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2sh13TParseContext21checkIsValidArraySizeERKNS_10TSourceLocEPNS_12TIntermTypedE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %2, i64 0, i32 0
  %5 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %6 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %6, i64 5
  %8 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %7, align 8
  %9 = tail call %"class.sh::TIntermConstantUnion"* %8(%"class.sh::TIntermNode"* %4) #17
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %2) #17
  %15 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 2
  %18 = icmp eq %"class.sh::TIntermConstantUnion"* %9, null
  %19 = or i1 %18, %17
  br i1 %19, label %74, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %9, i64 0, i32 0, i32 0
  %22 = bitcast %"class.sh::TIntermConstantUnion"* %9 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %23 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %23, i64 31
  %25 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %24, align 8
  %26 = tail call dereferenceable(184) %"class.sh::TType"* %25(%"class.sh::TIntermTyped"* %21) #17
  %27 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 8
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 1
  br i1 %29, label %30, label %74

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 9
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 1
  br i1 %33, label %34, label %74

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 13
  %36 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %35, align 8
  %37 = icmp eq %"class.sh::TStructure"* %36, null
  br i1 %37, label %38, label %74

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 10, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %74

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %26, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -3
  %46 = icmp ult i32 %45, 2
  br i1 %46, label %47, label %74

47:                                               ; preds = %42
  %48 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %22, align 8
  %49 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %48, i64 31
  %50 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %49, align 8
  %51 = tail call dereferenceable(184) %"class.sh::TType"* %50(%"class.sh::TIntermTyped"* %21) #17
  %52 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %51, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 4
  %55 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %9, i64 0, i32 1
  %56 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %55, align 8
  %57 = icmp eq %"class.sh::TConstantUnion"* %56, null
  br i1 %54, label %58, label %61

58:                                               ; preds = %47
  br i1 %57, label %74, label %59

59:                                               ; preds = %58
  %60 = tail call i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"* nonnull %56) #17
  br label %65

61:                                               ; preds = %47
  br i1 %57, label %74, label %62

62:                                               ; preds = %61
  %63 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* nonnull %56) #17
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %62, %59
  %66 = phi i32 [ %60, %59 ], [ %63, %62 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 63
  %70 = load i32, i32* %69, align 8
  %71 = tail call zeroext i1 @_ZN2sh12IsOutputHLSLE14ShShaderOutput(i32 %70) #17
  %72 = icmp ugt i32 %66, 65536
  %73 = and i1 %72, %71
  br i1 %73, label %74, label %78

74:                                               ; preds = %68, %65, %58, %61, %62, %3, %42, %38, %34, %30, %20
  %75 = phi i8* [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), %20 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), %30 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), %34 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), %38 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), %42 ], [ getelementptr inbounds ([49 x i8], [49 x i8]* @.str.91, i64 0, i64 0), %3 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.92, i64 0, i64 0), %62 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.93, i64 0, i64 0), %61 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.93, i64 0, i64 0), %58 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @.str.93, i64 0, i64 0), %65 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0), %68 ]
  %76 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %77 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %76, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %77, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %75, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %78

78:                                               ; preds = %74, %68
  %79 = phi i32 [ %66, %68 ], [ 1, %74 ]
  ret i32 %79
}

declare zeroext i1 @_ZN2sh12IsOutputHLSLE14ShShaderOutput(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext29checkIsValidQualifierForArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TType", align 8
  %5 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %18 [
    i32 3, label %11
    i32 9, label %11
    i32 2, label %7
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 300
  br i1 %10, label %11, label %18

11:                                               ; preds = %3, %3, %7
  %12 = bitcast %"class.sh::TType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %12) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %4, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %14) #17
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %17 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %16, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %17, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.95, i64 0, i64 0), i8* %15) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %12) #17
  br label %18

18:                                               ; preds = %7, %3, %11
  %19 = phi i1 [ false, %11 ], [ true, %3 ], [ true, %7 ]
  ret i1 %19
}

declare void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"*, %"struct.sh::TPublicType"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext27checkArrayElementIsNotArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TInfoSinkBase", align 8
  %5 = alloca %"class.sh::TType", align 8
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 310
  br i1 %8, label %9, label %38

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"* %2) #17
  br i1 %10, label %11, label %38

11:                                               ; preds = %9
  %12 = bitcast %"class.sh::TInfoSinkBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 48, i1 false) #17
  %15 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %15) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %5, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %16 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %4, %"class.sh::TType"* nonnull dereferenceable(184) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %15) #17
  %17 = bitcast %"class.sh::TInfoSinkBase"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %13, align 8
  %22 = select i1 %20, i8* %21, i8* %12
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.96, i64 0, i64 0), i8* %22) #17
  %25 = load i32*, i32** %14, align 8
  %26 = icmp eq i32* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %4, i64 0, i32 1, i32 0, i32 1
  %29 = ptrtoint i32* %25 to i64
  %30 = bitcast i32** %28 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast i32* %25 to i8*
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %27, %11
  %33 = load i8, i8* %18, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #17
  br label %38

38:                                               ; preds = %3, %9, %37
  %39 = phi i1 [ false, %37 ], [ true, %9 ], [ true, %3 ]
  ret i1 %39
}

declare zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext23checkArrayOfArraysInOutERKNS_10TSourceLocERKNS_11TPublicTypeERKNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::TType"* nocapture readonly dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"class.sh::TType", align 8
  %7 = alloca %"class.sh::TType", align 8
  %8 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %11, label %35

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %35 [
    i32 11, label %14
    i32 12, label %21
    i32 10, label %28
    i32 13, label %28
  ]

14:                                               ; preds = %11
  %15 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %15) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %5, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %5, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %17) #17
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.97, i64 0, i64 0), i8* %18) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %15) #17
  br label %35

21:                                               ; preds = %11
  %22 = bitcast %"class.sh::TType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %22) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %6, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %6, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %24) #17
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %27 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %26, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %27, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.98, i64 0, i64 0), i8* %25) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %22) #17
  br label %35

28:                                               ; preds = %11, %11
  %29 = bitcast %"class.sh::TType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %29) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %7, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %30 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %7, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %31) #17
  %33 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %34 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %33, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %34, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.99, i64 0, i64 0), i8* %32) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %29) #17
  br label %35

35:                                               ; preds = %4, %11, %28, %21, %14
  %36 = phi i1 [ false, %14 ], [ false, %21 ], [ false, %28 ], [ true, %11 ], [ true, %4 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext36checkIsValidTypeAndQualifierForArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TType", align 8
  %5 = alloca %"class.sh::TInfoSinkBase", align 8
  %6 = alloca %"class.sh::TType", align 8
  %7 = tail call zeroext i1 @_ZN2sh13TParseContext27checkArrayElementIsNotArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.sh::TPublicType"* dereferenceable(160) %2)
  br i1 %7, label %8, label %77

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 299
  br i1 %11, label %12, label %64

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 90
  br i1 %15, label %16, label %64

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = tail call zeroext i1 @_ZN2sh9IsVaryingENS_10TQualifierE(i32 %18) #17
  br i1 %19, label %20, label %64

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %17, align 4
  %24 = tail call zeroext i1 @_ZN2sh21IsGeometryShaderInputEjNS_10TQualifierE(i32 %22, i32 %23) #17
  br i1 %24, label %64, label %25

25:                                               ; preds = %20
  %26 = load i32, i32* %21, align 4
  %27 = load i32, i32* %17, align 4
  %28 = tail call zeroext i1 @_ZN2sh32IsTessellationControlShaderInputEjNS_10TQualifierE(i32 %26, i32 %27) #17
  br i1 %28, label %64, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %21, align 4
  %31 = load i32, i32* %17, align 4
  %32 = tail call zeroext i1 @_ZN2sh35IsTessellationEvaluationShaderInputEjNS_10TQualifierE(i32 %30, i32 %31) #17
  br i1 %32, label %64, label %33

33:                                               ; preds = %29
  %34 = load i32, i32* %21, align 4
  %35 = load i32, i32* %17, align 4
  %36 = tail call zeroext i1 @_ZN2sh33IsTessellationControlShaderOutputEjNS_10TQualifierE(i32 %34, i32 %35) #17
  br i1 %36, label %64, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.sh::TInfoSinkBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #17
  %39 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 48, i1 false) #17
  %41 = bitcast %"class.sh::TType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %41) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %6, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %42 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %5, %"class.sh::TType"* nonnull dereferenceable(184) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %41) #17
  %43 = bitcast %"class.sh::TInfoSinkBase"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %39, align 8
  %48 = select i1 %46, i8* %47, i8* %38
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %50 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %49, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %50, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.100, i64 0, i64 0), i8* %48) #17
  %51 = load i32*, i32** %40, align 8
  %52 = icmp eq i32* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %5, i64 0, i32 1, i32 0, i32 1
  %55 = ptrtoint i32* %51 to i64
  %56 = bitcast i32** %54 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast i32* %51 to i8*
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %53, %37
  %59 = load i8, i8* %44, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %58, %61
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #17
  br label %77

64:                                               ; preds = %33, %29, %25, %20, %16, %12, %8
  %65 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  switch i32 %66, label %77 [
    i32 3, label %70
    i32 9, label %70
    i32 2, label %67
  ]

67:                                               ; preds = %64
  %68 = load i32, i32* %9, align 8
  %69 = icmp slt i32 %68, 300
  br i1 %69, label %70, label %77

70:                                               ; preds = %67, %64, %64
  %71 = bitcast %"class.sh::TType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %71) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %4, %"struct.sh::TPublicType"* dereferenceable(160) %2) #17
  %72 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %4, i64 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %73) #17
  %75 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %76 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %75, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %76, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.95, i64 0, i64 0), i8* %74) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %71) #17
  br label %77

77:                                               ; preds = %70, %67, %64, %3, %63
  %78 = phi i1 [ false, %63 ], [ false, %3 ], [ false, %70 ], [ true, %64 ], [ true, %67 ]
  ret i1 %78
}

declare zeroext i1 @_ZN2sh9IsVaryingENS_10TQualifierE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh21IsGeometryShaderInputEjNS_10TQualifierE(i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh32IsTessellationControlShaderInputEjNS_10TQualifierE(i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh35IsTessellationEvaluationShaderInputEjNS_10TQualifierE(i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh33IsTessellationControlShaderOutputEjNS_10TQualifierE(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext36checkCanBeDeclaredWithoutInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TType"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  store i32 0, i32* %5, align 8
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 300
  br i1 %11, label %12, label %21

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"* %3) #17
  br i1 %13, label %14, label %21

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  %17 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %18
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.101, i64 0, i64 0), i8* %20) #17
  br label %28

21:                                               ; preds = %12, %8
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %23 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  %24 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  %27 = select i1 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %25
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %23, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i8* %27) #17
  br label %28

28:                                               ; preds = %14, %21, %4
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -36487
  %32 = icmp ult i32 %31, 2
  br i1 %32, label %55, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 %35
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %42 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  br label %43

43:                                               ; preds = %37, %52
  %44 = phi i32* [ %39, %37 ], [ %53, %52 ]
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %41, align 8
  %49 = load i8*, i8** %42, align 8
  %50 = icmp eq i8* %49, null
  %51 = select i1 %50, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %49
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %48, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.103, i64 0, i64 0), i8* %51) #17
  br label %52

52:                                               ; preds = %47, %43
  %53 = getelementptr inbounds i32, i32* %44, i64 1
  %54 = icmp eq i32* %53, %40
  br i1 %54, label %55, label %43

55:                                               ; preds = %52, %33, %28
  ret void
}

declare zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext15declareVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_5TTypeEPPNS_9TVariableE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, %"class.sh::TVariable"** nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca %"struct.std::__1::array.73", align 1
  %7 = alloca %"struct.std::__1::array.73", align 1
  %8 = alloca %"struct.std::__1::array.73", align 1
  %9 = alloca %"class.sh::ImmutableString", align 8
  %10 = alloca %"class.sh::ImmutableString", align 8
  %11 = alloca %"class.sh::ImmutableString", align 8
  %12 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %13 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %12, i64 40) #17
  %14 = bitcast i8* %13 to %"class.sh::TVariable"*
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %16 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  tail call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %14, %"class.sh::TSymbolTable"* %16, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"class.sh::TType"* %3, i8 zeroext 1, i8 zeroext 0) #17
  %17 = bitcast %"class.sh::TVariable"** %4 to i8**
  store i8* %13, i8** %17, align 8
  %18 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 10
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 20
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %20, label %24, label %32

24:                                               ; preds = %5
  br i1 %23, label %36, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %31 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %30, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %31, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %249

32:                                               ; preds = %5
  br i1 %23, label %36, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %35 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %34, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %35, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %36

36:                                               ; preds = %33, %32, %24, %25
  %37 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  %40 = select i1 %39, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %38
  %41 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.106, i64 0, i64 0)) #17
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = load i32, i32* %18, align 8
  %44 = icmp eq i32 %43, 13
  br i1 %44, label %45, label %52

45:                                               ; preds = %42, %36
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %47 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %46, align 8
  %48 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %47, i8 zeroext 15) #17
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %46, align 8
  %51 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %50, i8 zeroext 16) #17
  br i1 %51, label %59, label %52

52:                                               ; preds = %49, %42
  %53 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 22
  %54 = load i8, i8* %53, align 4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %58 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %57, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %58, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %72

59:                                               ; preds = %49, %45
  %60 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %46, align 8
  %61 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %60, i8 zeroext 16) #17
  br i1 %61, label %62, label %72

62:                                               ; preds = %59
  %63 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %46, align 8
  %64 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %63, i8 zeroext 15) #17
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 22
  %67 = load i8, i8* %66, align 4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %71 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %70, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %71, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %72

72:                                               ; preds = %69, %65, %56, %52, %59, %62
  tail call void @_ZN2sh13TParseContext19checkBindingIsValidERKNS_10TSourceLocERKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"class.sh::TType"* dereferenceable(184) %3)
  %73 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %226, label %76

76:                                               ; preds = %72
  %77 = load i8*, i8** %37, align 8
  %78 = icmp eq i8* %77, null
  %79 = select i1 %78, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %77
  %80 = tail call zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8* %79, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.106, i64 0, i64 0)) #17
  br i1 %80, label %81, label %124

81:                                               ; preds = %76
  %82 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %83 = bitcast %"class.sh::ImmutableString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #17
  %84 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %9, i64 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.107, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %9, i64 0, i32 1
  store i64 17, i64* %85, align 8
  %86 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %87 = load i32, i32* %86, align 8
  %88 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %82, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %9, i32 %87) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #17
  %89 = load i64, i64* %73, align 8
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %93 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %92, align 8
  %94 = load i8*, i8** %37, align 8
  %95 = icmp eq i8* %94, null
  %96 = select i1 %95, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %94
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %93, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.108, i64 0, i64 0), i8* %96) #17
  br label %249

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = add nsw i64 %89, -1
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %88, i64 1, i32 0, i32 1
  %104 = bitcast i64* %103 to %"class.sh::TConstantUnion"**
  %105 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %104, align 8
  %106 = call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %105) #17
  %107 = icmp eq i32 %102, %106
  br i1 %107, label %108, label %113

108:                                              ; preds = %97
  %109 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %110 = load i32, i32* %86, align 8
  %111 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %109, %"class.sh::ImmutableString"* dereferenceable(16) %2, i32 %110) #17
  %112 = icmp eq %"class.sh::TSymbol"* %111, null
  br i1 %112, label %226, label %119

113:                                              ; preds = %97
  %114 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %115 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %114, align 8
  %116 = load i8*, i8** %37, align 8
  %117 = icmp eq i8* %116, null
  %118 = select i1 %117, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %116
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %115, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.109, i64 0, i64 0), i8* %118) #17
  br label %249

119:                                              ; preds = %108
  %120 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %111, i64 0, i32 3
  %121 = load i8, i8* %120, align 1
  %122 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %122) #17
  store i8 %121, i8* %122, align 1
  %123 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %122) #17
  br i1 %123, label %228, label %226

124:                                              ; preds = %76
  %125 = load i64, i64* %73, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %226, label %127

127:                                              ; preds = %124
  %128 = load i8*, i8** %37, align 8
  %129 = icmp eq i8* %128, null
  %130 = select i1 %129, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %128
  %131 = tail call i32 @strcmp(i8* %130, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i64 0, i64 0)) #19
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %178

133:                                              ; preds = %127
  %134 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %135 = bitcast %"class.sh::ImmutableString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #17
  %136 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %10, i64 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.111, i64 0, i64 0), i8** %136, align 8
  %137 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %10, i64 0, i32 1
  store i64 19, i64* %137, align 8
  %138 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %139 = load i32, i32* %138, align 8
  %140 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %134, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %10, i32 %139) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #17
  %141 = icmp eq %"class.sh::TSymbol"* %140, null
  br i1 %141, label %226, label %142

142:                                              ; preds = %133
  %143 = load i64, i64* %73, align 8
  %144 = icmp ugt i64 %143, 1
  br i1 %144, label %145, label %151

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %147 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %146, align 8
  %148 = load i8*, i8** %37, align 8
  %149 = icmp eq i8* %148, null
  %150 = select i1 %149, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %148
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %147, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.112, i64 0, i64 0), i8* %150) #17
  br label %249

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = add nsw i64 %143, -1
  %155 = getelementptr inbounds i32, i32* %153, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %140, i64 1, i32 0, i32 1
  %158 = bitcast i64* %157 to %"class.sh::TConstantUnion"**
  %159 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %158, align 8
  %160 = call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %159) #17
  %161 = icmp sgt i32 %156, %160
  br i1 %161, label %167, label %162

162:                                              ; preds = %151
  %163 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %164 = load i32, i32* %138, align 8
  %165 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %163, %"class.sh::ImmutableString"* dereferenceable(16) %2, i32 %164) #17
  %166 = icmp eq %"class.sh::TSymbol"* %165, null
  br i1 %166, label %226, label %173

167:                                              ; preds = %151
  %168 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %169 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %168, align 8
  %170 = load i8*, i8** %37, align 8
  %171 = icmp eq i8* %170, null
  %172 = select i1 %171, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %170
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %169, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.113, i64 0, i64 0), i8* %172) #17
  br label %249

173:                                              ; preds = %162
  %174 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %165, i64 0, i32 3
  %175 = load i8, i8* %174, align 1
  %176 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %176) #17
  store i8 %175, i8* %176, align 1
  %177 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %176) #17
  br i1 %177, label %228, label %226

178:                                              ; preds = %127
  %179 = tail call i32 @strcmp(i8* %130, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i64 0, i64 0)) #19
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %226

181:                                              ; preds = %178
  %182 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %183 = bitcast %"class.sh::ImmutableString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #17
  %184 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.115, i64 0, i64 0), i8** %184, align 8
  %185 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %11, i64 0, i32 1
  store i64 19, i64* %185, align 8
  %186 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %187 = load i32, i32* %186, align 8
  %188 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %182, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %11, i32 %187) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #17
  %189 = icmp eq %"class.sh::TSymbol"* %188, null
  br i1 %189, label %226, label %190

190:                                              ; preds = %181
  %191 = load i64, i64* %73, align 8
  %192 = icmp ugt i64 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %195 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %194, align 8
  %196 = load i8*, i8** %37, align 8
  %197 = icmp eq i8* %196, null
  %198 = select i1 %197, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %196
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %195, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.116, i64 0, i64 0), i8* %198) #17
  br label %249

199:                                              ; preds = %190
  %200 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = add nsw i64 %191, -1
  %203 = getelementptr inbounds i32, i32* %201, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %188, i64 1, i32 0, i32 1
  %206 = bitcast i64* %205 to %"class.sh::TConstantUnion"**
  %207 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %206, align 8
  %208 = call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %207) #17
  %209 = icmp sgt i32 %204, %208
  br i1 %209, label %215, label %210

210:                                              ; preds = %199
  %211 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %212 = load i32, i32* %186, align 8
  %213 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %211, %"class.sh::ImmutableString"* dereferenceable(16) %2, i32 %212) #17
  %214 = icmp eq %"class.sh::TSymbol"* %213, null
  br i1 %214, label %226, label %221

215:                                              ; preds = %199
  %216 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %217 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %216, align 8
  %218 = load i8*, i8** %37, align 8
  %219 = icmp eq i8* %218, null
  %220 = select i1 %219, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %218
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %217, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.117, i64 0, i64 0), i8* %220) #17
  br label %249

221:                                              ; preds = %210
  %222 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %213, i64 0, i32 3
  %223 = load i8, i8* %222, align 1
  %224 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %224) #17
  store i8 %223, i8* %224, align 1
  %225 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %224) #17
  br i1 %225, label %228, label %226

226:                                              ; preds = %119, %173, %221, %124, %72, %133, %162, %108, %181, %210, %178
  %227 = call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"class.sh::ImmutableString"* dereferenceable(16) %2)
  br i1 %227, label %228, label %249

228:                                              ; preds = %119, %173, %221, %226
  %229 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %15, align 8
  %230 = bitcast %"class.sh::TVariable"** %4 to %"class.sh::TSymbol"**
  %231 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %230, align 8
  %232 = call zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"* %229, %"class.sh::TSymbol"* %231) #17
  br i1 %232, label %239, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %235 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %234, align 8
  %236 = load i8*, i8** %37, align 8
  %237 = icmp eq i8* %236, null
  %238 = select i1 %237, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %236
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %235, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i64 0, i64 0), i8* %238) #17
  br label %249

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 0
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %249

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %245 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %244, align 8
  %246 = load i8*, i8** %37, align 8
  %247 = icmp eq i8* %246, null
  %248 = select i1 %247, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %246
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %245, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0), i8* %248) #17
  br label %249

249:                                              ; preds = %243, %239, %193, %215, %145, %167, %91, %113, %233, %226, %29
  %250 = phi i1 [ false, %29 ], [ false, %233 ], [ false, %226 ], [ false, %113 ], [ false, %91 ], [ false, %167 ], [ false, %145 ], [ false, %215 ], [ false, %193 ], [ false, %243 ], [ true, %239 ]
  ret i1 %250
}

declare void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext24checkIndexIsNotSpecifiedERKNS_10TSourceLocEi(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %7 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %6, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %7, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext30checkNoncoherentIsNotSpecifiedERKNS_10TSourceLocEb(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  br i1 %2, label %4, label %7

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %7

7:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext27checkNoncoherentIsSpecifiedERKNS_10TSourceLocEb(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  br i1 %2, label %7, label %4

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %7

7:                                                ; preds = %3, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext19checkBindingIsValidERKNS_10TSourceLocERKNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 7, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %2) #17
  %7 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -51
  %10 = icmp ult i32 %9, 33
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = icmp sgt i32 %5, -1
  br i1 %12, label %13, label %48

13:                                               ; preds = %11
  %14 = add nsw i32 %6, %5
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 38
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %14, %16
  br i1 %17, label %18, label %48

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %48

21:                                               ; preds = %3
  %22 = add i32 %8, -8
  %23 = icmp ult i32 %22, 43
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = icmp sgt i32 %5, -1
  br i1 %25, label %26, label %48

26:                                               ; preds = %24
  %27 = add nsw i32 %6, %5
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 39
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %27, %29
  br i1 %30, label %31, label %48

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %33 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %32, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %33, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %48

34:                                               ; preds = %21
  %35 = icmp eq i32 %8, 6
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 43
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, %5
  br i1 %39, label %48, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %42 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %41, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %42, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %48

43:                                               ; preds = %34
  %44 = icmp eq i32 %5, -1
  br i1 %44, label %48, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %47 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %46, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %47, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %48

48:                                               ; preds = %45, %43, %40, %36, %31, %26, %24, %18, %13, %11
  ret void
}

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i32) local_unnamed_addr #3

declare i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext20checkCanUseExtensionERKNS_10TSourceLocENS_10TExtensionE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), i8 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.std::__1::array.73", align 1
  %5 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #17
  store i8 %2, i8* %5, align 1
  %6 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %4)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #17
  ret i1 %6
}

declare zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"*, %"class.sh::TSymbol"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext30checkIsParameterQualifierValidERKNS_10TSourceLocERKNS_21TTypeQualifierBuilderEPNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"class.sh::TType"* nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.sh::TTypeQualifier", align 4
  %6 = bitcast %"struct.sh::TTypeQualifier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %8 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZNK2sh21TTypeQualifierBuilder25getParameterTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* nonnull sret %5, %"class.sh::TTypeQualifierBuilder"* %2, %"class.sh::TDiagnostics"* %8) #17
  %9 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -15
  %12 = icmp ult i32 %11, 2
  br i1 %12, label %13, label %29

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -8
  %17 = icmp ult i32 %16, 43
  %18 = add i32 %15, -51
  %19 = icmp ult i32 %18, 33
  %20 = or i1 %17, %19
  %21 = icmp eq i32 %15, 6
  %22 = or i1 %21, %20
  %23 = add i32 %15, -84
  %24 = icmp ult i32 %23, 6
  %25 = or i1 %24, %22
  br i1 %25, label %26, label %29

26:                                               ; preds = %13
  %27 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %15) #17
  %28 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %28, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.90, i64 0, i64 0), i8* %27) #17
  br label %29

29:                                               ; preds = %26, %13, %4
  %30 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -51
  %33 = icmp ult i32 %32, 33
  %34 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 1
  br i1 %33, label %36, label %35

35:                                               ; preds = %29
  call void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TMemoryQualifier"* dereferenceable(5) %34, %"struct.sh::TSourceLoc"* dereferenceable(16) %1)
  br label %39

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 5, i32 0
  %38 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %34, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %37, i8* align 4 %38, i64 5, i1 false) #17
  br label %39

39:                                               ; preds = %36, %35
  %40 = load i32, i32* %9, align 4
  %41 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 2
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 1
  store i32 %43, i32* %46, align 4
  br label %47

47:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #17
  ret void
}

declare void @_ZNK2sh21TTypeQualifierBuilder25getParameterTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* sret, %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TDiagnostics"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TMemoryQualifier"* nocapture readonly dereferenceable(5), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string.38", align 8
  %5 = bitcast %"class.std::__1::basic_string.38"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = tail call i8* @_Znwm(i64 128) #18
  store i8* %8, i8** %6, align 8
  %9 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 127, i64 -9223372036854775680>, <2 x i64>* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* align 1 getelementptr inbounds ([128 x i8], [128 x i8]* @.str.194, i64 0, i64 0), i64 127, i1 false) #17
  %10 = getelementptr inbounds i8, i8* %8, i64 127
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %1, i64 0, i32 0
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* nonnull %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.195, i64 0, i64 0)) #17
  br label %17

17:                                               ; preds = %3, %14
  %18 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %1, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %6, align 8
  %27 = select i1 %25, i8* %26, i8* %5
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %29 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %28, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %29, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.196, i64 0, i64 0)) #17
  br label %30

30:                                               ; preds = %17, %21
  %31 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %1, i64 0, i32 2
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i8*, i8** %6, align 8
  %40 = select i1 %38, i8* %39, i8* %5
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %42 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %41, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %42, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.197, i64 0, i64 0)) #17
  br label %43

43:                                               ; preds = %30, %34
  %44 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %1, i64 0, i32 3
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %6, align 8
  %53 = select i1 %51, i8* %52, i8* %5
  %54 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %55 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %54, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %55, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i64 0, i64 0)) #17
  br label %56

56:                                               ; preds = %43, %47
  %57 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %1, i64 0, i32 4
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %59, label %69, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %6, align 8
  %66 = select i1 %64, i8* %65, i8* %5
  %67 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %68 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %67, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %68, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.199, i64 0, i64 0)) #17
  br label %69

69:                                               ; preds = %56, %61
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext30declarationQualifierErrorCheckENS_10TQualifierERKNS_16TLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TLayoutQualifier"* dereferenceable(92), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 59
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK2sh16TLayoutQualifier7isEmptyEv(%"struct.sh::TLayoutQualifier"* %2)
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %11

11:                                               ; preds = %8, %6, %4
  %12 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %15 [
    i32 0, label %20
    i32 2, label %14
    i32 1, label %16
  ]

14:                                               ; preds = %11
  br label %16

15:                                               ; preds = %11
  br label %16

16:                                               ; preds = %11, %14, %15
  %17 = phi i8* [ getelementptr inbounds ([23 x i8], [23 x i8]* @.str.450, i64 0, i64 0), %15 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i64 0, i64 0), %14 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.330, i64 0, i64 0), %11 ]
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %19 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %19, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.121, i64 0, i64 0), i8* nonnull %17) #17
  br label %118

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  switch i32 %22, label %26 [
    i32 0, label %31
    i32 4, label %25
    i32 1, label %27
    i32 2, label %23
    i32 3, label %24
  ]

23:                                               ; preds = %20
  br label %27

24:                                               ; preds = %20
  br label %27

25:                                               ; preds = %20
  br label %27

26:                                               ; preds = %20
  br label %27

27:                                               ; preds = %20, %23, %24, %25, %26
  %28 = phi i8* [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.452, i64 0, i64 0), %26 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0), %25 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.329, i64 0, i64 0), %24 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.328, i64 0, i64 0), %23 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.326, i64 0, i64 0), %20 ]
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %29, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.121, i64 0, i64 0), i8* nonnull %28) #17
  br label %118

31:                                               ; preds = %20
  %32 = icmp eq i32 %1, 10
  br i1 %32, label %33, label %44

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %53, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 9
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %43 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %43, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0)) #17
  br label %118

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 9
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %50 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %49, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %50, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0)) #17
  br label %51

51:                                               ; preds = %44, %48
  %52 = icmp eq i32 %1, 12
  br i1 %52, label %60, label %53

53:                                               ; preds = %33, %37, %51
  %54 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 10
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %59 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %58, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %59, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #17
  br label %60

60:                                               ; preds = %53, %57, %51
  %61 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %62 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %61, align 8
  %63 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %62, i8 zeroext 37) #17
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %61, align 8
  %66 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %65, i8 zeroext 38) #17
  br i1 %66, label %67, label %76

67:                                               ; preds = %60, %64
  %68 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %69 = load i32, i32* %68, align 8
  %70 = icmp slt i32 %69, 300
  %71 = icmp eq i32 %1, 9
  %72 = and i1 %71, %70
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %75 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %74, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %75, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0)) #17
  br label %76

76:                                               ; preds = %73, %67, %64
  %77 = add i32 %1, -9
  %78 = icmp ult i32 %77, 2
  %79 = zext i1 %78 to i8
  %80 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, 299
  br i1 %82, label %83, label %104

83:                                               ; preds = %76
  %84 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %61, align 8
  %85 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %84, i8 zeroext 15) #17
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %61, align 8
  %88 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %87, i8 zeroext 16) #17
  br i1 %88, label %89, label %93

89:                                               ; preds = %86, %83
  %90 = icmp eq i32 %1, 13
  %91 = or i1 %90, %78
  %92 = zext i1 %91 to i8
  br label %93

93:                                               ; preds = %89, %86
  %94 = phi i8 [ %79, %86 ], [ %92, %89 ]
  %95 = load i32, i32* %80, align 8
  %96 = icmp sgt i32 %95, 309
  br i1 %96, label %97, label %104

97:                                               ; preds = %93
  %98 = icmp ne i8 %94, 0
  %99 = icmp eq i32 %1, 6
  %100 = or i1 %99, %98
  br i1 %100, label %118, label %101

101:                                              ; preds = %97
  %102 = tail call zeroext i1 @_ZN2sh9IsVaryingENS_10TQualifierE(i32 %1) #17
  %103 = zext i1 %102 to i8
  br label %104

104:                                              ; preds = %76, %101, %93
  %105 = phi i8 [ %94, %93 ], [ %103, %101 ], [ %79, %76 ]
  %106 = and i8 %105, 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %118

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %118, label %112

112:                                              ; preds = %108
  %113 = load i32, i32* %80, align 8
  %114 = icmp sgt i32 %113, 309
  %115 = select i1 %114, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.86, i64 0, i64 0)
  %116 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %117 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %116, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %117, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* %115, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %118

118:                                              ; preds = %97, %112, %108, %104, %41, %27, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2sh16TLayoutQualifier7isEmptyEv(%"struct.sh::TLayoutQualifier"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %84

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %84

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %84

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %84

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 9
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %84

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 10
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %84

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %84

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %84

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 4
  %35 = tail call zeroext i1 @_ZNK2sh13WorkGroupSize13isAnyValueSetEv(%"struct.sh::WorkGroupSize"* %34) #17
  br i1 %35, label %84, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %84

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %84

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 13
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %84

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 14
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %84

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 15
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %84

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 16
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %84

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 17
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %84

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 18
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %84

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 19
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 20
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 21
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 22
  %82 = load i8, i8* %81, align 4, !range !2
  %83 = icmp eq i8 %82, 0
  br label %84

84:                                               ; preds = %80, %76, %72, %68, %64, %60, %56, %52, %48, %44, %40, %36, %33, %29, %25, %21, %17, %13, %9, %5, %1
  %85 = phi i1 [ false, %76 ], [ false, %72 ], [ false, %68 ], [ false, %64 ], [ false, %60 ], [ false, %56 ], [ false, %52 ], [ false, %48 ], [ false, %44 ], [ false, %40 ], [ false, %36 ], [ false, %33 ], [ false, %29 ], [ false, %25 ], [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %83, %80 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext22checkYuvIsNotSpecifiedERKNS_10TSourceLocEb(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  br i1 %2, label %4, label %7

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0)) #17
  br label %7

7:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext37checkEarlyFragmentTestsIsNotSpecifiedERKNS_10TSourceLocEb(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  br i1 %2, label %4, label %7

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %6 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %5, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %6, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #17
  br label %7

7:                                                ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext32atomicCounterQualifierErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TPublicType"* nocapture readonly dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %17

17:                                               ; preds = %10, %14
  %18 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %23 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %23, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %24

24:                                               ; preds = %21, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext26emptyDeclarationErrorCheckERKNS_5TTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TType"* dereferenceable(184), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %1) #17
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %7 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %6, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %7, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %8

8:                                                ; preds = %5, %3
  %9 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 10
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 7, i32 20
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %18 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %17, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %18, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %19

19:                                               ; preds = %16, %12, %8
  ret void
}

declare zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* readonly, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string.38", align 8
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"class.sh::TType", align 8
  %7 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %9 [
    i32 4, label %12
    i32 5, label %12
    i32 3, label %12
    i32 9, label %12
    i32 10, label %12
    i32 13, label %12
    i32 60, label %12
    i32 7, label %20
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  br label %28

12:                                               ; preds = %3, %3, %3, %3, %3, %3, %3
  %13 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 90
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %8)
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %19 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %19, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.131, i64 0, i64 0), i8* %17) #17
  br label %234

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 91
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 7)
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %27 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %26, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %27, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.132, i64 0, i64 0), i8* %25) #17
  br label %234

28:                                               ; preds = %9, %20, %12
  %29 = phi i32 [ %11, %9 ], [ 91, %20 ], [ %14, %12 ]
  %30 = bitcast %"class.std::__1::basic_string.38"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string.38"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  %36 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %29) #17
  %37 = tail call i64 @strlen(i8* %36) #17
  %38 = icmp ugt i64 %37, -17
  br i1 %38, label %39, label %41

39:                                               ; preds = %28
  %40 = bitcast %"class.std::__1::basic_string.38"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %40) #20
  unreachable

41:                                               ; preds = %28
  %42 = icmp ult i64 %37, 23
  br i1 %42, label %48, label %43

43:                                               ; preds = %41
  %44 = add nuw i64 %37, 16
  %45 = and i64 %44, -16
  %46 = tail call i8* @_Znwm(i64 %45) #18
  store i8* %46, i8** %31, align 8
  %47 = or i64 %45, -9223372036854775808
  store i64 %47, i64* %33, align 8
  store i64 %37, i64* %32, align 8
  br label %53

48:                                               ; preds = %41
  %49 = trunc i64 %37 to i8
  %50 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 %49, i8* %51, align 1
  %52 = icmp eq i64 %37, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48, %43
  %54 = phi i8* [ %46, %43 ], [ %30, %48 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %36, i64 %37, i1 false) #17
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i8* [ %30, %48 ], [ %54, %53 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 %37
  store i8 0, i8* %57, align 1
  %58 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i64 0, i64 0)) #17
  %59 = load i32, i32* %7, align 4
  %60 = icmp eq i32 %59, 6
  br i1 %60, label %73, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0
  %63 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = load i8*, i8** %31, align 8
  %68 = select i1 %66, i8* %67, i8* %30
  %69 = call zeroext i1 @_ZN2sh13TParseContext20checkIsNotOpaqueTypeERKNS_10TSourceLocERKNS_22TTypeSpecifierNonArrayEPKc(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"struct.sh::TTypeSpecifierNonArray"* dereferenceable(40) %62, i8* %68)
  br i1 %69, label %70, label %226

70:                                               ; preds = %61
  %71 = load i32, i32* %7, align 4
  %72 = icmp ult i32 %71, 3
  br i1 %72, label %136, label %73

73:                                               ; preds = %55, %70
  %74 = phi i32 [ %71, %70 ], [ 6, %55 ]
  %75 = load i32, i32* %34, align 8
  %76 = icmp eq i32 %75, 7
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %74)
  %79 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %80 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %79, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %80, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.134, i64 0, i64 0), i8* %78) #17
  br label %226

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %83 = load i32, i32* %82, align 8
  %84 = icmp sgt i32 %83, 309
  %85 = icmp eq i32 %74, 6
  %86 = and i1 %85, %84
  br i1 %86, label %87, label %109

87:                                               ; preds = %81
  %88 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %88) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 184, i1 false)
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %5, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %89 = call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* nonnull %5) #17
  br i1 %89, label %107, label %90

90:                                               ; preds = %87
  %91 = call i32 @_ZNK2sh5TType16getLocationCountEv(%"class.sh::TType"* nonnull %5) #17
  %92 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, -1
  br i1 %94, label %95, label %107

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 40
  %97 = load i32, i32* %96, align 8
  %98 = icmp sge i32 %93, %97
  %99 = icmp slt i32 %97, %91
  %100 = or i1 %98, %99
  %101 = add i32 %93, %91
  %102 = icmp ugt i32 %101, %97
  %103 = or i1 %102, %100
  br i1 %103, label %104, label %107

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %106 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %105, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %106, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %107

107:                                              ; preds = %104, %95, %90, %87
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %88) #17
  %108 = load i32, i32* %7, align 4
  br label %109

109:                                              ; preds = %107, %81
  %110 = phi i32 [ %108, %107 ], [ %74, %81 ]
  %111 = load i32, i32* %82, align 8
  %112 = icmp sgt i32 %111, 299
  %113 = icmp eq i32 %110, 9
  %114 = and i1 %112, %113
  br i1 %114, label %115, label %136

115:                                              ; preds = %109
  %116 = bitcast %"class.sh::TType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %116) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 184, i1 false)
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %6, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %117 = call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* nonnull %6) #17
  br i1 %117, label %135, label %118

118:                                              ; preds = %115
  %119 = call i32 @_ZNK2sh5TType16getLocationCountEv(%"class.sh::TType"* nonnull %6) #17
  %120 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, -1
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 42
  %125 = load i32, i32* %124, align 8
  %126 = icmp sge i32 %121, %125
  %127 = icmp slt i32 %125, %119
  %128 = or i1 %126, %127
  %129 = add i32 %121, %119
  %130 = icmp ugt i32 %129, %125
  %131 = or i1 %130, %128
  br i1 %131, label %132, label %135

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %134 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %133, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %134, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %135

135:                                              ; preds = %132, %123, %118, %115
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %116) #17
  br label %136

136:                                              ; preds = %70, %135, %109
  %137 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 6
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 7
  %140 = load i32, i32* %139, align 4
  %141 = load i32, i32* %34, align 8
  %142 = add i32 %141, -51
  %143 = icmp ult i32 %142, 33
  br i1 %143, label %144, label %178

144:                                              ; preds = %136
  switch i32 %140, label %163 [
    i32 1, label %145
    i32 2, label %145
    i32 3, label %145
    i32 12, label %145
    i32 13, label %145
    i32 8, label %150
    i32 9, label %150
    i32 10, label %150
    i32 11, label %150
    i32 4, label %155
    i32 5, label %155
    i32 6, label %155
    i32 7, label %155
    i32 0, label %160
  ]

145:                                              ; preds = %144, %144, %144, %144, %144
  switch i32 %141, label %146 [
    i32 63, label %166
    i32 51, label %166
    i32 54, label %166
    i32 66, label %166
    i32 57, label %166
    i32 60, label %166
    i32 69, label %166
    i32 72, label %166
    i32 75, label %166
    i32 78, label %166
    i32 81, label %166
  ]

146:                                              ; preds = %145
  %147 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %141) #17
  %148 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %149 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %148, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %149, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.135, i64 0, i64 0), i8* %147) #17
  br label %226

150:                                              ; preds = %144, %144, %144, %144
  switch i32 %141, label %151 [
    i32 64, label %166
    i32 52, label %166
    i32 55, label %166
    i32 67, label %166
    i32 58, label %166
    i32 61, label %166
    i32 70, label %166
    i32 73, label %166
    i32 76, label %166
    i32 79, label %166
    i32 82, label %166
  ]

151:                                              ; preds = %150
  %152 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %141) #17
  %153 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %154 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %153, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %154, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.136, i64 0, i64 0), i8* %152) #17
  br label %226

155:                                              ; preds = %144, %144, %144, %144
  switch i32 %141, label %156 [
    i32 65, label %166
    i32 53, label %166
    i32 56, label %166
    i32 68, label %166
    i32 59, label %166
    i32 62, label %166
    i32 71, label %166
    i32 74, label %166
    i32 77, label %166
    i32 80, label %166
    i32 83, label %166
  ]

156:                                              ; preds = %155
  %157 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %141) #17
  %158 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %159 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %158, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %159, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.137, i64 0, i64 0), i8* %157) #17
  br label %226

160:                                              ; preds = %144
  %161 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %162 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %161, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %162, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.139, i64 0, i64 0)) #17
  br label %226

163:                                              ; preds = %144
  %164 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %165 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %164, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %165, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.140, i64 0, i64 0)) #17
  br label %226

166:                                              ; preds = %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %150, %150, %150, %150, %150, %150, %150, %150, %150, %150, %150, %145, %145, %145, %145, %145, %145, %145, %145, %145, %145, %145
  switch i32 %140, label %167 [
    i32 3, label %221
    i32 11, label %221
    i32 7, label %221
  ]

167:                                              ; preds = %166
  %168 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 2, i32 0
  %169 = load i8, i8* %168, align 4, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %221

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 2, i32 1
  %173 = load i8, i8* %172, align 1, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %221

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %177 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %176, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %177, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.141, i64 0, i64 0)) #17
  br label %226

178:                                              ; preds = %136
  switch i32 %140, label %191 [
    i32 0, label %196
    i32 1, label %192
    i32 2, label %179
    i32 3, label %180
    i32 4, label %181
    i32 5, label %182
    i32 6, label %183
    i32 7, label %184
    i32 8, label %185
    i32 9, label %186
    i32 10, label %187
    i32 11, label %188
    i32 12, label %189
    i32 13, label %190
  ]

179:                                              ; preds = %178
  br label %192

180:                                              ; preds = %178
  br label %192

181:                                              ; preds = %178
  br label %192

182:                                              ; preds = %178
  br label %192

183:                                              ; preds = %178
  br label %192

184:                                              ; preds = %178
  br label %192

185:                                              ; preds = %178
  br label %192

186:                                              ; preds = %178
  br label %192

187:                                              ; preds = %178
  br label %192

188:                                              ; preds = %178
  br label %192

189:                                              ; preds = %178
  br label %192

190:                                              ; preds = %178
  br label %192

191:                                              ; preds = %178
  br label %192

192:                                              ; preds = %191, %190, %189, %188, %187, %186, %185, %184, %183, %182, %181, %180, %179, %178
  %193 = phi i8* [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.520, i64 0, i64 0), %191 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.337, i64 0, i64 0), %190 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0), %189 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0), %188 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i64 0, i64 0), %187 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i64 0, i64 0), %186 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.338, i64 0, i64 0), %185 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), %184 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.344, i64 0, i64 0), %183 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i64 0, i64 0), %182 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.342, i64 0, i64 0), %181 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.335, i64 0, i64 0), %180 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.334, i64 0, i64 0), %179 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.333, i64 0, i64 0), %178 ]
  %194 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %195 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %194, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %195, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.145, i64 0, i64 0), i8* nonnull %193) #17
  br label %196

196:                                              ; preds = %192, %178
  %197 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 2
  call void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TMemoryQualifier"* dereferenceable(5) %197, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  %198 = load i32, i32* %34, align 8
  %199 = icmp eq i32 %198, 6
  br i1 %199, label %200, label %221

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 6
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 3
  br i1 %203, label %207, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %206 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %205, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %206, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %207

207:                                              ; preds = %204, %200
  %208 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = icmp eq i32 %209, -1
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %213 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %212, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %213, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %214

214:                                              ; preds = %211, %207
  %215 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 5
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, -1
  br i1 %217, label %218, label %226

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %220 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %219, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %220, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %226

221:                                              ; preds = %166, %166, %166, %167, %171, %196
  %222 = icmp eq i32 %138, -1
  br i1 %222, label %226, label %223

223:                                              ; preds = %221
  %224 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %225 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %224, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %225, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i64 0, i64 0)) #17
  br label %226

226:                                              ; preds = %223, %221, %218, %214, %146, %151, %156, %160, %163, %175, %61, %77
  %227 = bitcast %"class.std::__1::basic_string.38"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  %232 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %232) #18
  br label %233

233:                                              ; preds = %226, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #17
  br label %234

234:                                              ; preds = %233, %16, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32) local_unnamed_addr #7 comdat {
  %2 = icmp ult i32 %0, 91
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [91 x i8*], [91 x i8*]* @switch.table._ZN2sh18getQualifierStringENS_10TQualifierE, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6

7:                                                ; preds = %1
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.518, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext27checkUniformLocationInRangeERKNS_10TSourceLocEiRKNS_16TLayoutQualifierE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, %"struct.sh::TLayoutQualifier"* nocapture readonly dereferenceable(92)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %3, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 40
  %10 = load i32, i32* %9, align 8
  %11 = icmp sge i32 %6, %10
  %12 = icmp slt i32 %10, %2
  %13 = or i1 %11, %12
  %14 = add i32 %6, %2
  %15 = icmp ugt i32 %14, %10
  %16 = or i1 %15, %13
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %19 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %19, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %20

20:                                               ; preds = %8, %17, %4
  ret void
}

declare i32 @_ZNK2sh5TType16getLocationCountEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext29checkAttributeLocationInRangeERKNS_10TSourceLocEiRKNS_16TLayoutQualifierE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, %"struct.sh::TLayoutQualifier"* nocapture readonly dereferenceable(92)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %3, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, -1
  br i1 %7, label %8, label %20

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 42
  %10 = load i32, i32* %9, align 8
  %11 = icmp sge i32 %6, %10
  %12 = icmp slt i32 %10, %2
  %13 = or i1 %11, %12
  %14 = add i32 %6, %2
  %15 = icmp ugt i32 %14, %10
  %16 = or i1 %15, %13
  br i1 %16, label %17, label %20

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %19 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %19, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %20

20:                                               ; preds = %8, %17, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext33checkInternalFormatIsNotSpecifiedERKNS_10TSourceLocENS_26TLayoutImageInternalFormatE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  switch i32 %2, label %16 [
    i32 0, label %21
    i32 1, label %17
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 7, label %9
    i32 8, label %10
    i32 9, label %11
    i32 10, label %12
    i32 11, label %13
    i32 12, label %14
    i32 13, label %15
  ]

4:                                                ; preds = %3
  br label %17

5:                                                ; preds = %3
  br label %17

6:                                                ; preds = %3
  br label %17

7:                                                ; preds = %3
  br label %17

8:                                                ; preds = %3
  br label %17

9:                                                ; preds = %3
  br label %17

10:                                               ; preds = %3
  br label %17

11:                                               ; preds = %3
  br label %17

12:                                               ; preds = %3
  br label %17

13:                                               ; preds = %3
  br label %17

14:                                               ; preds = %3
  br label %17

15:                                               ; preds = %3
  br label %17

16:                                               ; preds = %3
  br label %17

17:                                               ; preds = %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15, %16
  %18 = phi i8* [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.520, i64 0, i64 0), %16 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.337, i64 0, i64 0), %15 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0), %14 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0), %13 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i64 0, i64 0), %12 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i64 0, i64 0), %11 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.338, i64 0, i64 0), %10 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.344, i64 0, i64 0), %8 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i64 0, i64 0), %7 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.342, i64 0, i64 0), %6 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.335, i64 0, i64 0), %5 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.334, i64 0, i64 0), %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.333, i64 0, i64 0), %3 ]
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.145, i64 0, i64 0), i8* nonnull %18) #17
  br label %21

21:                                               ; preds = %3, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext25checkOffsetIsNotSpecifiedERKNS_10TSourceLocEi(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %7 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %6, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %7, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i64 0, i64 0)) #17
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

declare i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext24checkImageBindingIsValidERKNS_10TSourceLocEii(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp sgt i32 %2, -1
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = add nsw i32 %3, %2
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 38
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %13 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %12, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %13, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %14

14:                                               ; preds = %11, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext26checkSamplerBindingIsValidERKNS_10TSourceLocEii(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, i32) local_unnamed_addr #2 align 2 {
  %5 = icmp sgt i32 %2, -1
  br i1 %5, label %6, label %14

6:                                                ; preds = %4
  %7 = add nsw i32 %3, %2
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 39
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %7, %9
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %13 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %12, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %13, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %14

14:                                               ; preds = %11, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext32checkAtomicCounterBindingIsValidERKNS_10TSourceLocEi(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 43
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, %2
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext26checkBindingIsNotSpecifiedERKNS_10TSourceLocEi(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %7 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %6, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %7, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext26checkCanUseLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 300
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.std::__1::array.74"* nonnull dereferenceable(2) @_ZZN2sh13TParseContext26checkCanUseLayoutQualifierERKNS_10TSourceLocEE10extensions)
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %11

11:                                               ; preds = %8, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext29checkLayoutQualifierSupportedERKNS_10TSourceLocERKNS_15ImmutableStringEi(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, %3
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  %11 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %12
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %14) #17
  br label %15

15:                                               ; preds = %4, %8
  %16 = phi i1 [ false, %8 ], [ true, %4 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext32checkWorkGroupSizeIsNotSpecifiedERKNS_10TSourceLocERKNS_16TLayoutQualifierE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TLayoutQualifier"* dereferenceable(92)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %2, i64 0, i32 4
  %5 = tail call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %4) #17
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %3, %13
  %8 = phi i64 [ %14, %13 ], [ 0, %3 ]
  %9 = tail call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %4, i64 %8) #17
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp ult i64 %8, 3
  br i1 %12, label %17, label %20

13:                                               ; preds = %7
  %14 = add nuw i64 %8, 1
  %15 = tail call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %4) #17
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %7, label %24

17:                                               ; preds = %11
  %18 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %8
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %11, %17
  %21 = phi i8* [ %19, %17 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %11 ]
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %23 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %23, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.144, i64 0, i64 0), i8* nonnull %21) #17
  br label %24

24:                                               ; preds = %13, %3, %20
  %25 = phi i1 [ false, %20 ], [ true, %3 ], [ true, %13 ]
  ret i1 %25
}

declare i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"*) local_unnamed_addr #3

declare i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext24checkBlockBindingIsValidERKNS_10TSourceLocERKNS_10TQualifierEii(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i32* nocapture readonly dereferenceable(4), i32, i32) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %4, 0
  %7 = select i1 %6, i32 1, i32 %4
  %8 = load i32, i32* %2, align 4
  switch i32 %8, label %25 [
    i32 6, label %9
    i32 7, label %17
  ]

9:                                                ; preds = %5
  %10 = add nsw i32 %7, %3
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 41
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %10, %12
  br i1 %13, label %14, label %25

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %25

17:                                               ; preds = %5
  %18 = add nsw i32 %7, %3
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 44
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %25

25:                                               ; preds = %5, %22, %17, %9, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext26checkTCSOutVarIndexIsValidEPNS_13TIntermBinaryERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermBinary"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %1, i64 0, i32 3
  %5 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %5, i64 0, i32 0
  %7 = bitcast %"class.sh::TIntermTyped"* %5 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %8 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %8, i64 19
  %10 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %9, align 8
  %11 = tail call %"class.sh::TIntermSymbol"* %10(%"class.sh::TIntermNode"* %6) #17
  %12 = icmp eq %"class.sh::TIntermSymbol"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %3
  %14 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %11) #17
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = icmp eq i8* %15, null
  %17 = select i1 %16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %15
  %18 = tail call i32 @strcmp(i8* %17, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.164, i64 0, i64 0)) #19
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %13, %3
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %22, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %23

23:                                               ; preds = %13, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext34functionCallRValueLValueErrorCheckEPKNS_9TFunctionEPNS_16TIntermAggregateE(%"class.sh::TParseContext"*, %"class.sh::TFunction"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %114, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 3
  %9 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  br label %11

11:                                               ; preds = %7, %110
  %12 = phi i64 [ 0, %7 ], [ %111, %110 ]
  %13 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %8, align 8
  %14 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %13, i64 %12
  %15 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %14, align 8
  %16 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %15, i64 0, i32 1
  %17 = load %"class.sh::TType"*, %"class.sh::TType"** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %9, align 8
  %21 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %20, i64 32
  %22 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %21, align 8
  %23 = tail call %"class.sh::TVector.30"* %22(%"class.sh::TIntermAggregate"* %2) #17
  %24 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %24, align 8
  %26 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %25, i64 %12
  %27 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %26, align 8
  %28 = bitcast %"class.sh::TIntermNode"* %27 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %29 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %29, i64 4
  %31 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %30, align 8
  %32 = tail call %"class.sh::TIntermTyped"* %31(%"class.sh::TIntermNode"* %27) #17
  %33 = icmp ult i32 %19, 2
  br i1 %33, label %35, label %34

34:                                               ; preds = %11
  switch i32 %19, label %100 [
    i32 16, label %35
    i32 14, label %35
    i32 17, label %35
  ]

35:                                               ; preds = %34, %34, %34, %11
  br label %36

36:                                               ; preds = %35, %47
  %37 = phi %"class.sh::TIntermTyped"* [ %49, %47 ], [ %32, %35 ]
  %38 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %37, i64 0, i32 0
  %39 = bitcast %"class.sh::TIntermTyped"* %37 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %40 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %40, i64 12
  %42 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %41, align 8
  %43 = tail call %"class.sh::TIntermSwizzle"* %42(%"class.sh::TIntermNode"* %38) #17
  %44 = icmp eq %"class.sh::TIntermSwizzle"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %43, i64 0, i32 1
  br label %47

47:                                               ; preds = %62, %45
  %48 = phi %"class.sh::TIntermTyped"** [ %46, %45 ], [ %63, %62 ]
  %49 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %48, align 8
  br label %36

50:                                               ; preds = %36
  %51 = bitcast %"class.sh::TIntermTyped"* %37 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %52 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %52, i64 13
  %54 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %53, align 8
  %55 = tail call %"class.sh::TIntermBinary"* %54(%"class.sh::TIntermNode"* %38) #17
  %56 = icmp eq %"class.sh::TIntermBinary"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %55, i64 0, i32 0, i32 1
  %59 = load i8, i8* %58, align 8
  %60 = and i8 %59, -4
  %61 = icmp eq i8 %60, 44
  br i1 %61, label %62, label %75

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %55, i64 0, i32 2
  br label %47

64:                                               ; preds = %50
  %65 = bitcast %"class.sh::TIntermTyped"* %37 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %66 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %66, i64 19
  %68 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %67, align 8
  %69 = tail call %"class.sh::TIntermSymbol"* %68(%"class.sh::TIntermNode"* %38) #17
  %70 = icmp eq %"class.sh::TIntermSymbol"* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %64
  %72 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %10, align 8
  %73 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %69, i64 0, i32 1
  %74 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %73, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %72, %"class.sh::TVariable"* dereferenceable(40) %74) #17
  br label %75

75:                                               ; preds = %57, %64, %71
  %76 = bitcast %"class.sh::TIntermTyped"* %32 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %77 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %77, i64 31
  %79 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %78, align 8
  %80 = tail call dereferenceable(184) %"class.sh::TType"* %79(%"class.sh::TIntermTyped"* %32) #17
  %81 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, -51
  %84 = icmp ult i32 %83, 33
  br i1 %84, label %100, label %85

85:                                               ; preds = %75
  %86 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %76, align 8
  %87 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %86, i64 31
  %88 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %87, align 8
  %89 = tail call dereferenceable(184) %"class.sh::TType"* %88(%"class.sh::TIntermTyped"* %32) #17
  %90 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %89, i64 0, i32 5
  %91 = bitcast %"struct.sh::TMemoryQualifier"* %90 to i40*
  %92 = load i40, i40* %91, align 2
  %93 = and i40 %92, 256
  %94 = icmp eq i40 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %85
  %96 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %32, i64 0, i32 0, i32 1
  %97 = tail call i8* @_ZNK2sh16TIntermAggregate12functionNameEv(%"class.sh::TIntermAggregate"* %2) #17
  %98 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %99 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %98, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %99, %"struct.sh::TSourceLoc"* dereferenceable(16) %96, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.167, i64 0, i64 0), i8* %97) #17
  br label %114

100:                                              ; preds = %34, %85, %75
  %101 = add i32 %19, -15
  %102 = icmp ult i32 %101, 2
  br i1 %102, label %103, label %110

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %32, i64 0, i32 0, i32 1
  %105 = tail call zeroext i1 @_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %104, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i64 0, i64 0), %"class.sh::TIntermTyped"* %32)
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = tail call i8* @_ZNK2sh16TIntermAggregate12functionNameEv(%"class.sh::TIntermAggregate"* %2) #17
  %108 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %109 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %108, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %109, %"struct.sh::TSourceLoc"* dereferenceable(16) %104, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.169, i64 0, i64 0), i8* %107) #17
  br label %114

110:                                              ; preds = %103, %100
  %111 = add nuw i64 %12, 1
  %112 = load i64, i64* %4, align 8
  %113 = icmp ult i64 %111, %112
  br i1 %113, label %11, label %114

114:                                              ; preds = %110, %3, %95, %106
  ret void
}

declare i8* @_ZNK2sh16TIntermAggregate12functionNameEv(%"class.sh::TIntermAggregate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext31checkInvariantVariableQualifierEbNS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i1 zeroext, i32, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  br i1 %1, label %5, label %19

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 300
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZN2sh19CanBeInvariantESSL1ENS_10TQualifierE(i32 %2) #17
  br i1 %10, label %19, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %13 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %12, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %13, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %19

14:                                               ; preds = %5
  %15 = tail call zeroext i1 @_ZN2sh28CanBeInvariantESSL3OrGreaterENS_10TQualifierE(i32 %2) #17
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %18 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %17, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %18, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %19

19:                                               ; preds = %14, %16, %9, %11, %4
  ret void
}

declare zeroext i1 @_ZN2sh19CanBeInvariantESSL1ENS_10TQualifierE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh28CanBeInvariantESSL3OrGreaterENS_10TQualifierE(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24), i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext24handleExtensionDirectiveERKNS_10TSourceLocEPKcS5_(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16), i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.angle::pp::SourceLocation", align 4
  %6 = alloca %"class.std::__1::basic_string.38", align 8
  %7 = alloca %"class.std::__1::basic_string.38", align 8
  %8 = bitcast %"struct.angle::pp::SourceLocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"struct.angle::pp::SourceLocation", %"struct.angle::pp::SourceLocation"* %5, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.angle::pp::SourceLocation", %"struct.angle::pp::SourceLocation"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %9, align 4
  %13 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %10, align 4
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26
  %16 = bitcast %"class.std::__1::basic_string.38"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  %17 = tail call i64 @strlen(i8* %2) #17
  %18 = icmp ugt i64 %17, -17
  br i1 %18, label %19, label %21

19:                                               ; preds = %4
  %20 = bitcast %"class.std::__1::basic_string.38"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %20) #20
  unreachable

21:                                               ; preds = %4
  %22 = icmp ult i64 %17, 23
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = add nuw i64 %17, 16
  %25 = and i64 %24, -16
  %26 = tail call i8* @_Znwm(i64 %25) #18
  %27 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = or i64 %25, -9223372036854775808
  %29 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %30, align 8
  br label %36

31:                                               ; preds = %21
  %32 = trunc i64 %17 to i8
  %33 = bitcast %"class.std::__1::basic_string.38"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 %32, i8* %34, align 1
  %35 = icmp eq i64 %17, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31, %23
  %37 = phi i8* [ %26, %23 ], [ %16, %31 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 %2, i64 %17, i1 false) #17
  br label %38

38:                                               ; preds = %31, %36
  %39 = phi i8* [ %16, %31 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %17
  store i8 0, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string.38"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  %42 = tail call i64 @strlen(i8* %3) #17
  %43 = icmp ugt i64 %42, -17
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string.38"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %45) #20
  unreachable

46:                                               ; preds = %38
  %47 = icmp ult i64 %42, 23
  br i1 %47, label %57, label %48

48:                                               ; preds = %46
  %49 = add nuw i64 %42, 16
  %50 = and i64 %49, -16
  %51 = tail call i8* @_Znwm(i64 %50) #18
  %52 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  %53 = or i64 %50, -9223372036854775808
  %54 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %55, align 8
  %56 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %62

57:                                               ; preds = %46
  %58 = trunc i64 %42 to i8
  %59 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 %58, i8* %60, align 1
  %61 = icmp eq i64 %42, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %57, %48
  %63 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %59, %57 ], [ %56, %48 ]
  %64 = phi i8* [ %41, %57 ], [ %51, %48 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 %3, i64 %42, i1 false) #17
  br label %65

65:                                               ; preds = %57, %62
  %66 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %59, %57 ], [ %63, %62 ]
  %67 = phi i8* [ %41, %57 ], [ %64, %62 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 %42
  store i8 0, i8* %68, align 1
  call void @_ZN2sh17TDirectiveHandler15handleExtensionERKN5angle2pp14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_(%"class.sh::TDirectiveHandler"* %15, %"struct.angle::pp::SourceLocation"* nonnull dereferenceable(8) %5, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %7) #17
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %65, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  %76 = bitcast %"class.std::__1::basic_string.38"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #18
  br label %83

83:                                               ; preds = %75, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  ret void
}

declare void @_ZN2sh17TDirectiveHandler15handleExtensionERKN5angle2pp14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_(%"class.sh::TDirectiveHandler"*, %"struct.angle::pp::SourceLocation"* dereferenceable(8), %"class.std::__1::basic_string.38"* dereferenceable(24), %"class.std::__1::basic_string.38"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext21handlePragmaDirectiveERKNS_10TSourceLocEPKcS5_b(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16), i8* nocapture readonly, i8* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  %6 = alloca %"struct.angle::pp::SourceLocation", align 4
  %7 = alloca %"class.std::__1::basic_string.38", align 8
  %8 = alloca %"class.std::__1::basic_string.38", align 8
  %9 = bitcast %"struct.angle::pp::SourceLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"struct.angle::pp::SourceLocation", %"struct.angle::pp::SourceLocation"* %6, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.angle::pp::SourceLocation", %"struct.angle::pp::SourceLocation"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds %"struct.sh::TSourceLoc", %"struct.sh::TSourceLoc"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %11, align 4
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26
  %17 = bitcast %"class.std::__1::basic_string.38"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = tail call i64 @strlen(i8* %2) #17
  %19 = icmp ugt i64 %18, -17
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = bitcast %"class.std::__1::basic_string.38"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %21) #20
  unreachable

22:                                               ; preds = %5
  %23 = icmp ult i64 %18, 23
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = add nuw i64 %18, 16
  %26 = and i64 %25, -16
  %27 = tail call i8* @_Znwm(i64 %26) #18
  %28 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = or i64 %26, -9223372036854775808
  %30 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %18, i64* %31, align 8
  br label %37

32:                                               ; preds = %22
  %33 = trunc i64 %18 to i8
  %34 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 %33, i8* %35, align 1
  %36 = icmp eq i64 %18, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32, %24
  %38 = phi i8* [ %27, %24 ], [ %17, %32 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %2, i64 %18, i1 false) #17
  br label %39

39:                                               ; preds = %32, %37
  %40 = phi i8* [ %17, %32 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %18
  store i8 0, i8* %41, align 1
  %42 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #17
  %43 = tail call i64 @strlen(i8* %3) #17
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::basic_string.38"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %46) #20
  unreachable

47:                                               ; preds = %39
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %58, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = tail call i8* @_Znwm(i64 %51) #18
  %53 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8
  %57 = bitcast %"class.std::__1::basic_string.38"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %63

58:                                               ; preds = %47
  %59 = trunc i64 %43 to i8
  %60 = bitcast %"class.std::__1::basic_string.38"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 %59, i8* %61, align 1
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %58, %49
  %64 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %58 ], [ %57, %49 ]
  %65 = phi i8* [ %42, %58 ], [ %52, %49 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 %3, i64 %43, i1 false) #17
  br label %66

66:                                               ; preds = %58, %63
  %67 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %58 ], [ %64, %63 ]
  %68 = phi i8* [ %42, %58 ], [ %65, %63 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %43
  store i8 0, i8* %69, align 1
  call void @_ZN2sh17TDirectiveHandler12handlePragmaERKN5angle2pp14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_b(%"class.sh::TDirectiveHandler"* %16, %"struct.angle::pp::SourceLocation"* nonnull dereferenceable(8) %6, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %8, i1 zeroext %4) #17
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %66, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #17
  %77 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %76, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  ret void
}

declare void @_ZN2sh17TDirectiveHandler12handlePragmaERKN5angle2pp14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_b(%"class.sh::TDirectiveHandler"*, %"struct.angle::pp::SourceLocation"* dereferenceable(8), %"class.std::__1::basic_string.38"* dereferenceable(24), %"class.std::__1::basic_string.38"* dereferenceable(24), i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK2sh13TParseContext25getComputeShaderLocalSizeEv(%"class.sh::TParseContext"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"struct.sh::WorkGroupSize", align 8
  %3 = bitcast %"struct.sh::WorkGroupSize"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -1, i64 12, i1 false)
  %4 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* nonnull %2) #17
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 33
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 35
  br label %16

9:                                                ; preds = %25, %1
  %10 = bitcast %"struct.sh::WorkGroupSize"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.sh::WorkGroupSize", %"struct.sh::WorkGroupSize"* %2, i64 0, i32 0, i64 2
  %13 = load i32, i32* %12, align 8
  %14 = insertvalue { i64, i32 } undef, i64 %11, 0
  %15 = insertvalue { i64, i32 } %14, i32 %13, 1
  ret { i64, i32 } %15

16:                                               ; preds = %6, %25
  %17 = phi i64 [ 0, %6 ], [ %28, %25 ]
  %18 = load i8, i8* %7, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %8, i64 %17) #17
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %25, label %23

23:                                               ; preds = %16, %20
  %24 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %8, i64 %17) #17
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi i32 [ %24, %23 ], [ 1, %20 ]
  %27 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* nonnull %2, i64 %17) #17
  store i32 %26, i32* %27, align 4
  %28 = add nuw i64 %17, 1
  %29 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* nonnull %2) #17
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %16, label %9
}

declare dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermConstantUnion"* @_ZN2sh13TParseContext16addScalarLiteralEPKNS_14TConstantUnionERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readnone, %"class.sh::TConstantUnion"*, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TType", align 8
  %5 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %6 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %5, i64 216) #17
  %7 = bitcast i8* %6 to %"class.sh::TIntermConstantUnion"*
  %8 = bitcast %"class.sh::TType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %8) #17
  %9 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %4, i32 %10, i32 0, i32 2, i8 zeroext 1, i8 zeroext 1) #17
  %11 = bitcast i8* %6 to %"class.sh::TIntermExpression"*
  call void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"* %11, %"class.sh::TType"* nonnull dereferenceable(184) %4) #17
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN2sh20TIntermConstantUnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 208
  %14 = bitcast i8* %13 to %"class.sh::TConstantUnion"**
  store %"class.sh::TConstantUnion"* %1, %"class.sh::TConstantUnion"** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %8) #17
  %15 = getelementptr inbounds i8, i8* %6, i64 8
  %16 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 16, i1 false) #17
  ret %"class.sh::TIntermConstantUnion"* %7
}

declare void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"*, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TVariable"* @_ZN2sh13TParseContext16getNamedVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TSymbol"* readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.std::__1::array.73", align 1
  %6 = icmp eq %"class.sh::TSymbol"* %3, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  %10 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %11
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.172, i64 0, i64 0), i8* %13) #17
  br label %72

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %3, i64 0, i32 4
  %16 = load i8, i8* %15, align 2
  %17 = icmp eq i8 %16, 1
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  %21 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  %24 = select i1 %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %22
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.173, i64 0, i64 0), i8* %24) #17
  br label %72

25:                                               ; preds = %14
  %26 = bitcast %"class.sh::TSymbol"* %3 to %"class.sh::TVariable"*
  %27 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %3, i64 0, i32 3
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #17
  store i8 %28, i8* %31, align 1
  %32 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #17
  br label %33

33:                                               ; preds = %25, %30
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 37305
  br i1 %36, label %37, label %51

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 33
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %3, i64 1
  %43 = bitcast %"class.sh::TSymbol"* %42 to %"class.sh::TType"**
  %44 = load %"class.sh::TType"*, %"class.sh::TType"** %43, align 8
  %45 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 62
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %50 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %49, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %50, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.175, i64 0, i64 0)) #17
  br label %51

51:                                               ; preds = %37, %48, %41, %33
  %52 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %53 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %52, align 8
  %54 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %53, i8 zeroext 16) #17
  br i1 %54, label %55, label %72

55:                                               ; preds = %51
  %56 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %52, align 8
  %57 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %56, i8 zeroext 15) #17
  br i1 %57, label %72, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %3, i64 1
  %60 = bitcast %"class.sh::TSymbol"* %59 to %"class.sh::TType"**
  %61 = load %"class.sh::TType"*, %"class.sh::TType"** %60, align 8
  %62 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 38
  br i1 %64, label %65, label %72

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 7, i32 22
  %67 = load i8, i8* %66, align 4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %71 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %70, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %71, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %72

72:                                               ; preds = %69, %65, %51, %55, %58, %18, %7
  %73 = phi %"class.sh::TVariable"* [ null, %18 ], [ null, %7 ], [ %26, %58 ], [ %26, %55 ], [ %26, %51 ], [ %26, %65 ], [ %26, %69 ]
  ret %"class.sh::TVariable"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext23parseVariableIdentifierERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"struct.sh::WorkGroupSize", align 8
  %7 = alloca %"class.sh::TType", align 8
  %8 = tail call %"class.sh::TVariable"* @_ZN2sh13TParseContext16getNamedVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"class.sh::TSymbol"* %3)
  %9 = icmp eq %"class.sh::TVariable"* %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %11) #17
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %5, i32 1, i32 3, i32 2, i8 zeroext 1, i8 zeroext 1) #17
  %12 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %11) #17
  %13 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %12, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.sh::TSourceLoc"* %13 to i8*
  br label %97

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %8, i64 0, i32 1
  %17 = load %"class.sh::TType"*, %"class.sh::TType"** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %8, i64 0, i32 2
  %19 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %18, align 8
  %20 = icmp eq %"class.sh::TConstantUnion"* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = tail call zeroext i1 @_ZNK2sh5TType27canReplaceWithConstantUnionEv(%"class.sh::TType"* %17) #17
  br i1 %22, label %23, label %32

23:                                               ; preds = %21
  %24 = bitcast %"class.sh::TConstantUnion"** %18 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %27 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %26, i64 216) #17
  %28 = bitcast i8* %27 to %"class.sh::TIntermExpression"*
  tail call void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"* %28, %"class.sh::TType"* dereferenceable(184) %17) #17
  %29 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN2sh20TIntermConstantUnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %27, i64 208
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8
  br label %93

32:                                               ; preds = %15, %21
  %33 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %17, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 62
  br i1 %35, label %36, label %79

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 33
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %79, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.sh::WorkGroupSize"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"struct.sh::WorkGroupSize", %"struct.sh::WorkGroupSize"* %6, i64 0, i32 0, i64 2
  %43 = tail call { i64, i32 } @_ZNK2sh13TParseContext25getComputeShaderLocalSizeEv(%"class.sh::TParseContext"* %0)
  %44 = extractvalue { i64, i32 } %43, 0
  %45 = extractvalue { i64, i32 } %43, 1
  %46 = bitcast %"struct.sh::WorkGroupSize"* %6 to i64*
  store i64 %44, i64* %46, align 8
  store i32 %45, i32* %42, align 8
  %47 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %48 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %47, i64 24) #17
  %49 = bitcast i8* %48 to %"class.sh::TConstantUnion"*
  tail call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %49) #17
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to %"class.sh::TConstantUnion"*
  tail call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %51) #17
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to %"class.sh::TConstantUnion"*
  tail call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %53) #17
  %54 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* nonnull %6, i64 0) #17
  %55 = load i32, i32* %54, align 4
  %56 = bitcast i8* %48 to i32*
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %48, i64 4
  %58 = bitcast i8* %57 to i32*
  store i32 4, i32* %58, align 4
  %59 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* nonnull %6, i64 1) #17
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds i8, i8* %48, i64 8
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %48, i64 12
  %64 = bitcast i8* %63 to i32*
  store i32 4, i32* %64, align 4
  %65 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* nonnull %6, i64 2) #17
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds i8, i8* %48, i64 16
  %68 = bitcast i8* %67 to i32*
  store i32 %66, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %48, i64 20
  %70 = bitcast i8* %69 to i32*
  store i32 4, i32* %70, align 4
  %71 = bitcast %"class.sh::TType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %71) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 184, i1 false)
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* nonnull %7, %"class.sh::TType"* dereferenceable(184) %17) #17
  %72 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %7, i64 0, i32 2
  store i32 2, i32* %72, align 8
  %73 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %74 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %73, i64 216) #17
  %75 = bitcast i8* %74 to %"class.sh::TIntermExpression"*
  call void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"* %75, %"class.sh::TType"* nonnull dereferenceable(184) %7) #17
  %76 = bitcast i8* %74 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN2sh20TIntermConstantUnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds i8, i8* %74, i64 208
  %78 = bitcast i8* %77 to i8**
  store i8* %48, i8** %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %71) #17
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41) #17
  br label %93

79:                                               ; preds = %36, %32
  %80 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 48
  %81 = load i32, i32* %80, align 8
  %82 = icmp ne i32 %81, 0
  %83 = icmp eq i32 %34, 74
  %84 = and i1 %83, %82
  %85 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %86 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %85, i64 32) #17
  %87 = bitcast i8* %86 to %"class.sh::TIntermSymbol"*
  br i1 %84, label %88, label %92

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %90 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %89, align 8
  %91 = tail call %"class.sh::TVariable"* @_ZNK2sh12TSymbolTable28getGlInVariableWithArraySizeEv(%"class.sh::TSymbolTable"* %90) #17
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %87, %"class.sh::TVariable"* %91) #17
  br label %93

92:                                               ; preds = %79
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %87, %"class.sh::TVariable"* nonnull %8) #17
  br label %93

93:                                               ; preds = %40, %92, %88, %23
  %94 = phi i8* [ %27, %23 ], [ %74, %40 ], [ %86, %88 ], [ %86, %92 ]
  %95 = bitcast i8* %94 to %"class.sh::TIntermTyped"*
  %96 = getelementptr inbounds i8, i8* %94, i64 8
  br label %97

97:                                               ; preds = %93, %10
  %98 = phi i8* [ %96, %93 ], [ %14, %10 ]
  %99 = phi %"class.sh::TIntermTyped"* [ %95, %93 ], [ %12, %10 ]
  %100 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 4 %100, i64 16, i1 false) #17
  ret %"class.sh::TIntermTyped"* %99
}

declare %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #3

declare zeroext i1 @_ZNK2sh5TType27canReplaceWithConstantUnionEv(%"class.sh::TType"*) local_unnamed_addr #3

declare void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"*) unnamed_addr #3

declare void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #3

declare %"class.sh::TVariable"* @_ZNK2sh12TSymbolTable28getGlInVariableWithArraySizeEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #3

declare void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"*, %"class.sh::TVariable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext18executeInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeEPNS_12TIntermTypedEPPNS_13TIntermBinaryE(%"class.sh::TParseContext"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TType"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBinary"** nocapture) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.sh::TInfoSinkBase", align 8
  %8 = alloca %"class.sh::TVariable"*, align 8
  %9 = alloca i8, align 1
  %10 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %3) #17
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = bitcast %"class.sh::TIntermTyped"* %4 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %13, i64 31
  %15 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %14, align 8
  %16 = tail call dereferenceable(184) %"class.sh::TType"* %15(%"class.sh::TIntermTyped"* %4) #17
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %16, i64 0, i32 10
  tail call void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %3, %"class.sh::TSpan"* dereferenceable(16) %17) #17
  br label %18

18:                                               ; preds = %11, %6
  %19 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %61

22:                                               ; preds = %18
  %23 = bitcast %"class.sh::TIntermTyped"* %4 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %24 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %24, i64 31
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, align 8
  %27 = tail call dereferenceable(184) %"class.sh::TType"* %26(%"class.sh::TIntermTyped"* %4) #17
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %27, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 2
  br i1 %30, label %61, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.sh::TInfoSinkBase"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #17
  %33 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %7, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 48, i1 false) #17
  %35 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %7, i64 0, i32 0
  %36 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %35, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.176, i64 0, i64 0)) #17
  %37 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %7, %"class.sh::TType"* dereferenceable(184) %3) #17
  %38 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %37, i64 0, i32 0
  %39 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #17
  %40 = bitcast %"class.sh::TInfoSinkBase"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i8*, i8** %33, align 8
  %45 = select i1 %43, i8* %44, i8* %32
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %47 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %46, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %47, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.177, i64 0, i64 0)) #17
  store i32 0, i32* %19, align 8
  %48 = load i32*, i32** %34, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %7, i64 0, i32 1, i32 0, i32 1
  %52 = ptrtoint i32* %48 to i64
  %53 = bitcast i32** %51 to i64*
  store i64 %52, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %50, %31
  %56 = load i8, i8* %41, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #17
  br label %61

61:                                               ; preds = %22, %60, %18
  %62 = phi i1 [ true, %60 ], [ false, %22 ], [ false, %18 ]
  %63 = bitcast %"class.sh::TVariable"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #17
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %8, align 8
  %64 = call zeroext i1 @_ZN2sh13TParseContext15declareVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_5TTypeEPPNS_9TVariableE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"class.sh::TType"* %3, %"class.sh::TVariable"** nonnull %8)
  %65 = xor i1 %64, true
  %66 = or i1 %62, %65
  br i1 %66, label %188, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %69 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %68, align 8
  %70 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %69, i8 zeroext 17) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #17
  store i8 0, i8* %9, align 1
  %71 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %72 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %71, align 8
  %73 = call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %72) #17
  br i1 %73, label %74, label %93

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = or i32 %78, 2
  %80 = icmp eq i32 %79, 3
  %81 = icmp eq i32 %78, 5
  %82 = or i1 %81, %80
  %83 = call zeroext i1 @_ZN2sh25ValidateGlobalInitializerEPNS_12TIntermTypedEibbPb(%"class.sh::TIntermTyped"* %4, i32 %76, i1 zeroext %82, i1 zeroext %70, i8* nonnull %9) #17
  br i1 %83, label %87, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %86 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %85, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %86, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.177, i64 0, i64 0)) #17
  br label %186

87:                                               ; preds = %74
  %88 = load i8, i8* %9, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %92 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %91, align 8
  call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %92, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([143 x i8], [143 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.177, i64 0, i64 0)) #17
  br label %93

93:                                               ; preds = %67, %87, %90
  %94 = icmp ugt i32 %20, 2
  br i1 %94, label %95, label %104

95:                                               ; preds = %93
  %96 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %8, align 8
  %97 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %96, i64 0, i32 1
  %98 = load %"class.sh::TType"*, %"class.sh::TType"** %97, align 8
  %99 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %98, i64 0, i32 2
  %100 = load i32, i32* %99, align 8
  %101 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %100) #17
  %102 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %103 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %102, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %103, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.180, i64 0, i64 0), i8* %101) #17
  br label %186

104:                                              ; preds = %93
  %105 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %106 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %105, i64 32) #17
  %107 = bitcast i8* %106 to %"class.sh::TIntermSymbol"*
  %108 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %8, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %107, %"class.sh::TVariable"* %108) #17
  %109 = getelementptr inbounds i8, i8* %106, i64 8
  %110 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 4 %110, i64 16, i1 false) #17
  %111 = bitcast i8* %106 to %"class.sh::TIntermTyped"*
  %112 = call zeroext i1 @_ZN2sh13TParseContext19binaryOpCommonCheckE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext -117, %"class.sh::TIntermTyped"* %111, %"class.sh::TIntermTyped"* %4, %"struct.sh::TSourceLoc"* dereferenceable(16) %1)
  br i1 %112, label %121, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %108, i64 0, i32 1
  %115 = load %"class.sh::TType"*, %"class.sh::TType"** %114, align 8
  %116 = bitcast %"class.sh::TIntermTyped"* %4 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %117 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %117, i64 31
  %119 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %118, align 8
  %120 = call dereferenceable(184) %"class.sh::TType"* %119(%"class.sh::TIntermTyped"* %4) #17
  call void @_ZN2sh13TParseContext11assignErrorERKNS_10TSourceLocEPKcRKNS_5TTypeES8_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.177, i64 0, i64 0), %"class.sh::TType"* dereferenceable(184) %115, %"class.sh::TType"* dereferenceable(184) %120)
  br label %186

121:                                              ; preds = %104
  br i1 %21, label %122, label %137

122:                                              ; preds = %121
  %123 = bitcast %"class.sh::TIntermTyped"* %4 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)***
  %124 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*** %123, align 8
  %125 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)** %124, i64 29
  %126 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermTyped"*)** %125, align 8
  %127 = call %"class.sh::TConstantUnion"* %126(%"class.sh::TIntermTyped"* %4) #17
  %128 = icmp eq %"class.sh::TConstantUnion"* %127, null
  br i1 %128, label %137, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %108, i64 0, i32 2
  store %"class.sh::TConstantUnion"* %127, %"class.sh::TConstantUnion"** %130, align 8
  %131 = bitcast %"class.sh::TIntermTyped"* %4 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %132 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %131, align 8
  %133 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %132, i64 31
  %134 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %133, align 8
  %135 = call dereferenceable(184) %"class.sh::TType"* %134(%"class.sh::TIntermTyped"* %4) #17
  %136 = call zeroext i1 @_ZNK2sh5TType27canReplaceWithConstantUnionEv(%"class.sh::TType"* %135) #17
  br i1 %136, label %186, label %137

137:                                              ; preds = %122, %129, %121
  %138 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %139 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %138, i64 240) #17
  %140 = bitcast i8* %139 to %"class.sh::TIntermBinary"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %140, i8 zeroext -117, %"class.sh::TIntermTyped"* %111, %"class.sh::TIntermTyped"* %4) #17
  %141 = bitcast %"class.sh::TIntermBinary"** %5 to i8**
  store i8* %139, i8** %141, align 8
  br label %142

142:                                              ; preds = %153, %137
  %143 = phi %"class.sh::TIntermTyped"* [ %4, %137 ], [ %155, %153 ]
  %144 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %143, i64 0, i32 0
  %145 = bitcast %"class.sh::TIntermTyped"* %143 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %146 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %145, align 8
  %147 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %146, i64 12
  %148 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %147, align 8
  %149 = call %"class.sh::TIntermSwizzle"* %148(%"class.sh::TIntermNode"* %144) #17
  %150 = icmp eq %"class.sh::TIntermSwizzle"* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %149, i64 0, i32 1
  br label %153

153:                                              ; preds = %168, %151
  %154 = phi %"class.sh::TIntermTyped"** [ %152, %151 ], [ %169, %168 ]
  %155 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %154, align 8
  br label %142

156:                                              ; preds = %142
  %157 = bitcast %"class.sh::TIntermTyped"* %143 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %158 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %158, i64 13
  %160 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %159, align 8
  %161 = call %"class.sh::TIntermBinary"* %160(%"class.sh::TIntermNode"* %144) #17
  %162 = icmp eq %"class.sh::TIntermBinary"* %161, null
  br i1 %162, label %170, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %161, i64 0, i32 0, i32 1
  %165 = load i8, i8* %164, align 8
  %166 = and i8 %165, -4
  %167 = icmp eq i8 %166, 44
  br i1 %167, label %168, label %181

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %161, i64 0, i32 2
  br label %153

170:                                              ; preds = %156
  %171 = bitcast %"class.sh::TIntermTyped"* %143 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %172 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %171, align 8
  %173 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %172, i64 19
  %174 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %173, align 8
  %175 = call %"class.sh::TIntermSymbol"* %174(%"class.sh::TIntermNode"* %144) #17
  %176 = icmp eq %"class.sh::TIntermSymbol"* %175, null
  br i1 %176, label %181, label %177

177:                                              ; preds = %170
  %178 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %71, align 8
  %179 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %175, i64 0, i32 1
  %180 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %179, align 8
  call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %178, %"class.sh::TVariable"* dereferenceable(40) %180) #17
  br label %181

181:                                              ; preds = %163, %170, %177
  %182 = bitcast %"class.sh::TIntermBinary"** %5 to %"class.sh::TIntermNode"**
  %183 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %182, align 8
  %184 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %183, i64 0, i32 1
  %185 = bitcast %"struct.sh::TSourceLoc"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 4 %110, i64 16, i1 false) #17
  br label %186

186:                                              ; preds = %113, %181, %129, %95, %84
  %187 = phi i1 [ false, %95 ], [ false, %84 ], [ true, %181 ], [ false, %113 ], [ true, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #17
  br label %188

188:                                              ; preds = %61, %186
  %189 = phi i1 [ %187, %186 ], [ false, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #17
  ret i1 %189
}

declare void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"*, %"class.sh::TSpan"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh25ValidateGlobalInitializerEPNS_12TIntermTypedEibbPb(%"class.sh::TIntermTyped"*, i32, i1 zeroext, i1 zeroext, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext19binaryOpCommonCheckE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %7 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %7, i64 31
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %8, align 8
  %10 = tail call dereferenceable(184) %"class.sh::TType"* %9(%"class.sh::TIntermTyped"* %2) #17
  %11 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -8
  %14 = icmp ult i32 %13, 43
  %15 = add i32 %12, -51
  %16 = icmp ult i32 %15, 33
  %17 = or i1 %14, %16
  %18 = icmp eq i32 %12, 6
  %19 = or i1 %18, %17
  %20 = add i32 %12, -84
  %21 = icmp ult i32 %20, 6
  %22 = or i1 %21, %19
  br i1 %22, label %41, label %23

23:                                               ; preds = %5
  %24 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %25 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, i64 31
  %27 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %26, align 8
  %28 = tail call dereferenceable(184) %"class.sh::TType"* %27(%"class.sh::TIntermTyped"* %3) #17
  %29 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -8
  %32 = icmp ult i32 %31, 43
  %33 = add i32 %30, -51
  %34 = icmp ult i32 %33, 33
  %35 = or i1 %32, %34
  %36 = icmp eq i32 %30, 6
  %37 = or i1 %36, %35
  %38 = add i32 %30, -84
  %39 = icmp ult i32 %38, 6
  %40 = or i1 %39, %37
  br i1 %40, label %41, label %50

41:                                               ; preds = %23, %5
  %42 = and i8 %1, -2
  %43 = icmp eq i8 %42, 44
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  br label %50

46:                                               ; preds = %41
  %47 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %48 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %49 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %48, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %49, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.397, i64 0, i64 0), i8* %47) #17
  br label %563

50:                                               ; preds = %44, %23
  %51 = phi %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** [ %45, %44 ], [ %24, %23 ]
  %52 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %52, i64 31
  %54 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %53, align 8
  %55 = tail call dereferenceable(184) %"class.sh::TType"* %54(%"class.sh::TIntermTyped"* %3) #17
  %56 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %55, i64 0, i32 5
  %57 = bitcast %"struct.sh::TMemoryQualifier"* %56 to i40*
  %58 = load i40, i40* %57, align 2
  %59 = and i40 %58, 256
  %60 = icmp eq i40 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %50
  %62 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %63 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %64 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %63, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %64, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.398, i64 0, i64 0), i8* %62) #17
  br label %563

65:                                               ; preds = %50
  %66 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %67 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %66, i64 31
  %68 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %67, align 8
  %69 = tail call dereferenceable(184) %"class.sh::TType"* %68(%"class.sh::TIntermTyped"* %2) #17
  %70 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %69, i64 0, i32 5
  %71 = bitcast %"struct.sh::TMemoryQualifier"* %70 to i40*
  %72 = load i40, i40* %71, align 2
  %73 = and i40 %72, 256
  %74 = icmp eq i40 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %65
  switch i8 %1, label %76 [
    i8 -118, label %80
    i8 -117, label %80
    i8 44, label %80
    i8 45, label %80
    i8 46, label %80
    i8 47, label %80
  ]

76:                                               ; preds = %75
  %77 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %78 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %79 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %78, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %79, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.398, i64 0, i64 0), i8* %77) #17
  br label %563

80:                                               ; preds = %65, %75, %75, %75, %75, %75, %75
  %81 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %82 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %81, i64 31
  %83 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %82, align 8
  %84 = tail call dereferenceable(184) %"class.sh::TType"* %83(%"class.sh::TIntermTyped"* %2) #17
  %85 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %84, i64 0, i32 13
  %86 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %85, align 8
  %87 = icmp eq %"class.sh::TStructure"* %86, null
  br i1 %87, label %88, label %96

88:                                               ; preds = %80
  %89 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %90 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %89, i64 31
  %91 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %90, align 8
  %92 = tail call dereferenceable(184) %"class.sh::TType"* %91(%"class.sh::TIntermTyped"* %3) #17
  %93 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %92, i64 0, i32 13
  %94 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %93, align 8
  %95 = icmp eq %"class.sh::TStructure"* %94, null
  br i1 %95, label %159, label %96

96:                                               ; preds = %88, %80
  switch i8 %1, label %155 [
    i8 46, label %159
    i8 18, label %97
    i8 19, label %97
    i8 -118, label %97
    i8 -117, label %97
  ]

97:                                               ; preds = %96, %96, %96, %96
  %98 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %99 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %98, i64 31
  %100 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %99, align 8
  %101 = tail call dereferenceable(184) %"class.sh::TType"* %100(%"class.sh::TIntermTyped"* %2) #17
  %102 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %103 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %102, i64 31
  %104 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %103, align 8
  %105 = tail call dereferenceable(184) %"class.sh::TType"* %104(%"class.sh::TIntermTyped"* %3) #17
  %106 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %101, i64 0, i32 10, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %105, i64 0, i32 10, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %107, %109
  br i1 %110, label %111, label %129

111:                                              ; preds = %97
  %112 = icmp eq i64 %107, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %101, i64 0, i32 10, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %105, i64 0, i32 10, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = icmp eq i32* %115, %117
  br i1 %118, label %129, label %121

119:                                              ; preds = %121
  %120 = icmp eq i64 %128, %107
  br i1 %120, label %129, label %121

121:                                              ; preds = %113, %119
  %122 = phi i64 [ %128, %119 ], [ 0, %113 ]
  %123 = getelementptr inbounds i32, i32* %115, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds i32, i32* %117, i64 %122
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %124, %126
  %128 = add nuw i64 %122, 1
  br i1 %127, label %119, label %129

129:                                              ; preds = %121, %119, %113, %111, %97
  %130 = phi i1 [ true, %97 ], [ false, %111 ], [ false, %113 ], [ false, %119 ], [ true, %121 ]
  %131 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %101, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %105, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %136, label %563

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %101, i64 0, i32 8
  %138 = load i8, i8* %137, align 8
  %139 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %105, i64 0, i32 8
  %140 = load i8, i8* %139, align 8
  %141 = icmp eq i8 %138, %140
  br i1 %141, label %142, label %563

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %101, i64 0, i32 9
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %105, i64 0, i32 9
  %146 = load i8, i8* %145, align 1
  %147 = icmp ne i8 %144, %146
  %148 = or i1 %130, %147
  br i1 %148, label %563, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %101, i64 0, i32 13
  %151 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %150, align 8
  %152 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %105, i64 0, i32 13
  %153 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %152, align 8
  %154 = icmp eq %"class.sh::TStructure"* %151, %153
  br i1 %154, label %159, label %563

155:                                              ; preds = %96
  %156 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %157 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %158 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %157, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %158, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.399, i64 0, i64 0), i8* %156) #17
  br label %563

159:                                              ; preds = %149, %88, %96
  %160 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %161 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %160, i64 31
  %162 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %161, align 8
  %163 = tail call dereferenceable(184) %"class.sh::TType"* %162(%"class.sh::TIntermTyped"* %2) #17
  %164 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %165, 91
  br i1 %166, label %177, label %167

167:                                              ; preds = %159
  %168 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %169 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %168, i64 31
  %170 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %169, align 8
  %171 = tail call dereferenceable(184) %"class.sh::TType"* %170(%"class.sh::TIntermTyped"* %3) #17
  %172 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %171, i64 0, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = icmp ne i32 %173, 91
  %175 = icmp eq i8 %1, 47
  %176 = or i1 %175, %174
  br i1 %176, label %183, label %179

177:                                              ; preds = %159
  %178 = icmp eq i8 %1, 47
  br i1 %178, label %183, label %179

179:                                              ; preds = %167, %177
  %180 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %181 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %182 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %181, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %182, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.400, i64 0, i64 0), i8* %180) #17
  br label %563

183:                                              ; preds = %167, %177
  %184 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %185 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %184, i64 31
  %186 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %185, align 8
  %187 = tail call dereferenceable(184) %"class.sh::TType"* %186(%"class.sh::TIntermTyped"* %2) #17
  %188 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %187, i64 0, i32 10, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = icmp ne i64 %189, 0
  %191 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %192 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %191, i64 31
  %193 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %192, align 8
  %194 = tail call dereferenceable(184) %"class.sh::TType"* %193(%"class.sh::TIntermTyped"* %3) #17
  %195 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %194, i64 0, i32 10, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = icmp ne i64 %196, 0
  %198 = xor i1 %190, %197
  br i1 %198, label %199, label %203

199:                                              ; preds = %183
  %200 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %201 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %202 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %201, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %202, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.401, i64 0, i64 0), i8* %200) #17
  br label %563

203:                                              ; preds = %183
  %204 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %205 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %204, i64 31
  %206 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %205, align 8
  %207 = tail call dereferenceable(184) %"class.sh::TType"* %206(%"class.sh::TIntermTyped"* %2) #17
  %208 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %207, i64 0, i32 10, i32 1
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %260, label %211

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %213 = load i32, i32* %212, align 8
  %214 = icmp slt i32 %213, 300
  br i1 %214, label %215, label %219

215:                                              ; preds = %211
  %216 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %217 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %218 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %217, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %218, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.402, i64 0, i64 0), i8* %216) #17
  br label %563

219:                                              ; preds = %211
  switch i8 %1, label %220 [
    i8 18, label %224
    i8 19, label %224
    i8 -118, label %224
    i8 -117, label %224
  ]

220:                                              ; preds = %219
  %221 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %222 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %223 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %222, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %223, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.402, i64 0, i64 0), i8* %221) #17
  br label %563

224:                                              ; preds = %219, %219, %219, %219
  %225 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %226 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %225, i64 31
  %227 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %226, align 8
  %228 = tail call dereferenceable(184) %"class.sh::TType"* %227(%"class.sh::TIntermTyped"* %2) #17
  %229 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %230 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %229, i64 31
  %231 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %230, align 8
  %232 = tail call dereferenceable(184) %"class.sh::TType"* %231(%"class.sh::TIntermTyped"* %3) #17
  %233 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %228, i64 0, i32 10, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %232, i64 0, i32 10, i32 1
  %236 = load i64, i64* %235, align 8
  %237 = icmp eq i64 %234, %236
  br i1 %237, label %238, label %256

238:                                              ; preds = %224
  %239 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %228, i64 0, i32 10, i32 0
  %240 = load i32*, i32** %239, align 8
  %241 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %232, i64 0, i32 10, i32 0
  %242 = load i32*, i32** %241, align 8
  %243 = icmp ne i32* %240, %242
  %244 = icmp ne i64 %234, 0
  %245 = and i1 %244, %243
  br i1 %245, label %248, label %260

246:                                              ; preds = %248
  %247 = icmp eq i64 %255, %234
  br i1 %247, label %260, label %248

248:                                              ; preds = %238, %246
  %249 = phi i64 [ %255, %246 ], [ 0, %238 ]
  %250 = getelementptr inbounds i32, i32* %240, i64 %249
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds i32, i32* %242, i64 %249
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %251, %253
  %255 = add nuw i64 %249, 1
  br i1 %254, label %246, label %256

256:                                              ; preds = %248, %224
  %257 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %258 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %259 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %258, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %259, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.403, i64 0, i64 0), i8* %257) #17
  br label %563

260:                                              ; preds = %246, %203, %238
  switch i8 %1, label %288 [
    i8 39, label %261
    i8 40, label %261
    i8 -107, label %261
    i8 -106, label %261
    i8 41, label %279
    i8 42, label %279
    i8 43, label %279
    i8 -105, label %279
    i8 -104, label %279
    i8 -103, label %279
  ]

261:                                              ; preds = %260, %260, %260, %260
  %262 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %263 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %262, i64 31
  %264 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %263, align 8
  %265 = tail call dereferenceable(184) %"class.sh::TType"* %264(%"class.sh::TIntermTyped"* %2) #17
  %266 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %265, i64 0, i32 0
  %267 = load i32, i32* %266, align 8
  %268 = add i32 %267, -3
  %269 = icmp ult i32 %268, 2
  br i1 %269, label %270, label %563

270:                                              ; preds = %261
  %271 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %272 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %271, i64 31
  %273 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %272, align 8
  %274 = tail call dereferenceable(184) %"class.sh::TType"* %273(%"class.sh::TIntermTyped"* %3) #17
  %275 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %274, i64 0, i32 0
  %276 = load i32, i32* %275, align 8
  %277 = add i32 %276, -3
  %278 = icmp ult i32 %277, 2
  br i1 %278, label %288, label %563

279:                                              ; preds = %260, %260, %260, %260, %260, %260
  %280 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %281 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %280, i64 31
  %282 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %281, align 8
  %283 = tail call dereferenceable(184) %"class.sh::TType"* %282(%"class.sh::TIntermTyped"* %2) #17
  %284 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %283, i64 0, i32 0
  %285 = load i32, i32* %284, align 8
  %286 = add i32 %285, -3
  %287 = icmp ult i32 %286, 2
  br i1 %287, label %288, label %563

288:                                              ; preds = %260, %279, %270
  %289 = phi i1 [ true, %260 ], [ true, %279 ], [ false, %270 ]
  %290 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %291 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %290, i64 31
  %292 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %291, align 8
  %293 = tail call dereferenceable(184) %"class.sh::TType"* %292(%"class.sh::TIntermTyped"* %2) #17
  %294 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %293, i64 0, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %297 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %296, i64 31
  %298 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %297, align 8
  %299 = tail call dereferenceable(184) %"class.sh::TType"* %298(%"class.sh::TIntermTyped"* %3) #17
  %300 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %299, i64 0, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = tail call i32 @_ZN2sh13GetConversionENS_10TBasicTypeES0_(i32 %295, i32 %301) #17
  %303 = icmp ne i32 %302, 0
  %304 = and i1 %289, %303
  br i1 %304, label %305, label %312

305:                                              ; preds = %288
  %306 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %307 = load i32, i32* %306, align 8
  %308 = add i32 %307, -7
  %309 = icmp ult i32 %308, 2
  br i1 %309, label %310, label %563

310:                                              ; preds = %305
  %311 = tail call zeroext i1 @_ZN2sh25IsValidImplicitConversionENS_22ImplicitTypeConversionE9TOperator(i32 %302, i8 zeroext %1) #17
  br i1 %311, label %312, label %563

312:                                              ; preds = %288, %310
  switch i8 %1, label %562 [
    i8 -118, label %313
    i8 -117, label %313
    i8 18, label %313
    i8 19, label %313
    i8 20, label %377
    i8 21, label %377
    i8 22, label %377
    i8 23, label %377
    i8 13, label %421
    i8 14, label %421
    i8 16, label %421
    i8 17, label %421
    i8 39, label %421
    i8 40, label %421
    i8 41, label %421
    i8 42, label %421
    i8 43, label %421
    i8 -116, label %421
    i8 -115, label %421
    i8 -109, label %421
    i8 -108, label %421
    i8 -107, label %421
    i8 -106, label %421
    i8 -105, label %421
    i8 -104, label %421
    i8 -103, label %421
  ]

313:                                              ; preds = %312, %312, %312, %312
  %314 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %315 = load i32, i32* %314, align 8
  %316 = icmp slt i32 %315, 300
  br i1 %316, label %317, label %329

317:                                              ; preds = %313
  %318 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %319 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %318, i64 31
  %320 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %319, align 8
  %321 = tail call dereferenceable(184) %"class.sh::TType"* %320(%"class.sh::TIntermTyped"* %2) #17
  %322 = tail call zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"* %321) #17
  br i1 %322, label %325, label %323

323:                                              ; preds = %317
  %324 = load i32, i32* %314, align 8
  br label %329

325:                                              ; preds = %317
  %326 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %327 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %328 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %327, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %328, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.404, i64 0, i64 0), i8* %326) #17
  br label %563

329:                                              ; preds = %323, %313
  %330 = phi i32 [ %324, %323 ], [ %315, %313 ]
  %331 = icmp slt i32 %330, 300
  %332 = and i8 %1, -2
  %333 = icmp eq i8 %332, -118
  %334 = or i1 %333, %331
  br i1 %334, label %335, label %345

335:                                              ; preds = %329
  %336 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %337 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %336, i64 31
  %338 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %337, align 8
  %339 = tail call dereferenceable(184) %"class.sh::TType"* %338(%"class.sh::TIntermTyped"* %2) #17
  %340 = tail call zeroext i1 @_ZNK2sh5TType29isStructureContainingSamplersEv(%"class.sh::TType"* %339) #17
  br i1 %340, label %341, label %345

341:                                              ; preds = %335
  %342 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %343 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %344 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %343, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %344, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.405, i64 0, i64 0), i8* %342) #17
  br label %563

345:                                              ; preds = %329, %335
  %346 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %347 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %346, i64 31
  %348 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %347, align 8
  %349 = tail call dereferenceable(184) %"class.sh::TType"* %348(%"class.sh::TIntermTyped"* %2) #17
  %350 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %349, i64 0, i32 8
  %351 = load i8, i8* %350, align 8
  %352 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %353 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %352, i64 31
  %354 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %353, align 8
  %355 = tail call dereferenceable(184) %"class.sh::TType"* %354(%"class.sh::TIntermTyped"* %3) #17
  %356 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %355, i64 0, i32 8
  %357 = load i8, i8* %356, align 8
  %358 = icmp eq i8 %351, %357
  br i1 %358, label %359, label %373

359:                                              ; preds = %345
  %360 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %361 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %360, i64 31
  %362 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %361, align 8
  %363 = tail call dereferenceable(184) %"class.sh::TType"* %362(%"class.sh::TIntermTyped"* %2) #17
  %364 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %363, i64 0, i32 9
  %365 = load i8, i8* %364, align 1
  %366 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %367 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %366, i64 31
  %368 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %367, align 8
  %369 = tail call dereferenceable(184) %"class.sh::TType"* %368(%"class.sh::TIntermTyped"* %3) #17
  %370 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %369, i64 0, i32 9
  %371 = load i8, i8* %370, align 1
  %372 = icmp eq i8 %365, %371
  br i1 %372, label %562, label %373

373:                                              ; preds = %359, %345
  %374 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %375 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %376 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %375, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %376, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.406, i64 0, i64 0), i8* %374) #17
  br label %563

377:                                              ; preds = %312, %312, %312, %312
  %378 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %379 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %378, i64 31
  %380 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %379, align 8
  %381 = tail call dereferenceable(184) %"class.sh::TType"* %380(%"class.sh::TIntermTyped"* %2) #17
  %382 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %381, i64 0, i32 8
  %383 = load i8, i8* %382, align 8
  %384 = icmp eq i8 %383, 1
  br i1 %384, label %385, label %417

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %381, i64 0, i32 9
  %387 = load i8, i8* %386, align 1
  %388 = icmp eq i8 %387, 1
  br i1 %388, label %389, label %417

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %381, i64 0, i32 13
  %391 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %390, align 8
  %392 = icmp eq %"class.sh::TStructure"* %391, null
  br i1 %392, label %393, label %417

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %381, i64 0, i32 10, i32 1
  %395 = load i64, i64* %394, align 8
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %417

397:                                              ; preds = %393
  %398 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %399 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %398, i64 31
  %400 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %399, align 8
  %401 = tail call dereferenceable(184) %"class.sh::TType"* %400(%"class.sh::TIntermTyped"* %3) #17
  %402 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %401, i64 0, i32 8
  %403 = load i8, i8* %402, align 8
  %404 = icmp eq i8 %403, 1
  br i1 %404, label %405, label %417

405:                                              ; preds = %397
  %406 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %401, i64 0, i32 9
  %407 = load i8, i8* %406, align 1
  %408 = icmp eq i8 %407, 1
  br i1 %408, label %409, label %417

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %401, i64 0, i32 13
  %411 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %410, align 8
  %412 = icmp eq %"class.sh::TStructure"* %411, null
  br i1 %412, label %413, label %417

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %401, i64 0, i32 10, i32 1
  %415 = load i64, i64* %414, align 8
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %562, label %417

417:                                              ; preds = %397, %405, %409, %377, %385, %389, %413, %393
  %418 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %419 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %420 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %419, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %420, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.407, i64 0, i64 0), i8* %418) #17
  br label %563

421:                                              ; preds = %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312, %312
  %422 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %423 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %422, i64 31
  %424 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %423, align 8
  %425 = tail call dereferenceable(184) %"class.sh::TType"* %424(%"class.sh::TIntermTyped"* %2) #17
  %426 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %425, i64 0, i32 8
  %427 = load i8, i8* %426, align 8
  %428 = icmp ugt i8 %427, 1
  %429 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %425, i64 0, i32 9
  %430 = load i8, i8* %429, align 1
  %431 = icmp ugt i8 %430, 1
  %432 = and i1 %428, %431
  br i1 %432, label %433, label %445

433:                                              ; preds = %421
  %434 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %435 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %434, i64 31
  %436 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %435, align 8
  %437 = tail call dereferenceable(184) %"class.sh::TType"* %436(%"class.sh::TIntermTyped"* %3) #17
  %438 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %437, i64 0, i32 8
  %439 = load i8, i8* %438, align 8
  %440 = icmp ugt i8 %439, 1
  %441 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %437, i64 0, i32 9
  %442 = load i8, i8* %441, align 1
  %443 = icmp eq i8 %442, 1
  %444 = and i1 %440, %443
  br i1 %444, label %563, label %445

445:                                              ; preds = %433, %421
  %446 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %447 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %446, i64 31
  %448 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %447, align 8
  %449 = tail call dereferenceable(184) %"class.sh::TType"* %448(%"class.sh::TIntermTyped"* %2) #17
  %450 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %449, i64 0, i32 8
  %451 = load i8, i8* %450, align 8
  %452 = icmp ugt i8 %451, 1
  %453 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %449, i64 0, i32 9
  %454 = load i8, i8* %453, align 1
  %455 = icmp eq i8 %454, 1
  %456 = and i1 %452, %455
  br i1 %456, label %457, label %469

457:                                              ; preds = %445
  %458 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %459 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %458, i64 31
  %460 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %459, align 8
  %461 = tail call dereferenceable(184) %"class.sh::TType"* %460(%"class.sh::TIntermTyped"* %3) #17
  %462 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %461, i64 0, i32 8
  %463 = load i8, i8* %462, align 8
  %464 = icmp ugt i8 %463, 1
  %465 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %461, i64 0, i32 9
  %466 = load i8, i8* %465, align 1
  %467 = icmp ugt i8 %466, 1
  %468 = and i1 %464, %467
  br i1 %468, label %563, label %469

469:                                              ; preds = %457, %445
  %470 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %471 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %470, i64 31
  %472 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %471, align 8
  %473 = tail call dereferenceable(184) %"class.sh::TType"* %472(%"class.sh::TIntermTyped"* %2) #17
  %474 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %473, i64 0, i32 8
  %475 = load i8, i8* %474, align 8
  %476 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %477 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %476, i64 31
  %478 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %477, align 8
  %479 = tail call dereferenceable(184) %"class.sh::TType"* %478(%"class.sh::TIntermTyped"* %3) #17
  %480 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %479, i64 0, i32 8
  %481 = load i8, i8* %480, align 8
  %482 = icmp eq i8 %475, %481
  br i1 %482, label %483, label %497

483:                                              ; preds = %469
  %484 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %485 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %484, i64 31
  %486 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %485, align 8
  %487 = tail call dereferenceable(184) %"class.sh::TType"* %486(%"class.sh::TIntermTyped"* %2) #17
  %488 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %487, i64 0, i32 9
  %489 = load i8, i8* %488, align 1
  %490 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %491 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %490, i64 31
  %492 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %491, align 8
  %493 = tail call dereferenceable(184) %"class.sh::TType"* %492(%"class.sh::TIntermTyped"* %3) #17
  %494 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %493, i64 0, i32 9
  %495 = load i8, i8* %494, align 1
  %496 = icmp eq i8 %489, %495
  br i1 %496, label %562, label %497

497:                                              ; preds = %483, %469
  %498 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %499 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %498, i64 31
  %500 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %499, align 8
  %501 = tail call dereferenceable(184) %"class.sh::TType"* %500(%"class.sh::TIntermTyped"* %2) #17
  %502 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %501, i64 0, i32 8
  %503 = load i8, i8* %502, align 8
  %504 = icmp eq i8 %503, 1
  br i1 %504, label %505, label %517

505:                                              ; preds = %497
  %506 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %501, i64 0, i32 9
  %507 = load i8, i8* %506, align 1
  %508 = icmp eq i8 %507, 1
  br i1 %508, label %509, label %517

509:                                              ; preds = %505
  %510 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %501, i64 0, i32 13
  %511 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %510, align 8
  %512 = icmp eq %"class.sh::TStructure"* %511, null
  br i1 %512, label %513, label %517

513:                                              ; preds = %509
  %514 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %501, i64 0, i32 10, i32 1
  %515 = load i64, i64* %514, align 8
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %537, label %517

517:                                              ; preds = %497, %505, %509, %513
  %518 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %519 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %518, i64 31
  %520 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %519, align 8
  %521 = tail call dereferenceable(184) %"class.sh::TType"* %520(%"class.sh::TIntermTyped"* %3) #17
  %522 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %521, i64 0, i32 8
  %523 = load i8, i8* %522, align 8
  %524 = icmp eq i8 %523, 1
  br i1 %524, label %525, label %563

525:                                              ; preds = %517
  %526 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %521, i64 0, i32 9
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 1
  br i1 %528, label %529, label %563

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %521, i64 0, i32 13
  %531 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %530, align 8
  %532 = icmp eq %"class.sh::TStructure"* %531, null
  br i1 %532, label %533, label %563

533:                                              ; preds = %529
  %534 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %521, i64 0, i32 10, i32 1
  %535 = load i64, i64* %534, align 8
  %536 = icmp eq i64 %535, 0
  br i1 %536, label %537, label %563

537:                                              ; preds = %533, %513
  %538 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %51, align 8
  %539 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %538, i64 31
  %540 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %539, align 8
  %541 = tail call dereferenceable(184) %"class.sh::TType"* %540(%"class.sh::TIntermTyped"* %3) #17
  %542 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %541, i64 0, i32 8
  %543 = load i8, i8* %542, align 8
  %544 = icmp eq i8 %543, 1
  br i1 %544, label %545, label %557

545:                                              ; preds = %537
  %546 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %541, i64 0, i32 9
  %547 = load i8, i8* %546, align 1
  %548 = icmp eq i8 %547, 1
  br i1 %548, label %549, label %557

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %541, i64 0, i32 13
  %551 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %550, align 8
  %552 = icmp eq %"class.sh::TStructure"* %551, null
  br i1 %552, label %553, label %557

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %541, i64 0, i32 10, i32 1
  %555 = load i64, i64* %554, align 8
  %556 = icmp eq i64 %555, 0
  br i1 %556, label %562, label %557

557:                                              ; preds = %537, %545, %549, %553
  %558 = tail call zeroext i1 @_Z12IsAssignment9TOperator(i8 zeroext %1) #17
  %559 = add i8 %1, -39
  %560 = icmp ult i8 %559, 2
  %561 = or i1 %560, %558
  br i1 %561, label %563, label %562

562:                                              ; preds = %557, %359, %483, %312, %553, %413
  br label %563

563:                                              ; preds = %149, %517, %525, %529, %129, %136, %142, %557, %270, %261, %279, %533, %433, %457, %305, %310, %562, %417, %373, %341, %325, %256, %220, %215, %199, %179, %155, %76, %61, %46
  %564 = phi i1 [ false, %61 ], [ false, %76 ], [ false, %155 ], [ false, %199 ], [ false, %215 ], [ false, %220 ], [ false, %256 ], [ false, %179 ], [ false, %46 ], [ false, %149 ], [ false, %270 ], [ false, %261 ], [ false, %279 ], [ true, %562 ], [ false, %417 ], [ false, %325 ], [ false, %341 ], [ false, %373 ], [ false, %310 ], [ false, %305 ], [ false, %457 ], [ false, %433 ], [ false, %533 ], [ false, %557 ], [ false, %142 ], [ false, %136 ], [ false, %129 ], [ false, %529 ], [ false, %525 ], [ false, %517 ]
  ret i1 %564
}

declare void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermNode"* @_ZN2sh13TParseContext23addConditionInitializerERKNS_11TPublicTypeERKNS_15ImmutableStringEPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TIntermBinary"*, align 8
  %7 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = tail call zeroext i1 @_ZNK2sh11TPublicType11isAggregateEv(%"struct.sh::TPublicType"* %1) #17
  br i1 %11, label %12, label %15

12:                                               ; preds = %10, %5
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %15

15:                                               ; preds = %10, %12
  %16 = bitcast %"class.sh::TIntermBinary"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store %"class.sh::TIntermBinary"* null, %"class.sh::TIntermBinary"** %6, align 8
  %17 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %18 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %17, i64 184) #17
  %19 = bitcast i8* %18 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %19, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %20 = call zeroext i1 @_ZN2sh13TParseContext18executeInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeEPNS_12TIntermTypedEPPNS_13TIntermBinaryE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"class.sh::TType"* %19, %"class.sh::TIntermTyped"* %3, %"class.sh::TIntermBinary"** nonnull %6)
  br i1 %20, label %21, label %37

21:                                               ; preds = %15
  %22 = load %"class.sh::TIntermBinary"*, %"class.sh::TIntermBinary"** %6, align 8
  %23 = icmp eq %"class.sh::TIntermBinary"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %3, i64 0, i32 0
  br label %37

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %22, i64 0, i32 0, i32 0, i32 0
  %28 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %29 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %28, i64 56) #17
  %30 = bitcast i8* %29 to %"class.sh::TIntermDeclaration"*
  %31 = bitcast i8* %29 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #17
  %33 = getelementptr inbounds i8, i8* %29, i64 24
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #17
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %30, %"class.sh::TIntermTyped"* %27) #17
  %36 = bitcast i8* %29 to %"class.sh::TIntermNode"*
  br label %37

37:                                               ; preds = %15, %26, %24
  %38 = phi %"class.sh::TIntermNode"* [ %25, %24 ], [ %36, %26 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  ret %"class.sh::TIntermNode"* %38
}

declare void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"*, %"class.sh::TIntermTyped"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermNode"* @_ZN2sh13TParseContext7addLoopENS_9TLoopTypeEPNS_11TIntermNodeES3_PNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermNode"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %8 = icmp eq %"class.sh::TIntermNode"* %3, null
  br i1 %8, label %55, label %9

9:                                                ; preds = %7, %19
  %10 = phi %"class.sh::TIntermNode"* [ %22, %19 ], [ %3, %7 ]
  %11 = bitcast %"class.sh::TIntermNode"* %10 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %12 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %12, i64 12
  %14 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %13, align 8
  %15 = tail call %"class.sh::TIntermSwizzle"* %14(%"class.sh::TIntermNode"* %10) #17
  %16 = icmp eq %"class.sh::TIntermSwizzle"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %15, i64 0, i32 1
  br label %19

19:                                               ; preds = %35, %17
  %20 = phi %"class.sh::TIntermTyped"** [ %18, %17 ], [ %36, %35 ]
  %21 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %20, align 8
  %22 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %21, i64 0, i32 0
  br label %9

23:                                               ; preds = %9
  %24 = bitcast %"class.sh::TIntermNode"* %10 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %25 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %25, i64 13
  %27 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %26, align 8
  %28 = tail call %"class.sh::TIntermBinary"* %27(%"class.sh::TIntermNode"* %10) #17
  %29 = icmp eq %"class.sh::TIntermBinary"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %28, i64 0, i32 0, i32 1
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, -4
  %34 = icmp eq i8 %33, 44
  br i1 %34, label %35, label %49

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %28, i64 0, i32 2
  br label %19

37:                                               ; preds = %23
  %38 = bitcast %"class.sh::TIntermNode"* %10 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %39 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %39, i64 19
  %41 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %40, align 8
  %42 = tail call %"class.sh::TIntermSymbol"* %41(%"class.sh::TIntermNode"* %10) #17
  %43 = icmp eq %"class.sh::TIntermSymbol"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %46 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %45, align 8
  %47 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %42, i64 0, i32 1
  %48 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %47, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %46, %"class.sh::TVariable"* dereferenceable(40) %48) #17
  br label %49

49:                                               ; preds = %30, %37, %44
  %50 = bitcast %"class.sh::TIntermNode"* %3 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %51 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %51, i64 4
  %53 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %52, align 8
  %54 = tail call %"class.sh::TIntermTyped"* %53(%"class.sh::TIntermNode"* nonnull %3) #17
  br label %55

55:                                               ; preds = %7, %49
  %56 = phi %"class.sh::TIntermTyped"* [ %54, %49 ], [ null, %7 ]
  %57 = icmp eq %"class.sh::TIntermTyped"* %4, null
  br i1 %57, label %98, label %58

58:                                               ; preds = %55, %69
  %59 = phi %"class.sh::TIntermTyped"* [ %71, %69 ], [ %4, %55 ]
  %60 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %59, i64 0, i32 0
  %61 = bitcast %"class.sh::TIntermTyped"* %59 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %62 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %62, i64 12
  %64 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %63, align 8
  %65 = tail call %"class.sh::TIntermSwizzle"* %64(%"class.sh::TIntermNode"* %60) #17
  %66 = icmp eq %"class.sh::TIntermSwizzle"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %65, i64 0, i32 1
  br label %69

69:                                               ; preds = %84, %67
  %70 = phi %"class.sh::TIntermTyped"** [ %68, %67 ], [ %85, %84 ]
  %71 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %70, align 8
  br label %58

72:                                               ; preds = %58
  %73 = bitcast %"class.sh::TIntermTyped"* %59 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %74 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %74, i64 13
  %76 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %75, align 8
  %77 = tail call %"class.sh::TIntermBinary"* %76(%"class.sh::TIntermNode"* %60) #17
  %78 = icmp eq %"class.sh::TIntermBinary"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %77, i64 0, i32 0, i32 1
  %81 = load i8, i8* %80, align 8
  %82 = and i8 %81, -4
  %83 = icmp eq i8 %82, 44
  br i1 %83, label %84, label %98

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %77, i64 0, i32 2
  br label %69

86:                                               ; preds = %72
  %87 = bitcast %"class.sh::TIntermTyped"* %59 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %88 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %87, align 8
  %89 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %88, i64 19
  %90 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %89, align 8
  %91 = tail call %"class.sh::TIntermSymbol"* %90(%"class.sh::TIntermNode"* %60) #17
  %92 = icmp eq %"class.sh::TIntermSymbol"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %95 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %94, align 8
  %96 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %91, i64 0, i32 1
  %97 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %96, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %95, %"class.sh::TVariable"* dereferenceable(40) %97) #17
  br label %98

98:                                               ; preds = %79, %93, %86, %55
  %99 = icmp eq %"class.sh::TIntermNode"* %5, null
  br i1 %99, label %140, label %100

100:                                              ; preds = %98, %110
  %101 = phi %"class.sh::TIntermNode"* [ %113, %110 ], [ %5, %98 ]
  %102 = bitcast %"class.sh::TIntermNode"* %101 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %103 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %103, i64 12
  %105 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %104, align 8
  %106 = tail call %"class.sh::TIntermSwizzle"* %105(%"class.sh::TIntermNode"* %101) #17
  %107 = icmp eq %"class.sh::TIntermSwizzle"* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %106, i64 0, i32 1
  br label %110

110:                                              ; preds = %126, %108
  %111 = phi %"class.sh::TIntermTyped"** [ %109, %108 ], [ %127, %126 ]
  %112 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %111, align 8
  %113 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %112, i64 0, i32 0
  br label %100

114:                                              ; preds = %100
  %115 = bitcast %"class.sh::TIntermNode"* %101 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %116 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %115, align 8
  %117 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %116, i64 13
  %118 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %117, align 8
  %119 = tail call %"class.sh::TIntermBinary"* %118(%"class.sh::TIntermNode"* %101) #17
  %120 = icmp eq %"class.sh::TIntermBinary"* %119, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %119, i64 0, i32 0, i32 1
  %123 = load i8, i8* %122, align 8
  %124 = and i8 %123, -4
  %125 = icmp eq i8 %124, 44
  br i1 %125, label %126, label %140

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %119, i64 0, i32 2
  br label %110

128:                                              ; preds = %114
  %129 = bitcast %"class.sh::TIntermNode"* %101 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %130 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %129, align 8
  %131 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %130, i64 19
  %132 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %131, align 8
  %133 = tail call %"class.sh::TIntermSymbol"* %132(%"class.sh::TIntermNode"* %101) #17
  %134 = icmp eq %"class.sh::TIntermSymbol"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %137 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %136, align 8
  %138 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %133, i64 0, i32 1
  %139 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %138, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %137, %"class.sh::TVariable"* dereferenceable(40) %139) #17
  br label %140

140:                                              ; preds = %121, %135, %128, %98
  %141 = icmp ne %"class.sh::TIntermTyped"* %56, null
  %142 = or i1 %8, %141
  br i1 %142, label %143, label %184

143:                                              ; preds = %140
  %144 = icmp eq i32 %1, 2
  br i1 %144, label %145, label %177

145:                                              ; preds = %143
  %146 = bitcast %"class.sh::TIntermTyped"* %56 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %147 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %146, align 8
  %148 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %147, i64 31
  %149 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %148, align 8
  %150 = tail call dereferenceable(184) %"class.sh::TType"* %149(%"class.sh::TIntermTyped"* %56) #17
  %151 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %150, i64 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 5
  br i1 %153, label %154, label %174

154:                                              ; preds = %145
  %155 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %146, align 8
  %156 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %155, i64 31
  %157 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %156, align 8
  %158 = tail call dereferenceable(184) %"class.sh::TType"* %157(%"class.sh::TIntermTyped"* %56) #17
  %159 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %158, i64 0, i32 8
  %160 = load i8, i8* %159, align 8
  %161 = icmp eq i8 %160, 1
  br i1 %161, label %162, label %174

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %158, i64 0, i32 9
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 1
  br i1 %165, label %166, label %174

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %158, i64 0, i32 13
  %168 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %167, align 8
  %169 = icmp eq %"class.sh::TStructure"* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %158, i64 0, i32 10, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %170, %166, %162, %154, %145
  %175 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %176 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %175, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %176, %"struct.sh::TSourceLoc"* dereferenceable(16) %6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %177

177:                                              ; preds = %174, %170, %143
  %178 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %179 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %178, i64 64) #17
  %180 = bitcast i8* %179 to %"class.sh::TIntermLoop"*
  %181 = tail call %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"* %5) #17
  tail call void @_ZN2sh11TIntermLoopC1ENS_9TLoopTypeEPNS_11TIntermNodeEPNS_12TIntermTypedES5_PNS_12TIntermBlockE(%"class.sh::TIntermLoop"* %180, i32 %1, %"class.sh::TIntermNode"* %2, %"class.sh::TIntermTyped"* %56, %"class.sh::TIntermTyped"* %4, %"class.sh::TIntermBlock"* %181) #17
  %182 = getelementptr inbounds i8, i8* %179, i64 8
  %183 = bitcast %"struct.sh::TSourceLoc"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 4 %183, i64 16, i1 false) #17
  br label %251

184:                                              ; preds = %140
  %185 = bitcast %"class.sh::TIntermNode"* %3 to %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)***
  %186 = load %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)*** %185, align 8
  %187 = getelementptr inbounds %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)** %186, i64 11
  %188 = load %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermDeclaration"* (%"class.sh::TIntermNode"*)** %187, align 8
  %189 = tail call %"class.sh::TIntermDeclaration"* %188(%"class.sh::TIntermNode"* nonnull %3) #17
  %190 = bitcast %"class.sh::TIntermDeclaration"* %189 to %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)***
  %191 = load %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)*** %190, align 8
  %192 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)** %191, i64 27
  %193 = load %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermDeclaration"*)** %192, align 8
  %194 = tail call %"class.sh::TVector.30"* %193(%"class.sh::TIntermDeclaration"* %189) #17
  %195 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %194, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %195, align 8
  %197 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %196, align 8
  %198 = bitcast %"class.sh::TIntermNode"* %197 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %199 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %198, align 8
  %200 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %199, i64 13
  %201 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %200, align 8
  %202 = tail call %"class.sh::TIntermBinary"* %201(%"class.sh::TIntermNode"* %197) #17
  %203 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %204 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %203, i64 64) #17
  %205 = bitcast i8* %204 to %"class.sh::TIntermBlock"*
  %206 = bitcast i8* %204 to i32 (...)***
  %207 = getelementptr inbounds i8, i8* %204, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 16, i1 false) #17
  %208 = getelementptr inbounds i8, i8* %204, i64 24
  %209 = bitcast i8* %208 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %209, align 8
  %210 = getelementptr inbounds i8, i8* %204, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 25, i1 false) #17
  %211 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %212 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %211, i64 56) #17
  %213 = bitcast i8* %212 to %"class.sh::TIntermDeclaration"*
  %214 = bitcast i8* %212 to i32 (...)***
  %215 = getelementptr inbounds i8, i8* %212, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 16, i1 false) #17
  %216 = getelementptr inbounds i8, i8* %212, i64 24
  %217 = bitcast i8* %216 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %214, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %217, align 8
  %218 = getelementptr inbounds i8, i8* %212, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 24, i1 false) #17
  %219 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %202, i64 0, i32 2
  %220 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %219, align 8
  %221 = bitcast %"class.sh::TIntermTyped"* %220 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %222 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %221, align 8
  %223 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %222, i64 23
  %224 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %223, align 8
  %225 = tail call %"class.sh::TIntermTyped"* %224(%"class.sh::TIntermTyped"* %220) #17
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %213, %"class.sh::TIntermTyped"* %225) #17
  %226 = bitcast i8* %212 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %205, %"class.sh::TIntermNode"* %226) #17
  %227 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %228 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %227, i64 240) #17
  %229 = bitcast i8* %228 to %"class.sh::TIntermBinary"*
  %230 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %219, align 8
  %231 = bitcast %"class.sh::TIntermTyped"* %230 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %232 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %231, align 8
  %233 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %232, i64 23
  %234 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %233, align 8
  %235 = tail call %"class.sh::TIntermTyped"* %234(%"class.sh::TIntermTyped"* %230) #17
  %236 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %202, i64 0, i32 3
  %237 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %236, align 8
  %238 = bitcast %"class.sh::TIntermTyped"* %237 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)***
  %239 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*** %238, align 8
  %240 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %239, i64 23
  %241 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*)** %240, align 8
  %242 = tail call %"class.sh::TIntermTyped"* %241(%"class.sh::TIntermTyped"* %237) #17
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %229, i8 zeroext -118, %"class.sh::TIntermTyped"* %235, %"class.sh::TIntermTyped"* %242) #17
  %243 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %244 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %243, i64 64) #17
  %245 = bitcast i8* %244 to %"class.sh::TIntermLoop"*
  %246 = bitcast i8* %228 to %"class.sh::TIntermTyped"*
  %247 = tail call %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"* %5) #17
  tail call void @_ZN2sh11TIntermLoopC1ENS_9TLoopTypeEPNS_11TIntermNodeEPNS_12TIntermTypedES5_PNS_12TIntermBlockE(%"class.sh::TIntermLoop"* %245, i32 %1, %"class.sh::TIntermNode"* %2, %"class.sh::TIntermTyped"* %246, %"class.sh::TIntermTyped"* %4, %"class.sh::TIntermBlock"* %247) #17
  %248 = bitcast i8* %244 to %"class.sh::TIntermNode"*
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %205, %"class.sh::TIntermNode"* %248) #17
  %249 = getelementptr inbounds i8, i8* %244, i64 8
  %250 = bitcast %"struct.sh::TSourceLoc"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %249, i8* align 4 %250, i64 16, i1 false) #17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 4 %250, i64 16, i1 false) #17
  br label %251

251:                                              ; preds = %184, %177
  %252 = phi i8* [ %179, %177 ], [ %204, %184 ]
  %253 = bitcast i8* %252 to %"class.sh::TIntermNode"*
  ret %"class.sh::TIntermNode"* %253
}

declare %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"*) local_unnamed_addr #3

declare void @_ZN2sh11TIntermLoopC1ENS_9TLoopTypeEPNS_11TIntermNodeEPNS_12TIntermTypedES5_PNS_12TIntermBlockE(%"class.sh::TIntermLoop"*, i32, %"class.sh::TIntermNode"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*) unnamed_addr #3

declare void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermNode"* @_ZN2sh13TParseContext9addIfElseEPNS_12TIntermTypedENS_15TIntermNodePairERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %7 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %7, i64 31
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %8, align 8
  %10 = tail call dereferenceable(184) %"class.sh::TType"* %9(%"class.sh::TIntermTyped"* %1) #17
  %11 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %14, label %34

14:                                               ; preds = %5
  %15 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %6, align 8
  %16 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %15, i64 31
  %17 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %16, align 8
  %18 = tail call dereferenceable(184) %"class.sh::TType"* %17(%"class.sh::TIntermTyped"* %1) #17
  %19 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 8
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 1
  br i1 %21, label %22, label %34

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 9
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 13
  %28 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %27, align 8
  %29 = icmp eq %"class.sh::TStructure"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 10, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30, %26, %22, %14, %5
  %35 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %36 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %35, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %36, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %37

37:                                               ; preds = %30, %34
  %38 = phi i1 [ false, %34 ], [ true, %30 ]
  %39 = icmp eq %"class.sh::TIntermNode"* %2, null
  br i1 %39, label %80, label %40

40:                                               ; preds = %37, %50
  %41 = phi %"class.sh::TIntermNode"* [ %53, %50 ], [ %2, %37 ]
  %42 = bitcast %"class.sh::TIntermNode"* %41 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %43 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %43, i64 12
  %45 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %44, align 8
  %46 = tail call %"class.sh::TIntermSwizzle"* %45(%"class.sh::TIntermNode"* %41) #17
  %47 = icmp eq %"class.sh::TIntermSwizzle"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %46, i64 0, i32 1
  br label %50

50:                                               ; preds = %66, %48
  %51 = phi %"class.sh::TIntermTyped"** [ %49, %48 ], [ %67, %66 ]
  %52 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %51, align 8
  %53 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %52, i64 0, i32 0
  br label %40

54:                                               ; preds = %40
  %55 = bitcast %"class.sh::TIntermNode"* %41 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %56 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %56, i64 13
  %58 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %57, align 8
  %59 = tail call %"class.sh::TIntermBinary"* %58(%"class.sh::TIntermNode"* %41) #17
  %60 = icmp eq %"class.sh::TIntermBinary"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %59, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 8
  %64 = and i8 %63, -4
  %65 = icmp eq i8 %64, 44
  br i1 %65, label %66, label %80

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %59, i64 0, i32 2
  br label %50

68:                                               ; preds = %54
  %69 = bitcast %"class.sh::TIntermNode"* %41 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %70 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %70, i64 19
  %72 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %71, align 8
  %73 = tail call %"class.sh::TIntermSymbol"* %72(%"class.sh::TIntermNode"* %41) #17
  %74 = icmp eq %"class.sh::TIntermSymbol"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %77 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %76, align 8
  %78 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %73, i64 0, i32 1
  %79 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %78, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %77, %"class.sh::TVariable"* dereferenceable(40) %79) #17
  br label %80

80:                                               ; preds = %61, %75, %68, %37
  %81 = icmp eq %"class.sh::TIntermNode"* %3, null
  br i1 %81, label %122, label %82

82:                                               ; preds = %80, %92
  %83 = phi %"class.sh::TIntermNode"* [ %95, %92 ], [ %3, %80 ]
  %84 = bitcast %"class.sh::TIntermNode"* %83 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %85 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %85, i64 12
  %87 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %86, align 8
  %88 = tail call %"class.sh::TIntermSwizzle"* %87(%"class.sh::TIntermNode"* %83) #17
  %89 = icmp eq %"class.sh::TIntermSwizzle"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %88, i64 0, i32 1
  br label %92

92:                                               ; preds = %108, %90
  %93 = phi %"class.sh::TIntermTyped"** [ %91, %90 ], [ %109, %108 ]
  %94 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %94, i64 0, i32 0
  br label %82

96:                                               ; preds = %82
  %97 = bitcast %"class.sh::TIntermNode"* %83 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %98 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %98, i64 13
  %100 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %99, align 8
  %101 = tail call %"class.sh::TIntermBinary"* %100(%"class.sh::TIntermNode"* %83) #17
  %102 = icmp eq %"class.sh::TIntermBinary"* %101, null
  br i1 %102, label %110, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %101, i64 0, i32 0, i32 1
  %105 = load i8, i8* %104, align 8
  %106 = and i8 %105, -4
  %107 = icmp eq i8 %106, 44
  br i1 %107, label %108, label %122

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %101, i64 0, i32 2
  br label %92

110:                                              ; preds = %96
  %111 = bitcast %"class.sh::TIntermNode"* %83 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %112 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %112, i64 19
  %114 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %113, align 8
  %115 = tail call %"class.sh::TIntermSymbol"* %114(%"class.sh::TIntermNode"* %83) #17
  %116 = icmp eq %"class.sh::TIntermSymbol"* %115, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %119 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %118, align 8
  %120 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %115, i64 0, i32 1
  %121 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %120, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %119, %"class.sh::TVariable"* dereferenceable(40) %121) #17
  br label %122

122:                                              ; preds = %103, %117, %110, %80
  br i1 %38, label %123, label %147

123:                                              ; preds = %122
  %124 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0
  %125 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %126 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %126, i64 5
  %128 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %127, align 8
  %129 = tail call %"class.sh::TIntermConstantUnion"* %128(%"class.sh::TIntermNode"* %124) #17
  %130 = icmp eq %"class.sh::TIntermConstantUnion"* %129, null
  br i1 %130, label %147, label %131

131:                                              ; preds = %123
  %132 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %125, align 8
  %133 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %132, i64 5
  %134 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %133, align 8
  %135 = tail call %"class.sh::TIntermConstantUnion"* %134(%"class.sh::TIntermNode"* %124) #17
  %136 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %135, i64 0, i32 1
  %137 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %136, align 8
  %138 = icmp eq %"class.sh::TConstantUnion"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %131
  %140 = tail call zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"* nonnull %137) #17
  br i1 %140, label %141, label %144

141:                                              ; preds = %139
  %142 = tail call %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"* %2) #17
  %143 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %142, i64 0, i32 0
  br label %197

144:                                              ; preds = %131, %139
  %145 = tail call %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"* %3) #17
  %146 = getelementptr inbounds %"class.sh::TIntermBlock", %"class.sh::TIntermBlock"* %145, i64 0, i32 0
  br label %197

147:                                              ; preds = %123, %122
  %148 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %149 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %148, i64 48) #17
  %150 = bitcast i8* %149 to %"class.sh::TIntermIfElse"*
  %151 = tail call %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"* %2) #17
  %152 = tail call %"class.sh::TIntermBlock"* @_ZN2sh11EnsureBlockEPNS_11TIntermNodeE(%"class.sh::TIntermNode"* %3) #17
  tail call void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"* %150, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermBlock"* %151, %"class.sh::TIntermBlock"* %152) #17
  br label %153

153:                                              ; preds = %164, %147
  %154 = phi %"class.sh::TIntermTyped"* [ %1, %147 ], [ %166, %164 ]
  %155 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %154, i64 0, i32 0
  %156 = bitcast %"class.sh::TIntermTyped"* %154 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %157 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %156, align 8
  %158 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %157, i64 12
  %159 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %158, align 8
  %160 = tail call %"class.sh::TIntermSwizzle"* %159(%"class.sh::TIntermNode"* %155) #17
  %161 = icmp eq %"class.sh::TIntermSwizzle"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %160, i64 0, i32 1
  br label %164

164:                                              ; preds = %179, %162
  %165 = phi %"class.sh::TIntermTyped"** [ %163, %162 ], [ %180, %179 ]
  %166 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %165, align 8
  br label %153

167:                                              ; preds = %153
  %168 = bitcast %"class.sh::TIntermTyped"* %154 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %169 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %168, align 8
  %170 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %169, i64 13
  %171 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %170, align 8
  %172 = tail call %"class.sh::TIntermBinary"* %171(%"class.sh::TIntermNode"* %155) #17
  %173 = icmp eq %"class.sh::TIntermBinary"* %172, null
  br i1 %173, label %181, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %172, i64 0, i32 0, i32 1
  %176 = load i8, i8* %175, align 8
  %177 = and i8 %176, -4
  %178 = icmp eq i8 %177, 44
  br i1 %178, label %179, label %193

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %172, i64 0, i32 2
  br label %164

181:                                              ; preds = %167
  %182 = bitcast %"class.sh::TIntermTyped"* %154 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %183 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %182, align 8
  %184 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %183, i64 19
  %185 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %184, align 8
  %186 = tail call %"class.sh::TIntermSymbol"* %185(%"class.sh::TIntermNode"* %155) #17
  %187 = icmp eq %"class.sh::TIntermSymbol"* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %190 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %189, align 8
  %191 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %186, i64 0, i32 1
  %192 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %191, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %190, %"class.sh::TVariable"* dereferenceable(40) %192) #17
  br label %193

193:                                              ; preds = %174, %181, %188
  %194 = bitcast i8* %149 to %"class.sh::TIntermNode"*
  %195 = getelementptr inbounds i8, i8* %149, i64 8
  %196 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 4 %196, i64 16, i1 false) #17
  br label %197

197:                                              ; preds = %193, %144, %141
  %198 = phi %"class.sh::TIntermNode"* [ %143, %141 ], [ %146, %144 ], [ %194, %193 ]
  ret %"class.sh::TIntermNode"* %198
}

declare void @_ZN2sh13TIntermIfElseC1EPNS_12TIntermTypedEPNS_12TIntermBlockES4_(%"class.sh::TIntermIfElse"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"class.sh::TIntermBlock"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext21addFullySpecifiedTypeEPNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TPublicType"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 4
  %4 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  tail call void @_ZN2sh13TParseContext23checkPrecisionSpecifiedERKNS_10TSourceLocENS_10TPrecisionENS_10TBasicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i32 %5, i32 %7)
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 300
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"* %1) #17
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %15 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %14, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %15, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.182, i64 0, i64 0)) #17
  tail call void @_ZN2sh11TPublicType14clearArraynessEv(%"struct.sh::TPublicType"* %1) #17
  br label %16

16:                                               ; preds = %13, %11, %2
  ret void
}

declare void @_ZN2sh11TPublicType14clearArraynessEv(%"struct.sh::TPublicType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext21addFullySpecifiedTypeERKNS_21TTypeQualifierBuilderERKNS_11TPublicTypeE(%"struct.sh::TPublicType"* noalias sret, %"class.sh::TParseContext"* nocapture readonly, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.sh::TTypeQualifier", align 4
  %6 = bitcast %"struct.sh::TTypeQualifier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %8 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZNK2sh21TTypeQualifierBuilder24getVariableTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* nonnull sret %5, %"class.sh::TTypeQualifierBuilder"* %2, %"class.sh::TDiagnostics"* %8) #17
  %9 = bitcast %"struct.sh::TPublicType"* %0 to i8*
  %10 = bitcast %"struct.sh::TPublicType"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 160, i1 false)
  %11 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 3
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 4
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 4
  store i8 %15, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 5
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 5
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 1
  %21 = bitcast %"struct.sh::TLayoutQualifier"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 4 %6, i64 89, i1 false)
  %22 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 5, i1 false)
  %24 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %3, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i32 %25, i32 %28
  store i32 %30, i32* %26, align 4
  %31 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %3, i64 0, i32 0, i32 4
  %32 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %3, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  call void @_ZN2sh13TParseContext23checkPrecisionSpecifiedERKNS_10TSourceLocENS_10TPrecisionENS_10TBasicTypeE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i32 %30, i32 %33)
  %34 = icmp eq i8 %15, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 300
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = call zeroext i1 @_ZN2sh19CanBeInvariantESSL1ENS_10TQualifierE(i32 %12) #17
  br i1 %40, label %47, label %41

41:                                               ; preds = %39
  %42 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %42, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %47

43:                                               ; preds = %35
  %44 = call zeroext i1 @_ZN2sh28CanBeInvariantESSL3OrGreaterENS_10TQualifierE(i32 %12) #17
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %46, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %47

47:                                               ; preds = %4, %39, %41, %43, %45
  %48 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 1, i32 4
  %49 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %48) #17
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %47, %57
  %52 = phi i64 [ %58, %57 ], [ 0, %47 ]
  %53 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %48, i64 %52) #17
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = icmp ult i64 %52, 3
  br i1 %56, label %61, label %64

57:                                               ; preds = %51
  %58 = add nuw i64 %52, 1
  %59 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %48) #17
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %51, label %67

61:                                               ; preds = %55
  %62 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %52
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %55, %61
  %65 = phi i8* [ %63, %61 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %55 ]
  %66 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %66, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.144, i64 0, i64 0), i8* nonnull %65) #17
  br label %67

67:                                               ; preds = %57, %47, %64
  %68 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %0, i64 0, i32 1, i32 10
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %72, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #17
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %75 = load i32, i32* %74, align 8
  %76 = icmp slt i32 %75, 300
  br i1 %76, label %77, label %99

77:                                               ; preds = %73
  %78 = call zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"* %3) #17
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %80, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.182, i64 0, i64 0)) #17
  call void @_ZN2sh11TPublicType14clearArraynessEv(%"struct.sh::TPublicType"* %0) #17
  br label %81

81:                                               ; preds = %79, %77
  %82 = load i32, i32* %13, align 4
  %83 = icmp eq i32 %82, 3
  br i1 %83, label %84, label %90

84:                                               ; preds = %81
  %85 = load i32, i32* %32, align 8
  switch i32 %85, label %119 [
    i32 5, label %86
    i32 3, label %86
  ]

86:                                               ; preds = %84, %84
  %87 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 3)
  %88 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %88, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.183, i64 0, i64 0), i8* %87) #17
  %89 = load i32, i32* %13, align 4
  br label %90

90:                                               ; preds = %86, %81
  %91 = phi i32 [ %89, %86 ], [ %82, %81 ]
  %92 = and i32 %91, -2
  %93 = icmp eq i32 %92, 4
  br i1 %93, label %94, label %119

94:                                               ; preds = %90
  %95 = load i32, i32* %32, align 8
  switch i32 %95, label %119 [
    i32 5, label %96
    i32 3, label %96
  ]

96:                                               ; preds = %94, %94
  %97 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %91)
  %98 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %98, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.183, i64 0, i64 0), i8* %97) #17
  br label %119

99:                                               ; preds = %73
  %100 = call zeroext i1 @_ZNK2sh16TLayoutQualifier7isEmptyEv(%"struct.sh::TLayoutQualifier"* %20)
  br i1 %100, label %107, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 0
  %103 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %102, align 8
  %104 = call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %103) #17
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %106, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %107

107:                                              ; preds = %105, %101, %99
  %108 = load i32, i32* %13, align 4
  %109 = call zeroext i1 @_ZN2sh9IsVaryingENS_10TQualifierE(i32 %108) #17
  %110 = load i32, i32* %13, align 4
  br i1 %109, label %112, label %111

111:                                              ; preds = %107
  switch i32 %110, label %114 [
    i32 9, label %112
    i32 10, label %112
    i32 13, label %112
  ]

112:                                              ; preds = %107, %111, %111, %111
  call void @_ZN2sh13TParseContext30checkInputOutputTypeIsValidES3ENS_10TQualifierERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %1, i32 %110, %"struct.sh::TPublicType"* dereferenceable(160) %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %31)
  %113 = load i32, i32* %13, align 4
  br label %114

114:                                              ; preds = %111, %112
  %115 = phi i32 [ %110, %111 ], [ %113, %112 ]
  %116 = icmp eq i32 %115, 60
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %118, %"struct.sh::TSourceLoc"* dereferenceable(16) %31, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0)) #17
  br label %119

119:                                              ; preds = %84, %94, %90, %114, %117, %96
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #17
  ret void
}

declare void @_ZNK2sh21TTypeQualifierBuilder24getVariableTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* sret, %"class.sh::TTypeQualifierBuilder"*, %"class.sh::TDiagnostics"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext30checkInputOutputTypeIsValidES3ENS_10TQualifierERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 5
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %11 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %11, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.185, i64 0, i64 0), i8* %9) #17
  br label %12

12:                                               ; preds = %8, %4
  switch i32 %1, label %31 [
    i32 9, label %13
    i32 10, label %19
    i32 13, label %19
  ]

13:                                               ; preds = %12
  %14 = tail call zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"* %2) #17
  br i1 %14, label %15, label %90

15:                                               ; preds = %13
  %16 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 9)
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %18 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %17, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %18, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.186, i64 0, i64 0), i8* %16) #17
  br label %90

19:                                               ; preds = %12, %12
  %20 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 4
  %22 = icmp ugt i8 %21, 1
  br i1 %22, label %23, label %90

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp ugt i8 %25, 1
  br i1 %26, label %27, label %90

27:                                               ; preds = %23
  %28 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %29, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.187, i64 0, i64 0), i8* %28) #17
  br label %90

31:                                               ; preds = %12
  %32 = load i32, i32* %5, align 8
  %33 = add i32 %32, -3
  %34 = icmp ult i32 %33, 2
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = tail call zeroext i1 @_ZNK2sh11TPublicType25isStructureContainingTypeENS_10TBasicTypeE(%"struct.sh::TPublicType"* %2, i32 3) #17
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = tail call zeroext i1 @_ZNK2sh11TPublicType25isStructureContainingTypeENS_10TBasicTypeE(%"struct.sh::TPublicType"* %2, i32 4) #17
  br label %39

39:                                               ; preds = %31, %37, %35
  %40 = phi i1 [ true, %35 ], [ %38, %37 ], [ true, %31 ]
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 319
  br i1 %43, label %51, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %46 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %45, align 8
  %47 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %46, i8 zeroext 11) #17
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %45, align 8
  %50 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %49, i8 zeroext 20) #17
  br label %51

51:                                               ; preds = %48, %44, %39
  %52 = phi i1 [ true, %44 ], [ true, %39 ], [ %50, %48 ]
  br i1 %40, label %53, label %63

53:                                               ; preds = %51
  switch i32 %1, label %54 [
    i32 50, label %63
    i32 45, label %63
  ]

54:                                               ; preds = %53
  br i1 %52, label %55, label %59

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 35632
  br i1 %58, label %59, label %63

59:                                               ; preds = %55, %54
  %60 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %61 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %62 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %61, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %62, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.188, i64 0, i64 0), i8* %60) #17
  br label %63

63:                                               ; preds = %53, %53, %51, %59, %55
  %64 = load i32, i32* %5, align 8
  %65 = icmp eq i32 %64, 90
  br i1 %65, label %66, label %90

66:                                               ; preds = %63
  %67 = tail call zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"* %2) #17
  br i1 %67, label %68, label %72

68:                                               ; preds = %66
  %69 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %70 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %71 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %70, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %71, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.189, i64 0, i64 0), i8* %69) #17
  br label %72

72:                                               ; preds = %68, %66
  %73 = tail call zeroext i1 @_ZNK2sh11TPublicType27isStructureContainingArraysEv(%"struct.sh::TPublicType"* %2) #17
  br i1 %73, label %74, label %78

74:                                               ; preds = %72
  %75 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %76 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %77 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %76, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %77, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.190, i64 0, i64 0), i8* %75) #17
  br label %78

78:                                               ; preds = %74, %72
  %79 = tail call zeroext i1 @_ZNK2sh11TPublicType25isStructureContainingTypeENS_10TBasicTypeE(%"struct.sh::TPublicType"* %2, i32 90) #17
  br i1 %79, label %80, label %84

80:                                               ; preds = %78
  %81 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %82 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %83 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %82, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %83, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.191, i64 0, i64 0), i8* %81) #17
  br label %84

84:                                               ; preds = %80, %78
  %85 = tail call zeroext i1 @_ZNK2sh11TPublicType25isStructureContainingTypeENS_10TBasicTypeE(%"struct.sh::TPublicType"* %2, i32 5) #17
  br i1 %85, label %86, label %90

86:                                               ; preds = %84
  %87 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %88 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %89 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %88, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %89, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.192, i64 0, i64 0), i8* %87) #17
  br label %90

90:                                               ; preds = %19, %63, %86, %84, %23, %27, %13, %15
  ret void
}

declare zeroext i1 @_ZNK2sh11TPublicType25isStructureContainingTypeENS_10TBasicTypeE(%"struct.sh::TPublicType"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2sh11TPublicType27isStructureContainingArraysEv(%"struct.sh::TPublicType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext39checkLocalVariableConstStorageQualifierERKNS_21TQualifierWrapperBaseE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TQualifierWrapperBase"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.sh::TQualifierWrapperBase"* %1 to i32 (%"class.sh::TQualifierWrapperBase"*)***
  %4 = load i32 (%"class.sh::TQualifierWrapperBase"*)**, i32 (%"class.sh::TQualifierWrapperBase"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.sh::TQualifierWrapperBase"*)*, i32 (%"class.sh::TQualifierWrapperBase"*)** %4, i64 2
  %6 = load i32 (%"class.sh::TQualifierWrapperBase"*)*, i32 (%"class.sh::TQualifierWrapperBase"*)** %5, align 8
  %7 = tail call i32 %6(%"class.sh::TQualifierWrapperBase"* %1) #17
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 45
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.sh::TQualifierWrapperBase", %"class.sh::TQualifierWrapperBase"* %1, i64 1
  %15 = bitcast %"class.sh::TQualifierWrapperBase"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %37, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %20 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %20) #17
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.sh::TQualifierWrapperBase", %"class.sh::TQualifierWrapperBase"* %1, i64 0, i32 1
  %24 = load i32, i32* %15, align 8
  %25 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %24) #17
  %26 = icmp eq i8* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %22, %27
  %28 = phi i64 [ %32, %27 ], [ 0, %22 ]
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  %32 = add i64 %28, 1
  br i1 %31, label %33, label %27

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %35 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %34, align 8
  %36 = select i1 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %25
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %35, %"struct.sh::TSourceLoc"* dereferenceable(16) %23, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.193, i64 0, i64 0), i8* %36) #17
  br label %37

37:                                               ; preds = %9, %18, %33, %13, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext38checkAtomicCounterOffsetDoesNotOverlapEbRKNS_10TSourceLocEPNS_5TTypeE(%"class.sh::TParseContext"*, i1 zeroext, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TType"*) local_unnamed_addr #2 align 2 {
  %5 = alloca [28 x i8], align 4
  %6 = alloca [56 x i8], align 4
  %7 = getelementptr inbounds [56 x i8], [56 x i8]* %6, i64 0, i64 0
  %8 = getelementptr inbounds [28 x i8], [28 x i8]* %5, i64 0, i64 0
  %9 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = tail call i32 @_ZNK2sh5TType19getArraySizeProductEv(%"class.sh::TType"* %3) #17
  %14 = zext i32 %13 to i64
  %15 = shl nuw nsw i64 %14, 2
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi i64 [ %15, %12 ], [ 4, %4 ]
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %8)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7)
  %18 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7
  %19 = bitcast %"struct.sh::TLayoutQualifier"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 %19, i64 28, i1 false)
  %20 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 6
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 7, i32 7
  %25 = bitcast i32* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %25, i64 56, i1 false)
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47
  %27 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %59, label %31

31:                                               ; preds = %16
  %32 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %55, %31
  %34 = phi %"class.std::__1::__tree_node"* [ %58, %55 ], [ %29, %31 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %57, %55 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %21, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %55

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %61

45:                                               ; preds = %33
  %46 = icmp slt i32 %37, %21
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %61

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %61

55:                                               ; preds = %47, %39
  %56 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %49, %47 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %48, %47 ]
  %58 = bitcast %"class.std::__1::__tree_node_base"* %56 to %"class.std::__1::__tree_node"*
  br label %33

59:                                               ; preds = %16
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  br label %61

61:                                               ; preds = %59, %53, %51, %43
  %62 = phi %"class.std::__1::__tree_end_node"* [ %27, %59 ], [ %44, %43 ], [ %52, %51 ], [ %54, %53 ]
  %63 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %40, %43 ], [ %48, %51 ], [ %35, %53 ]
  %64 = bitcast %"class.std::__1::__tree_node_base"** %63 to %"class.std::__1::__tree_node"**
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node"* %65, null
  br i1 %66, label %67, label %95

67:                                               ; preds = %61
  %68 = tail call i8* @_Znwm(i64 72) #18, !noalias !9
  %69 = getelementptr inbounds i8, i8* %68, i64 32
  %70 = bitcast i8* %69 to i32*
  store i32 %21, i32* %70, align 8, !noalias !9
  %71 = getelementptr inbounds i8, i8* %68, i64 40
  %72 = bitcast i8* %71 to i32*
  store i32 0, i32* %72, align 8, !noalias !9
  %73 = getelementptr inbounds i8, i8* %68, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #17, !noalias !9
  %74 = bitcast i8* %68 to %"class.std::__1::__tree_node"*
  %75 = bitcast i8* %68 to %"class.std::__1::__tree_node_base"*
  %76 = getelementptr inbounds i8, i8* %68, i64 16
  %77 = bitcast i8* %76 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** %77, align 8
  %78 = bitcast %"class.std::__1::__tree_node_base"** %63 to i8**
  store i8* %68, i8** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::map.64", %"class.std::__1::map.64"* %26, i64 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %67
  %85 = ptrtoint %"class.std::__1::__tree_node_base"* %82 to i64
  %86 = bitcast %"class.std::__1::map.64"* %26 to i64*
  store i64 %85, i64* %86, align 8
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  br label %88

88:                                               ; preds = %84, %67
  %89 = phi %"class.std::__1::__tree_node_base"* [ %75, %67 ], [ %87, %84 ]
  %90 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %89) #17
  %92 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %61, %88
  %96 = phi %"class.std::__1::__tree_node"* [ %74, %88 ], [ %65, %61 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 1, i32 0, i32 1
  %98 = icmp eq i32 %23, -1
  %99 = or i1 %98, %1
  br i1 %99, label %100, label %104

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.sh::TParseContext::AtomicCounterBindingState", %"class.sh::TParseContext::AtomicCounterBindingState"* %97, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = tail call i32 @_ZN2sh13TParseContext25AtomicCounterBindingState10insertSpanEim(%"class.sh::TParseContext::AtomicCounterBindingState"* %97, i32 %102, i64 %17) #17
  br label %106

104:                                              ; preds = %95
  %105 = tail call i32 @_ZN2sh13TParseContext25AtomicCounterBindingState10insertSpanEim(%"class.sh::TParseContext::AtomicCounterBindingState"* %97, i32 %23, i64 %17)
  br label %106

106:                                              ; preds = %104, %100
  %107 = phi i32 [ %103, %100 ], [ %105, %104 ]
  %108 = icmp eq i32 %107, -1
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %111 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %110, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %111, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.200, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %113

112:                                              ; preds = %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* nonnull align 4 %8, i64 28, i1 false)
  store i32 %21, i32* %20, align 4
  store i32 %107, i32* %22, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 4 %7, i64 53, i1 false)
  br label %113

113:                                              ; preds = %112, %109
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2sh13TParseContext25AtomicCounterBindingState10insertSpanEim(%"class.sh::TParseContext::AtomicCounterBindingState"*, i32, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = trunc i64 %2 to i32
  %5 = add nsw i32 %4, %1
  %6 = getelementptr inbounds %"class.sh::TParseContext::AtomicCounterBindingState", %"class.sh::TParseContext::AtomicCounterBindingState"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.98", %"class.std::__1::vector.98"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.gl::Range"*, %"class.gl::Range"** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TParseContext::AtomicCounterBindingState", %"class.sh::TParseContext::AtomicCounterBindingState"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.gl::Range"*, %"class.gl::Range"** %9, align 8
  %11 = icmp eq %"class.gl::Range"* %8, %10
  %12 = ptrtoint %"class.gl::Range"* %8 to i64
  br i1 %11, label %27, label %15

13:                                               ; preds = %15
  %14 = icmp eq %"class.gl::Range"* %26, %10
  br i1 %14, label %27, label %15

15:                                               ; preds = %3, %13
  %16 = phi %"class.gl::Range"* [ %26, %13 ], [ %8, %3 ]
  %17 = bitcast %"class.gl::Range"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, %1
  %21 = icmp sgt i32 %5, %19
  %22 = lshr i64 %18, 32
  %23 = trunc i64 %22 to i32
  %24 = icmp sgt i32 %23, %1
  %25 = select i1 %20, i1 %24, i1 %21
  %26 = getelementptr inbounds %"class.gl::Range", %"class.gl::Range"* %16, i64 1
  br i1 %25, label %102, label %13

27:                                               ; preds = %13, %3
  %28 = getelementptr inbounds %"class.sh::TParseContext::AtomicCounterBindingState", %"class.sh::TParseContext::AtomicCounterBindingState"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.gl::Range"*, %"class.gl::Range"** %28, align 8
  %30 = icmp eq %"class.gl::Range"* %10, %29
  %31 = ptrtoint %"class.gl::Range"* %29 to i64
  br i1 %30, label %41, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.gl::Range"* %10 to i64*
  %34 = zext i32 %5 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i32 %1 to i64
  %37 = or i64 %35, %36
  store i64 %37, i64* %33, align 4
  %38 = getelementptr inbounds %"class.gl::Range", %"class.gl::Range"* %10, i64 1
  %39 = ptrtoint %"class.gl::Range"* %38 to i64
  %40 = bitcast %"class.gl::Range"** %9 to i64*
  store i64 %39, i64* %40, align 8
  br label %100

41:                                               ; preds = %27
  %42 = ptrtoint %"class.gl::Range"* %10 to i64
  %43 = bitcast %"class.gl::Range"** %9 to i64*
  %44 = bitcast %"class.std::__1::vector.98"* %6 to i64*
  %45 = sub i64 %42, %12
  %46 = ashr exact i64 %45, 3
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = bitcast %"class.std::__1::vector.98"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #20
  unreachable

51:                                               ; preds = %41
  %52 = bitcast %"class.gl::Range"** %28 to i64*
  %53 = sub i64 %31, %12
  %54 = ashr exact i64 %53, 3
  %55 = icmp ult i64 %54, 1152921504606846975
  br i1 %55, label %56, label %64

56:                                               ; preds = %51
  %57 = ashr exact i64 %53, 2
  %58 = icmp ult i64 %57, %47
  %59 = select i1 %58, i64 %47, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %56
  %62 = icmp ugt i64 %59, 2305843009213693951
  br i1 %62, label %63, label %64

63:                                               ; preds = %61
  tail call void @abort() #20
  unreachable

64:                                               ; preds = %61, %51
  %65 = phi i64 [ %59, %61 ], [ 2305843009213693951, %51 ]
  %66 = shl i64 %65, 3
  %67 = tail call i8* @_Znwm(i64 %66) #18
  %68 = bitcast i8* %67 to %"class.gl::Range"*
  br label %69

69:                                               ; preds = %64, %56
  %70 = phi i64 [ %65, %64 ], [ 0, %56 ]
  %71 = phi %"class.gl::Range"* [ %68, %64 ], [ null, %56 ]
  %72 = getelementptr inbounds %"class.gl::Range", %"class.gl::Range"* %71, i64 %46
  %73 = getelementptr inbounds %"class.gl::Range", %"class.gl::Range"* %71, i64 %70
  %74 = ptrtoint %"class.gl::Range"* %73 to i64
  %75 = bitcast %"class.gl::Range"* %72 to i64*
  %76 = zext i32 %5 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %1 to i64
  %79 = or i64 %77, %78
  store i64 %79, i64* %75, align 4
  %80 = getelementptr inbounds %"class.gl::Range", %"class.gl::Range"* %72, i64 1
  %81 = ptrtoint %"class.gl::Range"* %80 to i64
  %82 = load %"class.gl::Range"*, %"class.gl::Range"** %7, align 8
  %83 = load i64, i64* %43, align 8
  %84 = ptrtoint %"class.gl::Range"* %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 3
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds %"class.gl::Range", %"class.gl::Range"* %72, i64 %87
  %89 = ptrtoint %"class.gl::Range"* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %69
  %92 = bitcast %"class.gl::Range"* %88 to i8*
  %93 = bitcast %"class.gl::Range"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 %85, i1 false) #17
  %94 = load %"class.gl::Range"*, %"class.gl::Range"** %7, align 8
  br label %95

95:                                               ; preds = %91, %69
  %96 = phi %"class.gl::Range"* [ %82, %69 ], [ %94, %91 ]
  store i64 %89, i64* %44, align 8
  store i64 %81, i64* %43, align 8
  store i64 %74, i64* %52, align 8
  %97 = icmp eq %"class.gl::Range"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.gl::Range"* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #18
  br label %100

100:                                              ; preds = %32, %95, %98
  %101 = getelementptr inbounds %"class.sh::TParseContext::AtomicCounterBindingState", %"class.sh::TParseContext::AtomicCounterBindingState"* %0, i64 0, i32 0
  store i32 %5, i32* %101, align 8
  br label %102

102:                                              ; preds = %15, %100
  %103 = phi i32 [ %1, %100 ], [ -1, %15 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext33checkAtomicCounterOffsetAlignmentERKNS_10TSourceLocERKNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TType"* nocapture readonly dereferenceable(184)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 7, i32 6
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %11

11:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext39checkGeometryShaderInputAndSetArraySizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TType"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = tail call zeroext i1 @_ZN2sh21IsGeometryShaderInputEjNS_10TQualifierE(i32 %6, i32 %8) #17
  br i1 %9, label %10, label %61

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = add i64 %12, -1
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 48
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %27 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %26, align 8
  %28 = tail call %"class.sh::TVariable"* @_ZNK2sh12TSymbolTable28getGlInVariableWithArraySizeEv(%"class.sh::TSymbolTable"* %27) #17
  %29 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %28, i64 0, i32 1
  %30 = load %"class.sh::TType"*, %"class.sh::TType"** %29, align 8
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 10, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 10, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  %36 = getelementptr inbounds i32, i32* %32, i64 %35
  %37 = load i32, i32* %36, align 4
  tail call void @_ZN2sh5TType25sizeOutermostUnsizedArrayEj(%"class.sh::TType"* %3, i32 %37) #17
  br label %61

38:                                               ; preds = %21
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %40 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %39, align 8
  %41 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = select i1 %43, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %42
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %40, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.202, i64 0, i64 0), i8* %44) #17
  br label %61

45:                                               ; preds = %14
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %47 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %46, align 8
  %48 = tail call zeroext i1 @_ZN2sh12TSymbolTable16setGlInArraySizeEj(%"class.sh::TSymbolTable"* %47, i32 %19) #17
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %51 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %50, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %51, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %52

52:                                               ; preds = %45, %49
  %53 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 54
  store i32 %19, i32* %53, align 8
  br label %61

54:                                               ; preds = %10
  %55 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %56 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %55, align 8
  %57 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  %60 = select i1 %59, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %58
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %56, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.203, i64 0, i64 0), i8* %60) #17
  br label %61

61:                                               ; preds = %38, %25, %54, %52, %4
  ret void
}

declare void @_ZN2sh5TType25sizeOutermostUnsizedArrayEj(%"class.sh::TType"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext31setGeometryShaderInputArraySizeEjRKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture, i32, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %5 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %4, align 8
  %6 = tail call zeroext i1 @_ZN2sh12TSymbolTable16setGlInArraySizeEj(%"class.sh::TSymbolTable"* %5, i32 %1) #17
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %10

10:                                               ; preds = %7, %3
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 54
  store i32 %1, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext46checkTessellationShaderUnsizedArraysAndSetSizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TType"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN2sh33IsTessellationControlShaderOutputEjNS_10TQualifierE(i32 %8, i32 %6) #17
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = load i32, i32* %7, align 4
  %12 = tail call zeroext i1 @_ZN2sh32IsTessellationControlShaderInputEjNS_10TQualifierE(i32 %11, i32 %6) #17
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load i32, i32* %7, align 4
  %15 = tail call zeroext i1 @_ZN2sh35IsTessellationEvaluationShaderInputEjNS_10TQualifierE(i32 %14, i32 %6) #17
  br i1 %15, label %16, label %74

16:                                               ; preds = %13, %10, %4
  %17 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  %23 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %24
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %22, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.204, i64 0, i64 0), i8* %26) #17
  br label %74

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 10, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = add i64 %18, -1
  %31 = getelementptr inbounds i32, i32* %29, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %27
  switch i32 %6, label %74 [
    i32 82, label %35
    i32 88, label %35
    i32 50, label %35
    i32 52, label %35
    i32 49, label %35
    i32 53, label %35
    i32 83, label %38
    i32 45, label %38
    i32 47, label %38
    i32 44, label %38
    i32 48, label %38
  ]

35:                                               ; preds = %34, %34, %34, %34, %34, %34
  %36 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 55
  %37 = load i32, i32* %36, align 4
  tail call void @_ZN2sh5TType25sizeOutermostUnsizedArrayEj(%"class.sh::TType"* %3, i32 %37) #17
  br label %74

38:                                               ; preds = %34, %34, %34, %34, %34
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 56
  %40 = load i32, i32* %39, align 8
  tail call void @_ZN2sh5TType25sizeOutermostUnsizedArrayEj(%"class.sh::TType"* %3, i32 %40) #17
  br label %74

41:                                               ; preds = %27
  %42 = load i32, i32* %7, align 4
  %43 = tail call zeroext i1 @_ZN2sh32IsTessellationControlShaderInputEjNS_10TQualifierE(i32 %42, i32 %6) #17
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = load i32, i32* %7, align 4
  %46 = tail call zeroext i1 @_ZN2sh35IsTessellationEvaluationShaderInputEjNS_10TQualifierE(i32 %45, i32 %6) #17
  br i1 %46, label %47, label %58

47:                                               ; preds = %44, %41
  %48 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 55
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %32, %49
  br i1 %50, label %74, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %53 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %52, align 8
  %54 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  %57 = select i1 %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %55
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %53, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.205, i64 0, i64 0), i8* %57) #17
  br label %74

58:                                               ; preds = %44
  %59 = load i32, i32* %7, align 4
  %60 = tail call zeroext i1 @_ZN2sh33IsTessellationControlShaderOutputEjNS_10TQualifierE(i32 %59, i32 %6) #17
  br i1 %60, label %61, label %74

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 56
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %32, %63
  %65 = icmp eq i32 %63, 0
  %66 = or i1 %64, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %69 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %68, align 8
  %70 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  %73 = select i1 %72, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %71
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %69, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.206, i64 0, i64 0), i8* %73) #17
  br label %74

74:                                               ; preds = %47, %61, %58, %67, %51, %35, %38, %34, %13, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext22parseSingleDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::TVariable"*, align 8
  %6 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %7 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %6, i64 184) #17
  %8 = bitcast i8* %7 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %8, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1048576
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 1, i32 3, i32 0
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %7, i64 8
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %23 [
    i32 11, label %21
    i32 5, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds i8, i8* %7, i64 12
  store i8 1, i8* %22, align 4
  br label %23

23:                                               ; preds = %21, %17, %13, %4
  tail call void @_ZN2sh13TParseContext39checkGeometryShaderInputAndSetArraySizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %8)
  tail call void @_ZN2sh13TParseContext46checkTessellationShaderUnsizedArraysAndSetSizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %8)
  %24 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1
  tail call void @_ZN2sh13TParseContext30declarationQualifierErrorCheckENS_10TQualifierERKNS_16TLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 %25, %"struct.sh::TLayoutQualifier"* dereferenceable(92) %26, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  %27 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %28
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  store i8 %33, i8* %34, align 8
  br i1 %32, label %35, label %71

35:                                               ; preds = %23
  %36 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %8) #17
  br i1 %36, label %37, label %40

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %39 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %38, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %39, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %40

40:                                               ; preds = %37, %35
  %41 = getelementptr inbounds i8, i8* %7, i64 8
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 10
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %7, i64 100
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %52 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %51, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %52, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %53

53:                                               ; preds = %40, %45, %50
  %54 = bitcast i8* %7 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 90
  br i1 %56, label %57, label %66

57:                                               ; preds = %53
  %58 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %59 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %58, i64 40) #17
  %60 = bitcast i8* %59 to %"class.sh::TVariable"*
  %61 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %62 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %61, align 8
  tail call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %60, %"class.sh::TSymbolTable"* %62, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2shL21kEmptyImmutableStringE, %"class.sh::TType"* %8, i8 zeroext 3, i8 zeroext 0) #17
  %63 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %64 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %63, i64 32) #17
  %65 = bitcast i8* %64 to %"class.sh::TIntermSymbol"*
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %65, %"class.sh::TVariable"* %60) #17
  br label %94

66:                                               ; preds = %53
  %67 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 6
  br i1 %69, label %70, label %94

70:                                               ; preds = %66
  tail call void @_ZN2sh13TParseContext36setAtomicCounterBindingDefaultOffsetERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  br label %94

71:                                               ; preds = %23
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  tail call void @_ZN2sh13TParseContext36checkCanBeDeclaredWithoutInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %8)
  %72 = bitcast i8* %7 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 6
  br i1 %74, label %75, label %84

75:                                               ; preds = %71
  tail call void @_ZN2sh13TParseContext38checkAtomicCounterOffsetDoesNotOverlapEbRKNS_10TSourceLocEPNS_5TTypeE(%"class.sh::TParseContext"* %0, i1 zeroext false, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::TType"* %8)
  %76 = getelementptr inbounds i8, i8* %7, i64 52
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 3
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %83 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %82, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %83, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %84

84:                                               ; preds = %81, %75, %71
  %85 = bitcast %"class.sh::TVariable"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #17
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %5, align 8
  %86 = call zeroext i1 @_ZN2sh13TParseContext15declareVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_5TTypeEPPNS_9TVariableE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %8, %"class.sh::TVariable"** nonnull %5)
  br i1 %86, label %87, label %92

87:                                               ; preds = %84
  %88 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %89 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %88, i64 32) #17
  %90 = bitcast i8* %89 to %"class.sh::TIntermSymbol"*
  %91 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %5, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %90, %"class.sh::TVariable"* %91) #17
  br label %92

92:                                               ; preds = %87, %84
  %93 = phi %"class.sh::TIntermSymbol"* [ %90, %87 ], [ null, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #17
  br label %94

94:                                               ; preds = %57, %70, %66, %92
  %95 = phi %"class.sh::TIntermSymbol"* [ %65, %57 ], [ null, %70 ], [ null, %66 ], [ %93, %92 ]
  %96 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %97 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %96, i64 56) #17
  %98 = bitcast i8* %97 to %"class.sh::TIntermDeclaration"*
  %99 = bitcast i8* %97 to i32 (...)***
  %100 = getelementptr inbounds i8, i8* %97, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #17
  %101 = getelementptr inbounds i8, i8* %97, i64 24
  %102 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %97, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #17
  %104 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 4 %104, i64 16, i1 false) #17
  %105 = icmp eq %"class.sh::TIntermSymbol"* %95, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %94
  %107 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %95, i64 0, i32 0, i32 0, i32 1
  %108 = bitcast %"struct.sh::TSourceLoc"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 4 %104, i64 16, i1 false) #17
  %109 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %95, i64 0, i32 0
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %98, %"class.sh::TIntermTyped"* %109) #17
  br label %110

110:                                              ; preds = %94, %106
  ret %"class.sh::TIntermDeclaration"* %98
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext36setAtomicCounterBindingDefaultOffsetERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* nocapture readonly dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 43
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, %5
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %11 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %11, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  %12 = load i32, i32* %4, align 4
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i32 [ %5, %3 ], [ %12, %9 ]
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %23

20:                                               ; preds = %16, %13
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %22, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.214, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %98

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47
  %25 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %28, label %57, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi %"class.std::__1::__tree_node"* [ %56, %53 ], [ %27, %29 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %55, %53 ], [ %30, %29 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %14, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

43:                                               ; preds = %31
  %44 = icmp slt i32 %35, %14
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

53:                                               ; preds = %45, %37
  %54 = phi %"class.std::__1::__tree_node_base"* [ %39, %37 ], [ %47, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %46, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"* %54 to %"class.std::__1::__tree_node"*
  br label %31

57:                                               ; preds = %23
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  br label %59

59:                                               ; preds = %57, %51, %49, %41
  %60 = phi %"class.std::__1::__tree_end_node"* [ %25, %57 ], [ %42, %41 ], [ %50, %49 ], [ %52, %51 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %58, %57 ], [ %38, %41 ], [ %46, %49 ], [ %33, %51 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %94

65:                                               ; preds = %59
  %66 = tail call i8* @_Znwm(i64 72) #18, !noalias !12
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  %68 = bitcast i8* %67 to i32*
  store i32 %14, i32* %68, align 8, !noalias !12
  %69 = getelementptr inbounds i8, i8* %66, i64 40
  %70 = bitcast i8* %69 to i32*
  store i32 0, i32* %70, align 8, !noalias !12
  %71 = getelementptr inbounds i8, i8* %66, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #17, !noalias !12
  %72 = bitcast i8* %66 to %"class.std::__1::__tree_node"*
  %73 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds i8, i8* %66, i64 16
  %75 = bitcast i8* %74 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %75, align 8
  %76 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::map.64", %"class.std::__1::map.64"* %24, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %65
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %84 = bitcast %"class.std::__1::map.64"* %24 to i64*
  store i64 %83, i64* %84, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %86

86:                                               ; preds = %82, %65
  %87 = phi %"class.std::__1::__tree_node_base"* [ %73, %65 ], [ %85, %82 ]
  %88 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %87) #17
  %90 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 47, i32 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  %93 = load i32, i32* %17, align 4
  br label %94

94:                                               ; preds = %59, %86
  %95 = phi i32 [ %93, %86 ], [ %18, %59 ]
  %96 = phi %"class.std::__1::__tree_node"* [ %72, %86 ], [ %63, %59 ]
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %95, i32* %97, align 8
  br label %98

98:                                               ; preds = %94, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext27parseSingleArrayDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.sh::TSpan", align 8
  %8 = alloca %"class.sh::TVariable"*, align 8
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1
  tail call void @_ZN2sh13TParseContext30declarationQualifierErrorCheckENS_10TQualifierERKNS_16TLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 %11, %"struct.sh::TLayoutQualifier"* dereferenceable(92) %12, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  %13 = tail call zeroext i1 @_ZN2sh13TParseContext36checkIsValidTypeAndQualifierForArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"struct.sh::TPublicType"* dereferenceable(160) %1)
  %14 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %15 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %14, i64 184) #17
  %16 = bitcast i8* %15 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %16, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %17 = bitcast %"class.sh::TSpan"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = bitcast %"class.sh::TVector.0"* %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.sh::TSpan"* %7 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %7, i64 0, i32 1
  %22 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %5, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %19
  %26 = ashr exact i64 %25, 2
  store i64 %26, i64* %21, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %16, %"class.sh::TSpan"* nonnull dereferenceable(16) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  %27 = call zeroext i1 @_ZN2sh13TParseContext23checkArrayOfArraysInOutERKNS_10TSourceLocERKNS_11TPublicTypeERKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"class.sh::TType"* dereferenceable(184) %16)
  call void @_ZN2sh13TParseContext39checkGeometryShaderInputAndSetArraySizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %16)
  call void @_ZN2sh13TParseContext46checkTessellationShaderUnsizedArraysAndSetSizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %16)
  call void @_ZN2sh13TParseContext36checkCanBeDeclaredWithoutInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %16)
  %28 = bitcast i8* %15 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %31, label %40

31:                                               ; preds = %6
  call void @_ZN2sh13TParseContext38checkAtomicCounterOffsetDoesNotOverlapEbRKNS_10TSourceLocEPNS_5TTypeE(%"class.sh::TParseContext"* %0, i1 zeroext false, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::TType"* %16)
  %32 = getelementptr inbounds i8, i8* %15, i64 52
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %39 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %38, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %39, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %40

40:                                               ; preds = %37, %31, %6
  %41 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %42 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %41, i64 56) #17
  %43 = bitcast i8* %42 to %"class.sh::TIntermDeclaration"*
  %44 = bitcast i8* %42 to i32 (...)***
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #17
  %46 = getelementptr inbounds i8, i8* %42, i64 24
  %47 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #17
  %49 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 4 %49, i64 16, i1 false) #17
  %50 = bitcast %"class.sh::TVariable"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %8, align 8
  %51 = call zeroext i1 @_ZN2sh13TParseContext15declareVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_5TTypeEPPNS_9TVariableE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %16, %"class.sh::TVariable"** nonnull %8)
  br i1 %51, label %52, label %59

52:                                               ; preds = %40
  %53 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %54 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %53, i64 32) #17
  %55 = bitcast i8* %54 to %"class.sh::TIntermSymbol"*
  %56 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %8, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %55, %"class.sh::TVariable"* %56) #17
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %49, i64 16, i1 false) #17
  %58 = bitcast i8* %54 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %43, %"class.sh::TIntermTyped"* %58) #17
  br label %59

59:                                               ; preds = %52, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17
  ret %"class.sh::TIntermDeclaration"* %43
}

declare void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"*, %"class.sh::TSpan"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext26parseSingleInitDeclarationERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_PNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* nocapture readnone dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.sh::TIntermBinary"*, align 8
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1
  tail call void @_ZN2sh13TParseContext30declarationQualifierErrorCheckENS_10TQualifierERKNS_16TLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 %10, %"struct.sh::TLayoutQualifier"* dereferenceable(92) %11, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  %12 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %13 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %12, i64 56) #17
  %14 = bitcast i8* %13 to %"class.sh::TIntermDeclaration"*
  %15 = bitcast i8* %13 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %13, i64 24
  %18 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #17
  %20 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %20, i64 16, i1 false) #17
  %21 = bitcast %"class.sh::TIntermBinary"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  store %"class.sh::TIntermBinary"* null, %"class.sh::TIntermBinary"** %7, align 8
  %22 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %23 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %22, i64 184) #17
  %24 = bitcast i8* %23 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %24, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %25 = call zeroext i1 @_ZN2sh13TParseContext18executeInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeEPNS_12TIntermTypedEPPNS_13TIntermBinaryE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %24, %"class.sh::TIntermTyped"* %5, %"class.sh::TIntermBinary"** nonnull %7)
  br i1 %25, label %26, label %48

26:                                               ; preds = %6
  %27 = load %"class.sh::TIntermBinary"*, %"class.sh::TIntermBinary"** %7, align 8
  %28 = icmp eq %"class.sh::TIntermBinary"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %14, %"class.sh::TIntermTyped"* %30) #17
  br label %48

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 5
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %37 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %36, i64 40) #17
  %38 = bitcast i8* %37 to %"class.sh::TVariable"*
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %40 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %39, align 8
  tail call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %38, %"class.sh::TSymbolTable"* %40, %"class.sh::ImmutableString"* nonnull dereferenceable(16) @_ZN2shL21kEmptyImmutableStringE, %"class.sh::TType"* %24, i8 zeroext 3, i8 zeroext 0) #17
  %41 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %42 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %41, i64 32) #17
  %43 = bitcast i8* %42 to %"class.sh::TIntermSymbol"*
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %43, %"class.sh::TVariable"* %38) #17
  %44 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 4
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast %"struct.sh::TSourceLoc"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 4 %46, i64 16, i1 false) #17
  %47 = bitcast i8* %42 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %14, %"class.sh::TIntermTyped"* %47) #17
  br label %48

48:                                               ; preds = %31, %29, %35, %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  ret %"class.sh::TIntermDeclaration"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext31parseSingleArrayInitDeclarationERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEES5_PNS_12TIntermTypedE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"* nocapture readonly dereferenceable(24), %"struct.sh::TSourceLoc"* nocapture readnone dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %9 = alloca %"class.sh::TSpan", align 8
  %10 = alloca %"class.sh::TIntermBinary"*, align 8
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1
  tail call void @_ZN2sh13TParseContext30declarationQualifierErrorCheckENS_10TQualifierERKNS_16TLayoutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i32 %13, %"struct.sh::TLayoutQualifier"* dereferenceable(92) %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  %15 = tail call zeroext i1 @_ZN2sh13TParseContext36checkIsValidTypeAndQualifierForArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"struct.sh::TPublicType"* dereferenceable(160) %1)
  %16 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %17 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %16, i64 184) #17
  %18 = bitcast i8* %17 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %18, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %19 = bitcast %"class.sh::TSpan"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #17
  %20 = bitcast %"class.sh::TVector.0"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.sh::TSpan"* %9 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %9, i64 0, i32 1
  %24 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %5, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %21
  %28 = ashr exact i64 %27, 2
  store i64 %28, i64* %23, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %18, %"class.sh::TSpan"* nonnull dereferenceable(16) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #17
  %29 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %30 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %29, i64 56) #17
  %31 = bitcast i8* %30 to %"class.sh::TIntermDeclaration"*
  %32 = bitcast i8* %30 to i32 (...)***
  %33 = getelementptr inbounds i8, i8* %30, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #17
  %34 = getelementptr inbounds i8, i8* %30, i64 24
  %35 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #17
  %37 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %37, i64 16, i1 false) #17
  %38 = bitcast %"class.sh::TIntermBinary"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  store %"class.sh::TIntermBinary"* null, %"class.sh::TIntermBinary"** %10, align 8
  %39 = call zeroext i1 @_ZN2sh13TParseContext18executeInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeEPNS_12TIntermTypedEPPNS_13TIntermBinaryE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %18, %"class.sh::TIntermTyped"* %7, %"class.sh::TIntermBinary"** nonnull %10)
  %40 = load %"class.sh::TIntermBinary"*, %"class.sh::TIntermBinary"** %10, align 8
  %41 = icmp ne %"class.sh::TIntermBinary"* %40, null
  %42 = and i1 %39, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %8
  %44 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %40, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %31, %"class.sh::TIntermTyped"* %44) #17
  br label %45

45:                                               ; preds = %43, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  ret %"class.sh::TIntermDeclaration"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermGlobalQualifierDeclaration"* @_ZN2sh13TParseContext31parseGlobalQualifierDeclarationERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #2 align 2 {
  %6 = alloca %"struct.sh::TTypeQualifier", align 4
  %7 = bitcast %"struct.sh::TTypeQualifier"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -86, i64 128, i1 false)
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZNK2sh21TTypeQualifierBuilder24getVariableTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* nonnull sret %6, %"class.sh::TTypeQualifierBuilder"* %1, %"class.sh::TDiagnostics"* %9) #17
  %10 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 4
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 5
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  %19 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  %22 = select i1 %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %20
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %18, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.207, i64 0, i64 0), i8* %22) #17
  br label %96

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %25 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %24, align 8
  %26 = call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %25) #17
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %28, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.208, i64 0, i64 0)) #17
  br label %96

29:                                               ; preds = %23, %13
  %30 = icmp eq %"class.sh::TSymbol"* %4, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  %32 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  %33 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  %36 = select i1 %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %34
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %32, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.209, i64 0, i64 0), i8* %36) #17
  br label %96

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %39)
  %43 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %43, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.210, i64 0, i64 0), i8* %42) #17
  br label %44

44:                                               ; preds = %41, %37
  %45 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %49 [
    i32 0, label %53
    i32 3, label %50
    i32 2, label %47
    i32 1, label %48
  ]

47:                                               ; preds = %44
  br label %50

48:                                               ; preds = %44
  br label %50

49:                                               ; preds = %44
  br label %50

50:                                               ; preds = %44, %47, %48, %49
  %51 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.522, i64 0, i64 0), %49 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.523, i64 0, i64 0), %48 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.522, i64 0, i64 0), %47 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i64 0, i64 0), %44 ]
  %52 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %52, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.211, i64 0, i64 0), i8* nonnull %51) #17
  br label %53

53:                                               ; preds = %44, %50
  %54 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 0
  %55 = call zeroext i1 @_ZNK2sh16TLayoutQualifier7isEmptyEv(%"struct.sh::TLayoutQualifier"* nonnull %54)
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %57, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.212, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i64 0, i64 0)) #17
  br label %58

58:                                               ; preds = %56, %53
  %59 = call %"class.sh::TVariable"* @_ZN2sh13TParseContext16getNamedVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TSymbol"* nonnull %4)
  %60 = icmp eq %"class.sh::TVariable"* %59, null
  br i1 %60, label %96, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %59, i64 0, i32 1
  %63 = load %"class.sh::TType"*, %"class.sh::TType"** %62, align 8
  %64 = load i8, i8* %10, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %63, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 6
  br i1 %65, label %81, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %71, 300
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = call zeroext i1 @_ZN2sh19CanBeInvariantESSL1ENS_10TQualifierE(i32 %67) #17
  br i1 %74, label %81, label %75

75:                                               ; preds = %73
  %76 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %76, %"struct.sh::TSourceLoc"* dereferenceable(16) %68, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %81

77:                                               ; preds = %69
  %78 = call zeroext i1 @_ZN2sh28CanBeInvariantESSL3OrGreaterENS_10TQualifierE(i32 %67) #17
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %80, %"struct.sh::TSourceLoc"* dereferenceable(16) %68, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %81

81:                                               ; preds = %61, %73, %75, %77, %79
  %82 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 1
  call void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TMemoryQualifier"* dereferenceable(5) %82, %"struct.sh::TSourceLoc"* dereferenceable(16) %68)
  %83 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %84 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %83, align 8
  call void @_ZN2sh12TSymbolTable19addInvariantVaryingERKNS_9TVariableE(%"class.sh::TSymbolTable"* %84, %"class.sh::TVariable"* nonnull dereferenceable(40) %59) #17
  %85 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %86 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %85, i64 32) #17
  %87 = bitcast i8* %86 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %87, %"class.sh::TVariable"* nonnull %59) #17
  %88 = getelementptr inbounds i8, i8* %86, i64 8
  %89 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %89, i64 16, i1 false) #17
  %90 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %91 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %90, i64 40) #17
  %92 = bitcast i8* %91 to %"class.sh::TIntermGlobalQualifierDeclaration"*
  %93 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %6, i64 0, i32 5
  %94 = load i8, i8* %93, align 1, !range !2
  %95 = icmp ne i8 %94, 0
  call void @_ZN2sh33TIntermGlobalQualifierDeclarationC1EPNS_13TIntermSymbolEbRKNS_10TSourceLocE(%"class.sh::TIntermGlobalQualifierDeclaration"* %92, %"class.sh::TIntermSymbol"* %87, i1 zeroext %95, %"struct.sh::TSourceLoc"* dereferenceable(16) %2) #17
  br label %96

96:                                               ; preds = %27, %81, %58, %31, %17
  %97 = phi %"class.sh::TIntermGlobalQualifierDeclaration"* [ null, %31 ], [ null, %17 ], [ null, %27 ], [ %92, %81 ], [ null, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #17
  ret %"class.sh::TIntermGlobalQualifierDeclaration"* %97
}

declare void @_ZN2sh12TSymbolTable19addInvariantVaryingERKNS_9TVariableE(%"class.sh::TSymbolTable"*, %"class.sh::TVariable"* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN2sh33TIntermGlobalQualifierDeclarationC1EPNS_13TIntermSymbolEbRKNS_10TSourceLocE(%"class.sh::TIntermGlobalQualifierDeclaration"*, %"class.sh::TIntermSymbol"*, i1 zeroext, %"struct.sh::TSourceLoc"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext15parseDeclaratorERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TIntermDeclaration"*) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TVariable"*, align 8
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  store i8 0, i8* %7, align 8
  br label %11

11:                                               ; preds = %5, %10
  %12 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %17 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %16, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %17, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %18

18:                                               ; preds = %11, %15
  %19 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %20 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %19, i64 184) #17
  %21 = bitcast i8* %20 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %21, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  tail call void @_ZN2sh13TParseContext39checkGeometryShaderInputAndSetArraySizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %21)
  tail call void @_ZN2sh13TParseContext46checkTessellationShaderUnsizedArraysAndSetSizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %21)
  tail call void @_ZN2sh13TParseContext36checkCanBeDeclaredWithoutInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %21)
  %22 = bitcast i8* %20 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %25, label %34

25:                                               ; preds = %18
  tail call void @_ZN2sh13TParseContext38checkAtomicCounterOffsetDoesNotOverlapEbRKNS_10TSourceLocEPNS_5TTypeE(%"class.sh::TParseContext"* %0, i1 zeroext true, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::TType"* %21)
  %26 = getelementptr inbounds i8, i8* %20, i64 52
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %33 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %32, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %33, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %34

34:                                               ; preds = %31, %25, %18
  %35 = bitcast %"class.sh::TVariable"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %6, align 8
  %36 = call zeroext i1 @_ZN2sh13TParseContext15declareVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_5TTypeEPPNS_9TVariableE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %21, %"class.sh::TVariable"** nonnull %6)
  br i1 %36, label %37, label %45

37:                                               ; preds = %34
  %38 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %39 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %38, i64 32) #17
  %40 = bitcast i8* %39 to %"class.sh::TIntermSymbol"*
  %41 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %6, align 8
  tail call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %40, %"class.sh::TVariable"* %41) #17
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 4 %43, i64 16, i1 false) #17
  %44 = bitcast i8* %39 to %"class.sh::TIntermTyped"*
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %4, %"class.sh::TIntermTyped"* %44) #17
  br label %45

45:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext20parseArrayDeclaratorERNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES5_RKNS_7TVectorIjEEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"* nocapture readonly dereferenceable(24), %"class.sh::TIntermDeclaration"*) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.sh::TSpan", align 8
  %9 = alloca %"class.sh::TVariable"*, align 8
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  store i8 0, i8* %10, align 8
  br label %14

14:                                               ; preds = %7, %13
  %15 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %21

21:                                               ; preds = %14, %18
  %22 = tail call zeroext i1 @_ZN2sh13TParseContext36checkIsValidTypeAndQualifierForArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"struct.sh::TPublicType"* dereferenceable(160) %1)
  br i1 %22, label %23, label %61

23:                                               ; preds = %21
  %24 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %25 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %24, i64 184) #17
  %26 = bitcast i8* %25 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %26, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %27 = bitcast %"class.sh::TSpan"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #17
  %28 = bitcast %"class.sh::TVector.0"* %5 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.sh::TSpan"* %8 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %8, i64 0, i32 1
  %32 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %5, i64 0, i32 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = ashr exact i64 %35, 2
  store i64 %36, i64* %31, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %26, %"class.sh::TSpan"* nonnull dereferenceable(16) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #17
  call void @_ZN2sh13TParseContext39checkGeometryShaderInputAndSetArraySizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %26)
  call void @_ZN2sh13TParseContext46checkTessellationShaderUnsizedArraysAndSetSizeERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %26)
  call void @_ZN2sh13TParseContext36checkCanBeDeclaredWithoutInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %26)
  %37 = bitcast i8* %25 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 6
  br i1 %39, label %40, label %49

40:                                               ; preds = %23
  call void @_ZN2sh13TParseContext38checkAtomicCounterOffsetDoesNotOverlapEbRKNS_10TSourceLocEPNS_5TTypeE(%"class.sh::TParseContext"* %0, i1 zeroext true, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::TType"* %26)
  %41 = getelementptr inbounds i8, i8* %25, i64 52
  %42 = bitcast i8* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 3
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %48 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %47, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %48, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.127, i64 0, i64 0)) #17
  br label %49

49:                                               ; preds = %46, %40, %23
  %50 = bitcast %"class.sh::TVariable"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17
  store %"class.sh::TVariable"* null, %"class.sh::TVariable"** %9, align 8
  %51 = call zeroext i1 @_ZN2sh13TParseContext15declareVariableERKNS_10TSourceLocERKNS_15ImmutableStringEPKNS_5TTypeEPPNS_9TVariableE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %26, %"class.sh::TVariable"** nonnull %9)
  br i1 %51, label %52, label %60

52:                                               ; preds = %49
  %53 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %54 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %53, i64 32) #17
  %55 = bitcast i8* %54 to %"class.sh::TIntermSymbol"*
  %56 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %9, align 8
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %55, %"class.sh::TVariable"* %56) #17
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 16, i1 false) #17
  %59 = bitcast i8* %54 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %6, %"class.sh::TIntermTyped"* %59) #17
  br label %60

60:                                               ; preds = %52, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17
  br label %61

61:                                               ; preds = %60, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext19parseInitDeclaratorERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_PNS_12TIntermTypedEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* nocapture readnone dereferenceable(16), %"class.sh::TIntermTyped"*, %"class.sh::TIntermDeclaration"*) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.sh::TIntermBinary"*, align 8
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  store i8 0, i8* %9, align 8
  br label %13

13:                                               ; preds = %7, %12
  %14 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %19 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %19, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %20

20:                                               ; preds = %13, %17
  %21 = bitcast %"class.sh::TIntermBinary"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  store %"class.sh::TIntermBinary"* null, %"class.sh::TIntermBinary"** %8, align 8
  %22 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %23 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %22, i64 184) #17
  %24 = bitcast i8* %23 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %24, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %25 = call zeroext i1 @_ZN2sh13TParseContext18executeInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeEPNS_12TIntermTypedEPPNS_13TIntermBinaryE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %24, %"class.sh::TIntermTyped"* %5, %"class.sh::TIntermBinary"** nonnull %8)
  %26 = load %"class.sh::TIntermBinary"*, %"class.sh::TIntermBinary"** %8, align 8
  %27 = icmp ne %"class.sh::TIntermBinary"* %26, null
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %6, %"class.sh::TIntermTyped"* %30) #17
  br label %31

31:                                               ; preds = %29, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext24parseArrayInitDeclaratorERKNS_11TPublicTypeERKNS_10TSourceLocERKNS_15ImmutableStringES6_RKNS_7TVectorIjEES6_PNS_12TIntermTypedEPNS_18TIntermDeclarationE(%"class.sh::TParseContext"*, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"* nocapture readonly dereferenceable(24), %"struct.sh::TSourceLoc"* nocapture readnone dereferenceable(16), %"class.sh::TIntermTyped"*, %"class.sh::TIntermDeclaration"*) local_unnamed_addr #2 align 2 {
  %10 = alloca %"class.sh::TSpan", align 8
  %11 = alloca %"class.sh::TIntermBinary"*, align 8
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  tail call void @_ZN2sh13TParseContext29nonEmptyDeclarationErrorCheckERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  store i8 0, i8* %12, align 8
  br label %16

16:                                               ; preds = %9, %15
  %17 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %22, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %23

23:                                               ; preds = %16, %20
  %24 = tail call zeroext i1 @_ZN2sh13TParseContext36checkIsValidTypeAndQualifierForArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"struct.sh::TPublicType"* dereferenceable(160) %1)
  %25 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %26 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %25, i64 184) #17
  %27 = bitcast i8* %26 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %27, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %28 = bitcast %"class.sh::TSpan"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #17
  %29 = bitcast %"class.sh::TVector.0"* %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.sh::TSpan"* %10 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %10, i64 0, i32 1
  %33 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %35, %30
  %37 = ashr exact i64 %36, 2
  store i64 %37, i64* %32, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %27, %"class.sh::TSpan"* nonnull dereferenceable(16) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #17
  %38 = bitcast %"class.sh::TIntermBinary"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  store %"class.sh::TIntermBinary"* null, %"class.sh::TIntermBinary"** %11, align 8
  %39 = call zeroext i1 @_ZN2sh13TParseContext18executeInitializerERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_5TTypeEPNS_12TIntermTypedEPPNS_13TIntermBinaryE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TType"* %27, %"class.sh::TIntermTyped"* %7, %"class.sh::TIntermBinary"** nonnull %11)
  %40 = load %"class.sh::TIntermBinary"*, %"class.sh::TIntermBinary"** %11, align 8
  %41 = icmp ne %"class.sh::TIntermBinary"* %40, null
  %42 = and i1 %39, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %40, i64 0, i32 0, i32 0, i32 0
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %8, %"class.sh::TIntermTyped"* %44) #17
  br label %45

45:                                               ; preds = %43, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermNode"* @_ZN2sh13TParseContext17addEmptyStatementERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readnone, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.sh::TType", align 8
  %4 = bitcast %"class.sh::TType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %4) #17
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %3, i32 3, i32 2, i32 0, i8 zeroext 1, i8 zeroext 1) #17
  %5 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %3) #17
  %6 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %5, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %4) #17
  %7 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %5, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.sh::TSourceLoc"* %7 to i8*
  %9 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 16, i1 false) #17
  ret %"class.sh::TIntermNode"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext30parseDefaultPrecisionQualifierENS_10TPrecisionERKNS_11TPublicTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TPublicType"* dereferenceable(160), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = icmp eq i32 %1, 3
  br i1 %5, label %6, label %21

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 35632
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 17
  %12 = load i8, i8* %11, align 2, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 299
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i64 0, i64 0)) #17
  br label %21

21:                                               ; preds = %10, %18, %14, %6, %4
  %22 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %24 [
    i32 4, label %39
    i32 1, label %35
    i32 3, label %35
  ]

24:                                               ; preds = %21
  %25 = add i32 %23, -8
  %26 = icmp ult i32 %25, 43
  %27 = add i32 %23, -51
  %28 = icmp ult i32 %27, 33
  %29 = or i1 %26, %28
  %30 = icmp eq i32 %23, 6
  %31 = or i1 %30, %29
  %32 = add i32 %23, -84
  %33 = icmp ult i32 %32, 6
  %34 = or i1 %33, %31
  br i1 %34, label %35, label %39

35:                                               ; preds = %21, %21, %24
  %36 = tail call zeroext i1 @_ZNK2sh11TPublicType11isAggregateEv(%"struct.sh::TPublicType"* %2) #17
  br i1 %36, label %37, label %44

37:                                               ; preds = %35
  %38 = load i32, i32* %22, align 8
  br label %39

39:                                               ; preds = %37, %21, %24
  %40 = phi i32 [ %38, %37 ], [ %23, %21 ], [ %23, %24 ]
  %41 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %40) #17
  %42 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %43 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %43, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.217, i64 0, i64 0), i8* %41) #17
  br label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %46 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %45, align 8
  %47 = load i32, i32* %22, align 8
  tail call void @_ZN2sh12TSymbolTable19setDefaultPrecisionENS_10TBasicTypeENS_10TPrecisionE(%"class.sh::TSymbolTable"* %46, i32 %47, i32 %1) #17
  br label %48

48:                                               ; preds = %44, %39
  ret void
}

declare void @_ZN2sh12TSymbolTable19setDefaultPrecisionENS_10TBasicTypeENS_10TPrecisionE(%"class.sh::TSymbolTable"*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext38checkPrimitiveTypeMatchesTypeQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* nocapture readnone, %"struct.sh::TTypeQualifier"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 12
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %13 [
    i32 2, label %5
    i32 3, label %5
    i32 4, label %5
    i32 5, label %5
    i32 6, label %9
    i32 7, label %9
    i32 1, label %14
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 72
  br label %14

9:                                                ; preds = %2, %2
  %10 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 73
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %2, %13, %9, %5
  %15 = phi i1 [ false, %13 ], [ %12, %9 ], [ %8, %5 ], [ true, %2 ]
  ret i1 %15
}

declare zeroext i1 @_ZN2sh12TSymbolTable16setGlInArraySizeEj(%"class.sh::TSymbolTable"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext39parseGeometryShaderInputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TTypeQualifier"* dereferenceable(128)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %7, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %68

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 12
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %21 [
    i32 0, label %53
    i32 2, label %17
    i32 3, label %17
    i32 4, label %17
    i32 5, label %17
    i32 6, label %13
    i32 7, label %13
    i32 1, label %25
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 73
  br i1 %16, label %25, label %21

17:                                               ; preds = %10, %10, %10, %10
  %18 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 72
  br i1 %20, label %25, label %21

21:                                               ; preds = %10, %13, %17
  %22 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %22, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.220, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %68

25:                                               ; preds = %10, %13, %17
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 48
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %47

29:                                               ; preds = %25
  store i32 %12, i32* %26, align 8
  %30 = add i32 %12, -1
  %31 = icmp ult i32 %30, 5
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = sext i32 %30 to i64
  %34 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2sh13TParseContext39parseGeometryShaderInputLayoutQualifierERKNS_14TTypeQualifierE, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi i32 [ %35, %32 ], [ 0, %29 ]
  %38 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %39 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %38, align 8
  %40 = tail call zeroext i1 @_ZN2sh12TSymbolTable16setGlInArraySizeEj(%"class.sh::TSymbolTable"* %39, i32 %37) #17
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %43 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %44 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %43, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %44, %"struct.sh::TSourceLoc"* dereferenceable(16) %42, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %45

45:                                               ; preds = %36, %41
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 54
  store i32 %37, i32* %46, align 8
  br label %53

47:                                               ; preds = %25
  %48 = icmp eq i32 %27, %12
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %51 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %52 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %51, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %52, %"struct.sh::TSourceLoc"* dereferenceable(16) %50, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.221, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %68

53:                                               ; preds = %10, %47, %45
  %54 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 13
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 50
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %57
  store i32 %55, i32* %58, align 8
  br label %68

62:                                               ; preds = %57
  %63 = icmp eq i32 %59, %55
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %66 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %67 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %66, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %67, %"struct.sh::TSourceLoc"* dereferenceable(16) %65, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %68

68:                                               ; preds = %53, %61, %62, %64, %49, %21, %6
  %69 = phi i1 [ false, %6 ], [ false, %64 ], [ false, %49 ], [ false, %21 ], [ true, %62 ], [ true, %61 ], [ true, %53 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext40parseGeometryShaderOutputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TTypeQualifier"* dereferenceable(128)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 13
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %7, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %51

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 12
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %21 [
    i32 0, label %36
    i32 2, label %17
    i32 3, label %17
    i32 4, label %17
    i32 5, label %17
    i32 6, label %13
    i32 7, label %13
    i32 1, label %25
  ]

13:                                               ; preds = %10, %10
  %14 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 73
  br i1 %16, label %25, label %21

17:                                               ; preds = %10, %10, %10, %10
  %18 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 72
  br i1 %20, label %25, label %21

21:                                               ; preds = %10, %13, %17
  %22 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %22, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %51

25:                                               ; preds = %10, %13, %17
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 49
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  store i32 %12, i32* %26, align 4
  br label %36

30:                                               ; preds = %25
  %31 = icmp eq i32 %27, %12
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %35 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %34, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %35, %"struct.sh::TSourceLoc"* dereferenceable(16) %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.225, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %51

36:                                               ; preds = %10, %30, %29
  %37 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 14
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %51

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 51
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  store i32 %38, i32* %41, align 4
  br label %51

45:                                               ; preds = %40
  %46 = icmp eq i32 %42, %38
  br i1 %46, label %51, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %50 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %49, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %50, %"struct.sh::TSourceLoc"* dereferenceable(16) %48, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %51

51:                                               ; preds = %36, %44, %45, %47, %32, %21, %6
  %52 = phi i1 [ false, %6 ], [ false, %47 ], [ false, %32 ], [ false, %21 ], [ true, %45 ], [ true, %44 ], [ true, %36 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext43parseTessControlShaderOutputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TTypeQualifier"* dereferenceable(128)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 15
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 56
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 %4, i32* %11, align 8
  br label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %18 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %17, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %18, %"struct.sh::TSourceLoc"* dereferenceable(16) %16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %19

19:                                               ; preds = %14, %15, %6
  %20 = phi i1 [ false, %6 ], [ true, %15 ], [ true, %14 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext45parseTessEvaluationShaderInputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TTypeQualifier"* dereferenceable(128)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 16
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 57
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 %4, i32* %7, align 4
  br label %15

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %15

15:                                               ; preds = %2, %10, %11
  %16 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 17
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 58
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  store i32 %17, i32* %20, align 8
  br label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %27 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %26, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %27, %"struct.sh::TSourceLoc"* dereferenceable(16) %25, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.230, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %28

28:                                               ; preds = %15, %23, %24
  %29 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 18
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 59
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  store i32 %30, i32* %33, align 4
  br label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %40 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %39, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %40, %"struct.sh::TSourceLoc"* dereferenceable(16) %38, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.231, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %41

41:                                               ; preds = %28, %36, %37
  %42 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 0, i32 19
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 60
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 %43, i32* %46, align 8
  br label %54

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %1, i64 0, i32 6
  %52 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %53 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %52, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %53, %"struct.sh::TSourceLoc"* dereferenceable(16) %51, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.232, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %54

54:                                               ; preds = %41, %49, %50
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext26parseGlobalLayoutQualifierERKNS_21TTypeQualifierBuilderE(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.sh::TTypeQualifier", align 4
  %4 = alloca %"struct.sh::TLayoutQualifier", align 4
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %"class.std::__1::basic_stringstream", align 8
  %7 = alloca %"class.std::__1::basic_string.38", align 8
  %8 = bitcast %"struct.sh::TTypeQualifier"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 128, i1 false)
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZNK2sh21TTypeQualifierBuilder24getVariableTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* nonnull sret %3, %"class.sh::TTypeQualifierBuilder"* %1, %"class.sh::TDiagnostics"* %10) #17
  %11 = bitcast %"struct.sh::TLayoutQualifier"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %11) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* nonnull align 4 %8, i64 92, i1 false)
  %12 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %3, i64 0, i32 4
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %3, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %3, i64 0, i32 6
  br i1 %14, label %30, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, 300
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = call zeroext i1 @_ZN2sh19CanBeInvariantESSL1ENS_10TQualifierE(i32 %16) #17
  br i1 %23, label %30, label %24

24:                                               ; preds = %22
  %25 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %25, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %30

26:                                               ; preds = %18
  %27 = call zeroext i1 @_ZN2sh28CanBeInvariantESSL3OrGreaterENS_10TQualifierE(i32 %16) #17
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %29, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %30

30:                                               ; preds = %2, %22, %24, %26, %28
  %31 = call zeroext i1 @_ZNK2sh16TLayoutQualifier7isEmptyEv(%"struct.sh::TLayoutQualifier"* nonnull %4)
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %33, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.233, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.234, i64 0, i64 0)) #17
  br label %365

34:                                               ; preds = %30
  %35 = call zeroext i1 @_ZNK2sh16TLayoutQualifier18isCombinationValidEv(%"struct.sh::TLayoutQualifier"* nonnull %4)
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %37, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 20
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %43, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %49, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %3, i64 0, i32 1
  call void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TMemoryQualifier"* dereferenceable(5) %51, %"struct.sh::TSourceLoc"* dereferenceable(16) %17)
  %52 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 7
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %66 [
    i32 0, label %70
    i32 1, label %67
    i32 2, label %54
    i32 3, label %55
    i32 4, label %56
    i32 5, label %57
    i32 6, label %58
    i32 7, label %59
    i32 8, label %60
    i32 9, label %61
    i32 10, label %62
    i32 11, label %63
    i32 12, label %64
    i32 13, label %65
  ]

54:                                               ; preds = %50
  br label %67

55:                                               ; preds = %50
  br label %67

56:                                               ; preds = %50
  br label %67

57:                                               ; preds = %50
  br label %67

58:                                               ; preds = %50
  br label %67

59:                                               ; preds = %50
  br label %67

60:                                               ; preds = %50
  br label %67

61:                                               ; preds = %50
  br label %67

62:                                               ; preds = %50
  br label %67

63:                                               ; preds = %50
  br label %67

64:                                               ; preds = %50
  br label %67

65:                                               ; preds = %50
  br label %67

66:                                               ; preds = %50
  br label %67

67:                                               ; preds = %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %50
  %68 = phi i8* [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.520, i64 0, i64 0), %66 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.337, i64 0, i64 0), %65 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0), %64 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0), %63 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i64 0, i64 0), %62 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i64 0, i64 0), %61 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.338, i64 0, i64 0), %60 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), %59 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.344, i64 0, i64 0), %58 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i64 0, i64 0), %57 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.342, i64 0, i64 0), %56 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.335, i64 0, i64 0), %55 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.334, i64 0, i64 0), %54 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.333, i64 0, i64 0), %50 ]
  %69 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %69, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.145, i64 0, i64 0), i8* nonnull %68) #17
  br label %70

70:                                               ; preds = %50, %67
  %71 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 9
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %75, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0)) #17
  br label %76

76:                                               ; preds = %70, %74
  %77 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 6
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %81, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i64 0, i64 0)) #17
  br label %82

82:                                               ; preds = %76, %80
  %83 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = icmp ne i32 %84, 4
  %86 = load i32, i32* %15, align 4
  %87 = icmp eq i32 %86, 7
  %88 = or i1 %85, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %82
  %90 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %90, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0)) #17
  %91 = load i32, i32* %15, align 4
  br label %92

92:                                               ; preds = %82, %89
  %93 = phi i32 [ %86, %82 ], [ %91, %89 ]
  %94 = icmp eq i32 %93, 12
  br i1 %94, label %229, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 10
  %97 = load i8, i8* %96, align 1, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %95
  %100 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %100, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #17
  %101 = load i32, i32* %15, align 4
  br label %102

102:                                              ; preds = %95, %99
  %103 = phi i32 [ %93, %95 ], [ %101, %99 ]
  switch i32 %103, label %229 [
    i32 60, label %104
    i32 72, label %213
    i32 73, label %221
  ]

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 33
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 35
  %110 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 4
  %111 = call zeroext i1 @_ZNK2sh13WorkGroupSize23isWorkGroupSizeMatchingERKS0_(%"struct.sh::WorkGroupSize"* %110, %"struct.sh::WorkGroupSize"* dereferenceable(12) %109) #17
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  %113 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %113, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.235, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

114:                                              ; preds = %104, %108
  %115 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %116 = load i32, i32* %115, align 8
  %117 = icmp slt i32 %116, 310
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %119, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.236, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 4
  %122 = call zeroext i1 @_ZNK2sh13WorkGroupSize13isAnyValueSetEv(%"struct.sh::WorkGroupSize"* %121) #17
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  %124 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %124, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.237, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %127 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %126, align 8
  %128 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #17
  %129 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.238, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  store i64 26, i64* %130, align 8
  %131 = load i32, i32* %115, align 8
  %132 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %127, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5, i32 %131) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #17
  %133 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %132, i64 1, i32 0, i32 1
  %134 = bitcast i64* %133 to %"class.sh::TConstantUnion"**
  %135 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %134, align 8
  %136 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %121) #17
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %212, label %138

138:                                              ; preds = %125
  %139 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 35
  br label %140

140:                                              ; preds = %138, %203
  %141 = phi i64 [ 0, %138 ], [ %204, %203 ]
  %142 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %121, i64 %141) #17
  %143 = icmp eq i32 %142, -1
  br i1 %143, label %203, label %144

144:                                              ; preds = %140
  %145 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %121, i64 %141) #17
  %146 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %139, i64 %141) #17
  store i32 %145, i32* %146, align 4
  %147 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %135, i64 %141
  %148 = call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %147) #17
  %149 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %139, i64 %141) #17
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %150, 1
  br i1 %151, label %156, label %152

152:                                              ; preds = %144
  %153 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %139, i64 %141) #17
  %154 = load i32, i32* %153, align 4
  %155 = icmp sgt i32 %154, %148
  br i1 %155, label %156, label %203

156:                                              ; preds = %152, %144
  %157 = bitcast %"class.std::__1::basic_stringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %157) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %157, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %6)
  %158 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 0, i32 1
  %159 = bitcast %"class.std::__1::basic_ostream.base"* %158 to %"class.std::__1::basic_ostream"*
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %159, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.239, i64 0, i64 0), i64 60) #17
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %160, i32 %148) #17
  %162 = bitcast %"class.std::__1::basic_string.38"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #17
  %163 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %163) #17
  %164 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  %168 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = select i1 %167, i8* %169, i8* %162
  %171 = icmp ult i64 %141, 3
  br i1 %171, label %172, label %175

172:                                              ; preds = %156
  %173 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %141
  %174 = load i8*, i8** %173, align 8
  br label %175

175:                                              ; preds = %156, %172
  %176 = phi i8* [ %174, %172 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %156 ]
  %177 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %177, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* %170, i8* nonnull %176) #17
  %178 = load i8, i8* %165, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %175
  %181 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %181) #18
  br label %182

182:                                              ; preds = %175, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #17
  %183 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %184 = bitcast %"class.std::__1::basic_stringstream"* %6 to i64*
  store i64 %183, i64* %184, align 8
  %185 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %186 = inttoptr i64 %183 to i8*
  %187 = getelementptr i8, i8* %186, i64 -24
  %188 = bitcast i8* %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds i8, i8* %157, i64 %189
  %191 = bitcast i8* %190 to i64*
  store i64 %185, i64* %191, align 8
  %192 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %193 = bitcast %"class.std::__1::basic_ostream.base"* %158 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %163, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 1, i32 1
  %196 = bitcast %"class.std::__1::basic_string.38"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %207

200:                                              ; preds = %182
  %201 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #18
  br label %207

203:                                              ; preds = %152, %140
  %204 = add nuw i64 %141, 1
  %205 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %121) #17
  %206 = icmp ult i64 %204, %205
  br i1 %206, label %140, label %212

207:                                              ; preds = %182, %200
  %208 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %163, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %208) #17
  %209 = bitcast %"class.std::__1::basic_stringstream"* %6 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %209, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %210 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %6, i64 0, i32 2
  %211 = bitcast %"class.std::__1::basic_ios.base"* %210 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %211) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %157) #17
  br label %365

212:                                              ; preds = %203, %125
  store i8 1, i8* %105, align 8
  br label %365

213:                                              ; preds = %102
  %214 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %215 = load i32, i32* %214, align 8
  %216 = icmp slt i32 %215, 310
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  %218 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %218, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.236, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

219:                                              ; preds = %213
  %220 = call zeroext i1 @_ZN2sh13TParseContext39parseGeometryShaderInputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* %0, %"struct.sh::TTypeQualifier"* nonnull dereferenceable(128) %3)
  br label %365

221:                                              ; preds = %102
  %222 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %223 = load i32, i32* %222, align 8
  %224 = icmp slt i32 %223, 310
  br i1 %224, label %225, label %227

225:                                              ; preds = %221
  %226 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %226, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.240, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

227:                                              ; preds = %221
  %228 = call zeroext i1 @_ZN2sh13TParseContext40parseGeometryShaderOutputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* %0, %"struct.sh::TTypeQualifier"* nonnull dereferenceable(128) %3)
  br label %365

229:                                              ; preds = %92, %102
  %230 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %231 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %230, align 8
  %232 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %231, i8 zeroext 37) #17
  br i1 %232, label %236, label %233

233:                                              ; preds = %229
  %234 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %230, align 8
  %235 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %234, i8 zeroext 38) #17
  br label %236

236:                                              ; preds = %229, %233
  %237 = phi i1 [ true, %229 ], [ %235, %233 ]
  %238 = load i32, i32* %15, align 4
  %239 = icmp eq i32 %238, 9
  %240 = and i1 %237, %239
  br i1 %240, label %241, label %263

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 36
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %243, -1
  %245 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 8
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %251, label %247

247:                                              ; preds = %241
  %248 = icmp eq i32 %246, %243
  br i1 %248, label %255, label %249

249:                                              ; preds = %247
  %250 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %250, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.241, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

251:                                              ; preds = %241
  %252 = icmp eq i32 %246, -1
  br i1 %252, label %253, label %255

253:                                              ; preds = %251
  %254 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %254, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

255:                                              ; preds = %247, %251
  %256 = phi i32 [ %246, %251 ], [ %243, %247 ]
  %257 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 37
  %258 = load i32, i32* %257, align 4
  %259 = icmp sgt i32 %256, %258
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %261, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.243, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

262:                                              ; preds = %255
  store i32 %256, i32* %242, align 8
  br label %365

263:                                              ; preds = %236
  switch i32 %238, label %305 [
    i32 12, label %264
    i32 83, label %278
    i32 88, label %297
  ]

264:                                              ; preds = %263
  %265 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %266 = load i32, i32* %265, align 8
  %267 = icmp slt i32 %266, 310
  br i1 %267, label %268, label %270

268:                                              ; preds = %264
  %269 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %269, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.244, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

270:                                              ; preds = %264
  %271 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 10
  %272 = load i8, i8* %271, align 1, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  %275 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %275, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.245, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 18
  store i8 1, i8* %277, align 1
  br label %365

278:                                              ; preds = %263
  %279 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %280 = load i32, i32* %279, align 8
  %281 = icmp slt i32 %280, 310
  br i1 %281, label %282, label %284

282:                                              ; preds = %278
  %283 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %283, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.246, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %3, i64 0, i32 0, i32 15
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %284
  %289 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %289, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

290:                                              ; preds = %284
  %291 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 56
  %292 = load i32, i32* %291, align 8
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %290
  store i32 %286, i32* %291, align 8
  br label %365

295:                                              ; preds = %290
  %296 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %296, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

297:                                              ; preds = %263
  %298 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %299 = load i32, i32* %298, align 8
  %300 = icmp slt i32 %299, 310
  br i1 %300, label %301, label %303

301:                                              ; preds = %297
  %302 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %302, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.247, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

303:                                              ; preds = %297
  %304 = call zeroext i1 @_ZN2sh13TParseContext45parseTessEvaluationShaderInputLayoutQualifierERKNS_14TTypeQualifierE(%"class.sh::TParseContext"* %0, %"struct.sh::TTypeQualifier"* nonnull dereferenceable(128) %3)
  br label %365

305:                                              ; preds = %263
  %306 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 4
  %307 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %306) #17
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %305, %315
  %310 = phi i64 [ %316, %315 ], [ 0, %305 ]
  %311 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %306, i64 %310) #17
  %312 = icmp eq i32 %311, -1
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = icmp ult i64 %310, 3
  br i1 %314, label %319, label %322

315:                                              ; preds = %309
  %316 = add nuw i64 %310, 1
  %317 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %306) #17
  %318 = icmp ult i64 %316, %317
  br i1 %318, label %309, label %325

319:                                              ; preds = %313
  %320 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %310
  %321 = load i8*, i8** %320, align 8
  br label %322

322:                                              ; preds = %313, %319
  %323 = phi i8* [ %321, %319 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %313 ]
  %324 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %324, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.144, i64 0, i64 0), i8* nonnull %323) #17
  br label %365

325:                                              ; preds = %315, %305
  %326 = load i32, i32* %15, align 4
  %327 = and i32 %326, -2
  %328 = icmp eq i32 %327, 6
  br i1 %328, label %332, label %329

329:                                              ; preds = %325
  %330 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %326)
  %331 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %331, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.248, i64 0, i64 0), i8* %330) #17
  br label %365

332:                                              ; preds = %325
  %333 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %334 = load i32, i32* %333, align 8
  %335 = icmp slt i32 %334, 300
  br i1 %335, label %336, label %338

336:                                              ; preds = %332
  %337 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %337, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.249, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %365

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, -1
  br i1 %341, label %346, label %342

342:                                              ; preds = %338
  %343 = icmp sgt i32 %334, 309
  %344 = select i1 %343, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.86, i64 0, i64 0)
  %345 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %345, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* %344, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %346

346:                                              ; preds = %338, %342
  %347 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %4, i64 0, i32 2
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %356, label %350

350:                                              ; preds = %346
  %351 = load i32, i32* %15, align 4
  switch i32 %351, label %356 [
    i32 6, label %352
    i32 7, label %354
  ]

352:                                              ; preds = %350
  %353 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 19
  store i32 %348, i32* %353, align 4
  br label %356

354:                                              ; preds = %350
  %355 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 21
  store i32 %348, i32* %355, align 4
  br label %356

356:                                              ; preds = %350, %346, %352, %354
  %357 = load i32, i32* %83, align 4
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %365, label %359

359:                                              ; preds = %356
  %360 = load i32, i32* %15, align 4
  switch i32 %360, label %365 [
    i32 6, label %361
    i32 7, label %363
  ]

361:                                              ; preds = %359
  %362 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 20
  store i32 %357, i32* %362, align 8
  br label %365

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 22
  store i32 %357, i32* %364, align 8
  br label %365

365:                                              ; preds = %322, %295, %294, %288, %207, %227, %219, %212, %276, %361, %363, %262, %303, %356, %359, %336, %329, %301, %282, %274, %268, %260, %253, %249, %225, %217, %123, %118, %112, %36, %32
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2sh16TLayoutQualifier18isCombinationValidEv(%"struct.sh::TLayoutQualifier"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 4
  %3 = tail call zeroext i1 @_ZNK2sh13WorkGroupSize13isAnyValueSetEv(%"struct.sh::WorkGroupSize"* %2) #17
  %4 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, -1
  %7 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 13
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 14
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, -1
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %10, %1, %14
  %20 = phi i32 [ 1, %10 ], [ 1, %1 ], [ %18, %14 ]
  %21 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 21
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, -1
  %24 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %48

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %48

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 20
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %48

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  %45 = load i32, i32* %44, align 4
  %46 = icmp ne i32 %45, 0
  %47 = zext i1 %46 to i32
  br label %48

48:                                               ; preds = %39, %35, %31, %27, %19, %43
  %49 = phi i32 [ 1, %39 ], [ 1, %35 ], [ 1, %31 ], [ 1, %27 ], [ 1, %19 ], [ %47, %43 ]
  %50 = zext i1 %3 to i32
  %51 = zext i1 %6 to i32
  %52 = add nuw nsw i32 %51, %50
  %53 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 9
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = zext i8 %54 to i32
  %56 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 10
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = zext i8 %57 to i32
  %59 = zext i1 %23 to i32
  %60 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 22
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = zext i8 %61 to i32
  %63 = add nuw nsw i32 %52, %20
  %64 = add nuw nsw i32 %63, %59
  %65 = add nuw nsw i32 %64, %49
  %66 = add nuw nsw i32 %65, %55
  %67 = add nuw nsw i32 %66, %58
  %68 = add nuw nsw i32 %67, %62
  %69 = icmp slt i32 %68, 2
  ret i1 %69
}

declare zeroext i1 @_ZNK2sh13WorkGroupSize13isAnyValueSetEv(%"struct.sh::WorkGroupSize"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermFunctionPrototype"* @_ZN2sh13TParseContext31createPrototypeNodeFromFunctionERKNS_9TFunctionERKNS_10TSourceLocEb(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TFunction"* dereferenceable(80), %"struct.sh::TSourceLoc"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  %7 = bitcast %"class.sh::TFunction"* %1 to %"class.sh::TSymbol"*
  %8 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %7) #17
  %9 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %10 = extractvalue { i8*, i64 } %8, 0
  store i8* %10, i8** %9, align 8
  %11 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %12 = extractvalue { i8*, i64 } %8, 1
  store i64 %12, i64* %11, align 8
  %13 = call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  %14 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %15 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %14, i64 32) #17
  %16 = bitcast i8* %15 to %"class.sh::TIntermFunctionPrototype"*
  tail call void @_ZN2sh24TIntermFunctionPrototypeC1EPKNS_9TFunctionE(%"class.sh::TIntermFunctionPrototype"* %16, %"class.sh::TFunction"* %1) #17
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %18, i64 16, i1 false) #17
  %19 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 3
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %25 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  br label %27

26:                                               ; preds = %52, %4
  ret %"class.sh::TIntermFunctionPrototype"* %16

27:                                               ; preds = %22, %52
  %28 = phi i64 [ 0, %22 ], [ %53, %52 ]
  %29 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %23, align 8
  %30 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %29, i64 %28
  %31 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %30, align 8
  %32 = bitcast %"class.sh::TVariable"* %31 to %"class.sh::TSymbol"*
  %33 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %31, i64 0, i32 0, i32 2
  %34 = load i8, i8* %33, align 4
  %35 = icmp eq i8 %34, 3
  br i1 %35, label %46, label %36

36:                                               ; preds = %27
  br i1 %3, label %37, label %52

37:                                               ; preds = %36
  %38 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %24, align 8
  %39 = tail call zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"* %38, %"class.sh::TSymbol"* %32) #17
  br i1 %39, label %52, label %40

40:                                               ; preds = %37
  %41 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %32) #17
  %42 = extractvalue { i8*, i64 } %41, 0
  %43 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %25, align 8
  %44 = icmp eq i8* %42, null
  %45 = select i1 %44, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %42
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %43, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i64 0, i64 0), i8* %45) #17
  br label %52

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %31, i64 0, i32 1
  %48 = load %"class.sh::TType"*, %"class.sh::TType"** %47, align 8
  %49 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %48) #17
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %25, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %51, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.250, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %52

52:                                               ; preds = %46, %50, %36, %40, %37
  %53 = add nuw i64 %28, 1
  %54 = load i64, i64* %19, align 8
  %55 = icmp ult i64 %53, %54
  br i1 %55, label %27, label %26
}

declare { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"*) local_unnamed_addr #3

declare void @_ZN2sh24TIntermFunctionPrototypeC1EPKNS_9TFunctionE(%"class.sh::TIntermFunctionPrototype"*, %"class.sh::TFunction"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermFunctionPrototype"* @_ZN2sh13TParseContext31addFunctionPrototypeDeclarationERKNS_9TFunctionERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TFunction"* dereferenceable(80), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.sh::ImmutableString", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 0, i8* %4, align 1
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %7 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %6, align 8
  %8 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #17
  %9 = bitcast %"class.sh::TFunction"* %1 to %"class.sh::TSymbol"*
  %10 = tail call { i8*, i64 } @_ZNK2sh7TSymbol14getMangledNameEv(%"class.sh::TSymbol"* %9) #17
  %11 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %12 = extractvalue { i8*, i64 } %10, 0
  store i8* %12, i8** %11, align 8
  %13 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %14 = extractvalue { i8*, i64 } %10, 1
  store i64 %14, i64* %13, align 8
  %15 = call %"class.sh::TFunction"* @_ZNK2sh12TSymbolTable35markFunctionHasPrototypeDeclarationERKNS_15ImmutableStringEPb(%"class.sh::TSymbolTable"* %7, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5, i8* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #17
  %16 = load i8, i8* %4, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 100
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i64 0, i64 0)) #17
  br label %25

25:                                               ; preds = %3, %22, %18
  %26 = call %"class.sh::TIntermFunctionPrototype"* @_ZN2sh13TParseContext31createPrototypeNodeFromFunctionERKNS_9TFunctionERKNS_10TSourceLocEb(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* dereferenceable(80) %15, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i1 zeroext false)
  %27 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %6, align 8
  call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %27) #17
  %28 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %6, align 8
  %29 = call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %28) #17
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %32 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %31, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %32, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.254, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i64 0, i64 0)) #17
  br label %33

33:                                               ; preds = %30, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  ret %"class.sh::TIntermFunctionPrototype"* %26
}

declare %"class.sh::TFunction"* @_ZNK2sh12TSymbolTable35markFunctionHasPrototypeDeclarationERKNS_15ImmutableStringEPb(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i8*) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK2sh7TSymbol14getMangledNameEv(%"class.sh::TSymbol"*) local_unnamed_addr #3

declare void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermFunctionDefinition"* @_ZN2sh13TParseContext21addFunctionDefinitionEPNS_24TIntermFunctionPrototypeEPNS_12TIntermBlockERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture, %"class.sh::TIntermFunctionPrototype"*, %"class.sh::TIntermBlock"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 61
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  store i8 0, i8* %5, align 4
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %10 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %9, align 8
  tail call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %10) #17
  br label %11

11:                                               ; preds = %4, %8
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 14
  %13 = load %"class.sh::TType"*, %"class.sh::TType"** %12, align 8
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 15
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.sh::TIntermFunctionPrototype", %"class.sh::TIntermFunctionPrototype"* %1, i64 0, i32 1
  %23 = bitcast %"class.sh::TFunction"** %22 to %"class.sh::TSymbol"**
  %24 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %23, align 8
  %25 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %24) #17
  %26 = extractvalue { i8*, i64 } %25, 0
  %27 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %28 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %27, align 8
  %29 = icmp eq i8* %26, null
  %30 = select i1 %29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %26
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %28, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.255, i64 0, i64 0), i8* %30) #17
  br label %31

31:                                               ; preds = %17, %11, %21
  %32 = icmp eq %"class.sh::TIntermBlock"* %2, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  br label %45

35:                                               ; preds = %31
  %36 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %37 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %36, i64 64) #17
  %38 = bitcast i8* %37 to %"class.sh::TIntermBlock"*
  %39 = bitcast i8* %37 to i32 (...)***
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #17
  %41 = getelementptr inbounds i8, i8* %37, i64 24
  %42 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh12TIntermBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %37, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 25, i1 false) #17
  %44 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %44, i64 16, i1 false) #17
  br label %45

45:                                               ; preds = %33, %35
  %46 = phi i8* [ %34, %33 ], [ %44, %35 ]
  %47 = phi %"class.sh::TIntermBlock"* [ %2, %33 ], [ %38, %35 ]
  %48 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %49 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %48, i64 40) #17
  %50 = bitcast i8* %49 to %"class.sh::TIntermFunctionDefinition"*
  %51 = bitcast i8* %49 to i32 (...)***
  %52 = getelementptr inbounds i8, i8* %49, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh25TIntermFunctionDefinitionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %53 = getelementptr inbounds i8, i8* %49, i64 24
  %54 = bitcast i8* %53 to %"class.sh::TIntermFunctionPrototype"**
  store %"class.sh::TIntermFunctionPrototype"* %1, %"class.sh::TIntermFunctionPrototype"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %49, i64 32
  %56 = bitcast i8* %55 to %"class.sh::TIntermBlock"**
  store %"class.sh::TIntermBlock"* %47, %"class.sh::TIntermBlock"** %56, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 4 %46, i64 16, i1 false) #17
  %57 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %58 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %57, align 8
  tail call void @_ZN2sh12TSymbolTable3popEv(%"class.sh::TSymbolTable"* %58) #17
  ret %"class.sh::TIntermFunctionDefinition"* %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext29parseFunctionDefinitionHeaderERKNS_10TSourceLocEPKNS_9TFunctionEPPNS_24TIntermFunctionPrototypeE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TFunction"*, %"class.sh::TIntermFunctionPrototype"** nocapture) local_unnamed_addr #2 align 2 {
  %5 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #17
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %7 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %6, align 8
  %8 = call %"class.sh::TFunction"* @_ZNK2sh12TSymbolTable39setFunctionParameterNamesFromDefinitionEPKNS_9TFunctionEPb(%"class.sh::TSymbolTable"* %7, %"class.sh::TFunction"* %2, i8* nonnull %5) #17
  %9 = load i8, i8* %5, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.sh::TFunction"* %8 to %"class.sh::TSymbol"*
  %13 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %12) #17
  %14 = extractvalue { i8*, i64 } %13, 0
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  %17 = icmp eq i8* %14, null
  %18 = select i1 %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %14
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.256, i64 0, i64 0), i8* %18) #17
  br label %19

19:                                               ; preds = %4, %11
  %20 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %8, i64 0, i32 5
  %21 = bitcast %"class.sh::TType"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 14
  %24 = bitcast %"class.sh::TType"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 15
  store i8 0, i8* %25, align 8
  %26 = call %"class.sh::TIntermFunctionPrototype"* @_ZN2sh13TParseContext31createPrototypeNodeFromFunctionERKNS_9TFunctionERKNS_10TSourceLocEb(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* dereferenceable(80) %8, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i1 zeroext true)
  store %"class.sh::TIntermFunctionPrototype"* %26, %"class.sh::TIntermFunctionPrototype"** %3, align 8
  %27 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 10
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = call zeroext i1 @_ZN2sh30IsSpecWithFunctionBodyNewScopeE12ShShaderSpeci(i32 %29, i32 %31) #17
  br i1 %32, label %33, label %36

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 61
  store i8 1, i8* %34, align 4
  %35 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %6, align 8
  call void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"* %35) #17
  br label %36

36:                                               ; preds = %33, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #17
  ret void
}

declare %"class.sh::TFunction"* @_ZNK2sh12TSymbolTable39setFunctionParameterNamesFromDefinitionEPKNS_9TFunctionEPb(%"class.sh::TSymbolTable"*, %"class.sh::TFunction"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh30IsSpecWithFunctionBodyNewScopeE12ShShaderSpeci(i32, i32) local_unnamed_addr #3

declare void @_ZN2sh12TSymbolTable4pushEv(%"class.sh::TSymbolTable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunction"* @_ZN2sh13TParseContext23parseFunctionDeclaratorERKNS_10TSourceLocEPNS_9TFunctionE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TFunction"* returned) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::ImmutableString", align 8
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %"class.sh::ImmutableString", align 8
  %7 = alloca %"class.sh::ImmutableString", align 8
  %8 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %2, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %2, i64 0, i32 3
  %13 = bitcast %"class.sh::TFunction"* %2 to %"class.sh::TSymbol"*
  %14 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  br label %21

15:                                               ; preds = %39, %3
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, 299
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %20 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %19, align 8
  br i1 %18, label %43, label %62

21:                                               ; preds = %11, %39
  %22 = phi i64 [ %9, %11 ], [ %40, %39 ]
  %23 = phi i64 [ 0, %11 ], [ %41, %39 ]
  %24 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %12, align 8
  %25 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %24, i64 %23
  %26 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %26, i64 0, i32 1
  %28 = load %"class.sh::TType"*, %"class.sh::TType"** %27, align 8
  %29 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %28, i64 0, i32 14
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %21
  %33 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %13) #17
  %34 = extractvalue { i8*, i64 } %33, 0
  %35 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %14, align 8
  %36 = icmp eq i8* %34, null
  %37 = select i1 %36, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %34
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %35, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.257, i64 0, i64 0), i8* %37) #17
  %38 = load i64, i64* %8, align 8
  br label %39

39:                                               ; preds = %21, %32
  %40 = phi i64 [ %22, %21 ], [ %38, %32 ]
  %41 = add nuw i64 %23, 1
  %42 = icmp ult i64 %41, %40
  br i1 %42, label %21, label %15

43:                                               ; preds = %15
  %44 = bitcast %"class.sh::ImmutableString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #17
  %45 = bitcast %"class.sh::TFunction"* %2 to %"class.sh::TSymbol"*
  %46 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %45) #17
  %47 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 0
  %48 = extractvalue { i8*, i64 } %46, 0
  store i8* %48, i8** %47, align 8
  %49 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 1
  %50 = extractvalue { i8*, i64 } %46, 1
  store i64 %50, i64* %49, align 8
  %51 = load i32, i32* %16, align 8
  %52 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %53 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %52, align 8
  %54 = call zeroext i1 @_ZNK2sh12TSymbolTable22isUnmangledBuiltInNameERKNS_15ImmutableStringEiRKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS4_4lessIS6_EENS4_9allocatorINS4_4pairIKS6_S7_EEEEEE(%"class.sh::TSymbolTable"* %20, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %4, i32 %51, %"class.std::__1::map.53"* dereferenceable(24) %53) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #17
  br i1 %54, label %55, label %80

55:                                               ; preds = %43
  %56 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %45) #17
  %57 = extractvalue { i8*, i64 } %56, 0
  %58 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %59 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %58, align 8
  %60 = icmp eq i8* %57, null
  %61 = select i1 %60, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %57
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %59, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.258, i64 0, i64 0), i8* %61) #17
  br label %80

62:                                               ; preds = %15
  %63 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #17
  %64 = bitcast %"class.sh::TFunction"* %2 to %"class.sh::TSymbol"*
  %65 = tail call { i8*, i64 } @_ZNK2sh7TSymbol14getMangledNameEv(%"class.sh::TSymbol"* %64) #17
  %66 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %67 = extractvalue { i8*, i64 } %65, 0
  store i8* %67, i8** %66, align 8
  %68 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %69 = extractvalue { i8*, i64 } %65, 1
  store i64 %69, i64* %68, align 8
  %70 = load i32, i32* %16, align 8
  %71 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %20, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5, i32 %70) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #17
  %72 = icmp eq %"class.sh::TSymbol"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %62
  %74 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %64) #17
  %75 = extractvalue { i8*, i64 } %74, 0
  %76 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %77 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %76, align 8
  %78 = icmp eq i8* %75, null
  %79 = select i1 %78, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %75
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %77, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.259, i64 0, i64 0), i8* %79) #17
  br label %80

80:                                               ; preds = %73, %62, %43, %55
  %81 = phi %"class.sh::TSymbol"* [ %64, %73 ], [ %64, %62 ], [ %45, %43 ], [ %45, %55 ]
  %82 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %19, align 8
  %83 = bitcast %"class.sh::ImmutableString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #17
  %84 = call { i8*, i64 } @_ZNK2sh7TSymbol14getMangledNameEv(%"class.sh::TSymbol"* %81) #17
  %85 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  %86 = extractvalue { i8*, i64 } %84, 0
  store i8* %86, i8** %85, align 8
  %87 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 1
  %88 = extractvalue { i8*, i64 } %84, 1
  store i64 %88, i64* %87, align 8
  %89 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable10findGlobalERKNS_15ImmutableStringE(%"class.sh::TSymbolTable"* %82, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #17
  %90 = icmp eq %"class.sh::TSymbol"* %89, null
  br i1 %90, label %186, label %91

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %89, i64 2
  %93 = bitcast %"class.sh::TSymbol"* %92 to %"class.sh::TType"**
  %94 = load %"class.sh::TType"*, %"class.sh::TType"** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %2, i64 0, i32 5
  %96 = load %"class.sh::TType"*, %"class.sh::TType"** %95, align 8
  %97 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 10, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %96, i64 0, i32 10, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %98, %100
  br i1 %101, label %102, label %120

102:                                              ; preds = %91
  %103 = icmp eq i64 %98, 0
  br i1 %103, label %120, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 10, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %96, i64 0, i32 10, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = icmp eq i32* %106, %108
  br i1 %109, label %120, label %112

110:                                              ; preds = %112
  %111 = icmp eq i64 %119, %98
  br i1 %111, label %120, label %112

112:                                              ; preds = %104, %110
  %113 = phi i64 [ %119, %110 ], [ 0, %104 ]
  %114 = getelementptr inbounds i32, i32* %106, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds i32, i32* %108, i64 %113
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %115, %117
  %119 = add nuw i64 %113, 1
  br i1 %118, label %110, label %120

120:                                              ; preds = %112, %110, %104, %102, %91
  %121 = phi i1 [ true, %91 ], [ false, %102 ], [ false, %104 ], [ false, %110 ], [ true, %112 ]
  %122 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %96, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %123, %125
  br i1 %126, label %127, label %146

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 8
  %129 = load i8, i8* %128, align 8
  %130 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %96, i64 0, i32 8
  %131 = load i8, i8* %130, align 8
  %132 = icmp eq i8 %129, %131
  br i1 %132, label %133, label %146

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 9
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %96, i64 0, i32 9
  %137 = load i8, i8* %136, align 1
  %138 = icmp ne i8 %135, %137
  %139 = or i1 %121, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 13
  %142 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %141, align 8
  %143 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %96, i64 0, i32 13
  %144 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %143, align 8
  %145 = icmp eq %"class.sh::TStructure"* %142, %144
  br i1 %145, label %150, label %146

146:                                              ; preds = %140, %120, %127, %133
  %147 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %125) #17
  %148 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %149 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %148, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %149, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.260, i64 0, i64 0), i8* %147) #17
  br label %150

150:                                              ; preds = %140, %146
  %151 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %89, i64 1, i32 1
  %152 = bitcast %"class.sh::TSymbolUniqueId"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %186, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %89, i64 1, i32 0, i32 1
  %157 = bitcast i64* %156 to %"class.sh::TVariable"***
  %158 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %2, i64 0, i32 3
  %159 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  br label %160

160:                                              ; preds = %155, %182
  %161 = phi i64 [ %153, %155 ], [ %183, %182 ]
  %162 = phi i64 [ 0, %155 ], [ %184, %182 ]
  %163 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %157, align 8
  %164 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %163, i64 %162
  %165 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %164, align 8
  %166 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %165, i64 0, i32 1
  %167 = load %"class.sh::TType"*, %"class.sh::TType"** %166, align 8
  %168 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %167, i64 0, i32 2
  %169 = load i32, i32* %168, align 8
  %170 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %158, align 8
  %171 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %170, i64 %162
  %172 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %171, align 8
  %173 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %172, i64 0, i32 1
  %174 = load %"class.sh::TType"*, %"class.sh::TType"** %173, align 8
  %175 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %174, i64 0, i32 2
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %169, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %160
  %179 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %176) #17
  %180 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %159, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %180, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.261, i64 0, i64 0), i8* %179) #17
  %181 = load i64, i64* %152, align 8
  br label %182

182:                                              ; preds = %160, %178
  %183 = phi i64 [ %161, %160 ], [ %181, %178 ]
  %184 = add nuw i64 %162, 1
  %185 = icmp ult i64 %184, %183
  br i1 %185, label %160, label %186

186:                                              ; preds = %182, %150, %80
  %187 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %19, align 8
  %188 = bitcast %"class.sh::ImmutableString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #17
  %189 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %81) #17
  %190 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %7, i64 0, i32 0
  %191 = extractvalue { i8*, i64 } %189, 0
  store i8* %191, i8** %190, align 8
  %192 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %7, i64 0, i32 1
  %193 = extractvalue { i8*, i64 } %189, 1
  store i64 %193, i64* %192, align 8
  %194 = load i32, i32* %16, align 8
  %195 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable4findERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %187, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %7, i32 %194) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #17
  %196 = icmp eq %"class.sh::TSymbol"* %195, null
  br i1 %196, label %208, label %197

197:                                              ; preds = %186
  %198 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %195, i64 0, i32 4
  %199 = load i8, i8* %198, align 2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %208, label %201

201:                                              ; preds = %197
  %202 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %81) #17
  %203 = extractvalue { i8*, i64 } %202, 0
  %204 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %205 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %204, align 8
  %206 = icmp eq i8* %203, null
  %207 = select i1 %206, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %203
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %205, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.262, i64 0, i64 0), i8* %207) #17
  br label %208

208:                                              ; preds = %197, %201, %186
  %209 = phi i1 [ true, %186 ], [ false, %201 ], [ false, %197 ]
  %210 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %19, align 8
  call void @_ZN2sh12TSymbolTable26declareUserDefinedFunctionEPNS_9TFunctionEb(%"class.sh::TSymbolTable"* %210, %"class.sh::TFunction"* %2, i1 zeroext %209) #17
  %211 = call zeroext i1 @_ZNK2sh9TFunction6isMainEv(%"class.sh::TFunction"* %2) #17
  br i1 %211, label %212, label %228

212:                                              ; preds = %208
  %213 = load i64, i64* %8, align 8
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %217 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %216, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %217, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.263, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.264, i64 0, i64 0)) #17
  br label %218

218:                                              ; preds = %212, %215
  %219 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %2, i64 0, i32 5
  %220 = load %"class.sh::TType"*, %"class.sh::TType"** %219, align 8
  %221 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %220, i64 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %228, label %224

224:                                              ; preds = %218
  %225 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %222) #17
  %226 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %227 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %226, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %227, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.265, i64 0, i64 0), i8* %225) #17
  br label %228

228:                                              ; preds = %218, %224, %208
  ret %"class.sh::TFunction"* %2
}

declare zeroext i1 @_ZNK2sh12TSymbolTable22isUnmangledBuiltInNameERKNS_15ImmutableStringEiRKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS4_4lessIS6_EENS4_9allocatorINS4_4pairIKS6_S7_EEEEEE(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i32, %"class.std::__1::map.53"* dereferenceable(24)) local_unnamed_addr #3

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable10findGlobalERKNS_15ImmutableStringE(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable4findERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i32) local_unnamed_addr #3

declare void @_ZN2sh12TSymbolTable26declareUserDefinedFunctionEPNS_9TFunctionEb(%"class.sh::TSymbolTable"*, %"class.sh::TFunction"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK2sh9TFunction6isMainEv(%"class.sh::TFunction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunction"* @_ZN2sh13TParseContext19parseFunctionHeaderERKNS_11TPublicTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string.38", align 8
  %6 = alloca %"class.sh::TInfoSinkBase", align 8
  %7 = alloca %"class.sh::TType", align 8
  %8 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  %12 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %9)
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.266, i64 0, i64 0), i8* %12) #17
  br label %15

15:                                               ; preds = %4, %11
  %16 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1
  %17 = tail call zeroext i1 @_ZNK2sh16TLayoutQualifier7isEmptyEv(%"struct.sh::TLayoutQualifier"* %16)
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.266, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #17
  br label %21

21:                                               ; preds = %18, %15
  %22 = bitcast %"class.std::__1::basic_string.38"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::basic_string.38"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i32, i32* %26, align 8
  %29 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %28) #17
  %30 = tail call i64 @strlen(i8* %29) #17
  %31 = icmp ugt i64 %30, -17
  br i1 %31, label %32, label %34

32:                                               ; preds = %21
  %33 = bitcast %"class.std::__1::basic_string.38"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %33) #20
  unreachable

34:                                               ; preds = %21
  %35 = icmp ult i64 %30, 23
  br i1 %35, label %42, label %36

36:                                               ; preds = %34
  %37 = add nuw i64 %30, 16
  %38 = and i64 %37, -16
  %39 = tail call i8* @_Znwm(i64 %38) #18
  store i8* %39, i8** %23, align 8
  %40 = or i64 %38, -9223372036854775808
  store i64 %40, i64* %25, align 8
  store i64 %30, i64* %24, align 8
  %41 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

42:                                               ; preds = %34
  %43 = trunc i64 %30 to i8
  %44 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42, %36
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %41, %36 ]
  %49 = phi i8* [ %22, %42 ], [ %39, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %29, i64 %30, i1 false) #17
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %44, %42 ], [ %48, %47 ]
  %52 = phi i8* [ %22, %42 ], [ %49, %47 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %30
  store i8 0, i8* %53, align 1
  %54 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.267, i64 0, i64 0)) #17
  %55 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i8*, i8** %23, align 8
  %60 = select i1 %58, i8* %59, i8* %22
  %61 = call zeroext i1 @_ZN2sh13TParseContext20checkIsNotOpaqueTypeERKNS_10TSourceLocERKNS_22TTypeSpecifierNonArrayEPKc(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.sh::TTypeSpecifierNonArray"* dereferenceable(40) %55, i8* %60)
  %62 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %63 = load i32, i32* %62, align 8
  %64 = icmp slt i32 %63, 300
  br i1 %64, label %65, label %94

65:                                               ; preds = %50
  %66 = call zeroext i1 @_ZNK2sh11TPublicType27isStructureContainingArraysEv(%"struct.sh::TPublicType"* %1) #17
  br i1 %66, label %67, label %94

67:                                               ; preds = %65
  %68 = bitcast %"class.sh::TInfoSinkBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %68) #17
  %69 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 48, i1 false) #17
  %71 = bitcast %"class.sh::TType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %71) #17
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* nonnull %7, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %72 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %6, %"class.sh::TType"* nonnull dereferenceable(184) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %71) #17
  %73 = bitcast %"class.sh::TInfoSinkBase"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %69, align 8
  %78 = select i1 %76, i8* %77, i8* %68
  %79 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %80 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %79, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %80, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.268, i64 0, i64 0), i8* %78) #17
  %81 = load i32*, i32** %70, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %67
  %84 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 1
  %85 = ptrtoint i32* %81 to i64
  %86 = bitcast i32** %84 to i64*
  store i64 %85, i64* %86, align 8
  %87 = bitcast i32* %81 to i8*
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %83, %67
  %89 = load i8, i8* %74, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %88, %91
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %68) #17
  br label %94

94:                                               ; preds = %65, %93, %50
  %95 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %96 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %95, i64 80) #17
  %97 = bitcast i8* %96 to %"class.sh::TFunction"*
  %98 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %99 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %98, align 8
  %100 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %101 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %100, i64 184) #17
  %102 = bitcast i8* %101 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %102, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  call void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"* %97, %"class.sh::TSymbolTable"* %99, %"class.sh::ImmutableString"* dereferenceable(16) %2, i8 zeroext 1, %"class.sh::TType"* %102, i1 zeroext false) #17
  %103 = load i8, i8* %56, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94
  %106 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %106) #18
  br label %107

107:                                              ; preds = %94, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  ret %"class.sh::TFunction"* %97
}

declare void @_ZN2sh9TFunctionC1EPNS_12TSymbolTableERKNS_15ImmutableStringENS_10SymbolTypeEPKNS_5TTypeEb(%"class.sh::TFunction"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), i8 zeroext, %"class.sh::TType"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext21addNonConstructorFuncERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::TParseContext"* nocapture readnone, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #2 align 2 {
  %4 = tail call %"class.sh::TFunctionLookup"* @_ZN2sh15TFunctionLookup18CreateFunctionCallERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::ImmutableString"* dereferenceable(16) %1, %"class.sh::TSymbol"* %2) #17
  ret %"class.sh::TFunctionLookup"* %4
}

declare %"class.sh::TFunctionLookup"* @_ZN2sh15TFunctionLookup18CreateFunctionCallERKNS_15ImmutableStringEPKNS_7TSymbolE(%"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TSymbol"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TFunctionLookup"* @_ZN2sh13TParseContext18addConstructorFuncERKNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TPublicType"* dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 300
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK2sh11TPublicType7isArrayEv(%"struct.sh::TPublicType"* %1) #17
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 4
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %11 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %11, %"struct.sh::TSourceLoc"* dereferenceable(16) %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.269, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %12

12:                                               ; preds = %8, %6, %2
  %13 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 5
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 4
  %18 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %19) #17
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %22, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.270, i64 0, i64 0), i8* %20) #17
  br label %23

23:                                               ; preds = %12, %16
  %24 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %25 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %24, i64 184) #17
  %26 = bitcast i8* %25 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %26, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %27 = tail call zeroext i1 @_ZNK2sh5TType16canBeConstructedEv(%"class.sh::TType"* %26) #17
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 4
  %30 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = tail call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %31) #17
  %33 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %34 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %33, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %34, %"struct.sh::TSourceLoc"* dereferenceable(16) %29, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.271, i64 0, i64 0), i8* %32) #17
  tail call void @_ZN2sh5TType12setBasicTypeENS_10TBasicTypeE(%"class.sh::TType"* %26, i32 1) #17
  br label %35

35:                                               ; preds = %28, %23
  %36 = tail call %"class.sh::TFunctionLookup"* @_ZN2sh15TFunctionLookup17CreateConstructorEPKNS_5TTypeE(%"class.sh::TType"* %26) #17
  ret %"class.sh::TFunctionLookup"* %36
}

declare zeroext i1 @_ZNK2sh5TType16canBeConstructedEv(%"class.sh::TType"*) local_unnamed_addr #3

declare void @_ZN2sh5TType12setBasicTypeENS_10TBasicTypeE(%"class.sh::TType"*, i32) local_unnamed_addr #3

declare %"class.sh::TFunctionLookup"* @_ZN2sh15TFunctionLookup17CreateConstructorEPKNS_5TTypeE(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext22checkIsNotUnsizedArrayERKNS_10TSourceLocEPKcRKNS_15ImmutableStringEPNS_5TTypeE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), i8*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TType"*) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TSpan", align 8
  %7 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %4) #17
  br i1 %7, label %8, label %16

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  %11 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %12
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %2, i8* %14) #17
  %15 = bitcast %"class.sh::TSpan"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #17
  call void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %4, %"class.sh::TSpan"* nonnull dereferenceable(16) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #17
  br label %16

16:                                               ; preds = %8, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext24parseParameterDeclaratorEPNS_5TTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TType"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::TSpan", align 8
  %6 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %1) #17
  br i1 %6, label %7, label %15

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  %10 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %11
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.272, i64 0, i64 0), i8* %13) #17
  %14 = bitcast %"class.sh::TSpan"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #17
  call void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %1, %"class.sh::TSpan"* nonnull dereferenceable(16) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  br label %15

15:                                               ; preds = %4, %7
  %16 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %21 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %20, align 8
  %22 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  %25 = select i1 %24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %23
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %21, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0), i8* %25) #17
  br label %26

26:                                               ; preds = %19, %15
  %27 = call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"class.sh::ImmutableString"* dereferenceable(16) %2)
  %28 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  %31 = select i1 %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %29
  %32 = insertvalue { i8*, %"class.sh::TType"* } undef, i8* %31, 0
  %33 = insertvalue { i8*, %"class.sh::TType"* } %32, %"class.sh::TType"* %1, 1
  ret { i8*, %"class.sh::TType"* } %33
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext24parseParameterDeclaratorERKNS_11TPublicTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %6 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %5, i64 184) #17
  %7 = bitcast i8* %6 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %7, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %8 = tail call { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext24parseParameterDeclaratorEPNS_5TTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TType"* %7, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3)
  ret { i8*, %"class.sh::TType"* } %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext29parseParameterArrayDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocERKNS_7TVectorIjEES6_PNS_11TPublicTypeE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"* nocapture readonly dereferenceable(24), %"struct.sh::TSourceLoc"* dereferenceable(16), %"struct.sh::TPublicType"*) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.sh::TSpan", align 8
  %8 = tail call zeroext i1 @_ZN2sh13TParseContext27checkArrayElementIsNotArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"struct.sh::TPublicType"* dereferenceable(160) %5)
  %9 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %10 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %9, i64 184) #17
  %11 = bitcast i8* %10 to %"class.sh::TType"*
  tail call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %11, %"struct.sh::TPublicType"* dereferenceable(160) %5) #17
  %12 = bitcast %"class.sh::TSpan"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #17
  %13 = bitcast %"class.sh::TVector.0"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.sh::TSpan"* %7 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %7, i64 0, i32 1
  %17 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %3, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %14
  %21 = ashr exact i64 %20, 2
  store i64 %21, i64* %16, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %11, %"class.sh::TSpan"* nonnull dereferenceable(16) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #17
  %22 = call { i8*, %"class.sh::TType"* } @_ZN2sh13TParseContext24parseParameterDeclaratorEPNS_5TTypeERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TType"* %11, %"class.sh::ImmutableString"* dereferenceable(16) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  ret { i8*, %"class.sh::TType"* } %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext50checkUnsizedArrayConstructorArgumentDimensionalityERKNS_7TVectorIPNS_11TIntermNodeEEENS_5TTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TVector.30"* nocapture readonly dereferenceable(24), %"class.sh::TType"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %7, align 8
  %9 = icmp eq %"class.sh::TIntermNode"** %6, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 10, i32 1
  br label %17

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.273, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  ret i1 false

15:                                               ; preds = %38
  %16 = icmp eq %"class.sh::TIntermNode"** %40, %8
  br i1 %16, label %47, label %17

17:                                               ; preds = %10, %15
  %18 = phi %"class.sh::TIntermNode"** [ %6, %10 ], [ %40, %15 ]
  %19 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %18, align 8
  %20 = bitcast %"class.sh::TIntermNode"* %19 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %21 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %21, i64 4
  %23 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %22, align 8
  %24 = tail call %"class.sh::TIntermTyped"* %23(%"class.sh::TIntermNode"* %19) #17
  %25 = bitcast %"class.sh::TIntermTyped"* %24 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %26, i64 31
  %28 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %27, align 8
  %29 = tail call dereferenceable(184) %"class.sh::TType"* %28(%"class.sh::TIntermTyped"* %24) #17
  %30 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %29, i64 0, i32 10, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  %33 = load i64, i64* %11, align 8
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %37 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %36, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %37, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %47

38:                                               ; preds = %17
  %39 = icmp ult i64 %32, %33
  %40 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %18, i64 1
  br i1 %39, label %41, label %15

41:                                               ; preds = %38
  %42 = icmp eq i64 %31, 0
  %43 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %44 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %43, align 8
  br i1 %42, label %45, label %46

45:                                               ; preds = %41
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %44, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.274, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %47

46:                                               ; preds = %41
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %44, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.275, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0)) #17
  br label %47

47:                                               ; preds = %15, %45, %46, %35
  %48 = phi i1 [ false, %35 ], [ false, %46 ], [ false, %45 ], [ true, %15 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext14addConstructorEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TFunctionLookup"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TType", align 8
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"class.sh::TSpan", align 8
  %7 = bitcast %"class.sh::TType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 184, i1 false)
  %8 = tail call dereferenceable(184) %"class.sh::TType"* @_ZNK2sh15TFunctionLookup15constructorTypeEv(%"class.sh::TFunctionLookup"* %1) #17
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* nonnull %4, %"class.sh::TType"* dereferenceable(184) %8) #17
  %9 = call dereferenceable(24) %"class.sh::TVector.30"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"* %1) #17
  %10 = call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* nonnull %4) #17
  br i1 %10, label %11, label %80

11:                                               ; preds = %3
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* nonnull %5, %"class.sh::TType"* nonnull dereferenceable(184) %4) #17
  %12 = call zeroext i1 @_ZN2sh13TParseContext50checkUnsizedArrayConstructorArgumentDimensionalityERKNS_7TVectorIPNS_11TIntermNodeEEENS_5TTypeERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TVector.30"* dereferenceable(24) %9, %"class.sh::TType"* nonnull %5, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.sh::TSpan"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #17
  call void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* nonnull %4, %"class.sh::TSpan"* nonnull dereferenceable(16) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #17
  %15 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %4) #17
  br label %96

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %9, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.sh::TIntermNode"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.sh::TVector.30"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = bitcast %"class.sh::TVector.30"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %24) #20
  unreachable

25:                                               ; preds = %16
  %26 = inttoptr i64 %21 to %"class.sh::TIntermNode"**
  %27 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %26, align 8
  %28 = bitcast %"class.sh::TIntermNode"* %27 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %29 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %29, i64 4
  %31 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %30, align 8
  %32 = call %"class.sh::TIntermTyped"* %31(%"class.sh::TIntermNode"* %27) #17
  %33 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %4, i64 0, i32 10, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %4, i64 0, i32 10, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %25
  %42 = load i64, i64* %18, align 8
  %43 = load i64, i64* %20, align 8
  %44 = sub i64 %42, %43
  %45 = lshr exact i64 %44, 3
  %46 = trunc i64 %45 to i32
  call void @_ZN2sh5TType25sizeOutermostUnsizedArrayEj(%"class.sh::TType"* nonnull %4, i32 %46) #17
  br label %47

47:                                               ; preds = %41, %25
  %48 = bitcast %"class.sh::TIntermTyped"* %32 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %49 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %49, i64 31
  %51 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %50, align 8
  %52 = call dereferenceable(184) %"class.sh::TType"* %51(%"class.sh::TIntermTyped"* %32) #17
  %53 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %52, i64 0, i32 10, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %80, label %56

56:                                               ; preds = %47, %71
  %57 = phi i64 [ %72, %71 ], [ 0, %47 ]
  %58 = load i32*, i32** %33, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %57
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %71

62:                                               ; preds = %56
  %63 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %48, align 8
  %64 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %63, i64 31
  %65 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %64, align 8
  %66 = call dereferenceable(184) %"class.sh::TType"* %65(%"class.sh::TIntermTyped"* %32) #17
  %67 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %66, i64 0, i32 10, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %57
  %70 = load i32, i32* %69, align 4
  call void @_ZN2sh5TType12setArraySizeEmj(%"class.sh::TType"* nonnull %4, i64 %57, i32 %70) #17
  br label %71

71:                                               ; preds = %56, %62
  %72 = add nuw i64 %57, 1
  %73 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %48, align 8
  %74 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %73, i64 31
  %75 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %74, align 8
  %76 = call dereferenceable(184) %"class.sh::TType"* %75(%"class.sh::TIntermTyped"* %32) #17
  %77 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %76, i64 0, i32 10, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = icmp ult i64 %72, %78
  br i1 %79, label %56, label %80

80:                                               ; preds = %71, %47, %3
  %81 = call zeroext i1 @_ZN2sh13TParseContext25checkConstructorArgumentsERKNS_10TSourceLocERKNS_7TVectorIPNS_11TIntermNodeEEERKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::TVector.30"* dereferenceable(24) %9, %"class.sh::TType"* nonnull dereferenceable(184) %4)
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %4) #17
  br label %96

84:                                               ; preds = %80
  %85 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* nonnull dereferenceable(184) %4, %"class.sh::TVector.30"* %9) #17
  %86 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast %"struct.sh::TSourceLoc"* %86 to i8*
  %88 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 4 %88, i64 16, i1 false) #17
  %89 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %90 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %89, align 8
  %91 = bitcast %"class.sh::TIntermAggregate"* %85 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)***
  %92 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)** %92, i64 27
  %94 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)** %93, align 8
  %95 = call %"class.sh::TIntermTyped"* %94(%"class.sh::TIntermAggregate"* %85, %"class.sh::TDiagnostics"* %90) #17
  br label %96

96:                                               ; preds = %84, %82, %13
  %97 = phi %"class.sh::TIntermTyped"* [ %95, %84 ], [ %83, %82 ], [ %15, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %7) #17
  ret %"class.sh::TIntermTyped"* %97
}

declare dereferenceable(184) %"class.sh::TType"* @_ZNK2sh15TFunctionLookup15constructorTypeEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.sh::TVector.30"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

declare void @_ZN2sh5TType12setArraySizeEmj(%"class.sh::TType"*, i64, i32) local_unnamed_addr #3

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate17CreateConstructorERKNS_5TTypeEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TType"* dereferenceable(184), %"class.sh::TVector.30"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermDeclaration"* @_ZN2sh13TParseContext17addInterfaceBlockERKNS_21TTypeQualifierBuilderERKNS_10TSourceLocERKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEES9_S6_PKNSA_IjEES6_(%"class.sh::TParseContext"*, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.1"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"* readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %10 = alloca i64, align 8
  %11 = alloca %"class.sh::TSpan", align 8
  %12 = alloca %"struct.sh::TTypeQualifier", align 4
  %13 = alloca %"struct.sh::TLayoutQualifier", align 8
  %14 = alloca %"class.std::__1::basic_string.38", align 8
  %15 = alloca [3 x i32], align 4
  %16 = alloca [48 x i8], align 4
  %17 = alloca %"class.sh::TSpan", align 8
  %18 = bitcast i64* %10 to i8*
  %19 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %20 = tail call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %3)
  %21 = bitcast %"struct.sh::TTypeQualifier"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %21) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -86, i64 128, i1 false)
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %23 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZNK2sh21TTypeQualifierBuilder24getVariableTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* nonnull sret %12, %"class.sh::TTypeQualifierBuilder"* %1, %"class.sh::TDiagnostics"* %23) #17
  %24 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = or i32 %25, 1
  %27 = icmp eq i32 %26, 7
  %28 = call zeroext i1 @_ZN2sh15IsShaderIoBlockENS_10TQualifierE(i32 %25)
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, 310
  %32 = load i32, i32* %24, align 4
  br i1 %31, label %33, label %39

33:                                               ; preds = %9
  %34 = icmp eq i32 %32, 6
  br i1 %34, label %105, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %37 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %32)
  %38 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %38, %"struct.sh::TSourceLoc"* dereferenceable(16) %36, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.276, i64 0, i64 0), i8* %37) #17
  br label %105

39:                                               ; preds = %9
  switch i32 %32, label %72 [
    i32 81, label %40
    i32 80, label %56
    i32 6, label %105
    i32 7, label %105
  ]

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %42 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %41, align 8
  %43 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %42, i8 zeroext 20) #17
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %29, align 8
  %46 = icmp slt i32 %45, 320
  br i1 %46, label %51, label %47

47:                                               ; preds = %44, %40
  %48 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 36488
  br i1 %50, label %105, label %51

51:                                               ; preds = %47, %44
  %52 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %53 = load i32, i32* %24, align 4
  %54 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %53)
  %55 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %55, %"struct.sh::TSourceLoc"* dereferenceable(16) %52, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.277, i64 0, i64 0), i8* %54) #17
  br label %105

56:                                               ; preds = %39
  %57 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %58 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %57, align 8
  %59 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %58, i8 zeroext 20) #17
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = load i32, i32* %29, align 8
  %62 = icmp slt i32 %61, 320
  br i1 %62, label %67, label %63

63:                                               ; preds = %60, %56
  %64 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 36487
  br i1 %66, label %105, label %67

67:                                               ; preds = %63, %60
  %68 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %69 = load i32, i32* %24, align 4
  %70 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %69)
  %71 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %71, %"struct.sh::TSourceLoc"* dereferenceable(16) %68, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.278, i64 0, i64 0), i8* %70) #17
  br label %105

72:                                               ; preds = %39
  br i1 %28, label %73, label %101

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %75 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %74, align 8
  %76 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %75, i8 zeroext 12) #17
  br i1 %76, label %88, label %77

77:                                               ; preds = %73
  %78 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %74, align 8
  %79 = call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %78, i8 zeroext 13) #17
  br i1 %79, label %88, label %80

80:                                               ; preds = %77
  %81 = load i32, i32* %29, align 8
  %82 = icmp slt i32 %81, 320
  br i1 %82, label %83, label %88

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %85 = load i32, i32* %24, align 4
  %86 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %85)
  %87 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %87, %"struct.sh::TSourceLoc"* dereferenceable(16) %84, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.279, i64 0, i64 0), i8* %86) #17
  br label %88

88:                                               ; preds = %83, %80, %77, %73
  %89 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 36488
  %92 = icmp eq %"class.sh::TVector.0"* %7, null
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %105

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %96 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  %97 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  %100 = select i1 %99, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %98
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %96, %"struct.sh::TSourceLoc"* dereferenceable(16) %95, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.280, i64 0, i64 0), i8* %100) #17
  br label %105

101:                                              ; preds = %72
  %102 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %103 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %32)
  %104 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %104, %"struct.sh::TSourceLoc"* dereferenceable(16) %102, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.281, i64 0, i64 0), i8* %103) #17
  br label %105

105:                                              ; preds = %33, %39, %39, %47, %63, %51, %88, %94, %101, %67, %35
  %106 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 4
  %107 = load i8, i8* %106, align 4, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %111 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %111, %"struct.sh::TSourceLoc"* dereferenceable(16) %110, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.282, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %112

112:                                              ; preds = %105, %109
  %113 = load i32, i32* %24, align 4
  %114 = icmp eq i32 %113, 7
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 1
  %117 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  call void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"struct.sh::TMemoryQualifier"* dereferenceable(5) %116, %"struct.sh::TSourceLoc"* dereferenceable(16) %117)
  br label %118

118:                                              ; preds = %112, %115
  %119 = icmp ne %"class.sh::TVector.0"* %7, null
  br i1 %119, label %120, label %172

120:                                              ; preds = %118
  br i1 %27, label %121, label %140

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %7, i64 0, i32 0, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.sh::TVector.0"* %7 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %124, %126
  br i1 %127, label %128, label %132

128:                                              ; preds = %121
  %129 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %129, %"struct.sh::TSourceLoc"* dereferenceable(16) %8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.283, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  %130 = load i64, i64* %123, align 8
  %131 = load i64, i64* %125, align 8
  br label %132

132:                                              ; preds = %128, %121
  %133 = phi i64 [ %131, %128 ], [ %126, %121 ]
  %134 = phi i64 [ %130, %128 ], [ %124, %121 ]
  %135 = sub i64 %134, %133
  %136 = ashr exact i64 %135, 2
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %138, label %182

138:                                              ; preds = %132
  %139 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %139, %"struct.sh::TSourceLoc"* dereferenceable(16) %8, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.284, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %182

140:                                              ; preds = %120
  br i1 %28, label %141, label %182

141:                                              ; preds = %140
  %142 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %7, i64 0, i32 0, i32 0, i32 1
  %143 = bitcast i32** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.sh::TVector.0"* %7 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 2
  %149 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 36313
  br i1 %151, label %152, label %167

152:                                              ; preds = %141
  %153 = load i32, i32* %24, align 4
  %154 = call zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32 %153) #17
  br i1 %154, label %155, label %167

155:                                              ; preds = %152
  %156 = add nsw i64 %148, -1
  %157 = load i32*, i32** %142, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 -1
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %167, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 54
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %159, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %166, %"struct.sh::TSourceLoc"* dereferenceable(16) %8, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.285, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %167

167:                                              ; preds = %165, %155, %161, %152, %141
  %168 = phi i64 [ %148, %152 ], [ %148, %141 ], [ %156, %161 ], [ %156, %155 ], [ %156, %165 ]
  %169 = icmp ugt i64 %168, 1
  br i1 %169, label %170, label %182

170:                                              ; preds = %167
  %171 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %171, %"struct.sh::TSourceLoc"* dereferenceable(16) %8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.286, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %182

172:                                              ; preds = %118
  br i1 %28, label %173, label %182

173:                                              ; preds = %172
  %174 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 36313
  br i1 %176, label %177, label %182

177:                                              ; preds = %173
  %178 = load i32, i32* %24, align 4
  %179 = call zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32 %178) #17
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  %181 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %181, %"struct.sh::TSourceLoc"* dereferenceable(16) %8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.287, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %182

182:                                              ; preds = %167, %170, %172, %173, %177, %180, %138, %132, %140
  %183 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 6
  %184 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 20
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, -1
  br i1 %186, label %189, label %187

187:                                              ; preds = %182
  %188 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %188, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %189

189:                                              ; preds = %182, %187
  %190 = load i32, i32* %29, align 8
  %191 = icmp slt i32 %190, 310
  br i1 %191, label %192, label %198

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 5
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, -1
  br i1 %195, label %234, label %196

196:                                              ; preds = %192
  %197 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %197, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %234

198:                                              ; preds = %189
  %199 = icmp eq %"class.sh::TVector.0"* %7, null
  br i1 %199, label %206, label %200

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %7, i64 0, i32 0, i32 0, i32 0
  %202 = load i32*, i32** %201, align 8
  %203 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %7, i64 0, i32 0, i32 0, i32 1
  %204 = load i32*, i32** %203, align 8
  %205 = icmp eq i32* %202, %204
  br i1 %205, label %206, label %209

206:                                              ; preds = %200, %198
  %207 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 5
  %208 = load i32, i32* %207, align 4
  br label %214

209:                                              ; preds = %200
  %210 = load i32, i32* %202, align 4
  %211 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 5
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %210, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %206, %209
  %215 = phi i32 [ %208, %206 ], [ %212, %209 ]
  br label %216

216:                                              ; preds = %209, %214
  %217 = phi i32 [ %215, %214 ], [ %212, %209 ]
  %218 = phi i32 [ 1, %214 ], [ %210, %209 ]
  %219 = load i32, i32* %24, align 4
  switch i32 %219, label %234 [
    i32 6, label %220
    i32 7, label %227
  ]

220:                                              ; preds = %216
  %221 = add nsw i32 %218, %217
  %222 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 41
  %223 = load i32, i32* %222, align 4
  %224 = icmp sgt i32 %221, %223
  br i1 %224, label %225, label %234

225:                                              ; preds = %220
  %226 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %226, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %234

227:                                              ; preds = %216
  %228 = add nsw i32 %218, %217
  %229 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 44
  %230 = load i32, i32* %229, align 8
  %231 = icmp sgt i32 %228, %230
  br i1 %231, label %232, label %234

232:                                              ; preds = %227
  %233 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %233, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %234

234:                                              ; preds = %232, %227, %225, %220, %216, %196, %192
  %235 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 9
  %236 = load i8, i8* %235, align 4, !range !2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %234
  %239 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %239, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0)) #17
  br label %240

240:                                              ; preds = %234, %238
  %241 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 10
  %242 = load i8, i8* %241, align 1, !range !2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %245, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #17
  br label %246

246:                                              ; preds = %240, %244
  %247 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 0, i32 22
  %248 = load i8, i8* %247, align 4, !range !2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  %251 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %251, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %252

252:                                              ; preds = %246, %250
  %253 = bitcast %"struct.sh::TLayoutQualifier"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %253) #17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %253, i8* nonnull align 4 %21, i64 92, i1 false)
  %254 = load i32, i32* %24, align 4
  %255 = call zeroext i1 @_ZN2sh15IsShaderIoBlockENS_10TQualifierE(i32 %254)
  br i1 %255, label %269, label %256

256:                                              ; preds = %252
  %257 = load i32, i32* %24, align 4
  %258 = and i32 %257, -2
  %259 = icmp eq i32 %258, 80
  br i1 %259, label %269, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %13, i64 0, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = icmp eq i32 %262, -1
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = load i32, i32* %29, align 8
  %266 = icmp sgt i32 %265, 309
  %267 = select i1 %266, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.86, i64 0, i64 0)
  %268 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %268, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* %267, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %269

269:                                              ; preds = %264, %260, %256, %252
  %270 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %13, i64 0, i32 3
  %271 = load i32, i32* %270, align 4
  %272 = icmp ne i32 %271, 4
  %273 = load i32, i32* %24, align 4
  %274 = icmp eq i32 %273, 7
  %275 = or i1 %272, %274
  br i1 %275, label %278, label %276

276:                                              ; preds = %269
  %277 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %277, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0)) #17
  br label %278

278:                                              ; preds = %269, %276
  %279 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %13, i64 0, i32 2
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %290

282:                                              ; preds = %278
  %283 = load i32, i32* %24, align 4
  switch i32 %283, label %290 [
    i32 6, label %284
    i32 7, label %287
  ]

284:                                              ; preds = %282
  %285 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 19
  %286 = load i32, i32* %285, align 4
  store i32 %286, i32* %279, align 8
  br label %290

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 21
  %289 = load i32, i32* %288, align 4
  store i32 %289, i32* %279, align 8
  br label %290

290:                                              ; preds = %282, %284, %287, %278
  %291 = load i32, i32* %270, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %301

293:                                              ; preds = %290
  %294 = load i32, i32* %24, align 4
  switch i32 %294, label %301 [
    i32 6, label %295
    i32 7, label %298
  ]

295:                                              ; preds = %293
  %296 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 20
  %297 = load i32, i32* %296, align 8
  store i32 %297, i32* %270, align 4
  br label %301

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 22
  %300 = load i32, i32* %299, align 8
  store i32 %300, i32* %270, align 4
  br label %301

301:                                              ; preds = %293, %295, %298, %290
  %302 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %13, i64 0, i32 4
  %303 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %302) #17
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %321, label %305

305:                                              ; preds = %301, %311
  %306 = phi i64 [ %312, %311 ], [ 0, %301 ]
  %307 = call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %302, i64 %306) #17
  %308 = icmp eq i32 %307, -1
  br i1 %308, label %311, label %309

309:                                              ; preds = %305
  %310 = icmp ult i64 %306, 3
  br i1 %310, label %315, label %318

311:                                              ; preds = %305
  %312 = add nuw i64 %306, 1
  %313 = call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %302) #17
  %314 = icmp ult i64 %312, %313
  br i1 %314, label %305, label %321

315:                                              ; preds = %309
  %316 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %306
  %317 = load i8*, i8** %316, align 8
  br label %318

318:                                              ; preds = %309, %315
  %319 = phi i8* [ %317, %315 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %309 ]
  %320 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %320, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.144, i64 0, i64 0), i8* nonnull %319) #17
  br label %321

321:                                              ; preds = %311, %301, %318
  %322 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %13, i64 0, i32 7
  %323 = load i32, i32* %322, align 4
  switch i32 %323, label %336 [
    i32 0, label %340
    i32 1, label %337
    i32 2, label %324
    i32 3, label %325
    i32 4, label %326
    i32 5, label %327
    i32 6, label %328
    i32 7, label %329
    i32 8, label %330
    i32 9, label %331
    i32 10, label %332
    i32 11, label %333
    i32 12, label %334
    i32 13, label %335
  ]

324:                                              ; preds = %321
  br label %337

325:                                              ; preds = %321
  br label %337

326:                                              ; preds = %321
  br label %337

327:                                              ; preds = %321
  br label %337

328:                                              ; preds = %321
  br label %337

329:                                              ; preds = %321
  br label %337

330:                                              ; preds = %321
  br label %337

331:                                              ; preds = %321
  br label %337

332:                                              ; preds = %321
  br label %337

333:                                              ; preds = %321
  br label %337

334:                                              ; preds = %321
  br label %337

335:                                              ; preds = %321
  br label %337

336:                                              ; preds = %321
  br label %337

337:                                              ; preds = %336, %335, %334, %333, %332, %331, %330, %329, %328, %327, %326, %325, %324, %321
  %338 = phi i8* [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.520, i64 0, i64 0), %336 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.337, i64 0, i64 0), %335 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0), %334 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0), %333 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i64 0, i64 0), %332 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i64 0, i64 0), %331 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.338, i64 0, i64 0), %330 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0), %329 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.344, i64 0, i64 0), %328 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i64 0, i64 0), %327 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.342, i64 0, i64 0), %326 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.335, i64 0, i64 0), %325 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.334, i64 0, i64 0), %324 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.333, i64 0, i64 0), %321 ]
  %339 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %339, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.145, i64 0, i64 0), i8* nonnull %338) #17
  br label %340

340:                                              ; preds = %321, %337
  %341 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %4, i64 0, i32 0, i32 0, i32 1
  %342 = bitcast %"class.sh::TField"*** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.sh::TVector.1"* %4 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = icmp eq i64 %343, %345
  br i1 %346, label %361, label %347

347:                                              ; preds = %340
  %348 = bitcast %"class.std::__1::basic_string.38"* %14 to i8*
  %349 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = bitcast %"class.std::__1::basic_string.38"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %350, i64 0, i32 1, i32 0
  %352 = getelementptr inbounds i8, i8* %348, i64 19
  %353 = bitcast [3 x i32]* %15 to i8*
  %354 = bitcast %"class.sh::TSpan"* %11 to i8*
  %355 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 1, i32 0
  %356 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 1, i32 1
  %357 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 1, i32 2
  %358 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 1, i32 3
  %359 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %12, i64 0, i32 1, i32 4
  %360 = bitcast %"class.std::__1::basic_string.38"* %14 to i8*
  br label %370

361:                                              ; preds = %556, %340
  %362 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %363 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %362, i64 80) #17
  %364 = bitcast i8* %363 to %"class.sh::TInterfaceBlock"*
  %365 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %366 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %365, align 8
  call void @_ZN2sh15TInterfaceBlockC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEERKNS_16TLayoutQualifierENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TInterfaceBlock"* %364, %"class.sh::TSymbolTable"* %366, %"class.sh::ImmutableString"* dereferenceable(16) %3, %"class.sh::TVector.1"* %4, %"struct.sh::TLayoutQualifier"* nonnull dereferenceable(92) %13, i8 zeroext 1, i8 zeroext 0) #17
  %367 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %365, align 8
  %368 = bitcast i8* %363 to %"class.sh::TSymbol"*
  %369 = call zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"* %367, %"class.sh::TSymbol"* %368) #17
  br i1 %369, label %569, label %563

370:                                              ; preds = %347, %556
  %371 = phi i64 [ %345, %347 ], [ %559, %556 ]
  %372 = phi i64 [ 0, %347 ], [ %557, %556 ]
  %373 = inttoptr i64 %371 to %"class.sh::TField"**
  %374 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %373, i64 %372
  %375 = load %"class.sh::TField"*, %"class.sh::TField"** %374, align 8
  %376 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 0
  %377 = load %"class.sh::TType"*, %"class.sh::TType"** %376, align 8
  %378 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 0
  %379 = load i32, i32* %378, align 8
  %380 = add i32 %379, -8
  %381 = icmp ult i32 %380, 43
  %382 = add i32 %379, -51
  %383 = icmp ult i32 %382, 33
  %384 = or i1 %381, %383
  %385 = icmp eq i32 %379, 6
  %386 = or i1 %385, %384
  %387 = add i32 %379, -84
  %388 = icmp ult i32 %387, 6
  %389 = or i1 %388, %386
  br i1 %389, label %390, label %408

390:                                              ; preds = %370
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %348) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 -86, i64 24, i1 false)
  store i8 19, i8* %351, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %348, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.288, i64 0, i64 0), i64 19, i1 false) #17
  store i8 0, i8* %352, align 1
  %391 = load i32, i32* %378, align 8
  %392 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %391) #17
  %393 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %14, i8* %392) #17
  %394 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %14, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.289, i64 0, i64 0)) #17
  %395 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %396 = load i8, i8* %351, align 1
  %397 = icmp slt i8 %396, 0
  %398 = load i8*, i8** %349, align 8
  %399 = select i1 %397, i8* %398, i8* %348
  %400 = load i32, i32* %378, align 8
  %401 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %400) #17
  %402 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %402, %"struct.sh::TSourceLoc"* dereferenceable(16) %395, i8* %399, i8* %401) #17
  %403 = load i8, i8* %351, align 1
  %404 = icmp slt i8 %403, 0
  br i1 %404, label %405, label %407

405:                                              ; preds = %390
  %406 = load i8*, i8** %349, align 8
  call void @_ZdlPv(i8* %406) #18
  br label %407

407:                                              ; preds = %390, %405
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %348) #17
  br label %408

408:                                              ; preds = %370, %407
  %409 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 2
  %410 = load i32, i32* %409, align 8
  switch i32 %410, label %434 [
    i32 1, label %438
    i32 6, label %411
    i32 7, label %418
    i32 50, label %438
    i32 45, label %438
    i32 51, label %438
    i32 46, label %438
    i32 49, label %438
    i32 44, label %438
    i32 52, label %438
    i32 47, label %438
    i32 39, label %425
    i32 40, label %425
    i32 41, label %425
    i32 42, label %425
    i32 72, label %425
    i32 73, label %425
  ]

411:                                              ; preds = %408
  %412 = load i32, i32* %24, align 4
  %413 = icmp eq i32 %412, 7
  br i1 %413, label %414, label %438

414:                                              ; preds = %411
  %415 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %416 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 6)
  %417 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %417, %"struct.sh::TSourceLoc"* dereferenceable(16) %415, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.290, i64 0, i64 0), i8* %416) #17
  br label %438

418:                                              ; preds = %408
  %419 = load i32, i32* %24, align 4
  %420 = icmp eq i32 %419, 6
  br i1 %420, label %421, label %438

421:                                              ; preds = %418
  %422 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %423 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 7)
  %424 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %424, %"struct.sh::TSourceLoc"* dereferenceable(16) %422, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.291, i64 0, i64 0), i8* %423) #17
  br label %438

425:                                              ; preds = %408, %408, %408, %408, %408, %408
  %426 = load i32, i32* %24, align 4
  %427 = call zeroext i1 @_ZN2sh15IsShaderIoBlockENS_10TQualifierE(i32 %426)
  br i1 %427, label %438, label %428

428:                                              ; preds = %425
  %429 = load i32, i32* %24, align 4
  switch i32 %429, label %430 [
    i32 80, label %438
    i32 81, label %438
    i32 72, label %438
    i32 73, label %438
  ]

430:                                              ; preds = %428
  %431 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %432 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %410)
  %433 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %433, %"struct.sh::TSourceLoc"* dereferenceable(16) %431, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.282, i64 0, i64 0), i8* %432) #17
  br label %438

434:                                              ; preds = %408
  %435 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %436 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %410)
  %437 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %437, %"struct.sh::TSourceLoc"* dereferenceable(16) %435, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.282, i64 0, i64 0), i8* %436) #17
  br label %438

438:                                              ; preds = %428, %428, %428, %428, %425, %430, %408, %408, %408, %408, %408, %408, %408, %408, %418, %421, %411, %414, %434, %408
  %439 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 3
  %440 = load i8, i8* %439, align 4, !range !2
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %445, label %442

442:                                              ; preds = %438
  %443 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %444 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %444, %"struct.sh::TSourceLoc"* dereferenceable(16) %443, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.282, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  br label %445

445:                                              ; preds = %438, %442
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %353)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19)
  %446 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7
  %447 = bitcast %"struct.sh::TLayoutQualifier"* %446 to i64*
  %448 = load i64, i64* %447, align 4
  %449 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 2
  %450 = load i32, i32* %449, align 4
  %451 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 3
  %452 = load i32, i32* %451, align 4
  %453 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 4
  %454 = bitcast %"struct.sh::WorkGroupSize"* %453 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %353, i8* align 4 %454, i64 12, i1 false)
  %455 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 5
  %456 = load i32, i32* %455, align 4
  %457 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 6
  %458 = bitcast i32* %457 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %458, i64 48, i1 false)
  %459 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 20
  %460 = load i32, i32* %459, align 4
  %461 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 7, i32 21
  %462 = bitcast i32* %461 to i8*
  %463 = bitcast i32* %461 to i64*
  %464 = load i64, i64* %463, align 4
  %465 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 2
  %466 = icmp eq i32 %460, -1
  br i1 %466, label %469, label %467

467:                                              ; preds = %445
  %468 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %468, %"struct.sh::TSourceLoc"* dereferenceable(16) %465, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  br label %469

469:                                              ; preds = %445, %467
  %470 = icmp eq i32 %456, -1
  br i1 %470, label %473, label %471

471:                                              ; preds = %469
  %472 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %472, %"struct.sh::TSourceLoc"* dereferenceable(16) %465, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  br label %473

473:                                              ; preds = %469, %471
  switch i32 %452, label %477 [
    i32 0, label %481
    i32 4, label %476
    i32 1, label %478
    i32 2, label %474
    i32 3, label %475
  ]

474:                                              ; preds = %473
  br label %478

475:                                              ; preds = %473
  br label %478

476:                                              ; preds = %473
  br label %478

477:                                              ; preds = %473
  br label %478

478:                                              ; preds = %473, %474, %475, %476, %477
  %479 = phi i8* [ getelementptr inbounds ([22 x i8], [22 x i8]* @.str.452, i64 0, i64 0), %477 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0), %476 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.329, i64 0, i64 0), %475 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.328, i64 0, i64 0), %474 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.326, i64 0, i64 0), %473 ]
  %480 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %480, %"struct.sh::TSourceLoc"* dereferenceable(16) %465, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.292, i64 0, i64 0), i8* nonnull %479) #17
  br label %481

481:                                              ; preds = %473, %478
  %482 = icmp eq i32 %450, 0
  br i1 %482, label %483, label %485

483:                                              ; preds = %481
  %484 = load i32, i32* %279, align 8
  br label %502

485:                                              ; preds = %481
  %486 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 8
  %487 = load i8, i8* %486, align 8
  %488 = icmp ugt i8 %487, 1
  br i1 %488, label %489, label %493

489:                                              ; preds = %485
  %490 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 9
  %491 = load i8, i8* %490, align 1
  %492 = icmp ugt i8 %491, 1
  br i1 %492, label %502, label %493

493:                                              ; preds = %485, %489
  %494 = load i32, i32* %378, align 8
  %495 = icmp eq i32 %494, 90
  br i1 %495, label %502, label %496

496:                                              ; preds = %493
  %497 = icmp eq i32 %450, 1
  %498 = select i1 %497, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.330, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.450, i64 0, i64 0)
  %499 = icmp eq i32 %450, 2
  %500 = select i1 %499, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i64 0, i64 0), i8* %498
  %501 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %501, %"struct.sh::TSourceLoc"* dereferenceable(16) %465, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.293, i64 0, i64 0), i8* nonnull %500) #17
  br label %502

502:                                              ; preds = %493, %489, %496, %483
  %503 = phi i32 [ %484, %483 ], [ %450, %489 ], [ %450, %493 ], [ %450, %496 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  store i64 %464, i64* %10, align 8
  store i64 %448, i64* %447, align 4
  store i32 %503, i32* %449, align 4
  store i32 %452, i32* %451, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %454, i8* nonnull align 4 %353, i64 12, i1 false)
  store i32 %456, i32* %455, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %458, i8* nonnull align 4 %19, i64 48, i1 false)
  store i32 %460, i32* %459, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %462, i8* nonnull align 8 %18, i64 5, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %504 = load i32, i32* %29, align 8
  %505 = icmp slt i32 %504, 310
  br i1 %505, label %516, label %506

506:                                              ; preds = %502
  %507 = load i64, i64* %342, align 8
  %508 = load i64, i64* %344, align 8
  %509 = sub i64 %507, %508
  %510 = ashr exact i64 %509, 3
  %511 = add nsw i64 %510, -1
  %512 = icmp eq i64 %372, %511
  %513 = load i32, i32* %24, align 4
  %514 = icmp eq i32 %513, 7
  %515 = and i1 %514, %512
  br i1 %515, label %528, label %516

516:                                              ; preds = %506, %502
  %517 = load %"class.sh::TType"*, %"class.sh::TType"** %376, align 8
  %518 = call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %517) #17
  br i1 %518, label %519, label %525

519:                                              ; preds = %516
  %520 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  %521 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %375, i64 0, i32 1, i32 0
  %522 = load i8*, i8** %521, align 8
  %523 = icmp eq i8* %522, null
  %524 = select i1 %523, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %522
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %520, %"struct.sh::TSourceLoc"* dereferenceable(16) %465, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.294, i64 0, i64 0), i8* %524) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %354) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %354, i8 0, i64 16, i1 false) #17
  call void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %517, %"class.sh::TSpan"* nonnull dereferenceable(16) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %354) #17
  br label %525

525:                                              ; preds = %519, %516
  %526 = load i32, i32* %24, align 4
  %527 = icmp eq i32 %526, 7
  br i1 %527, label %528, label %556

528:                                              ; preds = %506, %525
  %529 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 5
  %530 = bitcast %"struct.sh::TMemoryQualifier"* %529 to i40*
  %531 = load i40, i40* %530, align 2
  %532 = trunc i40 %531 to i8
  %533 = lshr i40 %531, 8
  %534 = trunc i40 %533 to i8
  %535 = lshr i40 %531, 16
  %536 = trunc i40 %535 to i8
  %537 = lshr i40 %531, 24
  %538 = trunc i40 %537 to i8
  %539 = lshr i40 %531, 32
  %540 = trunc i40 %539 to i8
  %541 = load i8, i8* %355, align 4, !range !2
  %542 = or i8 %541, %532
  %543 = load i8, i8* %356, align 1, !range !2
  %544 = or i8 %543, %534
  %545 = load i8, i8* %357, align 2, !range !2
  %546 = or i8 %545, %536
  %547 = load i8, i8* %358, align 1, !range !2
  %548 = or i8 %547, %538
  %549 = load i8, i8* %359, align 4, !range !2
  %550 = or i8 %549, %540
  %551 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 5, i32 0
  store i8 %542, i8* %551, align 2
  %552 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 5, i32 1
  store i8 %544, i8* %552, align 1
  %553 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 5, i32 2
  store i8 %546, i8* %553, align 2
  %554 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 5, i32 3
  store i8 %548, i8* %554, align 1
  %555 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %377, i64 0, i32 5, i32 4
  store i8 %550, i8* %555, align 2
  br label %556

556:                                              ; preds = %528, %525
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %353)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19)
  %557 = add nuw i64 %372, 1
  %558 = load i64, i64* %342, align 8
  %559 = load i64, i64* %344, align 8
  %560 = sub i64 %558, %559
  %561 = ashr exact i64 %560, 3
  %562 = icmp ult i64 %557, %561
  br i1 %562, label %370, label %361

563:                                              ; preds = %361
  %564 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  %565 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %566 = load i8*, i8** %565, align 8
  %567 = icmp eq i8* %566, null
  %568 = select i1 %567, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %566
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %564, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.295, i64 0, i64 0), i8* %568) #17
  br label %569

569:                                              ; preds = %563, %361
  %570 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %571 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %570, i64 184) #17
  %572 = bitcast i8* %571 to %"class.sh::TType"*
  %573 = load i32, i32* %24, align 4
  call void @_ZN2sh5TTypeC1EPKNS_15TInterfaceBlockENS_10TQualifierENS_16TLayoutQualifierE(%"class.sh::TType"* %572, %"class.sh::TInterfaceBlock"* %364, i32 %573, %"struct.sh::TLayoutQualifier"* nonnull byval(%"struct.sh::TLayoutQualifier") align 8 %13) #17
  br i1 %119, label %574, label %585

574:                                              ; preds = %569
  %575 = bitcast %"class.sh::TSpan"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %575) #17
  %576 = bitcast %"class.sh::TVector.0"* %7 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = bitcast %"class.sh::TSpan"* %17 to i64*
  store i64 %577, i64* %578, align 8
  %579 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %17, i64 0, i32 1
  %580 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %7, i64 0, i32 0, i32 0, i32 1
  %581 = bitcast i32** %580 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = sub i64 %582, %577
  %584 = ashr exact i64 %583, 2
  store i64 %584, i64* %579, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %572, %"class.sh::TSpan"* nonnull dereferenceable(16) %17) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %575) #17
  br label %585

585:                                              ; preds = %574, %569
  %586 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %587 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %586, i64 40) #17
  %588 = bitcast i8* %587 to %"class.sh::TVariable"*
  %589 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %365, align 8
  %590 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %591 = load i64, i64* %590, align 8
  %592 = icmp eq i64 %591, 0
  %593 = select i1 %592, i8 3, i8 1
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %588, %"class.sh::TSymbolTable"* %589, %"class.sh::ImmutableString"* dereferenceable(16) %5, %"class.sh::TType"* %572, i8 zeroext %593, i8 zeroext 0) #17
  %594 = getelementptr inbounds i8, i8* %587, i64 20
  %595 = load i8, i8* %594, align 4
  %596 = icmp eq i8 %595, 3
  br i1 %596, label %597, label %637

597:                                              ; preds = %585
  %598 = load i64, i64* %342, align 8
  %599 = load i64, i64* %344, align 8
  %600 = icmp eq i64 %598, %599
  br i1 %600, label %648, label %601

601:                                              ; preds = %597, %630
  %602 = phi i64 [ %633, %630 ], [ %599, %597 ]
  %603 = phi i64 [ %631, %630 ], [ 0, %597 ]
  %604 = inttoptr i64 %602 to %"class.sh::TField"**
  %605 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %604, i64 %603
  %606 = load %"class.sh::TField"*, %"class.sh::TField"** %605, align 8
  %607 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %608 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %607, i64 184) #17
  %609 = bitcast i8* %608 to %"class.sh::TType"*
  %610 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %606, i64 0, i32 0
  %611 = load %"class.sh::TType"*, %"class.sh::TType"** %610, align 8
  call void @_ZN2sh5TTypeC1ERKS0_(%"class.sh::TType"* %609, %"class.sh::TType"* dereferenceable(184) %611) #17
  call void @_ZN2sh5TType22setInterfaceBlockFieldEPKNS_15TInterfaceBlockEm(%"class.sh::TType"* %609, %"class.sh::TInterfaceBlock"* %364, i64 %603) #17
  %612 = load i32, i32* %24, align 4
  %613 = getelementptr inbounds i8, i8* %608, i64 8
  %614 = bitcast i8* %613 to i32*
  store i32 %612, i32* %614, align 8
  %615 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %616 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %615, i64 40) #17
  %617 = bitcast i8* %616 to %"class.sh::TVariable"*
  %618 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %365, align 8
  %619 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %606, i64 0, i32 1
  call void @_ZN2sh9TVariableC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_5TTypeENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TVariable"* %617, %"class.sh::TSymbolTable"* %618, %"class.sh::ImmutableString"* dereferenceable(16) %619, %"class.sh::TType"* %609, i8 zeroext 1, i8 zeroext 0) #17
  %620 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %365, align 8
  %621 = bitcast i8* %616 to %"class.sh::TSymbol"*
  %622 = call zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"* %620, %"class.sh::TSymbol"* %621) #17
  br i1 %622, label %630, label %623

623:                                              ; preds = %601
  %624 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %606, i64 0, i32 2
  %625 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  %626 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %619, i64 0, i32 0
  %627 = load i8*, i8** %626, align 8
  %628 = icmp eq i8* %627, null
  %629 = select i1 %628, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %627
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %625, %"struct.sh::TSourceLoc"* dereferenceable(16) %624, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.296, i64 0, i64 0), i8* %629) #17
  br label %630

630:                                              ; preds = %623, %601
  %631 = add nuw i64 %603, 1
  %632 = load i64, i64* %342, align 8
  %633 = load i64, i64* %344, align 8
  %634 = sub i64 %632, %633
  %635 = ashr exact i64 %634, 3
  %636 = icmp ult i64 %631, %635
  br i1 %636, label %601, label %648

637:                                              ; preds = %585
  %638 = bitcast i8* %587 to %"class.sh::TSymbol"*
  %639 = call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %6, %"class.sh::ImmutableString"* dereferenceable(16) %5)
  %640 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %365, align 8
  %641 = call zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"* %640, %"class.sh::TSymbol"* %638) #17
  br i1 %641, label %648, label %642

642:                                              ; preds = %637
  %643 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  %644 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %645 = load i8*, i8** %644, align 8
  %646 = icmp eq i8* %645, null
  %647 = select i1 %646, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %645
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %643, %"struct.sh::TSourceLoc"* dereferenceable(16) %6, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.297, i64 0, i64 0), i8* %647) #17
  br label %648

648:                                              ; preds = %630, %597, %637, %642
  %649 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %650 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %649, i64 32) #17
  %651 = bitcast i8* %650 to %"class.sh::TIntermSymbol"*
  call void @_ZN2sh13TIntermSymbolC1EPKNS_9TVariableE(%"class.sh::TIntermSymbol"* %651, %"class.sh::TVariable"* %588) #17
  %652 = getelementptr inbounds i8, i8* %650, i64 8
  %653 = bitcast %"struct.sh::TSourceLoc"* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %652, i8* align 4 %653, i64 16, i1 false) #17
  %654 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %655 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %654, i64 56) #17
  %656 = bitcast i8* %655 to %"class.sh::TIntermDeclaration"*
  %657 = bitcast i8* %655 to i32 (...)***
  %658 = getelementptr inbounds i8, i8* %655, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %658, i8 0, i64 16, i1 false) #17
  %659 = getelementptr inbounds i8, i8* %655, i64 24
  %660 = bitcast i8* %659 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %657, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [6 x i8*] }, { [31 x i8*], [6 x i8*] }* @_ZTVN2sh18TIntermDeclarationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %660, align 8
  %661 = getelementptr inbounds i8, i8* %655, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %661, i8 0, i64 24, i1 false) #17
  %662 = bitcast i8* %650 to %"class.sh::TIntermTyped"*
  call void @_ZN2sh18TIntermDeclaration16appendDeclaratorEPNS_12TIntermTypedE(%"class.sh::TIntermDeclaration"* %656, %"class.sh::TIntermTyped"* %662) #17
  %663 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %658, i8* align 4 %663, i64 16, i1 false) #17
  %664 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 11
  %665 = load i32, i32* %664, align 4
  %666 = add nsw i32 %665, -1
  store i32 %666, i32* %664, align 4
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %253) #17
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %21) #17
  ret %"class.sh::TIntermDeclaration"* %656
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2sh15IsShaderIoBlockENS_10TQualifierE(i32) local_unnamed_addr #7 comdat {
  switch i32 %0, label %2 [
    i32 74, label %3
    i32 84, label %3
    i32 11, label %3
    i32 82, label %3
    i32 83, label %3
    i32 88, label %3
    i32 89, label %3
    i32 72, label %3
    i32 73, label %3
    i32 12, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

declare zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32) local_unnamed_addr #3

declare void @_ZN2sh15TInterfaceBlockC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEERKNS_16TLayoutQualifierENS_10SymbolTypeENS_10TExtensionE(%"class.sh::TInterfaceBlock"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.1"*, %"struct.sh::TLayoutQualifier"* dereferenceable(92), i8 zeroext, i8 zeroext) unnamed_addr #3

declare void @_ZN2sh5TTypeC1EPKNS_15TInterfaceBlockENS_10TQualifierENS_16TLayoutQualifierE(%"class.sh::TType"*, %"class.sh::TInterfaceBlock"*, i32, %"struct.sh::TLayoutQualifier"* byval(%"struct.sh::TLayoutQualifier") align 8) unnamed_addr #3

declare void @_ZN2sh5TType22setInterfaceBlockFieldEPKNS_15TInterfaceBlockEm(%"class.sh::TType"*, %"class.sh::TInterfaceBlock"*, i64) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext21exitStructDeclarationEv(%"class.sh::TParseContext"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext22enterStructDeclarationERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* nocapture, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readnone dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.298, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.299, i64 0, i64 0)) #17
  br label %11

11:                                               ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext30checkIsBelowStructNestingLimitERKNS_10TSourceLocERKNS_6TFieldE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TField"* nocapture readonly dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_stringstream", align 8
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %"class.std::__1::basic_string.38", align 8
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %93 [
    i32 5, label %9
    i32 3, label %9
    i32 1, label %9
  ]

9:                                                ; preds = %3, %3, %3
  %10 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %2, i64 0, i32 0
  %11 = load %"class.sh::TType"*, %"class.sh::TType"** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 90
  br i1 %14, label %15, label %93

15:                                               ; preds = %9
  %16 = tail call i32 @_ZNK2sh5TType23getDeepestStructNestingEv(%"class.sh::TType"* %11) #17
  %17 = icmp sgt i32 %16, 3
  br i1 %17, label %18, label %93

18:                                               ; preds = %15
  %19 = bitcast %"class.std::__1::basic_stringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %19) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %4)
  %20 = load %"class.sh::TType"*, %"class.sh::TType"** %10, align 8
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %20, i64 0, i32 13
  %22 = bitcast %"class.sh::TStructure"** %21 to %"class.sh::TSymbol"**
  %23 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %22, align 8
  %24 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %23, i64 0, i32 2
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, 3
  %27 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::basic_ostream.base"* %27 to %"class.std::__1::basic_ostream"*
  br i1 %26, label %29, label %31

29:                                               ; preds = %18
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.300, i64 0, i64 0), i64 14) #17
  br label %44

31:                                               ; preds = %18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.301, i64 0, i64 0), i64 25) #17
  %33 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #17
  %34 = load %"class.sh::TType"*, %"class.sh::TType"** %10, align 8
  %35 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %34, i64 0, i32 13
  %36 = bitcast %"class.sh::TStructure"** %35 to %"class.sh::TSymbol"**
  %37 = load %"class.sh::TSymbol"*, %"class.sh::TSymbol"** %36, align 8
  %38 = call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %37) #17
  %39 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %40 = extractvalue { i8*, i64 } %38, 0
  store i8* %40, i8** %39, align 8
  %41 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %42 = extractvalue { i8*, i64 } %38, 1
  store i64 %42, i64* %41, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERKN2sh15ImmutableStringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #17
  br label %44

44:                                               ; preds = %31, %29
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.302, i64 0, i64 0), i64 42) #17
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %45, i32 4) #17
  %47 = bitcast %"class.std::__1::basic_string.38"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #17
  %48 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string.38"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %49) #17
  %51 = bitcast %"class.std::__1::basic_string.38"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %48, align 8
  %56 = select i1 %54, i8* %55, i8* %47
  %57 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %58 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %2, i64 0, i32 1, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, null
  %62 = select i1 %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %60
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %58, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* %56, i8* %62) #17
  %63 = load i8, i8* %52, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %44
  %66 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %66) #18
  br label %67

67:                                               ; preds = %44, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #17
  %68 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %69 = bitcast %"class.std::__1::basic_stringstream"* %4 to i64*
  store i64 %68, i64* %69, align 8
  %70 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %71 = inttoptr i64 %68 to i8*
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds i8, i8* %19, i64 %74
  %76 = bitcast i8* %75 to i64*
  store i64 %70, i64* %76, align 8
  %77 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %78 = bitcast %"class.std::__1::basic_ostream.base"* %27 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %49, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1, i32 1
  %81 = bitcast %"class.std::__1::basic_string.38"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %67
  %86 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #18
  br label %88

88:                                               ; preds = %67, %85
  %89 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %49, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %89) #17
  %90 = bitcast %"class.std::__1::basic_stringstream"* %4 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %90, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %91 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 2
  %92 = bitcast %"class.std::__1::basic_ios.base"* %91 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %92) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %19) #17
  br label %93

93:                                               ; preds = %3, %9, %88, %15
  ret void
}

declare i32 @_ZNK2sh5TType23getDeepestStructNestingEv(%"class.sh::TType"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addIndexExpressionEPNS_12TIntermTypedERKNS_10TSourceLocES2_(%"class.sh::TParseContext"* readonly, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.sh::TType", align 8
  %6 = alloca %"class.sh::TType", align 8
  %7 = alloca %"class.sh::TType", align 8
  %8 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %9 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %9, i64 31
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, align 8
  %12 = tail call dereferenceable(184) %"class.sh::TType"* %11(%"class.sh::TIntermTyped"* %1) #17
  %13 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %12, i64 0, i32 10, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %65

16:                                               ; preds = %4
  %17 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %18 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %17, i64 31
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, align 8
  %20 = tail call dereferenceable(184) %"class.sh::TType"* %19(%"class.sh::TIntermTyped"* %1) #17
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %20, i64 0, i32 8
  %22 = load i8, i8* %21, align 8
  %23 = icmp ugt i8 %22, 1
  %24 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %20, i64 0, i32 9
  %25 = load i8, i8* %24, align 1
  %26 = icmp ugt i8 %25, 1
  %27 = and i1 %23, %26
  br i1 %27, label %65, label %28

28:                                               ; preds = %16
  %29 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %30 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %29, i64 31
  %31 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %30, align 8
  %32 = tail call dereferenceable(184) %"class.sh::TType"* %31(%"class.sh::TIntermTyped"* %1) #17
  %33 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %32, i64 0, i32 8
  %34 = load i8, i8* %33, align 8
  %35 = icmp ugt i8 %34, 1
  %36 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %32, i64 0, i32 9
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 1
  %39 = and i1 %35, %38
  br i1 %39, label %65, label %40

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0
  %42 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %43 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %43, i64 19
  %45 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %44, align 8
  %46 = tail call %"class.sh::TIntermSymbol"* %45(%"class.sh::TIntermNode"* %41) #17
  %47 = icmp eq %"class.sh::TIntermSymbol"* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %40
  %49 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %42, align 8
  %50 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %49, i64 19
  %51 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %50, align 8
  %52 = tail call %"class.sh::TIntermSymbol"* %51(%"class.sh::TIntermNode"* %41) #17
  %53 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* %52) #17
  %54 = extractvalue { i8*, i64 } %53, 0
  %55 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %56 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %55, align 8
  %57 = icmp eq i8* %54, null
  %58 = select i1 %57, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %54
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %56, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.303, i64 0, i64 0), i8* %58) #17
  br label %62

59:                                               ; preds = %40
  %60 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %61 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %60, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %61, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.303, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.304, i64 0, i64 0)) #17
  br label %62

62:                                               ; preds = %59, %48
  %63 = bitcast %"class.sh::TType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %63) #17
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %5, i32 1, i32 3, i32 2, i8 zeroext 1, i8 zeroext 1) #17
  %64 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %63) #17
  br label %445

65:                                               ; preds = %4, %28, %16
  %66 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %67 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %66, i64 31
  %68 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %67, align 8
  %69 = tail call dereferenceable(184) %"class.sh::TType"* %68(%"class.sh::TIntermTyped"* %1) #17
  %70 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %69, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 74
  br i1 %72, label %73, label %86

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 48
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %86

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 36313
  br i1 %80, label %81, label %86

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %83 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %82, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %83, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.305, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  %84 = bitcast %"class.sh::TType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %84) #17
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %6, i32 1, i32 3, i32 2, i8 zeroext 1, i8 zeroext 1) #17
  %85 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %84) #17
  br label %445

86:                                               ; preds = %73, %77, %65
  %87 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %3, i64 0, i32 0
  %88 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %89 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %89, i64 5
  %91 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %90, align 8
  %92 = tail call %"class.sh::TIntermConstantUnion"* %91(%"class.sh::TIntermNode"* %87) #17
  %93 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %94 = load i32, i32* %93, align 8
  %95 = icmp sgt i32 %94, 319
  br i1 %95, label %100, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %98 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %97, align 8
  %99 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %98, i8 zeroext 14) #17
  br label %100

100:                                              ; preds = %96, %86
  %101 = phi i1 [ true, %86 ], [ %99, %96 ]
  %102 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %103 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %102, align 8
  %104 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %103, i64 31
  %105 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %104, align 8
  %106 = tail call dereferenceable(184) %"class.sh::TType"* %105(%"class.sh::TIntermTyped"* %3) #17
  %107 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %106, i64 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = icmp ne i32 %108, 2
  %110 = icmp eq %"class.sh::TIntermConstantUnion"* %92, null
  %111 = or i1 %110, %109
  br i1 %111, label %112, label %205

112:                                              ; preds = %100
  %113 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %114 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %113, i64 31
  %115 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %114, align 8
  %116 = tail call dereferenceable(184) %"class.sh::TType"* %115(%"class.sh::TIntermTyped"* %1) #17
  %117 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %116, i64 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 91
  %120 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %121 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %120, i64 31
  %122 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %121, align 8
  %123 = tail call dereferenceable(184) %"class.sh::TType"* %122(%"class.sh::TIntermTyped"* %1) #17
  %124 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %123, i64 0, i32 2
  %125 = load i32, i32* %124, align 8
  br i1 %119, label %126, label %155

126:                                              ; preds = %112
  switch i32 %125, label %134 [
    i32 74, label %205
    i32 6, label %127
    i32 7, label %131
  ]

127:                                              ; preds = %126
  br i1 %101, label %205, label %128

128:                                              ; preds = %127
  %129 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %130 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %129, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %130, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.306, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %205

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %133 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %132, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %133, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.307, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %205

134:                                              ; preds = %126
  %135 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %136 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %135, i64 31
  %137 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %136, align 8
  %138 = tail call dereferenceable(184) %"class.sh::TType"* %137(%"class.sh::TIntermTyped"* %1) #17
  %139 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %138, i64 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = tail call zeroext i1 @_ZN2sh15IsShaderIoBlockENS_10TQualifierE(i32 %140)
  br i1 %141, label %205, label %142

142:                                              ; preds = %134
  %143 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %144 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %143, i64 31
  %145 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %144, align 8
  %146 = tail call dereferenceable(184) %"class.sh::TType"* %145(%"class.sh::TIntermTyped"* %1) #17
  %147 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %146, i64 0, i32 2
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 80
  br i1 %149, label %205, label %150

150:                                              ; preds = %142
  %151 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %152 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %151, i64 31
  %153 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %152, align 8
  %154 = tail call dereferenceable(184) %"class.sh::TType"* %153(%"class.sh::TIntermTyped"* %1) #17
  br label %205

155:                                              ; preds = %112
  %156 = icmp eq i32 %125, 10
  br i1 %156, label %157, label %160

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %159 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %158, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %159, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.308, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %205

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 3
  br i1 %163, label %164, label %175

164:                                              ; preds = %160
  %165 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %166 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %165, i64 31
  %167 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %166, align 8
  %168 = tail call dereferenceable(184) %"class.sh::TType"* %167(%"class.sh::TIntermTyped"* %1) #17
  %169 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %168, i64 0, i32 2
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 28
  br i1 %171, label %172, label %175

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %174 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %173, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %174, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.309, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %205

175:                                              ; preds = %164, %160
  %176 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %177 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %176, i64 31
  %178 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %177, align 8
  %179 = tail call dereferenceable(184) %"class.sh::TType"* %178(%"class.sh::TIntermTyped"* %1) #17
  %180 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %179, i64 0, i32 10, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %205, label %183

183:                                              ; preds = %175
  %184 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %185 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %184, i64 31
  %186 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %185, align 8
  %187 = tail call dereferenceable(184) %"class.sh::TType"* %186(%"class.sh::TIntermTyped"* %1) #17
  %188 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %187, i64 0, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = add i32 %189, -8
  %191 = icmp ugt i32 %190, 42
  %192 = or i1 %101, %191
  br i1 %192, label %199, label %193

193:                                              ; preds = %183
  %194 = load i32, i32* %93, align 8
  %195 = icmp sgt i32 %194, 100
  br i1 %195, label %196, label %205

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %198 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %197, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %198, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.310, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %205

199:                                              ; preds = %183
  %200 = add i32 %189, -51
  %201 = icmp ult i32 %200, 33
  br i1 %201, label %202, label %205

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %204 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %203, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %204, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.311, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %205

205:                                              ; preds = %193, %175, %196, %202, %199, %142, %150, %134, %127, %128, %131, %126, %172, %157, %100
  br i1 %110, label %206, label %207

206:                                              ; preds = %252, %205
  br label %398

207:                                              ; preds = %205
  %208 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %102, align 8
  %209 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %208, i64 31
  %210 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %209, align 8
  %211 = tail call dereferenceable(184) %"class.sh::TType"* %210(%"class.sh::TIntermTyped"* %3) #17
  %212 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %211, i64 0, i32 2
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %213, 2
  %215 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %92, i64 0, i32 0, i32 0
  %216 = bitcast %"class.sh::TIntermConstantUnion"* %92 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %217 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %216, align 8
  %218 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %217, i64 31
  %219 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %218, align 8
  %220 = tail call dereferenceable(184) %"class.sh::TType"* %219(%"class.sh::TIntermTyped"* %215) #17
  %221 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %220, i64 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 3
  br i1 %223, label %224, label %230

224:                                              ; preds = %207
  %225 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %92, i64 0, i32 1
  %226 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %225, align 8
  %227 = icmp eq %"class.sh::TConstantUnion"* %226, null
  br i1 %227, label %252, label %228

228:                                              ; preds = %224
  %229 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* nonnull %226) #17
  br label %244

230:                                              ; preds = %207
  %231 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %216, align 8
  %232 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %231, i64 31
  %233 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %232, align 8
  %234 = tail call dereferenceable(184) %"class.sh::TType"* %233(%"class.sh::TIntermTyped"* %215) #17
  %235 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %234, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp eq i32 %236, 4
  br i1 %237, label %238, label %252

238:                                              ; preds = %230
  %239 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %92, i64 0, i32 1
  %240 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %239, align 8
  %241 = icmp eq %"class.sh::TConstantUnion"* %240, null
  br i1 %241, label %252, label %242

242:                                              ; preds = %238
  %243 = tail call i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"* nonnull %240) #17
  br label %244

244:                                              ; preds = %242, %228
  %245 = phi i32 [ %229, %228 ], [ %243, %242 ]
  %246 = icmp slt i32 %245, 0
  br i1 %246, label %247, label %252

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %249 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %248, align 8
  br i1 %214, label %250, label %251

250:                                              ; preds = %247
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %249, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %252

251:                                              ; preds = %247
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %249, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.312, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %252

252:                                              ; preds = %238, %224, %230, %251, %250, %244
  %253 = phi i32 [ %245, %244 ], [ %245, %250 ], [ %245, %251 ], [ 0, %230 ], [ 0, %224 ], [ 0, %238 ]
  %254 = phi i32 [ -1, %244 ], [ 0, %250 ], [ 0, %251 ], [ -1, %230 ], [ -1, %224 ], [ -1, %238 ]
  %255 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %256 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %255, i64 31
  %257 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %256, align 8
  %258 = tail call dereferenceable(184) %"class.sh::TType"* %257(%"class.sh::TIntermTyped"* %1) #17
  %259 = tail call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %258) #17
  br i1 %259, label %206, label %260

260:                                              ; preds = %252
  %261 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %262 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %261, i64 31
  %263 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %262, align 8
  %264 = tail call dereferenceable(184) %"class.sh::TType"* %263(%"class.sh::TIntermTyped"* %1) #17
  %265 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %264, i64 0, i32 10, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %287, label %268

268:                                              ; preds = %260
  %269 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %270 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %269, i64 31
  %271 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %270, align 8
  %272 = tail call dereferenceable(184) %"class.sh::TType"* %271(%"class.sh::TIntermTyped"* %1) #17
  %273 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %272, i64 0, i32 2
  %274 = load i32, i32* %273, align 8
  %275 = icmp eq i32 %274, 28
  %276 = icmp sgt i32 %253, 0
  %277 = and i1 %276, %275
  br i1 %277, label %278, label %287

278:                                              ; preds = %268
  %279 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %280 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %279, align 8
  %281 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %280, i8 zeroext 9) #17
  br i1 %281, label %287, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %284 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %283, align 8
  br i1 %214, label %285, label %286

285:                                              ; preds = %282
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %284, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %329

286:                                              ; preds = %282
  tail call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %284, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.313, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %329

287:                                              ; preds = %260, %268, %278
  %288 = icmp slt i32 %254, 0
  br i1 %288, label %289, label %329

289:                                              ; preds = %287
  %290 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %291 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %290, i64 31
  %292 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %291, align 8
  %293 = tail call dereferenceable(184) %"class.sh::TType"* %292(%"class.sh::TIntermTyped"* %1) #17
  %294 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %293, i64 0, i32 10, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = icmp eq i64 %295, 0
  %297 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %298 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %297, i64 31
  %299 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %298, align 8
  %300 = tail call dereferenceable(184) %"class.sh::TType"* %299(%"class.sh::TIntermTyped"* %1) #17
  br i1 %296, label %310, label %301

301:                                              ; preds = %289
  %302 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %300, i64 0, i32 10, i32 0
  %303 = load i32*, i32** %302, align 8
  %304 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %300, i64 0, i32 10, i32 1
  %305 = load i64, i64* %304, align 8
  %306 = add i64 %305, -1
  %307 = getelementptr inbounds i32, i32* %303, i64 %306
  %308 = load i32, i32* %307, align 4
  %309 = tail call i32 @_ZN2sh13TParseContext18checkIndexLessThanEbRKNS_10TSourceLocEiiPKc(%"class.sh::TParseContext"* %0, i1 zeroext %214, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i32 %253, i32 %308, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.314, i64 0, i64 0))
  br label %329

310:                                              ; preds = %289
  %311 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %300, i64 0, i32 8
  %312 = load i8, i8* %311, align 8
  %313 = icmp ugt i8 %312, 1
  %314 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %300, i64 0, i32 9
  %315 = load i8, i8* %314, align 1
  %316 = icmp ugt i8 %315, 1
  %317 = and i1 %313, %316
  %318 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %8, align 8
  %319 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %318, i64 31
  %320 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %319, align 8
  %321 = tail call dereferenceable(184) %"class.sh::TType"* %320(%"class.sh::TIntermTyped"* %1) #17
  %322 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %321, i64 0, i32 8
  %323 = load i8, i8* %322, align 8
  %324 = zext i8 %323 to i32
  br i1 %317, label %325, label %327

325:                                              ; preds = %310
  %326 = tail call i32 @_ZN2sh13TParseContext18checkIndexLessThanEbRKNS_10TSourceLocEiiPKc(%"class.sh::TParseContext"* %0, i1 zeroext %214, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i32 %253, i32 %324, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.315, i64 0, i64 0))
  br label %329

327:                                              ; preds = %310
  %328 = tail call i32 @_ZN2sh13TParseContext18checkIndexLessThanEbRKNS_10TSourceLocEiiPKc(%"class.sh::TParseContext"* %0, i1 zeroext %214, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i32 %253, i32 %324, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0))
  br label %329

329:                                              ; preds = %286, %285, %301, %327, %325, %287
  %330 = phi i32 [ %309, %301 ], [ %326, %325 ], [ %328, %327 ], [ 0, %287 ], [ 0, %285 ], [ 0, %286 ]
  %331 = icmp eq i32 %330, %253
  br i1 %331, label %332, label %340

332:                                              ; preds = %329
  %333 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %216, align 8
  %334 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %333, i64 31
  %335 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %334, align 8
  %336 = tail call dereferenceable(184) %"class.sh::TType"* %335(%"class.sh::TIntermTyped"* %215) #17
  %337 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %336, i64 0, i32 0
  %338 = load i32, i32* %337, align 8
  %339 = icmp eq i32 %338, 3
  br i1 %339, label %367, label %340

340:                                              ; preds = %332, %329
  %341 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %342 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %341, i64 8) #17
  %343 = bitcast i8* %342 to %"class.sh::TConstantUnion"*
  tail call void @_ZN2sh14TConstantUnionC1Ev(%"class.sh::TConstantUnion"* %343) #17
  %344 = bitcast i8* %342 to i32*
  store i32 %330, i32* %344, align 4
  %345 = getelementptr inbounds i8, i8* %342, i64 4
  %346 = bitcast i8* %345 to i32*
  store i32 3, i32* %346, align 4
  %347 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %348 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %347, i64 216) #17
  %349 = bitcast %"class.sh::TType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %349) #17
  %350 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %102, align 8
  %351 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %350, i64 31
  %352 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %351, align 8
  %353 = tail call dereferenceable(184) %"class.sh::TType"* %352(%"class.sh::TIntermTyped"* %3) #17
  %354 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %353, i64 0, i32 1
  %355 = load i32, i32* %354, align 4
  %356 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %102, align 8
  %357 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %356, i64 31
  %358 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %357, align 8
  %359 = tail call dereferenceable(184) %"class.sh::TType"* %358(%"class.sh::TIntermTyped"* %3) #17
  %360 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %359, i64 0, i32 2
  %361 = load i32, i32* %360, align 8
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %7, i32 3, i32 %355, i32 %361, i8 zeroext 1, i8 zeroext 1) #17
  %362 = bitcast i8* %348 to %"class.sh::TIntermExpression"*
  call void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"* %362, %"class.sh::TType"* nonnull dereferenceable(184) %7) #17
  %363 = bitcast i8* %348 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN2sh20TIntermConstantUnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %363, align 8
  %364 = getelementptr inbounds i8, i8* %348, i64 208
  %365 = bitcast i8* %364 to i8**
  store i8* %342, i8** %365, align 8
  %366 = bitcast i8* %348 to %"class.sh::TIntermTyped"*
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %349) #17
  br label %367

367:                                              ; preds = %340, %332
  %368 = phi %"class.sh::TIntermTyped"* [ %366, %340 ], [ %3, %332 ]
  %369 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %370 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %369, i64 240) #17
  %371 = bitcast i8* %370 to %"class.sh::TIntermBinary"*
  call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %371, i8 zeroext 44, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %368) #17
  %372 = getelementptr inbounds i8, i8* %370, i64 8
  %373 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* align 4 %373, i64 16, i1 false) #17
  %374 = bitcast i8* %370 to %"class.sh::TIntermTyped"*
  %375 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %376 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %375, align 8
  %377 = bitcast i8* %370 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)***
  %378 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*** %377, align 8
  %379 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %378, i64 27
  %380 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %379, align 8
  %381 = call %"class.sh::TIntermTyped"* %380(%"class.sh::TIntermTyped"* %374, %"class.sh::TDiagnostics"* %376) #17
  %382 = bitcast %"class.sh::TIntermTyped"* %381 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %383 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %382, align 8
  %384 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %383, i64 31
  %385 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %384, align 8
  %386 = call dereferenceable(184) %"class.sh::TType"* %385(%"class.sh::TIntermTyped"* %381) #17
  %387 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %386, i64 0, i32 2
  %388 = load i32, i32* %387, align 8
  %389 = bitcast i8* %370 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %390 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %389, align 8
  %391 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %390, i64 31
  %392 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %391, align 8
  %393 = call dereferenceable(184) %"class.sh::TType"* %392(%"class.sh::TIntermTyped"* %374) #17
  %394 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %393, i64 0, i32 2
  %395 = load i32, i32* %394, align 8
  %396 = icmp eq i32 %388, %395
  %397 = select i1 %396, %"class.sh::TIntermTyped"* %381, %"class.sh::TIntermTyped"* %374
  br label %445

398:                                              ; preds = %206, %409
  %399 = phi %"class.sh::TIntermTyped"* [ %411, %409 ], [ %3, %206 ]
  %400 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %399, i64 0, i32 0
  %401 = bitcast %"class.sh::TIntermTyped"* %399 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %402 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %401, align 8
  %403 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %402, i64 12
  %404 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %403, align 8
  %405 = tail call %"class.sh::TIntermSwizzle"* %404(%"class.sh::TIntermNode"* %400) #17
  %406 = icmp eq %"class.sh::TIntermSwizzle"* %405, null
  br i1 %406, label %412, label %407

407:                                              ; preds = %398
  %408 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %405, i64 0, i32 1
  br label %409

409:                                              ; preds = %424, %407
  %410 = phi %"class.sh::TIntermTyped"** [ %408, %407 ], [ %425, %424 ]
  %411 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %410, align 8
  br label %398

412:                                              ; preds = %398
  %413 = bitcast %"class.sh::TIntermTyped"* %399 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %414 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %413, align 8
  %415 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %414, i64 13
  %416 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %415, align 8
  %417 = tail call %"class.sh::TIntermBinary"* %416(%"class.sh::TIntermNode"* %400) #17
  %418 = icmp eq %"class.sh::TIntermBinary"* %417, null
  br i1 %418, label %426, label %419

419:                                              ; preds = %412
  %420 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %417, i64 0, i32 0, i32 1
  %421 = load i8, i8* %420, align 8
  %422 = and i8 %421, -4
  %423 = icmp eq i8 %422, 44
  br i1 %423, label %424, label %438

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %417, i64 0, i32 2
  br label %409

426:                                              ; preds = %412
  %427 = bitcast %"class.sh::TIntermTyped"* %399 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %428 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %427, align 8
  %429 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %428, i64 19
  %430 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %429, align 8
  %431 = tail call %"class.sh::TIntermSymbol"* %430(%"class.sh::TIntermNode"* %400) #17
  %432 = icmp eq %"class.sh::TIntermSymbol"* %431, null
  br i1 %432, label %438, label %433

433:                                              ; preds = %426
  %434 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %435 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %434, align 8
  %436 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %431, i64 0, i32 1
  %437 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %436, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %435, %"class.sh::TVariable"* dereferenceable(40) %437) #17
  br label %438

438:                                              ; preds = %419, %426, %433
  %439 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %440 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %439, i64 240) #17
  %441 = bitcast i8* %440 to %"class.sh::TIntermBinary"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %441, i8 zeroext 45, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %3) #17
  %442 = getelementptr inbounds i8, i8* %440, i64 8
  %443 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %442, i8* align 4 %443, i64 16, i1 false) #17
  %444 = bitcast i8* %440 to %"class.sh::TIntermTyped"*
  br label %445

445:                                              ; preds = %367, %438, %81, %62
  %446 = phi %"class.sh::TIntermTyped"* [ %85, %81 ], [ %64, %62 ], [ %444, %438 ], [ %397, %367 ]
  ret %"class.sh::TIntermTyped"* %446
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2sh13TParseContext18checkIndexLessThanEbRKNS_10TSourceLocEiiPKc(%"class.sh::TParseContext"* nocapture readonly, i1 zeroext, %"struct.sh::TSourceLoc"* dereferenceable(16), i32, i32, i8*) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.std::__1::basic_string.38", align 8
  %9 = icmp slt i32 %3, %4
  br i1 %9, label %61, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %7)
  %12 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_ostream.base"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call i64 @strlen(i8* %5) #17
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* %5, i64 %14) #17
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.316, i64 0, i64 0), i64 2) #17
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %16, i32 %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #17
  %19 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %21) #17
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %24 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %23, align 8
  br i1 %1, label %25, label %26

25:                                               ; preds = %10
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %27

26:                                               ; preds = %10
  call void @_ZN2sh12TDiagnostics7warningERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %24, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.251, i64 0, i64 0)) #17
  br label %27

27:                                               ; preds = %25, %26
  %28 = add nsw i32 %4, -1
  %29 = bitcast %"class.std::__1::basic_string.38"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %27, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %36 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %37 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %11, i64 %42
  %44 = bitcast i8* %43 to i64*
  store i64 %38, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %46 = bitcast %"class.std::__1::basic_ostream.base"* %12 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %49 = bitcast %"class.std::__1::basic_string.38"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %35
  %54 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #18
  br label %56

56:                                               ; preds = %35, %53
  %57 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %21, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %57) #17
  %58 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %58, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %59 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %60 = bitcast %"class.std::__1::basic_ios.base"* %59 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %60) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %11) #17
  br label %61

61:                                               ; preds = %6, %56
  %62 = phi i32 [ %28, %56 ], [ %3, %6 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext24expressionOrFoldedResultEPNS_12TIntermTypedE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %4 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %3, align 8
  %5 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)***
  %6 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %6, i64 27
  %8 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %7, align 8
  %9 = tail call %"class.sh::TIntermTyped"* %8(%"class.sh::TIntermTyped"* %1, %"class.sh::TDiagnostics"* %4) #17
  %10 = bitcast %"class.sh::TIntermTyped"* %9 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %9) #17
  %15 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, i64 31
  %20 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.sh::TType"* %20(%"class.sh::TIntermTyped"* %1) #17
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %16, %23
  %25 = select i1 %24, %"class.sh::TIntermTyped"* %9, %"class.sh::TIntermTyped"* %1
  ret %"class.sh::TIntermTyped"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext27addFieldSelectionExpressionEPNS_12TIntermTypedERKNS_10TSourceLocERKNS_15ImmutableStringES5_(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TVector.82", align 8
  %7 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %8 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %8, i64 31
  %10 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %9, align 8
  %11 = tail call dereferenceable(184) %"class.sh::TType"* %10(%"class.sh::TIntermTyped"* %1) #17
  %12 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 10, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %17 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %16, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %17, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.318, i64 0, i64 0)) #17
  br label %255

18:                                               ; preds = %5
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %20 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, i64 31
  %21 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %20, align 8
  %22 = tail call dereferenceable(184) %"class.sh::TType"* %21(%"class.sh::TIntermTyped"* %1) #17
  %23 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 8
  %24 = load i8, i8* %23, align 8
  %25 = icmp ugt i8 %24, 1
  %26 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %22, i64 0, i32 9
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 1
  %29 = and i1 %25, %28
  br i1 %29, label %30, label %80

30:                                               ; preds = %18
  %31 = bitcast %"class.sh::TVector.82"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.sh::TVector.82", %"class.sh::TVector.82"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.sh::TVector.82", %"class.sh::TVector.82"* %6, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #17
  %34 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %35 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %34, i64 31
  %36 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %35, align 8
  %37 = tail call dereferenceable(184) %"class.sh::TType"* %36(%"class.sh::TIntermTyped"* %1) #17
  %38 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %37, i64 0, i32 8
  %39 = load i8, i8* %38, align 8
  %40 = zext i8 %39 to i32
  %41 = call zeroext i1 @_ZN2sh13TParseContext17parseVectorFieldsERKNS_10TSourceLocERKNS_15ImmutableStringEiPNS_7TVectorIiEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"class.sh::ImmutableString"* dereferenceable(16) %3, i32 %40, %"class.sh::TVector.82"* nonnull %6)
  br i1 %41, label %61, label %42

42:                                               ; preds = %30
  %43 = bitcast i32** %33 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.sh::TVector.82"* %6 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = ashr exact i64 %47, 2
  %49 = icmp eq i64 %47, 0
  %50 = inttoptr i64 %46 to i32*
  br i1 %49, label %51, label %55

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.sh::TVector.82", %"class.sh::TVector.82"* %6, i64 0, i32 0
  %53 = sub nuw nsw i64 1, %48
  call void @_ZNSt3__16vectorIi14pool_allocatorIiEE8__appendEm(%"class.std::__1::vector.83"* nonnull %52, i64 %53) #17
  %54 = load i32*, i32** %32, align 8
  br label %59

55:                                               ; preds = %42
  %56 = icmp ugt i64 %48, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds i32, i32* %50, i64 1
  store i32* %58, i32** %33, align 8
  br label %59

59:                                               ; preds = %51, %55, %57
  %60 = phi i32* [ %54, %51 ], [ %50, %55 ], [ %50, %57 ]
  store i32 0, i32* %60, align 4
  br label %61

61:                                               ; preds = %59, %30
  %62 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %63 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %62, i64 248) #17
  %64 = bitcast i8* %63 to %"class.sh::TIntermSwizzle"*
  call void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"* %64, %"class.sh::TIntermTyped"* %1, %"class.sh::TVector.82"* nonnull dereferenceable(24) %6) #17
  %65 = getelementptr inbounds i8, i8* %63, i64 8
  %66 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 4 %66, i64 16, i1 false) #17
  %67 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %68 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %67, align 8
  %69 = bitcast i8* %63 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)***
  %70 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)** %70, i64 27
  %72 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermSwizzle"*, %"class.sh::TDiagnostics"*)** %71, align 8
  %73 = call %"class.sh::TIntermTyped"* %72(%"class.sh::TIntermSwizzle"* %64, %"class.sh::TDiagnostics"* %68) #17
  %74 = load i32*, i32** %32, align 8
  %75 = icmp eq i32* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %61
  %77 = ptrtoint i32* %74 to i64
  %78 = bitcast i32** %33 to i64*
  store i64 %77, i64* %78, align 8
  br label %79

79:                                               ; preds = %61, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br label %255

80:                                               ; preds = %18
  %81 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %82 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %81, i64 31
  %83 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %82, align 8
  %84 = tail call dereferenceable(184) %"class.sh::TType"* %83(%"class.sh::TIntermTyped"* %1) #17
  %85 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 90
  %88 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %89 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %88, i64 31
  %90 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %89, align 8
  %91 = tail call dereferenceable(184) %"class.sh::TType"* %90(%"class.sh::TIntermTyped"* %1) #17
  br i1 %87, label %92, label %175

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %91, i64 0, i32 13
  %94 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TStructure", %"class.sh::TStructure"* %94, i64 0, i32 2, i32 0
  %96 = load %"class.sh::TVector.1"*, %"class.sh::TVector.1"** %95, align 8
  %97 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.sh::TField"**, %"class.sh::TField"*** %97, align 8
  %99 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %96, i64 0, i32 0, i32 0, i32 1
  %100 = load %"class.sh::TField"**, %"class.sh::TField"*** %99, align 8
  %101 = icmp eq %"class.sh::TField"** %98, %100
  br i1 %101, label %113, label %102

102:                                              ; preds = %92
  %103 = ptrtoint %"class.sh::TField"** %98 to i64
  %104 = ptrtoint %"class.sh::TField"** %100 to i64
  %105 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = icmp eq i8* %108, null
  %110 = select i1 %109, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %108
  %111 = sub i64 %104, %103
  %112 = ashr exact i64 %111, 3
  br label %116

113:                                              ; preds = %92
  %114 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %115 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %114, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %115, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.319, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.320, i64 0, i64 0)) #17
  br label %255

116:                                              ; preds = %102, %131
  %117 = phi i64 [ 0, %102 ], [ %133, %131 ]
  %118 = phi i32 [ 0, %102 ], [ %132, %131 ]
  %119 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %98, i64 %117
  %120 = load %"class.sh::TField"*, %"class.sh::TField"** %119, align 8
  %121 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %120, i64 0, i32 1, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %122, %106
  br i1 %123, label %124, label %131

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %120, i64 0, i32 1, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %126, null
  %128 = select i1 %127, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %126
  %129 = tail call i32 @bcmp(i8* %128, i8* %110, i64 %106) #17
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %116, %124
  %132 = add i32 %118, 1
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %112, %133
  br i1 %134, label %116, label %170

135:                                              ; preds = %124
  %136 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %118) #17
  %137 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %136, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %136, i64 0, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %"struct.sh::TSourceLoc"* %138 to i8*
  %140 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 4 %140, i64 16, i1 false) #17
  %141 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %142 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %141, i64 240) #17
  %143 = bitcast i8* %142 to %"class.sh::TIntermBinary"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %143, i8 zeroext 46, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %137) #17
  %144 = getelementptr inbounds i8, i8* %142, i64 8
  %145 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 4 %145, i64 16, i1 false) #17
  %146 = bitcast i8* %142 to %"class.sh::TIntermTyped"*
  %147 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %148 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %147, align 8
  %149 = bitcast i8* %142 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)***
  %150 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %150, i64 27
  %152 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %151, align 8
  %153 = tail call %"class.sh::TIntermTyped"* %152(%"class.sh::TIntermTyped"* %146, %"class.sh::TDiagnostics"* %148) #17
  %154 = bitcast %"class.sh::TIntermTyped"* %153 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %155 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %154, align 8
  %156 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %155, i64 31
  %157 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %156, align 8
  %158 = tail call dereferenceable(184) %"class.sh::TType"* %157(%"class.sh::TIntermTyped"* %153) #17
  %159 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %158, i64 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = bitcast i8* %142 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %162 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %161, align 8
  %163 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %162, i64 31
  %164 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %163, align 8
  %165 = tail call dereferenceable(184) %"class.sh::TType"* %164(%"class.sh::TIntermTyped"* %146) #17
  %166 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %165, i64 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %160, %167
  %169 = select i1 %168, %"class.sh::TIntermTyped"* %153, %"class.sh::TIntermTyped"* %146
  br label %255

170:                                              ; preds = %131
  %171 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %172 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %171, align 8
  %173 = icmp eq i8* %108, null
  %174 = select i1 %173, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %108
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %172, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.321, i64 0, i64 0), i8* %174) #17
  br label %255

175:                                              ; preds = %80
  %176 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %91, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 91
  br i1 %178, label %179, label %243

179:                                              ; preds = %175
  %180 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %181 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %180, i64 31
  %182 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %181, align 8
  %183 = tail call dereferenceable(184) %"class.sh::TType"* %182(%"class.sh::TIntermTyped"* %1) #17
  %184 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %183, i64 0, i32 12
  %185 = load %"class.sh::TInterfaceBlock"*, %"class.sh::TInterfaceBlock"** %184, align 8
  %186 = getelementptr inbounds %"class.sh::TInterfaceBlock", %"class.sh::TInterfaceBlock"* %185, i64 0, i32 1, i32 0
  %187 = load %"class.sh::TVector.1"*, %"class.sh::TVector.1"** %186, align 8
  %188 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.sh::TField"**, %"class.sh::TField"*** %188, align 8
  %190 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %187, i64 0, i32 0, i32 0, i32 1
  %191 = load %"class.sh::TField"**, %"class.sh::TField"*** %190, align 8
  %192 = icmp eq %"class.sh::TField"** %189, %191
  br i1 %192, label %204, label %193

193:                                              ; preds = %179
  %194 = ptrtoint %"class.sh::TField"** %189 to i64
  %195 = ptrtoint %"class.sh::TField"** %191 to i64
  %196 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 1
  %197 = load i64, i64* %196, align 8
  %198 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = icmp eq i8* %199, null
  %201 = select i1 %200, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %199
  %202 = sub i64 %195, %194
  %203 = ashr exact i64 %202, 3
  br label %207

204:                                              ; preds = %179
  %205 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %206 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %205, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %206, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.322, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.320, i64 0, i64 0)) #17
  br label %255

207:                                              ; preds = %193, %222
  %208 = phi i64 [ 0, %193 ], [ %224, %222 ]
  %209 = phi i32 [ 0, %193 ], [ %223, %222 ]
  %210 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %189, i64 %208
  %211 = load %"class.sh::TField"*, %"class.sh::TField"** %210, align 8
  %212 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %211, i64 0, i32 1, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %213, %197
  br i1 %214, label %215, label %222

215:                                              ; preds = %207
  %216 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %211, i64 0, i32 1, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = icmp eq i8* %217, null
  %219 = select i1 %218, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %217
  %220 = tail call i32 @bcmp(i8* %219, i8* %201, i64 %197) #17
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %226, label %222

222:                                              ; preds = %207, %215
  %223 = add i32 %209, 1
  %224 = zext i32 %223 to i64
  %225 = icmp ugt i64 %203, %224
  br i1 %225, label %207, label %238

226:                                              ; preds = %215
  %227 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32 %209) #17
  %228 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %227, i64 0, i32 0, i32 0
  %229 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %227, i64 0, i32 0, i32 0, i32 0, i32 1
  %230 = bitcast %"struct.sh::TSourceLoc"* %229 to i8*
  %231 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 4 %231, i64 16, i1 false) #17
  %232 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %233 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %232, i64 240) #17
  %234 = bitcast i8* %233 to %"class.sh::TIntermBinary"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %234, i8 zeroext 47, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %228) #17
  %235 = getelementptr inbounds i8, i8* %233, i64 8
  %236 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 4 %236, i64 16, i1 false) #17
  %237 = bitcast i8* %233 to %"class.sh::TIntermTyped"*
  br label %255

238:                                              ; preds = %222
  %239 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %240 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %239, align 8
  %241 = icmp eq i8* %199, null
  %242 = select i1 %241, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %199
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %240, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.323, i64 0, i64 0), i8* %242) #17
  br label %255

243:                                              ; preds = %175
  %244 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %245 = load i32, i32* %244, align 8
  %246 = icmp slt i32 %245, 300
  %247 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %248 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %247, align 8
  %249 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  %252 = select i1 %251, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %250
  br i1 %246, label %253, label %254

253:                                              ; preds = %243
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %248, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.324, i64 0, i64 0), i8* %252) #17
  br label %255

254:                                              ; preds = %243
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %248, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.325, i64 0, i64 0), i8* %252) #17
  br label %255

255:                                              ; preds = %253, %254, %204, %238, %226, %113, %170, %135, %79, %15
  %256 = phi %"class.sh::TIntermTyped"* [ %1, %15 ], [ %73, %79 ], [ %1, %113 ], [ %169, %135 ], [ %1, %170 ], [ %1, %204 ], [ %237, %226 ], [ %1, %238 ], [ %1, %254 ], [ %1, %253 ]
  ret %"class.sh::TIntermTyped"* %256
}

declare void @_ZN2sh14TIntermSwizzleC1EPNS_12TIntermTypedERKNS_7TVectorIiEE(%"class.sh::TIntermSwizzle"*, %"class.sh::TIntermTyped"*, %"class.sh::TVector.82"* dereferenceable(24)) unnamed_addr #3

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh15CreateIndexNodeEi(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* noalias sret, %"class.sh::TParseContext"*, %"class.sh::ImmutableString"* readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.std::__1::array.73", align 1
  %6 = alloca %"struct.std::__1::array.73", align 1
  %7 = alloca %"struct.std::__1::array.73", align 1
  %8 = alloca %"struct.std::__1::array.74", align 1
  %9 = bitcast %"struct.sh::TLayoutQualifier"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ({ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }* @__const._ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_.qualifier to i8*), i64 92, i1 false)
  %10 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %11
  %14 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.326, i64 0, i64 0)) #19
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %22 [
    i32 5, label %19
    i32 3, label %19
    i32 1, label %19
  ]

19:                                               ; preds = %16, %16, %16
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %21 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %20, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %21, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.326, i64 0, i64 0)) #17
  br label %22

22:                                               ; preds = %16, %19
  %23 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 3
  store i32 1, i32* %23, align 4
  br label %411

24:                                               ; preds = %4
  %25 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.328, i64 0, i64 0)) #19
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %33 [
    i32 5, label %30
    i32 3, label %30
    i32 1, label %30
  ]

30:                                               ; preds = %27, %27, %27
  %31 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %32 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %31, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %32, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.327, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.328, i64 0, i64 0)) #17
  br label %33

33:                                               ; preds = %27, %30
  %34 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 3
  store i32 2, i32* %34, align 4
  br label %411

35:                                               ; preds = %24
  %36 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i64 0, i64 0)) #19
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, 310
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %44 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %43, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %44, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %45

45:                                               ; preds = %38, %42
  %46 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 3
  store i32 4, i32* %46, align 4
  br label %411

47:                                               ; preds = %35
  %48 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.329, i64 0, i64 0)) #19
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 3
  store i32 3, i32* %51, align 4
  br label %411

52:                                               ; preds = %47
  %53 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.330, i64 0, i64 0)) #19
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 2
  store i32 1, i32* %56, align 4
  br label %411

57:                                               ; preds = %52
  %58 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.331, i64 0, i64 0)) #19
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 2
  store i32 2, i32* %61, align 4
  br label %411

62:                                               ; preds = %57
  %63 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #19
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %67 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %66, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %67, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.332, i64 0, i64 0), i8* %13) #17
  br label %411

68:                                               ; preds = %62
  %69 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0)) #19
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %80

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 35632
  br i1 %74, label %75, label %80

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %76) #17
  store i8 23, i8* %76, align 1
  %77 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %76) #17
  br i1 %77, label %78, label %411

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 9
  store i8 1, i8* %79, align 4
  br label %411

80:                                               ; preds = %71, %68
  %81 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #19
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %92

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %85, 310
  br i1 %86, label %87, label %90

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %89 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %88, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %89, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %90

90:                                               ; preds = %83, %87
  %91 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 10
  store i8 1, i8* %91, align 1
  br label %411

92:                                               ; preds = %80
  %93 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.333, i64 0, i64 0)) #19
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %104

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %97 = load i32, i32* %96, align 8
  %98 = icmp slt i32 %97, 310
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %101 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %100, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %101, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %102

102:                                              ; preds = %95, %99
  %103 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 1, i32* %103, align 4
  br label %411

104:                                              ; preds = %92
  %105 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.334, i64 0, i64 0)) #19
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %116

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %109 = load i32, i32* %108, align 8
  %110 = icmp slt i32 %109, 310
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %113 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %112, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %113, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %114

114:                                              ; preds = %107, %111
  %115 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 2, i32* %115, align 4
  br label %411

116:                                              ; preds = %104
  %117 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.335, i64 0, i64 0)) #19
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %128

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %121, 310
  br i1 %122, label %123, label %126

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %125 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %124, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %125, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %126

126:                                              ; preds = %119, %123
  %127 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 3, i32* %127, align 4
  br label %411

128:                                              ; preds = %116
  %129 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.336, i64 0, i64 0)) #19
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %140

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %133 = load i32, i32* %132, align 8
  %134 = icmp slt i32 %133, 310
  br i1 %134, label %135, label %138

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %137 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %136, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %137, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 12, i32* %139, align 4
  br label %411

140:                                              ; preds = %128
  %141 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.337, i64 0, i64 0)) #19
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %152

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %145 = load i32, i32* %144, align 8
  %146 = icmp slt i32 %145, 310
  br i1 %146, label %147, label %150

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %149 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %148, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %149, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %150

150:                                              ; preds = %143, %147
  %151 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 13, i32* %151, align 4
  br label %411

152:                                              ; preds = %140
  %153 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.338, i64 0, i64 0)) #19
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %164

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %157 = load i32, i32* %156, align 8
  %158 = icmp slt i32 %157, 310
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %161 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %160, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %161, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %162

162:                                              ; preds = %155, %159
  %163 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 8, i32* %163, align 4
  br label %411

164:                                              ; preds = %152
  %165 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.339, i64 0, i64 0)) #19
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %176

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %169 = load i32, i32* %168, align 8
  %170 = icmp slt i32 %169, 310
  br i1 %170, label %171, label %174

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %173 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %172, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %173, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %174

174:                                              ; preds = %167, %171
  %175 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 9, i32* %175, align 4
  br label %411

176:                                              ; preds = %164
  %177 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.340, i64 0, i64 0)) #19
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %188

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %181 = load i32, i32* %180, align 8
  %182 = icmp slt i32 %181, 310
  br i1 %182, label %183, label %186

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %185 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %184, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %185, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %186

186:                                              ; preds = %179, %183
  %187 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 10, i32* %187, align 4
  br label %411

188:                                              ; preds = %176
  %189 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.341, i64 0, i64 0)) #19
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %200

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %193 = load i32, i32* %192, align 8
  %194 = icmp slt i32 %193, 310
  br i1 %194, label %195, label %198

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %197 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %196, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %197, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %198

198:                                              ; preds = %191, %195
  %199 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 11, i32* %199, align 4
  br label %411

200:                                              ; preds = %188
  %201 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.342, i64 0, i64 0)) #19
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %212

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %205 = load i32, i32* %204, align 8
  %206 = icmp slt i32 %205, 310
  br i1 %206, label %207, label %210

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %209 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %208, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %209, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %210

210:                                              ; preds = %203, %207
  %211 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 4, i32* %211, align 4
  br label %411

212:                                              ; preds = %200
  %213 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.343, i64 0, i64 0)) #19
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %224

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %217 = load i32, i32* %216, align 8
  %218 = icmp slt i32 %217, 310
  br i1 %218, label %219, label %222

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %221 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %220, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %221, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %222

222:                                              ; preds = %215, %219
  %223 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 5, i32* %223, align 4
  br label %411

224:                                              ; preds = %212
  %225 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.344, i64 0, i64 0)) #19
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %236

227:                                              ; preds = %224
  %228 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %229 = load i32, i32* %228, align 8
  %230 = icmp slt i32 %229, 310
  br i1 %230, label %231, label %234

231:                                              ; preds = %227
  %232 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %233 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %232, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %233, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %234

234:                                              ; preds = %227, %231
  %235 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 6, i32* %235, align 4
  br label %411

236:                                              ; preds = %224
  %237 = tail call i32 @strcmp(i8* %13, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.345, i64 0, i64 0)) #19
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %248

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %241 = load i32, i32* %240, align 8
  %242 = icmp slt i32 %241, 310
  br i1 %242, label %243, label %246

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %245 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %244, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %245, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %13) #17
  br label %246

246:                                              ; preds = %239, %243
  %247 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 7
  store i32 7, i32* %247, align 4
  br label %411

248:                                              ; preds = %236
  %249 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = icmp eq i32 %250, 36313
  br i1 %251, label %252, label %313

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %254 = load i32, i32* %253, align 8
  %255 = icmp sgt i32 %254, 319
  br i1 %255, label %270, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %257) #17
  store i8 11, i8* %257, align 1
  %258 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %6) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %257) #17
  br i1 %258, label %259, label %311

259:                                              ; preds = %256
  %260 = load i32, i32* %253, align 8
  %261 = icmp slt i32 %260, 310
  br i1 %261, label %264, label %262

262:                                              ; preds = %259
  %263 = load i8*, i8** %10, align 8
  br label %270

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %266 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %265, align 8
  %267 = load i8*, i8** %10, align 8
  %268 = icmp eq i8* %267, null
  %269 = select i1 %268, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %267
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %266, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %269) #17
  br label %311

270:                                              ; preds = %262, %252
  %271 = phi i8* [ %263, %262 ], [ %11, %252 ]
  %272 = icmp eq i8* %271, null
  %273 = select i1 %272, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %271
  %274 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.346, i64 0, i64 0)) #19
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 1, i32* %277, align 4
  br label %411

278:                                              ; preds = %270
  %279 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.347, i64 0, i64 0)) #19
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 2, i32* %282, align 4
  br label %411

283:                                              ; preds = %278
  %284 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.348, i64 0, i64 0)) #19
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %288

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 3, i32* %287, align 4
  br label %411

288:                                              ; preds = %283
  %289 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i64 0, i64 0)) #19
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 4, i32* %292, align 4
  br label %411

293:                                              ; preds = %288
  %294 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([20 x i8], [20 x i8]* @.str.350, i64 0, i64 0)) #19
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 5, i32* %297, align 4
  br label %411

298:                                              ; preds = %293
  %299 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.351, i64 0, i64 0)) #19
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %298
  %302 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 6, i32* %302, align 4
  br label %411

303:                                              ; preds = %298
  %304 = call i32 @strcmp(i8* %273, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.352, i64 0, i64 0)) #19
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 12
  store i32 7, i32* %307, align 4
  br label %411

308:                                              ; preds = %303
  %309 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %310 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %309, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %310, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.353, i64 0, i64 0), i8* %273) #17
  br label %411

311:                                              ; preds = %256, %264
  %312 = load i32, i32* %249, align 4
  br label %313

313:                                              ; preds = %311, %248
  %314 = phi i32 [ %312, %311 ], [ %250, %248 ]
  %315 = icmp eq i32 %314, 36487
  br i1 %315, label %316, label %383

316:                                              ; preds = %313
  %317 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %318 = load i32, i32* %317, align 8
  %319 = icmp sgt i32 %318, 319
  br i1 %319, label %332, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %321) #17
  store i8 20, i8* %321, align 1
  %322 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %321) #17
  br i1 %322, label %323, label %383

323:                                              ; preds = %320
  %324 = load i32, i32* %317, align 8
  %325 = icmp slt i32 %324, 310
  br i1 %325, label %326, label %332

326:                                              ; preds = %323
  %327 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %328 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %327, align 8
  %329 = load i8*, i8** %10, align 8
  %330 = icmp eq i8* %329, null
  %331 = select i1 %330, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %329
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %328, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %331) #17
  br label %383

332:                                              ; preds = %323, %316
  %333 = load i8*, i8** %10, align 8
  %334 = icmp eq i8* %333, null
  %335 = select i1 %334, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %333
  %336 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.349, i64 0, i64 0)) #19
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %340

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 16
  store i32 1, i32* %339, align 4
  br label %411

340:                                              ; preds = %332
  %341 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.354, i64 0, i64 0)) #19
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 16
  store i32 2, i32* %344, align 4
  br label %411

345:                                              ; preds = %340
  %346 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.355, i64 0, i64 0)) #19
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %350

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 16
  store i32 3, i32* %349, align 4
  br label %411

350:                                              ; preds = %345
  %351 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.356, i64 0, i64 0)) #19
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %350
  %354 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 17
  store i32 4, i32* %354, align 4
  br label %411

355:                                              ; preds = %350
  %356 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.357, i64 0, i64 0)) #19
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %360

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 17
  store i32 5, i32* %359, align 4
  br label %411

360:                                              ; preds = %355
  %361 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.358, i64 0, i64 0)) #19
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %360
  %364 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 17
  store i32 6, i32* %364, align 4
  br label %411

365:                                              ; preds = %360
  %366 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.359, i64 0, i64 0)) #19
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %370

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 18
  store i32 7, i32* %369, align 4
  br label %411

370:                                              ; preds = %365
  %371 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.360, i64 0, i64 0)) #19
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %370
  %374 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 18
  store i32 8, i32* %374, align 4
  br label %411

375:                                              ; preds = %370
  %376 = call i32 @strcmp(i8* %335, i8* nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.361, i64 0, i64 0)) #19
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %375
  %379 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 19
  store i32 9, i32* %379, align 4
  br label %411

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %382 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %381, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %382, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.353, i64 0, i64 0), i8* %335) #17
  br label %411

383:                                              ; preds = %326, %320, %313
  %384 = load i8*, i8** %10, align 8
  %385 = icmp eq i8* %384, null
  %386 = select i1 %385, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %384
  %387 = call i32 @strcmp(i8* %386, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #19
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %408

389:                                              ; preds = %383
  %390 = load i32, i32* %249, align 4
  %391 = icmp eq i32 %390, 35632
  br i1 %391, label %392, label %408

392:                                              ; preds = %389
  %393 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %393) #17
  store i8 15, i8* %393, align 1
  %394 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %8, i64 0, i32 0, i64 1
  store i8 16, i8* %394, align 1
  %395 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.74"* nonnull dereferenceable(2) %8)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %393) #17
  br i1 %395, label %396, label %411

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %398 = load i32, i32* %397, align 8
  %399 = icmp slt i32 %398, 100
  br i1 %399, label %400, label %406

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %402 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %401, align 8
  %403 = load i8*, i8** %10, align 8
  %404 = icmp eq i8* %403, null
  %405 = select i1 %404, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %403
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %402, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %405) #17
  br label %406

406:                                              ; preds = %396, %400
  %407 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 22
  store i8 1, i8* %407, align 4
  br label %411

408:                                              ; preds = %389, %383
  %409 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %410 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %409, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %410, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.353, i64 0, i64 0), i8* %386) #17
  br label %411

411:                                              ; preds = %33, %50, %60, %78, %75, %102, %126, %150, %174, %198, %222, %246, %343, %353, %363, %373, %380, %378, %368, %358, %348, %338, %392, %406, %408, %276, %286, %296, %306, %308, %301, %291, %281, %234, %210, %186, %162, %138, %114, %90, %65, %55, %45, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext14parseLocalSizeERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_RKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEmPNS_13WorkGroupSizeE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), i32, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.std::__1::basic_string.38"* dereferenceable(24), i64, %"struct.sh::WorkGroupSize"*) local_unnamed_addr #2 align 2 {
  %9 = alloca %"class.std::__1::basic_stringstream", align 8
  %10 = alloca %"class.std::__1::basic_string.38", align 8
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 310
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  %17 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %1, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %18
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %20) #17
  br label %21

21:                                               ; preds = %8, %14
  %22 = icmp slt i32 %3, 1
  br i1 %22, label %23, label %87

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::basic_stringstream"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %24) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %9)
  %25 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_ostream.base"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.362, i64 0, i64 0), i64 14) #17
  %28 = icmp ult i64 %6, 3
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %6
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %23, %29
  %33 = phi i8* [ %31, %29 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %23 ]
  %34 = call i64 @strlen(i8* nonnull %33) #17
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* nonnull %33, i64 %34) #17
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.363, i64 0, i64 0), i64 17) #17
  %37 = bitcast %"class.std::__1::basic_string.38"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #17
  %38 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string.38"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %10, %"class.std::__1::basic_stringbuf"* %39) #17
  %41 = bitcast %"class.std::__1::basic_string.38"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i8*, i8** %38, align 8
  %46 = select i1 %44, i8* %45, i8* %37
  %47 = bitcast %"class.std::__1::basic_string.38"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.std::__1::basic_string.38"* %5 to i8*
  %54 = select i1 %50, i8* %52, i8* %53
  %55 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %56 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %55, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %56, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* %46, i8* %54) #17
  %57 = load i8, i8* %42, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %32
  %60 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %32, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #17
  %62 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %63 = bitcast %"class.std::__1::basic_stringstream"* %9 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %65 = inttoptr i64 %62 to i8*
  %66 = getelementptr i8, i8* %65, i64 -24
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %24, i64 %68
  %70 = bitcast i8* %69 to i64*
  store i64 %64, i64* %70, align 8
  %71 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %72 = bitcast %"class.std::__1::basic_ostream.base"* %25 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %39, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 1, i32 1
  %75 = bitcast %"class.std::__1::basic_string.38"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %61
  %80 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #18
  br label %82

82:                                               ; preds = %61, %79
  %83 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %39, i64 0, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %83) #17
  %84 = bitcast %"class.std::__1::basic_stringstream"* %9 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %84, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %85 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %9, i64 0, i32 2
  %86 = bitcast %"class.std::__1::basic_ios.base"* %85 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %86) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %24) #17
  br label %87

87:                                               ; preds = %82, %21
  %88 = call dereferenceable(4) i32* @_ZN2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %7, i64 %6) #17
  store i32 %3, i32* %88, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext13parseNumViewsEiRKNS_10TSourceLocERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPi(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.std::__1::basic_string.38"* dereferenceable(24), i32* nocapture) local_unnamed_addr #2 align 2 {
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %7, label %18

7:                                                ; preds = %5
  %8 = bitcast %"class.std::__1::basic_string.38"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string.38"* %3 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %17 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %16, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %17, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.364, i64 0, i64 0), i8* %15) #17
  br label %18

18:                                               ; preds = %7, %5
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext16parseInvocationsEiRKNS_10TSourceLocERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPi(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.std::__1::basic_string.38"* dereferenceable(24), i32* nocapture) local_unnamed_addr #2 align 2 {
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 52
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %11, label %22

11:                                               ; preds = %7, %5
  %12 = bitcast %"class.std::__1::basic_string.38"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.38"* %3 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %21 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %20, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %21, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.365, i64 0, i64 0), i8* %19) #17
  br label %23

22:                                               ; preds = %7
  store i32 %1, i32* %4, align 4
  br label %23

23:                                               ; preds = %22, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext16parseMaxVerticesEiRKNS_10TSourceLocERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPi(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.std::__1::basic_string.38"* dereferenceable(24), i32* nocapture) local_unnamed_addr #2 align 2 {
  %6 = icmp slt i32 %1, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 53
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %11, label %22

11:                                               ; preds = %7, %5
  %12 = bitcast %"class.std::__1::basic_string.38"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.38"* %3 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %21 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %20, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %21, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.366, i64 0, i64 0), i8* %19) #17
  br label %23

22:                                               ; preds = %7
  store i32 %1, i32* %4, align 4
  br label %23

23:                                               ; preds = %22, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext13parseVerticesEiRKNS_10TSourceLocERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPi(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.std::__1::basic_string.38"* dereferenceable(24), i32* nocapture) local_unnamed_addr #2 align 2 {
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 55
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %11, label %22

11:                                               ; preds = %7, %5
  %12 = bitcast %"class.std::__1::basic_string.38"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string.38"* %3 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %21 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %20, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %21, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.367, i64 0, i64 0), i8* %19) #17
  br label %23

22:                                               ; preds = %7
  store i32 %1, i32* %4, align 4
  br label %23

23:                                               ; preds = %22, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext25parseIndexLayoutQualifierEiRKNS_10TSourceLocERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPi(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.std::__1::basic_string.38"* dereferenceable(24), i32* nocapture) local_unnamed_addr #2 align 2 {
  %6 = icmp ugt i32 %1, 1
  br i1 %6, label %7, label %18

7:                                                ; preds = %5
  %8 = bitcast %"class.std::__1::basic_string.38"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string.38"* %3 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %17 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %16, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %17, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.368, i64 0, i64 0), i8* %15) #17
  br label %19

18:                                               ; preds = %5
  store i32 %1, i32* %4, align 4
  br label %19

19:                                               ; preds = %18, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_(%"struct.sh::TLayoutQualifier"* noalias sret, %"class.sh::TParseContext"*, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), i32, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %7 = alloca %"struct.std::__1::array.73", align 1
  %8 = alloca %"struct.std::__1::array.73", align 1
  %9 = alloca %"struct.std::__1::array.73", align 1
  %10 = alloca %"struct.std::__1::array.73", align 1
  %11 = alloca %"class.std::__1::basic_string.38", align 8
  %12 = alloca %"struct.std::__1::array.74", align 1
  %13 = bitcast %"struct.sh::TLayoutQualifier"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 bitcast ({ i32, i32, i32, i32, %"struct.sh::WorkGroupSize", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }* @__const._ZN2sh13TParseContext20parseLayoutQualifierERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_.qualifier to i8*), i64 92, i1 false)
  %14 = bitcast %"class.std::__1::basic_string.38"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string.38"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_Z3Stri(%"class.std::__1::basic_string.38"* nonnull sret %11, i32 %4)
  %17 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %2, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %18
  %21 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #19
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %6
  %24 = icmp slt i32 %4, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %15, align 8
  %31 = select i1 %29, i8* %30, i8* %14
  %32 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %33 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %32, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %33, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.369, i64 0, i64 0), i8* %31) #17
  br label %261

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 0
  store i32 %4, i32* %35, align 4
  %36 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 1
  store i32 1, i32* %36, align 4
  br label %261

37:                                               ; preds = %6
  %38 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #19
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %60

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %42, 310
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %46 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %45, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %46, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %20) #17
  br label %47

47:                                               ; preds = %40, %44
  %48 = icmp slt i32 %4, 0
  br i1 %48, label %49, label %58

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %15, align 8
  %55 = select i1 %53, i8* %54, i8* %14
  %56 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %57 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %56, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %57, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.370, i64 0, i64 0), i8* %55) #17
  br label %261

58:                                               ; preds = %47
  %59 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 5
  store i32 %4, i32* %59, align 4
  br label %261

60:                                               ; preds = %37
  %61 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.150, i64 0, i64 0)) #19
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %83

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %65 = load i32, i32* %64, align 8
  %66 = icmp slt i32 %65, 310
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %69 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %68, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %69, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.143, i64 0, i64 0), i8* %20) #17
  br label %70

70:                                               ; preds = %63, %67
  %71 = icmp slt i32 %4, 0
  br i1 %71, label %72, label %81

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i8*, i8** %15, align 8
  %78 = select i1 %76, i8* %77, i8* %14
  %79 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %80 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %79, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %80, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.371, i64 0, i64 0), i8* %78) #17
  br label %261

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 6
  store i32 %4, i32* %82, align 4
  br label %261

83:                                               ; preds = %60
  %84 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.372, i64 0, i64 0)) #19
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 4
  call void @_ZN2sh13TParseContext14parseLocalSizeERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_RKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEmPNS_13WorkGroupSizeE(%"class.sh::TParseContext"* %1, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i32 %4, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %11, i64 0, %"struct.sh::WorkGroupSize"* %87)
  br label %261

88:                                               ; preds = %83
  %89 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.373, i64 0, i64 0)) #19
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 4
  call void @_ZN2sh13TParseContext14parseLocalSizeERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_RKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEmPNS_13WorkGroupSizeE(%"class.sh::TParseContext"* %1, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i32 %4, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %11, i64 1, %"struct.sh::WorkGroupSize"* %92)
  br label %261

93:                                               ; preds = %88
  %94 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.374, i64 0, i64 0)) #19
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 4
  call void @_ZN2sh13TParseContext14parseLocalSizeERKNS_15ImmutableStringERKNS_10TSourceLocEiS6_RKNSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEmPNS_13WorkGroupSizeE(%"class.sh::TParseContext"* %1, %"class.sh::ImmutableString"* dereferenceable(16) %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i32 %4, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %11, i64 2, %"struct.sh::WorkGroupSize"* %97)
  br label %261

98:                                               ; preds = %93
  %99 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.375, i64 0, i64 0)) #19
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %122

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 35633
  br i1 %104, label %105, label %122

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %106) #17
  store i8 37, i8* %106, align 1
  %107 = getelementptr inbounds %"struct.std::__1::array.74", %"struct.std::__1::array.74"* %12, i64 0, i32 0, i64 1
  store i8 38, i8* %107, align 1
  %108 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm2EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.74"* nonnull dereferenceable(2) %12)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %106) #17
  br i1 %108, label %109, label %261

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 8
  %111 = icmp slt i32 %4, 1
  br i1 %111, label %112, label %121

112:                                              ; preds = %109
  %113 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  %117 = load i8*, i8** %15, align 8
  %118 = select i1 %116, i8* %117, i8* %14
  %119 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %120 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %119, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %120, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.364, i64 0, i64 0), i8* %118) #17
  br label %121

121:                                              ; preds = %109, %112
  store i32 %4, i32* %110, align 4
  br label %261

122:                                              ; preds = %101, %98
  %123 = call i32 @strcmp(i8* %20, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.376, i64 0, i64 0)) #19
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %155

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 36313
  br i1 %128, label %129, label %155

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %131 = load i32, i32* %130, align 8
  %132 = icmp sgt i32 %131, 319
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %10, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %134) #17
  store i8 11, i8* %134, align 1
  %135 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %10) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %134) #17
  br i1 %135, label %138, label %136

136:                                              ; preds = %133
  %137 = load i8*, i8** %17, align 8
  br label %155

138:                                              ; preds = %133, %129
  %139 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 13
  %140 = icmp slt i32 %4, 1
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 52
  %143 = load i32, i32* %142, align 8
  %144 = icmp slt i32 %143, %4
  br i1 %144, label %145, label %154

145:                                              ; preds = %141, %138
  %146 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %146, i64 0, i32 1, i32 0
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  %150 = load i8*, i8** %15, align 8
  %151 = select i1 %149, i8* %150, i8* %14
  %152 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %153 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %152, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %153, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.365, i64 0, i64 0), i8* %151) #17
  br label %261

154:                                              ; preds = %141
  store i32 %4, i32* %139, align 4
  br label %261

155:                                              ; preds = %136, %125, %122
  %156 = phi i8* [ %137, %136 ], [ %18, %125 ], [ %18, %122 ]
  %157 = icmp eq i8* %156, null
  %158 = select i1 %157, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %156
  %159 = call i32 @strcmp(i8* %158, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.377, i64 0, i64 0)) #19
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %191

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 36313
  br i1 %164, label %165, label %191

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %167 = load i32, i32* %166, align 8
  %168 = icmp sgt i32 %167, 319
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %170) #17
  store i8 11, i8* %170, align 1
  %171 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %170) #17
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = load i8*, i8** %17, align 8
  br label %191

174:                                              ; preds = %169, %165
  %175 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 14
  %176 = icmp slt i32 %4, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 53
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %179, %4
  br i1 %180, label %181, label %190

181:                                              ; preds = %177, %174
  %182 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  %186 = load i8*, i8** %15, align 8
  %187 = select i1 %185, i8* %186, i8* %14
  %188 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %189 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %188, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %189, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.366, i64 0, i64 0), i8* %187) #17
  br label %261

190:                                              ; preds = %177
  store i32 %4, i32* %175, align 4
  br label %261

191:                                              ; preds = %172, %161, %155
  %192 = phi i8* [ %173, %172 ], [ %156, %161 ], [ %156, %155 ]
  %193 = icmp eq i8* %192, null
  %194 = select i1 %193, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %192
  %195 = call i32 @strcmp(i8* %194, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #19
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %219

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 35632
  br i1 %200, label %201, label %219

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %202) #17
  store i8 7, i8* %202, align 1
  %203 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %8) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %202) #17
  br i1 %203, label %206, label %204

204:                                              ; preds = %201
  %205 = load i8*, i8** %17, align 8
  br label %219

206:                                              ; preds = %201
  %207 = icmp ugt i32 %4, 1
  br i1 %207, label %208, label %217

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  %213 = load i8*, i8** %15, align 8
  %214 = select i1 %212, i8* %213, i8* %14
  %215 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %216 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %215, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %216, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.368, i64 0, i64 0), i8* %214) #17
  br label %261

217:                                              ; preds = %206
  %218 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 20
  store i32 %4, i32* %218, align 4
  br label %261

219:                                              ; preds = %204, %197, %191
  %220 = phi i8* [ %205, %204 ], [ %192, %197 ], [ %192, %191 ]
  %221 = icmp eq i8* %220, null
  %222 = select i1 %221, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %220
  %223 = call i32 @strcmp(i8* %222, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.378, i64 0, i64 0)) #19
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %255

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 36488
  br i1 %228, label %229, label %255

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  %231 = load i32, i32* %230, align 8
  %232 = icmp sgt i32 %231, 319
  br i1 %232, label %238, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %234) #17
  store i8 20, i8* %234, align 1
  %235 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %234) #17
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  %237 = load i8*, i8** %17, align 8
  br label %255

238:                                              ; preds = %233, %229
  %239 = getelementptr inbounds %"struct.sh::TLayoutQualifier", %"struct.sh::TLayoutQualifier"* %0, i64 0, i32 15
  %240 = icmp slt i32 %4, 1
  br i1 %240, label %245, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 55
  %243 = load i32, i32* %242, align 4
  %244 = icmp slt i32 %243, %4
  br i1 %244, label %245, label %254

245:                                              ; preds = %241, %238
  %246 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %246, i64 0, i32 1, i32 0
  %248 = load i8, i8* %247, align 1
  %249 = icmp slt i8 %248, 0
  %250 = load i8*, i8** %15, align 8
  %251 = select i1 %249, i8* %250, i8* %14
  %252 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %253 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %252, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %253, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.367, i64 0, i64 0), i8* %251) #17
  br label %261

254:                                              ; preds = %241
  store i32 %4, i32* %239, align 4
  br label %261

255:                                              ; preds = %236, %225, %219
  %256 = phi i8* [ %237, %236 ], [ %220, %225 ], [ %220, %219 ]
  %257 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %258 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %257, align 8
  %259 = icmp eq i8* %256, null
  %260 = select i1 %259, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %256
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %258, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.353, i64 0, i64 0), i8* %260) #17
  br label %261

261:                                              ; preds = %254, %245, %217, %208, %190, %181, %154, %145, %58, %49, %86, %96, %255, %105, %121, %91, %72, %81, %25, %34
  %262 = bitcast %"class.std::__1::basic_string.38"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %267) #18
  br label %268

268:                                              ; preds = %261, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_Z3Stri(%"class.std::__1::basic_string.38"* noalias sret, i32) local_unnamed_addr #7 comdat {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 272, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = load i8*, i8** %15, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #17
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %38 = inttoptr i64 %35 to i8*
  %39 = getelementptr i8, i8* %38, i64 -24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %45, i64* %13, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %4, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #17
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 3
  %56 = bitcast %"class.std::__1::basic_string.38"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #17
  store i32 24, i32* %55, align 8
  %57 = bitcast %"class.std::__1::basic_ostream.base"* %34 to %"class.std::__1::basic_ostream"*
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %57, i32 %1) #17
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* sret %0, %"class.std::__1::basic_stringbuf"* %10) #17
  %59 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %59, i64* %13, align 8
  %60 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %61 = inttoptr i64 %59 to i8*
  %62 = getelementptr i8, i8* %61, i64 -24
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds i8, i8* %4, i64 %64
  %66 = bitcast i8* %65 to i64*
  store i64 %60, i64* %66, align 8
  %67 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %67, i64* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %68 = bitcast %"class.std::__1::basic_string.38"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %2, %72
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #17
  %76 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %76, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  %77 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %78 = bitcast %"class.std::__1::basic_ios.base"* %77 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %78) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TTypeQualifierBuilder"* @_ZN2sh13TParseContext26createTypeQualifierBuilderERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %4 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %3, i64 32) #17
  %5 = bitcast i8* %4 to %"class.sh::TTypeQualifierBuilder"*
  %6 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %7 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %6, i64 32) #17
  %8 = bitcast i8* %7 to %"class.sh::TStorageQualifierWrapper"*
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %10 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %10) #17
  %12 = zext i1 %11 to i32
  %13 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %15, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  %17 = bitcast i8* %16 to i32*
  store i32 %12, i32* %17, align 8
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  tail call void @_ZN2sh21TTypeQualifierBuilderC1EPKNS_24TStorageQualifierWrapperEi(%"class.sh::TTypeQualifierBuilder"* %5, %"class.sh::TStorageQualifierWrapper"* %8, i32 %19) #17
  ret %"class.sh::TTypeQualifierBuilder"* %5
}

declare void @_ZN2sh21TTypeQualifierBuilderC1EPKNS_24TStorageQualifierWrapperEi(%"class.sh::TTypeQualifierBuilder"*, %"class.sh::TStorageQualifierWrapper"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext27parseGlobalStorageQualifierENS_10TQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i32, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = tail call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %1)
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %6 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %6) #17
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* %4) #17
  br label %11

11:                                               ; preds = %3, %8
  %12 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %13 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %12, i64 32) #17
  %14 = bitcast i8* %13 to %"class.sh::TStorageQualifierWrapper"*
  %15 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %18 = getelementptr inbounds i8, i8* %13, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %1, i32* %19, align 8
  ret %"class.sh::TStorageQualifierWrapper"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext21parseVaryingQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 35633
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %7 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %7) #17
  br i1 %5, label %9, label %16

9:                                                ; preds = %2
  br i1 %8, label %13, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %12 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %11, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %12, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.457, i64 0, i64 0)) #17
  br label %13

13:                                               ; preds = %9, %10
  %14 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %15 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %14, i64 32) #17
  br label %23

16:                                               ; preds = %2
  br i1 %8, label %20, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %19 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %19, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.457, i64 0, i64 0)) #17
  br label %20

20:                                               ; preds = %16, %17
  %21 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %22 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %21, i64 32) #17
  br label %23

23:                                               ; preds = %20, %13
  %24 = phi i8* [ %22, %20 ], [ %15, %13 ]
  %25 = phi i32 [ 4, %20 ], [ 5, %13 ]
  %26 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %24, i64 8
  %28 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 4 %28, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %29 = getelementptr inbounds i8, i8* %24, i64 24
  %30 = bitcast i8* %29 to i32*
  store i32 %25, i32* %30, align 8
  %31 = bitcast i8* %24 to %"class.sh::TStorageQualifierWrapper"*
  ret %"class.sh::TStorageQualifierWrapper"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext16parseInQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 45
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 32) #17
  br label %64

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %61 [
    i32 35633, label %12
    i32 35632, label %34
    i32 37305, label %49
    i32 36313, label %52
    i32 36488, label %55
    i32 36487, label %58
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, 300
  br i1 %15, label %16, label %31

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %18 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %17, align 8
  %19 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %18, i8 zeroext 37) #17
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %17, align 8
  %22 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %21, i8 zeroext 38) #17
  br i1 %22, label %31, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, -7
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %29, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0)) #17
  br label %31

31:                                               ; preds = %16, %28, %23, %20, %12
  %32 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %33 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %32, i64 32) #17
  br label %64

34:                                               ; preds = %9
  %35 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = icmp slt i32 %36, 300
  br i1 %37, label %38, label %46

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %40, -7
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %45 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %44, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %45, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.125, i64 0, i64 0)) #17
  br label %46

46:                                               ; preds = %43, %38, %34
  %47 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %48 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %47, i64 32) #17
  br label %64

49:                                               ; preds = %9
  %50 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %51 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %50, i64 32) #17
  br label %64

52:                                               ; preds = %9
  %53 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %54 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %53, i64 32) #17
  br label %64

55:                                               ; preds = %9
  %56 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %57 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %56, i64 32) #17
  br label %64

58:                                               ; preds = %9
  %59 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %60 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %59, i64 32) #17
  br label %64

61:                                               ; preds = %9
  %62 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %63 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %62, i64 32) #17
  br label %64

64:                                               ; preds = %61, %58, %55, %52, %49, %46, %31, %6
  %65 = phi i8* [ %63, %61 ], [ %60, %58 ], [ %57, %55 ], [ %54, %52 ], [ %51, %49 ], [ %48, %46 ], [ %33, %31 ], [ %8, %6 ]
  %66 = phi i32 [ 91, %61 ], [ 88, %58 ], [ 82, %55 ], [ 72, %52 ], [ 60, %49 ], [ 12, %46 ], [ 9, %31 ], [ 14, %6 ]
  %67 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %65, i64 8
  %69 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 4 %69, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 24
  %71 = bitcast i8* %70 to i32*
  store i32 %66, i32* %71, align 8
  %72 = bitcast i8* %65 to %"class.sh::TStorageQualifierWrapper"*
  ret %"class.sh::TStorageQualifierWrapper"* %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext17parseOutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 45
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %8 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %7, i64 32) #17
  br label %59

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %56 [
    i32 35633, label %12
    i32 35632, label %27
    i32 37305, label %42
    i32 36313, label %47
    i32 36488, label %50
    i32 36487, label %53
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, 300
  br i1 %15, label %16, label %24

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -7
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %23 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %22, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %23, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0)) #17
  br label %24

24:                                               ; preds = %21, %16, %12
  %25 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %26 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %25, i64 32) #17
  br label %59

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, 300
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -7
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %38 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %37, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %38, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0)) #17
  br label %39

39:                                               ; preds = %36, %31, %27
  %40 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %41 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %40, i64 32) #17
  br label %59

42:                                               ; preds = %9
  %43 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %44 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %43, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %44, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.380, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.379, i64 0, i64 0)) #17
  %45 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %46 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %45, i64 32) #17
  br label %59

47:                                               ; preds = %9
  %48 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %49 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %48, i64 32) #17
  br label %59

50:                                               ; preds = %9
  %51 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %52 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %51, i64 32) #17
  br label %59

53:                                               ; preds = %9
  %54 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %55 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %54, i64 32) #17
  br label %59

56:                                               ; preds = %9
  %57 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %58 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %57, i64 32) #17
  br label %59

59:                                               ; preds = %56, %53, %50, %47, %42, %39, %24, %6
  %60 = phi i8* [ %58, %56 ], [ %55, %53 ], [ %52, %50 ], [ %49, %47 ], [ %46, %42 ], [ %41, %39 ], [ %26, %24 ], [ %8, %6 ]
  %61 = phi i32 [ 91, %56 ], [ 89, %53 ], [ 83, %50 ], [ 73, %47 ], [ 15, %42 ], [ 10, %39 ], [ 11, %24 ], [ 15, %6 ]
  %62 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %60, i64 8
  %64 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 4 %64, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %65 = getelementptr inbounds i8, i8* %60, i64 24
  %66 = bitcast i8* %65 to i32*
  store i32 %61, i32* %66, align 8
  %67 = bitcast i8* %60 to %"class.sh::TStorageQualifierWrapper"*
  ret %"class.sh::TStorageQualifierWrapper"* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TStorageQualifierWrapper"* @_ZN2sh13TParseContext19parseInOutQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 45
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %8 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %7, align 8
  %9 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %8, i8 zeroext 15) #17
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %7, align 8
  %12 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %11, i8 zeroext 16) #17
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %15 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %14, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %15, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.381, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.382, i64 0, i64 0)) #17
  br label %16

16:                                               ; preds = %13, %2, %6, %10
  %17 = phi i32 [ 13, %10 ], [ 13, %6 ], [ 16, %2 ], [ 16, %13 ]
  %18 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %19 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %18, i64 32) #17
  %20 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh21TQualifierWrapperBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2sh24TStorageQualifierWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 24
  %24 = bitcast i8* %23 to i32*
  store i32 %17, i32* %24, align 8
  %25 = bitcast i8* %19 to %"class.sh::TStorageQualifierWrapper"*
  ret %"class.sh::TStorageQualifierWrapper"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext20joinLayoutQualifiersENS_16TLayoutQualifierES1_RKNS_10TSourceLocE(%"struct.sh::TLayoutQualifier"* noalias sret, %"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TLayoutQualifier"* nocapture readonly byval(%"struct.sh::TLayoutQualifier") align 8, %"struct.sh::TLayoutQualifier"* nocapture readonly byval(%"struct.sh::TLayoutQualifier") align 8, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %7 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %6, align 8
  tail call void @_ZN2sh20JoinLayoutQualifiersENS_16TLayoutQualifierES0_RKNS_10TSourceLocEPNS_12TDiagnosticsE(%"struct.sh::TLayoutQualifier"* sret %0, %"struct.sh::TLayoutQualifier"* nonnull byval(%"struct.sh::TLayoutQualifier") align 8 %2, %"struct.sh::TLayoutQualifier"* nonnull byval(%"struct.sh::TLayoutQualifier") align 8 %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, %"class.sh::TDiagnostics"* %7) #17
  ret void
}

declare void @_ZN2sh20JoinLayoutQualifiersENS_16TLayoutQualifierES0_RKNS_10TSourceLocEPNS_12TDiagnosticsE(%"struct.sh::TLayoutQualifier"* sret, %"struct.sh::TLayoutQualifier"* byval(%"struct.sh::TLayoutQualifier") align 8, %"struct.sh::TLayoutQualifier"* byval(%"struct.sh::TLayoutQualifier") align 8, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TDiagnostics"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TDeclarator"* @_ZN2sh13TParseContext21parseStructDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %1)
  %5 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %6 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %5, i64 40) #17
  %7 = bitcast i8* %6 to %"class.sh::TDeclarator"*
  tail call void @_ZN2sh11TDeclaratorC1ERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TDeclarator"* %7, %"class.sh::ImmutableString"* dereferenceable(16) %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2) #17
  ret %"class.sh::TDeclarator"* %7
}

declare void @_ZN2sh11TDeclaratorC1ERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TDeclarator"*, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TDeclarator"* @_ZN2sh13TParseContext26parseStructArrayDeclaratorERKNS_15ImmutableStringERKNS_10TSourceLocEPKNS_7TVectorIjEE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::ImmutableString"* dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TVector.0"*) local_unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::ImmutableString"* dereferenceable(16) %1)
  %6 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %7 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %6, i64 40) #17
  %8 = bitcast i8* %7 to %"class.sh::TDeclarator"*
  tail call void @_ZN2sh11TDeclaratorC1ERKNS_15ImmutableStringEPKNS_7TVectorIjEERKNS_10TSourceLocE(%"class.sh::TDeclarator"* %8, %"class.sh::ImmutableString"* dereferenceable(16) %1, %"class.sh::TVector.0"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %2) #17
  ret %"class.sh::TDeclarator"* %8
}

declare void @_ZN2sh11TDeclaratorC1ERKNS_15ImmutableStringEPKNS_7TVectorIjEERKNS_10TSourceLocE(%"class.sh::TDeclarator"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.0"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext34checkDoesNotHaveDuplicateFieldNameENSt3__111__wrap_iterIPKPNS_6TFieldEEES7_RKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TField"**, %"class.sh::TField"**, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = icmp eq %"class.sh::TField"** %1, %2
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  br label %12

11:                                               ; preds = %31, %5
  ret void

12:                                               ; preds = %7, %31
  %13 = phi %"class.sh::TField"** [ %1, %7 ], [ %32, %31 ]
  %14 = load %"class.sh::TField"*, %"class.sh::TField"** %13, align 8
  %15 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %14, i64 0, i32 1, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = load i64, i64* %8, align 8
  %18 = icmp eq i64 %16, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %14, i64 0, i32 1, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  %23 = select i1 %22, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %21
  %24 = load i8*, i8** %9, align 8
  %25 = icmp eq i8* %24, null
  %26 = select i1 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %24
  %27 = tail call i32 @bcmp(i8* %23, i8* %26, i64 %16) #17
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %19
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.383, i64 0, i64 0), i8* %26) #17
  br label %31

31:                                               ; preds = %12, %19, %29
  %32 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %13, i64 1
  %33 = icmp eq %"class.sh::TField"** %32, %2
  br i1 %33, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TVector.1"* @_ZN2sh13TParseContext18addStructFieldListEPNS_7TVectorIPNS_6TFieldEEERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TVector.1"* readonly returned, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.sh::TField"**, %"class.sh::TField"*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.sh::TField"**, %"class.sh::TField"*** %6, align 8
  %8 = icmp eq %"class.sh::TField"** %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  br label %12

11:                                               ; preds = %45, %3
  ret %"class.sh::TVector.1"* %1

12:                                               ; preds = %49, %9
  %13 = phi %"class.sh::TField"** [ %7, %9 ], [ %46, %49 ]
  %14 = phi %"class.sh::TField"** [ %5, %9 ], [ %50, %49 ]
  %15 = phi %"class.sh::TField"** [ %5, %9 ], [ %47, %49 ]
  %16 = load %"class.sh::TField"*, %"class.sh::TField"** %15, align 8
  %17 = icmp eq %"class.sh::TField"** %14, %15
  br i1 %17, label %45, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %16, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %16, i64 0, i32 1, i32 0
  br label %21

21:                                               ; preds = %40, %18
  %22 = phi %"class.sh::TField"** [ %14, %18 ], [ %41, %40 ]
  %23 = load %"class.sh::TField"*, %"class.sh::TField"** %22, align 8
  %24 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %23, i64 0, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %19, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %28, label %40

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %23, i64 0, i32 1, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  %32 = select i1 %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %30
  %33 = load i8*, i8** %20, align 8
  %34 = icmp eq i8* %33, null
  %35 = select i1 %34, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %33
  %36 = tail call i32 @bcmp(i8* %32, i8* %35, i64 %25) #17
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %28
  %39 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %10, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %39, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.383, i64 0, i64 0), i8* %35) #17
  br label %40

40:                                               ; preds = %38, %28, %21
  %41 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %22, i64 1
  %42 = icmp eq %"class.sh::TField"** %41, %15
  br i1 %42, label %43, label %21

43:                                               ; preds = %40
  %44 = load %"class.sh::TField"**, %"class.sh::TField"*** %6, align 8
  br label %45

45:                                               ; preds = %43, %12
  %46 = phi %"class.sh::TField"** [ %44, %43 ], [ %13, %12 ]
  %47 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %15, i64 1
  %48 = icmp eq %"class.sh::TField"** %47, %46
  br i1 %48, label %11, label %49

49:                                               ; preds = %45
  %50 = load %"class.sh::TField"**, %"class.sh::TField"*** %4, align 8
  br label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TVector.1"* @_ZN2sh13TParseContext23combineStructFieldListsEPNS_7TVectorIPNS_6TFieldEEEPKS4_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TVector.1"* returned, %"class.sh::TVector.1"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.sh::TField"**, %"class.sh::TField"*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %2, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.sh::TField"**, %"class.sh::TField"*** %7, align 8
  %9 = icmp eq %"class.sh::TField"** %6, %8
  br i1 %9, label %19, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.sh::TField"*** %12 to i64*
  %16 = bitcast %"class.sh::TVector.1"* %1 to i64*
  %17 = bitcast %"class.sh::TField"*** %14 to i64*
  %18 = load %"class.sh::TField"**, %"class.sh::TField"*** %12, align 8
  br label %20

19:                                               ; preds = %271, %4
  ret %"class.sh::TVector.1"* %1

20:                                               ; preds = %10, %271
  %21 = phi %"class.sh::TField"** [ %18, %10 ], [ %272, %271 ]
  %22 = phi %"class.sh::TField"** [ %6, %10 ], [ %273, %271 ]
  %23 = bitcast %"class.sh::TField"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load %"class.sh::TField"**, %"class.sh::TField"*** %11, align 8
  %26 = inttoptr i64 %24 to %"class.sh::TField"*
  %27 = icmp eq %"class.sh::TField"** %25, %21
  br i1 %27, label %55, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %26, i64 0, i32 1, i32 1
  %30 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %26, i64 0, i32 1, i32 0
  br label %31

31:                                               ; preds = %50, %28
  %32 = phi %"class.sh::TField"** [ %25, %28 ], [ %51, %50 ]
  %33 = load %"class.sh::TField"*, %"class.sh::TField"** %32, align 8
  %34 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %33, i64 0, i32 1, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = load i64, i64* %29, align 8
  %37 = icmp eq i64 %35, %36
  br i1 %37, label %38, label %50

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %33, i64 0, i32 1, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  %42 = select i1 %41, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %40
  %43 = load i8*, i8** %30, align 8
  %44 = icmp eq i8* %43, null
  %45 = select i1 %44, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %43
  %46 = tail call i32 @bcmp(i8* %42, i8* %45, i64 %35) #17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %38
  %49 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %49, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.383, i64 0, i64 0), i8* %45) #17
  br label %50

50:                                               ; preds = %48, %38, %31
  %51 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %32, i64 1
  %52 = icmp eq %"class.sh::TField"** %51, %21
  br i1 %52, label %53, label %31

53:                                               ; preds = %50
  %54 = load %"class.sh::TField"**, %"class.sh::TField"*** %12, align 8
  br label %55

55:                                               ; preds = %53, %20
  %56 = phi %"class.sh::TField"** [ %54, %53 ], [ %21, %20 ]
  %57 = load %"class.sh::TField"**, %"class.sh::TField"*** %14, align 8
  %58 = icmp eq %"class.sh::TField"** %56, %57
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.sh::TField"** %56 to i64*
  store i64 %24, i64* %60, align 8
  %61 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %56, i64 1
  %62 = ptrtoint %"class.sh::TField"** %61 to i64
  store i64 %62, i64* %15, align 8
  br label %271

63:                                               ; preds = %55
  %64 = ptrtoint %"class.sh::TField"** %57 to i64
  %65 = load i64, i64* %16, align 8
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = bitcast %"class.sh::TVector.1"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #20
  unreachable

72:                                               ; preds = %63
  %73 = icmp ult i64 %67, 1152921504606846975
  br i1 %73, label %74, label %79

74:                                               ; preds = %72
  %75 = ashr exact i64 %66, 2
  %76 = icmp ult i64 %75, %68
  %77 = select i1 %76, i64 %68, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %74, %72
  %80 = phi i64 [ %77, %74 ], [ 2305843009213693951, %72 ]
  %81 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %82 = shl i64 %80, 3
  %83 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %81, i64 %82) #17
  %84 = bitcast i8* %83 to %"class.sh::TField"**
  br label %85

85:                                               ; preds = %79, %74
  %86 = phi i64 [ %80, %79 ], [ 0, %74 ]
  %87 = phi %"class.sh::TField"** [ %84, %79 ], [ null, %74 ]
  %88 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %87, i64 %67
  %89 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %87, i64 %86
  %90 = ptrtoint %"class.sh::TField"** %89 to i64
  %91 = bitcast %"class.sh::TField"** %88 to i64*
  store i64 %24, i64* %91, align 8
  %92 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %88, i64 1
  %93 = ptrtoint %"class.sh::TField"** %92 to i64
  %94 = load %"class.sh::TField"**, %"class.sh::TField"*** %11, align 8
  %95 = ptrtoint %"class.sh::TField"** %94 to i64
  %96 = load %"class.sh::TField"**, %"class.sh::TField"*** %12, align 8
  %97 = icmp eq %"class.sh::TField"** %96, %94
  br i1 %97, label %268, label %98

98:                                               ; preds = %85
  %99 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 -1
  %100 = ptrtoint %"class.sh::TField"** %99 to i64
  %101 = sub i64 %100, %95
  %102 = lshr i64 %101, 3
  %103 = add nuw nsw i64 %102, 1
  %104 = icmp ult i64 %103, 4
  br i1 %104, label %198, label %105

105:                                              ; preds = %98
  %106 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %87, i64 -1
  %107 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 -1
  %108 = ptrtoint %"class.sh::TField"** %107 to i64
  %109 = sub i64 %108, %95
  %110 = lshr i64 %109, 3
  %111 = sub nsw i64 %67, %110
  %112 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %106, i64 %111
  %113 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 -1
  %114 = sub nsw i64 0, %110
  %115 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %113, i64 %114
  %116 = icmp ult %"class.sh::TField"** %112, %96
  %117 = icmp ult %"class.sh::TField"** %115, %88
  %118 = and i1 %116, %117
  br i1 %118, label %198, label %119

119:                                              ; preds = %105
  %120 = and i64 %103, 4611686018427387900
  %121 = sub nsw i64 0, %120
  %122 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %88, i64 %121
  %123 = sub nsw i64 0, %120
  %124 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 %123
  %125 = add nsw i64 %120, -4
  %126 = lshr exact i64 %125, 2
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %125, 0
  br i1 %129, label %174, label %130

130:                                              ; preds = %119
  %131 = sub nuw nsw i64 %127, %128
  %132 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %88, i64 -1
  %133 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 -1
  %134 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %88, i64 -1
  %135 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 -1
  br label %136

136:                                              ; preds = %136, %130
  %137 = phi i64 [ 0, %130 ], [ %171, %136 ]
  %138 = phi i64 [ %131, %130 ], [ %172, %136 ]
  %139 = sub i64 0, %137
  %140 = sub i64 0, %137
  %141 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %132, i64 %139
  %142 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %133, i64 %140
  %143 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %142, i64 -1
  %144 = bitcast %"class.sh::TField"** %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !15
  %146 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %142, i64 -2
  %147 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %146, i64 -1
  %148 = bitcast %"class.sh::TField"** %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !15
  %150 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %141, i64 -1
  %151 = bitcast %"class.sh::TField"** %150 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %151, align 8, !alias.scope !18, !noalias !15
  %152 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %141, i64 -2
  %153 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  %154 = bitcast %"class.sh::TField"** %153 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %154, align 8, !alias.scope !18, !noalias !15
  %155 = sub nuw nsw i64 -4, %137
  %156 = sub nuw nsw i64 -4, %137
  %157 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %134, i64 %155
  %158 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %135, i64 %156
  %159 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %158, i64 -1
  %160 = bitcast %"class.sh::TField"** %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8, !alias.scope !15
  %162 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %158, i64 -2
  %163 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %162, i64 -1
  %164 = bitcast %"class.sh::TField"** %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !15
  %166 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %157, i64 -1
  %167 = bitcast %"class.sh::TField"** %166 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %167, align 8, !alias.scope !18, !noalias !15
  %168 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %157, i64 -2
  %169 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %168, i64 -1
  %170 = bitcast %"class.sh::TField"** %169 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %170, align 8, !alias.scope !18, !noalias !15
  %171 = add i64 %137, 8
  %172 = add i64 %138, -2
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %136, !llvm.loop !20

174:                                              ; preds = %136, %119
  %175 = phi i64 [ 0, %119 ], [ %171, %136 ]
  %176 = icmp eq i64 %128, 0
  br i1 %176, label %196, label %177

177:                                              ; preds = %174
  %178 = sub i64 0, %175
  %179 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %88, i64 -1
  %180 = sub i64 0, %175
  %181 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %96, i64 -1
  %182 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %179, i64 %178
  %183 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %181, i64 %180
  %184 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %183, i64 -1
  %185 = bitcast %"class.sh::TField"** %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !15
  %187 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %183, i64 -2
  %188 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %187, i64 -1
  %189 = bitcast %"class.sh::TField"** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8, !alias.scope !15
  %191 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %182, i64 -1
  %192 = bitcast %"class.sh::TField"** %191 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %192, align 8, !alias.scope !18, !noalias !15
  %193 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %182, i64 -2
  %194 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %193, i64 -1
  %195 = bitcast %"class.sh::TField"** %194 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %195, align 8, !alias.scope !18, !noalias !15
  br label %196

196:                                              ; preds = %174, %177
  %197 = icmp eq i64 %103, %120
  br i1 %197, label %268, label %198

198:                                              ; preds = %196, %105, %98
  %199 = phi %"class.sh::TField"** [ %88, %105 ], [ %88, %98 ], [ %122, %196 ]
  %200 = phi %"class.sh::TField"** [ %96, %105 ], [ %96, %98 ], [ %124, %196 ]
  %201 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %200, i64 -1
  %202 = ptrtoint %"class.sh::TField"** %201 to i64
  %203 = sub i64 %202, %95
  %204 = lshr i64 %203, 3
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %219, label %208

208:                                              ; preds = %198, %208
  %209 = phi %"class.sh::TField"** [ %212, %208 ], [ %199, %198 ]
  %210 = phi %"class.sh::TField"** [ %213, %208 ], [ %200, %198 ]
  %211 = phi i64 [ %217, %208 ], [ %206, %198 ]
  %212 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %209, i64 -1
  %213 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %210, i64 -1
  %214 = bitcast %"class.sh::TField"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.sh::TField"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = add i64 %211, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %208, !llvm.loop !22

219:                                              ; preds = %208, %198
  %220 = phi %"class.sh::TField"** [ undef, %198 ], [ %212, %208 ]
  %221 = phi %"class.sh::TField"** [ %199, %198 ], [ %212, %208 ]
  %222 = phi %"class.sh::TField"** [ %200, %198 ], [ %213, %208 ]
  %223 = icmp ult i64 %203, 56
  br i1 %223, label %268, label %224

224:                                              ; preds = %219, %224
  %225 = phi %"class.sh::TField"** [ %262, %224 ], [ %221, %219 ]
  %226 = phi %"class.sh::TField"** [ %263, %224 ], [ %222, %219 ]
  %227 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -1
  %228 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -1
  %229 = bitcast %"class.sh::TField"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.sh::TField"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -2
  %233 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -2
  %234 = bitcast %"class.sh::TField"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.sh::TField"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -3
  %238 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -3
  %239 = bitcast %"class.sh::TField"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.sh::TField"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -4
  %243 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -4
  %244 = bitcast %"class.sh::TField"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.sh::TField"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -5
  %248 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -5
  %249 = bitcast %"class.sh::TField"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.sh::TField"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -6
  %253 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -6
  %254 = bitcast %"class.sh::TField"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.sh::TField"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -7
  %258 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -7
  %259 = bitcast %"class.sh::TField"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.sh::TField"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %225, i64 -8
  %263 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %226, i64 -8
  %264 = bitcast %"class.sh::TField"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.sh::TField"** %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = icmp eq %"class.sh::TField"** %263, %94
  br i1 %267, label %268, label %224, !llvm.loop !24

268:                                              ; preds = %219, %224, %196, %85
  %269 = phi %"class.sh::TField"** [ %88, %85 ], [ %122, %196 ], [ %220, %219 ], [ %262, %224 ]
  %270 = ptrtoint %"class.sh::TField"** %269 to i64
  store i64 %270, i64* %16, align 8
  store i64 %93, i64* %15, align 8
  store i64 %90, i64* %17, align 8
  br label %271

271:                                              ; preds = %59, %268
  %272 = phi %"class.sh::TField"** [ %61, %59 ], [ %92, %268 ]
  %273 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %22, i64 1
  %274 = icmp eq %"class.sh::TField"** %273, %8
  br i1 %274, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TVector.1"* @_ZN2sh13TParseContext37addStructDeclaratorListWithQualifiersERKNS_21TTypeQualifierBuilderEPNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TTypeQualifierBuilder"* dereferenceable(32), %"struct.sh::TPublicType"*, %"class.sh::TVector.107"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.sh::TTypeQualifier", align 4
  %6 = bitcast %"struct.sh::TTypeQualifier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 128, i1 false)
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %8 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  call void @_ZNK2sh21TTypeQualifierBuilder24getVariableTypeQualifierEPNS_12TDiagnosticsE(%"struct.sh::TTypeQualifier"* nonnull sret %5, %"class.sh::TTypeQualifierBuilder"* %1, %"class.sh::TDiagnostics"* %8) #17
  %9 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 3
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 1
  %13 = bitcast %"struct.sh::TLayoutQualifier"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 4 %6, i64 89, i1 false)
  %14 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 5, i1 false)
  %16 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 4
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 4
  store i8 %17, i8* %18, align 8
  %19 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 5
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 5
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %"struct.sh::TTypeQualifier", %"struct.sh::TTypeQualifier"* %5, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %2, i64 0, i32 6
  store i32 %23, i32* %26, align 4
  br label %27

27:                                               ; preds = %4, %25
  %28 = call %"class.sh::TVector.1"* @_ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"* %0, %"struct.sh::TPublicType"* dereferenceable(160) %2, %"class.sh::TVector.107"* %3)
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #17
  ret %"class.sh::TVector.1"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TVector.1"* @_ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TPublicType"* dereferenceable(160), %"class.sh::TVector.107"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TSpan", align 8
  %5 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 4
  %6 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2sh13TParseContext23checkPrecisionSpecifiedERKNS_10TSourceLocENS_10TPrecisionENS_10TBasicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i32 %7, i32 %9)
  %10 = getelementptr inbounds %"class.sh::TVector.107", %"class.sh::TVector.107"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %8, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %10, align 8
  %15 = load %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %14, align 8
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %17 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %15, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  %21 = select i1 %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %19
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %17, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.81, i64 0, i64 0), i8* %21) #17
  br label %22

22:                                               ; preds = %3, %13
  %23 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 4
  %24 = tail call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %23) #17
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %43, label %26

26:                                               ; preds = %22, %32
  %27 = phi i64 [ %33, %32 ], [ 0, %22 ]
  %28 = tail call i32 @_ZNK2sh13WorkGroupSizeixEm(%"struct.sh::WorkGroupSize"* %23, i64 %27) #17
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = icmp ult i64 %27, 3
  br i1 %31, label %36, label %39

32:                                               ; preds = %26
  %33 = add nuw i64 %27, 1
  %34 = tail call i64 @_ZNK2sh13WorkGroupSize4sizeEv(%"struct.sh::WorkGroupSize"* %23) #17
  %35 = icmp ult i64 %33, %34
  br i1 %35, label %26, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2sh13TParseContext23addStructDeclaratorListERKNS_11TPublicTypeEPKNS_7TVectorIPNS_11TDeclaratorEEE, i64 0, i64 %27
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %30, %36
  %40 = phi i8* [ %38, %36 ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.519, i64 0, i64 0), %30 ]
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %42 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %41, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %42, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.144, i64 0, i64 0), i8* nonnull %40) #17
  br label %43

43:                                               ; preds = %32, %22, %39
  %44 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 10
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %49 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %48, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %49, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.160, i64 0, i64 0)) #17
  br label %50

50:                                               ; preds = %43, %47
  %51 = getelementptr inbounds %"struct.sh::TPublicType", %"struct.sh::TPublicType"* %1, i64 0, i32 1, i32 22
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %56 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %55, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %56, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.162, i64 0, i64 0)) #17
  br label %57

57:                                               ; preds = %50, %54
  %58 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %59 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %58, i64 24) #17
  %60 = bitcast i8* %59 to %"class.sh::TVector.1"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #17
  %61 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %10, align 8
  %62 = getelementptr inbounds %"class.sh::TVector.107", %"class.sh::TVector.107"* %2, i64 0, i32 0, i32 0, i32 1
  %63 = load %"class.sh::TDeclarator"**, %"class.sh::TDeclarator"*** %62, align 8
  %64 = icmp eq %"class.sh::TDeclarator"** %61, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %57
  %66 = bitcast %"class.sh::TSpan"* %4 to i8*
  %67 = bitcast %"class.sh::TSpan"* %4 to i64*
  %68 = getelementptr inbounds %"class.sh::TSpan", %"class.sh::TSpan"* %4, i64 0, i32 1
  %69 = getelementptr inbounds i8, i8* %59, i64 8
  %70 = bitcast i8* %69 to %"class.sh::TField"***
  %71 = getelementptr inbounds i8, i8* %59, i64 16
  %72 = bitcast i8* %71 to %"class.sh::TField"***
  %73 = bitcast i8* %69 to i64*
  %74 = bitcast i8* %59 to i64*
  %75 = bitcast i8* %71 to i64*
  %76 = bitcast i8* %59 to %"class.sh::TField"***
  br label %78

77:                                               ; preds = %327, %57
  ret %"class.sh::TVector.1"* %60

78:                                               ; preds = %65, %327
  %79 = phi %"class.sh::TDeclarator"** [ %61, %65 ], [ %328, %327 ]
  %80 = load %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %79, align 8
  %81 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %82 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %81, i64 184) #17
  %83 = bitcast i8* %82 to %"class.sh::TType"*
  call void @_ZN2sh5TTypeC1ERKNS_11TPublicTypeE(%"class.sh::TType"* %83, %"struct.sh::TPublicType"* dereferenceable(160) %1) #17
  %84 = call zeroext i1 @_ZNK2sh11TDeclarator7isArrayEv(%"class.sh::TDeclarator"* %80) #17
  br i1 %84, label %85, label %97

85:                                               ; preds = %78
  %86 = call zeroext i1 @_ZN2sh13TParseContext27checkArrayElementIsNotArrayERKNS_10TSourceLocERKNS_11TPublicTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, %"struct.sh::TPublicType"* dereferenceable(160) %1)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #17
  %87 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %80, i64 0, i32 1
  %88 = load %"class.sh::TVector.0"*, %"class.sh::TVector.0"** %87, align 8
  %89 = bitcast %"class.sh::TVector.0"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %67, align 8
  %91 = getelementptr inbounds %"class.sh::TVector.0", %"class.sh::TVector.0"* %88, i64 0, i32 0, i32 0, i32 1
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %89, align 8
  %95 = sub i64 %93, %94
  %96 = ashr exact i64 %95, 2
  store i64 %96, i64* %68, align 8
  call void @_ZN2sh5TType10makeArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %83, %"class.sh::TSpan"* nonnull dereferenceable(16) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #17
  br label %97

97:                                               ; preds = %85, %78
  %98 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %99 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %98, i64 48) #17
  %100 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %80, i64 0, i32 2
  %101 = bitcast i8* %99 to i8**
  store i8* %82, i8** %101, align 8
  %102 = getelementptr inbounds i8, i8* %99, i64 8
  %103 = bitcast %"class.sh::TDeclarator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false) #17
  %104 = getelementptr inbounds i8, i8* %99, i64 24
  %105 = bitcast %"struct.sh::TSourceLoc"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 4 %105, i64 16, i1 false) #17
  %106 = getelementptr inbounds i8, i8* %99, i64 40
  store i8 1, i8* %106, align 8
  %107 = ptrtoint i8* %99 to i64
  %108 = bitcast i8* %99 to %"class.sh::TField"*
  call void @_ZN2sh13TParseContext30checkIsBelowStructNestingLimitERKNS_10TSourceLocERKNS_6TFieldE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %5, %"class.sh::TField"* dereferenceable(48) %108)
  %109 = load %"class.sh::TField"**, %"class.sh::TField"*** %70, align 8
  %110 = load %"class.sh::TField"**, %"class.sh::TField"*** %72, align 8
  %111 = icmp eq %"class.sh::TField"** %109, %110
  %112 = ptrtoint %"class.sh::TField"** %110 to i64
  br i1 %111, label %117, label %113

113:                                              ; preds = %97
  %114 = bitcast %"class.sh::TField"** %109 to i64*
  store i64 %107, i64* %114, align 8
  %115 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %109, i64 1
  %116 = ptrtoint %"class.sh::TField"** %115 to i64
  store i64 %116, i64* %73, align 8
  br label %327

117:                                              ; preds = %97
  %118 = ptrtoint %"class.sh::TField"** %109 to i64
  %119 = load i64, i64* %74, align 8
  %120 = sub i64 %118, %119
  %121 = ashr exact i64 %120, 3
  %122 = add nsw i64 %121, 1
  %123 = icmp ugt i64 %122, 2305843009213693951
  br i1 %123, label %124, label %126

124:                                              ; preds = %117
  %125 = bitcast i8* %59 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %125) #20
  unreachable

126:                                              ; preds = %117
  %127 = sub i64 %112, %119
  %128 = ashr exact i64 %127, 3
  %129 = icmp ult i64 %128, 1152921504606846975
  br i1 %129, label %130, label %135

130:                                              ; preds = %126
  %131 = ashr exact i64 %127, 2
  %132 = icmp ult i64 %131, %122
  %133 = select i1 %132, i64 %122, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %130, %126
  %136 = phi i64 [ %133, %130 ], [ 2305843009213693951, %126 ]
  %137 = call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %138 = shl i64 %136, 3
  %139 = call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %137, i64 %138) #17
  %140 = bitcast i8* %139 to %"class.sh::TField"**
  br label %141

141:                                              ; preds = %135, %130
  %142 = phi i64 [ %136, %135 ], [ 0, %130 ]
  %143 = phi %"class.sh::TField"** [ %140, %135 ], [ null, %130 ]
  %144 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %143, i64 %121
  %145 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %143, i64 %142
  %146 = ptrtoint %"class.sh::TField"** %145 to i64
  %147 = bitcast %"class.sh::TField"** %144 to i64*
  store i64 %107, i64* %147, align 8
  %148 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %144, i64 1
  %149 = ptrtoint %"class.sh::TField"** %148 to i64
  %150 = load %"class.sh::TField"**, %"class.sh::TField"*** %76, align 8
  %151 = ptrtoint %"class.sh::TField"** %150 to i64
  %152 = load %"class.sh::TField"**, %"class.sh::TField"*** %70, align 8
  %153 = icmp eq %"class.sh::TField"** %152, %150
  br i1 %153, label %324, label %154

154:                                              ; preds = %141
  %155 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  %156 = ptrtoint %"class.sh::TField"** %155 to i64
  %157 = sub i64 %156, %151
  %158 = lshr i64 %157, 3
  %159 = add nuw nsw i64 %158, 1
  %160 = icmp ult i64 %159, 4
  br i1 %160, label %254, label %161

161:                                              ; preds = %154
  %162 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %143, i64 -1
  %163 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  %164 = ptrtoint %"class.sh::TField"** %163 to i64
  %165 = sub i64 %164, %151
  %166 = lshr i64 %165, 3
  %167 = sub nsw i64 %121, %166
  %168 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %162, i64 %167
  %169 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  %170 = sub nsw i64 0, %166
  %171 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %169, i64 %170
  %172 = icmp ult %"class.sh::TField"** %168, %152
  %173 = icmp ult %"class.sh::TField"** %171, %144
  %174 = and i1 %172, %173
  br i1 %174, label %254, label %175

175:                                              ; preds = %161
  %176 = and i64 %159, 4611686018427387900
  %177 = sub nsw i64 0, %176
  %178 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %144, i64 %177
  %179 = sub nsw i64 0, %176
  %180 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 %179
  %181 = add nsw i64 %176, -4
  %182 = lshr exact i64 %181, 2
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 1
  %185 = icmp eq i64 %181, 0
  br i1 %185, label %230, label %186

186:                                              ; preds = %175
  %187 = sub nuw nsw i64 %183, %184
  %188 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %144, i64 -1
  %189 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  %190 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %144, i64 -1
  %191 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  br label %192

192:                                              ; preds = %192, %186
  %193 = phi i64 [ 0, %186 ], [ %227, %192 ]
  %194 = phi i64 [ %187, %186 ], [ %228, %192 ]
  %195 = sub i64 0, %193
  %196 = sub i64 0, %193
  %197 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %188, i64 %195
  %198 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %189, i64 %196
  %199 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %198, i64 -1
  %200 = bitcast %"class.sh::TField"** %199 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8, !alias.scope !25
  %202 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %198, i64 -2
  %203 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %202, i64 -1
  %204 = bitcast %"class.sh::TField"** %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8, !alias.scope !25
  %206 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %197, i64 -1
  %207 = bitcast %"class.sh::TField"** %206 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %207, align 8, !alias.scope !28, !noalias !25
  %208 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %197, i64 -2
  %209 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %208, i64 -1
  %210 = bitcast %"class.sh::TField"** %209 to <2 x i64>*
  store <2 x i64> %205, <2 x i64>* %210, align 8, !alias.scope !28, !noalias !25
  %211 = sub nuw nsw i64 -4, %193
  %212 = sub nuw nsw i64 -4, %193
  %213 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %190, i64 %211
  %214 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %191, i64 %212
  %215 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %214, i64 -1
  %216 = bitcast %"class.sh::TField"** %215 to <2 x i64>*
  %217 = load <2 x i64>, <2 x i64>* %216, align 8, !alias.scope !25
  %218 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %214, i64 -2
  %219 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %218, i64 -1
  %220 = bitcast %"class.sh::TField"** %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !alias.scope !25
  %222 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %213, i64 -1
  %223 = bitcast %"class.sh::TField"** %222 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %223, align 8, !alias.scope !28, !noalias !25
  %224 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %213, i64 -2
  %225 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %224, i64 -1
  %226 = bitcast %"class.sh::TField"** %225 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %226, align 8, !alias.scope !28, !noalias !25
  %227 = add i64 %193, 8
  %228 = add i64 %194, -2
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %192, !llvm.loop !30

230:                                              ; preds = %192, %175
  %231 = phi i64 [ 0, %175 ], [ %227, %192 ]
  %232 = icmp eq i64 %184, 0
  br i1 %232, label %252, label %233

233:                                              ; preds = %230
  %234 = sub i64 0, %231
  %235 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %144, i64 -1
  %236 = sub i64 0, %231
  %237 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %152, i64 -1
  %238 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %235, i64 %234
  %239 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %237, i64 %236
  %240 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %239, i64 -1
  %241 = bitcast %"class.sh::TField"** %240 to <2 x i64>*
  %242 = load <2 x i64>, <2 x i64>* %241, align 8, !alias.scope !25
  %243 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %239, i64 -2
  %244 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %243, i64 -1
  %245 = bitcast %"class.sh::TField"** %244 to <2 x i64>*
  %246 = load <2 x i64>, <2 x i64>* %245, align 8, !alias.scope !25
  %247 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %238, i64 -1
  %248 = bitcast %"class.sh::TField"** %247 to <2 x i64>*
  store <2 x i64> %242, <2 x i64>* %248, align 8, !alias.scope !28, !noalias !25
  %249 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %238, i64 -2
  %250 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %249, i64 -1
  %251 = bitcast %"class.sh::TField"** %250 to <2 x i64>*
  store <2 x i64> %246, <2 x i64>* %251, align 8, !alias.scope !28, !noalias !25
  br label %252

252:                                              ; preds = %230, %233
  %253 = icmp eq i64 %159, %176
  br i1 %253, label %324, label %254

254:                                              ; preds = %252, %161, %154
  %255 = phi %"class.sh::TField"** [ %144, %161 ], [ %144, %154 ], [ %178, %252 ]
  %256 = phi %"class.sh::TField"** [ %152, %161 ], [ %152, %154 ], [ %180, %252 ]
  %257 = getelementptr %"class.sh::TField"*, %"class.sh::TField"** %256, i64 -1
  %258 = ptrtoint %"class.sh::TField"** %257 to i64
  %259 = sub i64 %258, %151
  %260 = lshr i64 %259, 3
  %261 = add nuw nsw i64 %260, 1
  %262 = and i64 %261, 7
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %275, label %264

264:                                              ; preds = %254, %264
  %265 = phi %"class.sh::TField"** [ %268, %264 ], [ %255, %254 ]
  %266 = phi %"class.sh::TField"** [ %269, %264 ], [ %256, %254 ]
  %267 = phi i64 [ %273, %264 ], [ %262, %254 ]
  %268 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %265, i64 -1
  %269 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %266, i64 -1
  %270 = bitcast %"class.sh::TField"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.sh::TField"** %268 to i64*
  store i64 %271, i64* %272, align 8
  %273 = add i64 %267, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %264, !llvm.loop !31

275:                                              ; preds = %264, %254
  %276 = phi %"class.sh::TField"** [ undef, %254 ], [ %268, %264 ]
  %277 = phi %"class.sh::TField"** [ %255, %254 ], [ %268, %264 ]
  %278 = phi %"class.sh::TField"** [ %256, %254 ], [ %269, %264 ]
  %279 = icmp ult i64 %259, 56
  br i1 %279, label %324, label %280

280:                                              ; preds = %275, %280
  %281 = phi %"class.sh::TField"** [ %318, %280 ], [ %277, %275 ]
  %282 = phi %"class.sh::TField"** [ %319, %280 ], [ %278, %275 ]
  %283 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -1
  %284 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -1
  %285 = bitcast %"class.sh::TField"** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"class.sh::TField"** %283 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -2
  %289 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -2
  %290 = bitcast %"class.sh::TField"** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %"class.sh::TField"** %288 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -3
  %294 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -3
  %295 = bitcast %"class.sh::TField"** %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.sh::TField"** %293 to i64*
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -4
  %299 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -4
  %300 = bitcast %"class.sh::TField"** %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = bitcast %"class.sh::TField"** %298 to i64*
  store i64 %301, i64* %302, align 8
  %303 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -5
  %304 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -5
  %305 = bitcast %"class.sh::TField"** %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.sh::TField"** %303 to i64*
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -6
  %309 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -6
  %310 = bitcast %"class.sh::TField"** %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.sh::TField"** %308 to i64*
  store i64 %311, i64* %312, align 8
  %313 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -7
  %314 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -7
  %315 = bitcast %"class.sh::TField"** %314 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = bitcast %"class.sh::TField"** %313 to i64*
  store i64 %316, i64* %317, align 8
  %318 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %281, i64 -8
  %319 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %282, i64 -8
  %320 = bitcast %"class.sh::TField"** %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = bitcast %"class.sh::TField"** %318 to i64*
  store i64 %321, i64* %322, align 8
  %323 = icmp eq %"class.sh::TField"** %319, %150
  br i1 %323, label %324, label %280, !llvm.loop !32

324:                                              ; preds = %275, %280, %252, %141
  %325 = phi %"class.sh::TField"** [ %144, %141 ], [ %178, %252 ], [ %276, %275 ], [ %318, %280 ]
  %326 = ptrtoint %"class.sh::TField"** %325 to i64
  store i64 %326, i64* %74, align 8
  store i64 %149, i64* %73, align 8
  store i64 %146, i64* %75, align 8
  br label %327

327:                                              ; preds = %113, %324
  %328 = getelementptr inbounds %"class.sh::TDeclarator"*, %"class.sh::TDeclarator"** %79, i64 1
  %329 = icmp eq %"class.sh::TDeclarator"** %328, %63
  br i1 %329, label %77, label %78
}

declare zeroext i1 @_ZNK2sh11TDeclarator7isArrayEv(%"class.sh::TDeclarator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext12addStructureERKNS_10TSourceLocES3_RKNS_15ImmutableStringEPNS_7TVectorIPNS_6TFieldEEE(%"struct.sh::TTypeSpecifierNonArray"* noalias nocapture sret, %"class.sh::TParseContext"* nocapture, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.1"*) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.sh::TSpan", align 8
  %8 = alloca %"struct.sh::TMemoryQualifier", align 8
  %9 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = select i1 %11, i8 3, i8 1
  %13 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %14 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %13, i64 80) #17
  %15 = bitcast i8* %14 to %"class.sh::TStructure"*
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 0
  %17 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %16, align 8
  tail call void @_ZN2sh10TStructureC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEENS_10SymbolTypeE(%"class.sh::TStructure"* %15, %"class.sh::TSymbolTable"* %17, %"class.sh::ImmutableString"* dereferenceable(16) %4, %"class.sh::TVector.1"* %5, i8 zeroext %12) #17
  %18 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %16, align 8
  %19 = tail call zeroext i1 @_ZNK2sh12TSymbolTable13atGlobalLevelEv(%"class.sh::TSymbolTable"* %18) #17
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds i8, i8* %14, i64 72
  store i8 %20, i8* %21, align 8
  br i1 %11, label %34, label %22

22:                                               ; preds = %6
  %23 = tail call zeroext i1 @_ZN2sh13TParseContext18checkIsNotReservedERKNS_10TSourceLocERKNS_15ImmutableStringE(%"class.sh::TParseContext"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"class.sh::ImmutableString"* dereferenceable(16) %4)
  %24 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %16, align 8
  %25 = bitcast i8* %14 to %"class.sh::TSymbol"*
  %26 = tail call zeroext i1 @_ZN2sh12TSymbolTable7declareEPNS_7TSymbolE(%"class.sh::TSymbolTable"* %24, %"class.sh::TSymbol"* %25) #17
  br i1 %26, label %34, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %29 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %28, align 8
  %30 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %4, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  %33 = select i1 %32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %31
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %29, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.384, i64 0, i64 0), i8* %33) #17
  br label %34

34:                                               ; preds = %6, %22, %27
  %35 = getelementptr inbounds %"class.sh::TVector.1", %"class.sh::TVector.1"* %5, i64 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.sh::TField"*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.sh::TVector.1"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %37, %39
  br i1 %40, label %47, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 25
  %43 = bitcast %"class.sh::TSpan"* %7 to i8*
  %44 = getelementptr inbounds %"struct.sh::TMemoryQualifier", %"struct.sh::TMemoryQualifier"* %8, i64 0, i32 0
  %45 = bitcast %"struct.sh::TMemoryQualifier"* %8 to i40*
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 7
  br label %61

47:                                               ; preds = %140, %34
  %48 = bitcast %"struct.sh::TTypeSpecifierNonArray"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 -86, i64 40, i1 false)
  %49 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %0, i64 0, i32 0
  store i32 90, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %0, i64 0, i32 1
  store i8 1, i8* %50, align 4
  %51 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %0, i64 0, i32 2
  store i8 1, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %0, i64 0, i32 3
  %53 = bitcast %"class.sh::TStructure"** %52 to i8**
  store i8* %14, i8** %53, align 8
  %54 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %0, i64 0, i32 4
  %55 = bitcast %"struct.sh::TSourceLoc"* %54 to i8*
  %56 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 4 %56, i64 16, i1 false) #17
  %57 = getelementptr inbounds %"struct.sh::TTypeSpecifierNonArray", %"struct.sh::TTypeSpecifierNonArray"* %0, i64 0, i32 5
  store i8 1, i8* %57, align 8
  %58 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %1, i64 0, i32 11
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %58, align 4
  ret void

61:                                               ; preds = %41, %140
  %62 = phi i64 [ %39, %41 ], [ %144, %140 ]
  %63 = phi i64 [ 0, %41 ], [ %142, %140 ]
  %64 = phi i32 [ 0, %41 ], [ %141, %140 ]
  %65 = inttoptr i64 %62 to %"class.sh::TField"**
  %66 = getelementptr inbounds %"class.sh::TField"*, %"class.sh::TField"** %65, i64 %63
  %67 = load %"class.sh::TField"*, %"class.sh::TField"** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %67, i64 0, i32 0
  %69 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  %70 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %69, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = icmp ult i32 %71, 2
  br i1 %72, label %78, label %73

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %67, i64 0, i32 2
  %75 = call i8* @_ZN2sh18getQualifierStringENS_10TQualifierE(i32 %71)
  %76 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %76, %"struct.sh::TSourceLoc"* dereferenceable(16) %74, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.385, i64 0, i64 0), i8* %75) #17
  %77 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  br label %78

78:                                               ; preds = %61, %73
  %79 = phi %"class.sh::TType"* [ %69, %61 ], [ %77, %73 ]
  %80 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %79, i64 0, i32 3
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %67, i64 0, i32 2
  %85 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %85, %"struct.sh::TSourceLoc"* dereferenceable(16) %84, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.385, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.171, i64 0, i64 0)) #17
  %86 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  br label %87

87:                                               ; preds = %78, %83
  %88 = phi %"class.sh::TType"* [ %79, %78 ], [ %86, %83 ]
  %89 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, -51
  %92 = icmp ult i32 %91, 33
  %93 = icmp eq i32 %90, 6
  %94 = or i1 %93, %92
  br i1 %94, label %95, label %100

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %67, i64 0, i32 2
  %97 = call i8* @_ZN2sh14getBasicStringENS_10TBasicTypeE(i32 %90) #17
  %98 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %98, %"struct.sh::TSourceLoc"* dereferenceable(16) %96, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.386, i64 0, i64 0), i8* %97) #17
  %99 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  br label %100

100:                                              ; preds = %87, %95
  %101 = phi %"class.sh::TType"* [ %88, %87 ], [ %99, %95 ]
  %102 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %67, i64 0, i32 2
  %103 = call zeroext i1 @_ZNK2sh5TType14isUnsizedArrayEv(%"class.sh::TType"* %101) #17
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  %106 = getelementptr inbounds %"class.sh::TField", %"class.sh::TField"* %67, i64 0, i32 1, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  %109 = select i1 %108, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %107
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %105, %"struct.sh::TSourceLoc"* dereferenceable(16) %102, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.387, i64 0, i64 0), i8* %109) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #17
  call void @_ZN2sh5TType17sizeUnsizedArraysERKNS_5TSpanIKjEE(%"class.sh::TType"* %101, %"class.sh::TSpan"* nonnull dereferenceable(16) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  br label %110

110:                                              ; preds = %100, %104
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %44) #17
  %111 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  %112 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %111, i64 0, i32 5
  %113 = bitcast %"struct.sh::TMemoryQualifier"* %112 to i40*
  %114 = load i40, i40* %113, align 2
  store i40 %114, i40* %45, align 8
  call void @_ZN2sh13TParseContext34checkMemoryQualifierIsNotSpecifiedERKNS_16TMemoryQualifierERKNS_10TSourceLocE(%"class.sh::TParseContext"* %1, %"struct.sh::TMemoryQualifier"* nonnull dereferenceable(5) %8, %"struct.sh::TSourceLoc"* dereferenceable(16) %102)
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %44) #17
  %115 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  %116 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %115, i64 0, i32 7, i32 20
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %122, label %119

119:                                              ; preds = %110
  %120 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %120, %"struct.sh::TSourceLoc"* dereferenceable(16) %102, i8* getelementptr inbounds ([140 x i8], [140 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i64 0, i64 0)) #17
  %121 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  br label %122

122:                                              ; preds = %110, %119
  %123 = phi %"class.sh::TType"* [ %115, %110 ], [ %121, %119 ]
  %124 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %123, i64 0, i32 7, i32 5
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %130, label %127

127:                                              ; preds = %122
  %128 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %128, %"struct.sh::TSourceLoc"* dereferenceable(16) %102, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.148, i64 0, i64 0)) #17
  %129 = load %"class.sh::TType"*, %"class.sh::TType"** %68, align 8
  br label %130

130:                                              ; preds = %122, %127
  %131 = phi %"class.sh::TType"* [ %123, %122 ], [ %129, %127 ]
  %132 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %131, i64 0, i32 7, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, -1
  br i1 %134, label %140, label %135

135:                                              ; preds = %130
  %136 = load i32, i32* %46, align 8
  %137 = icmp sgt i32 %136, 309
  %138 = select i1 %137, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.86, i64 0, i64 0)
  %139 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %42, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %139, %"struct.sh::TSourceLoc"* dereferenceable(16) %102, i8* %138, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.85, i64 0, i64 0)) #17
  br label %140

140:                                              ; preds = %130, %135
  %141 = add i32 %64, 1
  %142 = zext i32 %141 to i64
  %143 = load i64, i64* %36, align 8
  %144 = load i64, i64* %38, align 8
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 3
  %147 = icmp ugt i64 %146, %142
  br i1 %147, label %61, label %47
}

declare void @_ZN2sh10TStructureC1EPNS_12TSymbolTableERKNS_15ImmutableStringEPKNS_7TVectorIPNS_6TFieldEEENS_10SymbolTypeE(%"class.sh::TStructure"*, %"class.sh::TSymbolTable"*, %"class.sh::ImmutableString"* dereferenceable(16), %"class.sh::TVector.1"*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermSwitch"* @_ZN2sh13TParseContext9addSwitchEPNS_12TIntermTypedEPNS_12TIntermBlockERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %6 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %6, i64 31
  %8 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %7, align 8
  %9 = tail call dereferenceable(184) %"class.sh::TType"* %8(%"class.sh::TIntermTyped"* %1) #17
  %10 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -3
  %13 = icmp ugt i32 %12, 1
  br i1 %13, label %46, label %14

14:                                               ; preds = %4
  %15 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %16 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %15, i64 31
  %17 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %16, align 8
  %18 = tail call dereferenceable(184) %"class.sh::TType"* %17(%"class.sh::TIntermTyped"* %1) #17
  %19 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 8
  %20 = load i8, i8* %19, align 8
  %21 = icmp ugt i8 %20, 1
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %18, i64 0, i32 9
  %23 = load i8, i8* %22, align 1
  %24 = icmp ugt i8 %23, 1
  %25 = and i1 %21, %24
  br i1 %25, label %46, label %26

26:                                               ; preds = %14
  %27 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %28 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %27, i64 31
  %29 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %28, align 8
  %30 = tail call dereferenceable(184) %"class.sh::TType"* %29(%"class.sh::TIntermTyped"* %1) #17
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 10, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %26
  %35 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %5, align 8
  %36 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %35, i64 31
  %37 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %36, align 8
  %38 = tail call dereferenceable(184) %"class.sh::TType"* %37(%"class.sh::TIntermTyped"* %1) #17
  %39 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %38, i64 0, i32 8
  %40 = load i8, i8* %39, align 8
  %41 = icmp ugt i8 %40, 1
  %42 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %38, i64 0, i32 9
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 1
  %45 = and i1 %41, %44
  br i1 %45, label %46, label %50

46:                                               ; preds = %26, %4, %34, %14
  %47 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %49 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %48, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %49, %"struct.sh::TSourceLoc"* dereferenceable(16) %47, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.388, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.389, i64 0, i64 0)) #17
  br label %100

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %52 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %51, align 8
  %53 = tail call zeroext i1 @_ZN2sh27ValidateSwitchStatementListENS_10TBasicTypeEPNS_12TDiagnosticsEPNS_12TIntermBlockERKNS_10TSourceLocE(i32 %11, %"class.sh::TDiagnostics"* %52, %"class.sh::TIntermBlock"* %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3) #17
  br i1 %53, label %54, label %100

54:                                               ; preds = %50, %65
  %55 = phi %"class.sh::TIntermTyped"* [ %67, %65 ], [ %1, %50 ]
  %56 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %55, i64 0, i32 0
  %57 = bitcast %"class.sh::TIntermTyped"* %55 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %58 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %58, i64 12
  %60 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %59, align 8
  %61 = tail call %"class.sh::TIntermSwizzle"* %60(%"class.sh::TIntermNode"* %56) #17
  %62 = icmp eq %"class.sh::TIntermSwizzle"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %61, i64 0, i32 1
  br label %65

65:                                               ; preds = %80, %63
  %66 = phi %"class.sh::TIntermTyped"** [ %64, %63 ], [ %81, %80 ]
  %67 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %66, align 8
  br label %54

68:                                               ; preds = %54
  %69 = bitcast %"class.sh::TIntermTyped"* %55 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %70 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %70, i64 13
  %72 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %71, align 8
  %73 = tail call %"class.sh::TIntermBinary"* %72(%"class.sh::TIntermNode"* %56) #17
  %74 = icmp eq %"class.sh::TIntermBinary"* %73, null
  br i1 %74, label %82, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %73, i64 0, i32 0, i32 1
  %77 = load i8, i8* %76, align 8
  %78 = and i8 %77, -4
  %79 = icmp eq i8 %78, 44
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %73, i64 0, i32 2
  br label %65

82:                                               ; preds = %68
  %83 = bitcast %"class.sh::TIntermTyped"* %55 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %84 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %84, i64 19
  %86 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %85, align 8
  %87 = tail call %"class.sh::TIntermSymbol"* %86(%"class.sh::TIntermNode"* %56) #17
  %88 = icmp eq %"class.sh::TIntermSymbol"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %91 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %90, align 8
  %92 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %87, i64 0, i32 1
  %93 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %92, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %91, %"class.sh::TVariable"* dereferenceable(40) %93) #17
  br label %94

94:                                               ; preds = %75, %82, %89
  %95 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %96 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %95, i64 40) #17
  %97 = bitcast i8* %96 to %"class.sh::TIntermSwitch"*
  tail call void @_ZN2sh13TIntermSwitchC1EPNS_12TIntermTypedEPNS_12TIntermBlockE(%"class.sh::TIntermSwitch"* %97, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermBlock"* %2) #17
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 4 %99, i64 16, i1 false) #17
  br label %100

100:                                              ; preds = %50, %94, %46
  %101 = phi %"class.sh::TIntermSwitch"* [ null, %46 ], [ %97, %94 ], [ null, %50 ]
  ret %"class.sh::TIntermSwitch"* %101
}

declare zeroext i1 @_ZN2sh27ValidateSwitchStatementListENS_10TBasicTypeEPNS_12TDiagnosticsEPNS_12TIntermBlockERKNS_10TSourceLocE(i32, %"class.sh::TDiagnostics"*, %"class.sh::TIntermBlock"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN2sh13TIntermSwitchC1EPNS_12TIntermTypedEPNS_12TIntermBlockE(%"class.sh::TIntermSwitch"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermBlock"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermCase"* @_ZN2sh13TParseContext7addCaseEPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %9 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %8, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %9, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.390, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.391, i64 0, i64 0)) #17
  br label %97

10:                                               ; preds = %3
  %11 = icmp eq %"class.sh::TIntermTyped"* %1, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %14 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %13, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %14, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.392, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.391, i64 0, i64 0)) #17
  br label %97

15:                                               ; preds = %10
  %16 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %17 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %17, i64 31
  %19 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, align 8
  %20 = tail call dereferenceable(184) %"class.sh::TType"* %19(%"class.sh::TIntermTyped"* nonnull %1) #17
  %21 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %32, label %24

24:                                               ; preds = %15
  %25 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %26 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, i64 31
  %27 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %26, align 8
  %28 = tail call dereferenceable(184) %"class.sh::TType"* %27(%"class.sh::TIntermTyped"* nonnull %1) #17
  %29 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 4
  br i1 %31, label %32, label %64

32:                                               ; preds = %24, %15
  %33 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %34 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %33, i64 31
  %35 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %34, align 8
  %36 = tail call dereferenceable(184) %"class.sh::TType"* %35(%"class.sh::TIntermTyped"* nonnull %1) #17
  %37 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %36, i64 0, i32 8
  %38 = load i8, i8* %37, align 8
  %39 = icmp ugt i8 %38, 1
  %40 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %36, i64 0, i32 9
  %41 = load i8, i8* %40, align 1
  %42 = icmp ugt i8 %41, 1
  %43 = and i1 %39, %42
  br i1 %43, label %64, label %44

44:                                               ; preds = %32
  %45 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %46 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %45, i64 31
  %47 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %46, align 8
  %48 = tail call dereferenceable(184) %"class.sh::TType"* %47(%"class.sh::TIntermTyped"* nonnull %1) #17
  %49 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 10, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %44
  %53 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %54 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %53, i64 31
  %55 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %54, align 8
  %56 = tail call dereferenceable(184) %"class.sh::TType"* %55(%"class.sh::TIntermTyped"* nonnull %1) #17
  %57 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %56, i64 0, i32 8
  %58 = load i8, i8* %57, align 8
  %59 = icmp ugt i8 %58, 1
  %60 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %56, i64 0, i32 9
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 1
  %63 = and i1 %59, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %44, %24, %52, %32
  %65 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %67 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %66, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %67, %"struct.sh::TSourceLoc"* dereferenceable(16) %65, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.393, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.391, i64 0, i64 0)) #17
  br label %68

68:                                               ; preds = %64, %52
  %69 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0
  %70 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %71 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %70, align 8
  %72 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %71, i64 5
  %73 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %72, align 8
  %74 = tail call %"class.sh::TIntermConstantUnion"* %73(%"class.sh::TIntermNode"* %69) #17
  %75 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %16, align 8
  %76 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %75, i64 31
  %77 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %76, align 8
  %78 = tail call dereferenceable(184) %"class.sh::TType"* %77(%"class.sh::TIntermTyped"* nonnull %1) #17
  %79 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %78, i64 0, i32 2
  %80 = load i32, i32* %79, align 8
  %81 = icmp ne i32 %80, 2
  %82 = icmp eq %"class.sh::TIntermConstantUnion"* %74, null
  %83 = or i1 %82, %81
  br i1 %83, label %84, label %88

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %1, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %87 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %86, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %87, %"struct.sh::TSourceLoc"* dereferenceable(16) %85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.394, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.391, i64 0, i64 0)) #17
  br label %88

88:                                               ; preds = %68, %84
  %89 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %90 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %89, i64 32) #17
  %91 = bitcast i8* %90 to %"class.sh::TIntermCase"*
  %92 = bitcast i8* %90 to i32 (...)***
  %93 = getelementptr inbounds i8, i8* %90, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh11TIntermCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %94 = getelementptr inbounds i8, i8* %90, i64 24
  %95 = bitcast i8* %94 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"** %95, align 8
  %96 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 4 %96, i64 16, i1 false) #17
  br label %97

97:                                               ; preds = %88, %12, %7
  %98 = phi %"class.sh::TIntermCase"* [ null, %7 ], [ null, %12 ], [ %91, %88 ]
  ret %"class.sh::TIntermCase"* %98
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermCase"* @_ZN2sh13TParseContext10addDefaultERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %8 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %7, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %8, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.395, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.396, i64 0, i64 0)) #17
  br label %18

9:                                                ; preds = %2
  %10 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %11 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %10, i64 32) #17
  %12 = bitcast i8* %11 to %"class.sh::TIntermCase"*
  %13 = bitcast i8* %11 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh11TIntermCaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %16, align 8
  %17 = bitcast %"struct.sh::TSourceLoc"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 4 %17, i64 16, i1 false) #17
  br label %18

18:                                               ; preds = %9, %6
  %19 = phi %"class.sh::TIntermCase"* [ null, %6 ], [ %12, %9 ]
  ret %"class.sh::TIntermCase"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext15createUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocEPKNS_9TFunctionE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TFunction"*) local_unnamed_addr #2 align 2 {
  switch i8 %1, label %6 [
    i8 6, label %8
    i8 7, label %55
    i8 8, label %98
    i8 10, label %98
    i8 9, label %98
    i8 11, label %98
    i8 4, label %98
    i8 5, label %98
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  br label %162

8:                                                ; preds = %5
  %9 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %10 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, i64 31
  %12 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, align 8
  %13 = tail call dereferenceable(184) %"class.sh::TType"* %12(%"class.sh::TIntermTyped"* %2) #17
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 5
  br i1 %16, label %17, label %49

17:                                               ; preds = %8
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %19 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, i64 31
  %20 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.sh::TType"* %20(%"class.sh::TIntermTyped"* %2) #17
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 8
  %23 = load i8, i8* %22, align 8
  %24 = icmp ugt i8 %23, 1
  %25 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 9
  %26 = load i8, i8* %25, align 1
  %27 = icmp ugt i8 %26, 1
  %28 = and i1 %24, %27
  br i1 %28, label %49, label %29

29:                                               ; preds = %17
  %30 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %31 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %30, i64 31
  %32 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %31, align 8
  %33 = tail call dereferenceable(184) %"class.sh::TType"* %32(%"class.sh::TIntermTyped"* %2) #17
  %34 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %33, i64 0, i32 10, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %29
  %38 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %39 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %38, i64 31
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %39, align 8
  %41 = tail call dereferenceable(184) %"class.sh::TType"* %40(%"class.sh::TIntermTyped"* %2) #17
  %42 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %41, i64 0, i32 8
  %43 = load i8, i8* %42, align 8
  %44 = icmp ugt i8 %43, 1
  %45 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %41, i64 0, i32 9
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 1
  %48 = and i1 %44, %47
  br i1 %48, label %49, label %162

49:                                               ; preds = %29, %8, %37, %17
  %50 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext 6) #17
  %51 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %52 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %51, i64 31
  %53 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %52, align 8
  %54 = tail call dereferenceable(184) %"class.sh::TType"* %53(%"class.sh::TIntermTyped"* %2) #17
  tail call void @_ZN2sh13TParseContext12unaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* %50, %"class.sh::TType"* dereferenceable(184) %54)
  br label %232

55:                                               ; preds = %5
  %56 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %57 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %57, i64 31
  %59 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %58, align 8
  %60 = tail call dereferenceable(184) %"class.sh::TType"* %59(%"class.sh::TIntermTyped"* %2) #17
  %61 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 3
  br i1 %63, label %72, label %64

64:                                               ; preds = %55
  %65 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %56, align 8
  %66 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %65, i64 31
  %67 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %66, align 8
  %68 = tail call dereferenceable(184) %"class.sh::TType"* %67(%"class.sh::TIntermTyped"* %2) #17
  %69 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %72, label %92

72:                                               ; preds = %64, %55
  %73 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %56, align 8
  %74 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %73, i64 31
  %75 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %74, align 8
  %76 = tail call dereferenceable(184) %"class.sh::TType"* %75(%"class.sh::TIntermTyped"* %2) #17
  %77 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %76, i64 0, i32 8
  %78 = load i8, i8* %77, align 8
  %79 = icmp ugt i8 %78, 1
  %80 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %76, i64 0, i32 9
  %81 = load i8, i8* %80, align 1
  %82 = icmp ugt i8 %81, 1
  %83 = and i1 %79, %82
  br i1 %83, label %92, label %84

84:                                               ; preds = %72
  %85 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %56, align 8
  %86 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %85, i64 31
  %87 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %86, align 8
  %88 = tail call dereferenceable(184) %"class.sh::TType"* %87(%"class.sh::TIntermTyped"* %2) #17
  %89 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %88, i64 0, i32 10, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %162, label %92

92:                                               ; preds = %84, %64, %72
  %93 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext 7) #17
  %94 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %56, align 8
  %95 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %94, i64 31
  %96 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %95, align 8
  %97 = tail call dereferenceable(184) %"class.sh::TType"* %96(%"class.sh::TIntermTyped"* %2) #17
  tail call void @_ZN2sh13TParseContext12unaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* %93, %"class.sh::TType"* dereferenceable(184) %97)
  br label %232

98:                                               ; preds = %5, %5, %5, %5, %5, %5
  %99 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %100 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %101 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %100, i64 31
  %102 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %101, align 8
  %103 = tail call dereferenceable(184) %"class.sh::TType"* %102(%"class.sh::TIntermTyped"* %2) #17
  %104 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 90
  br i1 %106, label %156, label %107

107:                                              ; preds = %98
  %108 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %109 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %108, i64 31
  %110 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %109, align 8
  %111 = tail call dereferenceable(184) %"class.sh::TType"* %110(%"class.sh::TIntermTyped"* %2) #17
  %112 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %111, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 91
  br i1 %114, label %156, label %115

115:                                              ; preds = %107
  %116 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %117 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %116, i64 31
  %118 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %117, align 8
  %119 = tail call dereferenceable(184) %"class.sh::TType"* %118(%"class.sh::TIntermTyped"* %2) #17
  %120 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %119, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 5
  br i1 %122, label %156, label %123

123:                                              ; preds = %115
  %124 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %125 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %124, i64 31
  %126 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %125, align 8
  %127 = tail call dereferenceable(184) %"class.sh::TType"* %126(%"class.sh::TIntermTyped"* %2) #17
  %128 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %127, i64 0, i32 10, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %156

131:                                              ; preds = %123
  %132 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %133 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %132, i64 31
  %134 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %133, align 8
  %135 = tail call dereferenceable(184) %"class.sh::TType"* %134(%"class.sh::TIntermTyped"* %2) #17
  %136 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %135, i64 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %156, label %139

139:                                              ; preds = %131
  %140 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %141 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %140, i64 31
  %142 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %141, align 8
  %143 = tail call dereferenceable(184) %"class.sh::TType"* %142(%"class.sh::TIntermTyped"* %2) #17
  %144 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, -8
  %147 = icmp ult i32 %146, 43
  %148 = add i32 %145, -51
  %149 = icmp ult i32 %148, 33
  %150 = or i1 %147, %149
  %151 = icmp eq i32 %145, 6
  %152 = or i1 %151, %150
  %153 = add i32 %145, -84
  %154 = icmp ult i32 %153, 6
  %155 = or i1 %154, %152
  br i1 %155, label %156, label %162

156:                                              ; preds = %123, %139, %131, %115, %107, %98
  %157 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %158 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %99, align 8
  %159 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %158, i64 31
  %160 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %159, align 8
  %161 = tail call dereferenceable(184) %"class.sh::TType"* %160(%"class.sh::TIntermTyped"* %2) #17
  tail call void @_ZN2sh13TParseContext12unaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* %157, %"class.sh::TType"* dereferenceable(184) %161)
  br label %232

162:                                              ; preds = %6, %84, %139, %37
  %163 = phi %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** [ %7, %6 ], [ %56, %84 ], [ %99, %139 ], [ %9, %37 ]
  %164 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %163, align 8
  %165 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %164, i64 31
  %166 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %165, align 8
  %167 = tail call dereferenceable(184) %"class.sh::TType"* %166(%"class.sh::TIntermTyped"* %2) #17
  %168 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %167, i64 0, i32 5
  %169 = bitcast %"struct.sh::TMemoryQualifier"* %168 to i40*
  %170 = load i40, i40* %169, align 2
  %171 = and i40 %170, 256
  %172 = icmp eq i40 %171, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %162
  %174 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %175 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %163, align 8
  %176 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %175, i64 31
  %177 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %176, align 8
  %178 = tail call dereferenceable(184) %"class.sh::TType"* %177(%"class.sh::TIntermTyped"* %2) #17
  tail call void @_ZN2sh13TParseContext12unaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* %174, %"class.sh::TType"* dereferenceable(184) %178)
  br label %232

179:                                              ; preds = %162, %190
  %180 = phi %"class.sh::TIntermTyped"* [ %192, %190 ], [ %2, %162 ]
  %181 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %180, i64 0, i32 0
  %182 = bitcast %"class.sh::TIntermTyped"* %180 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %183 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %182, align 8
  %184 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %183, i64 12
  %185 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %184, align 8
  %186 = tail call %"class.sh::TIntermSwizzle"* %185(%"class.sh::TIntermNode"* %181) #17
  %187 = icmp eq %"class.sh::TIntermSwizzle"* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %179
  %189 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %186, i64 0, i32 1
  br label %190

190:                                              ; preds = %205, %188
  %191 = phi %"class.sh::TIntermTyped"** [ %189, %188 ], [ %206, %205 ]
  %192 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %191, align 8
  br label %179

193:                                              ; preds = %179
  %194 = bitcast %"class.sh::TIntermTyped"* %180 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %195 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %194, align 8
  %196 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %195, i64 13
  %197 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %196, align 8
  %198 = tail call %"class.sh::TIntermBinary"* %197(%"class.sh::TIntermNode"* %181) #17
  %199 = icmp eq %"class.sh::TIntermBinary"* %198, null
  br i1 %199, label %207, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %198, i64 0, i32 0, i32 1
  %202 = load i8, i8* %201, align 8
  %203 = and i8 %202, -4
  %204 = icmp eq i8 %203, 44
  br i1 %204, label %205, label %219

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %198, i64 0, i32 2
  br label %190

207:                                              ; preds = %193
  %208 = bitcast %"class.sh::TIntermTyped"* %180 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %209 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %208, align 8
  %210 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %209, i64 19
  %211 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %210, align 8
  %212 = tail call %"class.sh::TIntermSymbol"* %211(%"class.sh::TIntermNode"* %181) #17
  %213 = icmp eq %"class.sh::TIntermSymbol"* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %216 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %215, align 8
  %217 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %212, i64 0, i32 1
  %218 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %217, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %216, %"class.sh::TVariable"* dereferenceable(40) %218) #17
  br label %219

219:                                              ; preds = %200, %207, %214
  %220 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %221 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %220, i64 240) #17
  %222 = bitcast i8* %221 to %"class.sh::TIntermUnary"*
  tail call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %222, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TFunction"* %4) #17
  %223 = getelementptr inbounds i8, i8* %221, i64 8
  %224 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 4 %224, i64 16, i1 false) #17
  %225 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %226 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %225, align 8
  %227 = bitcast i8* %221 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)***
  %228 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*** %227, align 8
  %229 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)** %228, i64 27
  %230 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)** %229, align 8
  %231 = tail call %"class.sh::TIntermTyped"* %230(%"class.sh::TIntermUnary"* %222, %"class.sh::TDiagnostics"* %226) #17
  br label %232

232:                                              ; preds = %219, %173, %156, %92, %49
  %233 = phi %"class.sh::TIntermTyped"* [ null, %173 ], [ %231, %219 ], [ null, %156 ], [ null, %92 ], [ null, %49 ]
  ret %"class.sh::TIntermTyped"* %233
}

declare i8* @_Z17GetOperatorString9TOperator(i8 zeroext) local_unnamed_addr #3

declare void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TFunction"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext12addUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext15createUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocEPKNS_9TFunctionE(%"class.sh::TParseContext"* %0, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"class.sh::TFunction"* null)
  %6 = icmp eq %"class.sh::TIntermTyped"* %5, null
  %7 = select i1 %6, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %5
  ret %"class.sh::TIntermTyped"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext18addUnaryMathLValueE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %6 = tail call zeroext i1 @_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* %5, %"class.sh::TIntermTyped"* %2)
  %7 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext15createUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocEPKNS_9TFunctionE(%"class.sh::TParseContext"* %0, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, %"class.sh::TFunction"* null) #17
  %8 = icmp eq %"class.sh::TIntermTyped"* %7, null
  %9 = select i1 %8, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %7
  ret %"class.sh::TIntermTyped"* %9
}

declare i32 @_ZN2sh13GetConversionENS_10TBasicTypeES0_(i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN2sh25IsValidImplicitConversionENS_22ImplicitTypeConversionE9TOperator(i32, i8 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK2sh5TType29isStructureContainingSamplersEv(%"class.sh::TType"*) local_unnamed_addr #3

declare zeroext i1 @_Z12IsAssignment9TOperator(i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2sh13TParseContext36isMultiplicationTypeCombinationValidE9TOperatorRKNS_5TTypeES4_(%"class.sh::TParseContext"* nocapture readnone, i8 zeroext, %"class.sh::TType"* nocapture readonly dereferenceable(184), %"class.sh::TType"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %85 [
    i8 15, label %5
    i8 -114, label %5
    i8 31, label %86
    i8 -112, label %17
    i8 32, label %33
    i8 -113, label %39
    i8 33, label %55
    i8 34, label %86
    i8 -111, label %61
    i8 35, label %69
    i8 -110, label %75
  ]

5:                                                ; preds = %4, %4
  %6 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %7 = load i8, i8* %6, align 8
  %8 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %7, %9
  br i1 %10, label %11, label %86

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %13, %15
  br label %86

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %19 = load i8, i8* %18, align 8
  %20 = icmp ugt i8 %19, 1
  br i1 %20, label %21, label %86

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 9
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %86

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %27 = load i8, i8* %26, align 8
  %28 = icmp ult i8 %27, 2
  %29 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %30 = load i8, i8* %29, align 1
  %31 = icmp ne i8 %30, 1
  %32 = or i1 %28, %31
  br label %86

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %35 = load i8, i8* %34, align 8
  %36 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %35, %37
  br label %86

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %41 = load i8, i8* %40, align 8
  %42 = icmp ugt i8 %41, 1
  br i1 %42, label %43, label %86

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 9
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %86

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %41, %49
  br i1 %50, label %51, label %86

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %41, %53
  br label %86

55:                                               ; preds = %4
  %56 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %57 = load i8, i8* %56, align 8
  %58 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %59 = load i8, i8* %58, align 8
  %60 = icmp eq i8 %57, %59
  br label %86

61:                                               ; preds = %4
  %62 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %63 = load i8, i8* %62, align 8
  %64 = icmp ult i8 %63, 2
  %65 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %66 = load i8, i8* %65, align 1
  %67 = icmp ne i8 %66, 1
  %68 = or i1 %64, %67
  br label %86

69:                                               ; preds = %4
  %70 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %71 = load i8, i8* %70, align 8
  %72 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %71, %73
  br label %86

75:                                               ; preds = %4
  %76 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %2, i64 0, i32 8
  %77 = load i8, i8* %76, align 8
  %78 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 9
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %77, %79
  br i1 %80, label %81, label %86

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %3, i64 0, i32 8
  %83 = load i8, i8* %82, align 8
  %84 = icmp eq i8 %77, %83
  br label %86

85:                                               ; preds = %4
  br label %86

86:                                               ; preds = %39, %17, %75, %81, %4, %43, %47, %51, %21, %25, %4, %5, %11, %85, %69, %61, %55, %33
  %87 = phi i1 [ false, %85 ], [ %74, %69 ], [ %68, %61 ], [ %60, %55 ], [ %38, %33 ], [ false, %5 ], [ %16, %11 ], [ true, %4 ], [ false, %21 ], [ %32, %25 ], [ false, %47 ], [ false, %43 ], [ %54, %51 ], [ true, %4 ], [ false, %75 ], [ %84, %81 ], [ false, %17 ], [ false, %39 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext21addBinaryMathInternalE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = tail call zeroext i1 @_ZN2sh13TParseContext19binaryOpCommonCheckE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %4)
  br i1 %6, label %7, label %219

7:                                                ; preds = %5
  switch i8 %1, label %106 [
    i8 17, label %67
    i8 15, label %58
    i8 16, label %58
    i8 14, label %58
    i8 13, label %58
    i8 38, label %8
    i8 36, label %8
    i8 37, label %8
  ]

8:                                                ; preds = %7, %7, %7
  %9 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %10 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, i64 31
  %12 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, align 8
  %13 = tail call dereferenceable(184) %"class.sh::TType"* %12(%"class.sh::TIntermTyped"* %2) #17
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 5
  br i1 %16, label %17, label %219

17:                                               ; preds = %8
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %19 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, i64 31
  %20 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.sh::TType"* %20(%"class.sh::TIntermTyped"* %2) #17
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 8
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %219

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 9
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 1
  br i1 %28, label %29, label %219

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 13
  %31 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %30, align 8
  %32 = icmp eq %"class.sh::TStructure"* %31, null
  br i1 %32, label %33, label %219

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 10, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %219

37:                                               ; preds = %33
  %38 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %39 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %39, i64 31
  %41 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %40, align 8
  %42 = tail call dereferenceable(184) %"class.sh::TType"* %41(%"class.sh::TIntermTyped"* %3) #17
  %43 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %42, i64 0, i32 8
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %219

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %42, i64 0, i32 9
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 1
  br i1 %49, label %50, label %219

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %42, i64 0, i32 13
  %52 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %51, align 8
  %53 = icmp eq %"class.sh::TStructure"* %52, null
  br i1 %53, label %54, label %219

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %42, i64 0, i32 10, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %106, label %219

58:                                               ; preds = %7, %7, %7, %7
  %59 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %60 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %60, i64 31
  %62 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %61, align 8
  %63 = tail call dereferenceable(184) %"class.sh::TType"* %62(%"class.sh::TIntermTyped"* %2) #17
  %64 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %63, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 5
  br i1 %66, label %219, label %84

67:                                               ; preds = %7
  %68 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %69 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %69, i64 31
  %71 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %70, align 8
  %72 = tail call dereferenceable(184) %"class.sh::TType"* %71(%"class.sh::TIntermTyped"* %2) #17
  %73 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 5
  br i1 %75, label %219, label %76

76:                                               ; preds = %67
  %77 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %68, align 8
  %78 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %77, i64 31
  %79 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %78, align 8
  %80 = tail call dereferenceable(184) %"class.sh::TType"* %79(%"class.sh::TIntermTyped"* %2) #17
  %81 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %219, label %106

84:                                               ; preds = %58
  %85 = icmp eq i8 %1, 15
  br i1 %85, label %86, label %106

86:                                               ; preds = %84
  %87 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %59, align 8
  %88 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %87, i64 31
  %89 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %88, align 8
  %90 = tail call dereferenceable(184) %"class.sh::TType"* %89(%"class.sh::TIntermTyped"* %2) #17
  %91 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %92 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %92, i64 31
  %94 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %93, align 8
  %95 = tail call dereferenceable(184) %"class.sh::TType"* %94(%"class.sh::TIntermTyped"* %3) #17
  %96 = tail call zeroext i8 @_ZN2sh13TIntermBinary23GetMulOpBasedOnOperandsERKNS_5TTypeES3_(%"class.sh::TType"* dereferenceable(184) %90, %"class.sh::TType"* dereferenceable(184) %95) #17
  %97 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %59, align 8
  %98 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %97, i64 31
  %99 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %98, align 8
  %100 = tail call dereferenceable(184) %"class.sh::TType"* %99(%"class.sh::TIntermTyped"* %2) #17
  %101 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %91, align 8
  %102 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %101, i64 31
  %103 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %102, align 8
  %104 = tail call dereferenceable(184) %"class.sh::TType"* %103(%"class.sh::TIntermTyped"* %3) #17
  %105 = tail call zeroext i1 @_ZN2sh13TParseContext36isMultiplicationTypeCombinationValidE9TOperatorRKNS_5TTypeES4_(%"class.sh::TParseContext"* undef, i8 zeroext %96, %"class.sh::TType"* dereferenceable(184) %100, %"class.sh::TType"* dereferenceable(184) %104)
  br i1 %105, label %106, label %219

106:                                              ; preds = %54, %76, %7, %86, %84
  %107 = phi i8 [ %96, %86 ], [ %1, %84 ], [ %1, %7 ], [ 17, %76 ], [ %1, %54 ]
  %108 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %109 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %108, i64 240) #17
  %110 = bitcast i8* %109 to %"class.sh::TIntermBinary"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %110, i8 zeroext %107, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3) #17
  br label %111

111:                                              ; preds = %122, %106
  %112 = phi %"class.sh::TIntermTyped"* [ %2, %106 ], [ %124, %122 ]
  %113 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %112, i64 0, i32 0
  %114 = bitcast %"class.sh::TIntermTyped"* %112 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %115 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %114, align 8
  %116 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %115, i64 12
  %117 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %116, align 8
  %118 = tail call %"class.sh::TIntermSwizzle"* %117(%"class.sh::TIntermNode"* %113) #17
  %119 = icmp eq %"class.sh::TIntermSwizzle"* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %111
  %121 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %118, i64 0, i32 1
  br label %122

122:                                              ; preds = %137, %120
  %123 = phi %"class.sh::TIntermTyped"** [ %121, %120 ], [ %138, %137 ]
  %124 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %123, align 8
  br label %111

125:                                              ; preds = %111
  %126 = bitcast %"class.sh::TIntermTyped"* %112 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %127 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %127, i64 13
  %129 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %128, align 8
  %130 = tail call %"class.sh::TIntermBinary"* %129(%"class.sh::TIntermNode"* %113) #17
  %131 = icmp eq %"class.sh::TIntermBinary"* %130, null
  br i1 %131, label %139, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %130, i64 0, i32 0, i32 1
  %134 = load i8, i8* %133, align 8
  %135 = and i8 %134, -4
  %136 = icmp eq i8 %135, 44
  br i1 %136, label %137, label %151

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %130, i64 0, i32 2
  br label %122

139:                                              ; preds = %125
  %140 = bitcast %"class.sh::TIntermTyped"* %112 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %141 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %140, align 8
  %142 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %141, i64 19
  %143 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %142, align 8
  %144 = tail call %"class.sh::TIntermSymbol"* %143(%"class.sh::TIntermNode"* %113) #17
  %145 = icmp eq %"class.sh::TIntermSymbol"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %148 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %147, align 8
  %149 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %144, i64 0, i32 1
  %150 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %149, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %148, %"class.sh::TVariable"* dereferenceable(40) %150) #17
  br label %151

151:                                              ; preds = %132, %139, %146
  br label %152

152:                                              ; preds = %151, %163
  %153 = phi %"class.sh::TIntermTyped"* [ %165, %163 ], [ %3, %151 ]
  %154 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %153, i64 0, i32 0
  %155 = bitcast %"class.sh::TIntermTyped"* %153 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %156 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %155, align 8
  %157 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %156, i64 12
  %158 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %157, align 8
  %159 = tail call %"class.sh::TIntermSwizzle"* %158(%"class.sh::TIntermNode"* %154) #17
  %160 = icmp eq %"class.sh::TIntermSwizzle"* %159, null
  br i1 %160, label %166, label %161

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %159, i64 0, i32 1
  br label %163

163:                                              ; preds = %178, %161
  %164 = phi %"class.sh::TIntermTyped"** [ %162, %161 ], [ %179, %178 ]
  %165 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %164, align 8
  br label %152

166:                                              ; preds = %152
  %167 = bitcast %"class.sh::TIntermTyped"* %153 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %168 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %167, align 8
  %169 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %168, i64 13
  %170 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %169, align 8
  %171 = tail call %"class.sh::TIntermBinary"* %170(%"class.sh::TIntermNode"* %154) #17
  %172 = icmp eq %"class.sh::TIntermBinary"* %171, null
  br i1 %172, label %180, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %171, i64 0, i32 0, i32 1
  %175 = load i8, i8* %174, align 8
  %176 = and i8 %175, -4
  %177 = icmp eq i8 %176, 44
  br i1 %177, label %178, label %192

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %171, i64 0, i32 2
  br label %163

180:                                              ; preds = %166
  %181 = bitcast %"class.sh::TIntermTyped"* %153 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %182 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %182, i64 19
  %184 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %183, align 8
  %185 = tail call %"class.sh::TIntermSymbol"* %184(%"class.sh::TIntermNode"* %154) #17
  %186 = icmp eq %"class.sh::TIntermSymbol"* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %189 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %188, align 8
  %190 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %185, i64 0, i32 1
  %191 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %190, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %189, %"class.sh::TVariable"* dereferenceable(40) %191) #17
  br label %192

192:                                              ; preds = %173, %180, %187
  %193 = getelementptr inbounds i8, i8* %109, i64 8
  %194 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 4 %194, i64 16, i1 false) #17
  %195 = bitcast i8* %109 to %"class.sh::TIntermTyped"*
  %196 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %197 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %196, align 8
  %198 = bitcast i8* %109 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)***
  %199 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*** %198, align 8
  %200 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %199, i64 27
  %201 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %200, align 8
  %202 = tail call %"class.sh::TIntermTyped"* %201(%"class.sh::TIntermTyped"* %195, %"class.sh::TDiagnostics"* %197) #17
  %203 = bitcast %"class.sh::TIntermTyped"* %202 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %204 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %203, align 8
  %205 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %204, i64 31
  %206 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %205, align 8
  %207 = tail call dereferenceable(184) %"class.sh::TType"* %206(%"class.sh::TIntermTyped"* %202) #17
  %208 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %207, i64 0, i32 2
  %209 = load i32, i32* %208, align 8
  %210 = bitcast i8* %109 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %211 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %210, align 8
  %212 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %211, i64 31
  %213 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %212, align 8
  %214 = tail call dereferenceable(184) %"class.sh::TType"* %213(%"class.sh::TIntermTyped"* %195) #17
  %215 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %214, i64 0, i32 2
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %209, %216
  %218 = select i1 %217, %"class.sh::TIntermTyped"* %202, %"class.sh::TIntermTyped"* %195
  br label %219

219:                                              ; preds = %37, %46, %50, %17, %25, %29, %86, %67, %76, %58, %33, %54, %8, %5, %192
  %220 = phi %"class.sh::TIntermTyped"* [ %218, %192 ], [ null, %5 ], [ null, %8 ], [ null, %54 ], [ null, %33 ], [ null, %58 ], [ null, %76 ], [ null, %67 ], [ null, %86 ], [ null, %29 ], [ null, %25 ], [ null, %17 ], [ null, %50 ], [ null, %46 ], [ null, %37 ]
  ret %"class.sh::TIntermTyped"* %220
}

declare zeroext i8 @_ZN2sh13TIntermBinary23GetMulOpBasedOnOperandsERKNS_5TTypeES3_(%"class.sh::TType"* dereferenceable(184), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext13addBinaryMathE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext21addBinaryMathInternalE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %4)
  %7 = icmp eq %"class.sh::TIntermTyped"* %6, null
  br i1 %7, label %8, label %20

8:                                                ; preds = %5
  %9 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %2) #17
  %15 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %16 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %16, i64 31
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call dereferenceable(184) %"class.sh::TType"* %18(%"class.sh::TIntermTyped"* %3) #17
  tail call void @_ZN2sh13TParseContext13binaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeES8_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* %9, %"class.sh::TType"* dereferenceable(184) %14, %"class.sh::TType"* dereferenceable(184) %19)
  br label %20

20:                                               ; preds = %5, %8
  %21 = phi %"class.sh::TIntermTyped"* [ %2, %8 ], [ %6, %5 ]
  ret %"class.sh::TIntermTyped"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext26addBinaryMathBooleanResultE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext21addBinaryMathInternalE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %4)
  %7 = icmp eq %"class.sh::TIntermTyped"* %6, null
  br i1 %7, label %8, label %25

8:                                                ; preds = %5
  %9 = tail call i8* @_Z17GetOperatorString9TOperator(i8 zeroext %1) #17
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %11 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, i64 31
  %13 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %12, align 8
  %14 = tail call dereferenceable(184) %"class.sh::TType"* %13(%"class.sh::TIntermTyped"* %2) #17
  %15 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %16 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %16, i64 31
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call dereferenceable(184) %"class.sh::TType"* %18(%"class.sh::TIntermTyped"* %3) #17
  tail call void @_ZN2sh13TParseContext13binaryOpErrorERKNS_10TSourceLocEPKcRKNS_5TTypeES8_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* %9, %"class.sh::TType"* dereferenceable(184) %14, %"class.sh::TType"* dereferenceable(184) %19)
  %20 = tail call %"class.sh::TIntermConstantUnion"* @_ZN2sh14CreateBoolNodeEb(i1 zeroext false) #17
  %21 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %20, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"struct.sh::TSourceLoc"* %22 to i8*
  %24 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 4 %24, i64 16, i1 false) #17
  br label %25

25:                                               ; preds = %8, %5
  %26 = phi %"class.sh::TIntermTyped"* [ %21, %8 ], [ %6, %5 ]
  ret %"class.sh::TIntermTyped"* %26
}

declare %"class.sh::TIntermConstantUnion"* @_ZN2sh14CreateBoolNodeEb(i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext9addAssignE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"*, i8 zeroext, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = tail call zeroext i1 @_ZN2sh13TParseContext16checkCanBeLValueERKNS_10TSourceLocEPKcPNS_12TIntermTypedE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i64 0, i64 0), %"class.sh::TIntermTyped"* %2)
  %7 = tail call zeroext i1 @_ZN2sh13TParseContext19binaryOpCommonCheckE9TOperatorPNS_12TIntermTypedES3_RKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3, %"struct.sh::TSourceLoc"* dereferenceable(16) %4)
  br i1 %7, label %8, label %89

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %2, i64 0, i32 0
  %10 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %11 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %11, i64 13
  %13 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermBinary"* %13(%"class.sh::TIntermNode"* %9) #17
  %15 = icmp eq %"class.sh::TIntermBinary"* %14, null
  br i1 %15, label %54, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %14, i64 0, i32 0, i32 1
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, -2
  %20 = icmp eq i8 %19, 44
  br i1 %20, label %21, label %54

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %14, i64 0, i32 2
  %25 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %24, align 8
  %26 = bitcast %"class.sh::TIntermTyped"* %25 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %27 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %27, i64 31
  %29 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %28, align 8
  %30 = tail call dereferenceable(184) %"class.sh::TType"* %29(%"class.sh::TIntermTyped"* %25) #17
  %31 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %30, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = tail call zeroext i1 @_ZN2sh33IsTessellationControlShaderOutputEjNS_10TQualifierE(i32 %23, i32 %32) #17
  br i1 %33, label %34, label %54

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %14, i64 0, i32 3
  %36 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %35, align 8
  %37 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %36, i64 0, i32 0
  %38 = bitcast %"class.sh::TIntermTyped"* %36 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %39 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %39, i64 19
  %41 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %40, align 8
  %42 = tail call %"class.sh::TIntermSymbol"* %41(%"class.sh::TIntermNode"* %37) #17
  %43 = icmp eq %"class.sh::TIntermSymbol"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %34
  %45 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %42) #17
  %46 = extractvalue { i8*, i64 } %45, 0
  %47 = icmp eq i8* %46, null
  %48 = select i1 %47, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %46
  %49 = tail call i32 @strcmp(i8* %48, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.164, i64 0, i64 0)) #19
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44, %34
  %52 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %53 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %52, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %53, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.166, i64 0, i64 0)) #17
  br label %54

54:                                               ; preds = %16, %51, %44, %8, %21
  %55 = icmp eq i8 %1, -114
  br i1 %55, label %56, label %81

56:                                               ; preds = %54
  %57 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %58 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %58, i64 31
  %60 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %59, align 8
  %61 = tail call dereferenceable(184) %"class.sh::TType"* %60(%"class.sh::TIntermTyped"* %2) #17
  %62 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %63 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %63, i64 31
  %65 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %64, align 8
  %66 = tail call dereferenceable(184) %"class.sh::TType"* %65(%"class.sh::TIntermTyped"* %3) #17
  %67 = tail call zeroext i8 @_ZN2sh13TIntermBinary29GetMulAssignOpBasedOnOperandsERKNS_5TTypeES3_(%"class.sh::TType"* dereferenceable(184) %61, %"class.sh::TType"* dereferenceable(184) %66) #17
  %68 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %57, align 8
  %69 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %68, i64 31
  %70 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %69, align 8
  %71 = tail call dereferenceable(184) %"class.sh::TType"* %70(%"class.sh::TIntermTyped"* %2) #17
  %72 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %62, align 8
  %73 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %72, i64 31
  %74 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %73, align 8
  %75 = tail call dereferenceable(184) %"class.sh::TType"* %74(%"class.sh::TIntermTyped"* %3) #17
  %76 = tail call zeroext i1 @_ZN2sh13TParseContext36isMultiplicationTypeCombinationValidE9TOperatorRKNS_5TTypeES4_(%"class.sh::TParseContext"* undef, i8 zeroext %67, %"class.sh::TType"* dereferenceable(184) %71, %"class.sh::TType"* dereferenceable(184) %75)
  br i1 %76, label %77, label %89

77:                                               ; preds = %56
  %78 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %79 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %78, i64 240) #17
  %80 = bitcast i8* %79 to %"class.sh::TIntermBinary"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %80, i8 zeroext %67, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3) #17
  br label %85

81:                                               ; preds = %54
  %82 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %83 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %82, i64 240) #17
  %84 = bitcast i8* %83 to %"class.sh::TIntermBinary"*
  tail call void @_ZN2sh13TIntermBinaryC1E9TOperatorPNS_12TIntermTypedES3_(%"class.sh::TIntermBinary"* %84, i8 zeroext %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3) #17
  br label %85

85:                                               ; preds = %81, %77
  %86 = phi i8 [ %67, %77 ], [ %1, %81 ]
  %87 = phi %"class.sh::TIntermBinary"* [ %80, %77 ], [ %84, %81 ]
  %88 = icmp eq %"class.sh::TIntermBinary"* %87, null
  br i1 %88, label %89, label %100

89:                                               ; preds = %56, %5, %85
  %90 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %91 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %91, i64 31
  %93 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %92, align 8
  %94 = tail call dereferenceable(184) %"class.sh::TType"* %93(%"class.sh::TIntermTyped"* %2) #17
  %95 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %96 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %96, i64 31
  %98 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %97, align 8
  %99 = tail call dereferenceable(184) %"class.sh::TType"* %98(%"class.sh::TIntermTyped"* %3) #17
  tail call void @_ZN2sh13TParseContext11assignErrorERKNS_10TSourceLocEPKcRKNS_5TTypeES8_(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.168, i64 0, i64 0), %"class.sh::TType"* dereferenceable(184) %94, %"class.sh::TType"* dereferenceable(184) %99)
  br label %188

100:                                              ; preds = %85
  %101 = icmp eq i8 %86, -118
  br i1 %101, label %142, label %102

102:                                              ; preds = %100, %113
  %103 = phi %"class.sh::TIntermTyped"* [ %115, %113 ], [ %2, %100 ]
  %104 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %103, i64 0, i32 0
  %105 = bitcast %"class.sh::TIntermTyped"* %103 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %106 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %106, i64 12
  %108 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %107, align 8
  %109 = tail call %"class.sh::TIntermSwizzle"* %108(%"class.sh::TIntermNode"* %104) #17
  %110 = icmp eq %"class.sh::TIntermSwizzle"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %109, i64 0, i32 1
  br label %113

113:                                              ; preds = %128, %111
  %114 = phi %"class.sh::TIntermTyped"** [ %112, %111 ], [ %129, %128 ]
  %115 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %114, align 8
  br label %102

116:                                              ; preds = %102
  %117 = bitcast %"class.sh::TIntermTyped"* %103 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %118 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %117, align 8
  %119 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %118, i64 13
  %120 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %119, align 8
  %121 = tail call %"class.sh::TIntermBinary"* %120(%"class.sh::TIntermNode"* %104) #17
  %122 = icmp eq %"class.sh::TIntermBinary"* %121, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %121, i64 0, i32 0, i32 1
  %125 = load i8, i8* %124, align 8
  %126 = and i8 %125, -4
  %127 = icmp eq i8 %126, 44
  br i1 %127, label %128, label %142

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %121, i64 0, i32 2
  br label %113

130:                                              ; preds = %116
  %131 = bitcast %"class.sh::TIntermTyped"* %103 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %132 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %131, align 8
  %133 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %132, i64 19
  %134 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %133, align 8
  %135 = tail call %"class.sh::TIntermSymbol"* %134(%"class.sh::TIntermNode"* %104) #17
  %136 = icmp eq %"class.sh::TIntermSymbol"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %139 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %138, align 8
  %140 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %135, i64 0, i32 1
  %141 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %140, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %139, %"class.sh::TVariable"* dereferenceable(40) %141) #17
  br label %142

142:                                              ; preds = %123, %137, %130, %100
  br label %143

143:                                              ; preds = %142, %154
  %144 = phi %"class.sh::TIntermTyped"* [ %156, %154 ], [ %3, %142 ]
  %145 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %144, i64 0, i32 0
  %146 = bitcast %"class.sh::TIntermTyped"* %144 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %147 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %146, align 8
  %148 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %147, i64 12
  %149 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %148, align 8
  %150 = tail call %"class.sh::TIntermSwizzle"* %149(%"class.sh::TIntermNode"* %145) #17
  %151 = icmp eq %"class.sh::TIntermSwizzle"* %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %150, i64 0, i32 1
  br label %154

154:                                              ; preds = %169, %152
  %155 = phi %"class.sh::TIntermTyped"** [ %153, %152 ], [ %170, %169 ]
  %156 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %155, align 8
  br label %143

157:                                              ; preds = %143
  %158 = bitcast %"class.sh::TIntermTyped"* %144 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %159 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %158, align 8
  %160 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %159, i64 13
  %161 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %160, align 8
  %162 = tail call %"class.sh::TIntermBinary"* %161(%"class.sh::TIntermNode"* %145) #17
  %163 = icmp eq %"class.sh::TIntermBinary"* %162, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %162, i64 0, i32 0, i32 1
  %166 = load i8, i8* %165, align 8
  %167 = and i8 %166, -4
  %168 = icmp eq i8 %167, 44
  br i1 %168, label %169, label %183

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %162, i64 0, i32 2
  br label %154

171:                                              ; preds = %157
  %172 = bitcast %"class.sh::TIntermTyped"* %144 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %173 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %172, align 8
  %174 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %173, i64 19
  %175 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %174, align 8
  %176 = tail call %"class.sh::TIntermSymbol"* %175(%"class.sh::TIntermNode"* %145) #17
  %177 = icmp eq %"class.sh::TIntermSymbol"* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %180 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %179, align 8
  %181 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %176, i64 0, i32 1
  %182 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %181, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %180, %"class.sh::TVariable"* dereferenceable(40) %182) #17
  br label %183

183:                                              ; preds = %164, %171, %178
  %184 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = bitcast %"struct.sh::TSourceLoc"* %184 to i8*
  %186 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %185, i8* align 4 %186, i64 16, i1 false) #17
  %187 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %87, i64 0, i32 0, i32 0, i32 0
  br label %188

188:                                              ; preds = %183, %89
  %189 = phi %"class.sh::TIntermTyped"* [ %2, %89 ], [ %187, %183 ]
  ret %"class.sh::TIntermTyped"* %189
}

declare zeroext i8 @_ZN2sh13TIntermBinary29GetMulAssignOpBasedOnOperandsERKNS_5TTypeES3_(%"class.sh::TType"* dereferenceable(184), %"class.sh::TType"* dereferenceable(184)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext8addCommaEPNS_12TIntermTypedES2_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %57

8:                                                ; preds = %4
  %9 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %10 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %10, i64 31
  %12 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %11, align 8
  %13 = tail call dereferenceable(184) %"class.sh::TType"* %12(%"class.sh::TIntermTyped"* %1) #17
  %14 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %13, i64 0, i32 10, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %54

17:                                               ; preds = %8
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %19 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %18, i64 31
  %20 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %19, align 8
  %21 = tail call dereferenceable(184) %"class.sh::TType"* %20(%"class.sh::TIntermTyped"* %1) #17
  %22 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %54, label %25

25:                                               ; preds = %17
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %9, align 8
  %27 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %26, i64 31
  %28 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %27, align 8
  %29 = tail call dereferenceable(184) %"class.sh::TType"* %28(%"class.sh::TIntermTyped"* %1) #17
  %30 = tail call zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"* %29) #17
  br i1 %30, label %54, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %33 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %33, i64 31
  %35 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %34, align 8
  %36 = tail call dereferenceable(184) %"class.sh::TType"* %35(%"class.sh::TIntermTyped"* %2) #17
  %37 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %36, i64 0, i32 10, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %31
  %41 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %32, align 8
  %42 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %41, i64 31
  %43 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %42, align 8
  %44 = tail call dereferenceable(184) %"class.sh::TType"* %43(%"class.sh::TIntermTyped"* %2) #17
  %45 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %44, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %32, align 8
  %50 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %49, i64 31
  %51 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %50, align 8
  %52 = tail call dereferenceable(184) %"class.sh::TType"* %51(%"class.sh::TIntermTyped"* %2) #17
  %53 = tail call zeroext i1 @_ZNK2sh5TType27isStructureContainingArraysEv(%"class.sh::TType"* %52) #17
  br i1 %53, label %54, label %57

54:                                               ; preds = %31, %8, %48, %40, %25, %17
  %55 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %56 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %55, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %56, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.408, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i64 0, i64 0)) #17
  br label %57

57:                                               ; preds = %54, %48, %4
  %58 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %59 = load i32, i32* %58, align 8
  %60 = tail call %"class.sh::TIntermBinary"* @_ZN2sh13TIntermBinary11CreateCommaEPNS_12TIntermTypedES2_i(%"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %2, i32 %59) #17
  br label %61

61:                                               ; preds = %72, %57
  %62 = phi %"class.sh::TIntermTyped"* [ %1, %57 ], [ %74, %72 ]
  %63 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %62, i64 0, i32 0
  %64 = bitcast %"class.sh::TIntermTyped"* %62 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %65 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %65, i64 12
  %67 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %66, align 8
  %68 = tail call %"class.sh::TIntermSwizzle"* %67(%"class.sh::TIntermNode"* %63) #17
  %69 = icmp eq %"class.sh::TIntermSwizzle"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %68, i64 0, i32 1
  br label %72

72:                                               ; preds = %87, %70
  %73 = phi %"class.sh::TIntermTyped"** [ %71, %70 ], [ %88, %87 ]
  %74 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %73, align 8
  br label %61

75:                                               ; preds = %61
  %76 = bitcast %"class.sh::TIntermTyped"* %62 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %77 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %77, i64 13
  %79 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %78, align 8
  %80 = tail call %"class.sh::TIntermBinary"* %79(%"class.sh::TIntermNode"* %63) #17
  %81 = icmp eq %"class.sh::TIntermBinary"* %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %80, i64 0, i32 0, i32 1
  %84 = load i8, i8* %83, align 8
  %85 = and i8 %84, -4
  %86 = icmp eq i8 %85, 44
  br i1 %86, label %87, label %101

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %80, i64 0, i32 2
  br label %72

89:                                               ; preds = %75
  %90 = bitcast %"class.sh::TIntermTyped"* %62 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %91 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %91, i64 19
  %93 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %92, align 8
  %94 = tail call %"class.sh::TIntermSymbol"* %93(%"class.sh::TIntermNode"* %63) #17
  %95 = icmp eq %"class.sh::TIntermSymbol"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %98 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %97, align 8
  %99 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %94, i64 0, i32 1
  %100 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %99, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %98, %"class.sh::TVariable"* dereferenceable(40) %100) #17
  br label %101

101:                                              ; preds = %82, %89, %96
  br label %102

102:                                              ; preds = %101, %113
  %103 = phi %"class.sh::TIntermTyped"* [ %115, %113 ], [ %2, %101 ]
  %104 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %103, i64 0, i32 0
  %105 = bitcast %"class.sh::TIntermTyped"* %103 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %106 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %106, i64 12
  %108 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %107, align 8
  %109 = tail call %"class.sh::TIntermSwizzle"* %108(%"class.sh::TIntermNode"* %104) #17
  %110 = icmp eq %"class.sh::TIntermSwizzle"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %109, i64 0, i32 1
  br label %113

113:                                              ; preds = %128, %111
  %114 = phi %"class.sh::TIntermTyped"** [ %112, %111 ], [ %129, %128 ]
  %115 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %114, align 8
  br label %102

116:                                              ; preds = %102
  %117 = bitcast %"class.sh::TIntermTyped"* %103 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %118 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %117, align 8
  %119 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %118, i64 13
  %120 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %119, align 8
  %121 = tail call %"class.sh::TIntermBinary"* %120(%"class.sh::TIntermNode"* %104) #17
  %122 = icmp eq %"class.sh::TIntermBinary"* %121, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %121, i64 0, i32 0, i32 1
  %125 = load i8, i8* %124, align 8
  %126 = and i8 %125, -4
  %127 = icmp eq i8 %126, 44
  br i1 %127, label %128, label %142

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %121, i64 0, i32 2
  br label %113

130:                                              ; preds = %116
  %131 = bitcast %"class.sh::TIntermTyped"* %103 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %132 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %131, align 8
  %133 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %132, i64 19
  %134 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %133, align 8
  %135 = tail call %"class.sh::TIntermSymbol"* %134(%"class.sh::TIntermNode"* %104) #17
  %136 = icmp eq %"class.sh::TIntermSymbol"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %139 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %138, align 8
  %140 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %135, i64 0, i32 1
  %141 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %140, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %139, %"class.sh::TVariable"* dereferenceable(40) %141) #17
  br label %142

142:                                              ; preds = %123, %130, %137
  %143 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = bitcast %"struct.sh::TSourceLoc"* %143 to i8*
  %145 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 4 %145, i64 16, i1 false) #17
  %146 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %60, i64 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %148 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %147, align 8
  %149 = bitcast %"class.sh::TIntermBinary"* %60 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)***
  %150 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %150, i64 27
  %152 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %151, align 8
  %153 = tail call %"class.sh::TIntermTyped"* %152(%"class.sh::TIntermTyped"* %146, %"class.sh::TDiagnostics"* %148) #17
  %154 = bitcast %"class.sh::TIntermTyped"* %153 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %155 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %154, align 8
  %156 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %155, i64 31
  %157 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %156, align 8
  %158 = tail call dereferenceable(184) %"class.sh::TType"* %157(%"class.sh::TIntermTyped"* %153) #17
  %159 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %158, i64 0, i32 2
  %160 = load i32, i32* %159, align 8
  %161 = bitcast %"class.sh::TIntermBinary"* %60 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %162 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %161, align 8
  %163 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %162, i64 31
  %164 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %163, align 8
  %165 = tail call dereferenceable(184) %"class.sh::TType"* %164(%"class.sh::TIntermTyped"* %146) #17
  %166 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %165, i64 0, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %160, %167
  %169 = select i1 %168, %"class.sh::TIntermTyped"* %153, %"class.sh::TIntermTyped"* %146
  ret %"class.sh::TIntermTyped"* %169
}

declare %"class.sh::TIntermBinary"* @_ZN2sh13TIntermBinary11CreateCommaEPNS_12TIntermTypedES2_i(%"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorRKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, i8 zeroext, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  switch i8 %1, label %38 [
    i8 -120, label %4
    i8 -121, label %11
    i8 -122, label %22
    i8 -123, label %31
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %38

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %10 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %9, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %10, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.410, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %38

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 10
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %15, label %38

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %38

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %21 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %20, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %21, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.411, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %38

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 14
  %24 = load %"class.sh::TType"*, %"class.sh::TType"** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %29, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.412, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i64 0, i64 0)) #17
  br label %38

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 35632
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %37 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %36, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %37, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.414, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.415, i64 0, i64 0)) #17
  br label %38

38:                                               ; preds = %22, %31, %3, %35, %28, %11, %15, %19, %4, %8
  %39 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %40 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %39, i64 40) #17
  %41 = bitcast i8* %40 to %"class.sh::TIntermBranch"*
  %42 = bitcast i8* %40 to i32 (...)***
  %43 = getelementptr inbounds i8, i8* %40, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 24
  store i8 %1, i8* %44, align 8
  %45 = getelementptr inbounds i8, i8* %40, i64 32
  %46 = bitcast i8* %45 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* null, %"class.sh::TIntermTyped"** %46, align 8
  %47 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 4 %47, i64 16, i1 false) #17
  ret %"class.sh::TIntermBranch"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermBranch"* @_ZN2sh13TParseContext9addBranchE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture, i8 zeroext, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %5 = icmp eq %"class.sh::TIntermTyped"* %2, null
  br i1 %5, label %113, label %6

6:                                                ; preds = %4, %17
  %7 = phi %"class.sh::TIntermTyped"* [ %19, %17 ], [ %2, %4 ]
  %8 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %7, i64 0, i32 0
  %9 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %10 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %10, i64 12
  %12 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %11, align 8
  %13 = tail call %"class.sh::TIntermSwizzle"* %12(%"class.sh::TIntermNode"* %8) #17
  %14 = icmp eq %"class.sh::TIntermSwizzle"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %13, i64 0, i32 1
  br label %17

17:                                               ; preds = %32, %15
  %18 = phi %"class.sh::TIntermTyped"** [ %16, %15 ], [ %33, %32 ]
  %19 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %18, align 8
  br label %6

20:                                               ; preds = %6
  %21 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %22 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %22, i64 13
  %24 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %23, align 8
  %25 = tail call %"class.sh::TIntermBinary"* %24(%"class.sh::TIntermNode"* %8) #17
  %26 = icmp eq %"class.sh::TIntermBinary"* %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %25, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, -4
  %31 = icmp eq i8 %30, 44
  br i1 %31, label %32, label %46

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %25, i64 0, i32 2
  br label %17

34:                                               ; preds = %20
  %35 = bitcast %"class.sh::TIntermTyped"* %7 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %36 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %36, i64 19
  %38 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %37, align 8
  %39 = tail call %"class.sh::TIntermSymbol"* %38(%"class.sh::TIntermNode"* %8) #17
  %40 = icmp eq %"class.sh::TIntermSymbol"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %43 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %42, align 8
  %44 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %39, i64 0, i32 1
  %45 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %44, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %43, %"class.sh::TVariable"* dereferenceable(40) %45) #17
  br label %46

46:                                               ; preds = %27, %34, %41
  %47 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 15
  store i8 1, i8* %47, align 8
  %48 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 14
  %49 = load %"class.sh::TType"*, %"class.sh::TType"** %48, align 8
  %50 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %55 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %54, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %55, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.416, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i64 0, i64 0)) #17
  br label %113

56:                                               ; preds = %46
  %57 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %58 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %58, i64 31
  %60 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %59, align 8
  %61 = tail call dereferenceable(184) %"class.sh::TType"* %60(%"class.sh::TIntermTyped"* nonnull %2) #17
  %62 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %49, i64 0, i32 10, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 10, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %63, %65
  br i1 %66, label %67, label %85

67:                                               ; preds = %56
  %68 = icmp eq i64 %63, 0
  br i1 %68, label %85, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %49, i64 0, i32 10, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 10, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %71, %73
  br i1 %74, label %85, label %77

75:                                               ; preds = %77
  %76 = icmp eq i64 %84, %63
  br i1 %76, label %85, label %77

77:                                               ; preds = %69, %75
  %78 = phi i64 [ %84, %75 ], [ 0, %69 ]
  %79 = getelementptr inbounds i32, i32* %71, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds i32, i32* %73, i64 %78
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %80, %82
  %84 = add nuw i64 %78, 1
  br i1 %83, label %75, label %85

85:                                               ; preds = %77, %75, %69, %67, %56
  %86 = phi i1 [ true, %56 ], [ false, %67 ], [ false, %69 ], [ false, %75 ], [ true, %77 ]
  %87 = load i32, i32* %50, align 8
  %88 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %91, label %110

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %49, i64 0, i32 8
  %93 = load i8, i8* %92, align 8
  %94 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 8
  %95 = load i8, i8* %94, align 8
  %96 = icmp eq i8 %93, %95
  br i1 %96, label %97, label %110

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %49, i64 0, i32 9
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 9
  %101 = load i8, i8* %100, align 1
  %102 = icmp ne i8 %99, %101
  %103 = or i1 %86, %102
  br i1 %103, label %110, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %49, i64 0, i32 13
  %106 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %105, align 8
  %107 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %61, i64 0, i32 13
  %108 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %107, align 8
  %109 = icmp eq %"class.sh::TStructure"* %106, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %104, %85, %91, %97
  %111 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %112 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %111, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %112, %"struct.sh::TSourceLoc"* dereferenceable(16) %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.417, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.413, i64 0, i64 0)) #17
  br label %113

113:                                              ; preds = %104, %4, %53, %110
  %114 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %115 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %114, i64 40) #17
  %116 = bitcast i8* %115 to %"class.sh::TIntermBranch"*
  %117 = bitcast i8* %115 to i32 (...)***
  %118 = getelementptr inbounds i8, i8* %115, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN2sh13TIntermBranchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %119 = getelementptr inbounds i8, i8* %115, i64 24
  store i8 %1, i8* %119, align 8
  %120 = getelementptr inbounds i8, i8* %115, i64 32
  %121 = bitcast i8* %120 to %"class.sh::TIntermTyped"**
  store %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"** %121, align 8
  %122 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 4 %122, i64 16, i1 false) #17
  ret %"class.sh::TIntermBranch"* %116
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext15appendStatementEPNS_12TIntermBlockEPNS_11TIntermNodeE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermBlock"*, %"class.sh::TIntermNode"*) local_unnamed_addr #2 align 2 {
  %4 = icmp eq %"class.sh::TIntermNode"* %2, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %3, %15
  %6 = phi %"class.sh::TIntermNode"* [ %18, %15 ], [ %2, %3 ]
  %7 = bitcast %"class.sh::TIntermNode"* %6 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %8 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %8, i64 12
  %10 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %9, align 8
  %11 = tail call %"class.sh::TIntermSwizzle"* %10(%"class.sh::TIntermNode"* %6) #17
  %12 = icmp eq %"class.sh::TIntermSwizzle"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %11, i64 0, i32 1
  br label %15

15:                                               ; preds = %31, %13
  %16 = phi %"class.sh::TIntermTyped"** [ %14, %13 ], [ %32, %31 ]
  %17 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %16, align 8
  %18 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %17, i64 0, i32 0
  br label %5

19:                                               ; preds = %5
  %20 = bitcast %"class.sh::TIntermNode"* %6 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %21 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %21, i64 13
  %23 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %22, align 8
  %24 = tail call %"class.sh::TIntermBinary"* %23(%"class.sh::TIntermNode"* %6) #17
  %25 = icmp eq %"class.sh::TIntermBinary"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %24, i64 0, i32 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, -4
  %30 = icmp eq i8 %29, 44
  br i1 %30, label %31, label %45

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %24, i64 0, i32 2
  br label %15

33:                                               ; preds = %19
  %34 = bitcast %"class.sh::TIntermNode"* %6 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %35 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %35, i64 19
  %37 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %36, align 8
  %38 = tail call %"class.sh::TIntermSymbol"* %37(%"class.sh::TIntermNode"* %6) #17
  %39 = icmp eq %"class.sh::TIntermSymbol"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %42 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %41, align 8
  %43 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %38, i64 0, i32 1
  %44 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %43, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %42, %"class.sh::TVariable"* dereferenceable(40) %44) #17
  br label %45

45:                                               ; preds = %26, %33, %40
  tail call void @_ZN2sh12TIntermBlock15appendStatementEPNS_11TIntermNodeE(%"class.sh::TIntermBlock"* %1, %"class.sh::TIntermNode"* nonnull %2) #17
  br label %46

46:                                               ; preds = %3, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext18checkTextureGatherEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 5
  %4 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1327
  %8 = icmp ult i32 %7, 88
  br i1 %8, label %9, label %106

9:                                                ; preds = %2
  %10 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %11 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %11, i64 32
  %13 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %12, align 8
  %14 = tail call %"class.sh::TVector.30"* %13(%"class.sh::TIntermAggregate"* %1) #17
  %15 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %17 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %16, align 8
  %18 = bitcast %"class.sh::TIntermNode"* %17 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %19 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %19, i64 4
  %21 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %20, align 8
  %22 = tail call %"class.sh::TIntermTyped"* %21(%"class.sh::TIntermNode"* %17) #17
  %23 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %24 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %24, i64 31
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, align 8
  %27 = tail call dereferenceable(184) %"class.sh::TType"* %26(%"class.sh::TIntermTyped"* %22) #17
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %106 [
    i32 8, label %30
    i32 17, label %30
    i32 23, label %30
    i32 11, label %30
    i32 20, label %30
    i32 26, label %30
    i32 10, label %46
    i32 19, label %46
    i32 25, label %46
  ]

30:                                               ; preds = %9, %9, %9, %9, %9, %9
  %31 = add nsw i32 %6, -1358
  %32 = icmp ult i32 %31, 21
  %33 = add nsw i32 %6, -1379
  %34 = icmp ult i32 %33, 36
  %35 = or i1 %32, %34
  %36 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %14, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.sh::TIntermNode"*** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.sh::TVector.30"* %14 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  br i1 %35, label %44, label %42

42:                                               ; preds = %30
  %43 = icmp eq i64 %41, 24
  br i1 %43, label %54, label %106

44:                                               ; preds = %30
  %45 = icmp eq i64 %41, 32
  br i1 %45, label %54, label %106

46:                                               ; preds = %9, %9, %9
  %47 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %14, i64 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.sh::TIntermNode"*** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.sh::TVector.30"* %14 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = icmp eq i64 %52, 24
  br i1 %53, label %54, label %106

54:                                               ; preds = %46, %42, %44
  %55 = phi i64 [ %38, %44 ], [ %38, %42 ], [ %49, %46 ]
  %56 = inttoptr i64 %55 to %"class.sh::TIntermNode"**
  %57 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %56, i64 -1
  %58 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %57, align 8
  %59 = icmp eq %"class.sh::TIntermNode"* %58, null
  br i1 %59, label %106, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.sh::TIntermNode"* %58 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %62 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %62, i64 5
  %64 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %63, align 8
  %65 = tail call %"class.sh::TIntermConstantUnion"* %64(%"class.sh::TIntermNode"* nonnull %58) #17
  %66 = bitcast %"class.sh::TIntermNode"* %58 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %67 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %67, i64 4
  %69 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %68, align 8
  %70 = tail call %"class.sh::TIntermTyped"* %69(%"class.sh::TIntermNode"* nonnull %58) #17
  %71 = bitcast %"class.sh::TIntermTyped"* %70 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %72 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %71, align 8
  %73 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %72, i64 31
  %74 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %73, align 8
  %75 = tail call dereferenceable(184) %"class.sh::TType"* %74(%"class.sh::TIntermTyped"* %70) #17
  %76 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %75, i64 0, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 2
  %79 = icmp ne %"class.sh::TIntermConstantUnion"* %65, null
  %80 = and i1 %79, %78
  br i1 %80, label %90, label %81

81:                                               ; preds = %60
  %82 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %84 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %83) #17
  %85 = extractvalue { i8*, i64 } %84, 0
  %86 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %87 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %86, align 8
  %88 = icmp eq i8* %85, null
  %89 = select i1 %88, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %85
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %87, %"struct.sh::TSourceLoc"* dereferenceable(16) %82, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.418, i64 0, i64 0), i8* %89) #17
  br label %106

90:                                               ; preds = %60
  %91 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %65, i64 0, i32 1
  %92 = load %"class.sh::TConstantUnion"*, %"class.sh::TConstantUnion"** %91, align 8
  %93 = icmp eq %"class.sh::TConstantUnion"* %92, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %90
  %95 = tail call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* nonnull %92) #17
  %96 = icmp ugt i32 %95, 3
  br i1 %96, label %97, label %106

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %100 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %99) #17
  %101 = extractvalue { i8*, i64 } %100, 0
  %102 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %103 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %102, align 8
  %104 = icmp eq i8* %101, null
  %105 = select i1 %104, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %101
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %103, %"struct.sh::TSourceLoc"* dereferenceable(16) %98, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.419, i64 0, i64 0), i8* %105) #17
  br label %106

106:                                              ; preds = %90, %42, %44, %46, %9, %54, %97, %94, %81, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext18checkTextureOffsetEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 5
  %4 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %3, align 8
  %5 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %6 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %6, i64 32
  %8 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %7, align 8
  %9 = tail call %"class.sh::TVector.30"* %8(%"class.sh::TIntermAggregate"* %1) #17
  %10 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %4, i64 0, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1132
  %13 = icmp ult i32 %12, 147
  %14 = add i32 %11, -1358
  %15 = icmp ult i32 %14, 12
  %16 = or i1 %13, %15
  %17 = add i32 %11, -1379
  %18 = icmp ult i32 %17, 21
  %19 = or i1 %18, %16
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %9, i64 0, i32 0, i32 0, i32 1
  br label %33

22:                                               ; preds = %2
  %23 = add i32 %11, -1279
  %24 = icmp ult i32 %23, 35
  %25 = add i32 %11, -1370
  %26 = icmp ult i32 %25, 9
  %27 = or i1 %24, %26
  %28 = add i32 %11, -1400
  %29 = icmp ult i32 %28, 15
  %30 = or i1 %29, %27
  br i1 %30, label %31, label %126

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %9, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %31, %20
  %34 = phi %"class.sh::TIntermNode"*** [ %32, %31 ], [ %21, %20 ]
  %35 = phi i64 [ 2, %31 ], [ -1, %20 ]
  %36 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %34, align 8
  %37 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %36, i64 %35
  %38 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %37, align 8
  %39 = bitcast %"class.sh::TIntermNode"* %38 to %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)***
  %40 = icmp eq %"class.sh::TIntermNode"* %38, null
  br i1 %40, label %126, label %41

41:                                               ; preds = %33
  %42 = icmp ult i32 %14, 21
  %43 = icmp ult i32 %17, 36
  %44 = or i1 %42, %43
  %45 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 31
  %46 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 29
  %47 = select i1 %44, i32* %45, i32* %46
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 32
  %50 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 30
  %51 = select i1 %44, i32* %49, i32* %50
  %52 = load i32, i32* %51, align 4
  br i1 %43, label %53, label %127

53:                                               ; preds = %41
  %54 = bitcast %"class.sh::TIntermNode"* %38 to %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)***
  %55 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %55, i64 7
  %57 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermNode"*)** %56, align 8
  %58 = tail call %"class.sh::TIntermAggregate"* %57(%"class.sh::TIntermNode"* nonnull %38) #17
  %59 = icmp eq %"class.sh::TIntermAggregate"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.sh::TIntermAggregate"* %58 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)***
  %62 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)** %62, i64 29
  %64 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermAggregate"*)** %63, align 8
  %65 = tail call %"class.sh::TConstantUnion"* %64(%"class.sh::TIntermAggregate"* nonnull %58) #17
  %66 = icmp eq %"class.sh::TConstantUnion"* %65, null
  br i1 %66, label %67, label %76

67:                                               ; preds = %53, %60
  %68 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %70 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %69) #17
  %71 = extractvalue { i8*, i64 } %70, 0
  %72 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %73 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %72, align 8
  %74 = icmp eq i8* %71, null
  %75 = select i1 %74, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %71
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %73, %"struct.sh::TSourceLoc"* dereferenceable(16) %68, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.420, i64 0, i64 0), i8* %75) #17
  br label %126

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %58, i64 0, i32 0, i32 0
  %78 = bitcast %"class.sh::TIntermAggregate"* %58 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %79 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %79, i64 31
  %81 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %80, align 8
  %82 = tail call dereferenceable(184) %"class.sh::TType"* %81(%"class.sh::TIntermExpression"* %77) #17
  %83 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %82, i64 0, i32 10, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 1
  br i1 %85, label %86, label %91

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %82, i64 0, i32 10, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 4
  br i1 %90, label %100, label %91

91:                                               ; preds = %86, %76
  %92 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %94 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %93) #17
  %95 = extractvalue { i8*, i64 } %94, 0
  %96 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %97 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %96, align 8
  %98 = icmp eq i8* %95, null
  %99 = select i1 %98, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %95
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %97, %"struct.sh::TSourceLoc"* dereferenceable(16) %92, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.421, i64 0, i64 0), i8* %99) #17
  br label %126

100:                                              ; preds = %86
  %101 = bitcast %"class.sh::TIntermAggregate"* %58 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %102 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %102, i64 32
  %104 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %103, align 8
  %105 = tail call %"class.sh::TVector.30"* %104(%"class.sh::TIntermAggregate"* nonnull %58) #17
  %106 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %106, align 8
  %108 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %107, align 8
  %109 = bitcast %"class.sh::TIntermNode"* %108 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %110 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %109, align 8
  %111 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %110, i64 4
  %112 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %111, align 8
  %113 = tail call %"class.sh::TIntermTyped"* %112(%"class.sh::TIntermNode"* %108) #17
  %114 = bitcast %"class.sh::TIntermTyped"* %113 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %115 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %114, align 8
  %116 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %115, i64 31
  %117 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %116, align 8
  %118 = tail call dereferenceable(184) %"class.sh::TType"* %117(%"class.sh::TIntermTyped"* %113) #17
  %119 = tail call i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"* %118) #17
  %120 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %38, i64 0, i32 1
  tail call void @_ZN2sh13TParseContext24checkSingleTextureOffsetERKNS_10TSourceLocEPKNS_14TConstantUnionEmii(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %120, %"class.sh::TConstantUnion"* nonnull %65, i64 %119, i32 %48, i32 %52)
  %121 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %65, i64 %119
  tail call void @_ZN2sh13TParseContext24checkSingleTextureOffsetERKNS_10TSourceLocEPKNS_14TConstantUnionEmii(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %120, %"class.sh::TConstantUnion"* %121, i64 %119, i32 %48, i32 %52)
  %122 = shl i64 %119, 1
  %123 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %65, i64 %122
  tail call void @_ZN2sh13TParseContext24checkSingleTextureOffsetERKNS_10TSourceLocEPKNS_14TConstantUnionEmii(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %120, %"class.sh::TConstantUnion"* %123, i64 %119, i32 %48, i32 %52)
  %124 = mul i64 %119, 3
  %125 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %65, i64 %124
  tail call void @_ZN2sh13TParseContext24checkSingleTextureOffsetERKNS_10TSourceLocEPKNS_14TConstantUnionEmii(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %120, %"class.sh::TConstantUnion"* %125, i64 %119, i32 %48, i32 %52)
  br label %126

126:                                              ; preds = %100, %22, %33, %170, %160, %169, %91, %67
  ret void

127:                                              ; preds = %41
  %128 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*** %39, align 8
  %129 = getelementptr inbounds %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %128, i64 5
  %130 = load %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermConstantUnion"* (%"class.sh::TIntermNode"*)** %129, align 8
  %131 = tail call %"class.sh::TIntermConstantUnion"* %130(%"class.sh::TIntermNode"* nonnull %38) #17
  %132 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %133 = load i32, i32* %132, align 8
  %134 = icmp slt i32 %133, 311
  br i1 %134, label %135, label %140

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 26, i32 3
  %137 = load %"class.std::__1::map.53"*, %"class.std::__1::map.53"** %136, align 8
  %138 = tail call zeroext i1 @_ZN2sh18IsExtensionEnabledERKNSt3__13mapINS_10TExtensionENS_9TBehaviorENS0_4lessIS2_EENS0_9allocatorINS0_4pairIKS2_S3_EEEEEES2_(%"class.std::__1::map.53"* dereferenceable(24) %137, i8 zeroext 14) #17
  %139 = xor i1 %138, true
  br label %140

140:                                              ; preds = %135, %127
  %141 = phi i1 [ false, %127 ], [ %139, %135 ]
  %142 = bitcast %"class.sh::TIntermNode"* %38 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %143 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %142, align 8
  %144 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %143, i64 4
  %145 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %144, align 8
  %146 = tail call %"class.sh::TIntermTyped"* %145(%"class.sh::TIntermNode"* nonnull %38) #17
  %147 = bitcast %"class.sh::TIntermTyped"* %146 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %148 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %147, align 8
  %149 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %148, i64 31
  %150 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %149, align 8
  %151 = tail call dereferenceable(184) %"class.sh::TType"* %150(%"class.sh::TIntermTyped"* %146) #17
  %152 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %151, i64 0, i32 2
  %153 = load i32, i32* %152, align 8
  %154 = icmp ne i32 %153, 2
  %155 = icmp eq %"class.sh::TIntermConstantUnion"* %131, null
  %156 = or i1 %155, %154
  %157 = xor i1 %42, true
  %158 = or i1 %141, %157
  %159 = and i1 %158, %156
  br i1 %159, label %160, label %169

160:                                              ; preds = %140
  %161 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %163 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %162) #17
  %164 = extractvalue { i8*, i64 } %163, 0
  %165 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %166 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %165, align 8
  %167 = icmp eq i8* %164, null
  %168 = select i1 %167, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %164
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %166, %"struct.sh::TSourceLoc"* dereferenceable(16) %161, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.422, i64 0, i64 0), i8* %168) #17
  br label %126

169:                                              ; preds = %140
  br i1 %155, label %126, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds %"class.sh::TIntermConstantUnion", %"class.sh::TIntermConstantUnion"* %131, i64 0, i32 0
  %172 = bitcast %"class.sh::TIntermConstantUnion"* %131 to %"class.sh::TType"* (%"class.sh::TIntermExpression"*)***
  %173 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)**, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*** %172, align 8
  %174 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %173, i64 31
  %175 = load %"class.sh::TType"* (%"class.sh::TIntermExpression"*)*, %"class.sh::TType"* (%"class.sh::TIntermExpression"*)** %174, align 8
  %176 = tail call dereferenceable(184) %"class.sh::TType"* %175(%"class.sh::TIntermExpression"* %171) #17
  %177 = tail call i64 @_ZNK2sh5TType13getObjectSizeEv(%"class.sh::TType"* %176) #17
  %178 = bitcast %"class.sh::TIntermConstantUnion"* %131 to %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)***
  %179 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)**, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %179, i64 29
  %181 = load %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)*, %"class.sh::TConstantUnion"* (%"class.sh::TIntermConstantUnion"*)** %180, align 8
  %182 = tail call %"class.sh::TConstantUnion"* %181(%"class.sh::TIntermConstantUnion"* nonnull %131) #17
  %183 = getelementptr inbounds %"class.sh::TIntermNode", %"class.sh::TIntermNode"* %38, i64 0, i32 1
  tail call void @_ZN2sh13TParseContext24checkSingleTextureOffsetERKNS_10TSourceLocEPKNS_14TConstantUnionEmii(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %183, %"class.sh::TConstantUnion"* %182, i64 %177, i32 %48, i32 %52)
  br label %126
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext24checkSingleTextureOffsetERKNS_10TSourceLocEPKNS_14TConstantUnionEmii(%"class.sh::TParseContext"* nocapture readonly, %"struct.sh::TSourceLoc"* dereferenceable(16), %"class.sh::TConstantUnion"*, i64, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.std::__1::basic_stringstream", align 8
  %8 = alloca %"class.std::__1::basic_string.38", align 8
  %9 = icmp eq i64 %3, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::basic_stringstream"* %7 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_ostream.base"* %12 to %"class.std::__1::basic_ostream"*
  %14 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string.38"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %21 = bitcast %"class.std::__1::basic_stringstream"* %7 to i64*
  %22 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %23 = inttoptr i64 %20 to i8*
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %27 = bitcast %"class.std::__1::basic_ostream.base"* %12 to i64*
  %28 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %16, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 1, i32 1
  %30 = bitcast %"class.std::__1::basic_string.38"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %16, i64 0, i32 0
  %34 = bitcast %"class.std::__1::basic_stringstream"* %7 to %"class.std::__1::basic_iostream"*
  %35 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %7, i64 0, i32 2
  %36 = bitcast %"class.std::__1::basic_ios.base"* %35 to %"class.std::__1::basic_ios"*
  %37 = bitcast %"class.std::__1::basic_string.38"* %8 to i8*
  br label %39

38:                                               ; preds = %66, %6
  ret void

39:                                               ; preds = %66, %10
  %40 = phi i64 [ 0, %10 ], [ %67, %66 ]
  %41 = getelementptr inbounds %"class.sh::TConstantUnion", %"class.sh::TConstantUnion"* %2, i64 %40
  %42 = call i32 @_ZNK2sh14TConstantUnion9getIConstEv(%"class.sh::TConstantUnion"* %41) #17
  %43 = icmp sgt i32 %42, %5
  %44 = icmp slt i32 %42, %4
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %66

46:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 280, i1 false)
  call void @_ZN2sh16InitializeStreamINSt3__118basic_stringstreamIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_v(%"class.std::__1::basic_stringstream"* nonnull sret %7)
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %13, i32 %42) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* nonnull sret %8, %"class.std::__1::basic_stringbuf"* %16) #17
  %48 = load i8, i8* %18, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i8*, i8** %15, align 8
  %51 = select i1 %49, i8* %50, i8* %14
  %52 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %52, %"struct.sh::TSourceLoc"* dereferenceable(16) %1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.423, i64 0, i64 0), i8* %51) #17
  %53 = load i8, i8* %18, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %56) #18
  br label %57

57:                                               ; preds = %46, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  store i64 %20, i64* %21, align 8
  %58 = load i64, i64* %25, align 8
  %59 = getelementptr inbounds i8, i8* %11, i64 %58
  %60 = bitcast i8* %59 to i64*
  store i64 %22, i64* %60, align 8
  store i64 %26, i64* %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %61 = load i8, i8* %31, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %64) #18
  br label %65

65:                                               ; preds = %57, %63
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %33) #17
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %34, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #17
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %36) #17
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %11) #17
  br label %66

66:                                               ; preds = %39, %65
  %67 = add nuw i64 %40, 1
  %68 = icmp eq i64 %67, %3
  br i1 %68, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext20checkInterpolationFSEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 5
  %4 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1451
  %8 = icmp ult i32 %7, 24
  br i1 %8, label %9, label %100

9:                                                ; preds = %2
  %10 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)***
  %11 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)** %11, i64 7
  %13 = load %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TIntermAggregate"* (%"class.sh::TIntermAggregate"*)** %12, align 8
  %14 = tail call %"class.sh::TIntermAggregate"* %13(%"class.sh::TIntermAggregate"* %1) #17
  %15 = icmp eq %"class.sh::TIntermAggregate"* %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %18 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %18, i64 32
  %20 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %19, align 8
  %21 = tail call %"class.sh::TVector.30"* %20(%"class.sh::TIntermAggregate"* %1) #17
  %22 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %21, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.sh::TIntermNode"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.sh::TVector.30"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %45, label %28

28:                                               ; preds = %16
  %29 = inttoptr i64 %26 to %"class.sh::TIntermNode"**
  %30 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %29, align 8
  %31 = bitcast %"class.sh::TIntermNode"* %30 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %32 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %32, i64 4
  %34 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %33, align 8
  %35 = tail call %"class.sh::TIntermTyped"* %34(%"class.sh::TIntermNode"* %30) #17
  br label %45

36:                                               ; preds = %9
  %37 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)***
  %39 = load %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)** %39, i64 14
  %41 = load %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermUnary"* (%"class.sh::TIntermNode"*)** %40, align 8
  %42 = tail call %"class.sh::TIntermUnary"* %41(%"class.sh::TIntermNode"* %37) #17
  %43 = getelementptr inbounds %"class.sh::TIntermUnary", %"class.sh::TIntermUnary"* %42, i64 0, i32 1
  %44 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %43, align 8
  br label %45

45:                                               ; preds = %28, %16, %36
  %46 = phi %"class.sh::TIntermTyped"* [ %44, %36 ], [ %35, %28 ], [ null, %16 ]
  %47 = bitcast %"class.sh::TIntermTyped"* %46 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %48 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %48, i64 31
  %50 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %49, align 8
  %51 = tail call dereferenceable(184) %"class.sh::TType"* %50(%"class.sh::TIntermTyped"* %46) #17
  %52 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %51, i64 0, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = tail call zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32 %53) #17
  br i1 %54, label %100, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %46, i64 0, i32 0
  %57 = bitcast %"class.sh::TIntermTyped"* %46 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %58 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %58, i64 13
  %60 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %59, align 8
  %61 = tail call %"class.sh::TIntermBinary"* %60(%"class.sh::TIntermNode"* %56) #17
  %62 = icmp eq %"class.sh::TIntermBinary"* %61, null
  br i1 %62, label %79, label %63

63:                                               ; preds = %55, %69
  %64 = phi %"class.sh::TIntermBinary"* [ %77, %69 ], [ %61, %55 ]
  %65 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %64, i64 0, i32 0, i32 1
  %66 = load i8, i8* %65, align 8
  %67 = and i8 %66, -2
  %68 = icmp eq i8 %67, 44
  br i1 %68, label %69, label %91

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %64, i64 0, i32 2
  %71 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %70, align 8
  %72 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %71, i64 0, i32 0
  %73 = bitcast %"class.sh::TIntermTyped"* %71 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %74 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %74, i64 13
  %76 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %75, align 8
  %77 = tail call %"class.sh::TIntermBinary"* %76(%"class.sh::TIntermNode"* %72) #17
  %78 = icmp eq %"class.sh::TIntermBinary"* %77, null
  br i1 %78, label %79, label %63

79:                                               ; preds = %69, %55
  %80 = phi %"class.sh::TIntermTyped"* [ %46, %55 ], [ %71, %69 ]
  %81 = icmp eq %"class.sh::TIntermTyped"* %80, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.sh::TIntermTyped"* %80 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %84 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %84, i64 31
  %86 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %85, align 8
  %87 = tail call dereferenceable(184) %"class.sh::TType"* %86(%"class.sh::TIntermTyped"* nonnull %80) #17
  %88 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %87, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = tail call zeroext i1 @_ZN2sh11IsVaryingInENS_10TQualifierE(i32 %89) #17
  br i1 %90, label %100, label %91

91:                                               ; preds = %63, %82, %79
  %92 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %46, i64 0, i32 0, i32 1
  %93 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %94 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %93) #17
  %95 = extractvalue { i8*, i64 } %94, 0
  %96 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %97 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %96, align 8
  %98 = icmp eq i8* %95, null
  %99 = select i1 %98, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %95
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %97, %"struct.sh::TSourceLoc"* dereferenceable(16) %92, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.424, i64 0, i64 0), i8* %99) #17
  br label %100

100:                                              ; preds = %45, %91, %82, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext33checkAtomicMemoryBuiltinFunctionsEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 5
  %4 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1488
  %8 = icmp ult i32 %7, 18
  br i1 %8, label %9, label %107

9:                                                ; preds = %2
  %10 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %11 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %11, i64 32
  %13 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %12, align 8
  %14 = tail call %"class.sh::TVector.30"* %13(%"class.sh::TIntermAggregate"* %1) #17
  %15 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %17 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %16, align 8
  %18 = bitcast %"class.sh::TIntermNode"* %17 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %19 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %19, i64 4
  %21 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %20, align 8
  %22 = tail call %"class.sh::TIntermTyped"* %21(%"class.sh::TIntermNode"* %17) #17
  %23 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %24 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %24, i64 31
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, align 8
  %27 = tail call dereferenceable(184) %"class.sh::TType"* %26(%"class.sh::TIntermTyped"* %22) #17
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 91
  br i1 %30, label %107, label %31

31:                                               ; preds = %9
  %32 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %23, align 8
  %33 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %32, i64 31
  %34 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %33, align 8
  %35 = tail call dereferenceable(184) %"class.sh::TType"* %34(%"class.sh::TIntermTyped"* %22) #17
  %36 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 7
  br i1 %38, label %107, label %39

39:                                               ; preds = %31
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %23, align 8
  %41 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %40, i64 31
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %41, align 8
  %43 = tail call dereferenceable(184) %"class.sh::TType"* %42(%"class.sh::TIntermTyped"* %22) #17
  %44 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 59
  br i1 %46, label %107, label %47

47:                                               ; preds = %39, %90
  %48 = phi %"class.sh::TIntermTyped"* [ %73, %90 ], [ %22, %39 ]
  %49 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %48, i64 0, i32 0
  %50 = bitcast %"class.sh::TIntermTyped"* %48 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %51 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %51, i64 13
  %53 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %52, align 8
  %54 = tail call %"class.sh::TIntermBinary"* %53(%"class.sh::TIntermNode"* %49) #17
  %55 = icmp eq %"class.sh::TIntermBinary"* %54, null
  br i1 %55, label %56, label %63

56:                                               ; preds = %47
  %57 = bitcast %"class.sh::TIntermTyped"* %48 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %58 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %58, i64 12
  %60 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %59, align 8
  %61 = tail call %"class.sh::TIntermSwizzle"* %60(%"class.sh::TIntermNode"* %49) #17
  %62 = icmp eq %"class.sh::TIntermSwizzle"* %61, null
  br i1 %62, label %98, label %63

63:                                               ; preds = %56, %47
  %64 = bitcast %"class.sh::TIntermTyped"* %48 to %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)***
  %65 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)**, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*** %64, align 8
  %66 = getelementptr inbounds %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %65, i64 25
  %67 = load %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)*, %"class.sh::TIntermNode"* (%"class.sh::TIntermNode"*, i64)** %66, align 8
  %68 = tail call %"class.sh::TIntermNode"* %67(%"class.sh::TIntermNode"* %49, i64 0) #17
  %69 = bitcast %"class.sh::TIntermNode"* %68 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %70 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %70, i64 4
  %72 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %71, align 8
  %73 = tail call %"class.sh::TIntermTyped"* %72(%"class.sh::TIntermNode"* %68) #17
  %74 = bitcast %"class.sh::TIntermTyped"* %73 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %75 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %74, align 8
  %76 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %75, i64 31
  %77 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %76, align 8
  %78 = tail call dereferenceable(184) %"class.sh::TType"* %77(%"class.sh::TIntermTyped"* %73) #17
  %79 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 91
  br i1 %81, label %107, label %82

82:                                               ; preds = %63
  %83 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %74, align 8
  %84 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %83, i64 31
  %85 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %84, align 8
  %86 = tail call dereferenceable(184) %"class.sh::TType"* %85(%"class.sh::TIntermTyped"* %73) #17
  %87 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %86, i64 0, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 7
  br i1 %89, label %107, label %90

90:                                               ; preds = %82
  %91 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %74, align 8
  %92 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %91, i64 31
  %93 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %92, align 8
  %94 = tail call dereferenceable(184) %"class.sh::TType"* %93(%"class.sh::TIntermTyped"* %73) #17
  %95 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %94, i64 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 59
  br i1 %97, label %107, label %47

98:                                               ; preds = %56
  %99 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %48, i64 0, i32 0, i32 1
  %100 = bitcast %"class.sh::TFunction"* %4 to %"class.sh::TSymbol"*
  %101 = tail call { i8*, i64 } @_ZNK2sh7TSymbol4nameEv(%"class.sh::TSymbol"* %100) #17
  %102 = extractvalue { i8*, i64 } %101, 0
  %103 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %104 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %103, align 8
  %105 = icmp eq i8* %102, null
  %106 = select i1 %105, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %102
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %104, %"struct.sh::TSourceLoc"* dereferenceable(16) %99, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.425, i64 0, i64 0), i8* %106) #17
  br label %107

107:                                              ; preds = %63, %82, %90, %9, %31, %2, %98, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext41checkImageMemoryAccessForBuiltinFunctionsEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %1, i64 0, i32 5
  %4 = load %"class.sh::TFunction"*, %"class.sh::TFunction"** %3, align 8
  %5 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1506
  %8 = icmp ult i32 %7, 1260
  br i1 %8, label %9, label %292

9:                                                ; preds = %2
  %10 = bitcast %"class.sh::TIntermAggregate"* %1 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %11 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %11, i64 32
  %13 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %12, align 8
  %14 = tail call %"class.sh::TVector.30"* %13(%"class.sh::TIntermAggregate"* %1) #17
  %15 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %15, align 8
  %17 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %16, align 8
  %18 = bitcast %"class.sh::TIntermNode"* %17 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %19 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %19, i64 4
  %21 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %20, align 8
  %22 = tail call %"class.sh::TIntermTyped"* %21(%"class.sh::TIntermNode"* %17) #17
  %23 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %24 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %24, i64 31
  %26 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %25, align 8
  %27 = tail call dereferenceable(184) %"class.sh::TType"* %26(%"class.sh::TIntermTyped"* %22) #17
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %27, i64 0, i32 5
  %29 = bitcast %"struct.sh::TMemoryQualifier"* %28 to i40*
  %30 = load i40, i40* %29, align 2
  %31 = load i32, i32* %5, align 4
  %32 = add i32 %31, -1578
  %33 = icmp ult i32 %32, 33
  br i1 %33, label %34, label %97

34:                                               ; preds = %9
  %35 = and i40 %30, 1
  %36 = icmp eq i40 %35, 0
  br i1 %36, label %292, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0
  %39 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0, i32 1
  %40 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %41 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %40, align 8
  %42 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %41, i64 13
  %43 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %42, align 8
  %44 = tail call %"class.sh::TIntermBinary"* %43(%"class.sh::TIntermNode"* %38) #17
  %45 = icmp eq %"class.sh::TIntermBinary"* %44, null
  br i1 %45, label %79, label %46

46:                                               ; preds = %37, %65
  %47 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %73, %65 ], [ %40, %37 ]
  %48 = phi %"class.sh::TIntermNode"* [ %72, %65 ], [ %38, %37 ]
  %49 = phi %"class.sh::TIntermTyped"* [ %71, %65 ], [ %22, %37 ]
  %50 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %47, align 8
  %51 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %50, i64 13
  %52 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %51, align 8
  %53 = tail call %"class.sh::TIntermBinary"* %52(%"class.sh::TIntermNode"* %48) #17
  %54 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %53, i64 0, i32 0, i32 1
  %55 = load i8, i8* %54, align 8
  %56 = icmp eq i8 %55, 45
  br i1 %56, label %65, label %57

57:                                               ; preds = %46
  %58 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %47, align 8
  %59 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %58, i64 13
  %60 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %59, align 8
  %61 = tail call %"class.sh::TIntermBinary"* %60(%"class.sh::TIntermNode"* %48) #17
  %62 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %61, i64 0, i32 0, i32 1
  %63 = load i8, i8* %62, align 8
  %64 = icmp eq i8 %63, 44
  br i1 %64, label %65, label %79

65:                                               ; preds = %57, %46
  %66 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %47, align 8
  %67 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %66, i64 13
  %68 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %67, align 8
  %69 = tail call %"class.sh::TIntermBinary"* %68(%"class.sh::TIntermNode"* %48) #17
  %70 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %69, i64 0, i32 2
  %71 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %70, align 8
  %72 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %71, i64 0, i32 0
  %73 = bitcast %"class.sh::TIntermTyped"* %71 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %74 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %74, i64 13
  %76 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %75, align 8
  %77 = tail call %"class.sh::TIntermBinary"* %76(%"class.sh::TIntermNode"* %72) #17
  %78 = icmp eq %"class.sh::TIntermBinary"* %77, null
  br i1 %78, label %79, label %46

79:                                               ; preds = %65, %57, %37
  %80 = phi %"class.sh::TIntermTyped"* [ %22, %37 ], [ %49, %57 ], [ %71, %65 ]
  %81 = phi %"class.sh::TIntermNode"* [ %38, %37 ], [ %48, %57 ], [ %72, %65 ]
  %82 = bitcast %"class.sh::TIntermTyped"* %80 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %83 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %82, align 8
  %84 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %83, i64 19
  %85 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %84, align 8
  %86 = tail call %"class.sh::TIntermSymbol"* %85(%"class.sh::TIntermNode"* %81) #17
  %87 = icmp eq %"class.sh::TIntermSymbol"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %79
  %89 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %86) #17
  %90 = extractvalue { i8*, i64 } %89, 0
  %91 = icmp eq i8* %90, null
  %92 = select i1 %91, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %90
  br label %93

93:                                               ; preds = %79, %88
  %94 = phi i8* [ %92, %88 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %79 ]
  %95 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %96 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %95, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %96, %"struct.sh::TSourceLoc"* dereferenceable(16) %39, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.426, i64 0, i64 0), i8* %94) #17
  br label %292

97:                                               ; preds = %9
  %98 = add i32 %31, -1611
  %99 = icmp ult i32 %98, 33
  br i1 %99, label %100, label %163

100:                                              ; preds = %97
  %101 = and i40 %30, 256
  %102 = icmp eq i40 %101, 0
  br i1 %102, label %292, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0
  %105 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0, i32 1
  %106 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %107 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %106, align 8
  %108 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %107, i64 13
  %109 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %108, align 8
  %110 = tail call %"class.sh::TIntermBinary"* %109(%"class.sh::TIntermNode"* %104) #17
  %111 = icmp eq %"class.sh::TIntermBinary"* %110, null
  br i1 %111, label %145, label %112

112:                                              ; preds = %103, %131
  %113 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %139, %131 ], [ %106, %103 ]
  %114 = phi %"class.sh::TIntermNode"* [ %138, %131 ], [ %104, %103 ]
  %115 = phi %"class.sh::TIntermTyped"* [ %137, %131 ], [ %22, %103 ]
  %116 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %113, align 8
  %117 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %116, i64 13
  %118 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %117, align 8
  %119 = tail call %"class.sh::TIntermBinary"* %118(%"class.sh::TIntermNode"* %114) #17
  %120 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %119, i64 0, i32 0, i32 1
  %121 = load i8, i8* %120, align 8
  %122 = icmp eq i8 %121, 45
  br i1 %122, label %131, label %123

123:                                              ; preds = %112
  %124 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %113, align 8
  %125 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %124, i64 13
  %126 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %125, align 8
  %127 = tail call %"class.sh::TIntermBinary"* %126(%"class.sh::TIntermNode"* %114) #17
  %128 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %127, i64 0, i32 0, i32 1
  %129 = load i8, i8* %128, align 8
  %130 = icmp eq i8 %129, 44
  br i1 %130, label %131, label %145

131:                                              ; preds = %123, %112
  %132 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %113, align 8
  %133 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %132, i64 13
  %134 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %133, align 8
  %135 = tail call %"class.sh::TIntermBinary"* %134(%"class.sh::TIntermNode"* %114) #17
  %136 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %135, i64 0, i32 2
  %137 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %136, align 8
  %138 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %137, i64 0, i32 0
  %139 = bitcast %"class.sh::TIntermTyped"* %137 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %140 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %139, align 8
  %141 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %140, i64 13
  %142 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %141, align 8
  %143 = tail call %"class.sh::TIntermBinary"* %142(%"class.sh::TIntermNode"* %138) #17
  %144 = icmp eq %"class.sh::TIntermBinary"* %143, null
  br i1 %144, label %145, label %112

145:                                              ; preds = %131, %123, %103
  %146 = phi %"class.sh::TIntermTyped"* [ %22, %103 ], [ %115, %123 ], [ %137, %131 ]
  %147 = phi %"class.sh::TIntermNode"* [ %104, %103 ], [ %114, %123 ], [ %138, %131 ]
  %148 = bitcast %"class.sh::TIntermTyped"* %146 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %149 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %148, align 8
  %150 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %149, i64 19
  %151 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %150, align 8
  %152 = tail call %"class.sh::TIntermSymbol"* %151(%"class.sh::TIntermNode"* %147) #17
  %153 = icmp eq %"class.sh::TIntermSymbol"* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %145
  %155 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %152) #17
  %156 = extractvalue { i8*, i64 } %155, 0
  %157 = icmp eq i8* %156, null
  %158 = select i1 %157, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %156
  br label %159

159:                                              ; preds = %145, %154
  %160 = phi i8* [ %158, %154 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %145 ]
  %161 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %162 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %161, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %162, %"struct.sh::TSourceLoc"* dereferenceable(16) %105, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.427, i64 0, i64 0), i8* %160) #17
  br label %292

163:                                              ; preds = %97
  %164 = add i32 %31, -1644
  %165 = icmp ult i32 %164, 1122
  br i1 %165, label %166, label %292

166:                                              ; preds = %163
  %167 = and i40 %30, 1
  %168 = icmp eq i40 %167, 0
  br i1 %168, label %229, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0
  %171 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0, i32 1
  %172 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %173 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %172, align 8
  %174 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %173, i64 13
  %175 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %174, align 8
  %176 = tail call %"class.sh::TIntermBinary"* %175(%"class.sh::TIntermNode"* %170) #17
  %177 = icmp eq %"class.sh::TIntermBinary"* %176, null
  br i1 %177, label %211, label %178

178:                                              ; preds = %169, %197
  %179 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %205, %197 ], [ %172, %169 ]
  %180 = phi %"class.sh::TIntermNode"* [ %204, %197 ], [ %170, %169 ]
  %181 = phi %"class.sh::TIntermTyped"* [ %203, %197 ], [ %22, %169 ]
  %182 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %179, align 8
  %183 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %182, i64 13
  %184 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %183, align 8
  %185 = tail call %"class.sh::TIntermBinary"* %184(%"class.sh::TIntermNode"* %180) #17
  %186 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %185, i64 0, i32 0, i32 1
  %187 = load i8, i8* %186, align 8
  %188 = icmp eq i8 %187, 45
  br i1 %188, label %197, label %189

189:                                              ; preds = %178
  %190 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %179, align 8
  %191 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %190, i64 13
  %192 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %191, align 8
  %193 = tail call %"class.sh::TIntermBinary"* %192(%"class.sh::TIntermNode"* %180) #17
  %194 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %193, i64 0, i32 0, i32 1
  %195 = load i8, i8* %194, align 8
  %196 = icmp eq i8 %195, 44
  br i1 %196, label %197, label %211

197:                                              ; preds = %189, %178
  %198 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %179, align 8
  %199 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %198, i64 13
  %200 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %199, align 8
  %201 = tail call %"class.sh::TIntermBinary"* %200(%"class.sh::TIntermNode"* %180) #17
  %202 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %201, i64 0, i32 2
  %203 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %202, align 8
  %204 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %203, i64 0, i32 0
  %205 = bitcast %"class.sh::TIntermTyped"* %203 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %206 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %205, align 8
  %207 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %206, i64 13
  %208 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %207, align 8
  %209 = tail call %"class.sh::TIntermBinary"* %208(%"class.sh::TIntermNode"* %204) #17
  %210 = icmp eq %"class.sh::TIntermBinary"* %209, null
  br i1 %210, label %211, label %178

211:                                              ; preds = %197, %189, %169
  %212 = phi %"class.sh::TIntermTyped"* [ %22, %169 ], [ %181, %189 ], [ %203, %197 ]
  %213 = phi %"class.sh::TIntermNode"* [ %170, %169 ], [ %180, %189 ], [ %204, %197 ]
  %214 = bitcast %"class.sh::TIntermTyped"* %212 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %215 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %214, align 8
  %216 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %215, i64 19
  %217 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %216, align 8
  %218 = tail call %"class.sh::TIntermSymbol"* %217(%"class.sh::TIntermNode"* %213) #17
  %219 = icmp eq %"class.sh::TIntermSymbol"* %218, null
  br i1 %219, label %225, label %220

220:                                              ; preds = %211
  %221 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %218) #17
  %222 = extractvalue { i8*, i64 } %221, 0
  %223 = icmp eq i8* %222, null
  %224 = select i1 %223, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %222
  br label %225

225:                                              ; preds = %211, %220
  %226 = phi i8* [ %224, %220 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %211 ]
  %227 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %228 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %227, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %228, %"struct.sh::TSourceLoc"* dereferenceable(16) %171, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.428, i64 0, i64 0), i8* %226) #17
  br label %229

229:                                              ; preds = %166, %225
  %230 = and i40 %30, 256
  %231 = icmp eq i40 %230, 0
  br i1 %231, label %292, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0
  %234 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %22, i64 0, i32 0, i32 1
  %235 = bitcast %"class.sh::TIntermTyped"* %22 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %236 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %235, align 8
  %237 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %236, i64 13
  %238 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %237, align 8
  %239 = tail call %"class.sh::TIntermBinary"* %238(%"class.sh::TIntermNode"* %233) #17
  %240 = icmp eq %"class.sh::TIntermBinary"* %239, null
  br i1 %240, label %274, label %241

241:                                              ; preds = %232, %260
  %242 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %268, %260 ], [ %235, %232 ]
  %243 = phi %"class.sh::TIntermNode"* [ %267, %260 ], [ %233, %232 ]
  %244 = phi %"class.sh::TIntermTyped"* [ %266, %260 ], [ %22, %232 ]
  %245 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %242, align 8
  %246 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %245, i64 13
  %247 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %246, align 8
  %248 = tail call %"class.sh::TIntermBinary"* %247(%"class.sh::TIntermNode"* %243) #17
  %249 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %248, i64 0, i32 0, i32 1
  %250 = load i8, i8* %249, align 8
  %251 = icmp eq i8 %250, 45
  br i1 %251, label %260, label %252

252:                                              ; preds = %241
  %253 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %242, align 8
  %254 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %253, i64 13
  %255 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %254, align 8
  %256 = tail call %"class.sh::TIntermBinary"* %255(%"class.sh::TIntermNode"* %243) #17
  %257 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %256, i64 0, i32 0, i32 1
  %258 = load i8, i8* %257, align 8
  %259 = icmp eq i8 %258, 44
  br i1 %259, label %260, label %274

260:                                              ; preds = %252, %241
  %261 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %242, align 8
  %262 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %261, i64 13
  %263 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %262, align 8
  %264 = tail call %"class.sh::TIntermBinary"* %263(%"class.sh::TIntermNode"* %243) #17
  %265 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %264, i64 0, i32 2
  %266 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %265, align 8
  %267 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %266, i64 0, i32 0
  %268 = bitcast %"class.sh::TIntermTyped"* %266 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %269 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %268, align 8
  %270 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %269, i64 13
  %271 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %270, align 8
  %272 = tail call %"class.sh::TIntermBinary"* %271(%"class.sh::TIntermNode"* %267) #17
  %273 = icmp eq %"class.sh::TIntermBinary"* %272, null
  br i1 %273, label %274, label %241

274:                                              ; preds = %260, %252, %232
  %275 = phi %"class.sh::TIntermTyped"* [ %22, %232 ], [ %244, %252 ], [ %266, %260 ]
  %276 = phi %"class.sh::TIntermNode"* [ %233, %232 ], [ %243, %252 ], [ %267, %260 ]
  %277 = bitcast %"class.sh::TIntermTyped"* %275 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %278 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %277, align 8
  %279 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %278, i64 19
  %280 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %279, align 8
  %281 = tail call %"class.sh::TIntermSymbol"* %280(%"class.sh::TIntermNode"* %276) #17
  %282 = icmp eq %"class.sh::TIntermSymbol"* %281, null
  br i1 %282, label %288, label %283

283:                                              ; preds = %274
  %284 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %281) #17
  %285 = extractvalue { i8*, i64 } %284, 0
  %286 = icmp eq i8* %285, null
  %287 = select i1 %286, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %285
  br label %288

288:                                              ; preds = %274, %283
  %289 = phi i8* [ %287, %283 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %274 ]
  %290 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %291 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %290, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %291, %"struct.sh::TSourceLoc"* dereferenceable(16) %234, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.429, i64 0, i64 0), i8* %289) #17
  br label %292

292:                                              ; preds = %93, %163, %288, %159, %229, %100, %34, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh13TParseContext45checkImageMemoryAccessForUserDefinedFunctionsEPKNS_9TFunctionEPKNS_16TIntermAggregateE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TFunction"* nocapture readonly, %"class.sh::TIntermAggregate"*) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.sh::TIntermAggregate"* %2 to %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)***
  %5 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)**, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %5, i64 33
  %7 = load %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)*, %"class.sh::TVector.30"* (%"class.sh::TIntermAggregate"*)** %6, align 8
  %8 = tail call %"class.sh::TVector.30"* %7(%"class.sh::TIntermAggregate"* %2) #17
  %9 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.sh::TIntermNode"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.sh::TVector.30"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.sh::TFunction", %"class.sh::TFunction"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  br label %20

19:                                               ; preds = %307, %3
  ret void

20:                                               ; preds = %15, %307
  %21 = phi i64 [ %13, %15 ], [ %310, %307 ]
  %22 = phi i64 [ 0, %15 ], [ %308, %307 ]
  %23 = inttoptr i64 %21 to %"class.sh::TIntermNode"**
  %24 = getelementptr inbounds %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %23, i64 %22
  %25 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %24, align 8
  %26 = bitcast %"class.sh::TIntermNode"* %25 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %27 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %27, i64 4
  %29 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %28, align 8
  %30 = tail call %"class.sh::TIntermTyped"* %29(%"class.sh::TIntermNode"* %25) #17
  %31 = bitcast %"class.sh::TIntermTyped"* %30 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %32 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %32, i64 31
  %34 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %33, align 8
  %35 = tail call dereferenceable(184) %"class.sh::TType"* %34(%"class.sh::TIntermTyped"* %30) #17
  %36 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, -51
  %39 = icmp ult i32 %38, 33
  br i1 %39, label %40, label %307

40:                                               ; preds = %20
  %41 = load %"class.sh::TVariable"**, %"class.sh::TVariable"*** %16, align 8
  %42 = getelementptr inbounds %"class.sh::TVariable"*, %"class.sh::TVariable"** %41, i64 %22
  %43 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %42, align 8
  %44 = getelementptr inbounds %"class.sh::TVariable", %"class.sh::TVariable"* %43, i64 0, i32 1
  %45 = load %"class.sh::TType"*, %"class.sh::TType"** %44, align 8
  %46 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %35, i64 0, i32 5
  %47 = bitcast %"struct.sh::TMemoryQualifier"* %46 to i40*
  %48 = load i40, i40* %47, align 2
  %49 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %45, i64 0, i32 5
  %50 = bitcast %"struct.sh::TMemoryQualifier"* %49 to i40*
  %51 = load i40, i40* %50, align 2
  %52 = and i40 %48, 1
  %53 = icmp ne i40 %52, 0
  %54 = and i40 %51, 1
  %55 = icmp eq i40 %54, 0
  %56 = and i1 %53, %55
  br i1 %56, label %57, label %115

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %30, i64 0, i32 0
  %59 = bitcast %"class.sh::TIntermTyped"* %30 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %60 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %60, i64 13
  %62 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %61, align 8
  %63 = tail call %"class.sh::TIntermBinary"* %62(%"class.sh::TIntermNode"* %58) #17
  %64 = icmp eq %"class.sh::TIntermBinary"* %63, null
  br i1 %64, label %98, label %65

65:                                               ; preds = %57, %84
  %66 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %92, %84 ], [ %59, %57 ]
  %67 = phi %"class.sh::TIntermNode"* [ %91, %84 ], [ %58, %57 ]
  %68 = phi %"class.sh::TIntermTyped"* [ %90, %84 ], [ %30, %57 ]
  %69 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %66, align 8
  %70 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %69, i64 13
  %71 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %70, align 8
  %72 = tail call %"class.sh::TIntermBinary"* %71(%"class.sh::TIntermNode"* %67) #17
  %73 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %72, i64 0, i32 0, i32 1
  %74 = load i8, i8* %73, align 8
  %75 = icmp eq i8 %74, 45
  br i1 %75, label %84, label %76

76:                                               ; preds = %65
  %77 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %66, align 8
  %78 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %77, i64 13
  %79 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %78, align 8
  %80 = tail call %"class.sh::TIntermBinary"* %79(%"class.sh::TIntermNode"* %67) #17
  %81 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %80, i64 0, i32 0, i32 1
  %82 = load i8, i8* %81, align 8
  %83 = icmp eq i8 %82, 44
  br i1 %83, label %84, label %98

84:                                               ; preds = %76, %65
  %85 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %66, align 8
  %86 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %85, i64 13
  %87 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %86, align 8
  %88 = tail call %"class.sh::TIntermBinary"* %87(%"class.sh::TIntermNode"* %67) #17
  %89 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %88, i64 0, i32 2
  %90 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %89, align 8
  %91 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %90, i64 0, i32 0
  %92 = bitcast %"class.sh::TIntermTyped"* %90 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %93 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %93, i64 13
  %95 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %94, align 8
  %96 = tail call %"class.sh::TIntermBinary"* %95(%"class.sh::TIntermNode"* %91) #17
  %97 = icmp eq %"class.sh::TIntermBinary"* %96, null
  br i1 %97, label %98, label %65

98:                                               ; preds = %84, %76, %57
  %99 = phi %"class.sh::TIntermTyped"* [ %30, %57 ], [ %68, %76 ], [ %90, %84 ]
  %100 = phi %"class.sh::TIntermNode"* [ %58, %57 ], [ %67, %76 ], [ %91, %84 ]
  %101 = bitcast %"class.sh::TIntermTyped"* %99 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %102 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %102, i64 19
  %104 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %103, align 8
  %105 = tail call %"class.sh::TIntermSymbol"* %104(%"class.sh::TIntermNode"* %100) #17
  %106 = icmp eq %"class.sh::TIntermSymbol"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %98
  %108 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %105) #17
  %109 = extractvalue { i8*, i64 } %108, 0
  %110 = icmp eq i8* %109, null
  %111 = select i1 %110, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %109
  br label %112

112:                                              ; preds = %98, %107
  %113 = phi i8* [ %111, %107 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %98 ]
  %114 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %114, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.430, i64 0, i64 0), i8* %113) #17
  br label %115

115:                                              ; preds = %40, %112
  %116 = and i40 %48, 256
  %117 = icmp ne i40 %116, 0
  %118 = and i40 %51, 256
  %119 = icmp eq i40 %118, 0
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %179

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %30, i64 0, i32 0
  %123 = bitcast %"class.sh::TIntermTyped"* %30 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %124 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %123, align 8
  %125 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %124, i64 13
  %126 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %125, align 8
  %127 = tail call %"class.sh::TIntermBinary"* %126(%"class.sh::TIntermNode"* %122) #17
  %128 = icmp eq %"class.sh::TIntermBinary"* %127, null
  br i1 %128, label %162, label %129

129:                                              ; preds = %121, %148
  %130 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %156, %148 ], [ %123, %121 ]
  %131 = phi %"class.sh::TIntermNode"* [ %155, %148 ], [ %122, %121 ]
  %132 = phi %"class.sh::TIntermTyped"* [ %154, %148 ], [ %30, %121 ]
  %133 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %130, align 8
  %134 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %133, i64 13
  %135 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %134, align 8
  %136 = tail call %"class.sh::TIntermBinary"* %135(%"class.sh::TIntermNode"* %131) #17
  %137 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %136, i64 0, i32 0, i32 1
  %138 = load i8, i8* %137, align 8
  %139 = icmp eq i8 %138, 45
  br i1 %139, label %148, label %140

140:                                              ; preds = %129
  %141 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %130, align 8
  %142 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %141, i64 13
  %143 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %142, align 8
  %144 = tail call %"class.sh::TIntermBinary"* %143(%"class.sh::TIntermNode"* %131) #17
  %145 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %144, i64 0, i32 0, i32 1
  %146 = load i8, i8* %145, align 8
  %147 = icmp eq i8 %146, 44
  br i1 %147, label %148, label %162

148:                                              ; preds = %140, %129
  %149 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %130, align 8
  %150 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %149, i64 13
  %151 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %150, align 8
  %152 = tail call %"class.sh::TIntermBinary"* %151(%"class.sh::TIntermNode"* %131) #17
  %153 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %152, i64 0, i32 2
  %154 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %153, align 8
  %155 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %154, i64 0, i32 0
  %156 = bitcast %"class.sh::TIntermTyped"* %154 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %157 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %156, align 8
  %158 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %157, i64 13
  %159 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %158, align 8
  %160 = tail call %"class.sh::TIntermBinary"* %159(%"class.sh::TIntermNode"* %155) #17
  %161 = icmp eq %"class.sh::TIntermBinary"* %160, null
  br i1 %161, label %162, label %129

162:                                              ; preds = %148, %140, %121
  %163 = phi %"class.sh::TIntermTyped"* [ %30, %121 ], [ %132, %140 ], [ %154, %148 ]
  %164 = phi %"class.sh::TIntermNode"* [ %122, %121 ], [ %131, %140 ], [ %155, %148 ]
  %165 = bitcast %"class.sh::TIntermTyped"* %163 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %166 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %165, align 8
  %167 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %166, i64 19
  %168 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %167, align 8
  %169 = tail call %"class.sh::TIntermSymbol"* %168(%"class.sh::TIntermNode"* %164) #17
  %170 = icmp eq %"class.sh::TIntermSymbol"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %162
  %172 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %169) #17
  %173 = extractvalue { i8*, i64 } %172, 0
  %174 = icmp eq i8* %173, null
  %175 = select i1 %174, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %173
  br label %176

176:                                              ; preds = %162, %171
  %177 = phi i8* [ %175, %171 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %162 ]
  %178 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %178, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.431, i64 0, i64 0), i8* %177) #17
  br label %179

179:                                              ; preds = %115, %176
  %180 = and i40 %48, 65536
  %181 = icmp ne i40 %180, 0
  %182 = and i40 %51, 65536
  %183 = icmp eq i40 %182, 0
  %184 = and i1 %181, %183
  br i1 %184, label %185, label %243

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %30, i64 0, i32 0
  %187 = bitcast %"class.sh::TIntermTyped"* %30 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %188 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %187, align 8
  %189 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %188, i64 13
  %190 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %189, align 8
  %191 = tail call %"class.sh::TIntermBinary"* %190(%"class.sh::TIntermNode"* %186) #17
  %192 = icmp eq %"class.sh::TIntermBinary"* %191, null
  br i1 %192, label %226, label %193

193:                                              ; preds = %185, %212
  %194 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %220, %212 ], [ %187, %185 ]
  %195 = phi %"class.sh::TIntermNode"* [ %219, %212 ], [ %186, %185 ]
  %196 = phi %"class.sh::TIntermTyped"* [ %218, %212 ], [ %30, %185 ]
  %197 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %194, align 8
  %198 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %197, i64 13
  %199 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %198, align 8
  %200 = tail call %"class.sh::TIntermBinary"* %199(%"class.sh::TIntermNode"* %195) #17
  %201 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %200, i64 0, i32 0, i32 1
  %202 = load i8, i8* %201, align 8
  %203 = icmp eq i8 %202, 45
  br i1 %203, label %212, label %204

204:                                              ; preds = %193
  %205 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %194, align 8
  %206 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %205, i64 13
  %207 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %206, align 8
  %208 = tail call %"class.sh::TIntermBinary"* %207(%"class.sh::TIntermNode"* %195) #17
  %209 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %208, i64 0, i32 0, i32 1
  %210 = load i8, i8* %209, align 8
  %211 = icmp eq i8 %210, 44
  br i1 %211, label %212, label %226

212:                                              ; preds = %204, %193
  %213 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %194, align 8
  %214 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %213, i64 13
  %215 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %214, align 8
  %216 = tail call %"class.sh::TIntermBinary"* %215(%"class.sh::TIntermNode"* %195) #17
  %217 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %216, i64 0, i32 2
  %218 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %217, align 8
  %219 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %218, i64 0, i32 0
  %220 = bitcast %"class.sh::TIntermTyped"* %218 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %221 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %220, align 8
  %222 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %221, i64 13
  %223 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %222, align 8
  %224 = tail call %"class.sh::TIntermBinary"* %223(%"class.sh::TIntermNode"* %219) #17
  %225 = icmp eq %"class.sh::TIntermBinary"* %224, null
  br i1 %225, label %226, label %193

226:                                              ; preds = %212, %204, %185
  %227 = phi %"class.sh::TIntermTyped"* [ %30, %185 ], [ %196, %204 ], [ %218, %212 ]
  %228 = phi %"class.sh::TIntermNode"* [ %186, %185 ], [ %195, %204 ], [ %219, %212 ]
  %229 = bitcast %"class.sh::TIntermTyped"* %227 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %230 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %229, align 8
  %231 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %230, i64 19
  %232 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %231, align 8
  %233 = tail call %"class.sh::TIntermSymbol"* %232(%"class.sh::TIntermNode"* %228) #17
  %234 = icmp eq %"class.sh::TIntermSymbol"* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %226
  %236 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %233) #17
  %237 = extractvalue { i8*, i64 } %236, 0
  %238 = icmp eq i8* %237, null
  %239 = select i1 %238, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %237
  br label %240

240:                                              ; preds = %226, %235
  %241 = phi i8* [ %239, %235 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %226 ]
  %242 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %242, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.432, i64 0, i64 0), i8* %241) #17
  br label %243

243:                                              ; preds = %179, %240
  %244 = and i40 %48, 4294967296
  %245 = icmp ne i40 %244, 0
  %246 = and i40 %51, 4294967296
  %247 = icmp eq i40 %246, 0
  %248 = and i1 %245, %247
  br i1 %248, label %249, label %307

249:                                              ; preds = %243
  %250 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %30, i64 0, i32 0
  %251 = bitcast %"class.sh::TIntermTyped"* %30 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %252 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %251, align 8
  %253 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %252, i64 13
  %254 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %253, align 8
  %255 = tail call %"class.sh::TIntermBinary"* %254(%"class.sh::TIntermNode"* %250) #17
  %256 = icmp eq %"class.sh::TIntermBinary"* %255, null
  br i1 %256, label %290, label %257

257:                                              ; preds = %249, %276
  %258 = phi %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** [ %284, %276 ], [ %251, %249 ]
  %259 = phi %"class.sh::TIntermNode"* [ %283, %276 ], [ %250, %249 ]
  %260 = phi %"class.sh::TIntermTyped"* [ %282, %276 ], [ %30, %249 ]
  %261 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %258, align 8
  %262 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %261, i64 13
  %263 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %262, align 8
  %264 = tail call %"class.sh::TIntermBinary"* %263(%"class.sh::TIntermNode"* %259) #17
  %265 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %264, i64 0, i32 0, i32 1
  %266 = load i8, i8* %265, align 8
  %267 = icmp eq i8 %266, 45
  br i1 %267, label %276, label %268

268:                                              ; preds = %257
  %269 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %258, align 8
  %270 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %269, i64 13
  %271 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %270, align 8
  %272 = tail call %"class.sh::TIntermBinary"* %271(%"class.sh::TIntermNode"* %259) #17
  %273 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %272, i64 0, i32 0, i32 1
  %274 = load i8, i8* %273, align 8
  %275 = icmp eq i8 %274, 44
  br i1 %275, label %276, label %290

276:                                              ; preds = %268, %257
  %277 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %258, align 8
  %278 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %277, i64 13
  %279 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %278, align 8
  %280 = tail call %"class.sh::TIntermBinary"* %279(%"class.sh::TIntermNode"* %259) #17
  %281 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %280, i64 0, i32 2
  %282 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %281, align 8
  %283 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %282, i64 0, i32 0
  %284 = bitcast %"class.sh::TIntermTyped"* %282 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %285 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %284, align 8
  %286 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %285, i64 13
  %287 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %286, align 8
  %288 = tail call %"class.sh::TIntermBinary"* %287(%"class.sh::TIntermNode"* %283) #17
  %289 = icmp eq %"class.sh::TIntermBinary"* %288, null
  br i1 %289, label %290, label %257

290:                                              ; preds = %276, %268, %249
  %291 = phi %"class.sh::TIntermTyped"* [ %30, %249 ], [ %260, %268 ], [ %282, %276 ]
  %292 = phi %"class.sh::TIntermNode"* [ %250, %249 ], [ %259, %268 ], [ %283, %276 ]
  %293 = bitcast %"class.sh::TIntermTyped"* %291 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %294 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %293, align 8
  %295 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %294, i64 19
  %296 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %295, align 8
  %297 = tail call %"class.sh::TIntermSymbol"* %296(%"class.sh::TIntermNode"* %292) #17
  %298 = icmp eq %"class.sh::TIntermSymbol"* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %290
  %300 = tail call { i8*, i64 } @_ZNK2sh13TIntermSymbol7getNameEv(%"class.sh::TIntermSymbol"* nonnull %297) #17
  %301 = extractvalue { i8*, i64 } %300, 0
  %302 = icmp eq i8* %301, null
  %303 = select i1 %302, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %301
  br label %304

304:                                              ; preds = %290, %299
  %305 = phi i8* [ %303, %299 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.524, i64 0, i64 0), %290 ]
  %306 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %18, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %306, %"struct.sh::TSourceLoc"* dereferenceable(16) %17, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.433, i64 0, i64 0), i8* %305) #17
  br label %307

307:                                              ; preds = %304, %243, %20
  %308 = add nuw i64 %22, 1
  %309 = load i64, i64* %10, align 8
  %310 = load i64, i64* %12, align 8
  %311 = sub i64 %309, %310
  %312 = ashr exact i64 %311, 3
  %313 = icmp ult i64 %308, %312
  br i1 %313, label %20, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext23addFunctionCallOrMethodEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TFunctionLookup"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = tail call %"class.sh::TIntermTyped"* @_ZNK2sh15TFunctionLookup8thisNodeEv(%"class.sh::TFunctionLookup"* %1) #17
  %5 = icmp eq %"class.sh::TIntermTyped"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext9addMethodEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TFunctionLookup"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  br label %14

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZNK2sh15TFunctionLookup13isConstructorEv(%"class.sh::TFunctionLookup"* %1) #17
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext14addConstructorEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TFunctionLookup"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  br label %14

12:                                               ; preds = %8
  %13 = tail call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext29addNonConstructorFunctionCallEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"* %0, %"class.sh::TFunctionLookup"* %1, %"struct.sh::TSourceLoc"* dereferenceable(16) %2)
  br label %14

14:                                               ; preds = %12, %10, %6
  %15 = phi %"class.sh::TIntermTyped"* [ %7, %6 ], [ %11, %10 ], [ %13, %12 ]
  ret %"class.sh::TIntermTyped"* %15
}

declare %"class.sh::TIntermTyped"* @_ZNK2sh15TFunctionLookup8thisNodeEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext9addMethodEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TFunctionLookup"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.sh::TType", align 8
  %5 = tail call %"class.sh::TIntermTyped"* @_ZNK2sh15TFunctionLookup8thisNodeEv(%"class.sh::TFunctionLookup"* %1) #17
  %6 = tail call dereferenceable(16) %"class.sh::ImmutableString"* @_ZNK2sh15TFunctionLookup4nameEv(%"class.sh::TFunctionLookup"* %1) #17
  %7 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %6, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  %10 = select i1 %9, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %8
  %11 = tail call i32 @strcmp(i8* %10, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.434, i64 0, i64 0)) #19
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = tail call dereferenceable(16) %"class.sh::ImmutableString"* @_ZNK2sh15TFunctionLookup4nameEv(%"class.sh::TFunctionLookup"* %1) #17
  %15 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %16 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %15, align 8
  %17 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %14, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  %20 = select i1 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %18
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %16, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.435, i64 0, i64 0), i8* %20) #17
  br label %112

21:                                               ; preds = %3
  %22 = tail call dereferenceable(24) %"class.sh::TVector.30"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"* %1) #17
  %23 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %23, align 8
  %25 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %22, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %25, align 8
  %27 = icmp eq %"class.sh::TIntermNode"** %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %30 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %29, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %30, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.436, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.434, i64 0, i64 0)) #17
  br label %112

31:                                               ; preds = %21
  %32 = bitcast %"class.sh::TIntermTyped"* %5 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %33 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %33, i64 31
  %35 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %34, align 8
  %36 = tail call dereferenceable(184) %"class.sh::TType"* %35(%"class.sh::TIntermTyped"* %5) #17
  %37 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %36, i64 0, i32 10, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %42 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %41, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %42, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.437, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.434, i64 0, i64 0)) #17
  br label %112

43:                                               ; preds = %31
  %44 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %32, align 8
  %45 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %44, i64 31
  %46 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %45, align 8
  %47 = tail call dereferenceable(184) %"class.sh::TType"* %46(%"class.sh::TIntermTyped"* %5) #17
  %48 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 74
  br i1 %50, label %51, label %58

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 48
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %57 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %56, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %57, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.438, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.434, i64 0, i64 0)) #17
  br label %112

58:                                               ; preds = %51, %43
  %59 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %60 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %59, i64 240) #17
  %61 = bitcast i8* %60 to %"class.sh::TIntermUnary"*
  tail call void @_ZN2sh12TIntermUnaryC1E9TOperatorPNS_12TIntermTypedEPKNS_9TFunctionE(%"class.sh::TIntermUnary"* %61, i8 zeroext 12, %"class.sh::TIntermTyped"* %5, %"class.sh::TFunction"* null) #17
  br label %62

62:                                               ; preds = %73, %58
  %63 = phi %"class.sh::TIntermTyped"* [ %5, %58 ], [ %75, %73 ]
  %64 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %63, i64 0, i32 0
  %65 = bitcast %"class.sh::TIntermTyped"* %63 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %66 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %66, i64 12
  %68 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %67, align 8
  %69 = tail call %"class.sh::TIntermSwizzle"* %68(%"class.sh::TIntermNode"* %64) #17
  %70 = icmp eq %"class.sh::TIntermSwizzle"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %69, i64 0, i32 1
  br label %73

73:                                               ; preds = %88, %71
  %74 = phi %"class.sh::TIntermTyped"** [ %72, %71 ], [ %89, %88 ]
  %75 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %74, align 8
  br label %62

76:                                               ; preds = %62
  %77 = bitcast %"class.sh::TIntermTyped"* %63 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %78 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %78, i64 13
  %80 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %79, align 8
  %81 = tail call %"class.sh::TIntermBinary"* %80(%"class.sh::TIntermNode"* %64) #17
  %82 = icmp eq %"class.sh::TIntermBinary"* %81, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %81, i64 0, i32 0, i32 1
  %85 = load i8, i8* %84, align 8
  %86 = and i8 %85, -4
  %87 = icmp eq i8 %86, 44
  br i1 %87, label %88, label %102

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %81, i64 0, i32 2
  br label %73

90:                                               ; preds = %76
  %91 = bitcast %"class.sh::TIntermTyped"* %63 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %92 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %92, i64 19
  %94 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %93, align 8
  %95 = tail call %"class.sh::TIntermSymbol"* %94(%"class.sh::TIntermNode"* %64) #17
  %96 = icmp eq %"class.sh::TIntermSymbol"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %99 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %98, align 8
  %100 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %95, i64 0, i32 1
  %101 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %100, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %99, %"class.sh::TVariable"* dereferenceable(40) %101) #17
  br label %102

102:                                              ; preds = %83, %90, %97
  %103 = getelementptr inbounds i8, i8* %60, i64 8
  %104 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 4 %104, i64 16, i1 false) #17
  %105 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %106 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %105, align 8
  %107 = bitcast i8* %60 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)***
  %108 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)** %108, i64 27
  %110 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermUnary"*, %"class.sh::TDiagnostics"*)** %109, align 8
  %111 = tail call %"class.sh::TIntermTyped"* %110(%"class.sh::TIntermUnary"* %61, %"class.sh::TDiagnostics"* %106) #17
  br label %115

112:                                              ; preds = %28, %55, %40, %13
  %113 = bitcast %"class.sh::TType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %113) #17
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %4, i32 3, i32 0, i32 2, i8 zeroext 1, i8 zeroext 1) #17
  %114 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %113) #17
  br label %115

115:                                              ; preds = %112, %102
  %116 = phi %"class.sh::TIntermTyped"* [ %114, %112 ], [ %111, %102 ]
  ret %"class.sh::TIntermTyped"* %116
}

declare zeroext i1 @_ZNK2sh15TFunctionLookup13isConstructorEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext29addNonConstructorFunctionCallEPNS_15TFunctionLookupERKNS_10TSourceLocE(%"class.sh::TParseContext"*, %"class.sh::TFunctionLookup"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.std::__1::array.73", align 1
  %5 = alloca %"class.sh::ImmutableString", align 8
  %6 = alloca %"class.std::__1::vector.116", align 8
  %7 = alloca %"class.sh::ImmutableString", align 8
  %8 = alloca %"class.std::__1::vector.116", align 8
  %9 = alloca %"class.sh::TType", align 8
  %10 = tail call %"class.sh::TSymbol"* @_ZNK2sh15TFunctionLookup6symbolEv(%"class.sh::TFunctionLookup"* %1) #17
  %11 = icmp eq %"class.sh::TSymbol"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = tail call %"class.sh::TSymbol"* @_ZNK2sh15TFunctionLookup6symbolEv(%"class.sh::TFunctionLookup"* %1) #17
  %14 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %13, i64 0, i32 4
  %15 = load i8, i8* %14, align 2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %12
  %18 = tail call dereferenceable(16) %"class.sh::ImmutableString"* @_ZNK2sh15TFunctionLookup4nameEv(%"class.sh::TFunctionLookup"* %1) #17
  %19 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %20 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %19, align 8
  %21 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %18, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  %24 = select i1 %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %22
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %20, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.439, i64 0, i64 0), i8* %24) #17
  br label %152

25:                                               ; preds = %3, %12
  %26 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %27 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %26, align 8
  %28 = bitcast %"class.sh::ImmutableString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #17
  %29 = tail call { i8*, i64 } @_ZNK2sh15TFunctionLookup14getMangledNameEv(%"class.sh::TFunctionLookup"* %1) #17
  %30 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 0
  %31 = extractvalue { i8*, i64 } %29, 0
  store i8* %31, i8** %30, align 8
  %32 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %5, i64 0, i32 1
  %33 = extractvalue { i8*, i64 } %29, 1
  store i64 %33, i64* %32, align 8
  %34 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable10findGlobalERKNS_15ImmutableStringE(%"class.sh::TSymbolTable"* %27, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #17
  %35 = icmp eq %"class.sh::TSymbol"* %34, null
  br i1 %35, label %36, label %55

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, -7
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %41, label %64

41:                                               ; preds = %36
  %42 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %26, align 8
  %43 = bitcast %"class.std::__1::vector.116"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #17
  call void @_ZNK2sh15TFunctionLookup37getMangledNamesForImplicitConversionsEv(%"class.std::__1::vector.116"* nonnull sret %6, %"class.sh::TFunctionLookup"* %1) #17
  %44 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable24findGlobalWithConversionERKNSt3__16vectorINS_15ImmutableStringENS1_9allocatorIS3_EEEE(%"class.sh::TSymbolTable"* %42, %"class.std::__1::vector.116"* nonnull dereferenceable(24) %6) #17
  %45 = getelementptr inbounds %"class.std::__1::vector.116", %"class.std::__1::vector.116"* %6, i64 0, i32 0, i32 0
  %46 = load %"class.sh::ImmutableString"*, %"class.sh::ImmutableString"** %45, align 8
  %47 = icmp eq %"class.sh::ImmutableString"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %41
  %49 = ptrtoint %"class.sh::ImmutableString"* %46 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.116", %"class.std::__1::vector.116"* %6, i64 0, i32 0, i32 1
  %51 = bitcast %"class.sh::ImmutableString"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.sh::ImmutableString"* %46 to i8*
  call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %48, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #17
  %54 = icmp eq %"class.sh::TSymbol"* %44, null
  br i1 %54, label %64, label %55

55:                                               ; preds = %25, %53
  %56 = phi %"class.sh::TSymbol"* [ %44, %53 ], [ %34, %25 ]
  %57 = bitcast %"class.sh::TSymbol"* %56 to %"class.sh::TFunction"*
  %58 = call dereferenceable(24) %"class.sh::TVector.30"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"* %1) #17
  %59 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* nonnull dereferenceable(80) %57, %"class.sh::TVector.30"* %58) #17
  %60 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"struct.sh::TSourceLoc"* %60 to i8*
  %62 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 4 %62, i64 16, i1 false) #17
  call void @_ZN2sh13TParseContext45checkImageMemoryAccessForUserDefinedFunctionsEPKNS_9TFunctionEPKNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* nonnull %57, %"class.sh::TIntermAggregate"* %59)
  call void @_ZN2sh13TParseContext34functionCallRValueLValueErrorCheckEPKNS_9TFunctionEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* nonnull %57, %"class.sh::TIntermAggregate"* %59)
  %63 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %59, i64 0, i32 0, i32 0, i32 0
  br label %155

64:                                               ; preds = %36, %53
  %65 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %26, align 8
  %66 = bitcast %"class.sh::ImmutableString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #17
  %67 = call { i8*, i64 } @_ZNK2sh15TFunctionLookup14getMangledNameEv(%"class.sh::TFunctionLookup"* %1) #17
  %68 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %7, i64 0, i32 0
  %69 = extractvalue { i8*, i64 } %67, 0
  store i8* %69, i8** %68, align 8
  %70 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %7, i64 0, i32 1
  %71 = extractvalue { i8*, i64 } %67, 1
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 7
  %73 = load i32, i32* %72, align 8
  %74 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable11findBuiltInERKNS_15ImmutableStringEi(%"class.sh::TSymbolTable"* %65, %"class.sh::ImmutableString"* nonnull dereferenceable(16) %7, i32 %73) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #17
  %75 = icmp eq %"class.sh::TSymbol"* %74, null
  br i1 %75, label %76, label %95

76:                                               ; preds = %64
  %77 = load i32, i32* %37, align 8
  %78 = add i32 %77, -7
  %79 = icmp ult i32 %78, 2
  br i1 %79, label %80, label %144

80:                                               ; preds = %76
  %81 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %26, align 8
  %82 = bitcast %"class.std::__1::vector.116"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #17
  call void @_ZNK2sh15TFunctionLookup37getMangledNamesForImplicitConversionsEv(%"class.std::__1::vector.116"* nonnull sret %8, %"class.sh::TFunctionLookup"* %1) #17
  %83 = load i32, i32* %72, align 8
  %84 = call %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable25findBuiltInWithConversionERKNSt3__16vectorINS_15ImmutableStringENS1_9allocatorIS3_EEEEi(%"class.sh::TSymbolTable"* %81, %"class.std::__1::vector.116"* nonnull dereferenceable(24) %8, i32 %83) #17
  %85 = getelementptr inbounds %"class.std::__1::vector.116", %"class.std::__1::vector.116"* %8, i64 0, i32 0, i32 0
  %86 = load %"class.sh::ImmutableString"*, %"class.sh::ImmutableString"** %85, align 8
  %87 = icmp eq %"class.sh::ImmutableString"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %80
  %89 = ptrtoint %"class.sh::ImmutableString"* %86 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector.116", %"class.std::__1::vector.116"* %8, i64 0, i32 0, i32 1
  %91 = bitcast %"class.sh::ImmutableString"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast %"class.sh::ImmutableString"* %86 to i8*
  call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %88, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #17
  %94 = icmp eq %"class.sh::TSymbol"* %84, null
  br i1 %94, label %144, label %95

95:                                               ; preds = %64, %93
  %96 = phi %"class.sh::TSymbol"* [ %84, %93 ], [ %74, %64 ]
  %97 = bitcast %"class.sh::TSymbol"* %96 to %"class.sh::TFunction"*
  %98 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %96, i64 0, i32 3
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #17
  store i8 %99, i8* %102, align 1
  %103 = call zeroext i1 @_ZN2sh13TParseContext26checkCanUseOneOfExtensionsILm1EEEbRKNS_10TSourceLocERKNSt3__15arrayINS_10TExtensionEXT_EEE(%"class.sh::TParseContext"* %0, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"struct.std::__1::array.73"* nonnull dereferenceable(1) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #17
  br label %104

104:                                              ; preds = %95, %101
  %105 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %96, i64 3
  %106 = bitcast %"class.sh::TSymbol"* %105 to i8*
  %107 = load i8, i8* %106, align 8
  %108 = icmp eq i8 %107, 3
  br i1 %108, label %137, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.sh::TSymbol", %"class.sh::TSymbol"* %96, i64 1, i32 1
  %111 = bitcast %"class.sh::TSymbolUniqueId"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 1
  %114 = call dereferenceable(24) %"class.sh::TVector.30"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"* %1) #17
  br i1 %113, label %115, label %125

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.sh::TVector.30", %"class.sh::TVector.30"* %114, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.sh::TIntermNode"**, %"class.sh::TIntermNode"*** %116, align 8
  %118 = load %"class.sh::TIntermNode"*, %"class.sh::TIntermNode"** %117, align 8
  %119 = bitcast %"class.sh::TIntermNode"* %118 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)***
  %120 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*** %119, align 8
  %121 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %120, i64 4
  %122 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermNode"*)** %121, align 8
  %123 = call %"class.sh::TIntermTyped"* %122(%"class.sh::TIntermNode"* %118) #17
  %124 = call %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext15createUnaryMathE9TOperatorPNS_12TIntermTypedERKNS_10TSourceLocEPKNS_9TFunctionE(%"class.sh::TParseContext"* %0, i8 zeroext %107, %"class.sh::TIntermTyped"* %123, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, %"class.sh::TFunction"* nonnull %97)
  br label %155

125:                                              ; preds = %109
  %126 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate25CreateBuiltInFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* nonnull dereferenceable(80) %97, %"class.sh::TVector.30"* %114) #17
  %127 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = bitcast %"struct.sh::TSourceLoc"* %127 to i8*
  %129 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 4 %129, i64 16, i1 false) #17
  call void @_ZN2sh13TParseContext33checkAtomicMemoryBuiltinFunctionsEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermAggregate"* %126)
  call void @_ZN2sh13TParseContext34functionCallRValueLValueErrorCheckEPKNS_9TFunctionEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* nonnull %97, %"class.sh::TIntermAggregate"* %126)
  %130 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %131 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %130, align 8
  %132 = bitcast %"class.sh::TIntermAggregate"* %126 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)***
  %133 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*** %132, align 8
  %134 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)** %133, i64 27
  %135 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermAggregate"*, %"class.sh::TDiagnostics"*)** %134, align 8
  %136 = call %"class.sh::TIntermTyped"* %135(%"class.sh::TIntermAggregate"* %126, %"class.sh::TDiagnostics"* %131) #17
  br label %155

137:                                              ; preds = %104
  %138 = call dereferenceable(24) %"class.sh::TVector.30"* @_ZN2sh15TFunctionLookup9argumentsEv(%"class.sh::TFunctionLookup"* %1) #17
  %139 = call %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate25CreateBuiltInFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* nonnull dereferenceable(80) %97, %"class.sh::TVector.30"* %138) #17
  %140 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %"struct.sh::TSourceLoc"* %140 to i8*
  %142 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 4 %142, i64 16, i1 false) #17
  call void @_ZN2sh13TParseContext18checkTextureOffsetEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermAggregate"* %139)
  call void @_ZN2sh13TParseContext18checkTextureGatherEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermAggregate"* %139)
  call void @_ZN2sh13TParseContext20checkInterpolationFSEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermAggregate"* %139)
  call void @_ZN2sh13TParseContext41checkImageMemoryAccessForBuiltinFunctionsEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TIntermAggregate"* %139)
  call void @_ZN2sh13TParseContext34functionCallRValueLValueErrorCheckEPKNS_9TFunctionEPNS_16TIntermAggregateE(%"class.sh::TParseContext"* %0, %"class.sh::TFunction"* nonnull %97, %"class.sh::TIntermAggregate"* %139)
  %143 = getelementptr inbounds %"class.sh::TIntermAggregate", %"class.sh::TIntermAggregate"* %139, i64 0, i32 0, i32 0, i32 0
  br label %155

144:                                              ; preds = %76, %93
  %145 = call dereferenceable(16) %"class.sh::ImmutableString"* @_ZNK2sh15TFunctionLookup4nameEv(%"class.sh::TFunctionLookup"* %1) #17
  %146 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %147 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %146, align 8
  %148 = getelementptr inbounds %"class.sh::ImmutableString", %"class.sh::ImmutableString"* %145, i64 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = icmp eq i8* %149, null
  %151 = select i1 %150, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* %149
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %147, %"struct.sh::TSourceLoc"* dereferenceable(16) %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.440, i64 0, i64 0), i8* %151) #17
  br label %152

152:                                              ; preds = %144, %17
  %153 = bitcast %"class.sh::TType"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %153) #17
  call void @_ZN2sh5TTypeC1ENS_10TBasicTypeENS_10TPrecisionENS_10TQualifierEhh(%"class.sh::TType"* nonnull %9, i32 1, i32 2, i32 2, i8 zeroext 1, i8 zeroext 1) #17
  %154 = call %"class.sh::TIntermTyped"* @_ZN2sh14CreateZeroNodeERKNS_5TTypeE(%"class.sh::TType"* nonnull dereferenceable(184) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %153) #17
  br label %155

155:                                              ; preds = %115, %125, %137, %55, %152
  %156 = phi %"class.sh::TIntermTyped"* [ %154, %152 ], [ %143, %137 ], [ %136, %125 ], [ %124, %115 ], [ %63, %55 ]
  ret %"class.sh::TIntermTyped"* %156
}

declare dereferenceable(16) %"class.sh::ImmutableString"* @_ZNK2sh15TFunctionLookup4nameEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

declare %"class.sh::TSymbol"* @_ZNK2sh15TFunctionLookup6symbolEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK2sh15TFunctionLookup14getMangledNameEv(%"class.sh::TFunctionLookup"*) local_unnamed_addr #3

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable24findGlobalWithConversionERKNSt3__16vectorINS_15ImmutableStringENS1_9allocatorIS3_EEEE(%"class.sh::TSymbolTable"*, %"class.std::__1::vector.116"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZNK2sh15TFunctionLookup37getMangledNamesForImplicitConversionsEv(%"class.std::__1::vector.116"* sret, %"class.sh::TFunctionLookup"*) local_unnamed_addr #3

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate18CreateFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TVector.30"*) local_unnamed_addr #3

declare %"class.sh::TSymbol"* @_ZNK2sh12TSymbolTable25findBuiltInWithConversionERKNSt3__16vectorINS_15ImmutableStringENS1_9allocatorIS3_EEEEi(%"class.sh::TSymbolTable"*, %"class.std::__1::vector.116"* dereferenceable(24), i32) local_unnamed_addr #3

declare %"class.sh::TIntermAggregate"* @_ZN2sh16TIntermAggregate25CreateBuiltInFunctionCallERKNS_9TFunctionEPNS_7TVectorIPNS_11TIntermNodeEEE(%"class.sh::TFunction"* dereferenceable(80), %"class.sh::TVector.30"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sh::TIntermTyped"* @_ZN2sh13TParseContext19addTernarySelectionEPNS_12TIntermTypedES2_S2_RKNS_10TSourceLocE(%"class.sh::TParseContext"* nocapture readonly, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"struct.sh::TSourceLoc"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.sh::TInfoSinkBase", align 8
  %7 = bitcast %"class.sh::TIntermTyped"* %1 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %8 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %8, i64 31
  %10 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %9, align 8
  %11 = tail call dereferenceable(184) %"class.sh::TType"* %10(%"class.sh::TIntermTyped"* %1) #17
  %12 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 5
  br i1 %14, label %15, label %35

15:                                               ; preds = %5
  %16 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %17 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %16, i64 31
  %18 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %17, align 8
  %19 = tail call dereferenceable(184) %"class.sh::TType"* %18(%"class.sh::TIntermTyped"* %1) #17
  %20 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %19, i64 0, i32 8
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %35

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %19, i64 0, i32 9
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 1
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %19, i64 0, i32 13
  %29 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %28, align 8
  %30 = icmp eq %"class.sh::TStructure"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %19, i64 0, i32 10, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %5, %15, %23, %27, %31
  %36 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %37 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %36, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %37, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)) #17
  br label %390

38:                                               ; preds = %31
  %39 = bitcast %"class.sh::TIntermTyped"* %2 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %40 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %40, i64 31
  %42 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %41, align 8
  %43 = tail call dereferenceable(184) %"class.sh::TType"* %42(%"class.sh::TIntermTyped"* %2) #17
  %44 = bitcast %"class.sh::TIntermTyped"* %3 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %45 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %45, i64 31
  %47 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %46, align 8
  %48 = tail call dereferenceable(184) %"class.sh::TType"* %47(%"class.sh::TIntermTyped"* %3) #17
  %49 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 10, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 10, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %50, %52
  br i1 %53, label %54, label %72

54:                                               ; preds = %38
  %55 = icmp eq i64 %50, 0
  br i1 %55, label %72, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 10, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 10, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = icmp eq i32* %58, %60
  br i1 %61, label %72, label %64

62:                                               ; preds = %64
  %63 = icmp eq i64 %71, %50
  br i1 %63, label %72, label %64

64:                                               ; preds = %56, %62
  %65 = phi i64 [ %71, %62 ], [ 0, %56 ]
  %66 = getelementptr inbounds i32, i32* %58, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds i32, i32* %60, i64 %65
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  %71 = add nuw i64 %65, 1
  br i1 %70, label %62, label %72

72:                                               ; preds = %64, %62, %56, %54, %38
  %73 = phi i1 [ true, %38 ], [ false, %54 ], [ false, %56 ], [ false, %62 ], [ true, %64 ]
  %74 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %98

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 8
  %81 = load i8, i8* %80, align 8
  %82 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 8
  %83 = load i8, i8* %82, align 8
  %84 = icmp eq i8 %81, %83
  br i1 %84, label %85, label %98

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 9
  %87 = load i8, i8* %86, align 1
  %88 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 9
  %89 = load i8, i8* %88, align 1
  %90 = icmp ne i8 %87, %89
  %91 = or i1 %73, %90
  br i1 %91, label %98, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %43, i64 0, i32 13
  %94 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %93, align 8
  %95 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %48, i64 0, i32 13
  %96 = load %"class.sh::TStructure"*, %"class.sh::TStructure"** %95, align 8
  %97 = icmp eq %"class.sh::TStructure"* %94, %96
  br i1 %97, label %139, label %98

98:                                               ; preds = %92, %72, %79, %85
  %99 = bitcast %"class.sh::TInfoSinkBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %99) #17
  %100 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 0, i64 48, i1 false) #17
  %102 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 0
  %103 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* nonnull %102, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.441, i64 0, i64 0)) #17
  %104 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %105 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %104, i64 31
  %106 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %105, align 8
  %107 = call dereferenceable(184) %"class.sh::TType"* %106(%"class.sh::TIntermTyped"* %2) #17
  %108 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* nonnull %6, %"class.sh::TType"* dereferenceable(184) %107) #17
  %109 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %108, i64 0, i32 0
  %110 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %109, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.442, i64 0, i64 0)) #17
  %111 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %44, align 8
  %112 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %111, i64 31
  %113 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %112, align 8
  %114 = call dereferenceable(184) %"class.sh::TType"* %113(%"class.sh::TIntermTyped"* %3) #17
  %115 = call dereferenceable(48) %"class.sh::TInfoSinkBase"* @_ZN2sh13TInfoSinkBaselsERKNS_5TTypeE(%"class.sh::TInfoSinkBase"* %108, %"class.sh::TType"* dereferenceable(184) %114) #17
  %116 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %115, i64 0, i32 0
  %117 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"* %116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #17
  %118 = bitcast %"class.sh::TInfoSinkBase"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  %122 = load i8*, i8** %100, align 8
  %123 = select i1 %121, i8* %122, i8* %99
  %124 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %125 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %124, align 8
  call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %125, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* %123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i64 0, i64 0)) #17
  %126 = load i32*, i32** %101, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %98
  %129 = getelementptr inbounds %"class.sh::TInfoSinkBase", %"class.sh::TInfoSinkBase"* %6, i64 0, i32 1, i32 0, i32 1
  %130 = ptrtoint i32* %126 to i64
  %131 = bitcast i32** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = bitcast i32* %126 to i8*
  call void @_ZdlPv(i8* %132) #18
  br label %133

133:                                              ; preds = %128, %98
  %134 = load i8, i8* %119, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %133
  %137 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %137) #18
  br label %138

138:                                              ; preds = %133, %136
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %99) #17
  br label %390

139:                                              ; preds = %92
  %140 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %141 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %140, i64 31
  %142 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %141, align 8
  %143 = tail call dereferenceable(184) %"class.sh::TType"* %142(%"class.sh::TIntermTyped"* %2) #17
  %144 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, -8
  %147 = icmp ult i32 %146, 43
  %148 = add i32 %145, -51
  %149 = icmp ult i32 %148, 33
  %150 = or i1 %147, %149
  %151 = icmp eq i32 %145, 6
  %152 = or i1 %151, %150
  %153 = add i32 %145, -84
  %154 = icmp ult i32 %153, 6
  %155 = or i1 %154, %152
  br i1 %155, label %156, label %159

156:                                              ; preds = %139
  %157 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %158 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %157, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %158, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.444, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i64 0, i64 0)) #17
  br label %390

159:                                              ; preds = %139
  %160 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %7, align 8
  %161 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %160, i64 31
  %162 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %161, align 8
  %163 = tail call dereferenceable(184) %"class.sh::TType"* %162(%"class.sh::TIntermTyped"* %1) #17
  %164 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %163, i64 0, i32 5
  %165 = bitcast %"struct.sh::TMemoryQualifier"* %164 to i40*
  %166 = load i40, i40* %165, align 2
  %167 = and i40 %166, 256
  %168 = icmp eq i40 %167, 0
  br i1 %168, label %169, label %189

169:                                              ; preds = %159
  %170 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %171 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %170, i64 31
  %172 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %171, align 8
  %173 = tail call dereferenceable(184) %"class.sh::TType"* %172(%"class.sh::TIntermTyped"* %2) #17
  %174 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %173, i64 0, i32 5
  %175 = bitcast %"struct.sh::TMemoryQualifier"* %174 to i40*
  %176 = load i40, i40* %175, align 2
  %177 = and i40 %176, 256
  %178 = icmp eq i40 %177, 0
  br i1 %178, label %179, label %189

179:                                              ; preds = %169
  %180 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %44, align 8
  %181 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %180, i64 31
  %182 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %181, align 8
  %183 = tail call dereferenceable(184) %"class.sh::TType"* %182(%"class.sh::TIntermTyped"* %3) #17
  %184 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %183, i64 0, i32 5
  %185 = bitcast %"struct.sh::TMemoryQualifier"* %184 to i40*
  %186 = load i40, i40* %185, align 2
  %187 = and i40 %186, 256
  %188 = icmp eq i40 %187, 0
  br i1 %188, label %192, label %189

189:                                              ; preds = %159, %169, %179
  %190 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %191 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %190, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %191, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.445, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i64 0, i64 0)) #17
  br label %390

192:                                              ; preds = %179
  %193 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %194 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %193, i64 31
  %195 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %194, align 8
  %196 = tail call dereferenceable(184) %"class.sh::TType"* %195(%"class.sh::TIntermTyped"* %2) #17
  %197 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %196, i64 0, i32 10, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %208

200:                                              ; preds = %192
  %201 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %202 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %201, i64 31
  %203 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %202, align 8
  %204 = tail call dereferenceable(184) %"class.sh::TType"* %203(%"class.sh::TIntermTyped"* %2) #17
  %205 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %204, i64 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, 90
  br i1 %207, label %208, label %211

208:                                              ; preds = %192, %200
  %209 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %210 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %209, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %210, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.446, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i64 0, i64 0)) #17
  br label %390

211:                                              ; preds = %200
  %212 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %213 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %212, i64 31
  %214 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %213, align 8
  %215 = tail call dereferenceable(184) %"class.sh::TType"* %214(%"class.sh::TIntermTyped"* %2) #17
  %216 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %215, i64 0, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = icmp eq i32 %217, 91
  br i1 %218, label %219, label %222

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %221 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %220, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %221, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.447, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i64 0, i64 0)) #17
  br label %390

222:                                              ; preds = %211
  %223 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 4
  %224 = load i32, i32* %223, align 8
  %225 = icmp eq i32 %224, 3
  br i1 %225, label %226, label %237

226:                                              ; preds = %222
  %227 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %39, align 8
  %228 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %227, i64 31
  %229 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %228, align 8
  %230 = tail call dereferenceable(184) %"class.sh::TType"* %229(%"class.sh::TIntermTyped"* %2) #17
  %231 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %226
  %235 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %236 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %235, align 8
  tail call void @_ZN2sh12TDiagnostics5errorERKNS_10TSourceLocEPKcS5_(%"class.sh::TDiagnostics"* %236, %"struct.sh::TSourceLoc"* dereferenceable(16) %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.448, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.443, i64 0, i64 0)) #17
  br label %390

237:                                              ; preds = %226, %222
  %238 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %239 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %238, i64 232) #17
  %240 = bitcast i8* %239 to %"class.sh::TIntermTernary"*
  tail call void @_ZN2sh14TIntermTernaryC1EPNS_12TIntermTypedES2_S2_(%"class.sh::TIntermTernary"* %240, %"class.sh::TIntermTyped"* %1, %"class.sh::TIntermTyped"* %2, %"class.sh::TIntermTyped"* %3) #17
  br label %241

241:                                              ; preds = %252, %237
  %242 = phi %"class.sh::TIntermTyped"* [ %1, %237 ], [ %254, %252 ]
  %243 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %242, i64 0, i32 0
  %244 = bitcast %"class.sh::TIntermTyped"* %242 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %245 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %244, align 8
  %246 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %245, i64 12
  %247 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %246, align 8
  %248 = tail call %"class.sh::TIntermSwizzle"* %247(%"class.sh::TIntermNode"* %243) #17
  %249 = icmp eq %"class.sh::TIntermSwizzle"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %241
  %251 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %248, i64 0, i32 1
  br label %252

252:                                              ; preds = %267, %250
  %253 = phi %"class.sh::TIntermTyped"** [ %251, %250 ], [ %268, %267 ]
  %254 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %253, align 8
  br label %241

255:                                              ; preds = %241
  %256 = bitcast %"class.sh::TIntermTyped"* %242 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %257 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %256, align 8
  %258 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %257, i64 13
  %259 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %258, align 8
  %260 = tail call %"class.sh::TIntermBinary"* %259(%"class.sh::TIntermNode"* %243) #17
  %261 = icmp eq %"class.sh::TIntermBinary"* %260, null
  br i1 %261, label %269, label %262

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %260, i64 0, i32 0, i32 1
  %264 = load i8, i8* %263, align 8
  %265 = and i8 %264, -4
  %266 = icmp eq i8 %265, 44
  br i1 %266, label %267, label %281

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %260, i64 0, i32 2
  br label %252

269:                                              ; preds = %255
  %270 = bitcast %"class.sh::TIntermTyped"* %242 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %271 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %270, align 8
  %272 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %271, i64 19
  %273 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %272, align 8
  %274 = tail call %"class.sh::TIntermSymbol"* %273(%"class.sh::TIntermNode"* %243) #17
  %275 = icmp eq %"class.sh::TIntermSymbol"* %274, null
  br i1 %275, label %281, label %276

276:                                              ; preds = %269
  %277 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %278 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %277, align 8
  %279 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %274, i64 0, i32 1
  %280 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %279, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %278, %"class.sh::TVariable"* dereferenceable(40) %280) #17
  br label %281

281:                                              ; preds = %262, %269, %276
  br label %282

282:                                              ; preds = %281, %293
  %283 = phi %"class.sh::TIntermTyped"* [ %295, %293 ], [ %2, %281 ]
  %284 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %283, i64 0, i32 0
  %285 = bitcast %"class.sh::TIntermTyped"* %283 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %286 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %285, align 8
  %287 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %286, i64 12
  %288 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %287, align 8
  %289 = tail call %"class.sh::TIntermSwizzle"* %288(%"class.sh::TIntermNode"* %284) #17
  %290 = icmp eq %"class.sh::TIntermSwizzle"* %289, null
  br i1 %290, label %296, label %291

291:                                              ; preds = %282
  %292 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %289, i64 0, i32 1
  br label %293

293:                                              ; preds = %308, %291
  %294 = phi %"class.sh::TIntermTyped"** [ %292, %291 ], [ %309, %308 ]
  %295 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %294, align 8
  br label %282

296:                                              ; preds = %282
  %297 = bitcast %"class.sh::TIntermTyped"* %283 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %298 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %297, align 8
  %299 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %298, i64 13
  %300 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %299, align 8
  %301 = tail call %"class.sh::TIntermBinary"* %300(%"class.sh::TIntermNode"* %284) #17
  %302 = icmp eq %"class.sh::TIntermBinary"* %301, null
  br i1 %302, label %310, label %303

303:                                              ; preds = %296
  %304 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %301, i64 0, i32 0, i32 1
  %305 = load i8, i8* %304, align 8
  %306 = and i8 %305, -4
  %307 = icmp eq i8 %306, 44
  br i1 %307, label %308, label %322

308:                                              ; preds = %303
  %309 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %301, i64 0, i32 2
  br label %293

310:                                              ; preds = %296
  %311 = bitcast %"class.sh::TIntermTyped"* %283 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %312 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %311, align 8
  %313 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %312, i64 19
  %314 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %313, align 8
  %315 = tail call %"class.sh::TIntermSymbol"* %314(%"class.sh::TIntermNode"* %284) #17
  %316 = icmp eq %"class.sh::TIntermSymbol"* %315, null
  br i1 %316, label %322, label %317

317:                                              ; preds = %310
  %318 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %319 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %318, align 8
  %320 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %315, i64 0, i32 1
  %321 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %320, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %319, %"class.sh::TVariable"* dereferenceable(40) %321) #17
  br label %322

322:                                              ; preds = %303, %310, %317
  br label %323

323:                                              ; preds = %322, %334
  %324 = phi %"class.sh::TIntermTyped"* [ %336, %334 ], [ %3, %322 ]
  %325 = getelementptr inbounds %"class.sh::TIntermTyped", %"class.sh::TIntermTyped"* %324, i64 0, i32 0
  %326 = bitcast %"class.sh::TIntermTyped"* %324 to %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)***
  %327 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*** %326, align 8
  %328 = getelementptr inbounds %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %327, i64 12
  %329 = load %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSwizzle"* (%"class.sh::TIntermNode"*)** %328, align 8
  %330 = tail call %"class.sh::TIntermSwizzle"* %329(%"class.sh::TIntermNode"* %325) #17
  %331 = icmp eq %"class.sh::TIntermSwizzle"* %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %323
  %333 = getelementptr inbounds %"class.sh::TIntermSwizzle", %"class.sh::TIntermSwizzle"* %330, i64 0, i32 1
  br label %334

334:                                              ; preds = %349, %332
  %335 = phi %"class.sh::TIntermTyped"** [ %333, %332 ], [ %350, %349 ]
  %336 = load %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"** %335, align 8
  br label %323

337:                                              ; preds = %323
  %338 = bitcast %"class.sh::TIntermTyped"* %324 to %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)***
  %339 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*** %338, align 8
  %340 = getelementptr inbounds %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %339, i64 13
  %341 = load %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermBinary"* (%"class.sh::TIntermNode"*)** %340, align 8
  %342 = tail call %"class.sh::TIntermBinary"* %341(%"class.sh::TIntermNode"* %325) #17
  %343 = icmp eq %"class.sh::TIntermBinary"* %342, null
  br i1 %343, label %351, label %344

344:                                              ; preds = %337
  %345 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %342, i64 0, i32 0, i32 1
  %346 = load i8, i8* %345, align 8
  %347 = and i8 %346, -4
  %348 = icmp eq i8 %347, 44
  br i1 %348, label %349, label %363

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.sh::TIntermBinary", %"class.sh::TIntermBinary"* %342, i64 0, i32 2
  br label %334

351:                                              ; preds = %337
  %352 = bitcast %"class.sh::TIntermTyped"* %324 to %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)***
  %353 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)**, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*** %352, align 8
  %354 = getelementptr inbounds %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %353, i64 19
  %355 = load %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)*, %"class.sh::TIntermSymbol"* (%"class.sh::TIntermNode"*)** %354, align 8
  %356 = tail call %"class.sh::TIntermSymbol"* %355(%"class.sh::TIntermNode"* %325) #17
  %357 = icmp eq %"class.sh::TIntermSymbol"* %356, null
  br i1 %357, label %363, label %358

358:                                              ; preds = %351
  %359 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 0
  %360 = load %"class.sh::TSymbolTable"*, %"class.sh::TSymbolTable"** %359, align 8
  %361 = getelementptr inbounds %"class.sh::TIntermSymbol", %"class.sh::TIntermSymbol"* %356, i64 0, i32 1
  %362 = load %"class.sh::TVariable"*, %"class.sh::TVariable"** %361, align 8
  tail call void @_ZN2sh12TSymbolTable14markStaticReadERKNS_9TVariableE(%"class.sh::TSymbolTable"* %360, %"class.sh::TVariable"* dereferenceable(40) %362) #17
  br label %363

363:                                              ; preds = %344, %351, %358
  %364 = getelementptr inbounds i8, i8* %239, i64 8
  %365 = bitcast %"struct.sh::TSourceLoc"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* align 4 %365, i64 16, i1 false) #17
  %366 = bitcast i8* %239 to %"class.sh::TIntermTyped"*
  %367 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %0, i64 0, i32 25
  %368 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %367, align 8
  %369 = bitcast i8* %239 to %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)***
  %370 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)**, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*** %369, align 8
  %371 = getelementptr inbounds %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %370, i64 27
  %372 = load %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)*, %"class.sh::TIntermTyped"* (%"class.sh::TIntermTyped"*, %"class.sh::TDiagnostics"*)** %371, align 8
  %373 = tail call %"class.sh::TIntermTyped"* %372(%"class.sh::TIntermTyped"* %366, %"class.sh::TDiagnostics"* %368) #17
  %374 = bitcast %"class.sh::TIntermTyped"* %373 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %375 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %374, align 8
  %376 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %375, i64 31
  %377 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %376, align 8
  %378 = tail call dereferenceable(184) %"class.sh::TType"* %377(%"class.sh::TIntermTyped"* %373) #17
  %379 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %378, i64 0, i32 2
  %380 = load i32, i32* %379, align 8
  %381 = bitcast i8* %239 to %"class.sh::TType"* (%"class.sh::TIntermTyped"*)***
  %382 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)**, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*** %381, align 8
  %383 = getelementptr inbounds %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %382, i64 31
  %384 = load %"class.sh::TType"* (%"class.sh::TIntermTyped"*)*, %"class.sh::TType"* (%"class.sh::TIntermTyped"*)** %383, align 8
  %385 = tail call dereferenceable(184) %"class.sh::TType"* %384(%"class.sh::TIntermTyped"* %366) #17
  %386 = getelementptr inbounds %"class.sh::TType", %"class.sh::TType"* %385, i64 0, i32 2
  %387 = load i32, i32* %386, align 8
  %388 = icmp eq i32 %380, %387
  %389 = select i1 %388, %"class.sh::TIntermTyped"* %373, %"class.sh::TIntermTyped"* %366
  br label %390

390:                                              ; preds = %35, %363, %234, %219, %208, %189, %156, %138
  %391 = phi %"class.sh::TIntermTyped"* [ %3, %138 ], [ %3, %156 ], [ %3, %189 ], [ %3, %208 ], [ %3, %219 ], [ %3, %234 ], [ %389, %363 ], [ %3, %35 ]
  ret %"class.sh::TIntermTyped"* %391
}

declare void @_ZN2sh14TIntermTernaryC1EPNS_12TIntermTypedES2_S2_(%"class.sh::TIntermTernary"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*, %"class.sh::TIntermTyped"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2sh14PaParseStringsEmPKPKcPKiPNS_13TParseContextE(i64, i8**, i32*, %"class.sh::TParseContext"*) local_unnamed_addr #2 {
  %5 = icmp eq i64 %0, 0
  %6 = icmp eq i8** %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %27, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @_Z18glslang_initializePN2sh13TParseContextE(%"class.sh::TParseContext"* %3) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %8
  %12 = tail call i32 @_Z12glslang_scanmPKPKcPKiPN2sh13TParseContextE(i64 %0, i8** nonnull %1, i32* %2, %"class.sh::TParseContext"* %3) #17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @_Z16glslang_finalizePN2sh13TParseContextE(%"class.sh::TParseContext"* %3) #17
  br label %27

16:                                               ; preds = %11
  %17 = tail call i32 @_Z13glslang_parsePN2sh13TParseContextE(%"class.sh::TParseContext"* %3) #17
  %18 = tail call i32 @_Z16glslang_finalizePN2sh13TParseContextE(%"class.sh::TParseContext"* %3) #17
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sh::TParseContext", %"class.sh::TParseContext"* %3, i64 0, i32 25
  %22 = load %"class.sh::TDiagnostics"*, %"class.sh::TDiagnostics"** %21, align 8
  %23 = getelementptr inbounds %"class.sh::TDiagnostics", %"class.sh::TDiagnostics"* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i32
  br label %27

27:                                               ; preds = %14, %16, %20, %8, %4
  %28 = phi i32 [ 1, %4 ], [ 1, %8 ], [ 1, %16 ], [ %26, %20 ], [ 1, %14 ]
  ret i32 %28
}

declare i32 @_Z18glslang_initializePN2sh13TParseContextE(%"class.sh::TParseContext"*) local_unnamed_addr #3

declare i32 @_Z12glslang_scanmPKPKcPKiPN2sh13TParseContextE(i64, i8**, i32*, %"class.sh::TParseContext"*) local_unnamed_addr #3

declare i32 @_Z13glslang_parsePN2sh13TParseContextE(%"class.sh::TParseContext"*) local_unnamed_addr #3

declare i32 @_Z16glslang_finalizePN2sh13TParseContextE(%"class.sh::TParseContext"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.38"*, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

declare zeroext i1 @_ZN5angle10BeginsWithEPKcS1_(i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #10

declare i32 @_ZNK2sh14TConstantUnion9getUConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

declare %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #3

declare i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #10

declare void @_ZN2sh17TIntermExpressionC2ERKNS_5TTypeE(%"class.sh::TIntermExpression"*, %"class.sh::TType"* dereferenceable(184)) unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare zeroext i1 @_ZNK2sh14TConstantUnion9getBConstEv(%"class.sh::TConstantUnion"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

declare zeroext i1 @_ZNK2sh13WorkGroupSize23isWorkGroupSizeMatchingERKS0_(%"struct.sh::WorkGroupSize"*, %"struct.sh::WorkGroupSize"* dereferenceable(12)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh21TQualifierWrapperBaseD2Ev(%"class.sh::TQualifierWrapperBase"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2sh21TQualifierWrapperBaseD0Ev(%"class.sh::TQualifierWrapperBase"*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string.38", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.38"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.38"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.38"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string.38"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.65"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.65"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.65"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0
  %11 = load %"class.gl::Range"*, %"class.gl::Range"** %10, align 8
  %12 = icmp eq %"class.gl::Range"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"class.gl::Range"* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 1
  %16 = bitcast %"class.gl::Range"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.gl::Range"* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIi14pool_allocatorIiEE8__appendEm(%"class.std::__1::vector.83"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.83"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.83"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #20
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 4611686018427387903, %38 ]
  %49 = tail call %"class.angle::PoolAllocator"* @_Z22GetGlobalPoolAllocatorv() #17
  %50 = shl i64 %48, 2
  %51 = tail call i8* @_ZN5angle13PoolAllocator8allocateEm(%"class.angle::PoolAllocator"* %49, i64 %50) #17
  %52 = bitcast i8* %51 to i32*
  br label %53

53:                                               ; preds = %47, %42
  %54 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %55 = phi i32* [ %52, %47 ], [ null, %42 ]
  %56 = getelementptr inbounds i32, i32* %55, i64 %33
  %57 = bitcast i32* %56 to i8*
  %58 = getelementptr inbounds i32, i32* %55, i64 %54
  %59 = getelementptr inbounds i32, i32* %56, i64 %1
  %60 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %60, i1 false) #17
  %61 = ptrtoint i32* %58 to i64
  %62 = ptrtoint i32* %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = ptrtoint i32* %64 to i64
  %66 = load i32*, i32** %6, align 8
  %67 = icmp eq i32* %66, %64
  br i1 %67, label %219, label %68

68:                                               ; preds = %53
  %69 = getelementptr i32, i32* %66, i64 -1
  %70 = ptrtoint i32* %69 to i64
  %71 = sub i64 %70, %65
  %72 = lshr i64 %71, 2
  %73 = add nuw nsw i64 %72, 1
  %74 = icmp ult i64 %73, 8
  br i1 %74, label %167, label %75

75:                                               ; preds = %68
  %76 = getelementptr i32, i32* %66, i64 -1
  %77 = ptrtoint i32* %76 to i64
  %78 = sub i64 %77, %65
  %79 = lshr i64 %78, 2
  %80 = xor i64 %79, -1
  %81 = add nsw i64 %33, %80
  %82 = getelementptr i32, i32* %55, i64 %81
  %83 = xor i64 %79, -1
  %84 = getelementptr i32, i32* %66, i64 %83
  %85 = icmp ult i32* %82, %66
  %86 = icmp ult i32* %84, %56
  %87 = and i1 %85, %86
  br i1 %87, label %167, label %88

88:                                               ; preds = %75
  %89 = and i64 %73, 9223372036854775800
  %90 = sub nsw i64 0, %89
  %91 = getelementptr i32, i32* %56, i64 %90
  %92 = sub nsw i64 0, %89
  %93 = getelementptr i32, i32* %66, i64 %92
  %94 = add nsw i64 %89, -8
  %95 = lshr exact i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %94, 0
  br i1 %98, label %145, label %99

99:                                               ; preds = %88
  %100 = sub nuw nsw i64 %96, %97
  %101 = getelementptr i32, i32* %56, i64 -1
  %102 = getelementptr i32, i32* %66, i64 -1
  %103 = getelementptr i32, i32* %56, i64 -1
  %104 = getelementptr i32, i32* %66, i64 -1
  br label %105

105:                                              ; preds = %105, %99
  %106 = phi i64 [ 0, %99 ], [ %140, %105 ]
  %107 = phi i64 [ %100, %99 ], [ %141, %105 ]
  %108 = sub i64 0, %106
  %109 = sub i64 0, %106
  %110 = getelementptr inbounds i32, i32* %101, i64 %108
  %111 = getelementptr inbounds i32, i32* %102, i64 %109
  %112 = getelementptr inbounds i32, i32* %111, i64 -3
  %113 = bitcast i32* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4, !alias.scope !33
  %115 = getelementptr inbounds i32, i32* %111, i64 -4
  %116 = getelementptr inbounds i32, i32* %115, i64 -3
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4, !alias.scope !33
  %119 = getelementptr inbounds i32, i32* %110, i64 -3
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %120, align 4, !alias.scope !36, !noalias !33
  %121 = getelementptr inbounds i32, i32* %110, i64 -4
  %122 = getelementptr inbounds i32, i32* %121, i64 -3
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %118, <4 x i32>* %123, align 4, !alias.scope !36, !noalias !33
  %124 = sub nuw nsw i64 -8, %106
  %125 = sub nuw nsw i64 -8, %106
  %126 = getelementptr inbounds i32, i32* %103, i64 %124
  %127 = getelementptr inbounds i32, i32* %104, i64 %125
  %128 = getelementptr inbounds i32, i32* %127, i64 -3
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !33
  %131 = getelementptr inbounds i32, i32* %127, i64 -4
  %132 = getelementptr inbounds i32, i32* %131, i64 -3
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !33
  %135 = getelementptr inbounds i32, i32* %126, i64 -3
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %136, align 4, !alias.scope !36, !noalias !33
  %137 = getelementptr inbounds i32, i32* %126, i64 -4
  %138 = getelementptr inbounds i32, i32* %137, i64 -3
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %139, align 4, !alias.scope !36, !noalias !33
  %140 = add i64 %106, 16
  %141 = add i64 %107, -2
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %105, !llvm.loop !38

143:                                              ; preds = %105
  %144 = sub nuw nsw i64 -16, %106
  br label %145

145:                                              ; preds = %143, %88
  %146 = phi i64 [ 0, %88 ], [ %144, %143 ]
  %147 = icmp eq i64 %97, 0
  br i1 %147, label %165, label %148

148:                                              ; preds = %145
  %149 = getelementptr i32, i32* %56, i64 -1
  %150 = getelementptr i32, i32* %66, i64 -1
  %151 = getelementptr inbounds i32, i32* %149, i64 %146
  %152 = getelementptr inbounds i32, i32* %150, i64 %146
  %153 = getelementptr inbounds i32, i32* %152, i64 -3
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !alias.scope !33
  %156 = getelementptr inbounds i32, i32* %152, i64 -4
  %157 = getelementptr inbounds i32, i32* %156, i64 -3
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4, !alias.scope !33
  %160 = getelementptr inbounds i32, i32* %151, i64 -3
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %161, align 4, !alias.scope !36, !noalias !33
  %162 = getelementptr inbounds i32, i32* %151, i64 -4
  %163 = getelementptr inbounds i32, i32* %162, i64 -3
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> %159, <4 x i32>* %164, align 4, !alias.scope !36, !noalias !33
  br label %165

165:                                              ; preds = %145, %148
  %166 = icmp eq i64 %73, %89
  br i1 %166, label %219, label %167

167:                                              ; preds = %165, %75, %68
  %168 = phi i32* [ %56, %75 ], [ %56, %68 ], [ %91, %165 ]
  %169 = phi i32* [ %66, %75 ], [ %66, %68 ], [ %93, %165 ]
  %170 = getelementptr i32, i32* %169, i64 -1
  %171 = ptrtoint i32* %170 to i64
  %172 = sub i64 %171, %65
  %173 = lshr i64 %172, 2
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 7
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %186, label %177

177:                                              ; preds = %167, %177
  %178 = phi i32* [ %181, %177 ], [ %168, %167 ]
  %179 = phi i32* [ %182, %177 ], [ %169, %167 ]
  %180 = phi i64 [ %184, %177 ], [ %175, %167 ]
  %181 = getelementptr inbounds i32, i32* %178, i64 -1
  %182 = getelementptr inbounds i32, i32* %179, i64 -1
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %181, align 4
  %184 = add i64 %180, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %177, !llvm.loop !39

186:                                              ; preds = %177, %167
  %187 = phi i32* [ undef, %167 ], [ %181, %177 ]
  %188 = phi i32* [ %168, %167 ], [ %181, %177 ]
  %189 = phi i32* [ %169, %167 ], [ %182, %177 ]
  %190 = icmp ult i64 %172, 28
  br i1 %190, label %219, label %191

191:                                              ; preds = %186, %191
  %192 = phi i32* [ %215, %191 ], [ %188, %186 ]
  %193 = phi i32* [ %216, %191 ], [ %189, %186 ]
  %194 = getelementptr inbounds i32, i32* %192, i64 -1
  %195 = getelementptr inbounds i32, i32* %193, i64 -1
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %194, align 4
  %197 = getelementptr inbounds i32, i32* %192, i64 -2
  %198 = getelementptr inbounds i32, i32* %193, i64 -2
  %199 = load i32, i32* %198, align 4
  store i32 %199, i32* %197, align 4
  %200 = getelementptr inbounds i32, i32* %192, i64 -3
  %201 = getelementptr inbounds i32, i32* %193, i64 -3
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds i32, i32* %192, i64 -4
  %204 = getelementptr inbounds i32, i32* %193, i64 -4
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %203, align 4
  %206 = getelementptr inbounds i32, i32* %192, i64 -5
  %207 = getelementptr inbounds i32, i32* %193, i64 -5
  %208 = load i32, i32* %207, align 4
  store i32 %208, i32* %206, align 4
  %209 = getelementptr inbounds i32, i32* %192, i64 -6
  %210 = getelementptr inbounds i32, i32* %193, i64 -6
  %211 = load i32, i32* %210, align 4
  store i32 %211, i32* %209, align 4
  %212 = getelementptr inbounds i32, i32* %192, i64 -7
  %213 = getelementptr inbounds i32, i32* %193, i64 -7
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* %212, align 4
  %215 = getelementptr inbounds i32, i32* %192, i64 -8
  %216 = getelementptr inbounds i32, i32* %193, i64 -8
  %217 = load i32, i32* %216, align 4
  store i32 %217, i32* %215, align 4
  %218 = icmp eq i32* %216, %64
  br i1 %218, label %219, label %191, !llvm.loop !40

219:                                              ; preds = %186, %191, %165, %53
  %220 = phi i32* [ %56, %53 ], [ %91, %165 ], [ %187, %186 ], [ %215, %191 ]
  %221 = ptrtoint i32* %220 to i64
  store i64 %221, i64* %30, align 8
  store i64 %62, i64* %7, align 8
  store i64 %61, i64* %4, align 8
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.38"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16locale7classicEv() local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5imbueERKNS_6localeE(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeC1ERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.std::__1::locale"* @_ZNSt3__16localeaSERKS0_(%"class.std::__1::locale"*, %"class.std::__1::locale"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE5imbueERKNS_6localeE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8pubimbueERKNS_6localeE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIiN2sh13TParseContext25AtomicCounterBindingStateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !21}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !21}
!31 = distinct !{!31, !23}
!32 = distinct !{!32, !21}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !21}
!39 = distinct !{!39, !23}
!40 = distinct !{!40, !21}
