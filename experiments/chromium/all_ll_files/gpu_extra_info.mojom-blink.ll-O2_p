; ModuleID = 'gen/ui/gfx/mojom/gpu_extra_info.mojom-blink.cc'
source_filename = "gen/ui/gfx/mojom/gpu_extra_info.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::mojom::blink::ANGLEFeature" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gfx::mojom::blink::GpuExtraInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.31" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.gfx::ANGLEFeature"*, i32, i32 }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33" }
%"class.WTF::VectorBufferBase.33" = type { %"struct.gfx::BufferUsageAndFormat"*, i32, i32 }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.13", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.7"*, %"class.mojo::ScopedHandleBase.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::ScopedHandleBase.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.16" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.29, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.28", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.29 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30" }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gfx::mojom::internal::ANGLEFeature_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.gfx::mojom::blink::ANGLEFeature"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.gfx::mojom::internal::GpuExtraInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.39", %"struct.mojo::internal::Pointer.40" }
%"struct.mojo::internal::Pointer.39" = type { i64 }
%"struct.mojo::internal::Pointer.40" = type { i64 }
%"class.mojo::StructPtr.41" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.gfx::mojom::blink::GpuExtraInfo"* }
%"class.mojo::internal::Array_Data.60" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.mojo::internal::Array_Data.62" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.gfx::mojom::internal::BufferUsageAndFormat_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32 }

$_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN3gfx5mojom20ANGLEFeatureDataViewEEEN3WTF6VectorINS3_12ANGLEFeatureELj0ENS7_18PartitionAllocatorEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal17ANGLEFeature_DataEEEEEPSB_PNS_7MessageE = comdat any

$_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx12ANGLEFeatureEEEmm = comdat any

$_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3gfx5mojom28BufferUsageAndFormatDataViewEEEN3WTF6VectorINS3_20BufferUsageAndFormatELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISB_EESB_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal25BufferUsageAndFormat_DataEEEEEPSB_PNS_7MessageE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx20BufferUsageAndFormatEEEmm = comdat any

$_ZN3WTF6VectorIN3gfx20BufferUsageAndFormatELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN4mojo9StructPtrIN3gfx5mojom5blink12GpuExtraInfoEE4TakeEPS5_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"category\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"bug\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"condition\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"angle_features\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"gpu_memory_buffer_support_x11\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx12ANGLEFeatureEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::ANGLEFeature]\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx20BufferUsageAndFormatEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::BufferUsageAndFormat]\00", align 1

@_ZN3gfx5mojom5blink12ANGLEFeatureC1Ev = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::ANGLEFeature"*), void (%"class.gfx::mojom::blink::ANGLEFeature"*)* @_ZN3gfx5mojom5blink12ANGLEFeatureC2Ev
@_ZN3gfx5mojom5blink12ANGLEFeatureC1ERKN3WTF6StringES6_S6_S6_S6_S6_ = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::ANGLEFeature"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*), void (%"class.gfx::mojom::blink::ANGLEFeature"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN3gfx5mojom5blink12ANGLEFeatureC2ERKN3WTF6StringES6_S6_S6_S6_S6_
@_ZN3gfx5mojom5blink12ANGLEFeatureD1Ev = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::ANGLEFeature"*), void (%"class.gfx::mojom::blink::ANGLEFeature"*)* @_ZN3gfx5mojom5blink12ANGLEFeatureD2Ev
@_ZN3gfx5mojom5blink12GpuExtraInfoC1Ev = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::GpuExtraInfo"*), void (%"class.gfx::mojom::blink::GpuExtraInfo"*)* @_ZN3gfx5mojom5blink12GpuExtraInfoC2Ev
@_ZN3gfx5mojom5blink12GpuExtraInfoC1EN3WTF6VectorINS_12ANGLEFeatureELj0ENS3_18PartitionAllocatorEEENS4_INS_20BufferUsageAndFormatELj0ES6_EE = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::GpuExtraInfo"*, %"class.WTF::Vector"*, %"class.WTF::Vector.31"*), void (%"class.gfx::mojom::blink::GpuExtraInfo"*, %"class.WTF::Vector"*, %"class.WTF::Vector.31"*)* @_ZN3gfx5mojom5blink12GpuExtraInfoC2EN3WTF6VectorINS_12ANGLEFeatureELj0ENS3_18PartitionAllocatorEEENS4_INS_20BufferUsageAndFormatELj0ES6_EE
@_ZN3gfx5mojom5blink12GpuExtraInfoD1Ev = hidden unnamed_addr alias void (%"class.gfx::mojom::blink::GpuExtraInfo"*), void (%"class.gfx::mojom::blink::GpuExtraInfo"*)* @_ZN3gfx5mojom5blink12GpuExtraInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gfx5mojom5blink12ANGLEFeatureC2Ev(%"class.gfx::mojom::blink::ANGLEFeature"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gfx::mojom::blink::ANGLEFeature"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink12ANGLEFeatureC2ERKN3WTF6StringES6_S6_S6_S6_S6_(%"class.gfx::mojom::blink::ANGLEFeature"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %7, %12, %27
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #10
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %39
  tail call void @llvm.trap() #10
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %29, %34, %49
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #10
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #10
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %51, %56, %71
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #10
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  tail call void @llvm.trap() #10
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %73, %78, %93
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %98, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %99, label %117, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %117

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i33
  %109 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #10
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !2

114:                                              ; preds = %105
  tail call void @llvm.trap() #10
  unreachable

115:                                              ; preds = %105
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %117

117:                                              ; preds = %95, %100, %115
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #10
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !2

136:                                              ; preds = %127
  tail call void @llvm.trap() #10
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  br label %139

139:                                              ; preds = %117, %122, %137
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink12ANGLEFeatureD2Ev(%"class.gfx::mojom::blink::ANGLEFeature"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #10
  br label %69

69:                                               ; preds = %52, %65, %68
  %70 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #10
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #10
  br label %103

103:                                              ; preds = %86, %99, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx5mojom5blink12ANGLEFeature14WriteIntoTraceEN8perfetto11TracedValueE(%"class.gfx::mojom::blink::ANGLEFeature"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedDictionary", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = bitcast %"class.perfetto::TracedDictionary"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %9, %"class.perfetto::TracedValue"* %1) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #10
  %18 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 0
  %19 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  %20 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %19, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %18, %"class.perfetto::TracedValue"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %11, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #10
  %21 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 1
  %22 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  %23 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %22, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %21, %"class.perfetto::TracedValue"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #10
  %24 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 2
  %25 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  %26 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %25, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %24, %"class.perfetto::TracedValue"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0)) #10
  %27 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 3
  %28 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  %29 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* nonnull align 8 %28, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %27, %"class.perfetto::TracedValue"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %14, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #10
  %30 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 4
  %31 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  %32 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %31, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %30, %"class.perfetto::TracedValue"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %15, %"class.perfetto::TracedDictionary"* nonnull %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #10
  %33 = getelementptr inbounds %"class.gfx::mojom::blink::ANGLEFeature", %"class.gfx::mojom::blink::ANGLEFeature"* %0, i64 0, i32 5
  %34 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  %35 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %34, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %33, %"class.perfetto::TracedValue"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx5mojom5blink12ANGLEFeature8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZN3gfx5mojom8internal17ANGLEFeature_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #10
  ret i1 %3
}

declare zeroext i1 @_ZN3gfx5mojom8internal17ANGLEFeature_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink12GpuExtraInfoC2Ev(%"class.gfx::mojom::blink::GpuExtraInfo"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink12GpuExtraInfoC2EN3WTF6VectorINS_12ANGLEFeatureELj0ENS3_18PartitionAllocatorEEENS4_INS_20BufferUsageAndFormatELj0ES6_EE(%"class.gfx::mojom::blink::GpuExtraInfo"* nocapture, %"class.WTF::Vector"* nocapture, %"class.WTF::Vector.31"* nocapture) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %1 to i64*
  %7 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #10
  %8 = load i64, i64* %6, align 8
  %9 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %0 to i64*
  store atomic i64 0, i64* %6 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %4, align 4
  store i32 %11, i32* %10, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %5, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %5, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector.31"* %2 to i64*
  %20 = bitcast %"class.WTF::Vector.31"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  %21 = load i64, i64* %19, align 8
  %22 = bitcast %"class.WTF::Vector.31"* %16 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %2, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %17, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %17, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %2, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %18, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %18, align 4
  store i32 %27, i32* %26, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx5mojom5blink12GpuExtraInfoD2Ev(%"class.gfx::mojom::blink::GpuExtraInfo"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %2, align 8
  %4 = icmp eq %"struct.gfx::BufferUsageAndFormat"* %3, null
  %5 = bitcast %"struct.gfx::BufferUsageAndFormat"* %3 to i8*
  br i1 %4, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #10
  store %"struct.gfx::BufferUsageAndFormat"* null, %"struct.gfx::BufferUsageAndFormat"** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %13, align 8
  %15 = icmp eq %"struct.gfx::ANGLEFeature"* %14, null
  br i1 %15, label %33, label %16, !prof !3

16:                                               ; preds = %12
  %17 = bitcast %"struct.gfx::ANGLEFeature"* %14 to i8*
  %18 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21, !prof !2

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %14, i64 %22
  br label %24

24:                                               ; preds = %24, %21
  %25 = phi %"struct.gfx::ANGLEFeature"* [ %26, %24 ], [ %14, %21 ]
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %25) #10
  %26 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %25, i64 1
  %27 = icmp eq %"struct.gfx::ANGLEFeature"* %26, %23
  br i1 %27, label %28, label %24

28:                                               ; preds = %24
  store i32 0, i32* %18, align 4
  %29 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %0 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %16
  %32 = phi i8* [ %30, %28 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #10
  store %"struct.gfx::ANGLEFeature"* null, %"struct.gfx::ANGLEFeature"** %13, align 8
  br label %33

33:                                               ; preds = %12, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx5mojom5blink12GpuExtraInfo14WriteIntoTraceEN8perfetto11TracedValueE(%"class.gfx::mojom::blink::GpuExtraInfo"* nocapture readnone, %"class.perfetto::TracedValue"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.perfetto::TracedDictionary", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.perfetto::TracedDictionary"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = bitcast %"class.perfetto::TracedDictionary"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %3, %"class.perfetto::TracedValue"* %1) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::TracedDictionary"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #10
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 7, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %13, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %14 = load i8, i8* %12, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0)) #10
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  %21 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 7, i8* %22, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #10
  %23 = getelementptr inbounds i8, i8* %20, i64 7
  store i8 0, i8* %23, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #10
  %24 = load i8, i8* %22, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %19, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx5mojom5blink12GpuExtraInfo8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZN3gfx5mojom8internal17GpuExtraInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #10
  ret i1 %3
}

declare zeroext i1 @_ZN3gfx5mojom8internal17GpuExtraInfo_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom20ANGLEFeatureDataViewENS_9StructPtrINS2_5blink12ANGLEFeatureEEEE4ReadES3_PS7_(%"class.gfx::mojom::internal::ANGLEFeature_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = tail call i8* @_Znwm(i64 48) #11, !noalias !4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 48, i1 false) #10, !noalias !4
  %5 = ptrtoint i8* %4 to i64
  %6 = bitcast i8* %4 to %"class.WTF::String"*
  %7 = getelementptr inbounds %"class.gfx::mojom::internal::ANGLEFeature_Data", %"class.gfx::mojom::internal::ANGLEFeature_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* nonnull %6) #10
  br label %20

12:                                               ; preds = %3
  %13 = bitcast %"struct.mojo::internal::Pointer"* %7 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %9
  %15 = bitcast i8* %14 to %"class.mojo::internal::Array_Data"*
  %16 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %15, %"class.WTF::String"* nonnull %6) #10
  br i1 %16, label %17, label %100

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %20

20:                                               ; preds = %11, %19, %17
  %21 = getelementptr inbounds i8, i8* %4, i64 8
  %22 = bitcast i8* %21 to %"class.WTF::String"*
  %23 = getelementptr inbounds %"class.gfx::mojom::internal::ANGLEFeature_Data", %"class.gfx::mojom::internal::ANGLEFeature_Data"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %23, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %20
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %22) #10
  br label %36

28:                                               ; preds = %20
  %29 = bitcast %"struct.mojo::internal::Pointer"* %23 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 %25
  %31 = bitcast i8* %30 to %"class.mojo::internal::Array_Data"*
  %32 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %31, %"class.WTF::String"* %22) #10
  br i1 %32, label %33, label %100

33:                                               ; preds = %28
  %34 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %22) #10
  br i1 %34, label %36, label %35

35:                                               ; preds = %33
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %36

36:                                               ; preds = %27, %35, %33
  %37 = getelementptr inbounds i8, i8* %4, i64 16
  %38 = bitcast i8* %37 to %"class.WTF::String"*
  %39 = getelementptr inbounds %"class.gfx::mojom::internal::ANGLEFeature_Data", %"class.gfx::mojom::internal::ANGLEFeature_Data"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %38) #10
  br label %52

44:                                               ; preds = %36
  %45 = bitcast %"struct.mojo::internal::Pointer"* %39 to i8*
  %46 = getelementptr inbounds i8, i8* %45, i64 %41
  %47 = bitcast i8* %46 to %"class.mojo::internal::Array_Data"*
  %48 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %47, %"class.WTF::String"* %38) #10
  br i1 %48, label %49, label %100

49:                                               ; preds = %44
  %50 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %38) #10
  br i1 %50, label %52, label %51

51:                                               ; preds = %49
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %52

52:                                               ; preds = %43, %51, %49
  %53 = getelementptr inbounds i8, i8* %4, i64 24
  %54 = bitcast i8* %53 to %"class.WTF::String"*
  %55 = getelementptr inbounds %"class.gfx::mojom::internal::ANGLEFeature_Data", %"class.gfx::mojom::internal::ANGLEFeature_Data"* %0, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %52
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %54) #10
  br label %68

60:                                               ; preds = %52
  %61 = bitcast %"struct.mojo::internal::Pointer"* %55 to i8*
  %62 = getelementptr inbounds i8, i8* %61, i64 %57
  %63 = bitcast i8* %62 to %"class.mojo::internal::Array_Data"*
  %64 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %63, %"class.WTF::String"* %54) #10
  br i1 %64, label %65, label %100

65:                                               ; preds = %60
  %66 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %54) #10
  br i1 %66, label %68, label %67

67:                                               ; preds = %65
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %68

68:                                               ; preds = %59, %67, %65
  %69 = getelementptr inbounds i8, i8* %4, i64 32
  %70 = bitcast i8* %69 to %"class.WTF::String"*
  %71 = getelementptr inbounds %"class.gfx::mojom::internal::ANGLEFeature_Data", %"class.gfx::mojom::internal::ANGLEFeature_Data"* %0, i64 0, i32 5
  %72 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %68
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %70) #10
  br label %84

76:                                               ; preds = %68
  %77 = bitcast %"struct.mojo::internal::Pointer"* %71 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %73
  %79 = bitcast i8* %78 to %"class.mojo::internal::Array_Data"*
  %80 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %79, %"class.WTF::String"* %70) #10
  br i1 %80, label %81, label %100

81:                                               ; preds = %76
  %82 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %70) #10
  br i1 %82, label %84, label %83

83:                                               ; preds = %81
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %84

84:                                               ; preds = %75, %83, %81
  %85 = getelementptr inbounds i8, i8* %4, i64 40
  %86 = bitcast i8* %85 to %"class.WTF::String"*
  %87 = getelementptr inbounds %"class.gfx::mojom::internal::ANGLEFeature_Data", %"class.gfx::mojom::internal::ANGLEFeature_Data"* %0, i64 0, i32 6
  %88 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %87, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %84
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %86) #10
  br label %100

92:                                               ; preds = %84
  %93 = bitcast %"struct.mojo::internal::Pointer"* %87 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 %89
  %95 = bitcast i8* %94 to %"class.mojo::internal::Array_Data"*
  %96 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %95, %"class.WTF::String"* %86) #10
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %86) #10
  br i1 %98, label %100, label %99

99:                                               ; preds = %97
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %100

100:                                              ; preds = %76, %44, %28, %12, %60, %92, %91, %99, %97
  %101 = phi i8 [ 0, %92 ], [ 1, %91 ], [ 1, %99 ], [ 1, %97 ], [ 0, %60 ], [ 0, %12 ], [ 0, %28 ], [ 0, %44 ], [ 0, %76 ]
  %102 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"class.gfx::mojom::blink::ANGLEFeature"*, %"class.gfx::mojom::blink::ANGLEFeature"** %102, align 8
  store %"class.gfx::mojom::blink::ANGLEFeature"* null, %"class.gfx::mojom::blink::ANGLEFeature"** %102, align 8
  %104 = icmp eq %"class.gfx::mojom::blink::ANGLEFeature"* %103, null
  br i1 %104, label %105, label %108

105:                                              ; preds = %100
  %106 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %5, i64* %106, align 8
  %107 = icmp ne i8 %101, 0
  br label %116

108:                                              ; preds = %100
  tail call void @_ZN3gfx5mojom5blink12ANGLEFeatureD2Ev(%"class.gfx::mojom::blink::ANGLEFeature"* nonnull %103) #10
  %109 = bitcast %"class.gfx::mojom::blink::ANGLEFeature"* %103 to i8*
  tail call void @_ZdlPv(i8* %109) #11
  %110 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %111 = load %"class.gfx::mojom::blink::ANGLEFeature"*, %"class.gfx::mojom::blink::ANGLEFeature"** %102, align 8
  store i64 %5, i64* %110, align 8
  %112 = icmp ne i8 %101, 0
  %113 = icmp eq %"class.gfx::mojom::blink::ANGLEFeature"* %111, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %108
  tail call void @_ZN3gfx5mojom5blink12ANGLEFeatureD2Ev(%"class.gfx::mojom::blink::ANGLEFeature"* nonnull %111) #10
  %115 = bitcast %"class.gfx::mojom::blink::ANGLEFeature"* %111 to i8*
  tail call void @_ZdlPv(i8* %115) #11
  br label %116

116:                                              ; preds = %105, %108, %114
  %117 = phi i1 [ %107, %105 ], [ %112, %108 ], [ %112, %114 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom20GpuExtraInfoDataViewENS_9StructPtrINS2_5blink12GpuExtraInfoEEEE4ReadES3_PS7_(%"class.gfx::mojom::internal::GpuExtraInfo_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr.41"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.mojo::StructPtr.41", align 8
  %5 = bitcast %"class.mojo::StructPtr.41"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.mojo::StructPtr.41", %"class.mojo::StructPtr.41"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = tail call i8* @_Znwm(i64 32) #11, !noalias !7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 32, i1 false) #10, !noalias !7
  %8 = ptrtoint i8* %7 to i64
  %9 = bitcast %"class.mojo::StructPtr.41"* %4 to i64*
  store i64 %8, i64* %9, align 8, !alias.scope !7
  %10 = bitcast i8* %7 to %"class.WTF::Vector"*
  %11 = getelementptr inbounds %"class.gfx::mojom::internal::GpuExtraInfo_Data", %"class.gfx::mojom::internal::GpuExtraInfo_Data"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.mojo::internal::Pointer.39", %"struct.mojo::internal::Pointer.39"* %11, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = bitcast %"struct.mojo::internal::Pointer.39"* %11 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %13
  %17 = bitcast i8* %16 to %"class.mojo::internal::Array_Data.60"*
  %18 = select i1 %14, %"class.mojo::internal::Array_Data.60"* null, %"class.mojo::internal::Array_Data.60"* %17
  %19 = tail call zeroext i1 @_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN3gfx5mojom20ANGLEFeatureDataViewEEEN3WTF6VectorINS3_12ANGLEFeatureELj0ENS7_18PartitionAllocatorEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal17ANGLEFeature_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data.60"* %18, %"class.WTF::Vector"* nonnull %10, %"class.mojo::Message"* %1) #10
  br i1 %19, label %20, label %48

20:                                               ; preds = %3
  %21 = getelementptr inbounds i8, i8* %7, i64 16
  %22 = getelementptr inbounds %"class.gfx::mojom::internal::GpuExtraInfo_Data", %"class.gfx::mojom::internal::GpuExtraInfo_Data"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.mojo::internal::Pointer.40", %"struct.mojo::internal::Pointer.40"* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %7, i64 24
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %7, i64 28
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %31
  %38 = bitcast i8* %21 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast i8* %21 to i64*
  store atomic i64 0, i64* %40 monotonic, align 8
  store i32 0, i32* %28, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  br label %47

41:                                               ; preds = %20
  %42 = bitcast i8* %21 to %"class.WTF::Vector.31"*
  %43 = bitcast %"struct.mojo::internal::Pointer.40"* %22 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %24
  %45 = bitcast i8* %44 to %"class.mojo::internal::Array_Data.62"*
  %46 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3gfx5mojom28BufferUsageAndFormatDataViewEEEN3WTF6VectorINS3_20BufferUsageAndFormatELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISB_EESB_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal25BufferUsageAndFormat_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data.62"* nonnull %45, %"class.WTF::Vector.31"* %42, %"class.mojo::Message"* %1) #10
  br i1 %46, label %47, label %48

47:                                               ; preds = %37, %26, %41
  br label %48

48:                                               ; preds = %3, %47, %41
  %49 = phi i1 [ false, %3 ], [ true, %47 ], [ false, %41 ]
  call void @_ZN4mojo9StructPtrIN3gfx5mojom5blink12GpuExtraInfoEE4TakeEPS5_(%"class.mojo::StructPtr.41"* %2, %"class.mojo::StructPtr.41"* nonnull %4) #10
  %50 = load %"class.gfx::mojom::blink::GpuExtraInfo"*, %"class.gfx::mojom::blink::GpuExtraInfo"** %6, align 8
  store %"class.gfx::mojom::blink::GpuExtraInfo"* null, %"class.gfx::mojom::blink::GpuExtraInfo"** %6, align 8
  %51 = icmp eq %"class.gfx::mojom::blink::GpuExtraInfo"* %50, null
  br i1 %51, label %86, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %53, align 8
  %55 = icmp eq %"struct.gfx::BufferUsageAndFormat"* %54, null
  %56 = bitcast %"struct.gfx::BufferUsageAndFormat"* %54 to i8*
  br i1 %55, label %63, label %57, !prof !3

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %50, i64 0, i32 1, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61, !prof !2

61:                                               ; preds = %57
  store i32 0, i32* %58, align 4
  br label %62

62:                                               ; preds = %61, %57
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  store %"struct.gfx::BufferUsageAndFormat"* null, %"struct.gfx::BufferUsageAndFormat"** %53, align 8
  br label %63

63:                                               ; preds = %62, %52
  %64 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %64, align 8
  %66 = icmp eq %"struct.gfx::ANGLEFeature"* %65, null
  br i1 %66, label %84, label %67, !prof !3

67:                                               ; preds = %63
  %68 = bitcast %"struct.gfx::ANGLEFeature"* %65 to i8*
  %69 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %50, i64 0, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %82, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %65, i64 %73
  br label %75

75:                                               ; preds = %75, %72
  %76 = phi %"struct.gfx::ANGLEFeature"* [ %77, %75 ], [ %65, %72 ]
  call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %76) #10
  %77 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %76, i64 1
  %78 = icmp eq %"struct.gfx::ANGLEFeature"* %77, %74
  br i1 %78, label %79, label %75

79:                                               ; preds = %75
  store i32 0, i32* %69, align 4
  %80 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %50 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %67
  %83 = phi i8* [ %81, %79 ], [ %68, %67 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %63
  %85 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %50 to i8*
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %48, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret i1 %49
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"*, %"class.WTF::String"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #3

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal10SerializerINS_13ArrayDataViewIN3gfx5mojom20ANGLEFeatureDataViewEEEN3WTF6VectorINS3_12ANGLEFeatureELj0ENS7_18PartitionAllocatorEEEE11DeserializeEPNS0_10Array_DataINS0_7PointerINS4_8internal17ANGLEFeature_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data.60"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp eq %"class.mojo::internal::Array_Data.60"* %0, null
  br i1 %4, label %5, label %27

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %14, align 8
  %16 = zext i32 %11 to i64
  %17 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %15, i64 %16
  br label %18

18:                                               ; preds = %18, %13
  %19 = phi %"struct.gfx::ANGLEFeature"* [ %20, %18 ], [ %15, %13 ]
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %19) #10
  %20 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %19, i64 1
  %21 = icmp eq %"struct.gfx::ANGLEFeature"* %20, %17
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  store i32 0, i32* %10, align 4
  br label %23

23:                                               ; preds = %22, %9
  %24 = bitcast %"class.WTF::Vector"* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store i32 0, i32* %6, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %25) #10
  br label %52

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.mojo::internal::Array_Data.60", %"class.mojo::internal::Array_Data.60"* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 1
  tail call void @_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %29) #10
  %30 = load i32, i32* %28, align 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.mojo::internal::Array_Data.60", %"class.mojo::internal::Array_Data.60"* %0, i64 1
  br label %34

34:                                               ; preds = %48, %32
  %35 = phi i64 [ 0, %32 ], [ %40, %48 ]
  %36 = getelementptr inbounds %"class.mojo::internal::Array_Data.60", %"class.mojo::internal::Array_Data.60"* %33, i64 %35
  %37 = bitcast %"class.mojo::internal::Array_Data.60"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = add nuw nsw i64 %35, 1
  %41 = trunc i64 %35 to i32
  %42 = tail call dereferenceable(144) %"struct.gfx::ANGLEFeature"* @_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %41) #10
  br i1 %39, label %48, label %43

43:                                               ; preds = %34
  %44 = bitcast %"class.mojo::internal::Array_Data.60"* %36 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %38
  %46 = bitcast i8* %45 to %"class.gfx::mojom::internal::ANGLEFeature_Data"*
  %47 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom20ANGLEFeatureDataViewENS1_12ANGLEFeatureEE4ReadES3_PS4_(%"class.gfx::mojom::internal::ANGLEFeature_Data"* nonnull %46, %"class.mojo::Message"* %2, %"struct.gfx::ANGLEFeature"* %42) #10
  br i1 %47, label %48, label %52

48:                                               ; preds = %43, %34
  %49 = load i32, i32* %28, align 1
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %40, %50
  br i1 %51, label %34, label %52

52:                                               ; preds = %48, %43, %27, %23, %5
  %53 = phi i1 [ true, %5 ], [ true, %23 ], [ true, %27 ], [ true, %48 ], [ false, %43 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.gfx::ANGLEFeature"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"struct.gfx::ANGLEFeature"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN3gfx12ANGLEFeatureC1EOS0_(%"struct.gfx::ANGLEFeature"* %16, %"struct.gfx::ANGLEFeature"* dereferenceable(144) %15) #10
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %15) #10
  %17 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %16, i64 1
  %18 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %15, i64 1
  %19 = icmp eq %"struct.gfx::ANGLEFeature"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %"struct.gfx::ANGLEFeature"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #10
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx12ANGLEFeatureEEEmm(i64 %23) #10
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx12ANGLEFeatureEEEPKcv, i64 0, i64 0)) #10
  %26 = udiv i64 %24, 144
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"struct.gfx::ANGLEFeature"* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %"struct.gfx::ANGLEFeature"*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %"struct.gfx::ANGLEFeature"* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %"struct.gfx::ANGLEFeature"* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN3gfx12ANGLEFeatureC1EOS0_(%"struct.gfx::ANGLEFeature"* %41, %"struct.gfx::ANGLEFeature"* dereferenceable(144) %40) #10
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %40) #10
  %42 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %41, i64 1
  %43 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %40, i64 1
  %44 = icmp eq %"struct.gfx::ANGLEFeature"* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx12ANGLEFeatureEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 14898517
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 14898517) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 144
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZN3gfx12ANGLEFeatureC1EOS0_(%"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"* dereferenceable(144)) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %59, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %15
  %16 = phi %"struct.gfx::ANGLEFeature"* [ %17, %15 ], [ %14, %12 ]
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %16) #10
  %17 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %16, i64 1
  %18 = icmp eq %"struct.gfx::ANGLEFeature"* %17, %10
  br i1 %18, label %59, label %15

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %45

23:                                               ; preds = %19
  %24 = lshr i32 %21, 2
  %25 = add nuw i32 %21, 1
  %26 = add i32 %25, %24
  %27 = icmp ugt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  %29 = icmp ugt i32 %28, %1
  %30 = select i1 %29, i32 %28, i32 %1
  %31 = icmp ult i32 %21, %30
  br i1 %31, label %32, label %45, !prof !3

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %33, align 8
  %35 = icmp eq %"struct.gfx::ANGLEFeature"* %34, null
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = zext i32 %30 to i64
  %38 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx12ANGLEFeatureEEEmm(i64 %37) #10
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx12ANGLEFeatureEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 144
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %20, align 8
  br label %45

44:                                               ; preds = %32
  tail call void @_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %30) #10
  br label %45

45:                                               ; preds = %44, %36, %23, %19
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %46, align 8
  %48 = load i32, i32* %3, align 4
  %49 = zext i32 %1 to i64
  %50 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %47, i64 %49
  %51 = icmp eq i32 %48, %1
  br i1 %51, label %59, label %52

52:                                               ; preds = %45
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %47, i64 %53
  br label %55

55:                                               ; preds = %52, %55
  %56 = phi %"struct.gfx::ANGLEFeature"* [ %57, %55 ], [ %54, %52 ]
  tail call void @_ZN3gfx12ANGLEFeatureC1Ev(%"struct.gfx::ANGLEFeature"* %56) #10
  %57 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %56, i64 1
  %58 = icmp eq %"struct.gfx::ANGLEFeature"* %57, %50
  br i1 %58, label %59, label %55

59:                                               ; preds = %15, %55, %6, %45
  store i32 %1, i32* %3, align 4
  ret void
}

declare void @_ZN3gfx12ANGLEFeatureC1Ev(%"struct.gfx::ANGLEFeature"*) unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom20ANGLEFeatureDataViewENS1_12ANGLEFeatureEE4ReadES3_PS4_(%"class.gfx::mojom::internal::ANGLEFeature_Data"*, %"class.mojo::Message"*, %"struct.gfx::ANGLEFeature"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(144) %"struct.gfx::ANGLEFeature"* @_ZN3WTF6VectorIN3gfx12ANGLEFeatureELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %24, i64 %25
  ret %"struct.gfx::ANGLEFeature"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3gfx5mojom28BufferUsageAndFormatDataViewEEEN3WTF6VectorINS3_20BufferUsageAndFormatELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISB_EESB_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal25BufferUsageAndFormat_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data.62"*, %"class.WTF::Vector.31"*, %"class.mojo::Message"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.62", %"class.mojo::internal::Array_Data.62"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %101

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %5
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %5
  %20 = select i1 %19, i32 %18, i32 %5
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !3

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %23, align 8
  %25 = icmp eq %"struct.gfx::BufferUsageAndFormat"* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx20BufferUsageAndFormatEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx20BufferUsageAndFormatEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.31"* %1 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"struct.gfx::BufferUsageAndFormat"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"struct.gfx::BufferUsageAndFormat"* %37 to i8*
  br i1 %40, label %42, label %48, !prof !3

42:                                               ; preds = %34
  %43 = load i32, i32* %6, align 4
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %45, i1 false) #10
  %46 = bitcast %"class.WTF::Vector.31"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  %50 = bitcast %"class.WTF::Vector.31"* %1 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %48, %29, %13, %9
  %53 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %53, align 8
  %55 = load i32, i32* %6, align 4
  %56 = zext i32 %5 to i64
  %57 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %54, i64 %56
  %58 = icmp eq i32 %55, %5
  br i1 %58, label %101, label %59

59:                                               ; preds = %52
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %54, i64 %60
  %62 = shl nuw nsw i64 %56, 3
  %63 = add nsw i64 %62, -8
  %64 = shl nuw nsw i64 %60, 3
  %65 = sub nsw i64 %63, %64
  %66 = lshr exact i64 %65, 3
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 7
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %59, %70
  %71 = phi %"struct.gfx::BufferUsageAndFormat"* [ %75, %70 ], [ %61, %59 ]
  %72 = phi i64 [ %76, %70 ], [ %68, %59 ]
  %73 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %71, i64 0, i32 0
  store i32 0, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %71, i64 0, i32 1
  store i32 6, i32* %74, align 4
  %75 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %71, i64 1
  %76 = add i64 %72, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %70, !llvm.loop !10

78:                                               ; preds = %70, %59
  %79 = phi %"struct.gfx::BufferUsageAndFormat"* [ %61, %59 ], [ %75, %70 ]
  %80 = icmp ult i64 %65, 56
  br i1 %80, label %101, label %81

81:                                               ; preds = %78, %81
  %82 = phi %"struct.gfx::BufferUsageAndFormat"* [ %99, %81 ], [ %79, %78 ]
  %83 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 0, i32 0
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 0, i32 1
  store i32 6, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 1, i32 0
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 1, i32 1
  store i32 6, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 2, i32 0
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 2, i32 1
  store i32 6, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 3, i32 0
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 3, i32 1
  store i32 6, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 4, i32 0
  store i32 0, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 4, i32 1
  store i32 6, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 5, i32 0
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 5, i32 1
  store i32 6, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 6, i32 0
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 6, i32 1
  store i32 6, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 7, i32 0
  store i32 0, i32* %97, align 4
  %98 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 7, i32 1
  store i32 6, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %82, i64 8
  %100 = icmp eq %"struct.gfx::BufferUsageAndFormat"* %99, %57
  br i1 %100, label %101, label %81

101:                                              ; preds = %78, %81, %52, %3
  store i32 %5, i32* %6, align 4
  %102 = load i32, i32* %4, align 1
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %126, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.mojo::internal::Array_Data.62", %"class.mojo::internal::Array_Data.62"* %0, i64 1
  br label %106

106:                                              ; preds = %104, %122
  %107 = phi i64 [ 0, %104 ], [ %114, %122 ]
  %108 = getelementptr inbounds %"class.mojo::internal::Array_Data.62", %"class.mojo::internal::Array_Data.62"* %105, i64 %107
  %109 = bitcast %"class.mojo::internal::Array_Data.62"* %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  %112 = bitcast %"class.mojo::internal::Array_Data.62"* %108 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %110
  %114 = add nuw nsw i64 %107, 1
  %115 = trunc i64 %107 to i32
  %116 = tail call dereferenceable(8) %"struct.gfx::BufferUsageAndFormat"* @_ZN3WTF6VectorIN3gfx20BufferUsageAndFormatELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.31"* %1, i32 %115) #10
  %117 = icmp eq i8* %113, null
  %118 = or i1 %111, %117
  br i1 %118, label %122, label %119

119:                                              ; preds = %106
  %120 = bitcast i8* %113 to %"class.gfx::mojom::internal::BufferUsageAndFormat_Data"*
  %121 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom28BufferUsageAndFormatDataViewENS1_20BufferUsageAndFormatEE4ReadES3_PS4_(%"class.gfx::mojom::internal::BufferUsageAndFormat_Data"* nonnull %120, %"struct.gfx::BufferUsageAndFormat"* %116) #10
  br i1 %121, label %122, label %126

122:                                              ; preds = %106, %119
  %123 = load i32, i32* %4, align 1
  %124 = zext i32 %123 to i64
  %125 = icmp ult i64 %114, %124
  br i1 %125, label %106, label %126

126:                                              ; preds = %122, %119, %101
  %127 = phi i1 [ true, %101 ], [ false, %119 ], [ true, %122 ]
  ret i1 %127
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx20BufferUsageAndFormatEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN3gfx5mojom28BufferUsageAndFormatDataViewENS1_20BufferUsageAndFormatEE4ReadES3_PS4_(%"class.gfx::mojom::internal::BufferUsageAndFormat_Data"*, %"struct.gfx::BufferUsageAndFormat"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.gfx::BufferUsageAndFormat"* @_ZN3WTF6VectorIN3gfx20BufferUsageAndFormatELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.31"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.gfx::BufferUsageAndFormat", %"struct.gfx::BufferUsageAndFormat"* %24, i64 %25
  ret %"struct.gfx::BufferUsageAndFormat"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN3gfx5mojom5blink12GpuExtraInfoEE4TakeEPS5_(%"class.mojo::StructPtr.41"*, %"class.mojo::StructPtr.41"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.mojo::StructPtr.41", %"class.mojo::StructPtr.41"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.gfx::mojom::blink::GpuExtraInfo"*, %"class.gfx::mojom::blink::GpuExtraInfo"** %3, align 8
  store %"class.gfx::mojom::blink::GpuExtraInfo"* null, %"class.gfx::mojom::blink::GpuExtraInfo"** %3, align 8
  %5 = icmp eq %"class.gfx::mojom::blink::GpuExtraInfo"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.mojo::StructPtr.41"* %0 to i64*
  br label %44

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"** %9, align 8
  %11 = icmp eq %"struct.gfx::BufferUsageAndFormat"* %10, null
  %12 = bitcast %"struct.gfx::BufferUsageAndFormat"* %10 to i8*
  br i1 %11, label %19, label %13, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #10
  store %"struct.gfx::BufferUsageAndFormat"* null, %"struct.gfx::BufferUsageAndFormat"** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"** %20, align 8
  %22 = icmp eq %"struct.gfx::ANGLEFeature"* %21, null
  br i1 %22, label %40, label %23, !prof !3

23:                                               ; preds = %19
  %24 = bitcast %"struct.gfx::ANGLEFeature"* %21 to i8*
  %25 = getelementptr inbounds %"class.gfx::mojom::blink::GpuExtraInfo", %"class.gfx::mojom::blink::GpuExtraInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %38, label %28, !prof !2

28:                                               ; preds = %23
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %21, i64 %29
  br label %31

31:                                               ; preds = %31, %28
  %32 = phi %"struct.gfx::ANGLEFeature"* [ %33, %31 ], [ %21, %28 ]
  tail call void @_ZN3gfx12ANGLEFeatureD1Ev(%"struct.gfx::ANGLEFeature"* %32) #10
  %33 = getelementptr inbounds %"struct.gfx::ANGLEFeature", %"struct.gfx::ANGLEFeature"* %32, i64 1
  %34 = icmp eq %"struct.gfx::ANGLEFeature"* %33, %30
  br i1 %34, label %35, label %31

35:                                               ; preds = %31
  store i32 0, i32* %25, align 4
  %36 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %4 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %23
  %39 = phi i8* [ %37, %35 ], [ %24, %23 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  br label %40

40:                                               ; preds = %38, %19
  %41 = bitcast %"class.gfx::mojom::blink::GpuExtraInfo"* %4 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  %42 = bitcast %"class.mojo::StructPtr.41"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  br label %44

44:                                               ; preds = %6, %40
  %45 = phi i64* [ %7, %6 ], [ %42, %40 ]
  %46 = phi i64 [ 0, %6 ], [ %43, %40 ]
  %47 = bitcast %"class.mojo::StructPtr.41"* %1 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3gfx5mojom5blink12ANGLEFeature3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN3gfx5mojom5blink12ANGLEFeature3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3gfx5mojom5blink12GpuExtraInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZN3gfx5mojom5blink12GpuExtraInfo3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
