; ModuleID = '../../third_party/webrtc/common_audio/fir_filter_c.cc'
source_filename = "../../third_party/webrtc/common_audio/fir_filter_c.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::FIRFilterC" = type { %"class.webrtc::FIRFilter", i64, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.webrtc::FIRFilter" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }

@_ZTVN6webrtc10FIRFilterCE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::FIRFilterC"*)* @_ZN6webrtc10FIRFilterCD2Ev to i8*), i8* bitcast (void (%"class.webrtc::FIRFilterC"*)* @_ZN6webrtc10FIRFilterCD0Ev to i8*), i8* bitcast (void (%"class.webrtc::FIRFilterC"*, float*, i64, float*)* @_ZN6webrtc10FIRFilterC6FilterEPKfmPf to i8*)] }, align 8

@_ZN6webrtc10FIRFilterCD1Ev = hidden unnamed_addr alias void (%"class.webrtc::FIRFilterC"*), void (%"class.webrtc::FIRFilterC"*)* @_ZN6webrtc10FIRFilterCD2Ev
@_ZN6webrtc10FIRFilterCC1EPKfm = hidden unnamed_addr alias void (%"class.webrtc::FIRFilterC"*, float*, i64), void (%"class.webrtc::FIRFilterC"*, float*, i64)* @_ZN6webrtc10FIRFilterCC2EPKfm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10FIRFilterCD2Ev(%"class.webrtc::FIRFilterC"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc10FIRFilterCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  store float* null, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast float* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load float*, float** %9, align 8
  store float* null, float** %9, align 8
  %11 = icmp eq float* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %10 to i8*
  tail call void @_ZdaPv(i8* %13) #5
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10FIRFilterCD0Ev(%"class.webrtc::FIRFilterC"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc10FIRFilterCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  store float* null, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast float* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #5
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load float*, float** %9, align 8
  store float* null, float** %9, align 8
  %11 = icmp eq float* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast float* %10 to i8*
  tail call void @_ZdaPv(i8* %13) #5
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.webrtc::FIRFilterC"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10FIRFilterCC2EPKfm(%"class.webrtc::FIRFilterC"* nocapture, float* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc10FIRFilterCE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 2
  %7 = add i64 %2, -1
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 3
  %9 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %2, i64 4)
  %10 = extractvalue { i64, i1 } %9, 1
  %11 = extractvalue { i64, i1 } %9, 0
  %12 = select i1 %10, i64 -1, i64 %11
  %13 = tail call i8* @_Znam(i64 %12) #5
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 4
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 4)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #5
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %27 = add i64 %2, -1
  %28 = getelementptr inbounds float, float* %1, i64 %27
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = bitcast i8* %13 to i32*
  store i32 %30, i32* %31, align 4
  %32 = load i64, i64* %5, align 8
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %42, label %34

34:                                               ; preds = %42, %25
  %35 = bitcast %"class.std::__1::unique_ptr"* %16 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = load i64, i64* %6, align 8
  %38 = shl i64 %37, 2
  br label %39

39:                                               ; preds = %3, %34
  %40 = phi i64 [ %38, %34 ], [ -4, %3 ]
  %41 = phi i8* [ %36, %34 ], [ %21, %3 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 %40, i1 false)
  ret void

42:                                               ; preds = %25, %42
  %43 = phi i64 [ %54, %42 ], [ %32, %25 ]
  %44 = phi i64 [ %53, %42 ], [ 1, %25 ]
  %45 = load float*, float** %26, align 8
  %46 = xor i64 %44, -1
  %47 = add i64 %43, %46
  %48 = getelementptr inbounds float, float* %1, i64 %47
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds float, float* %45, i64 %44
  %52 = bitcast float* %51 to i32*
  store i32 %50, i32* %52, align 4
  %53 = add nuw i64 %44, 1
  %54 = load i64, i64* %5, align 8
  %55 = icmp ugt i64 %54, %53
  br i1 %55, label %42, label %34
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10FIRFilterC6FilterEPKfmPf(%"class.webrtc::FIRFilterC"* nocapture readonly, float* nocapture readonly, i64, float* nocapture) unnamed_addr #0 align 2 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 1
  br label %18

11:                                               ; preds = %76, %4
  %12 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %2
  %15 = getelementptr inbounds %"class.webrtc::FIRFilterC", %"class.webrtc::FIRFilterC"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load float*, float** %15, align 8
  %17 = bitcast float* %16 to i8*
  br i1 %14, label %82, label %79

18:                                               ; preds = %76, %6
  %19 = phi i64 [ 0, %6 ], [ %77, %76 ]
  %20 = getelementptr inbounds float, float* %3, i64 %19
  store float 0.000000e+00, float* %20, align 4
  %21 = load i64, i64* %7, align 8
  %22 = icmp ugt i64 %21, %19
  br i1 %22, label %42, label %23

23:                                               ; preds = %42, %18
  %24 = phi float [ 0.000000e+00, %18 ], [ %53, %42 ]
  %25 = phi i64 [ %21, %18 ], [ %55, %42 ]
  %26 = phi i64 [ 0, %18 ], [ %54, %42 ]
  %27 = load i64, i64* %10, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %76

29:                                               ; preds = %23
  %30 = add i64 %26, %19
  %31 = sub i64 %30, %25
  %32 = getelementptr inbounds float, float* %1, i64 %31
  %33 = load float, float* %32, align 4
  %34 = load float*, float** %9, align 8
  %35 = getelementptr inbounds float, float* %34, i64 %26
  %36 = load float, float* %35, align 4
  %37 = fmul float %33, %36
  %38 = fadd float %24, %37
  store float %38, float* %20, align 4
  %39 = add nuw i64 %26, 1
  %40 = load i64, i64* %10, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %60, label %76

42:                                               ; preds = %18, %42
  %43 = phi float [ %53, %42 ], [ 0.000000e+00, %18 ]
  %44 = phi i64 [ %54, %42 ], [ 0, %18 ]
  %45 = add i64 %44, %19
  %46 = load float*, float** %8, align 8
  %47 = getelementptr inbounds float, float* %46, i64 %45
  %48 = load float, float* %47, align 4
  %49 = load float*, float** %9, align 8
  %50 = getelementptr inbounds float, float* %49, i64 %44
  %51 = load float, float* %50, align 4
  %52 = fmul float %48, %51
  %53 = fadd float %43, %52
  store float %53, float* %20, align 4
  %54 = add nuw i64 %44, 1
  %55 = load i64, i64* %7, align 8
  %56 = icmp ugt i64 %55, %19
  %57 = sub i64 %55, %19
  %58 = icmp ult i64 %54, %57
  %59 = and i1 %56, %58
  br i1 %59, label %42, label %23

60:                                               ; preds = %29, %60
  %61 = phi i64 [ %73, %60 ], [ %39, %29 ]
  %62 = phi float [ %72, %60 ], [ %38, %29 ]
  %63 = load i64, i64* %7, align 8
  %64 = add i64 %61, %19
  %65 = sub i64 %64, %63
  %66 = getelementptr inbounds float, float* %1, i64 %65
  %67 = load float, float* %66, align 4
  %68 = load float*, float** %9, align 8
  %69 = getelementptr inbounds float, float* %68, i64 %61
  %70 = load float, float* %69, align 4
  %71 = fmul float %67, %70
  %72 = fadd float %62, %71
  store float %72, float* %20, align 4
  %73 = add nuw i64 %61, 1
  %74 = load i64, i64* %10, align 8
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %60, label %76

76:                                               ; preds = %60, %29, %23
  %77 = add nuw i64 %19, 1
  %78 = icmp eq i64 %77, %2
  br i1 %78, label %11, label %18

79:                                               ; preds = %11
  %80 = sub i64 %2, %13
  %81 = getelementptr inbounds float, float* %1, i64 %80
  br label %92

82:                                               ; preds = %11
  %83 = getelementptr inbounds float, float* %16, i64 %2
  %84 = bitcast float* %83 to i8*
  %85 = sub i64 %13, %2
  %86 = shl i64 %85, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %84, i64 %86, i1 false)
  %87 = load i64, i64* %12, align 8
  %88 = sub i64 %87, %2
  %89 = load float*, float** %15, align 8
  %90 = getelementptr inbounds float, float* %89, i64 %88
  %91 = bitcast float* %90 to i8*
  br label %92

92:                                               ; preds = %82, %79
  %93 = phi float* [ %1, %82 ], [ %81, %79 ]
  %94 = phi i64 [ %2, %82 ], [ %13, %79 ]
  %95 = phi i8* [ %91, %82 ], [ %17, %79 ]
  %96 = bitcast float* %93 to i8*
  %97 = shl i64 %94, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %97, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
