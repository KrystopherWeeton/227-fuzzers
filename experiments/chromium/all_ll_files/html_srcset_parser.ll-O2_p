; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_srcset_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_srcset_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.120", i32, [4 x i8], %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.290", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.297", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.236", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i64 }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.216", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.230", [4 x i8] }>
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { i64 }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { float }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.239", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.248" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250" }
%"class.WTF::VectorBufferBase.250" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.278" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.167"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.174"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.181"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.188"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.195"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.528" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.base::Feature" = type { i8*, i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::ImageCandidate" = type <{ %"class.WTF::String", %"class.WTF::StringView", float, i32, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.69", %"class.WTF::Vector.69", i8, i32, %"class.blink::Member.80", %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.93", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.104", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.313", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.322", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.329", i16, i8, %"class.blink::Member.336", %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::TextLinkColors", %"class.blink::Member.344", i8, [7 x i8], %"class.blink::HeapHashMap.346", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.353", %"class.blink::Member.358", %"class.blink::Member.360", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.362", %"class.blink::HeapVector.364", %"class.std::__1::unique_ptr.372", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.378", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.391", %"class.WTF::Vector.393", i8, i8, %"class.std::__1::unique_ptr.398", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.404", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.412", i8, i32, %"class.blink::Member.414", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.420", %"class.WTF::HashMap.422", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.9", %"class.blink::Member.9", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.435", i8, i32, %"class.blink::Member.442", %"class.blink::Member.444", i32, %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", %"class.std::__1::unique_ptr.452", i64, %"class.std::__1::unique_ptr.458", i32, i32, %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.468", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.470", %"class.WTF::Vector.472", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.477", %"class.blink::Member.484", %"class.std::__1::unique_ptr.486", %"class.blink::Member.492", i8, i8, %"class.WTF::String", %"class.blink::Member.494", i8, [7 x i8], %"class.blink::HeapHashMap.496", %"class.blink::HeapObserverSet", %"class.blink::Member.510", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.512", i32, i8, i8, %"class.blink::WeakMember.514", %"class.blink::Member.515" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.7", %"class.blink::Member.9", %"class.blink::Member.1", %"class.blink::Member.11", %"class.blink::Member.11", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.62" }
%"class.blink::HeapHashMap.62" = type { %"class.WTF::HashMap.65" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.73" }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i32 }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.844", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.906", i32, i8, [3 x i8], %"class.blink::HeapVector.908", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.916", %"class.blink::Member.918", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.927", %"class.blink::Member.1046", %"class.blink::Member.1048", i8, [7 x i8] }>
%"class.blink::Supplementable.844" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.845" }
%"class.blink::HeapHashMap.845" = type { %"class.WTF::HashMap.848" }
%"class.WTF::HashMap.848" = type { %"class.WTF::HashTable.849" }
%"class.WTF::HashTable.849" = type <{ %"struct.WTF::KeyValuePair.851"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.851" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.860" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.852" }
%"class.blink::HeapObserverSet.852" = type { i32, [4 x i8], %"class.blink::HeapHashSet.853" }
%"class.blink::HeapHashSet.853" = type { %"class.WTF::HashSet.856" }
%"class.WTF::HashSet.856" = type { %"class.WTF::HashTable.857" }
%"class.WTF::HashTable.857" = type <{ %"class.blink::WeakMember.859"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.859" = type opaque
%"class.blink::Supplementable.860" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.861" }
%"class.blink::HeapHashMap.861" = type { %"class.WTF::HashMap.864" }
%"class.WTF::HashMap.864" = type { %"class.WTF::HashTable.865" }
%"class.WTF::HashTable.865" = type <{ %"struct.WTF::KeyValuePair.867"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.867" = type { i8*, %"class.blink::Member.1056" }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1058" }
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.868, %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.896", %"class.std::__1::unique_ptr.896", %"class.blink::Member.82", i32, [4 x i8], %"class.WTF::HashSet.902", i32, i32 }
%class.scoped_refptr.868 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.842", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.649", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.654 }
%"class.WTF::RefCounted.842" = type { %"class.base::RefCounted.843" }
%"class.base::RefCounted.843" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.649" = type { %"class.absl::optional_internal::optional_data.650" }
%"class.absl::optional_internal::optional_data.650" = type { %"class.absl::optional_internal::optional_data_base.651" }
%"class.absl::optional_internal::optional_data_base.651" = type { %"class.absl::optional_internal::optional_data_dtor_base.652" }
%"class.absl::optional_internal::optional_data_dtor_base.652" = type { i8, %union.anon.653 }
%union.anon.653 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.654 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.872", %"class.std::__1::map.883", %"class.std::__1::map.892"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.649" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.627 }
%union.anon.627 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.872" = type { %"class.std::__1::__tree.873" }
%"class.std::__1::__tree.873" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.874", %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.883" = type { %"class.std::__1::__tree.884" }
%"class.std::__1::__tree.884" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.892" = type opaque
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.908" = type { %"class.WTF::Vector.911" }
%"class.WTF::Vector.911" = type { %"class.WTF::VectorBuffer.912" }
%"class.WTF::VectorBuffer.912" = type { %"class.WTF::VectorBufferBase.913" }
%"class.WTF::VectorBufferBase.913" = type { %"class.blink::Member.914"*, i32, i32 }
%"class.blink::Member.914" = type opaque
%"class.blink::Member.916" = type { %"class.blink::MemberBase.917" }
%"class.blink::MemberBase.917" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.918" = type { %"class.blink::MemberBase.919" }
%"class.blink::MemberBase.919" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.920", i32, i32 }
%"class.blink::HeapHashMap.920" = type { %"class.WTF::HashMap.923" }
%"class.WTF::HashMap.923" = type { %"class.WTF::HashTable.924" }
%"class.WTF::HashTable.924" = type <{ %"struct.WTF::KeyValuePair.926"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.926" = type opaque
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.930" }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.933" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %"class.mojo::StructPtr.936"*, i32, i32 }
%"class.mojo::StructPtr.936" = type { %"class.std::__1::unique_ptr.937" }
%"class.std::__1::unique_ptr.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.940", %"class.WTF::HashMap.947", %"class.WTF::HashMap.952", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.957", i8, %"class.WTF::Vector.641", i32, %"class.mojo::StructPtr.958", %"class.WTF::Vector.641" }
%"class.mojo::StructPtr.940" = type { %"class.std::__1::unique_ptr.941" }
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.951"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.951" = type opaque
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.956"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.956" = type opaque
%"class.mojo::InlinedStructPtr.957" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.958" = type { %"class.std::__1::unique_ptr.959" }
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.641", i8, i8, [6 x i8] }>
%"class.WTF::Vector.641" = type { %"class.WTF::VectorBuffer.642" }
%"class.WTF::VectorBuffer.642" = type { %"class.WTF::VectorBufferBase.643" }
%"class.WTF::VectorBufferBase.643" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1037" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.973", i32 }>
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.976", %"class.absl::optional.692", %"class.absl::optional.977", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.990", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1012", %"class.std::__1::map.1023", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1032", i8, %class.scoped_refptr.982, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1033" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.976" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.692" = type { %"class.absl::optional_internal::optional_data.693" }
%"class.absl::optional_internal::optional_data.693" = type { %"class.absl::optional_internal::optional_data_base.694" }
%"class.absl::optional_internal::optional_data_base.694" = type { %"class.absl::optional_internal::optional_data_dtor_base.695" }
%"class.absl::optional_internal::optional_data_dtor_base.695" = type { i8, %union.anon.696 }
%union.anon.696 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.982, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.983" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.983" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.306", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.307" }
%"struct.std::__1::atomic.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__cxx_atomic_impl.310" }
%"struct.std::__1::__cxx_atomic_impl.310" = type { %"struct.std::__1::__cxx_atomic_base_impl.311" }
%"struct.std::__1::__cxx_atomic_base_impl.311" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1050", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.982, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1050" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.989 }
%class.scoped_refptr.989 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.993", %class.scoped_refptr.994 }
%"class.base::RepeatingCallback.993" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.994 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.995", [4 x i8] }>
%"class.base::RefCountedThreadSafe.995" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.999", %"class.std::__1::unique_ptr.1005", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1011" }
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1011" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1012" = type { %"class.std::__1::__tree.1013" }
%"class.std::__1::__tree.1013" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.1023" = type { %"class.std::__1::__tree.1024" }
%"class.std::__1::__tree.1024" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.base::OnceCallback.1032" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.982 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.304" }>
%"class.base::RefCountedThreadSafe.304" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1033" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.535", %"class.blink::Member.537", %"class.blink::Member.539", %class.scoped_refptr.303, %class.scoped_refptr.303, %"class.blink::Member.541", %"class.blink::Member.543", %"class.blink::Member.549", %"class.blink::Member.553", %"class.blink::Member.601", %"class.blink::HeapHashMap.603", %"class.blink::HeapHashSet.610", %"class.blink::HeapHashSet.610", %"class.blink::HeapHashMap.789", %"class.blink::HeapVector.796", %"class.blink::Member.804", %"class.blink::HeapTaskRunnerTimer.806", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.808", %"class.WTF::Vector.815", %"class.blink::HeapHashSet.821", %"class.blink::HeapHashSet.821", %"class.std::__1::unique_ptr.827", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.839", i8, i8, %"class.base::WeakPtrFactory.841" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.303 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.547" }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.557", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.559", %"class.WTF::HashSet.564", i8, [3 x i8], i32, %"class.blink::HeapHashMap.568", %"class.std::__1::map", %"class.std::__1::map.583", %"class.std::__1::unique_ptr.592", %"class.blink::Member.543", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.599", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.559" = type { %"class.WTF::HashTable.560" }
%"class.WTF::HashTable.560" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.564" = type { %"class.WTF::HashTable.565" }
%"class.WTF::HashTable.565" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.583" = type { %"class.std::__1::__tree.584" }
%"class.std::__1::__tree.584" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.585", %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.603" = type { %"class.WTF::HashMap.606" }
%"class.WTF::HashMap.606" = type { %"class.WTF::HashTable.607" }
%"class.WTF::HashTable.607" = type <{ %"struct.WTF::KeyValuePair.609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.609" = type opaque
%"class.blink::HeapHashSet.610" = type { %"class.WTF::HashSet.613" }
%"class.WTF::HashSet.613" = type { %"class.WTF::HashTable.614" }
%"class.WTF::HashTable.614" = type <{ %"class.blink::WeakMember.616"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.646", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.748", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.764", %"class.blink::ResourceResponse", %class.scoped_refptr.766, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.620", i8, %"class.absl::optional.631", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.620" = type { %"class.absl::optional_internal::optional_data.621" }
%"class.absl::optional_internal::optional_data.621" = type { %"class.absl::optional_internal::optional_data_base.622" }
%"class.absl::optional_internal::optional_data_base.622" = type { %"class.absl::optional_internal::optional_data_dtor_base.623" }
%"class.absl::optional_internal::optional_data_dtor_base.623" = type { i8, [7 x i8], %union.anon.624 }
%union.anon.624 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.631" = type { %"class.absl::optional_internal::optional_data.632" }
%"class.absl::optional_internal::optional_data.632" = type { %"class.absl::optional_internal::optional_data_base.633" }
%"class.absl::optional_internal::optional_data_base.633" = type { %"class.absl::optional_internal::optional_data_dtor_base.634" }
%"class.absl::optional_internal::optional_data_dtor_base.634" = type { i8, %union.anon.635 }
%union.anon.635 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.636", %"class.WTF::Vector.641" }
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { i32*, i32, i32 }
%"class.WTF::Vector.646" = type { %"class.WTF::VectorBuffer.647" }
%"class.WTF::VectorBuffer.647" = type { %"class.WTF::VectorBufferBase.648" }
%"class.WTF::VectorBufferBase.648" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.744" }
%"class.WTF::HashMap.744" = type { %"class.WTF::HashTable.745" }
%"class.WTF::HashTable.745" = type <{ %"struct.WTF::KeyValuePair.747"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.747" = type <{ %"class.blink::WeakMember.1073", i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.748" = type { %"class.WTF::HashSet.751" }
%"class.WTF::HashSet.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"class.blink::WeakMember.754"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.754" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.755", i8, i8, %class.scoped_refptr.107, %class.scoped_refptr.760, %class.scoped_refptr.762 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.755" = type { %"class.WTF::HashTable.756" }
%"class.WTF::HashTable.756" = type <{ %"struct.std::__1::pair.759"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.759" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.107 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.108", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.108" = type { %"class.base::RefCounted.109" }
%"class.base::RefCounted.109" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.112" }
%"class.blink::HeapHashMap.112" = type { %"class.WTF::HashMap.115" }
%"class.WTF::HashMap.115" = type { %"class.WTF::HashTable.116" }
%"class.WTF::HashTable.116" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.760 = type { %"class.base::RefCountedData.761"* }
%"class.base::RefCountedData.761" = type opaque
%class.scoped_refptr.762 = type { %"class.base::RefCountedData.763"* }
%"class.base::RefCountedData.763" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.708" }
%"class.base::time_internal::TimeBase.708" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.654, %class.scoped_refptr.654, %class.scoped_refptr.654, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.660, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.672", %"class.absl::optional.677", %"class.absl::optional.687", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.697", %"class.absl::optional.687", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.687", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.697", %"class.absl::optional.702", i8, %class.scoped_refptr.707 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.655" }
%"class.WTF::HashMap.655" = type { %"class.WTF::HashTable.656" }
%"class.WTF::HashTable.656" = type <{ %"struct.WTF::KeyValuePair.659"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.659" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.660 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.661", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.670, i8, %"class.url::Origin" }
%"class.base::RefCounted.661" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.662" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::unique_ptr.664"*, %"class.std::__1::unique_ptr.664"*, %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.std::__1::unique_ptr.664"* }
%class.scoped_refptr.670 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.671", [4 x i8] }>
%"class.base::RefCountedThreadSafe.671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.672" = type { %"class.absl::optional_internal::optional_data.673" }
%"class.absl::optional_internal::optional_data.673" = type { %"class.absl::optional_internal::optional_data_base.674" }
%"class.absl::optional_internal::optional_data_base.674" = type { %"class.absl::optional_internal::optional_data_dtor_base.675" }
%"class.absl::optional_internal::optional_data_dtor_base.675" = type { i8, %union.anon.676 }
%union.anon.676 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.677" = type { %"class.absl::optional_internal::optional_data.678" }
%"class.absl::optional_internal::optional_data.678" = type { %"class.absl::optional_internal::optional_data_base.679" }
%"class.absl::optional_internal::optional_data_base.679" = type { %"class.absl::optional_internal::optional_data_dtor_base.680" }
%"class.absl::optional_internal::optional_data_dtor_base.680" = type { i8, %union.anon.681 }
%union.anon.681 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.682", %"class.WTF::Vector.641", %"class.WTF::String" }
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684" }
%"class.WTF::VectorBufferBase.684" = type { %class.scoped_refptr.654*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.692", %"class.absl::optional.692" }
%"class.absl::optional.687" = type { %"class.absl::optional_internal::optional_data.688" }
%"class.absl::optional_internal::optional_data.688" = type { %"class.absl::optional_internal::optional_data_base.689" }
%"class.absl::optional_internal::optional_data_base.689" = type { %"class.absl::optional_internal::optional_data_dtor_base.690" }
%"class.absl::optional_internal::optional_data_dtor_base.690" = type { i8, %union.anon.691 }
%union.anon.691 = type { %"class.WTF::String" }
%"class.absl::optional.697" = type { %"class.absl::optional_internal::optional_data.698" }
%"class.absl::optional_internal::optional_data.698" = type { %"class.absl::optional_internal::optional_data_base.699" }
%"class.absl::optional_internal::optional_data_base.699" = type { %"class.absl::optional_internal::optional_data_dtor_base.700" }
%"class.absl::optional_internal::optional_data_dtor_base.700" = type { i8, %union.anon.701 }
%union.anon.701 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.702" = type { %"class.absl::optional_internal::optional_data.703" }
%"class.absl::optional_internal::optional_data.703" = type { %"class.absl::optional_internal::optional_data_base.704" }
%"class.absl::optional_internal::optional_data_base.704" = type { %"class.absl::optional_internal::optional_data_dtor_base.705" }
%"class.absl::optional_internal::optional_data_dtor_base.705" = type { i8, %union.anon.706 }
%union.anon.706 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.707 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1065", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1065" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1066" }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { i32* }
%"class.blink::Member.764" = type { %"class.blink::MemberBase.765" }
%"class.blink::MemberBase.765" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.709", %class.scoped_refptr.723, %class.scoped_refptr.724, %"struct.blink::CacheControlHeader", %"class.absl::optional.692", %"class.absl::optional.725", %"class.absl::optional.725", %"class.absl::optional.725", i64, %"class.blink::KURL", %"class.WTF::Vector.730", %"class.WTF::String", %"class.WTF::Vector.641", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.697", %"class.WTF::Vector.641", %"class.blink::KURL", %"class.absl::optional.735" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.709" = type { %"class.absl::optional_internal::optional_data.710" }
%"class.absl::optional_internal::optional_data.710" = type { %"class.absl::optional_internal::optional_data_base.711" }
%"class.absl::optional_internal::optional_data_base.711" = type { %"class.absl::optional_internal::optional_data_dtor_base.712" }
%"class.absl::optional_internal::optional_data_dtor_base.712" = type { i8, %union.anon.713 }
%union.anon.713 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.641", %"class.WTF::String", i64, i64, %"class.WTF::Vector.714", %"class.WTF::Vector.718" }
%"class.WTF::Vector.714" = type { %"class.WTF::VectorBuffer.715" }
%"class.WTF::VectorBuffer.715" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720" }
%"class.WTF::VectorBufferBase.720" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.723 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.724 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.725" = type { %"class.absl::optional_internal::optional_data.726" }
%"class.absl::optional_internal::optional_data.726" = type { %"class.absl::optional_internal::optional_data_base.727" }
%"class.absl::optional_internal::optional_data_base.727" = type { %"class.absl::optional_internal::optional_data_dtor_base.728" }
%"class.absl::optional_internal::optional_data_dtor_base.728" = type { i8, %union.anon.729 }
%union.anon.729 = type { %"class.base::Time" }
%"class.WTF::Vector.730" = type { %"class.WTF::VectorBuffer.731" }
%"class.WTF::VectorBuffer.731" = type { %"class.WTF::VectorBufferBase.732" }
%"class.WTF::VectorBufferBase.732" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.735" = type { %"class.absl::optional_internal::optional_data.736" }
%"class.absl::optional_internal::optional_data.736" = type { %"class.absl::optional_internal::optional_data_base.737" }
%"class.absl::optional_internal::optional_data_base.737" = type { %"class.absl::optional_internal::optional_data_dtor_base.738" }
%"class.absl::optional_internal::optional_data_dtor_base.738" = type { i8, %union.anon.739 }
%union.anon.739 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.766 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.767", i64, %"class.WTF::Vector.769", %"class.WTF::Vector.774" }
%"class.WTF::RefCounted.767" = type { %"class.base::RefCounted.768" }
%"class.base::RefCounted.768" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { i8*, i32, i32 }
%"class.WTF::Vector.774" = type { %"class.WTF::VectorBuffer.775" }
%"class.WTF::VectorBuffer.775" = type { %"class.WTF::VectorBufferBase.776" }
%"class.WTF::VectorBufferBase.776" = type { %"class.std::__1::unique_ptr.777"*, i32, i32 }
%"class.std::__1::unique_ptr.777" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.780" }
%"class.std::__1::__tree.780" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.781", %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.blink::HeapHashMap.789" = type { %"class.WTF::HashMap.792" }
%"class.WTF::HashMap.792" = type { %"class.WTF::HashTable.793" }
%"class.WTF::HashTable.793" = type <{ %"struct.WTF::KeyValuePair.795"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.795" = type opaque
%"class.blink::HeapVector.796" = type { %"class.WTF::Vector.799" }
%"class.WTF::Vector.799" = type { %"class.WTF::VectorBuffer.800" }
%"class.WTF::VectorBuffer.800" = type { %"class.WTF::VectorBufferBase.801" }
%"class.WTF::VectorBufferBase.801" = type { %"class.blink::Member.802"*, i32, i32 }
%"class.blink::Member.802" = type { %"class.blink::MemberBase.617" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.806" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.807", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.303, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.807" = type { %"class.blink::MemberBase.85" }
%"class.blink::HeapHashMap.808" = type { %"class.WTF::HashMap.811" }
%"class.WTF::HashMap.811" = type { %"class.WTF::HashTable.812" }
%"class.WTF::HashTable.812" = type <{ %"struct.WTF::KeyValuePair.814"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.814" = type opaque
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { %class.scoped_refptr.818*, i32, i32 }
%class.scoped_refptr.818 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.821" = type { %"class.WTF::HashSet.824" }
%"class.WTF::HashSet.824" = type { %"class.WTF::HashTable.825" }
%"class.WTF::HashTable.825" = type <{ %"class.blink::Member.764"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.WTF::HashSet.830"* }
%"class.WTF::HashSet.830" = type { %"class.WTF::HashTable.831" }
%"class.WTF::HashTable.831" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.595 }
%class.scoped_refptr.595 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.837" }
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.841" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.107 }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.315" }
%"class.blink::HeapHashMap.315" = type { %"class.WTF::HashMap.318" }
%"class.WTF::HashMap.318" = type { %"class.WTF::HashTable.319" }
%"class.WTF::HashTable.319" = type <{ %"struct.WTF::KeyValuePair.321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.321" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"class.blink::WeakMember.328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.328" = type opaque
%"class.blink::HeapHashSet.329" = type { %"class.WTF::HashSet.332" }
%"class.WTF::HashSet.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"class.blink::WeakMember.335"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.335" = type opaque
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.346" = type { %"class.WTF::HashMap.349" }
%"class.WTF::HashMap.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"struct.WTF::KeyValuePair.352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.352" = type opaque
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.364" = type { %"class.WTF::Vector.367" }
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.blink::Member.370"*, i32, i32 }
%"class.blink::Member.370" = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.378" = type { %"class.WTF::HashSet.381" }
%"class.WTF::HashSet.381" = type { %"class.WTF::HashTable.382" }
%"class.WTF::HashTable.382" = type <{ %"class.blink::WeakMember.384"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.384" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.385", i32, [4 x i8] }>
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"struct.std::__1::pair.388"*, i32, i32 }
%"struct.std::__1::pair.388" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.393" = type { %"class.WTF::VectorBuffer.394" }
%"class.WTF::VectorBuffer.394" = type { %"class.WTF::VectorBufferBase.395" }
%"class.WTF::VectorBufferBase.395" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.404" = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::Member.410"*, i32, i32 }
%"class.blink::Member.410" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.9" }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"struct.WTF::KeyValuePair.426"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.426" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.312", { i64, i64 } }
%"class.blink::WeakMember.312" = type { %"class.blink::MemberBase.10" }
%"class.blink::HeapHashSet.435" = type { %"class.WTF::HashSet.438" }
%"class.WTF::HashSet.438" = type { %"class.WTF::HashTable.439" }
%"class.WTF::HashTable.439" = type <{ %"class.blink::Member.441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.441" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.477" = type { %"class.WTF::HashMap.480" }
%"class.WTF::HashMap.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"struct.WTF::KeyValuePair.483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.483" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.496" = type { %"class.WTF::HashMap.499" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.502" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.503" }
%"class.blink::HeapHashSet.503" = type { %"class.WTF::HashSet.506" }
%"class.WTF::HashSet.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"class.blink::WeakMember.509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.509" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.9", %"class.blink::HeapHashSet.519", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.526", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.519" = type { %"class.WTF::HashSet.522" }
%"class.WTF::HashSet.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"class.blink::Member.525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.525" = type opaque
%"class.blink::HeapTaskRunnerTimer.526" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.527", { i64, i64 } }
%"class.blink::WeakMember.527" = type { %"class.blink::MemberBase.513" }
%"class.blink::WeakMember.514" = type { %"class.blink::MemberBase" }
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::Vector.1051" = type { %"class.WTF::VectorBuffer.1052" }
%"class.WTF::VectorBuffer.1052" = type { %"class.WTF::VectorBufferBase.1053" }
%"class.WTF::VectorBufferBase.1053" = type { %"class.blink::ImageCandidate"*, i32, i32 }
%"class.blink::DescriptorParsingResult" = type { float, i32, i32 }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"struct.blink::DescriptorToken"*, i32, i32 }
%"struct.blink::DescriptorToken" = type { i32, i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1120", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1128", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1157", %"class.blink::FrameLoader", %"class.blink::Member.1174", %"class.blink::Member.21", %"class.blink::Member.1176", %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.blink::Member.1182", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1186", %class.scoped_refptr.1188, %"class.blink::Member.1189", %"class.blink::Member.1191", %"class.blink::Member.1193", %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::Member.1199", %"class.blink::Member.1201", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1203", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1307", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1313", %"class.std::__1::unique_ptr.1314", %"class.absl::optional.697", i32, [4 x i8], %"class.std::__1::unique_ptr.1320", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1338", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1357", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1371", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1379", %"class.blink::Member.1381", %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.mojo::StructPtr.1388", %"class.blink::Member.1396", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1398", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1085", %"class.blink::Member.1087", %"class.blink::Member.1089", i8, i32, i8, i32, %"class.blink::Member.1091", %"class.blink::Member.1093", %"class.blink::FrameLifecycle", %"class.blink::Member.1083", %"class.blink::Member.1083", %"class.blink::Member.1083", %"class.blink::Member.1083", %"class.blink::Member.1083", %"class.blink::Member.1083", %"class.blink::Member.1095", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1106", i8, %"class.base::UnguessableToken", %"class.absl::optional.1108", %"class.absl::optional.697", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1083", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::Frame"* }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1083", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1097" }
%"class.base::internal::flat_tree.1097" = type { %"class.std::__1::vector.1098" }
%"class.std::__1::vector.1098" = type { %"class.std::__1::__vector_base.1099" }
%"class.std::__1::__vector_base.1099" = type { %"struct.std::__1::pair.1100"*, %"struct.std::__1::pair.1100"*, %"class.std::__1::__compressed_pair.1101" }
%"struct.std::__1::pair.1100" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.std::__1::pair.1100"* }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1108" = type { %"class.absl::optional_internal::optional_data.1109" }
%"class.absl::optional_internal::optional_data.1109" = type { %"class.absl::optional_internal::optional_data_base.1110" }
%"class.absl::optional_internal::optional_data_base.1110" = type { %"class.absl::optional_internal::optional_data_dtor_base.1111" }
%"class.absl::optional_internal::optional_data_dtor_base.1111" = type { i8, %union.anon.1112 }
%union.anon.1112 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1113" }
%"class.blink::HeapHashSet.1113" = type { %"class.WTF::HashSet.1116" }
%"class.WTF::HashSet.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"class.blink::WeakMember.1119"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1119" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1120" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1121" }
%"class.blink::HeapHashMap.1121" = type { %"class.WTF::HashMap.1124" }
%"class.WTF::HashMap.1124" = type { %"class.WTF::HashTable.1125" }
%"class.WTF::HashTable.1125" = type <{ %"struct.WTF::KeyValuePair.1127"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1127" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1131", %"class.base::WeakPtrFactory.1136" }
%"class.WTF::HashMap.1131" = type { %"class.WTF::HashTable.1132" }
%"class.WTF::HashTable.1132" = type <{ %"struct.WTF::KeyValuePair.1135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1135" = type opaque
%"class.base::WeakPtrFactory.1136" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1140" }
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1144" }
%"class.blink::WeakMember.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1146", i64, %"class.std::__1::map.1147", i8*, i64, %"class.base::WeakPtrFactory.1156" }
%"class.base::RepeatingCallback.1146" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1147" = type { %"class.std::__1::__tree.1148" }
%"class.std::__1::__tree.1148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1149", %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.base::WeakPtrFactory.1156" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1157" = type { %"class.WTF::HashSet.1160" }
%"class.WTF::HashSet.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"class.blink::WeakMember.1163"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1163" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1095", %"class.blink::Member.1164", %"class.blink::Member.1166", %"class.std::__1::unique_ptr.1168", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.830" }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1168" = type { %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1405", %"class.blink::Member.1095", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1410", i8, i32, %"class.blink::Color", %"class.absl::optional.1412", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1417", %"class.blink::Member.1419", %"class.blink::Member.1419", %"class.std::__1::unique_ptr.1422", i32, [4 x i8], %"class.WTF::HashSet.1425", %"class.blink::Member.1432", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1434", %"class.blink::HeapHashSet.1441", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1449", i8, %"class.blink::Member.1455", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1467", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1481", i8, %"class.std::__1::unique_ptr.1487", %"class.std::__1::unique_ptr.1604", %"class.WTF::Vector.1610", i32, %class.scoped_refptr.1615, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1616", %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::HeapHashSet.1622", %"class.blink::HeapHashSet.1629", %"class.std::__1::unique_ptr.1636", %"class.std::__1::unique_ptr.1642", %"class.WTF::Vector.69" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %class.scoped_refptr.1409*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1409 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1410" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1411", { i64, i64 } }
%"class.blink::WeakMember.1411" = type { %"class.blink::MemberBase.1175" }
%"class.absl::optional.1412" = type { %"class.absl::optional_internal::optional_data.1413" }
%"class.absl::optional_internal::optional_data.1413" = type { %"class.absl::optional_internal::optional_data_base.1414" }
%"class.absl::optional_internal::optional_data_base.1414" = type { %"class.absl::optional_internal::optional_data_dtor_base.1415" }
%"class.absl::optional_internal::optional_data_dtor_base.1415" = type { i8, %union.anon.1416 }
%union.anon.1416 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1417" = type { %"class.blink::MemberBase.1418" }
%"class.blink::MemberBase.1418" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::HeapHashSet.1421"* }
%"class.blink::HeapHashSet.1421" = type opaque
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"class.WTF::HashSet.1425"* }
%"class.WTF::HashSet.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1434" = type { %"class.WTF::HashSet.1437" }
%"class.WTF::HashSet.1437" = type { %"class.WTF::HashTable.1438" }
%"class.WTF::HashTable.1438" = type <{ %"class.blink::Member.1440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1440" = type opaque
%"class.blink::HeapHashSet.1441" = type { %"class.WTF::HashSet.1444" }
%"class.WTF::HashSet.1444" = type { %"class.WTF::HashTable.1445" }
%"class.WTF::HashTable.1445" = type <{ %"class.blink::Member.1447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1449" = type { %"class.std::__1::__compressed_pair.1450" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1459", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1459" = type { %"class.WTF::HashTable.1460" }
%"class.WTF::HashTable.1460" = type <{ %"struct.WTF::KeyValuePair.1462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1462" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1463", i32, i32 }
%"class.WTF::Vector.1463" = type { %"class.WTF::VectorBuffer.1464" }
%"class.WTF::VectorBuffer.1464" = type { %"class.WTF::VectorBufferBase.1465" }
%"class.WTF::VectorBufferBase.1465" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1467" = type { %"class.WTF::LinkedHashSet.1470" }
%"class.WTF::LinkedHashSet.1470" = type { %"class.WTF::HashMap.1471", %"class.WTF::VectorBackedLinkedList.1475" }
%"class.WTF::HashMap.1471" = type { %"class.WTF::HashTable.1472" }
%"class.WTF::HashTable.1472" = type <{ %"struct.WTF::KeyValuePair.1474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1474" = type opaque
%"class.WTF::VectorBackedLinkedList.1475" = type { %"class.WTF::Vector.1476", i32, i32 }
%"class.WTF::Vector.1476" = type { %"class.WTF::VectorBuffer.1477" }
%"class.WTF::VectorBuffer.1477" = type { %"class.WTF::VectorBufferBase.1478" }
%"class.WTF::VectorBufferBase.1478" = type { %"class.WTF::VectorBackedLinkedListNode.1479"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1479" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1490, %class.scoped_refptr.1490, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1581", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1586", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1490 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1491", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1498" }
%"class.WTF::RefCounted.1491" = type { %"class.base::RefCounted.1492" }
%"class.base::RefCounted.1492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1493", i32, [4 x i8] }>
%"class.WTF::Vector.1493" = type { %"class.WTF::VectorBuffer.1494" }
%"class.WTF::VectorBuffer.1494" = type { %"class.WTF::VectorBufferBase.1495" }
%"class.WTF::VectorBufferBase.1495" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1498" = type { %"class.WTF::VectorBuffer.1499" }
%"class.WTF::VectorBuffer.1499" = type { %"class.WTF::VectorBufferBase.1500" }
%"class.WTF::VectorBufferBase.1500" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1504", %"class.std::__1::unique_ptr.1553", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1501, %class.scoped_refptr.1502, %class.scoped_refptr.1503 }
%class.scoped_refptr.1501 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1517", i8, i8, %class.scoped_refptr.1501, i32, i32 }
%"class.WTF::RefCounted.1517" = type { %"class.base::RefCounted.1518" }
%"class.base::RefCounted.1518" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1502 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1666" }
%"class.blink::PaintPropertyNode.1666" = type { %"class.WTF::RefCounted.1667", i8, i8, %class.scoped_refptr.1502, i32, i32 }
%"class.WTF::RefCounted.1667" = type { %"class.base::RefCounted.1668" }
%"class.base::RefCounted.1668" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1503 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1663" }
%"class.blink::PaintPropertyNode.1663" = type { %"class.WTF::RefCounted.1664", i8, i8, %class.scoped_refptr.1503, i32, i32 }
%"class.WTF::RefCounted.1664" = type { %"class.base::RefCounted.1665" }
%"class.base::RefCounted.1665" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1504" = type { %"class.std::__1::__compressed_pair.1505" }
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1507", %"class.WTF::Vector.1512", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1507" = type { %"class.WTF::VectorBuffer.1508" }
%"class.WTF::VectorBuffer.1508" = type { %"class.WTF::VectorBufferBase.1509" }
%"class.WTF::VectorBufferBase.1509" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1512" = type { %"class.WTF::VectorBuffer.1513" }
%"class.WTF::VectorBuffer.1513" = type { %"class.WTF::VectorBufferBase.1514" }
%"class.WTF::VectorBufferBase.1514" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1532" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1525, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1526", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1519" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1525 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1648", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1648" = type { %"class.WTF::RefCounted.1649", i8, i8, %class.scoped_refptr.1525, i32, i32 }
%"class.WTF::RefCounted.1649" = type { %"class.base::RefCounted.1650" }
%"class.base::RefCounted.1650" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1651" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1651" = type { %"class.absl::optional_internal::optional_data.1652" }
%"class.absl::optional_internal::optional_data.1652" = type { %"class.absl::optional_internal::optional_data_base.1653" }
%"class.absl::optional_internal::optional_data_base.1653" = type { %"class.absl::optional_internal::optional_data_dtor_base.1654" }
%"class.absl::optional_internal::optional_data_dtor_base.1654" = type { i8, %union.anon.1655 }
%union.anon.1655 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1656", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1656" = type { %"class.std::__1::__vector_base.1657" }
%"class.std::__1::__vector_base.1657" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1658" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1526" = type { %"class.std::__1::__compressed_pair.1527" }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1532" = type { %"class.std::__1::__compressed_pair.1533" }
%"class.std::__1::__compressed_pair.1533" = type { %"struct.std::__1::__compressed_pair_elem.1534" }
%"struct.std::__1::__compressed_pair_elem.1534" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1535", %"class.std::__1::unique_ptr.1541", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1535" = type { %"class.std::__1::__compressed_pair.1536" }
%"class.std::__1::__compressed_pair.1536" = type { %"struct.std::__1::__compressed_pair_elem.1537" }
%"struct.std::__1::__compressed_pair_elem.1537" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1541" = type { %"class.std::__1::__compressed_pair.1542" }
%"class.std::__1::__compressed_pair.1542" = type { %"struct.std::__1::__compressed_pair_elem.1543" }
%"struct.std::__1::__compressed_pair_elem.1543" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1556", %"class.absl::optional.1556" }
%"class.absl::optional.1556" = type { %"class.absl::optional_internal::optional_data.1557" }
%"class.absl::optional_internal::optional_data.1557" = type { %"class.absl::optional_internal::optional_data_base.1558" }
%"class.absl::optional_internal::optional_data_base.1558" = type { %"class.absl::optional_internal::optional_data_dtor_base.1559" }
%"class.absl::optional_internal::optional_data_dtor_base.1559" = type { i8, [3 x i8], %union.anon.1560 }
%union.anon.1560 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1498"*, %"class.absl::optional.1566", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1566" = type { %"class.absl::optional_internal::optional_data.1567" }
%"class.absl::optional_internal::optional_data.1567" = type { %"class.absl::optional_internal::optional_data_base.1568" }
%"class.absl::optional_internal::optional_data_base.1568" = type { %"class.absl::optional_internal::optional_data_dtor_base.1569" }
%"class.absl::optional_internal::optional_data_dtor_base.1569" = type { i8, %union.anon.1570 }
%union.anon.1570 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1571", %"class.WTF::Vector.1576" }
%"class.WTF::Vector.1571" = type { %"class.WTF::VectorBuffer.1572" }
%"class.WTF::VectorBuffer.1572" = type { %"class.WTF::VectorBufferBase.1573", [128 x i8] }
%"class.WTF::VectorBufferBase.1573" = type { i32*, i32, i32 }
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578", [128 x i8] }
%"class.WTF::VectorBufferBase.1578" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1581" = type { %"class.WTF::VectorBuffer.1582" }
%"class.WTF::VectorBuffer.1582" = type { %"class.WTF::VectorBufferBase.1583" }
%"class.WTF::VectorBufferBase.1583" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1586" = type { %"class.WTF::HashTable.1587" }
%"class.WTF::HashTable.1587" = type <{ %"struct.WTF::KeyValuePair.1590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1590" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1591", %"class.WTF::Vector.1596" }
%"class.WTF::HashMap.1591" = type { %"class.WTF::HashTable.1592" }
%"class.WTF::HashTable.1592" = type <{ %"struct.WTF::KeyValuePair.1595"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1595" = type opaque
%"class.WTF::Vector.1596" = type { %"class.WTF::VectorBuffer.1597" }
%"class.WTF::VectorBuffer.1597" = type { %"class.WTF::VectorBufferBase.1598" }
%"class.WTF::VectorBufferBase.1598" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1610" = type { %"class.WTF::VectorBuffer.1611" }
%"class.WTF::VectorBuffer.1611" = type { %"class.WTF::VectorBufferBase.1612" }
%"class.WTF::VectorBufferBase.1612" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1615 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1622" = type { %"class.WTF::HashSet.1625" }
%"class.WTF::HashSet.1625" = type { %"class.WTF::HashTable.1626" }
%"class.WTF::HashTable.1626" = type <{ %"class.blink::WeakMember.1628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1628" = type opaque
%"class.blink::HeapHashSet.1629" = type { %"class.WTF::HashSet.1632" }
%"class.WTF::HashSet.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ %"class.blink::WeakMember.1635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1635" = type opaque
%"class.std::__1::unique_ptr.1636" = type { %"class.std::__1::__compressed_pair.1637" }
%"class.std::__1::__compressed_pair.1637" = type { %"struct.std::__1::__compressed_pair_elem.1638" }
%"struct.std::__1::__compressed_pair_elem.1638" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.725", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type { %"class.blink::Member.1095" }
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1188 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1203" = type { %"class.blink::Member.1204" }
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1301" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1208, %"class.std::__1::unique_ptr.973", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.982, i32 }>
%class.scoped_refptr.1208 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.982, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1267", %"class.absl::optional.1272", %"class.absl::optional.1225", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1292", i8, [7 x i8], %class.scoped_refptr.982, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.995" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.982, %"class.std::__1::unique_ptr.1209", %"class.absl::optional.1219", %"struct.std::__1::atomic.297", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1225", %"class.std::__1::unique_ptr.1230", i8, i64, %class.scoped_refptr.1264, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1265", %"class.base::WeakPtrFactory.1266" }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.982, i8, %"class.mojo::ScopedHandleBase.1212", %class.scoped_refptr.1213, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1214", i8*, %"class.base::WeakPtrFactory.1215" }
%"class.mojo::ScopedHandleBase.1212" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1213 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1214" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1215" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1219" = type { %"class.absl::optional_internal::optional_data.1220" }
%"class.absl::optional_internal::optional_data.1220" = type { %"class.absl::optional_internal::optional_data_base.1221" }
%"class.absl::optional_internal::optional_data_base.1221" = type { %"class.absl::optional_internal::optional_data_dtor_base.1222" }
%"class.absl::optional_internal::optional_data_dtor_base.1222" = type { i8, %union.anon.1223 }
%union.anon.1223 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1224", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1224" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1230" = type { %"class.std::__1::__compressed_pair.1231" }
%"class.std::__1::__compressed_pair.1231" = type { %"struct.std::__1::__compressed_pair_elem.1232" }
%"struct.std::__1::__compressed_pair_elem.1232" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1233", i8, i64, %class.scoped_refptr.1234, %class.scoped_refptr.1259 }
%"class.base::RepeatingCallback.1233" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1234 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1235", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1237", %"class.std::__1::map.1248", i8, [7 x i8] }>
%"class.base::RefCounted.1235" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1236 }
%class.scoped_refptr.1236 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1237" = type { %"class.std::__1::__tree.1238" }
%"class.std::__1::__tree.1238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1239", %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.1248" = type { %"class.std::__1::__tree.1249" }
%"class.std::__1::__tree.1249" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1250", %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%class.scoped_refptr.1259 = type { %"class.base::RefCountedData.1260"* }
%"class.base::RefCountedData.1260" = type opaque
%class.scoped_refptr.1264 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1265" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1266" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1267" = type { %"class.absl::optional_internal::optional_data.1268" }
%"class.absl::optional_internal::optional_data.1268" = type { %"class.absl::optional_internal::optional_data_base.1269" }
%"class.absl::optional_internal::optional_data_base.1269" = type { %"class.absl::optional_internal::optional_data_dtor_base.1270" }
%"class.absl::optional_internal::optional_data_dtor_base.1270" = type { i8, %union.anon.1271 }
%union.anon.1271 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1272" = type { %"class.absl::optional_internal::optional_data.1273" }
%"class.absl::optional_internal::optional_data.1273" = type { %"class.absl::optional_internal::optional_data_base.1274" }
%"class.absl::optional_internal::optional_data_base.1274" = type { %"class.absl::optional_internal::optional_data_dtor_base.1275" }
%"class.absl::optional_internal::optional_data_dtor_base.1275" = type { i8, [7 x i8], %union.anon.1276 }
%union.anon.1276 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1225" = type { %"class.absl::optional_internal::optional_data.1226" }
%"class.absl::optional_internal::optional_data.1226" = type { %"class.absl::optional_internal::optional_data_base.1227" }
%"class.absl::optional_internal::optional_data_base.1227" = type { %"class.absl::optional_internal::optional_data_dtor_base.1228" }
%"class.absl::optional_internal::optional_data_dtor_base.1228" = type { i8, %union.anon.1229 }
%union.anon.1229 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1277 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1277 = type { %"class.std::__1::map.1280" }
%"class.std::__1::map.1280" = type { %"class.std::__1::__tree.1281" }
%"class.std::__1::__tree.1281" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1282", %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1291"*, i64 }
%"class.std::__1::unique_ptr.1291" = type opaque
%"class.std::__1::map.1292" = type { %"class.std::__1::__tree.1293" }
%"class.std::__1::__tree.1293" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1294", %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::unique_ptr.1301" = type { %"class.std::__1::__compressed_pair.1302" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1313" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1326" }
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1330" }
%"class.mojo::AssociatedRemote.1330" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1331" }
%"class.mojo::internal::AssociatedInterfacePtrState.1331" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1332" }
%"class.std::__1::unique_ptr.1332" = type { %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1338" = type { %"class.blink::Member.1339" }
%"class.blink::Member.1339" = type { %"class.blink::MemberBase.1340" }
%"class.blink::MemberBase.1340" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1343" }
%"class.mojo::AssociatedRemote.1343" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1344" }
%"class.mojo::internal::AssociatedInterfacePtrState.1344" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1345" }
%"class.std::__1::unique_ptr.1345" = type { %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1351" }
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1355", %"class.blink::Member.1095", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1355" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1356" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.973" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1357" = type { %"class.blink::Member.1358" }
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1362", %"class.blink::Member.1095", %"class.mojo::AssociatedReceiver.1363" }
%"class.blink::ThreadState::PrefinalizerRegistration.1362" = type { i8 }
%"class.mojo::AssociatedReceiver.1363" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1364" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1364" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1365" }
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1369", %"class.blink::Member.1095", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1369" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1208, %"class.std::__1::unique_ptr.973", %"class.base::WeakPtrFactory.1370" }
%"class.base::WeakPtrFactory.1370" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1371" = type { %"class.blink::Member.1372" }
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1376", %"class.blink::Member.1095", %"class.mojo::AssociatedReceiver.1377" }
%"class.blink::ThreadState::PrefinalizerRegistration.1376" = type { i8 }
%"class.mojo::AssociatedReceiver.1377" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1378" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1378" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::HeapHashMap.1387"* }
%"class.blink::HeapHashMap.1387" = type opaque
%"class.mojo::StructPtr.1388" = type { %"class.std::__1::unique_ptr.1389" }
%"class.std::__1::unique_ptr.1389" = type { %"class.std::__1::__compressed_pair.1390" }
%"class.std::__1::__compressed_pair.1390" = type { %"struct.std::__1::__compressed_pair_elem.1391" }
%"struct.std::__1::__compressed_pair_elem.1391" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1392", %"class.mojo::InlinedStructPtr" }
%"class.mojo::InlinedStructPtr.1392" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1398" = type { %"class.absl::optional_internal::optional_data.1399" }
%"class.absl::optional_internal::optional_data.1399" = type { %"class.absl::optional_internal::optional_data_base.1400" }
%"class.absl::optional_internal::optional_data_base.1400" = type { %"class.absl::optional_internal::optional_data_dtor_base.1401" }
%"class.absl::optional_internal::optional_data_dtor_base.1401" = type { i8, %union.anon.1402 }
%union.anon.1402 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.1671", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.1683", %"class.WTF::Vector.1684" }
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1674", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1674" = type { %"class.std::__1::__compressed_pair.1675" }
%"class.std::__1::__compressed_pair.1675" = type { %"struct.std::__1::__compressed_pair_elem.1676" }
%"struct.std::__1::__compressed_pair_elem.1676" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.1683" = type { %"class.blink::MemberBase.1096" }
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1573" }
%"class.WTF::Vector.1720" = type { %"class.WTF::VectorBuffer.1721" }
%"class.WTF::VectorBuffer.1721" = type { %"class.WTF::VectorBufferBase.1722" }
%"class.WTF::VectorBufferBase.1722" = type { %"class.blink::ImageCandidate"**, i32, i32 }
%"class.blink::MemoryCache" = type { %"class.blink::MemoryCacheDumpClient", %"class.blink::MemoryPressureListener", %"class.blink::HeapHashMap.1739", i8, i8, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.base::TimeDelta", i64, %class.scoped_refptr.303 }
%"class.blink::MemoryCacheDumpClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashMap.1739" = type { %"class.WTF::HashMap.1742" }
%"class.WTF::HashMap.1742" = type { %"class.WTF::HashTable.1743" }
%"class.WTF::HashTable.1743" = type <{ %"struct.WTF::KeyValuePair.1745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1745" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1692, i32, i8, i8, [2 x i8] }>
%union.anon.1692 = type { %"class.WTF::Vector.1693" }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695", [16 x i8] }
%"class.WTF::VectorBufferBase.1695" = type { i8*, i32, i32 }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.1719" }
%"class.WTF::StringTypeAdapter.1719" = type { %"class.WTF::StringView" }
%"class.std::__1::reverse_iterator" = type { %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"* }

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DescriptorTokenEEEmm = comdat any

$_ZN5blink15DescriptorToken7ToFloatIhEEfPKT_Rb = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink15DescriptorToken7ToFloatIDsEEfPKT_Rb = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRPFbRKN5blink14ImageCandidateES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKN5blink14ImageCandidateES5_EEENS_16reverse_iteratorIPS3_EESC_SC_EEvT0_SD_T1_SE_T2_T_ = comdat any

$_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14ImageCandidateEEEmm = comdat any

$_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14ImageCandidateEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [26 x i8] c"Dropped srcset candidate \00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DescriptorTokenEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DescriptorToken]\00", align 1
@.str.5 = private unnamed_addr constant [69 x i8] c"it has multiple 'w' descriptors or a mix of 'x' and 'w' descriptors.\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"its 'w' descriptor is invalid.\00", align 1
@.str.7 = private unnamed_addr constant [69 x i8] c"it has multiple 'h' descriptors or a mix of 'x' and 'h' descriptors.\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"its 'h' descriptor is invalid.\00", align 1
@.str.9 = private unnamed_addr constant [73 x i8] c"it has multiple 'x' descriptors or a mix of 'x' and 'w'/'h' descriptors.\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"its 'x' descriptor is invalid.\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"it has an unknown descriptor.\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"it has an 'h' descriptor and no 'w' descriptor.\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"Failed parsing 'srcset' attribute value since \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink8features18kSaveDataImgSrcsetE = external global %"struct.base::Feature", align 8
@_ZN5blink26RuntimeEnabledFeaturesBase30is_srcset_max_density_enabled_E = external local_unnamed_addr global i8, align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14ImageCandidateEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImageCandidate *]\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ImageCandidateEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ImageCandidate]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31BestFitSourceForSrcsetAttributeEffRKN3WTF6StringEPNS_8DocumentE(%"class.blink::ImageCandidate"* noalias nocapture sret, float, float, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 {
  %6 = alloca %"class.WTF::Vector.1051", align 8
  %7 = bitcast %"class.WTF::Vector.1051"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #11
  call fastcc void @_ZN5blinkL39ParseImageCandidatesFromSrcsetAttributeERKN3WTF6StringERNS0_6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::Vector.1051"* nonnull dereferenceable(16) %6, %"class.blink::Document"* %4)
  call fastcc void @_ZN5blinkL22PickBestImageCandidateEffRN3WTF6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.blink::ImageCandidate"* sret %0, float %1, float %2, %"class.WTF::Vector.1051"* nonnull dereferenceable(16) %6, %"class.blink::Document"* %4)
  %10 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %8, align 8
  %11 = icmp eq %"class.blink::ImageCandidate"* %10, null
  br i1 %11, label %45, label %12, !prof !2

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::ImageCandidate"* %10 to i8*
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %43, label %16, !prof !3

16:                                               ; preds = %12
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %10, i64 %17
  br label %19

19:                                               ; preds = %37, %16
  %20 = phi %"class.blink::ImageCandidate"* [ %38, %37 ], [ %10, %16 ]
  %21 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #11
  br label %37

37:                                               ; preds = %36, %33, %19
  %38 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 1
  %39 = icmp eq %"class.blink::ImageCandidate"* %38, %18
  br i1 %39, label %40, label %19

40:                                               ; preds = %37
  store i32 0, i32* %9, align 4
  %41 = bitcast %"class.WTF::Vector.1051"* %6 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %12
  %44 = phi i8* [ %42, %40 ], [ %13, %12 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %44) #11
  store %"class.blink::ImageCandidate"* null, %"class.blink::ImageCandidate"** %8, align 8
  br label %45

45:                                               ; preds = %5, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL39ParseImageCandidatesFromSrcsetAttributeERKN3WTF6StringERNS0_6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::Vector.1051"* dereferenceable(16), %"class.blink::Document"*) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.blink::DescriptorParsingResult", align 4
  %9 = alloca %"class.WTF::Vector.1076", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.WTF::StringAppend", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::ImageCandidate", align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.blink::DescriptorParsingResult", align 4
  %21 = alloca %"class.WTF::Vector.1076", align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %"class.WTF::StringAppend", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.blink::ImageCandidate", align 8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %1009, label %31

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  br i1 %35, label %516, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.WTF::StringImpl"* %36 to i8*
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %42 = zext i32 %40 to i64
  %43 = getelementptr inbounds i8, i8* %38, i64 %42
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %1009, label %45

45:                                               ; preds = %37
  %46 = bitcast %"class.blink::DescriptorParsingResult"* %8 to i8*
  %47 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %8, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %8, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %8, i64 0, i32 2
  %50 = bitcast %"class.WTF::Vector.1076"* %9 to i8*
  %51 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %9, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %9, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %9, i64 0, i32 0, i32 0, i32 2
  %54 = bitcast i64* %5 to %"struct.blink::DescriptorToken"*
  %55 = bitcast i64* %5 to i8*
  %56 = bitcast i64* %5 to i32*
  %57 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %54, i64 0, i32 1
  %58 = bitcast i64* %7 to %"struct.blink::DescriptorToken"*
  %59 = bitcast i64* %7 to i8*
  %60 = ptrtoint i8* %43 to i64
  %61 = bitcast i64* %7 to i32*
  %62 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %58, i64 0, i32 1
  %63 = bitcast i64* %6 to %"struct.blink::DescriptorToken"*
  %64 = bitcast i64* %6 to i8*
  %65 = bitcast i64* %6 to i32*
  %66 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %63, i64 0, i32 1
  %67 = bitcast i64* %4 to %"struct.blink::DescriptorToken"*
  %68 = bitcast i64* %4 to i8*
  %69 = bitcast i64* %4 to i32*
  %70 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %67, i64 0, i32 1
  %71 = icmp eq %"class.blink::Document"* %2, null
  %72 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 2
  %73 = bitcast %"class.blink::UseCounter"* %72 to void (%"class.blink::UseCounter"*, i32)***
  %74 = bitcast i32* %10 to i8*
  %75 = bitcast i32* %11 to i8*
  %76 = bitcast %"class.WTF::StringAppend"* %12 to i8*
  %77 = bitcast %"class.WTF::String"* %13 to i8*
  %78 = bitcast %"class.WTF::String"* %14 to i8*
  %79 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %12, i64 0, i32 1, i32 0, i32 0
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %83 = bitcast %"class.blink::ImageCandidate"* %15 to i8*
  %84 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 1
  %86 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 1, i32 2
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %85, i64 0, i32 0
  %88 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 1, i32 1
  %89 = bitcast i8** %88 to i16**
  %90 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 2
  %91 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 3
  %92 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 4
  %93 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %1, i64 0, i32 0, i32 0, i32 2
  %94 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %1, i64 0, i32 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %1, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.blink::ImageCandidate"* %15 to i64*
  %97 = bitcast %"class.WTF::StringView"* %85 to i64*
  %98 = bitcast %"class.WTF::StringView"* %85 to i8*
  br label %99

99:                                               ; preds = %111, %45
  %100 = phi i64 [ %41, %45 ], [ %112, %111 ]
  %101 = phi i8* [ %38, %45 ], [ %113, %111 ]
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 44
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = icmp ult i8 %102, 33
  br i1 %105, label %106, label %114

106:                                              ; preds = %104
  switch i8 %102, label %114 [
    i8 32, label %107
    i8 10, label %107
    i8 9, label %107
    i8 13, label %107
    i8 12, label %107
  ]

107:                                              ; preds = %106, %106, %106, %106, %106, %99
  %108 = getelementptr inbounds i8, i8* %101, i64 1
  %109 = ptrtoint i8* %108 to i64
  %110 = icmp eq i8* %108, %43
  br i1 %110, label %114, label %111

111:                                              ; preds = %107, %512
  %112 = phi i64 [ %109, %107 ], [ %513, %512 ]
  %113 = phi i8* [ %108, %107 ], [ %514, %512 ]
  br label %99

114:                                              ; preds = %107, %106, %104
  %115 = phi i64 [ %60, %107 ], [ %100, %104 ], [ %100, %106 ]
  %116 = inttoptr i64 %115 to i8*
  %117 = icmp eq i8* %43, %116
  br i1 %117, label %1009, label %118

118:                                              ; preds = %114
  %119 = icmp ugt i8* %43, %116
  br i1 %119, label %120, label %133

120:                                              ; preds = %118, %126
  %121 = phi i64 [ %128, %126 ], [ %115, %118 ]
  %122 = phi i8* [ %127, %126 ], [ %116, %118 ]
  %123 = load i8, i8* %122, align 1
  %124 = icmp ult i8 %123, 33
  br i1 %124, label %125, label %126

125:                                              ; preds = %120
  switch i8 %123, label %126 [
    i8 32, label %130
    i8 10, label %130
    i8 9, label %130
    i8 13, label %130
    i8 12, label %130
  ]

126:                                              ; preds = %125, %120
  %127 = getelementptr inbounds i8, i8* %122, i64 1
  %128 = ptrtoint i8* %127 to i64
  %129 = icmp eq i8* %127, %43
  br i1 %129, label %130, label %120

130:                                              ; preds = %125, %125, %125, %125, %125, %126
  %131 = phi i64 [ %121, %125 ], [ %121, %125 ], [ %121, %125 ], [ %121, %125 ], [ %121, %125 ], [ %60, %126 ]
  %132 = inttoptr i64 %131 to i8*
  br label %133

133:                                              ; preds = %130, %118
  %134 = phi i8* [ %132, %130 ], [ %116, %118 ]
  %135 = phi i64 [ %131, %130 ], [ %115, %118 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #11
  store float -1.000000e+00, float* %47, align 4
  store i32 -1, i32* %48, align 4
  store i32 -1, i32* %49, align 4
  %136 = getelementptr inbounds i8, i8* %134, i64 -1
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 44
  br i1 %138, label %139, label %152

139:                                              ; preds = %133
  %140 = icmp ult i8* %136, %116
  br i1 %140, label %148, label %144

141:                                              ; preds = %144
  %142 = load i8, i8* %146, align 1
  %143 = icmp eq i8 %142, 44
  br i1 %143, label %144, label %148

144:                                              ; preds = %139, %141
  %145 = phi i8* [ %146, %141 ], [ %136, %139 ]
  %146 = getelementptr inbounds i8, i8* %145, i64 -1
  %147 = icmp ult i8* %146, %116
  br i1 %147, label %148, label %141

148:                                              ; preds = %144, %141, %139
  %149 = phi i8* [ %134, %139 ], [ %145, %141 ], [ %145, %144 ]
  %150 = ptrtoint i8* %149 to i64
  %151 = icmp eq i8* %149, %116
  br i1 %151, label %512, label %410

152:                                              ; preds = %133
  %153 = icmp ugt i8* %43, %134
  br i1 %153, label %154, label %170

154:                                              ; preds = %152
  %155 = load i8, i8* %134, align 1
  %156 = icmp ult i8 %155, 33
  br i1 %156, label %161, label %170

157:                                              ; preds = %165
  %158 = ptrtoint i8* %166 to i64
  %159 = load i8, i8* %166, align 1
  %160 = icmp ult i8 %159, 33
  br i1 %160, label %161, label %168

161:                                              ; preds = %154, %157
  %162 = phi i8 [ %159, %157 ], [ %155, %154 ]
  %163 = phi i8* [ %166, %157 ], [ %134, %154 ]
  %164 = phi i64 [ %158, %157 ], [ %135, %154 ]
  switch i8 %162, label %170 [
    i8 32, label %165
    i8 10, label %165
    i8 9, label %165
    i8 13, label %165
    i8 12, label %165
  ]

165:                                              ; preds = %161, %161, %161, %161, %161
  %166 = getelementptr inbounds i8, i8* %163, i64 1
  %167 = icmp eq i8* %166, %43
  br i1 %167, label %170, label %157

168:                                              ; preds = %157
  %169 = ptrtoint i8* %166 to i64
  br label %170

170:                                              ; preds = %165, %161, %168, %154, %152
  %171 = phi i64 [ %135, %152 ], [ %135, %154 ], [ %169, %168 ], [ %60, %165 ], [ %164, %161 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #11
  %172 = inttoptr i64 %171 to i8*
  br label %173

173:                                              ; preds = %300, %170
  %174 = phi i64 [ %171, %170 ], [ %305, %300 ]
  %175 = phi i8* [ %172, %170 ], [ %304, %300 ]
  %176 = phi i64 [ %171, %170 ], [ %302, %300 ]
  %177 = phi i32 [ 0, %170 ], [ %303, %300 ]
  switch i32 %177, label %300 [
    i32 0, label %178
    i32 1, label %264
    i32 2, label %291
  ]

178:                                              ; preds = %173
  %179 = icmp ult i8* %175, %43
  br i1 %179, label %201, label %180

180:                                              ; preds = %178
  %181 = inttoptr i64 %176 to i8*
  %182 = icmp ugt i8* %43, %181
  br i1 %182, label %183, label %306

183:                                              ; preds = %180
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %184 = sub i64 %176, %41
  %185 = trunc i64 %184 to i32
  %186 = sub i64 %60, %176
  %187 = trunc i64 %186 to i32
  store i32 %185, i32* %65, align 8
  store i32 %187, i32* %66, align 4
  %188 = load i32, i32* %53, align 4
  %189 = load i32, i32* %52, align 8
  %190 = icmp eq i32 %188, %189
  br i1 %190, label %199, label %191, !prof !3

191:                                              ; preds = %183
  %192 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %193 = zext i32 %188 to i64
  %194 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %192, i64 %193
  %195 = bitcast %"struct.blink::DescriptorToken"* %194 to i64*
  %196 = load i64, i64* %6, align 8
  store i64 %196, i64* %195, align 4
  %197 = load i32, i32* %53, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %53, align 4
  br label %200

199:                                              ; preds = %183
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %9, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %63) #11
  br label %200

200:                                              ; preds = %199, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  br label %306

201:                                              ; preds = %178
  %202 = load i8, i8* %175, align 1
  %203 = icmp eq i8 %202, 44
  br i1 %203, label %204, label %231

204:                                              ; preds = %201
  %205 = inttoptr i64 %176 to i8*
  %206 = icmp ugt i8* %175, %205
  br i1 %206, label %207, label %227

207:                                              ; preds = %204
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  %208 = sub i64 %176, %41
  %209 = trunc i64 %208 to i32
  %210 = ptrtoint i8* %175 to i64
  %211 = sub i64 %210, %176
  %212 = trunc i64 %211 to i32
  store i32 %209, i32* %69, align 8
  store i32 %212, i32* %70, align 4
  %213 = load i32, i32* %53, align 4
  %214 = load i32, i32* %52, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %224, label %216, !prof !3

216:                                              ; preds = %207
  %217 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %218 = zext i32 %213 to i64
  %219 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %217, i64 %218
  %220 = bitcast %"struct.blink::DescriptorToken"* %219 to i64*
  %221 = load i64, i64* %4, align 8
  store i64 %221, i64* %220, align 4
  %222 = load i32, i32* %53, align 4
  %223 = add i32 %222, 1
  store i32 %223, i32* %53, align 4
  br label %225

224:                                              ; preds = %207
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %9, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %67) #11
  br label %225

225:                                              ; preds = %224, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  %226 = inttoptr i64 %174 to i8*
  br label %227

227:                                              ; preds = %225, %204
  %228 = phi i8* [ %175, %204 ], [ %226, %225 ]
  %229 = getelementptr inbounds i8, i8* %228, i64 1
  %230 = ptrtoint i8* %229 to i64
  br label %306

231:                                              ; preds = %201
  %232 = icmp ult i8 %202, 33
  br i1 %232, label %233, label %261

233:                                              ; preds = %231
  switch i8 %202, label %261 [
    i8 32, label %234
    i8 10, label %234
    i8 9, label %234
    i8 13, label %234
    i8 12, label %234
  ]

234:                                              ; preds = %233, %233, %233, %233, %233
  %235 = inttoptr i64 %176 to i8*
  %236 = icmp ugt i8* %175, %235
  br i1 %236, label %237, label %257

237:                                              ; preds = %234
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %238 = sub i64 %176, %41
  %239 = trunc i64 %238 to i32
  %240 = ptrtoint i8* %175 to i64
  %241 = sub i64 %240, %176
  %242 = trunc i64 %241 to i32
  store i32 %239, i32* %56, align 8
  store i32 %242, i32* %57, align 4
  %243 = load i32, i32* %53, align 4
  %244 = load i32, i32* %52, align 8
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %254, label %246, !prof !3

246:                                              ; preds = %237
  %247 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %248 = zext i32 %243 to i64
  %249 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %247, i64 %248
  %250 = bitcast %"struct.blink::DescriptorToken"* %249 to i64*
  %251 = load i64, i64* %5, align 8
  store i64 %251, i64* %250, align 4
  %252 = load i32, i32* %53, align 4
  %253 = add i32 %252, 1
  store i32 %253, i32* %53, align 4
  br label %255

254:                                              ; preds = %237
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %9, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %54) #11
  br label %255

255:                                              ; preds = %254, %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  %256 = inttoptr i64 %174 to i8*
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i8* [ %175, %234 ], [ %256, %255 ]
  %259 = getelementptr inbounds i8, i8* %258, i64 1
  %260 = ptrtoint i8* %259 to i64
  br label %300

261:                                              ; preds = %233, %231
  %262 = icmp eq i8 %202, 40
  %263 = zext i1 %262 to i32
  br label %300

264:                                              ; preds = %173
  %265 = icmp ult i8* %175, %43
  br i1 %265, label %287, label %266

266:                                              ; preds = %264
  %267 = inttoptr i64 %176 to i8*
  %268 = icmp ugt i8* %43, %267
  br i1 %268, label %269, label %306

269:                                              ; preds = %266
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  %270 = sub i64 %176, %41
  %271 = trunc i64 %270 to i32
  %272 = sub i64 %60, %176
  %273 = trunc i64 %272 to i32
  store i32 %271, i32* %61, align 8
  store i32 %273, i32* %62, align 4
  %274 = load i32, i32* %53, align 4
  %275 = load i32, i32* %52, align 8
  %276 = icmp eq i32 %274, %275
  br i1 %276, label %285, label %277, !prof !3

277:                                              ; preds = %269
  %278 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %279 = zext i32 %274 to i64
  %280 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %278, i64 %279
  %281 = bitcast %"struct.blink::DescriptorToken"* %280 to i64*
  %282 = load i64, i64* %7, align 8
  store i64 %282, i64* %281, align 4
  %283 = load i32, i32* %53, align 4
  %284 = add i32 %283, 1
  store i32 %284, i32* %53, align 4
  br label %286

285:                                              ; preds = %269
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %9, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %58) #11
  br label %286

286:                                              ; preds = %285, %277
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  br label %306

287:                                              ; preds = %264
  %288 = load i8, i8* %175, align 1
  %289 = icmp ne i8 %288, 41
  %290 = zext i1 %289 to i32
  br label %300

291:                                              ; preds = %173
  %292 = icmp ult i8* %175, %43
  br i1 %292, label %293, label %306

293:                                              ; preds = %291
  %294 = load i8, i8* %175, align 1
  %295 = icmp ult i8 %294, 33
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  switch i8 %294, label %297 [
    i8 32, label %300
    i8 10, label %300
    i8 9, label %300
    i8 13, label %300
    i8 12, label %300
  ]

297:                                              ; preds = %296, %293
  %298 = inttoptr i64 %174 to i8*
  %299 = getelementptr inbounds i8, i8* %298, i64 -1
  br label %300

300:                                              ; preds = %297, %296, %296, %296, %296, %296, %287, %261, %257, %173
  %301 = phi i8* [ %175, %173 ], [ %299, %297 ], [ %175, %287 ], [ %258, %257 ], [ %175, %261 ], [ %175, %296 ], [ %175, %296 ], [ %175, %296 ], [ %175, %296 ], [ %175, %296 ]
  %302 = phi i64 [ %176, %173 ], [ %174, %297 ], [ %176, %287 ], [ %260, %257 ], [ %176, %261 ], [ %176, %296 ], [ %176, %296 ], [ %176, %296 ], [ %176, %296 ], [ %176, %296 ]
  %303 = phi i32 [ %177, %173 ], [ 0, %297 ], [ %290, %287 ], [ 2, %257 ], [ %263, %261 ], [ 2, %296 ], [ 2, %296 ], [ 2, %296 ], [ 2, %296 ], [ 2, %296 ]
  %304 = getelementptr inbounds i8, i8* %301, i64 1
  %305 = ptrtoint i8* %304 to i64
  br label %173

306:                                              ; preds = %291, %286, %266, %227, %200, %180
  %307 = phi i64 [ %174, %286 ], [ %174, %266 ], [ %230, %227 ], [ %174, %200 ], [ %174, %180 ], [ %174, %291 ]
  %308 = call fastcc zeroext i1 @_ZN5blinkL16ParseDescriptorsERKN3WTF6StringERNS0_6VectorINS_15DescriptorTokenELj0ENS0_18PartitionAllocatorEEERNS_23DescriptorParsingResultEPNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::Vector.1076"* nonnull dereferenceable(16) %9, %"class.blink::DescriptorParsingResult"* nonnull dereferenceable(12) %8, %"class.blink::Document"* %2) #11
  br i1 %308, label %400, label %309

309:                                              ; preds = %306
  br i1 %71, label %502, label %310

310:                                              ; preds = %309
  %311 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %73, align 8
  %312 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %311, i64 3
  %313 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %312, align 8
  call void %313(%"class.blink::UseCounter"* nonnull %72, i32 573) #11
  %314 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %2) #11
  %315 = icmp eq %"class.blink::LocalFrame"* %314, null
  br i1 %315, label %492, label %316

316:                                              ; preds = %310
  %317 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %2) #11
  %318 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %317, i64 0, i32 16, i32 0, i32 0
  %319 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %318, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #11
  store i32 8, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #11
  store i32 2, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i64 25) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #11
  %320 = sub i64 %135, %115
  %321 = trunc i64 %320 to i32
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %14, i8* %116, i32 %321) #11
  %322 = call %"class.WTF::StringImpl"* @_ZN5blink9JSONValue11QuoteStringERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %14) #11
  %323 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::StringImpl"* %322) #11
  %324 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %323, 0
  store %"class.WTF::StringImpl"* %324, %"class.WTF::StringImpl"** %79, align 8
  %325 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %323, 1
  store %"class.WTF::StringImpl"* %325, %"class.WTF::StringImpl"** %80, align 8
  %326 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %11, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %12) #11
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %319, %"class.blink::ConsoleMessage"* %326, i1 zeroext false) #11
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %327, null
  br i1 %328, label %342, label %329

329:                                              ; preds = %316
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  br i1 %333, label %336, label %338

336:                                              ; preds = %329
  %337 = add i32 %335, -1
  store i32 %337, i32* %334, align 4
  br label %338

338:                                              ; preds = %336, %329
  %339 = phi i32 [ %337, %336 ], [ %335, %329 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %327) #11
  br label %342

342:                                              ; preds = %341, %338, %316
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #11
  br label %358

358:                                              ; preds = %357, %354, %342
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %358
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #11
  br label %374

374:                                              ; preds = %373, %370, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #11
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #11
  br label %390

390:                                              ; preds = %389, %386, %374
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #11
  %391 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %392 = icmp eq %"struct.blink::DescriptorToken"* %391, null
  %393 = bitcast %"struct.blink::DescriptorToken"* %391 to i8*
  br i1 %392, label %399, label %394, !prof !2

394:                                              ; preds = %390
  %395 = load i32, i32* %53, align 4
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %398, label %397, !prof !3

397:                                              ; preds = %394
  store i32 0, i32* %53, align 4
  br label %398

398:                                              ; preds = %397, %394
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %393) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %51, align 8
  br label %399

399:                                              ; preds = %398, %390
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  br label %512

400:                                              ; preds = %306
  %401 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %402 = icmp eq %"struct.blink::DescriptorToken"* %401, null
  %403 = bitcast %"struct.blink::DescriptorToken"* %401 to i8*
  br i1 %402, label %409, label %404, !prof !2

404:                                              ; preds = %400
  %405 = load i32, i32* %53, align 4
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %408, label %407, !prof !3

407:                                              ; preds = %404
  store i32 0, i32* %53, align 4
  br label %408

408:                                              ; preds = %407, %404
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %403) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %51, align 8
  br label %409

409:                                              ; preds = %408, %400
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  br label %410

410:                                              ; preds = %409, %148
  %411 = phi i64 [ %135, %148 ], [ %307, %409 ]
  %412 = phi i64 [ %150, %148 ], [ %135, %409 ]
  %413 = sub i64 %115, %41
  %414 = sub i64 %412, %115
  %415 = trunc i64 %414 to i32
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %83) #11
  %416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store %"class.WTF::StringImpl"* %416, %"class.WTF::StringImpl"** %84, align 8
  %417 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %417, label %452, label %418

418:                                              ; preds = %410
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %437

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  %426 = zext i32 %425 to i33
  %427 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %426, i33 1) #11
  %428 = extractvalue { i33, i1 } %427, 1
  %429 = extractvalue { i33, i1 } %427, 0
  %430 = icmp slt i33 %429, 0
  %431 = or i1 %428, %430
  br i1 %431, label %432, label %433, !prof !3

432:                                              ; preds = %423
  call void @llvm.trap() #11
  unreachable

433:                                              ; preds = %423
  %434 = trunc i33 %429 to i32
  store i32 %434, i32* %424, align 4
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %452, label %437

437:                                              ; preds = %433, %418
  %438 = phi %"class.WTF::StringImpl"* [ %435, %433 ], [ %416, %418 ]
  store i32 %415, i32* %86, align 8
  store %"class.WTF::StringImpl"* %438, %"class.WTF::StringImpl"** %87, align 8
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 1
  br i1 %442, label %448, label %444

444:                                              ; preds = %437
  %445 = bitcast %"class.WTF::StringImpl"* %443 to i8*
  %446 = and i64 %413, 4294967295
  %447 = getelementptr inbounds i8, i8* %445, i64 %446
  store i8* %447, i8** %88, align 8
  br label %454

448:                                              ; preds = %437
  %449 = bitcast %"class.WTF::StringImpl"* %443 to i16*
  %450 = and i64 %413, 4294967295
  %451 = getelementptr inbounds i16, i16* %449, i64 %450
  store i16* %451, i16** %89, align 8
  br label %454

452:                                              ; preds = %433, %410
  store i32 0, i32* %86, align 8
  store i8* null, i8** %88, align 8
  %453 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %453, i64* %97, align 8
  br label %454

454:                                              ; preds = %452, %448, %444
  %455 = load float, float* %47, align 4
  %456 = fcmp oge float %455, 0.000000e+00
  %457 = select i1 %456, float %455, float -1.000000e+00
  store float %457, float* %90, align 8
  %458 = load i32, i32* %48, align 4
  %459 = icmp sgt i32 %458, -1
  %460 = select i1 %459, i32 %458, i32 -1
  store i32 %460, i32* %91, align 4
  store i32 0, i32* %92, align 8
  %461 = load i32, i32* %93, align 4
  %462 = load i32, i32* %94, align 8
  %463 = icmp eq i32 %461, %462
  br i1 %463, label %474, label %464, !prof !3

464:                                              ; preds = %454
  %465 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %95, align 8
  %466 = zext i32 %461 to i64
  %467 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %465, i64 %466
  %468 = load i64, i64* %96, align 8
  %469 = bitcast %"class.blink::ImageCandidate"* %467 to i64*
  store i64 %468, i64* %469, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8
  %470 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %465, i64 %466, i32 1
  %471 = bitcast %"class.WTF::StringView"* %470 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %98, i64 36, i1 false) #11
  %472 = load i32, i32* %93, align 4
  %473 = add i32 %472, 1
  store i32 %473, i32* %93, align 4
  br label %475

474:                                              ; preds = %454
  call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1051"* %1, %"class.blink::ImageCandidate"* nonnull dereferenceable(48) %15) #11
  br label %475

475:                                              ; preds = %474, %464
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %477 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %477, label %491, label %478

478:                                              ; preds = %475
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load atomic i32, i32* %479 monotonic, align 4
  %481 = and i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  br i1 %482, label %485, label %487

485:                                              ; preds = %478
  %486 = add i32 %484, -1
  store i32 %486, i32* %483, align 4
  br label %487

487:                                              ; preds = %485, %478
  %488 = phi i32 [ %486, %485 ], [ %484, %478 ]
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %487
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %476) #11
  br label %491

491:                                              ; preds = %490, %487, %475
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %83) #11
  br label %512

492:                                              ; preds = %310
  %493 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %494 = icmp eq %"struct.blink::DescriptorToken"* %493, null
  %495 = bitcast %"struct.blink::DescriptorToken"* %493 to i8*
  br i1 %494, label %501, label %496, !prof !2

496:                                              ; preds = %492
  %497 = load i32, i32* %53, align 4
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %500, label %499, !prof !3

499:                                              ; preds = %496
  store i32 0, i32* %53, align 4
  br label %500

500:                                              ; preds = %499, %496
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %495) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %51, align 8
  br label %501

501:                                              ; preds = %500, %492
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  br label %512

502:                                              ; preds = %309
  %503 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %51, align 8
  %504 = icmp eq %"struct.blink::DescriptorToken"* %503, null
  %505 = bitcast %"struct.blink::DescriptorToken"* %503 to i8*
  br i1 %504, label %511, label %506, !prof !2

506:                                              ; preds = %502
  %507 = load i32, i32* %53, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %510, label %509, !prof !3

509:                                              ; preds = %506
  store i32 0, i32* %53, align 4
  br label %510

510:                                              ; preds = %509, %506
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %505) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %51, align 8
  br label %511

511:                                              ; preds = %510, %502
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  br label %512

512:                                              ; preds = %511, %501, %491, %399, %148
  %513 = phi i64 [ %135, %148 ], [ %411, %491 ], [ %307, %511 ], [ %307, %501 ], [ %307, %399 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #11
  %514 = inttoptr i64 %513 to i8*
  %515 = icmp ugt i8* %43, %514
  br i1 %515, label %111, label %1009

516:                                              ; preds = %31
  %517 = bitcast %"class.WTF::StringImpl"* %36 to i16*
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %519 = load i32, i32* %518, align 4
  %520 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %521 = zext i32 %519 to i64
  %522 = getelementptr inbounds i16, i16* %517, i64 %521
  %523 = icmp eq i32 %519, 0
  br i1 %523, label %1009, label %524

524:                                              ; preds = %516
  %525 = bitcast %"class.blink::DescriptorParsingResult"* %20 to i8*
  %526 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %20, i64 0, i32 0
  %527 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %20, i64 0, i32 1
  %528 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %20, i64 0, i32 2
  %529 = bitcast %"class.WTF::Vector.1076"* %21 to i8*
  %530 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %21, i64 0, i32 0, i32 0, i32 0
  %531 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %21, i64 0, i32 0, i32 0, i32 1
  %532 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %21, i64 0, i32 0, i32 0, i32 2
  %533 = bitcast i64* %17 to %"struct.blink::DescriptorToken"*
  %534 = bitcast i64* %17 to i8*
  %535 = bitcast i64* %17 to i32*
  %536 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %533, i64 0, i32 1
  %537 = bitcast i64* %19 to %"struct.blink::DescriptorToken"*
  %538 = bitcast i64* %19 to i8*
  %539 = ptrtoint i16* %522 to i64
  %540 = bitcast i64* %19 to i32*
  %541 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %537, i64 0, i32 1
  %542 = bitcast i64* %18 to %"struct.blink::DescriptorToken"*
  %543 = bitcast i64* %18 to i8*
  %544 = bitcast i64* %18 to i32*
  %545 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %542, i64 0, i32 1
  %546 = bitcast i64* %16 to %"struct.blink::DescriptorToken"*
  %547 = bitcast i64* %16 to i8*
  %548 = bitcast i64* %16 to i32*
  %549 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %546, i64 0, i32 1
  %550 = icmp eq %"class.blink::Document"* %2, null
  %551 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 2
  %552 = bitcast %"class.blink::UseCounter"* %551 to void (%"class.blink::UseCounter"*, i32)***
  %553 = bitcast i32* %22 to i8*
  %554 = bitcast i32* %23 to i8*
  %555 = bitcast %"class.WTF::StringAppend"* %24 to i8*
  %556 = bitcast %"class.WTF::String"* %25 to i8*
  %557 = bitcast %"class.WTF::String"* %26 to i8*
  %558 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 0, i32 0, i32 0
  %559 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %24, i64 0, i32 1, i32 0, i32 0
  %560 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %561 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %562 = bitcast %"class.blink::ImageCandidate"* %27 to i8*
  %563 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 0, i32 0, i32 0
  %564 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 1
  %565 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 1, i32 2
  %566 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %564, i64 0, i32 0
  %567 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 1, i32 1
  %568 = bitcast i8** %567 to i16**
  %569 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 2
  %570 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 3
  %571 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 4
  %572 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %1, i64 0, i32 0, i32 0, i32 2
  %573 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %1, i64 0, i32 0, i32 0, i32 1
  %574 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %1, i64 0, i32 0, i32 0, i32 0
  %575 = bitcast %"class.blink::ImageCandidate"* %27 to i64*
  %576 = bitcast %"class.WTF::StringView"* %564 to i64*
  %577 = bitcast %"class.WTF::StringView"* %564 to i8*
  br label %578

578:                                              ; preds = %590, %524
  %579 = phi i64 [ %520, %524 ], [ %591, %590 ]
  %580 = phi i16* [ %517, %524 ], [ %592, %590 ]
  %581 = load i16, i16* %580, align 2
  %582 = icmp eq i16 %581, 44
  br i1 %582, label %586, label %583

583:                                              ; preds = %578
  %584 = icmp ult i16 %581, 33
  br i1 %584, label %585, label %595

585:                                              ; preds = %583
  switch i16 %581, label %595 [
    i16 32, label %586
    i16 10, label %586
    i16 9, label %586
    i16 13, label %586
    i16 12, label %586
  ]

586:                                              ; preds = %585, %585, %585, %585, %585, %578
  %587 = getelementptr inbounds i16, i16* %580, i64 1
  %588 = ptrtoint i16* %587 to i64
  %589 = icmp ult i16* %587, %522
  br i1 %589, label %590, label %593

590:                                              ; preds = %586, %1005
  %591 = phi i64 [ %588, %586 ], [ %1006, %1005 ]
  %592 = phi i16* [ %587, %586 ], [ %1007, %1005 ]
  br label %578

593:                                              ; preds = %586
  %594 = ptrtoint i16* %587 to i64
  br label %595

595:                                              ; preds = %585, %583, %593
  %596 = phi i64 [ %594, %593 ], [ %579, %583 ], [ %579, %585 ]
  %597 = inttoptr i64 %596 to i16*
  %598 = icmp eq i16* %522, %597
  br i1 %598, label %1009, label %599

599:                                              ; preds = %595
  %600 = icmp ugt i16* %522, %597
  br i1 %600, label %601, label %613

601:                                              ; preds = %599, %607
  %602 = phi i64 [ %609, %607 ], [ %596, %599 ]
  %603 = phi i16* [ %608, %607 ], [ %597, %599 ]
  %604 = load i16, i16* %603, align 2
  %605 = icmp ult i16 %604, 33
  br i1 %605, label %606, label %607

606:                                              ; preds = %601
  switch i16 %604, label %607 [
    i16 32, label %613
    i16 10, label %613
    i16 9, label %613
    i16 13, label %613
    i16 12, label %613
  ]

607:                                              ; preds = %606, %601
  %608 = getelementptr inbounds i16, i16* %603, i64 1
  %609 = ptrtoint i16* %608 to i64
  %610 = icmp ult i16* %608, %522
  br i1 %610, label %601, label %611

611:                                              ; preds = %607
  %612 = ptrtoint i16* %608 to i64
  br label %613

613:                                              ; preds = %606, %606, %606, %606, %606, %611, %599
  %614 = phi i64 [ %596, %599 ], [ %612, %611 ], [ %602, %606 ], [ %602, %606 ], [ %602, %606 ], [ %602, %606 ], [ %602, %606 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %525) #11
  store float -1.000000e+00, float* %526, align 4
  store i32 -1, i32* %527, align 4
  store i32 -1, i32* %528, align 4
  %615 = inttoptr i64 %614 to i16*
  %616 = getelementptr inbounds i16, i16* %615, i64 -1
  %617 = load i16, i16* %616, align 2
  %618 = icmp eq i16 %617, 44
  br i1 %618, label %619, label %632

619:                                              ; preds = %613
  %620 = icmp ult i16* %616, %597
  br i1 %620, label %628, label %624

621:                                              ; preds = %624
  %622 = load i16, i16* %626, align 2
  %623 = icmp eq i16 %622, 44
  br i1 %623, label %624, label %628

624:                                              ; preds = %619, %621
  %625 = phi i16* [ %626, %621 ], [ %616, %619 ]
  %626 = getelementptr inbounds i16, i16* %625, i64 -1
  %627 = icmp ult i16* %626, %597
  br i1 %627, label %628, label %621

628:                                              ; preds = %624, %621, %619
  %629 = phi i16* [ %615, %619 ], [ %625, %621 ], [ %625, %624 ]
  %630 = ptrtoint i16* %629 to i64
  %631 = icmp eq i16* %629, %597
  br i1 %631, label %1005, label %901

632:                                              ; preds = %613
  %633 = icmp ugt i16* %522, %615
  br i1 %633, label %634, label %652

634:                                              ; preds = %632
  %635 = load i16, i16* %615, align 2
  %636 = icmp ult i16 %635, 33
  br i1 %636, label %640, label %652

637:                                              ; preds = %644
  %638 = load i16, i16* %645, align 2
  %639 = icmp ult i16 %638, 33
  br i1 %639, label %640, label %648

640:                                              ; preds = %634, %637
  %641 = phi i16 [ %638, %637 ], [ %635, %634 ]
  %642 = phi i16* [ %645, %637 ], [ %615, %634 ]
  %643 = phi i64 [ %647, %637 ], [ %614, %634 ]
  switch i16 %641, label %652 [
    i16 32, label %644
    i16 10, label %644
    i16 9, label %644
    i16 13, label %644
    i16 12, label %644
  ]

644:                                              ; preds = %640, %640, %640, %640, %640
  %645 = getelementptr inbounds i16, i16* %642, i64 1
  %646 = icmp ult i16* %645, %522
  %647 = ptrtoint i16* %645 to i64
  br i1 %646, label %637, label %650

648:                                              ; preds = %637
  %649 = ptrtoint i16* %645 to i64
  br label %652

650:                                              ; preds = %644
  %651 = ptrtoint i16* %645 to i64
  br label %652

652:                                              ; preds = %650, %640, %648, %634, %632
  %653 = phi i64 [ %614, %632 ], [ %614, %634 ], [ %649, %648 ], [ %651, %650 ], [ %643, %640 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %529) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %529, i8 0, i64 16, i1 false) #11
  %654 = inttoptr i64 %653 to i16*
  br label %655

655:                                              ; preds = %790, %652
  %656 = phi i64 [ %653, %652 ], [ %795, %790 ]
  %657 = phi i16* [ %654, %652 ], [ %794, %790 ]
  %658 = phi i64 [ %653, %652 ], [ %792, %790 ]
  %659 = phi i32 [ 0, %652 ], [ %793, %790 ]
  switch i32 %659, label %790 [
    i32 0, label %660
    i32 1, label %752
    i32 2, label %781
  ]

660:                                              ; preds = %655
  %661 = icmp ult i16* %657, %522
  br i1 %661, label %685, label %662

662:                                              ; preds = %660
  %663 = inttoptr i64 %658 to i16*
  %664 = icmp ugt i16* %522, %663
  br i1 %664, label %665, label %796

665:                                              ; preds = %662
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %543) #11
  %666 = sub i64 %658, %520
  %667 = lshr exact i64 %666, 1
  %668 = trunc i64 %667 to i32
  %669 = sub i64 %539, %658
  %670 = lshr exact i64 %669, 1
  %671 = trunc i64 %670 to i32
  store i32 %668, i32* %544, align 8
  store i32 %671, i32* %545, align 4
  %672 = load i32, i32* %532, align 4
  %673 = load i32, i32* %531, align 8
  %674 = icmp eq i32 %672, %673
  br i1 %674, label %683, label %675, !prof !3

675:                                              ; preds = %665
  %676 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %677 = zext i32 %672 to i64
  %678 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %676, i64 %677
  %679 = bitcast %"struct.blink::DescriptorToken"* %678 to i64*
  %680 = load i64, i64* %18, align 8
  store i64 %680, i64* %679, align 4
  %681 = load i32, i32* %532, align 4
  %682 = add i32 %681, 1
  store i32 %682, i32* %532, align 4
  br label %684

683:                                              ; preds = %665
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %21, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %542) #11
  br label %684

684:                                              ; preds = %683, %675
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %543) #11
  br label %796

685:                                              ; preds = %660
  %686 = load i16, i16* %657, align 2
  %687 = icmp eq i16 %686, 44
  br i1 %687, label %688, label %717

688:                                              ; preds = %685
  %689 = inttoptr i64 %658 to i16*
  %690 = icmp ugt i16* %657, %689
  br i1 %690, label %691, label %713

691:                                              ; preds = %688
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #11
  %692 = sub i64 %658, %520
  %693 = lshr exact i64 %692, 1
  %694 = trunc i64 %693 to i32
  %695 = ptrtoint i16* %657 to i64
  %696 = sub i64 %695, %658
  %697 = lshr exact i64 %696, 1
  %698 = trunc i64 %697 to i32
  store i32 %694, i32* %548, align 8
  store i32 %698, i32* %549, align 4
  %699 = load i32, i32* %532, align 4
  %700 = load i32, i32* %531, align 8
  %701 = icmp eq i32 %699, %700
  br i1 %701, label %710, label %702, !prof !3

702:                                              ; preds = %691
  %703 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %704 = zext i32 %699 to i64
  %705 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %703, i64 %704
  %706 = bitcast %"struct.blink::DescriptorToken"* %705 to i64*
  %707 = load i64, i64* %16, align 8
  store i64 %707, i64* %706, align 4
  %708 = load i32, i32* %532, align 4
  %709 = add i32 %708, 1
  store i32 %709, i32* %532, align 4
  br label %711

710:                                              ; preds = %691
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %21, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %546) #11
  br label %711

711:                                              ; preds = %710, %702
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %547) #11
  %712 = inttoptr i64 %656 to i16*
  br label %713

713:                                              ; preds = %711, %688
  %714 = phi i16* [ %657, %688 ], [ %712, %711 ]
  %715 = getelementptr inbounds i16, i16* %714, i64 1
  %716 = ptrtoint i16* %715 to i64
  br label %796

717:                                              ; preds = %685
  %718 = icmp ult i16 %686, 33
  br i1 %718, label %719, label %749

719:                                              ; preds = %717
  switch i16 %686, label %749 [
    i16 32, label %720
    i16 10, label %720
    i16 9, label %720
    i16 13, label %720
    i16 12, label %720
  ]

720:                                              ; preds = %719, %719, %719, %719, %719
  %721 = inttoptr i64 %658 to i16*
  %722 = icmp ugt i16* %657, %721
  br i1 %722, label %723, label %745

723:                                              ; preds = %720
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #11
  %724 = sub i64 %658, %520
  %725 = lshr exact i64 %724, 1
  %726 = trunc i64 %725 to i32
  %727 = ptrtoint i16* %657 to i64
  %728 = sub i64 %727, %658
  %729 = lshr exact i64 %728, 1
  %730 = trunc i64 %729 to i32
  store i32 %726, i32* %535, align 8
  store i32 %730, i32* %536, align 4
  %731 = load i32, i32* %532, align 4
  %732 = load i32, i32* %531, align 8
  %733 = icmp eq i32 %731, %732
  br i1 %733, label %742, label %734, !prof !3

734:                                              ; preds = %723
  %735 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %736 = zext i32 %731 to i64
  %737 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %735, i64 %736
  %738 = bitcast %"struct.blink::DescriptorToken"* %737 to i64*
  %739 = load i64, i64* %17, align 8
  store i64 %739, i64* %738, align 4
  %740 = load i32, i32* %532, align 4
  %741 = add i32 %740, 1
  store i32 %741, i32* %532, align 4
  br label %743

742:                                              ; preds = %723
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %21, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %533) #11
  br label %743

743:                                              ; preds = %742, %734
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #11
  %744 = inttoptr i64 %656 to i16*
  br label %745

745:                                              ; preds = %743, %720
  %746 = phi i16* [ %657, %720 ], [ %744, %743 ]
  %747 = getelementptr inbounds i16, i16* %746, i64 1
  %748 = ptrtoint i16* %747 to i64
  br label %790

749:                                              ; preds = %719, %717
  %750 = icmp eq i16 %686, 40
  %751 = zext i1 %750 to i32
  br label %790

752:                                              ; preds = %655
  %753 = icmp ult i16* %657, %522
  br i1 %753, label %777, label %754

754:                                              ; preds = %752
  %755 = inttoptr i64 %658 to i16*
  %756 = icmp ugt i16* %522, %755
  br i1 %756, label %757, label %796

757:                                              ; preds = %754
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %538) #11
  %758 = sub i64 %658, %520
  %759 = lshr exact i64 %758, 1
  %760 = trunc i64 %759 to i32
  %761 = sub i64 %539, %658
  %762 = lshr exact i64 %761, 1
  %763 = trunc i64 %762 to i32
  store i32 %760, i32* %540, align 8
  store i32 %763, i32* %541, align 4
  %764 = load i32, i32* %532, align 4
  %765 = load i32, i32* %531, align 8
  %766 = icmp eq i32 %764, %765
  br i1 %766, label %775, label %767, !prof !3

767:                                              ; preds = %757
  %768 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %769 = zext i32 %764 to i64
  %770 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %768, i64 %769
  %771 = bitcast %"struct.blink::DescriptorToken"* %770 to i64*
  %772 = load i64, i64* %19, align 8
  store i64 %772, i64* %771, align 4
  %773 = load i32, i32* %532, align 4
  %774 = add i32 %773, 1
  store i32 %774, i32* %532, align 4
  br label %776

775:                                              ; preds = %757
  call void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"* nonnull %21, %"struct.blink::DescriptorToken"* nonnull dereferenceable(8) %537) #11
  br label %776

776:                                              ; preds = %775, %767
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %538) #11
  br label %796

777:                                              ; preds = %752
  %778 = load i16, i16* %657, align 2
  %779 = icmp ne i16 %778, 41
  %780 = zext i1 %779 to i32
  br label %790

781:                                              ; preds = %655
  %782 = icmp ult i16* %657, %522
  br i1 %782, label %783, label %796

783:                                              ; preds = %781
  %784 = load i16, i16* %657, align 2
  %785 = icmp ult i16 %784, 33
  br i1 %785, label %786, label %787

786:                                              ; preds = %783
  switch i16 %784, label %787 [
    i16 32, label %790
    i16 10, label %790
    i16 9, label %790
    i16 13, label %790
    i16 12, label %790
  ]

787:                                              ; preds = %786, %783
  %788 = inttoptr i64 %656 to i16*
  %789 = getelementptr inbounds i16, i16* %788, i64 -1
  br label %790

790:                                              ; preds = %787, %786, %786, %786, %786, %786, %777, %749, %745, %655
  %791 = phi i16* [ %657, %655 ], [ %789, %787 ], [ %657, %777 ], [ %746, %745 ], [ %657, %749 ], [ %657, %786 ], [ %657, %786 ], [ %657, %786 ], [ %657, %786 ], [ %657, %786 ]
  %792 = phi i64 [ %658, %655 ], [ %656, %787 ], [ %658, %777 ], [ %748, %745 ], [ %658, %749 ], [ %658, %786 ], [ %658, %786 ], [ %658, %786 ], [ %658, %786 ], [ %658, %786 ]
  %793 = phi i32 [ %659, %655 ], [ 0, %787 ], [ %780, %777 ], [ 2, %745 ], [ %751, %749 ], [ 2, %786 ], [ 2, %786 ], [ 2, %786 ], [ 2, %786 ], [ 2, %786 ]
  %794 = getelementptr inbounds i16, i16* %791, i64 1
  %795 = ptrtoint i16* %794 to i64
  br label %655

796:                                              ; preds = %781, %776, %754, %713, %684, %662
  %797 = phi i64 [ %656, %776 ], [ %656, %754 ], [ %716, %713 ], [ %656, %684 ], [ %656, %662 ], [ %656, %781 ]
  %798 = call fastcc zeroext i1 @_ZN5blinkL16ParseDescriptorsERKN3WTF6StringERNS0_6VectorINS_15DescriptorTokenELj0ENS0_18PartitionAllocatorEEERNS_23DescriptorParsingResultEPNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::Vector.1076"* nonnull dereferenceable(16) %21, %"class.blink::DescriptorParsingResult"* nonnull dereferenceable(12) %20, %"class.blink::Document"* %2) #11
  br i1 %798, label %891, label %799

799:                                              ; preds = %796
  br i1 %550, label %995, label %800

800:                                              ; preds = %799
  %801 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %552, align 8
  %802 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %801, i64 3
  %803 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %802, align 8
  call void %803(%"class.blink::UseCounter"* nonnull %551, i32 573) #11
  %804 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %2) #11
  %805 = icmp eq %"class.blink::LocalFrame"* %804, null
  br i1 %805, label %985, label %806

806:                                              ; preds = %800
  %807 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %2) #11
  %808 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %807, i64 0, i32 16, i32 0, i32 0
  %809 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %808, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %553) #11
  store i32 8, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %554) #11
  store i32 2, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %555) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %556) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i64 25) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %557) #11
  %810 = sub i64 %614, %596
  %811 = lshr exact i64 %810, 1
  %812 = trunc i64 %811 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %26, i16* %597, i32 %812) #11
  %813 = call %"class.WTF::StringImpl"* @_ZN5blink9JSONValue11QuoteStringERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %26) #11
  %814 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.WTF::StringImpl"* %813) #11
  %815 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %814, 0
  store %"class.WTF::StringImpl"* %815, %"class.WTF::StringImpl"** %558, align 8
  %816 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %814, 1
  store %"class.WTF::StringImpl"* %816, %"class.WTF::StringImpl"** %559, align 8
  %817 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %22, i32* nonnull dereferenceable(4) %23, %"class.WTF::StringAppend"* nonnull dereferenceable(16) %24) #11
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %809, %"class.blink::ConsoleMessage"* %817, i1 zeroext false) #11
  %818 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %819 = icmp eq %"class.WTF::StringImpl"* %818, null
  br i1 %819, label %833, label %820

820:                                              ; preds = %806
  %821 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %822 = load atomic i32, i32* %821 monotonic, align 4
  %823 = and i32 %822, 2
  %824 = icmp eq i32 %823, 0
  %825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 0
  %826 = load i32, i32* %825, align 4
  br i1 %824, label %827, label %829

827:                                              ; preds = %820
  %828 = add i32 %826, -1
  store i32 %828, i32* %825, align 4
  br label %829

829:                                              ; preds = %827, %820
  %830 = phi i32 [ %828, %827 ], [ %826, %820 ]
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %833

832:                                              ; preds = %829
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %818) #11
  br label %833

833:                                              ; preds = %832, %829, %806
  %834 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %558, align 8
  %835 = icmp eq %"class.WTF::StringImpl"* %834, null
  br i1 %835, label %849, label %836

836:                                              ; preds = %833
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %834, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %838 = load atomic i32, i32* %837 monotonic, align 4
  %839 = and i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %834, i64 0, i32 0
  %842 = load i32, i32* %841, align 4
  br i1 %840, label %843, label %845

843:                                              ; preds = %836
  %844 = add i32 %842, -1
  store i32 %844, i32* %841, align 4
  br label %845

845:                                              ; preds = %843, %836
  %846 = phi i32 [ %844, %843 ], [ %842, %836 ]
  %847 = icmp eq i32 %846, 0
  br i1 %847, label %848, label %849

848:                                              ; preds = %845
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %834) #11
  br label %849

849:                                              ; preds = %848, %845, %833
  %850 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %851 = icmp eq %"class.WTF::StringImpl"* %850, null
  br i1 %851, label %865, label %852

852:                                              ; preds = %849
  %853 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %850, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %854 = load atomic i32, i32* %853 monotonic, align 4
  %855 = and i32 %854, 2
  %856 = icmp eq i32 %855, 0
  %857 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %850, i64 0, i32 0
  %858 = load i32, i32* %857, align 4
  br i1 %856, label %859, label %861

859:                                              ; preds = %852
  %860 = add i32 %858, -1
  store i32 %860, i32* %857, align 4
  br label %861

861:                                              ; preds = %859, %852
  %862 = phi i32 [ %860, %859 ], [ %858, %852 ]
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %864, label %865

864:                                              ; preds = %861
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %850) #11
  br label %865

865:                                              ; preds = %864, %861, %849
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %557) #11
  %866 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %561, align 8
  %867 = icmp eq %"class.WTF::StringImpl"* %866, null
  br i1 %867, label %881, label %868

868:                                              ; preds = %865
  %869 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %866, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %870 = load atomic i32, i32* %869 monotonic, align 4
  %871 = and i32 %870, 2
  %872 = icmp eq i32 %871, 0
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %866, i64 0, i32 0
  %874 = load i32, i32* %873, align 4
  br i1 %872, label %875, label %877

875:                                              ; preds = %868
  %876 = add i32 %874, -1
  store i32 %876, i32* %873, align 4
  br label %877

877:                                              ; preds = %875, %868
  %878 = phi i32 [ %876, %875 ], [ %874, %868 ]
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %880, label %881

880:                                              ; preds = %877
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %866) #11
  br label %881

881:                                              ; preds = %880, %877, %865
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %556) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %555) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %554) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %553) #11
  %882 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %883 = icmp eq %"struct.blink::DescriptorToken"* %882, null
  %884 = bitcast %"struct.blink::DescriptorToken"* %882 to i8*
  br i1 %883, label %890, label %885, !prof !2

885:                                              ; preds = %881
  %886 = load i32, i32* %532, align 4
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %889, label %888, !prof !3

888:                                              ; preds = %885
  store i32 0, i32* %532, align 4
  br label %889

889:                                              ; preds = %888, %885
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %884) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %530, align 8
  br label %890

890:                                              ; preds = %889, %881
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #11
  br label %1005

891:                                              ; preds = %796
  %892 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %893 = icmp eq %"struct.blink::DescriptorToken"* %892, null
  %894 = bitcast %"struct.blink::DescriptorToken"* %892 to i8*
  br i1 %893, label %900, label %895, !prof !2

895:                                              ; preds = %891
  %896 = load i32, i32* %532, align 4
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %899, label %898, !prof !3

898:                                              ; preds = %895
  store i32 0, i32* %532, align 4
  br label %899

899:                                              ; preds = %898, %895
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %894) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %530, align 8
  br label %900

900:                                              ; preds = %899, %891
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #11
  br label %901

901:                                              ; preds = %900, %628
  %902 = phi i64 [ %614, %628 ], [ %797, %900 ]
  %903 = phi i64 [ %630, %628 ], [ %614, %900 ]
  %904 = sub i64 %596, %520
  %905 = lshr exact i64 %904, 1
  %906 = sub i64 %903, %596
  %907 = lshr exact i64 %906, 1
  %908 = trunc i64 %907 to i32
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %562) #11
  %909 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store %"class.WTF::StringImpl"* %909, %"class.WTF::StringImpl"** %563, align 8
  %910 = icmp eq %"class.WTF::StringImpl"* %909, null
  br i1 %910, label %945, label %911

911:                                              ; preds = %901
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load atomic i32, i32* %912 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %930

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 0
  %918 = load i32, i32* %917, align 4
  %919 = zext i32 %918 to i33
  %920 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %919, i33 1) #11
  %921 = extractvalue { i33, i1 } %920, 1
  %922 = extractvalue { i33, i1 } %920, 0
  %923 = icmp slt i33 %922, 0
  %924 = or i1 %921, %923
  br i1 %924, label %925, label %926, !prof !3

925:                                              ; preds = %916
  call void @llvm.trap() #11
  unreachable

926:                                              ; preds = %916
  %927 = trunc i33 %922 to i32
  store i32 %927, i32* %917, align 4
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %945, label %930

930:                                              ; preds = %926, %911
  %931 = phi %"class.WTF::StringImpl"* [ %928, %926 ], [ %909, %911 ]
  store i32 %908, i32* %565, align 8
  store %"class.WTF::StringImpl"* %931, %"class.WTF::StringImpl"** %566, align 8
  %932 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %933 = load atomic i32, i32* %932 monotonic, align 4
  %934 = and i32 %933, 1
  %935 = icmp eq i32 %934, 0
  %936 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 1
  br i1 %935, label %941, label %937

937:                                              ; preds = %930
  %938 = bitcast %"class.WTF::StringImpl"* %936 to i8*
  %939 = and i64 %905, 4294967295
  %940 = getelementptr inbounds i8, i8* %938, i64 %939
  store i8* %940, i8** %567, align 8
  br label %947

941:                                              ; preds = %930
  %942 = bitcast %"class.WTF::StringImpl"* %936 to i16*
  %943 = and i64 %905, 4294967295
  %944 = getelementptr inbounds i16, i16* %942, i64 %943
  store i16* %944, i16** %568, align 8
  br label %947

945:                                              ; preds = %926, %901
  store i32 0, i32* %565, align 8
  store i8* null, i8** %567, align 8
  %946 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %946, i64* %576, align 8
  br label %947

947:                                              ; preds = %945, %941, %937
  %948 = load float, float* %526, align 4
  %949 = fcmp oge float %948, 0.000000e+00
  %950 = select i1 %949, float %948, float -1.000000e+00
  store float %950, float* %569, align 8
  %951 = load i32, i32* %527, align 4
  %952 = icmp sgt i32 %951, -1
  %953 = select i1 %952, i32 %951, i32 -1
  store i32 %953, i32* %570, align 4
  store i32 0, i32* %571, align 8
  %954 = load i32, i32* %572, align 4
  %955 = load i32, i32* %573, align 8
  %956 = icmp eq i32 %954, %955
  br i1 %956, label %967, label %957, !prof !3

957:                                              ; preds = %947
  %958 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %574, align 8
  %959 = zext i32 %954 to i64
  %960 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %958, i64 %959
  %961 = load i64, i64* %575, align 8
  %962 = bitcast %"class.blink::ImageCandidate"* %960 to i64*
  store i64 %961, i64* %962, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %563, align 8
  %963 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %958, i64 %959, i32 1
  %964 = bitcast %"class.WTF::StringView"* %963 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %964, i8* align 8 %577, i64 36, i1 false) #11
  %965 = load i32, i32* %572, align 4
  %966 = add i32 %965, 1
  store i32 %966, i32* %572, align 4
  br label %968

967:                                              ; preds = %947
  call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1051"* %1, %"class.blink::ImageCandidate"* nonnull dereferenceable(48) %27) #11
  br label %968

968:                                              ; preds = %967, %957
  %969 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %563, align 8
  %970 = icmp eq %"class.WTF::StringImpl"* %969, null
  br i1 %970, label %984, label %971

971:                                              ; preds = %968
  %972 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %969, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %973 = load atomic i32, i32* %972 monotonic, align 4
  %974 = and i32 %973, 2
  %975 = icmp eq i32 %974, 0
  %976 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %969, i64 0, i32 0
  %977 = load i32, i32* %976, align 4
  br i1 %975, label %978, label %980

978:                                              ; preds = %971
  %979 = add i32 %977, -1
  store i32 %979, i32* %976, align 4
  br label %980

980:                                              ; preds = %978, %971
  %981 = phi i32 [ %979, %978 ], [ %977, %971 ]
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %983, label %984

983:                                              ; preds = %980
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %969) #11
  br label %984

984:                                              ; preds = %983, %980, %968
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %562) #11
  br label %1005

985:                                              ; preds = %800
  %986 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %987 = icmp eq %"struct.blink::DescriptorToken"* %986, null
  %988 = bitcast %"struct.blink::DescriptorToken"* %986 to i8*
  br i1 %987, label %994, label %989, !prof !2

989:                                              ; preds = %985
  %990 = load i32, i32* %532, align 4
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %993, label %992, !prof !3

992:                                              ; preds = %989
  store i32 0, i32* %532, align 4
  br label %993

993:                                              ; preds = %992, %989
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %988) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %530, align 8
  br label %994

994:                                              ; preds = %993, %985
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #11
  br label %1005

995:                                              ; preds = %799
  %996 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %530, align 8
  %997 = icmp eq %"struct.blink::DescriptorToken"* %996, null
  %998 = bitcast %"struct.blink::DescriptorToken"* %996 to i8*
  br i1 %997, label %1004, label %999, !prof !2

999:                                              ; preds = %995
  %1000 = load i32, i32* %532, align 4
  %1001 = icmp eq i32 %1000, 0
  br i1 %1001, label %1003, label %1002, !prof !3

1002:                                             ; preds = %999
  store i32 0, i32* %532, align 4
  br label %1003

1003:                                             ; preds = %1002, %999
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %998) #11
  store %"struct.blink::DescriptorToken"* null, %"struct.blink::DescriptorToken"** %530, align 8
  br label %1004

1004:                                             ; preds = %1003, %995
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %529) #11
  br label %1005

1005:                                             ; preds = %1004, %994, %984, %890, %628
  %1006 = phi i64 [ %614, %628 ], [ %902, %984 ], [ %797, %1004 ], [ %797, %994 ], [ %797, %890 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %525) #11
  %1007 = inttoptr i64 %1006 to i16*
  %1008 = icmp ugt i16* %522, %1007
  br i1 %1008, label %590, label %1009

1009:                                             ; preds = %512, %114, %1005, %595, %516, %37, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL22PickBestImageCandidateEffRN3WTF6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.blink::ImageCandidate"* noalias nocapture sret, float, float, %"class.WTF::Vector.1051"* nocapture readonly dereferenceable(16), %"class.blink::Document"*) unnamed_addr #0 {
  %6 = alloca i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::Vector.1720", align 8
  %13 = alloca %"class.blink::ImageCandidate"*, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %3, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 1
  store i8* null, i8** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %23 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 3
  store i32 -1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 4
  store i32 0, i32* %26, align 8
  br label %349

27:                                               ; preds = %5
  %28 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_srcset_max_density_enabled_E, align 1, !range !4
  %29 = icmp ne i8 %28, 0
  %30 = fcmp ogt float %1, 0x40019999A0000000
  %31 = and i1 %30, %29
  %32 = select i1 %31, float 0x40019999A0000000, float %1
  %33 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %33, align 8
  %35 = zext i32 %15 to i64
  %36 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %34, i64 %35
  br label %69

37:                                               ; preds = %84
  %38 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %33, align 8
  %39 = load i32, i32* %14, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %38, i64 %40
  %42 = bitcast i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  store i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)* @_ZN5blinkL16CompareByDensityERKNS_14ImageCandidateES2_, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %6, align 8
  %43 = icmp eq i32 %39, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37, %49
  %45 = phi i64 [ %50, %49 ], [ %40, %37 ]
  %46 = mul i64 %45, 48
  %47 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %46, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = lshr i64 %45, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %44

52:                                               ; preds = %49, %37
  call void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"* %38, %"class.blink::ImageCandidate"* %41, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** nonnull dereferenceable(8) %6, i64 %40, %"class.blink::ImageCandidate"* null, i64 0) #11
  br label %55

53:                                               ; preds = %44
  %54 = bitcast i8* %47 to %"class.blink::ImageCandidate"*
  call void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"* %38, %"class.blink::ImageCandidate"* %41, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** nonnull dereferenceable(8) %6, i64 %40, %"class.blink::ImageCandidate"* nonnull %54, i64 %45) #11
  call void @_ZdlPv(i8* nonnull %47) #12
  br label %55

55:                                               ; preds = %52, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %56 = bitcast %"class.WTF::Vector.1720"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %12, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %12, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %12, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #11
  %60 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %33, align 8
  %61 = load i32, i32* %14, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %60, i64 %62
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %88, label %65

65:                                               ; preds = %55
  %66 = and i8 %85, 1
  %67 = icmp eq i8 %66, 0
  %68 = bitcast %"class.blink::ImageCandidate"** %13 to i8*
  br label %90

69:                                               ; preds = %27, %84
  %70 = phi %"class.blink::ImageCandidate"* [ %86, %84 ], [ %34, %27 ]
  %71 = phi i8 [ %85, %84 ], [ 0, %27 ]
  %72 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %69
  %76 = sitofp i32 %73 to float
  %77 = fdiv float %76, %2
  %78 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 2
  store float %77, float* %78, align 8
  br label %84

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 2
  %81 = load float, float* %80, align 8
  %82 = fcmp olt float %81, 0.000000e+00
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  store float 1.000000e+00, float* %80, align 8
  br label %84

84:                                               ; preds = %79, %83, %75
  %85 = phi i8 [ 1, %75 ], [ %71, %83 ], [ %71, %79 ]
  %86 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 1
  %87 = icmp eq %"class.blink::ImageCandidate"* %86, %36
  br i1 %87, label %37, label %69

88:                                               ; preds = %116, %55
  %89 = call zeroext i1 @_ZN5blink23WebNetworkStateNotifier15SaveDataEnabledEv() #11
  br i1 %89, label %120, label %122

90:                                               ; preds = %65, %116
  %91 = phi %"class.blink::ImageCandidate"* [ %60, %65 ], [ %118, %116 ]
  %92 = phi float [ -1.000000e+00, %65 ], [ %117, %116 ]
  %93 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %91, i64 0, i32 2
  %94 = load float, float* %93, align 8
  %95 = fcmp une float %94, %92
  br i1 %95, label %96, label %116

96:                                               ; preds = %90
  br i1 %67, label %101, label %97

97:                                               ; preds = %96
  %98 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %91, i64 0, i32 4
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %116, label %101

101:                                              ; preds = %96, %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #11
  store %"class.blink::ImageCandidate"* %91, %"class.blink::ImageCandidate"** %13, align 8
  %102 = load i32, i32* %59, align 4
  %103 = load i32, i32* %58, align 8
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %113, label %105, !prof !3

105:                                              ; preds = %101
  %106 = ptrtoint %"class.blink::ImageCandidate"* %91 to i64
  %107 = load %"class.blink::ImageCandidate"**, %"class.blink::ImageCandidate"*** %57, align 8
  %108 = zext i32 %102 to i64
  %109 = getelementptr inbounds %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %107, i64 %108
  %110 = bitcast %"class.blink::ImageCandidate"** %109 to i64*
  store i64 %106, i64* %110, align 8
  %111 = load i32, i32* %59, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %59, align 4
  br label %114

113:                                              ; preds = %101
  call void @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1720"* nonnull %12, %"class.blink::ImageCandidate"** nonnull dereferenceable(8) %13) #11
  br label %114

114:                                              ; preds = %105, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #11
  %115 = load float, float* %93, align 8
  br label %116

116:                                              ; preds = %114, %97, %90
  %117 = phi float [ %115, %114 ], [ %94, %97 ], [ %94, %90 ]
  %118 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %91, i64 1
  %119 = icmp eq %"class.blink::ImageCandidate"* %118, %63
  br i1 %119, label %88, label %90

120:                                              ; preds = %88
  %121 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features18kSaveDataImgSrcsetE) #11
  br i1 %121, label %148, label %122

122:                                              ; preds = %120, %88
  br label %123

123:                                              ; preds = %122, %128
  %124 = phi i32 [ %129, %128 ], [ 0, %122 ]
  %125 = load i32, i32* %59, align 4
  %126 = add i32 %125, -1
  %127 = icmp ult i32 %124, %126
  br i1 %127, label %128, label %148

128:                                              ; preds = %123
  %129 = add nuw i32 %124, 1
  %130 = call dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"* nonnull %12, i32 %129) #11
  %131 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %131, i64 0, i32 2
  %133 = load float, float* %132, align 8
  %134 = fcmp olt float %133, %32
  br i1 %134, label %123, label %135

135:                                              ; preds = %128
  %136 = call dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"* nonnull %12, i32 %124) #11
  %137 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %137, i64 0, i32 2
  %139 = load float, float* %138, align 8
  %140 = fmul float %133, %139
  %141 = call float @sqrtf(float %140) #11
  %142 = fcmp ugt float %32, 1.000000e+00
  %143 = fcmp uge float %139, %32
  %144 = or i1 %142, %143
  %145 = fcmp ugt float %141, %32
  %146 = and i1 %144, %145
  %147 = select i1 %146, i32 %124, i32 %129
  br label %148

148:                                              ; preds = %123, %135, %120
  %149 = phi i32 [ 0, %120 ], [ %147, %135 ], [ %124, %123 ]
  %150 = icmp eq %"class.blink::Document"* %4, null
  br i1 %150, label %295, label %151

151:                                              ; preds = %148
  %152 = load i32, i32* %59, align 4
  %153 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  %154 = bitcast %"class.WTF::String"* %9 to i8*
  %155 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  %156 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %11 to i8*
  %160 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 14, i32 0, i32 0
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %162 = bitcast %"class.WTF::StringView"* %7 to i8*
  %163 = bitcast %"class.WTF::StringView"* %7 to i64*
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  br label %166

166:                                              ; preds = %291, %151
  %167 = phi i32 [ undef, %151 ], [ %292, %291 ]
  %168 = phi i32 [ %152, %151 ], [ %169, %291 ]
  %169 = add i32 %168, -1
  %170 = icmp ugt i32 %169, %149
  br i1 %170, label %171, label %295

171:                                              ; preds = %166
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %153) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %153, i8 -86, i64 112, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #11
  %172 = call dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"* nonnull %12, i32 %169) #11
  %173 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %173, i64 0, i32 1
  %175 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* %174) #11
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %213, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 acquire, align 4
  %180 = and i32 %179, 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %198, label %182

182:                                              ; preds = %177
  %183 = load atomic i32, i32* %178 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %200

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #11
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !3

195:                                              ; preds = %186
  call void @llvm.trap() #11
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %200

198:                                              ; preds = %177
  %199 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %175) #11
  br label %200

200:                                              ; preds = %198, %196, %182
  %201 = phi %"class.WTF::StringImpl"* [ %175, %196 ], [ %175, %182 ], [ %199, %198 ]
  %202 = load atomic i32, i32* %178 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #11
  br label %213

213:                                              ; preds = %212, %209, %171
  %214 = phi %"class.WTF::StringImpl"* [ %201, %209 ], [ %201, %212 ], [ null, %171 ]
  store %"class.WTF::StringImpl"* %214, %"class.WTF::StringImpl"** %156, align 8
  %215 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %157) #11
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %158, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %8, %"class.blink::Document"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %9) #11
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #11
  br label %231

231:                                              ; preds = %230, %227, %213
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #11
  br label %247

247:                                              ; preds = %246, %243, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #11
  %248 = call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #11
  %249 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %160, align 8
  %250 = call %"class.WTF::StringImpl"* @_ZNK5blink15ResourceFetcher18GetCacheIdentifierERKNS_4KURLE(%"class.blink::ResourceFetcher"* %249, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #11
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %161, align 8
  %251 = call %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"* %248, %"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.WTF::String"* nonnull dereferenceable(8) %11) #11
  %252 = icmp eq %"class.blink::Resource"* %251, null
  br i1 %252, label %253, label %274

253:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  %254 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %254, i64* %163, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i8** %164, align 8
  store i32 4, i32* %165, align 8
  %255 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %8, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  %256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %256, null
  br i1 %257, label %271, label %258

258:                                              ; preds = %253
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %256, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  br i1 %262, label %265, label %267

265:                                              ; preds = %258
  %266 = add i32 %264, -1
  store i32 %266, i32* %263, align 4
  br label %267

267:                                              ; preds = %265, %258
  %268 = phi i32 [ %266, %265 ], [ %264, %258 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %256) #11
  br label %271

271:                                              ; preds = %270, %267, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  %272 = select i1 %255, i32 %169, i32 %167
  %273 = zext i1 %255 to i32
  br label %291

274:                                              ; preds = %247
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #11
  br label %290

290:                                              ; preds = %289, %286, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  br label %291

291:                                              ; preds = %290, %271
  %292 = phi i32 [ %169, %290 ], [ %272, %271 ]
  %293 = phi i32 [ 1, %290 ], [ %273, %271 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %153) #11
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %166, label %295

295:                                              ; preds = %166, %291, %148
  %296 = phi i32 [ %149, %148 ], [ %292, %291 ], [ %149, %166 ]
  %297 = call dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"* nonnull %12, i32 %296) #11
  %298 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %298, i64 0, i32 2
  %300 = load float, float* %299, align 8
  br label %301

301:                                              ; preds = %304, %295
  %302 = phi i32 [ %296, %295 ], [ %305, %304 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %311, label %304

304:                                              ; preds = %301
  %305 = add i32 %302, -1
  %306 = call dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"* nonnull %12, i32 %305) #11
  %307 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %306, align 8
  %308 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %307, i64 0, i32 2
  %309 = load float, float* %308, align 8
  %310 = fcmp oeq float %309, %300
  br i1 %310, label %301, label %311

311:                                              ; preds = %301, %304
  %312 = call dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"* nonnull %12, i32 %302) #11
  %313 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %313, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %316, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %317, label %335, label %318

318:                                              ; preds = %311
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %335

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i33
  %327 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %326, i33 1) #11
  %328 = extractvalue { i33, i1 } %327, 1
  %329 = extractvalue { i33, i1 } %327, 0
  %330 = icmp slt i33 %329, 0
  %331 = or i1 %328, %330
  br i1 %331, label %332, label %333, !prof !3

332:                                              ; preds = %323
  call void @llvm.trap() #11
  unreachable

333:                                              ; preds = %323
  %334 = trunc i33 %329 to i32
  store i32 %334, i32* %324, align 4
  br label %335

335:                                              ; preds = %311, %318, %333
  %336 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %337 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %313, i64 0, i32 1
  %338 = bitcast %"class.WTF::StringView"* %336 to i8*
  %339 = bitcast %"class.WTF::StringView"* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %338, i8* align 8 %339, i64 36, i1 false) #11
  %340 = load %"class.blink::ImageCandidate"**, %"class.blink::ImageCandidate"*** %57, align 8
  %341 = icmp eq %"class.blink::ImageCandidate"** %340, null
  %342 = bitcast %"class.blink::ImageCandidate"** %340 to i8*
  br i1 %341, label %348, label %343, !prof !2

343:                                              ; preds = %335
  %344 = load i32, i32* %59, align 4
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %347, label %346, !prof !3

346:                                              ; preds = %343
  store i32 0, i32* %59, align 4
  br label %347

347:                                              ; preds = %346, %343
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %342) #11
  store %"class.blink::ImageCandidate"** null, %"class.blink::ImageCandidate"*** %57, align 8
  br label %348

348:                                              ; preds = %335, %347
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #11
  br label %349

349:                                              ; preds = %348, %17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringES3_PNS_8DocumentE(%"class.blink::ImageCandidate"* noalias nocapture sret, float, float, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 {
  %7 = alloca %"class.WTF::Vector.1051", align 8
  %8 = alloca %"class.blink::ImageCandidate", align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %69

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %26

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  store float 1.000000e+00, float* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 3
  store i32 -1, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 4
  store i32 0, i32* %25, align 8
  br label %196

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  br label %51

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %36
  tail call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  %50 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  br i1 %49, label %60, label %51

51:                                               ; preds = %34, %46
  %52 = phi i32* [ %35, %34 ], [ %50, %46 ]
  %53 = phi %"class.WTF::StringImpl"* [ %14, %34 ], [ %48, %46 ]
  store i32 %28, i32* %52, align 8
  %54 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %58 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %59, align 8
  br label %65

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  store i32 0, i32* %50, align 8
  %62 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 1
  store i8* null, i8** %62, align 8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %64 = bitcast %"class.WTF::StringView"* %61 to i64*
  store i64 %63, i64* %64, align 8
  br label %65

65:                                               ; preds = %51, %60
  %66 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  store float -1.000000e+00, float* %66, align 8
  %67 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 3
  store i32 -1, i32* %67, align 4
  %68 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 4
  store i32 1, i32* %68, align 8
  br label %196

69:                                               ; preds = %6
  %70 = bitcast %"class.WTF::Vector.1051"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %7, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %7, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 16, i1 false) #11
  call fastcc void @_ZN5blinkL39ParseImageCandidatesFromSrcsetAttributeERKN3WTF6StringERNS0_6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::Vector.1051"* nonnull dereferenceable(16) %7, %"class.blink::Document"* %5)
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %159, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %159, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.blink::ImageCandidate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1, i32 2
  br label %107

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #11
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %91
  call void @llvm.trap() #11
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %104 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1
  %105 = icmp eq %"class.WTF::StringImpl"* %103, null
  %106 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1, i32 2
  br i1 %105, label %117, label %107

107:                                              ; preds = %88, %101
  %108 = phi i32* [ %90, %88 ], [ %106, %101 ]
  %109 = phi %"class.WTF::StringView"* [ %89, %88 ], [ %104, %101 ]
  %110 = phi %"class.WTF::StringImpl"* [ %75, %88 ], [ %103, %101 ]
  store i32 %79, i32* %108, align 8
  %111 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1, i32 0
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1
  %115 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1, i32 1
  %116 = bitcast i8** %115 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %116, align 8
  br label %121

117:                                              ; preds = %101
  store i32 0, i32* %106, align 8
  %118 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 1, i32 1
  store i8* null, i8** %118, align 8
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %120 = bitcast %"class.WTF::StringView"* %104 to i64*
  store i64 %119, i64* %120, align 8
  br label %121

121:                                              ; preds = %107, %117
  %122 = phi %"class.WTF::StringView"* [ %109, %107 ], [ %104, %117 ]
  %123 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 2
  store float -1.000000e+00, float* %123, align 8
  %124 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 3
  store i32 -1, i32* %124, align 4
  %125 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 0, i32 4
  store i32 1, i32* %125, align 8
  %126 = load i32, i32* %73, align 4
  %127 = load i32, i32* %72, align 8
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %141, label %129, !prof !3

129:                                              ; preds = %121
  %130 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %71, align 8
  %131 = zext i32 %126 to i64
  %132 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %130, i64 %131
  %133 = bitcast %"class.blink::ImageCandidate"* %8 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.blink::ImageCandidate"* %132 to i64*
  store i64 %134, i64* %135, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %136 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %130, i64 %131, i32 1
  %137 = bitcast %"class.WTF::StringView"* %136 to i8*
  %138 = bitcast %"class.WTF::StringView"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 36, i1 false) #11
  %139 = load i32, i32* %73, align 4
  %140 = add i32 %139, 1
  store i32 %140, i32* %73, align 4
  br label %142

141:                                              ; preds = %121
  call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1051"* nonnull %7, %"class.blink::ImageCandidate"* nonnull dereferenceable(48) %8) #11
  br label %142

142:                                              ; preds = %129, %141
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #11
  br label %158

158:                                              ; preds = %142, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %82) #11
  br label %159

159:                                              ; preds = %69, %158, %77
  call fastcc void @_ZN5blinkL22PickBestImageCandidateEffRN3WTF6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.blink::ImageCandidate"* sret %0, float %1, float %2, %"class.WTF::Vector.1051"* nonnull dereferenceable(16) %7, %"class.blink::Document"* %5)
  %160 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %71, align 8
  %161 = icmp eq %"class.blink::ImageCandidate"* %160, null
  br i1 %161, label %195, label %162, !prof !2

162:                                              ; preds = %159
  %163 = bitcast %"class.blink::ImageCandidate"* %160 to i8*
  %164 = load i32, i32* %73, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %193, label %166, !prof !3

166:                                              ; preds = %162
  %167 = zext i32 %164 to i64
  %168 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %160, i64 %167
  br label %169

169:                                              ; preds = %187, %166
  %170 = phi %"class.blink::ImageCandidate"* [ %188, %187 ], [ %160, %166 ]
  %171 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #11
  br label %187

187:                                              ; preds = %186, %183, %169
  %188 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %170, i64 1
  %189 = icmp eq %"class.blink::ImageCandidate"* %188, %168
  br i1 %189, label %190, label %169

190:                                              ; preds = %187
  store i32 0, i32* %73, align 4
  %191 = bitcast %"class.WTF::Vector.1051"* %7 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %190, %162
  %194 = phi i8* [ %192, %190 ], [ %163, %162 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %194) #11
  store %"class.blink::ImageCandidate"* null, %"class.blink::ImageCandidate"** %71, align 8
  br label %195

195:                                              ; preds = %159, %193
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #11
  br label %196

196:                                              ; preds = %195, %65, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink31BestFitSourceForImageAttributesEffRKN3WTF6StringERNS_14ImageCandidateE(float, float, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ImageCandidate"* dereferenceable(48)) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::Vector.1051", align 8
  %6 = alloca %"class.blink::ImageCandidate", align 8
  %7 = alloca %"class.blink::ImageCandidate", align 8
  %8 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %3, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %174, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %174

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %174

32:                                               ; preds = %4
  %33 = bitcast %"class.WTF::Vector.1051"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %5, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #11
  call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1051"* nonnull %5, %"class.blink::ImageCandidate"* dereferenceable(48) %3) #11
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %117, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %117, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::ImageCandidate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #11
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  call void @llvm.trap() #11
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %45
  %65 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  %68 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1, i32 2
  br i1 %67, label %76, label %69

69:                                               ; preds = %64
  store i32 %43, i32* %68, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %65, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %74 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1, i32 1
  %75 = bitcast i8** %74 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %75, align 8
  br label %80

76:                                               ; preds = %64
  store i32 0, i32* %68, align 8
  %77 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1, i32 1
  store i8* null, i8** %77, align 8
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %79 = bitcast %"class.WTF::StringView"* %65 to i64*
  store i64 %78, i64* %79, align 8
  br label %80

80:                                               ; preds = %69, %76
  %81 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 2
  store float -1.000000e+00, float* %81, align 8
  %82 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 3
  store i32 -1, i32* %82, align 4
  %83 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 4
  store i32 1, i32* %83, align 8
  %84 = load i32, i32* %36, align 4
  %85 = load i32, i32* %35, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %99, label %87, !prof !3

87:                                               ; preds = %80
  %88 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %34, align 8
  %89 = zext i32 %84 to i64
  %90 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %88, i64 %89
  %91 = bitcast %"class.blink::ImageCandidate"* %6 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.blink::ImageCandidate"* %90 to i64*
  store i64 %92, i64* %93, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %94 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %88, i64 %89, i32 1
  %95 = bitcast %"class.WTF::StringView"* %94 to i8*
  %96 = bitcast %"class.WTF::StringView"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 36, i1 false) #11
  %97 = load i32, i32* %36, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %36, align 4
  br label %100

99:                                               ; preds = %80
  call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1051"* nonnull %5, %"class.blink::ImageCandidate"* nonnull dereferenceable(48) %6) #11
  br label %100

100:                                              ; preds = %87, %99
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #11
  br label %116

116:                                              ; preds = %100, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %46) #11
  br label %117

117:                                              ; preds = %32, %116, %41
  %118 = bitcast %"class.blink::ImageCandidate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %118) #11
  call fastcc void @_ZN5blinkL22PickBestImageCandidateEffRN3WTF6VectorINS_14ImageCandidateELj0ENS0_18PartitionAllocatorEEEPNS_8DocumentE(%"class.blink::ImageCandidate"* nonnull sret %7, float %0, float %1, %"class.WTF::Vector.1051"* nonnull dereferenceable(16) %5, %"class.blink::Document"* null)
  %119 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %7, i64 0, i32 1
  %120 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* %119) #11
  %121 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %7, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #11
  br label %137

137:                                              ; preds = %117, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %118) #11
  %138 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %34, align 8
  %139 = icmp eq %"class.blink::ImageCandidate"* %138, null
  br i1 %139, label %173, label %140, !prof !2

140:                                              ; preds = %137
  %141 = bitcast %"class.blink::ImageCandidate"* %138 to i8*
  %142 = load i32, i32* %36, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %171, label %144, !prof !3

144:                                              ; preds = %140
  %145 = zext i32 %142 to i64
  %146 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %138, i64 %145
  br label %147

147:                                              ; preds = %165, %144
  %148 = phi %"class.blink::ImageCandidate"* [ %166, %165 ], [ %138, %144 ]
  %149 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #11
  br label %165

165:                                              ; preds = %164, %161, %147
  %166 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %148, i64 1
  %167 = icmp eq %"class.blink::ImageCandidate"* %166, %146
  br i1 %167, label %168, label %147

168:                                              ; preds = %165
  store i32 0, i32* %36, align 4
  %169 = bitcast %"class.WTF::Vector.1051"* %5 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %140
  %172 = phi i8* [ %170, %168 ], [ %141, %140 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %172) #11
  store %"class.blink::ImageCandidate"* null, %"class.blink::ImageCandidate"** %34, align 8
  br label %173

173:                                              ; preds = %137, %171
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  br label %174

174:                                              ; preds = %30, %15, %11, %173
  %175 = phi %"class.WTF::StringImpl"* [ %120, %173 ], [ null, %11 ], [ %13, %15 ], [ %13, %30 ]
  ret %"class.WTF::StringImpl"* %175
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL16ParseDescriptorsERKN3WTF6StringERNS0_6VectorINS_15DescriptorTokenELj0ENS0_18PartitionAllocatorEEERNS_23DescriptorParsingResultEPNS_8DocumentE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::Vector.1076"* dereferenceable(16), %"class.blink::DescriptorParsingResult"* dereferenceable(12), %"class.blink::Document"*) unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp eq %"class.WTF::StringImpl"* %24, null
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 1
  br i1 %28, label %169, label %31

31:                                               ; preds = %4
  %32 = bitcast %"class.WTF::StringImpl"* %30 to i8*
  %33 = select i1 %29, i8* null, i8* %32
  %34 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  %41 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %1, i64 0, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %1, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %43, i64 %46
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %158, label %49

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 1
  br label %53

53:                                               ; preds = %151, %49
  %54 = phi %"struct.blink::DescriptorToken"* [ %43, %49 ], [ %152, %151 ]
  %55 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %54, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %151, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %54, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %56, -1
  %62 = add i32 %60, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %33, i64 %63
  %65 = load i8, i8* %64, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  switch i8 %65, label %149 [
    i8 119, label %66
    i8 104, label %99
    i8 120, label %132
  ]

66:                                               ; preds = %58
  %67 = load float, float* %50, align 4
  %68 = fcmp oge float %67, 0.000000e+00
  %69 = load i32, i32* %52, align 4
  %70 = icmp sgt i32 %69, -1
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73

72:                                               ; preds = %66
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0), i64 68) #11
  br label %154

73:                                               ; preds = %66
  %74 = icmp eq i32 %61, 0
  %75 = zext i32 %60 to i64
  br i1 %74, label %89, label %76

76:                                               ; preds = %73
  %77 = zext i32 %61 to i64
  %78 = getelementptr inbounds i8, i8* %33, i64 %75
  br label %81

79:                                               ; preds = %81
  %80 = icmp eq i64 %87, %77
  br i1 %80, label %89, label %81

81:                                               ; preds = %79, %76
  %82 = phi i64 [ 0, %76 ], [ %87, %79 ]
  %83 = getelementptr inbounds i8, i8* %78, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = add i8 %84, -48
  %86 = icmp ult i8 %85, 10
  %87 = add nuw nsw i64 %82, 1
  br i1 %86, label %79, label %88

88:                                               ; preds = %81
  store i8 0, i8* %5, align 1
  br label %98

89:                                               ; preds = %79, %73
  %90 = phi i64 [ 0, %73 ], [ %77, %79 ]
  %91 = getelementptr inbounds i8, i8* %33, i64 %75
  %92 = call i32 @_ZN3WTF15CharactersToIntEPKhmNS_20NumberParsingOptionsEPb(i8* %91, i64 %90, i32 0, i8* nonnull %5) #11
  %93 = load i8, i8* %5, align 1, !range !4
  %94 = icmp eq i8 %93, 0
  %95 = icmp slt i32 %92, 1
  %96 = or i1 %95, %94
  br i1 %96, label %98, label %97

97:                                               ; preds = %89
  store i32 %92, i32* %52, align 4
  br label %150

98:                                               ; preds = %89, %88
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i64 30) #11
  br label %154

99:                                               ; preds = %58
  %100 = load float, float* %50, align 4
  %101 = fcmp oge float %100, 0.000000e+00
  %102 = load i32, i32* %51, align 4
  %103 = icmp sgt i32 %102, -1
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106

105:                                              ; preds = %99
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.7, i64 0, i64 0), i64 68) #11
  br label %154

106:                                              ; preds = %99
  %107 = icmp eq i32 %61, 0
  %108 = zext i32 %60 to i64
  br i1 %107, label %122, label %109

109:                                              ; preds = %106
  %110 = zext i32 %61 to i64
  %111 = getelementptr inbounds i8, i8* %33, i64 %108
  br label %114

112:                                              ; preds = %114
  %113 = icmp eq i64 %120, %110
  br i1 %113, label %122, label %114

114:                                              ; preds = %112, %109
  %115 = phi i64 [ 0, %109 ], [ %120, %112 ]
  %116 = getelementptr inbounds i8, i8* %111, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = add i8 %117, -48
  %119 = icmp ult i8 %118, 10
  %120 = add nuw nsw i64 %115, 1
  br i1 %119, label %112, label %121

121:                                              ; preds = %114
  store i8 0, i8* %5, align 1
  br label %131

122:                                              ; preds = %112, %106
  %123 = phi i64 [ 0, %106 ], [ %110, %112 ]
  %124 = getelementptr inbounds i8, i8* %33, i64 %108
  %125 = call i32 @_ZN3WTF15CharactersToIntEPKhmNS_20NumberParsingOptionsEPb(i8* %124, i64 %123, i32 0, i8* nonnull %5) #11
  %126 = load i8, i8* %5, align 1, !range !4
  %127 = icmp eq i8 %126, 0
  %128 = icmp slt i32 %125, 1
  %129 = or i1 %128, %127
  br i1 %129, label %131, label %130

130:                                              ; preds = %122
  store i32 %125, i32* %51, align 4
  br label %150

131:                                              ; preds = %122, %121
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i64 30) #11
  br label %154

132:                                              ; preds = %58
  %133 = load float, float* %50, align 4
  %134 = fcmp oge float %133, 0.000000e+00
  %135 = load i32, i32* %51, align 4
  %136 = load i32, i32* %52, align 4
  %137 = and i32 %136, %135
  %138 = icmp sgt i32 %137, -1
  %139 = or i1 %134, %138
  br i1 %139, label %140, label %141

140:                                              ; preds = %132
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.9, i64 0, i64 0), i64 72) #11
  br label %154

141:                                              ; preds = %132
  %142 = call float @_ZN5blink15DescriptorToken7ToFloatIhEEfPKT_Rb(%"struct.blink::DescriptorToken"* %54, i8* %33, i8* nonnull dereferenceable(1) %5) #11
  %143 = load i8, i8* %5, align 1, !range !4
  %144 = icmp eq i8 %143, 0
  %145 = fcmp olt float %142, 0.000000e+00
  %146 = or i1 %145, %144
  br i1 %146, label %148, label %147

147:                                              ; preds = %141
  store float %142, float* %50, align 4
  br label %150

148:                                              ; preds = %141
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i64 30) #11
  br label %154

149:                                              ; preds = %58
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i64 29) #11
  br label %154

150:                                              ; preds = %147, %130, %97
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br label %151

151:                                              ; preds = %150, %53
  %152 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %54, i64 1
  %153 = icmp eq %"struct.blink::DescriptorToken"* %152, %47
  br i1 %153, label %158, label %53

154:                                              ; preds = %149, %148, %140, %131, %105, %98, %72
  %155 = phi %"class.WTF::String"* [ %12, %149 ], [ %11, %148 ], [ %10, %140 ], [ %9, %131 ], [ %8, %105 ], [ %7, %98 ], [ %6, %72 ]
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  call fastcc void @_ZN5blinkL11SrcsetErrorEPNS_8DocumentEN3WTF6StringE(%"class.blink::Document"* %3, %"class.WTF::StringImpl"* %157) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  br label %307

158:                                              ; preds = %151, %31
  %159 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, -1
  br i1 %161, label %162, label %307

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %164, -1
  br i1 %165, label %307, label %166

166:                                              ; preds = %162
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), i64 47) #11
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  call fastcc void @_ZN5blinkL11SrcsetErrorEPNS_8DocumentEN3WTF6StringE(%"class.blink::Document"* %3, %"class.WTF::StringImpl"* %168) #11
  br label %307

169:                                              ; preds = %4
  %170 = bitcast %"class.WTF::StringImpl"* %30 to i16*
  %171 = select i1 %29, i16* null, i16* %170
  %172 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #11
  %173 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #11
  %174 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #11
  %175 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #11
  %176 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #11
  %177 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #11
  %178 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #11
  %179 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #11
  %180 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %1, i64 0, i32 0, i32 0, i32 0
  %181 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %180, align 8
  %182 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %1, i64 0, i32 0, i32 0, i32 2
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %181, i64 %184
  %186 = icmp eq i32 %183, 0
  br i1 %186, label %296, label %187

187:                                              ; preds = %169
  %188 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 0
  %189 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 2
  %190 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 1
  br label %191

191:                                              ; preds = %289, %187
  %192 = phi %"struct.blink::DescriptorToken"* [ %181, %187 ], [ %290, %289 ]
  %193 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %192, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %289, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %192, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %194, -1
  %200 = add i32 %198, %199
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i16, i16* %171, i64 %201
  %203 = load i16, i16* %202, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 0, i8* %14, align 1
  switch i16 %203, label %287 [
    i16 119, label %204
    i16 104, label %237
    i16 120, label %270
  ]

204:                                              ; preds = %196
  %205 = load float, float* %188, align 4
  %206 = fcmp oge float %205, 0.000000e+00
  %207 = load i32, i32* %190, align 4
  %208 = icmp sgt i32 %207, -1
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211

210:                                              ; preds = %204
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0), i64 68) #11
  br label %292

211:                                              ; preds = %204
  %212 = icmp eq i32 %199, 0
  %213 = zext i32 %198 to i64
  br i1 %212, label %227, label %214

214:                                              ; preds = %211
  %215 = zext i32 %199 to i64
  %216 = getelementptr inbounds i16, i16* %171, i64 %213
  br label %219

217:                                              ; preds = %219
  %218 = icmp eq i64 %225, %215
  br i1 %218, label %227, label %219

219:                                              ; preds = %217, %214
  %220 = phi i64 [ 0, %214 ], [ %225, %217 ]
  %221 = getelementptr inbounds i16, i16* %216, i64 %220
  %222 = load i16, i16* %221, align 2
  %223 = add i16 %222, -48
  %224 = icmp ult i16 %223, 10
  %225 = add nuw nsw i64 %220, 1
  br i1 %224, label %217, label %226

226:                                              ; preds = %219
  store i8 0, i8* %14, align 1
  br label %236

227:                                              ; preds = %217, %211
  %228 = phi i64 [ 0, %211 ], [ %215, %217 ]
  %229 = getelementptr inbounds i16, i16* %171, i64 %213
  %230 = call i32 @_ZN3WTF15CharactersToIntEPKDsmNS_20NumberParsingOptionsEPb(i16* %229, i64 %228, i32 0, i8* nonnull %14) #11
  %231 = load i8, i8* %14, align 1, !range !4
  %232 = icmp eq i8 %231, 0
  %233 = icmp slt i32 %230, 1
  %234 = or i1 %233, %232
  br i1 %234, label %236, label %235

235:                                              ; preds = %227
  store i32 %230, i32* %190, align 4
  br label %288

236:                                              ; preds = %227, %226
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i64 30) #11
  br label %292

237:                                              ; preds = %196
  %238 = load float, float* %188, align 4
  %239 = fcmp oge float %238, 0.000000e+00
  %240 = load i32, i32* %189, align 4
  %241 = icmp sgt i32 %240, -1
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244

243:                                              ; preds = %237
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.7, i64 0, i64 0), i64 68) #11
  br label %292

244:                                              ; preds = %237
  %245 = icmp eq i32 %199, 0
  %246 = zext i32 %198 to i64
  br i1 %245, label %260, label %247

247:                                              ; preds = %244
  %248 = zext i32 %199 to i64
  %249 = getelementptr inbounds i16, i16* %171, i64 %246
  br label %252

250:                                              ; preds = %252
  %251 = icmp eq i64 %258, %248
  br i1 %251, label %260, label %252

252:                                              ; preds = %250, %247
  %253 = phi i64 [ 0, %247 ], [ %258, %250 ]
  %254 = getelementptr inbounds i16, i16* %249, i64 %253
  %255 = load i16, i16* %254, align 2
  %256 = add i16 %255, -48
  %257 = icmp ult i16 %256, 10
  %258 = add nuw nsw i64 %253, 1
  br i1 %257, label %250, label %259

259:                                              ; preds = %252
  store i8 0, i8* %14, align 1
  br label %269

260:                                              ; preds = %250, %244
  %261 = phi i64 [ 0, %244 ], [ %248, %250 ]
  %262 = getelementptr inbounds i16, i16* %171, i64 %246
  %263 = call i32 @_ZN3WTF15CharactersToIntEPKDsmNS_20NumberParsingOptionsEPb(i16* %262, i64 %261, i32 0, i8* nonnull %14) #11
  %264 = load i8, i8* %14, align 1, !range !4
  %265 = icmp eq i8 %264, 0
  %266 = icmp slt i32 %263, 1
  %267 = or i1 %266, %265
  br i1 %267, label %269, label %268

268:                                              ; preds = %260
  store i32 %263, i32* %189, align 4
  br label %288

269:                                              ; preds = %260, %259
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i64 30) #11
  br label %292

270:                                              ; preds = %196
  %271 = load float, float* %188, align 4
  %272 = fcmp oge float %271, 0.000000e+00
  %273 = load i32, i32* %189, align 4
  %274 = load i32, i32* %190, align 4
  %275 = and i32 %274, %273
  %276 = icmp sgt i32 %275, -1
  %277 = or i1 %272, %276
  br i1 %277, label %278, label %279

278:                                              ; preds = %270
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.9, i64 0, i64 0), i64 72) #11
  br label %292

279:                                              ; preds = %270
  %280 = call float @_ZN5blink15DescriptorToken7ToFloatIDsEEfPKT_Rb(%"struct.blink::DescriptorToken"* %192, i16* %171, i8* nonnull dereferenceable(1) %14) #11
  %281 = load i8, i8* %14, align 1, !range !4
  %282 = icmp eq i8 %281, 0
  %283 = fcmp olt float %280, 0.000000e+00
  %284 = or i1 %283, %282
  br i1 %284, label %286, label %285

285:                                              ; preds = %279
  store float %280, float* %188, align 4
  br label %288

286:                                              ; preds = %279
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i64 30) #11
  br label %292

287:                                              ; preds = %196
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i64 29) #11
  br label %292

288:                                              ; preds = %285, %268, %235
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  br label %289

289:                                              ; preds = %288, %191
  %290 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %192, i64 1
  %291 = icmp eq %"struct.blink::DescriptorToken"* %290, %185
  br i1 %291, label %296, label %191

292:                                              ; preds = %287, %286, %278, %269, %243, %236, %210
  %293 = phi %"class.WTF::String"* [ %21, %287 ], [ %20, %286 ], [ %19, %278 ], [ %18, %269 ], [ %17, %243 ], [ %16, %236 ], [ %15, %210 ]
  %294 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %293, i64 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  call fastcc void @_ZN5blinkL11SrcsetErrorEPNS_8DocumentEN3WTF6StringE(%"class.blink::Document"* %3, %"class.WTF::StringImpl"* %295) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  br label %307

296:                                              ; preds = %289, %169
  %297 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = icmp sgt i32 %298, -1
  br i1 %299, label %300, label %307

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"class.blink::DescriptorParsingResult", %"class.blink::DescriptorParsingResult"* %2, i64 0, i32 1
  %302 = load i32, i32* %301, align 4
  %303 = icmp sgt i32 %302, -1
  br i1 %303, label %307, label %304

304:                                              ; preds = %300
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0), i64 47) #11
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  call fastcc void @_ZN5blinkL11SrcsetErrorEPNS_8DocumentEN3WTF6StringE(%"class.blink::Document"* %3, %"class.WTF::StringImpl"* %306) #11
  br label %307

307:                                              ; preds = %292, %296, %300, %304, %154, %158, %162, %166
  %308 = phi i8* [ %34, %166 ], [ %34, %162 ], [ %34, %158 ], [ %34, %154 ], [ %172, %304 ], [ %172, %300 ], [ %172, %296 ], [ %172, %292 ]
  %309 = phi i8* [ %35, %166 ], [ %35, %162 ], [ %35, %158 ], [ %35, %154 ], [ %173, %304 ], [ %173, %300 ], [ %173, %296 ], [ %173, %292 ]
  %310 = phi i8* [ %36, %166 ], [ %36, %162 ], [ %36, %158 ], [ %36, %154 ], [ %174, %304 ], [ %174, %300 ], [ %174, %296 ], [ %174, %292 ]
  %311 = phi i8* [ %37, %166 ], [ %37, %162 ], [ %37, %158 ], [ %37, %154 ], [ %175, %304 ], [ %175, %300 ], [ %175, %296 ], [ %175, %292 ]
  %312 = phi i8* [ %38, %166 ], [ %38, %162 ], [ %38, %158 ], [ %38, %154 ], [ %176, %304 ], [ %176, %300 ], [ %176, %296 ], [ %176, %292 ]
  %313 = phi i8* [ %39, %166 ], [ %39, %162 ], [ %39, %158 ], [ %39, %154 ], [ %177, %304 ], [ %177, %300 ], [ %177, %296 ], [ %177, %292 ]
  %314 = phi i8* [ %40, %166 ], [ %40, %162 ], [ %40, %158 ], [ %40, %154 ], [ %178, %304 ], [ %178, %300 ], [ %178, %296 ], [ %178, %292 ]
  %315 = phi i8* [ %41, %166 ], [ %41, %162 ], [ %41, %158 ], [ %41, %154 ], [ %179, %304 ], [ %179, %300 ], [ %179, %296 ], [ %179, %292 ]
  %316 = phi i1 [ false, %166 ], [ true, %162 ], [ true, %158 ], [ false, %154 ], [ false, %304 ], [ true, %300 ], [ true, %296 ], [ false, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %313) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %315) #11
  ret i1 %316
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #11
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #11
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #11
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #11
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.WTF::StringImpl"* @_ZN5blink9JSONValue11QuoteStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15DescriptorTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1076"*, %"struct.blink::DescriptorToken"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %6, align 8
  %8 = icmp ugt %"struct.blink::DescriptorToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::DescriptorToken"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::DescriptorToken"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DescriptorTokenEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DescriptorTokenEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1076"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::DescriptorToken"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::DescriptorToken"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::DescriptorToken"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1076"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1076"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::DescriptorToken"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::DescriptorToken"* %1 to i64
  %56 = ptrtoint %"struct.blink::DescriptorToken"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1076", %"class.WTF::Vector.1076"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::DescriptorToken"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DescriptorTokenEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DescriptorTokenEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1076"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::DescriptorToken"*, %"struct.blink::DescriptorToken"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::DescriptorToken"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::DescriptorToken"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.1076"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.1076"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::DescriptorToken"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::DescriptorToken"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::DescriptorToken"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::DescriptorToken"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %100, i64 %103
  %105 = bitcast %"struct.blink::DescriptorToken"* %101 to i64*
  %106 = bitcast %"struct.blink::DescriptorToken"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DescriptorTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL11SrcsetErrorEPNS_8DocumentEN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::StringImpl"*) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = icmp eq %"class.blink::Document"* %0, null
  br i1 %7, label %85, label %8

8:                                                ; preds = %2
  %9 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %0) #11
  %10 = icmp eq %"class.blink::LocalFrame"* %9, null
  br i1 %10, label %85, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %15 = bitcast %union.anon.1692* %14 to i8*
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %18, align 1
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 46, i32* %23, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %24 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %26, label %30

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %27, align 8
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %29 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %28, i64* %29, align 8
  br label %37

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %36, align 8
  br label %37

37:                                               ; preds = %26, %30
  %38 = phi i32 [ %33, %30 ], [ 0, %26 ]
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %38, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  %40 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %0) #11
  %41 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %40, i64 0, i32 16, i32 0, i32 0
  %42 = load %"class.blink::FrameConsole"*, %"class.blink::FrameConsole"** %41, align 8
  %43 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #11
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #11
  %47 = bitcast i8* %46 to %"class.blink::ConsoleMessage"*
  %48 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %47, i32 8, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::SourceLocation"* %48) #11
  %49 = getelementptr inbounds i8, i8* %46, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  call void @_ZN5blink12FrameConsole10AddMessageEPNS_14ConsoleMessageEb(%"class.blink::FrameConsole"* %42, %"class.blink::ConsoleMessage"* %47, i1 zeroext false) #11
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %37
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #11
  br label %68

68:                                               ; preds = %37, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #11
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #11
  br label %84

84:                                               ; preds = %68, %80, %83
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  br label %85

85:                                               ; preds = %8, %2, %84
  %86 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #11
  br label %100

100:                                              ; preds = %85, %96, %99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN5blink15DescriptorToken7ToFloatIhEEfPKT_Rb(%"struct.blink::DescriptorToken"*, i8*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  br i1 %10, label %19, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %1, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 43
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i8 0, i8* %2, align 1
  br label %52

19:                                               ; preds = %3, %14
  %20 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %22 = bitcast %"class.WTF::String"* %5 to i8*
  %23 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %24 = getelementptr inbounds i8, i8* %1, i64 %13
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %5, i8* %24, i32 %9) #11
  %25 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %6) #11
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %19, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %43 = load i32, i32* %21, align 4
  %44 = and i32 %43, -3
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %2, align 1
  br i1 %45, label %47, label %50

47:                                               ; preds = %42
  %48 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %4) #11
  %49 = fptrunc double %48 to float
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi float [ %49, %47 ], [ 0.000000e+00, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %52

52:                                               ; preds = %50, %18
  %53 = phi float [ 0.000000e+00, %18 ], [ %51, %50 ]
  ret float %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #11
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #11
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #4

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare i32 @_ZN3WTF15CharactersToIntEPKhmNS_20NumberParsingOptionsEPb(i8*, i64, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* sret, %"class.WTF::String"* dereferenceable(8), %"class.blink::Decimal"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* sret) local_unnamed_addr #2

declare double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZN5blink15DescriptorToken7ToFloatIDsEEfPKT_Rb(%"struct.blink::DescriptorToken"*, i16*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::Decimal", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::Decimal", align 8
  %7 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"struct.blink::DescriptorToken", %"struct.blink::DescriptorToken"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  br i1 %10, label %19, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i16, i16* %1, i64 %13
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 43
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i8 0, i8* %2, align 1
  br label %52

19:                                               ; preds = %3, %14
  %20 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.blink::Decimal", %"class.blink::Decimal"* %4, i64 0, i32 0, i32 3
  %22 = bitcast %"class.WTF::String"* %5 to i8*
  %23 = bitcast %"class.blink::Decimal"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %24 = getelementptr inbounds i16, i16* %1, i64 %13
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %5, i16* %24, i32 %9) #11
  %25 = bitcast %"class.blink::Decimal"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  call void @_ZN5blink7Decimal3NanEv(%"class.blink::Decimal"* nonnull sret %6) #11
  call void @_ZN5blink27ParseToDecimalForNumberTypeERKN3WTF6StringERKNS_7DecimalE(%"class.blink::Decimal"* nonnull sret %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Decimal"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %19, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %43 = load i32, i32* %21, align 4
  %44 = and i32 %43, -3
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %2, align 1
  br i1 %45, label %47, label %50

47:                                               ; preds = %42
  %48 = call double @_ZNK5blink7Decimal8ToDoubleEv(%"class.blink::Decimal"* nonnull %4) #11
  %49 = fptrunc double %48 to float
  br label %50

50:                                               ; preds = %42, %47
  %51 = phi float [ %49, %47 ], [ 0.000000e+00, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %52

52:                                               ; preds = %50, %18
  %53 = phi float [ 0.000000e+00, %18 ], [ %51, %50 ]
  ret float %53
}

declare i32 @_ZN3WTF15CharactersToIntEPKDsmNS_20NumberParsingOptionsEPb(i16*, i64, i32, i8*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS7_6StringES9_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #11
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #11
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #11
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #11
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #11
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #11
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1719"* nonnull %67, i8* %30) #11
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1719"* nonnull %68, i8* %71) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #11
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #11
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #11
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #11
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #11
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1719"* nonnull %144, i16* %107) #11
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1719"* nonnull %145, i16* %148) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #11
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #11
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #11
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #11
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #11
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %31, i8* %32) #11
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #11
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #11
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %46, i8* %47) #11
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1719"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1719"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #11
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #11
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #11
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #11
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blinkL16CompareByDensityERKNS_14ImageCandidateES2_(%"class.blink::ImageCandidate"* nocapture readonly dereferenceable(48), %"class.blink::ImageCandidate"* nocapture readonly dereferenceable(48)) #7 {
  %3 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  %4 = load float, float* %3, align 8
  %5 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 0, i32 2
  %6 = load float, float* %5, align 8
  %7 = fcmp olt float %4, %6
  ret i1 %7
}

declare zeroext i1 @_ZN5blink23WebNetworkStateNotifier15SaveDataEnabledEv() local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8), i64, %"class.blink::ImageCandidate"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %85 [
    i64 0, label %122
    i64 1, label %122
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %2, align 8
  %9 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1
  %10 = tail call zeroext i1 %8(%"class.blink::ImageCandidate"* dereferenceable(48) %9, %"class.blink::ImageCandidate"* dereferenceable(48) %0) #11
  br i1 %10, label %11, label %122

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::ImageCandidate"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 0
  %16 = bitcast %"class.WTF::StringImpl"** %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 3, i64 0
  %21 = load i8, i8* %20, align 4
  %22 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 3, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 3, i64 2
  %25 = load i8, i8* %24, align 2
  %26 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1, i32 3, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 2
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::ImageCandidate"* %9 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %37, i64* %13, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %11
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %52, %49, %11
  %54 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %55 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1
  %56 = bitcast %"class.WTF::StringView"* %54 to i8*
  %57 = bitcast %"class.WTF::StringView"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 36, i1 false) #11
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  store i64 %14, i64* %36, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #11
  br label %73

73:                                               ; preds = %53, %69, %72
  %74 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1, i32 0
  %75 = bitcast %"class.WTF::StringImpl"** %74 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %75, align 8
  %76 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1, i32 2
  store i32 %19, i32* %76, align 8
  %77 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1, i32 3, i64 0
  store i8 %21, i8* %77, align 4
  %78 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1, i32 3, i64 1
  store i8 %23, i8* %78, align 1
  %79 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1, i32 3, i64 2
  store i8 %25, i8* %79, align 2
  %80 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1, i32 3, i64 3
  store i8 %27, i8* %80, align 1
  %81 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 2
  %82 = bitcast float* %81 to i32*
  store i32 %30, i32* %82, align 8
  %83 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 3
  store i32 %32, i32* %83, align 4
  %84 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 4
  store i32 %34, i32* %84, align 8
  br label %122

85:                                               ; preds = %6
  %86 = icmp slt i64 %3, 1
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  tail call void @_ZNSt3__116__insertion_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_(%"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"* %1, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2)
  br label %122

88:                                               ; preds = %85
  %89 = lshr i64 %3, 1
  %90 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 %89
  %91 = icmp sgt i64 %3, %5
  br i1 %91, label %120, label %92

92:                                               ; preds = %88
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE(%"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"* %90, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %89, %"class.blink::ImageCandidate"* %4)
  %93 = sub nsw i64 %3, %89
  %94 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 %89
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE(%"class.blink::ImageCandidate"* %90, %"class.blink::ImageCandidate"* %1, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %93, %"class.blink::ImageCandidate"* %94)
  %95 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRPFbRKN5blink14ImageCandidateES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_(%"class.blink::ImageCandidate"* %4, %"class.blink::ImageCandidate"* %94, %"class.blink::ImageCandidate"* %94, %"class.blink::ImageCandidate"* %95, %"class.blink::ImageCandidate"* %0, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2)
  %96 = icmp eq %"class.blink::ImageCandidate"* %4, null
  br i1 %96, label %122, label %97

97:                                               ; preds = %92, %116
  %98 = phi i64 [ %117, %116 ], [ 0, %92 ]
  %99 = phi %"class.blink::ImageCandidate"* [ %118, %116 ], [ %4, %92 ]
  %100 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #11
  br label %116

116:                                              ; preds = %115, %112, %97
  %117 = add nuw i64 %98, 1
  %118 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %99, i64 1
  %119 = icmp eq i64 %117, %3
  br i1 %119, label %122, label %97

120:                                              ; preds = %88
  tail call void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"* %90, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %89, %"class.blink::ImageCandidate"* %4, i64 %5)
  %121 = sub nsw i64 %3, %89
  tail call void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"* %90, %"class.blink::ImageCandidate"* %1, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %121, %"class.blink::ImageCandidate"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEl(%"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"* %90, %"class.blink::ImageCandidate"* %1, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %89, i64 %121, %"class.blink::ImageCandidate"* %4, i64 %5)
  ret void

122:                                              ; preds = %116, %92, %7, %73, %6, %6, %87
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::ImageCandidate", align 8
  %5 = icmp eq %"class.blink::ImageCandidate"* %0, %1
  br i1 %5, label %102, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 1
  %8 = icmp eq %"class.blink::ImageCandidate"* %7, %1
  br i1 %8, label %102, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.blink::ImageCandidate"* %4 to i8*
  %11 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 3
  %13 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  %14 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %15 = bitcast %"class.WTF::StringView"* %14 to i8*
  %16 = getelementptr inbounds i32, i32* %12, i64 2
  br label %17

17:                                               ; preds = %9, %72
  %18 = phi %"class.blink::ImageCandidate"* [ %7, %9 ], [ %73, %72 ]
  %19 = phi %"class.blink::ImageCandidate"* [ %0, %9 ], [ %18, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::ImageCandidate"* %18 to i64*
  store i32 -1431655766, i32* %16, align 4
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 1, i32 1
  %24 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %24, i64 36, i1 false) #11
  %25 = icmp eq %"class.blink::ImageCandidate"* %18, %0
  br i1 %25, label %34, label %26

26:                                               ; preds = %17, %96
  %27 = phi %"class.blink::ImageCandidate"* [ %29, %96 ], [ %18, %17 ]
  %28 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %2, align 8
  %29 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 -1
  %30 = call zeroext i1 %28(%"class.blink::ImageCandidate"* nonnull dereferenceable(48) %4, %"class.blink::ImageCandidate"* dereferenceable(48) %29) #11
  br i1 %30, label %75, label %31

31:                                               ; preds = %96, %26
  %32 = phi %"class.blink::ImageCandidate"* [ %27, %26 ], [ %0, %96 ]
  %33 = load i64, i64* %13, align 8
  br label %34

34:                                               ; preds = %31, %17
  %35 = phi i64 [ %22, %17 ], [ %33, %31 ]
  %36 = phi %"class.blink::ImageCandidate"* [ %0, %17 ], [ %32, %31 ]
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %37 = bitcast %"class.blink::ImageCandidate"* %36 to i64*
  %38 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %35, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %54

54:                                               ; preds = %34, %50, %53
  %55 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %36, i64 0, i32 1
  %56 = bitcast %"class.WTF::StringView"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %15, i64 36, i1 false) #11
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %54, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  %73 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %18, i64 1
  %74 = icmp eq %"class.blink::ImageCandidate"* %73, %1
  br i1 %74, label %102, label %17

75:                                               ; preds = %26
  %76 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %29, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.blink::ImageCandidate"* %29 to i64*
  %78 = load i64, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %79 = bitcast %"class.blink::ImageCandidate"* %27 to i64*
  %80 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  store i64 %78, i64* %79, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #11
  br label %96

96:                                               ; preds = %75, %92, %95
  %97 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 0, i32 1
  %98 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %27, i64 -1, i32 1
  %99 = bitcast %"class.WTF::StringView"* %97 to i8*
  %100 = bitcast %"class.WTF::StringView"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 36, i1 false) #11
  %101 = icmp eq %"class.blink::ImageCandidate"* %29, %0
  br i1 %101, label %31, label %26

102:                                              ; preds = %72, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeE(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8), i64, %"class.blink::ImageCandidate"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %55 [
    i64 0, label %131
    i64 1, label %6
    i64 2, label %15
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::ImageCandidate"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringView"* %11 to i8*
  %14 = bitcast %"class.WTF::StringView"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 36, i1 false) #11
  br label %131

15:                                               ; preds = %5
  %16 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %2, align 8
  %17 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1
  %18 = tail call zeroext i1 %16(%"class.blink::ImageCandidate"* dereferenceable(48) %17, %"class.blink::ImageCandidate"* dereferenceable(48) %0) #11
  br i1 %18, label %19, label %37

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::ImageCandidate"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %24 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %25 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1
  %26 = bitcast %"class.WTF::StringView"* %24 to i8*
  %27 = bitcast %"class.WTF::StringView"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 36, i1 false) #11
  %28 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 1
  %29 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::ImageCandidate"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::ImageCandidate"* %28 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %33 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 1, i32 1
  %34 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %35 = bitcast %"class.WTF::StringView"* %33 to i8*
  %36 = bitcast %"class.WTF::StringView"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 36, i1 false) #11
  br label %131

37:                                               ; preds = %15
  %38 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::ImageCandidate"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::ImageCandidate"* %4 to i64*
  store i64 %40, i64* %41, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %42 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 0, i32 1
  %43 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %44 = bitcast %"class.WTF::StringView"* %42 to i8*
  %45 = bitcast %"class.WTF::StringView"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 36, i1 false) #11
  %46 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 1
  %47 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %17, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.blink::ImageCandidate"* %17 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::ImageCandidate"* %46 to i64*
  store i64 %49, i64* %50, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %47, align 8
  %51 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 1, i32 1
  %52 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %1, i64 -1, i32 1
  %53 = bitcast %"class.WTF::StringView"* %51 to i8*
  %54 = bitcast %"class.WTF::StringView"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 36, i1 false) #11
  br label %131

55:                                               ; preds = %5
  %56 = icmp slt i64 %3, 9
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @_ZNSt3__121__insertion_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_(%"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"* %1, %"class.blink::ImageCandidate"* %4, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2)
  br label %131

58:                                               ; preds = %55
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 %59
  tail call void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"* %60, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %59, %"class.blink::ImageCandidate"* %4, i64 %59)
  %61 = sub nsw i64 %3, %59
  %62 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %4, i64 %59
  tail call void @_ZNSt3__113__stable_sortIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_T_NS_15iterator_traitsIS9_E15difference_typeEPNSC_10value_typeEl(%"class.blink::ImageCandidate"* %60, %"class.blink::ImageCandidate"* %1, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %2, i64 %61, %"class.blink::ImageCandidate"* %62, i64 %61)
  %63 = icmp eq i64 %59, 0
  br i1 %63, label %64, label %82

64:                                               ; preds = %126, %58
  %65 = phi %"class.blink::ImageCandidate"* [ %60, %58 ], [ %127, %126 ]
  %66 = phi %"class.blink::ImageCandidate"* [ %4, %58 ], [ %129, %126 ]
  %67 = icmp eq %"class.blink::ImageCandidate"* %65, %1
  br i1 %67, label %131, label %68

68:                                               ; preds = %64, %68
  %69 = phi %"class.blink::ImageCandidate"* [ %80, %68 ], [ %66, %64 ]
  %70 = phi %"class.blink::ImageCandidate"* [ %79, %68 ], [ %65, %64 ]
  %71 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.blink::ImageCandidate"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.blink::ImageCandidate"* %69 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %75 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %69, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 1
  %77 = bitcast %"class.WTF::StringView"* %75 to i8*
  %78 = bitcast %"class.WTF::StringView"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 36, i1 false) #11
  %79 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 1
  %80 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %69, i64 1
  %81 = icmp eq %"class.blink::ImageCandidate"* %79, %1
  br i1 %81, label %131, label %68

82:                                               ; preds = %58, %126
  %83 = phi %"class.blink::ImageCandidate"* [ %128, %126 ], [ %0, %58 ]
  %84 = phi %"class.blink::ImageCandidate"* [ %129, %126 ], [ %4, %58 ]
  %85 = phi %"class.blink::ImageCandidate"* [ %127, %126 ], [ %60, %58 ]
  %86 = icmp eq %"class.blink::ImageCandidate"* %85, %1
  br i1 %86, label %87, label %103

87:                                               ; preds = %82
  %88 = icmp eq %"class.blink::ImageCandidate"* %83, %60
  br i1 %88, label %131, label %89

89:                                               ; preds = %87, %89
  %90 = phi %"class.blink::ImageCandidate"* [ %100, %89 ], [ %83, %87 ]
  %91 = phi %"class.blink::ImageCandidate"* [ %101, %89 ], [ %84, %87 ]
  %92 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %90, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.blink::ImageCandidate"* %90 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::ImageCandidate"* %91 to i64*
  store i64 %94, i64* %95, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %96 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %91, i64 0, i32 1
  %97 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %90, i64 0, i32 1
  %98 = bitcast %"class.WTF::StringView"* %96 to i8*
  %99 = bitcast %"class.WTF::StringView"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 36, i1 false) #11
  %100 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %90, i64 1
  %101 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %91, i64 1
  %102 = icmp eq %"class.blink::ImageCandidate"* %100, %60
  br i1 %102, label %131, label %89

103:                                              ; preds = %82
  %104 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %2, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::ImageCandidate"* dereferenceable(48) %85, %"class.blink::ImageCandidate"* dereferenceable(48) %83) #11
  br i1 %105, label %106, label %116

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %85, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.blink::ImageCandidate"* %85 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.blink::ImageCandidate"* %84 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %84, i64 0, i32 1
  %112 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %85, i64 0, i32 1
  %113 = bitcast %"class.WTF::StringView"* %111 to i8*
  %114 = bitcast %"class.WTF::StringView"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 36, i1 false) #11
  %115 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %85, i64 1
  br label %126

116:                                              ; preds = %103
  %117 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %83, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.blink::ImageCandidate"* %83 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.blink::ImageCandidate"* %84 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %84, i64 0, i32 1
  %122 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %83, i64 0, i32 1
  %123 = bitcast %"class.WTF::StringView"* %121 to i8*
  %124 = bitcast %"class.WTF::StringView"* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 36, i1 false) #11
  %125 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %83, i64 1
  br label %126

126:                                              ; preds = %116, %106
  %127 = phi %"class.blink::ImageCandidate"* [ %115, %106 ], [ %85, %116 ]
  %128 = phi %"class.blink::ImageCandidate"* [ %83, %106 ], [ %125, %116 ]
  %129 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %84, i64 1
  %130 = icmp eq %"class.blink::ImageCandidate"* %128, %60
  br i1 %130, label %64, label %82

131:                                              ; preds = %89, %68, %87, %64, %37, %19, %5, %57, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRPFbRKN5blink14ImageCandidateES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.blink::ImageCandidate"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %107, %6
  %9 = phi %"class.blink::ImageCandidate"* [ %2, %6 ], [ %108, %107 ]
  %10 = phi %"class.blink::ImageCandidate"* [ %4, %6 ], [ %110, %107 ]
  %11 = icmp eq %"class.blink::ImageCandidate"* %9, %3
  br i1 %11, label %143, label %112

12:                                               ; preds = %6, %107
  %13 = phi %"class.blink::ImageCandidate"* [ %109, %107 ], [ %0, %6 ]
  %14 = phi %"class.blink::ImageCandidate"* [ %110, %107 ], [ %4, %6 ]
  %15 = phi %"class.blink::ImageCandidate"* [ %108, %107 ], [ %2, %6 ]
  %16 = icmp eq %"class.blink::ImageCandidate"* %15, %3
  br i1 %16, label %17, label %50

17:                                               ; preds = %12
  %18 = icmp eq %"class.blink::ImageCandidate"* %13, %1
  br i1 %18, label %143, label %19

19:                                               ; preds = %17, %42
  %20 = phi %"class.blink::ImageCandidate"* [ %47, %42 ], [ %13, %17 ]
  %21 = phi %"class.blink::ImageCandidate"* [ %48, %42 ], [ %14, %17 ]
  %22 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.blink::ImageCandidate"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %25 = bitcast %"class.blink::ImageCandidate"* %21 to i64*
  %26 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %21, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %19, %38, %41
  %43 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %21, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 0, i32 1
  %45 = bitcast %"class.WTF::StringView"* %43 to i8*
  %46 = bitcast %"class.WTF::StringView"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 36, i1 false) #11
  %47 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 1
  %48 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %21, i64 1
  %49 = icmp eq %"class.blink::ImageCandidate"* %47, %1
  br i1 %49, label %143, label %19

50:                                               ; preds = %12
  %51 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %5, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::ImageCandidate"* dereferenceable(48) %15, %"class.blink::ImageCandidate"* dereferenceable(48) %13) #11
  br i1 %52, label %53, label %80

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.blink::ImageCandidate"* %15 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %57 = bitcast %"class.blink::ImageCandidate"* %14 to i64*
  %58 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %53, %70, %73
  %75 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 1
  %77 = bitcast %"class.WTF::StringView"* %75 to i8*
  %78 = bitcast %"class.WTF::StringView"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 36, i1 false) #11
  %79 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 1
  br label %107

80:                                               ; preds = %50
  %81 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %13, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.blink::ImageCandidate"* %13 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %84 = bitcast %"class.blink::ImageCandidate"* %14 to i64*
  %85 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #11
  br label %101

101:                                              ; preds = %80, %97, %100
  %102 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 0, i32 1
  %103 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %13, i64 0, i32 1
  %104 = bitcast %"class.WTF::StringView"* %102 to i8*
  %105 = bitcast %"class.WTF::StringView"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 36, i1 false) #11
  %106 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %13, i64 1
  br label %107

107:                                              ; preds = %74, %101
  %108 = phi %"class.blink::ImageCandidate"* [ %79, %74 ], [ %15, %101 ]
  %109 = phi %"class.blink::ImageCandidate"* [ %13, %74 ], [ %106, %101 ]
  %110 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 1
  %111 = icmp eq %"class.blink::ImageCandidate"* %109, %1
  br i1 %111, label %8, label %12

112:                                              ; preds = %8, %135
  %113 = phi %"class.blink::ImageCandidate"* [ %141, %135 ], [ %10, %8 ]
  %114 = phi %"class.blink::ImageCandidate"* [ %140, %135 ], [ %9, %8 ]
  %115 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.blink::ImageCandidate"* %114 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %115, align 8
  %118 = bitcast %"class.blink::ImageCandidate"* %113 to i64*
  %119 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %113, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  store i64 %117, i64* %118, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #11
  br label %135

135:                                              ; preds = %112, %131, %134
  %136 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %113, i64 0, i32 1
  %137 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %114, i64 0, i32 1
  %138 = bitcast %"class.WTF::StringView"* %136 to i8*
  %139 = bitcast %"class.WTF::StringView"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 36, i1 false) #11
  %140 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %114, i64 1
  %141 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %113, i64 1
  %142 = icmp eq %"class.blink::ImageCandidate"* %140, %3
  br i1 %142, label %143, label %112

143:                                              ; preds = %42, %135, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEl(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8), i64, i64, %"class.blink::ImageCandidate"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %443, label %10

10:                                               ; preds = %8, %436
  %11 = phi %"class.blink::ImageCandidate"* [ %441, %436 ], [ %0, %8 ]
  %12 = phi %"class.blink::ImageCandidate"* [ %440, %436 ], [ %1, %8 ]
  %13 = phi i64 [ %439, %436 ], [ %5, %8 ]
  %14 = phi i64 [ %438, %436 ], [ %4, %8 ]
  %15 = phi %"class.blink::ImageCandidate"* [ %437, %436 ], [ %2, %8 ]
  %16 = icmp sgt i64 %14, %7
  %17 = icmp sgt i64 %13, %7
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %10
  %20 = icmp eq i64 %14, 0
  br i1 %20, label %443, label %22

21:                                               ; preds = %10
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE(%"class.blink::ImageCandidate"* %11, %"class.blink::ImageCandidate"* %12, %"class.blink::ImageCandidate"* %15, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %3, i64 %14, i64 %13, %"class.blink::ImageCandidate"* %6)
  br label %443

22:                                               ; preds = %19, %27
  %23 = phi %"class.blink::ImageCandidate"* [ %28, %27 ], [ %11, %19 ]
  %24 = phi i64 [ %29, %27 ], [ %14, %19 ]
  %25 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %3, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ImageCandidate"* dereferenceable(48) %12, %"class.blink::ImageCandidate"* dereferenceable(48) %23) #11
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 1
  %29 = add nsw i64 %24, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %443, label %22

31:                                               ; preds = %22
  %32 = icmp slt i64 %24, %13
  br i1 %32, label %33, label %62

33:                                               ; preds = %31
  %34 = sdiv i64 %13, 2
  %35 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 %34
  %36 = ptrtoint %"class.blink::ImageCandidate"* %12 to i64
  %37 = ptrtoint %"class.blink::ImageCandidate"* %23 to i64
  %38 = sub i64 %36, %37
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %33
  %41 = sdiv exact i64 %38, 48
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ %53, %42 ], [ %41, %40 ]
  %44 = phi %"class.blink::ImageCandidate"* [ %52, %42 ], [ %23, %40 ]
  %45 = lshr i64 %43, 1
  %46 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %44, i64 %45
  %47 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %3, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::ImageCandidate"* dereferenceable(48) %35, %"class.blink::ImageCandidate"* dereferenceable(48) %46) #11
  %49 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add i64 %43, %50
  %52 = select i1 %48, %"class.blink::ImageCandidate"* %44, %"class.blink::ImageCandidate"* %49
  %53 = select i1 %48, i64 %45, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %42

55:                                               ; preds = %42
  %56 = ptrtoint %"class.blink::ImageCandidate"* %52 to i64
  br label %57

57:                                               ; preds = %55, %33
  %58 = phi i64 [ %56, %55 ], [ %37, %33 ]
  %59 = phi %"class.blink::ImageCandidate"* [ %52, %55 ], [ %23, %33 ]
  %60 = sub i64 %58, %37
  %61 = sdiv exact i64 %60, 48
  br label %167

62:                                               ; preds = %31
  %63 = icmp eq i64 %24, 1
  br i1 %63, label %64, label %138

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.blink::ImageCandidate"* %23 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %68 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1, i32 0
  %69 = bitcast %"class.WTF::StringImpl"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  %71 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1, i32 3, i64 0
  %74 = load i8, i8* %73, align 4
  %75 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1, i32 3, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1, i32 3, i64 2
  %78 = load i8, i8* %77, align 2
  %79 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1, i32 3, i64 3
  %80 = load i8, i8* %79, align 1
  %81 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 2
  %82 = bitcast float* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.blink::ImageCandidate"* %12 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %90, i64* %66, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %64
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #11
  br label %106

106:                                              ; preds = %105, %102, %64
  %107 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 0, i32 1
  %108 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1
  %109 = bitcast %"class.WTF::StringView"* %107 to i8*
  %110 = bitcast %"class.WTF::StringView"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 36, i1 false) #11
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  store i64 %67, i64* %89, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #11
  br label %126

126:                                              ; preds = %125, %122, %106
  %127 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 0
  %128 = bitcast %"class.WTF::StringImpl"** %127 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %128, align 8
  %129 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 2
  store i32 %72, i32* %129, align 8
  %130 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 0
  store i8 %74, i8* %130, align 4
  %131 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 1
  store i8 %76, i8* %131, align 1
  %132 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 2
  store i8 %78, i8* %132, align 2
  %133 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 3
  store i8 %80, i8* %133, align 1
  %134 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 2
  %135 = bitcast float* %134 to i32*
  store i32 %83, i32* %135, align 8
  %136 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 3
  store i32 %85, i32* %136, align 4
  %137 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 4
  store i32 %87, i32* %137, align 8
  br label %443

138:                                              ; preds = %62
  %139 = sdiv i64 %24, 2
  %140 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 %139
  %141 = ptrtoint %"class.blink::ImageCandidate"* %15 to i64
  %142 = ptrtoint %"class.blink::ImageCandidate"* %12 to i64
  %143 = sub i64 %141, %142
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %162, label %145

145:                                              ; preds = %138
  %146 = sdiv exact i64 %143, 48
  br label %147

147:                                              ; preds = %147, %145
  %148 = phi i64 [ %158, %147 ], [ %146, %145 ]
  %149 = phi %"class.blink::ImageCandidate"* [ %157, %147 ], [ %12, %145 ]
  %150 = lshr i64 %148, 1
  %151 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %149, i64 %150
  %152 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %3, align 8
  %153 = tail call zeroext i1 %152(%"class.blink::ImageCandidate"* dereferenceable(48) %151, %"class.blink::ImageCandidate"* dereferenceable(48) %140) #11
  %154 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %151, i64 1
  %155 = xor i64 %150, -1
  %156 = add i64 %148, %155
  %157 = select i1 %153, %"class.blink::ImageCandidate"* %154, %"class.blink::ImageCandidate"* %149
  %158 = select i1 %153, i64 %156, i64 %150
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %147

160:                                              ; preds = %147
  %161 = ptrtoint %"class.blink::ImageCandidate"* %157 to i64
  br label %162

162:                                              ; preds = %160, %138
  %163 = phi i64 [ %161, %160 ], [ %142, %138 ]
  %164 = phi %"class.blink::ImageCandidate"* [ %157, %160 ], [ %12, %138 ]
  %165 = sub i64 %163, %142
  %166 = sdiv exact i64 %165, 48
  br label %167

167:                                              ; preds = %162, %57
  %168 = phi %"class.blink::ImageCandidate"* [ %59, %57 ], [ %140, %162 ]
  %169 = phi %"class.blink::ImageCandidate"* [ %35, %57 ], [ %164, %162 ]
  %170 = phi i64 [ %61, %57 ], [ %139, %162 ]
  %171 = phi i64 [ %34, %57 ], [ %166, %162 ]
  %172 = sub nsw i64 %24, %170
  %173 = sub nsw i64 %13, %171
  %174 = icmp eq %"class.blink::ImageCandidate"* %168, %12
  br i1 %174, label %429, label %175

175:                                              ; preds = %167
  %176 = icmp eq %"class.blink::ImageCandidate"* %12, %169
  br i1 %176, label %429, label %177

177:                                              ; preds = %175
  %178 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.blink::ImageCandidate"* %168 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %178, align 8
  %181 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1, i32 0
  %182 = bitcast %"class.WTF::StringImpl"** %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  %184 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1, i32 2
  %185 = load i32, i32* %184, align 8
  %186 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1, i32 3, i64 0
  %187 = load i8, i8* %186, align 4
  %188 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1, i32 3, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1, i32 3, i64 2
  %191 = load i8, i8* %190, align 2
  %192 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1, i32 3, i64 3
  %193 = load i8, i8* %192, align 1
  %194 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 2
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 3
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 4
  %200 = load i32, i32* %199, align 8
  %201 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 0, i32 0, i32 0
  %202 = bitcast %"class.blink::ImageCandidate"* %12 to i64*
  %203 = load i64, i64* %202, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %201, align 8
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  store i64 %203, i64* %179, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %177
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #11
  br label %219

219:                                              ; preds = %218, %215, %177
  %220 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 0, i32 1
  %221 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1
  %222 = bitcast %"class.WTF::StringView"* %220 to i8*
  %223 = bitcast %"class.WTF::StringView"* %221 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %222, i8* align 8 %223, i64 36, i1 false) #11
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  store i64 %180, i64* %202, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #11
  br label %239

239:                                              ; preds = %219, %235, %238
  %240 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 0
  %241 = bitcast %"class.WTF::StringImpl"** %240 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %241, align 8
  %242 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 2
  store i32 %185, i32* %242, align 8
  %243 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 0
  store i8 %187, i8* %243, align 4
  %244 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 1
  store i8 %189, i8* %244, align 1
  %245 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 2
  store i8 %191, i8* %245, align 2
  %246 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 1, i32 3, i64 3
  store i8 %193, i8* %246, align 1
  %247 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 2
  %248 = bitcast float* %247 to i32*
  store i32 %196, i32* %248, align 8
  %249 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 3
  store i32 %198, i32* %249, align 4
  %250 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 0, i32 4
  store i32 %200, i32* %250, align 8
  %251 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %168, i64 1
  %252 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %12, i64 1
  %253 = icmp eq %"class.blink::ImageCandidate"* %252, %169
  %254 = icmp eq %"class.blink::ImageCandidate"* %251, %12
  br i1 %253, label %338, label %255

255:                                              ; preds = %239, %322
  %256 = phi i1 [ %337, %322 ], [ %254, %239 ]
  %257 = phi %"class.blink::ImageCandidate"* [ %335, %322 ], [ %252, %239 ]
  %258 = phi %"class.blink::ImageCandidate"* [ %334, %322 ], [ %251, %239 ]
  %259 = phi %"class.blink::ImageCandidate"* [ %260, %322 ], [ %12, %239 ]
  %260 = select i1 %256, %"class.blink::ImageCandidate"* %257, %"class.blink::ImageCandidate"* %259
  %261 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 0, i32 0, i32 0
  %262 = bitcast %"class.blink::ImageCandidate"* %258 to i64*
  %263 = load i64, i64* %262, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %261, align 8
  %264 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1, i32 0
  %265 = bitcast %"class.WTF::StringImpl"** %264 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8
  %267 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1, i32 2
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1, i32 3, i64 0
  %270 = load i8, i8* %269, align 4
  %271 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1, i32 3, i64 1
  %272 = load i8, i8* %271, align 1
  %273 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1, i32 3, i64 2
  %274 = load i8, i8* %273, align 2
  %275 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1, i32 3, i64 3
  %276 = load i8, i8* %275, align 1
  %277 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 2
  %278 = bitcast float* %277 to i32*
  %279 = load i32, i32* %278, align 8
  %280 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 3
  %281 = load i32, i32* %280, align 4
  %282 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 4
  %283 = load i32, i32* %282, align 8
  %284 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 0, i32 0, i32 0
  %285 = bitcast %"class.blink::ImageCandidate"* %257 to i64*
  %286 = load i64, i64* %285, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %284, align 8
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  store i64 %286, i64* %262, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %302, label %289

289:                                              ; preds = %255
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %295 = load i32, i32* %294, align 4
  br i1 %293, label %296, label %298

296:                                              ; preds = %289
  %297 = add i32 %295, -1
  store i32 %297, i32* %294, align 4
  br label %298

298:                                              ; preds = %296, %289
  %299 = phi i32 [ %297, %296 ], [ %295, %289 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %287) #11
  br label %302

302:                                              ; preds = %301, %298, %255
  %303 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 0, i32 1
  %304 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1
  %305 = bitcast %"class.WTF::StringView"* %303 to i8*
  %306 = bitcast %"class.WTF::StringView"* %304 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* align 8 %306, i64 36, i1 false) #11
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  store i64 %263, i64* %285, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %302
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #11
  br label %322

322:                                              ; preds = %302, %318, %321
  %323 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1, i32 0
  %324 = bitcast %"class.WTF::StringImpl"** %323 to <2 x i64>*
  store <2 x i64> %266, <2 x i64>* %324, align 8
  %325 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1, i32 2
  store i32 %268, i32* %325, align 8
  %326 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1, i32 3, i64 0
  store i8 %270, i8* %326, align 4
  %327 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1, i32 3, i64 1
  store i8 %272, i8* %327, align 1
  %328 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1, i32 3, i64 2
  store i8 %274, i8* %328, align 2
  %329 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 1, i32 3, i64 3
  store i8 %276, i8* %329, align 1
  %330 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 2
  %331 = bitcast float* %330 to i32*
  store i32 %279, i32* %331, align 8
  %332 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 3
  store i32 %281, i32* %332, align 4
  %333 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 0, i32 4
  store i32 %283, i32* %333, align 8
  %334 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %258, i64 1
  %335 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %257, i64 1
  %336 = icmp eq %"class.blink::ImageCandidate"* %335, %169
  %337 = icmp eq %"class.blink::ImageCandidate"* %334, %260
  br i1 %336, label %338, label %255

338:                                              ; preds = %322, %239
  %339 = phi %"class.blink::ImageCandidate"* [ %12, %239 ], [ %260, %322 ]
  %340 = phi %"class.blink::ImageCandidate"* [ %251, %239 ], [ %334, %322 ]
  %341 = phi i1 [ %254, %239 ], [ %337, %322 ]
  br i1 %341, label %429, label %342

342:                                              ; preds = %338, %427
  %343 = phi %"class.blink::ImageCandidate"* [ %428, %427 ], [ %339, %338 ]
  %344 = phi %"class.blink::ImageCandidate"* [ %422, %427 ], [ %340, %338 ]
  %345 = phi %"class.blink::ImageCandidate"* [ %423, %427 ], [ %339, %338 ]
  br label %346

346:                                              ; preds = %342, %426
  %347 = phi %"class.blink::ImageCandidate"* [ %422, %426 ], [ %344, %342 ]
  %348 = phi %"class.blink::ImageCandidate"* [ %343, %426 ], [ %345, %342 ]
  %349 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 0, i32 0, i32 0
  %350 = bitcast %"class.blink::ImageCandidate"* %347 to i64*
  %351 = load i64, i64* %350, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %349, align 8
  %352 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1, i32 0
  %353 = bitcast %"class.WTF::StringImpl"** %352 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8
  %355 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1, i32 3, i64 0
  %358 = load i8, i8* %357, align 4
  %359 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1, i32 3, i64 1
  %360 = load i8, i8* %359, align 1
  %361 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1, i32 3, i64 2
  %362 = load i8, i8* %361, align 2
  %363 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1, i32 3, i64 3
  %364 = load i8, i8* %363, align 1
  %365 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 2
  %366 = bitcast float* %365 to i32*
  %367 = load i32, i32* %366, align 8
  %368 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 3
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 4
  %371 = load i32, i32* %370, align 8
  %372 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 0, i32 0, i32 0
  %373 = bitcast %"class.blink::ImageCandidate"* %348 to i64*
  %374 = load i64, i64* %373, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %372, align 8
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %349, align 8
  store i64 %374, i64* %350, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %346
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #11
  br label %390

390:                                              ; preds = %389, %386, %346
  %391 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 0, i32 1
  %392 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1
  %393 = bitcast %"class.WTF::StringView"* %391 to i8*
  %394 = bitcast %"class.WTF::StringView"* %392 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %393, i8* align 8 %394, i64 36, i1 false) #11
  %395 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  store i64 %351, i64* %373, align 8
  %396 = icmp eq %"class.WTF::StringImpl"* %395, null
  br i1 %396, label %410, label %397

397:                                              ; preds = %390
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %395) #11
  br label %410

410:                                              ; preds = %390, %406, %409
  %411 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1, i32 0
  %412 = bitcast %"class.WTF::StringImpl"** %411 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %412, align 8
  %413 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1, i32 2
  store i32 %356, i32* %413, align 8
  %414 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1, i32 3, i64 0
  store i8 %358, i8* %414, align 4
  %415 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1, i32 3, i64 1
  store i8 %360, i8* %415, align 1
  %416 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1, i32 3, i64 2
  store i8 %362, i8* %416, align 2
  %417 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 1, i32 3, i64 3
  store i8 %364, i8* %417, align 1
  %418 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 2
  %419 = bitcast float* %418 to i32*
  store i32 %367, i32* %419, align 8
  %420 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 3
  store i32 %369, i32* %420, align 4
  %421 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 0, i32 4
  store i32 %371, i32* %421, align 8
  %422 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %347, i64 1
  %423 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %348, i64 1
  %424 = icmp eq %"class.blink::ImageCandidate"* %423, %169
  %425 = icmp eq %"class.blink::ImageCandidate"* %422, %343
  br i1 %424, label %426, label %427

426:                                              ; preds = %410
  br i1 %425, label %429, label %346

427:                                              ; preds = %410
  %428 = select i1 %425, %"class.blink::ImageCandidate"* %423, %"class.blink::ImageCandidate"* %343
  br label %342

429:                                              ; preds = %426, %167, %175, %338
  %430 = phi %"class.blink::ImageCandidate"* [ %169, %167 ], [ %168, %175 ], [ %340, %338 ], [ %340, %426 ]
  %431 = add nsw i64 %171, %170
  %432 = add nsw i64 %173, %172
  %433 = icmp slt i64 %431, %432
  br i1 %433, label %434, label %435

434:                                              ; preds = %429
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEl(%"class.blink::ImageCandidate"* %23, %"class.blink::ImageCandidate"* %168, %"class.blink::ImageCandidate"* %430, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %3, i64 %170, i64 %171, %"class.blink::ImageCandidate"* %6, i64 %7)
  br label %436

435:                                              ; preds = %429
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeEl(%"class.blink::ImageCandidate"* %430, %"class.blink::ImageCandidate"* %169, %"class.blink::ImageCandidate"* %15, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %3, i64 %172, i64 %173, %"class.blink::ImageCandidate"* %6, i64 %7)
  br label %436

436:                                              ; preds = %434, %435
  %437 = phi %"class.blink::ImageCandidate"* [ %15, %434 ], [ %430, %435 ]
  %438 = phi i64 [ %172, %434 ], [ %170, %435 ]
  %439 = phi i64 [ %173, %434 ], [ %171, %435 ]
  %440 = phi %"class.blink::ImageCandidate"* [ %169, %434 ], [ %168, %435 ]
  %441 = phi %"class.blink::ImageCandidate"* [ %430, %434 ], [ %23, %435 ]
  %442 = icmp eq i64 %439, 0
  br i1 %442, label %443, label %10

443:                                              ; preds = %436, %19, %27, %8, %126, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_PNS_15iterator_traitsIS9_E10value_typeET_(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.blink::ImageCandidate"* %0, %1
  br i1 %5, label %105, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::ImageCandidate"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.blink::ImageCandidate"* %2 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %2, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringView"* %11 to i8*
  %14 = bitcast %"class.WTF::StringView"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 36, i1 false) #11
  %15 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %0, i64 1
  %16 = icmp eq %"class.blink::ImageCandidate"* %15, %1
  br i1 %16, label %105, label %17

17:                                               ; preds = %6, %98
  %18 = phi %"class.blink::ImageCandidate"* [ %103, %98 ], [ %15, %6 ]
  %19 = phi %"class.blink::ImageCandidate"* [ %21, %98 ], [ %2, %6 ]
  %20 = phi %"class.blink::ImageCandidate"* [ %18, %98 ], [ %0, %6 ]
  %21 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 1
  %22 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %3, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::ImageCandidate"* dereferenceable(48) %18, %"class.blink::ImageCandidate"* dereferenceable(48) %19) #11
  br i1 %23, label %24, label %92

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.blink::ImageCandidate"* %19 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::ImageCandidate"* %21 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %29 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 1, i32 1
  %30 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 0, i32 1
  %31 = bitcast %"class.WTF::StringView"* %29 to i8*
  %32 = bitcast %"class.WTF::StringView"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 36, i1 false) #11
  %33 = icmp eq %"class.blink::ImageCandidate"* %19, %2
  br i1 %33, label %68, label %34

34:                                               ; preds = %24, %62
  %35 = phi %"class.blink::ImageCandidate"* [ %37, %62 ], [ %19, %24 ]
  %36 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %3, align 8
  %37 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %35, i64 -1
  %38 = tail call zeroext i1 %36(%"class.blink::ImageCandidate"* dereferenceable(48) %18, %"class.blink::ImageCandidate"* dereferenceable(48) %37) #11
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ImageCandidate"* %35 to i64*
  br label %68

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %37, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.blink::ImageCandidate"* %37 to i64*
  %44 = load i64, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %45 = bitcast %"class.blink::ImageCandidate"* %35 to i64*
  %46 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %35, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #11
  br label %62

62:                                               ; preds = %41, %58, %61
  %63 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %35, i64 0, i32 1
  %64 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %35, i64 -1, i32 1
  %65 = bitcast %"class.WTF::StringView"* %63 to i8*
  %66 = bitcast %"class.WTF::StringView"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 36, i1 false) #11
  %67 = icmp eq %"class.blink::ImageCandidate"* %37, %2
  br i1 %67, label %68, label %34

68:                                               ; preds = %62, %39, %24
  %69 = phi i64* [ %10, %24 ], [ %40, %39 ], [ %10, %62 ]
  %70 = phi %"class.blink::ImageCandidate"* [ %2, %24 ], [ %35, %39 ], [ %2, %62 ]
  %71 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %18, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.blink::ImageCandidate"* %18 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %74 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  store i64 %73, i64* %69, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %90

90:                                               ; preds = %68, %86, %89
  %91 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %70, i64 0, i32 1
  br label %98

92:                                               ; preds = %17
  %93 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %18, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.blink::ImageCandidate"* %18 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.blink::ImageCandidate"* %21 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 1, i32 1
  br label %98

98:                                               ; preds = %92, %90
  %99 = phi %"class.WTF::StringView"* [ %97, %92 ], [ %91, %90 ]
  %100 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 1, i32 1
  %101 = bitcast %"class.WTF::StringView"* %99 to i8*
  %102 = bitcast %"class.WTF::StringView"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 36, i1 false) #11
  %103 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %18, i64 1
  %104 = icmp eq %"class.blink::ImageCandidate"* %103, %1
  br i1 %104, label %105, label %17

105:                                              ; preds = %98, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_EEvT0_S9_S9_T_NS_15iterator_traitsIS9_E15difference_typeESD_PNSC_10value_typeE(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8), i64, i64, %"class.blink::ImageCandidate"*) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::reverse_iterator", align 8
  %9 = alloca %"class.std::__1::reverse_iterator", align 8
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.blink::ImageCandidate"* %0, %1
  br i1 %12, label %15, label %18

13:                                               ; preds = %7
  %14 = icmp eq %"class.blink::ImageCandidate"* %1, %2
  br i1 %14, label %34, label %42

15:                                               ; preds = %18, %11
  %16 = phi i64 [ 0, %11 ], [ %30, %18 ]
  %17 = phi %"class.blink::ImageCandidate"* [ %6, %11 ], [ %32, %18 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_(%"class.blink::ImageCandidate"* %6, %"class.blink::ImageCandidate"* %17, %"class.blink::ImageCandidate"* %1, %"class.blink::ImageCandidate"* %2, %"class.blink::ImageCandidate"* %0, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8) %3)
  br label %58

18:                                               ; preds = %11, %18
  %19 = phi %"class.blink::ImageCandidate"* [ %31, %18 ], [ %0, %11 ]
  %20 = phi %"class.blink::ImageCandidate"* [ %32, %18 ], [ %6, %11 ]
  %21 = phi i64 [ %30, %18 ], [ 0, %11 ]
  %22 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.blink::ImageCandidate"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::ImageCandidate"* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 0, i32 1
  %28 = bitcast %"class.WTF::StringView"* %26 to i8*
  %29 = bitcast %"class.WTF::StringView"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 36, i1 false) #11
  %30 = add nuw nsw i64 %21, 1
  %31 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %19, i64 1
  %32 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %20, i64 1
  %33 = icmp eq %"class.blink::ImageCandidate"* %31, %1
  br i1 %33, label %15, label %18

34:                                               ; preds = %42, %13
  %35 = phi i64 [ 0, %13 ], [ %54, %42 ]
  %36 = phi %"class.blink::ImageCandidate"* [ %6, %13 ], [ %56, %42 ]
  %37 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %8, i64 0, i32 0
  store %"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %8, i64 0, i32 1
  store %"class.blink::ImageCandidate"* %0, %"class.blink::ImageCandidate"** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %9, i64 0, i32 0
  store %"class.blink::ImageCandidate"* %2, %"class.blink::ImageCandidate"** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %9, i64 0, i32 1
  store %"class.blink::ImageCandidate"* %2, %"class.blink::ImageCandidate"** %40, align 8
  %41 = ptrtoint i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKN5blink14ImageCandidateES5_EEENS_16reverse_iteratorIPS3_EESC_SC_EEvT0_SD_T1_SE_T2_T_(%"class.blink::ImageCandidate"* %36, %"class.blink::ImageCandidate"* %36, %"class.blink::ImageCandidate"* %6, %"class.blink::ImageCandidate"* %6, %"class.blink::ImageCandidate"* %1, %"class.blink::ImageCandidate"* %1, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %8, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %9, i64 %41)
  br label %58

42:                                               ; preds = %13, %42
  %43 = phi %"class.blink::ImageCandidate"* [ %55, %42 ], [ %1, %13 ]
  %44 = phi %"class.blink::ImageCandidate"* [ %56, %42 ], [ %6, %13 ]
  %45 = phi i64 [ %54, %42 ], [ 0, %13 ]
  %46 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %43, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.blink::ImageCandidate"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::ImageCandidate"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  %50 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %44, i64 0, i32 1
  %51 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %43, i64 0, i32 1
  %52 = bitcast %"class.WTF::StringView"* %50 to i8*
  %53 = bitcast %"class.WTF::StringView"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 36, i1 false) #11
  %54 = add nuw nsw i64 %45, 1
  %55 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %43, i64 1
  %56 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %44, i64 1
  %57 = icmp eq %"class.blink::ImageCandidate"* %55, %2
  br i1 %57, label %34, label %42

58:                                               ; preds = %34, %15
  %59 = phi i64 [ %35, %34 ], [ %16, %15 ]
  %60 = icmp eq %"class.blink::ImageCandidate"* %6, null
  %61 = icmp eq i64 %59, 0
  %62 = or i1 %60, %61
  br i1 %62, label %86, label %63

63:                                               ; preds = %58, %82
  %64 = phi i64 [ %83, %82 ], [ 0, %58 ]
  %65 = phi %"class.blink::ImageCandidate"* [ %84, %82 ], [ %6, %58 ]
  %66 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #11
  br label %82

82:                                               ; preds = %81, %78, %63
  %83 = add nuw nsw i64 %64, 1
  %84 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %65, i64 1
  %85 = icmp eq i64 %83, %59
  br i1 %85, label %86, label %63

86:                                               ; preds = %82, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRPFbRKN5blink14ImageCandidateES4_EPS2_S8_S8_EEvT0_S9_T1_SA_T2_T_(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.blink::ImageCandidate"* %0, %1
  br i1 %7, label %106, label %8

8:                                                ; preds = %6, %101
  %9 = phi %"class.blink::ImageCandidate"* [ %103, %101 ], [ %0, %6 ]
  %10 = phi %"class.blink::ImageCandidate"* [ %104, %101 ], [ %4, %6 ]
  %11 = phi %"class.blink::ImageCandidate"* [ %102, %101 ], [ %2, %6 ]
  %12 = icmp eq %"class.blink::ImageCandidate"* %11, %3
  br i1 %12, label %13, label %44

13:                                               ; preds = %8, %36
  %14 = phi %"class.blink::ImageCandidate"* [ %42, %36 ], [ %10, %8 ]
  %15 = phi %"class.blink::ImageCandidate"* [ %41, %36 ], [ %9, %8 ]
  %16 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.blink::ImageCandidate"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %19 = bitcast %"class.blink::ImageCandidate"* %14 to i64*
  %20 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #11
  br label %36

36:                                               ; preds = %35, %32, %13
  %37 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 0, i32 1
  %38 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 1
  %39 = bitcast %"class.WTF::StringView"* %37 to i8*
  %40 = bitcast %"class.WTF::StringView"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 36, i1 false) #11
  %41 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 1
  %42 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %14, i64 1
  %43 = icmp eq %"class.blink::ImageCandidate"* %41, %1
  br i1 %43, label %106, label %13

44:                                               ; preds = %8
  %45 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %5, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::ImageCandidate"* dereferenceable(48) %11, %"class.blink::ImageCandidate"* dereferenceable(48) %9) #11
  br i1 %46, label %47, label %74

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %11, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.blink::ImageCandidate"* %11 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %51 = bitcast %"class.blink::ImageCandidate"* %10 to i64*
  %52 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %10, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #11
  br label %68

68:                                               ; preds = %47, %64, %67
  %69 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %10, i64 0, i32 1
  %70 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %11, i64 0, i32 1
  %71 = bitcast %"class.WTF::StringView"* %69 to i8*
  %72 = bitcast %"class.WTF::StringView"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 36, i1 false) #11
  %73 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %11, i64 1
  br label %101

74:                                               ; preds = %44
  %75 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.blink::ImageCandidate"* %9 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %78 = bitcast %"class.blink::ImageCandidate"* %10 to i64*
  %79 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %10, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  store i64 %77, i64* %78, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #11
  br label %95

95:                                               ; preds = %74, %91, %94
  %96 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %10, i64 0, i32 1
  %97 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 0, i32 1
  %98 = bitcast %"class.WTF::StringView"* %96 to i8*
  %99 = bitcast %"class.WTF::StringView"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 36, i1 false) #11
  %100 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %9, i64 1
  br label %101

101:                                              ; preds = %68, %95
  %102 = phi %"class.blink::ImageCandidate"* [ %73, %68 ], [ %11, %95 ]
  %103 = phi %"class.blink::ImageCandidate"* [ %9, %68 ], [ %100, %95 ]
  %104 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %10, i64 1
  %105 = icmp eq %"class.blink::ImageCandidate"* %103, %1
  br i1 %105, label %106, label %8

106:                                              ; preds = %101, %36, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKN5blink14ImageCandidateES5_EEENS_16reverse_iteratorIPS3_EESC_SC_EEvT0_SD_T1_SE_T2_T_(%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*, %"class.std::__1::reverse_iterator"* byval(%"class.std::__1::reverse_iterator") align 8, %"class.std::__1::reverse_iterator"* byval(%"class.std::__1::reverse_iterator") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = inttoptr i64 %8 to i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)**
  %11 = icmp eq %"class.blink::ImageCandidate"* %1, %3
  br i1 %11, label %113, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 1
  br label %15

15:                                               ; preds = %12, %102
  %16 = phi %"class.blink::ImageCandidate"* [ %1, %12 ], [ %105, %102 ]
  %17 = phi %"class.blink::ImageCandidate"* [ %5, %12 ], [ %104, %102 ]
  %18 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %13, align 8
  %19 = icmp eq %"class.blink::ImageCandidate"* %17, %18
  br i1 %19, label %20, label %53

20:                                               ; preds = %15
  %21 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %14, align 8
  br label %22

22:                                               ; preds = %20, %47
  %23 = phi %"class.blink::ImageCandidate"* [ %25, %47 ], [ %16, %20 ]
  %24 = phi %"class.blink::ImageCandidate"* [ %26, %47 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 -1
  %26 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %24, i64 -1
  %27 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.blink::ImageCandidate"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %30 = bitcast %"class.blink::ImageCandidate"* %26 to i64*
  %31 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #11
  br label %47

47:                                               ; preds = %46, %43, %22
  %48 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %24, i64 -1, i32 1
  %49 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %23, i64 -1, i32 1
  %50 = bitcast %"class.WTF::StringView"* %48 to i8*
  %51 = bitcast %"class.WTF::StringView"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 36, i1 false) #11
  %52 = icmp eq %"class.blink::ImageCandidate"* %25, %3
  br i1 %52, label %113, label %22

53:                                               ; preds = %15
  %54 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %17, i64 -1
  %55 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %16, i64 -1
  %56 = load i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)*, i1 (%"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"*)** %10, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::ImageCandidate"* dereferenceable(48) %55, %"class.blink::ImageCandidate"* dereferenceable(48) %54) #11
  %58 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %14, align 8
  %59 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %58, i64 -1
  br i1 %57, label %60, label %81

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %54, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.blink::ImageCandidate"* %54 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %64 = bitcast %"class.blink::ImageCandidate"* %59 to i64*
  %65 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %59, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %63, i64* %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %102, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %102

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %102

81:                                               ; preds = %53
  %82 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %55, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.blink::ImageCandidate"* %55 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %85 = bitcast %"class.blink::ImageCandidate"* %59 to i64*
  %86 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %59, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #11
  br label %102

102:                                              ; preds = %101, %98, %81, %80, %77, %60
  %103 = phi %"class.blink::ImageCandidate"* [ %17, %60 ], [ %17, %77 ], [ %17, %80 ], [ %16, %81 ], [ %16, %98 ], [ %16, %101 ]
  %104 = phi %"class.blink::ImageCandidate"* [ %54, %60 ], [ %54, %77 ], [ %54, %80 ], [ %17, %81 ], [ %17, %98 ], [ %17, %101 ]
  %105 = phi %"class.blink::ImageCandidate"* [ %16, %60 ], [ %16, %77 ], [ %16, %80 ], [ %55, %81 ], [ %55, %98 ], [ %55, %101 ]
  %106 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %58, i64 -1, i32 1
  %107 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %103, i64 -1, i32 1
  %108 = bitcast %"class.WTF::StringView"* %106 to i8*
  %109 = bitcast %"class.WTF::StringView"* %107 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 36, i1 false) #11
  %110 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %14, align 8
  %111 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %110, i64 -1
  store %"class.blink::ImageCandidate"* %111, %"class.blink::ImageCandidate"** %14, align 8
  %112 = icmp eq %"class.blink::ImageCandidate"* %105, %3
  br i1 %112, label %113, label %15

113:                                              ; preds = %102, %47, %9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.1720"*, %"class.blink::ImageCandidate"** dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ImageCandidate"**, %"class.blink::ImageCandidate"*** %6, align 8
  %8 = icmp ugt %"class.blink::ImageCandidate"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %7, i64 %10
  %12 = icmp ugt %"class.blink::ImageCandidate"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::ImageCandidate"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14ImageCandidateEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14ImageCandidateEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1720"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::ImageCandidate"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::ImageCandidate"**, %"class.blink::ImageCandidate"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::ImageCandidate"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::ImageCandidate"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.1720"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.1720"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::ImageCandidate"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::ImageCandidate"** %1 to i64
  %56 = ptrtoint %"class.blink::ImageCandidate"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::ImageCandidate"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14ImageCandidateEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink14ImageCandidateEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1720"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::ImageCandidate"**, %"class.blink::ImageCandidate"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::ImageCandidate"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::ImageCandidate"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.1720"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.1720"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::ImageCandidate"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::ImageCandidate"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::ImageCandidate"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::ImageCandidate"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %100, i64 %103
  %105 = bitcast %"class.blink::ImageCandidate"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::ImageCandidate"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink14ImageCandidateEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #10

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() local_unnamed_addr #2

declare %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15ResourceFetcher18GetCacheIdentifierERKNS_4KURLE(%"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::ImageCandidate"** @_ZN3WTF6VectorIPN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1720"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1720", %"class.WTF::Vector.1720"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageCandidate"**, %"class.blink::ImageCandidate"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %24, i64 %25
  ret %"class.blink::ImageCandidate"** %26
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1051"*, %"class.blink::ImageCandidate"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::ImageCandidate"* @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1051"* %0, i32 %5, %"class.blink::ImageCandidate"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 %10
  %12 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::ImageCandidate"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::ImageCandidate"* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 %10, i32 1
  %17 = bitcast %"class.WTF::StringView"* %16 to i8*
  %18 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1
  %19 = bitcast %"class.WTF::StringView"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 36, i1 false) #11
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ImageCandidate"* @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1051"*, i32, %"class.blink::ImageCandidate"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %4, align 8
  %6 = icmp ugt %"class.blink::ImageCandidate"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %5, i64 %10
  %12 = icmp ugt %"class.blink::ImageCandidate"* %11, %2
  br i1 %12, label %35, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %66, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::ImageCandidate"* %5, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14ImageCandidateEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ImageCandidateEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1051"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 48
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %66

34:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1051"* %0, i32 %22) #11
  br label %66

35:                                               ; preds = %7
  %36 = ptrtoint %"class.blink::ImageCandidate"* %2 to i64
  %37 = ptrtoint %"class.blink::ImageCandidate"* %5 to i64
  %38 = sub i64 %36, %37
  %39 = sdiv exact i64 %38, 48
  %40 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = lshr i32 %41, 2
  %43 = add i32 %41, 1
  %44 = add i32 %43, %42
  %45 = icmp ugt i32 %44, 4
  %46 = select i1 %45, i32 %44, i32 4
  %47 = icmp ugt i32 %46, %1
  %48 = select i1 %47, i32 %46, i32 %1
  %49 = icmp ult i32 %41, %48
  br i1 %49, label %50, label %63, !prof !2

50:                                               ; preds = %35
  %51 = icmp eq %"class.blink::ImageCandidate"* %5, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %50
  %53 = zext i32 %48 to i64
  %54 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14ImageCandidateEEEmm(i64 %53) #11
  %55 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %54, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ImageCandidateEEEPKcv, i64 0, i64 0)) #11
  %56 = ptrtoint i8* %55 to i64
  %57 = bitcast %"class.WTF::Vector.1051"* %0 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = udiv i64 %54, 48
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %40, align 8
  %60 = bitcast i8* %55 to %"class.blink::ImageCandidate"*
  br label %63

61:                                               ; preds = %50
  tail call void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1051"* %0, i32 %48) #11
  %62 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %4, align 8
  br label %63

63:                                               ; preds = %35, %52, %61
  %64 = phi %"class.blink::ImageCandidate"* [ %5, %35 ], [ %60, %52 ], [ %62, %61 ]
  %65 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %64, i64 %39
  br label %66

66:                                               ; preds = %34, %26, %13, %63
  %67 = phi %"class.blink::ImageCandidate"* [ %65, %63 ], [ %2, %13 ], [ %2, %26 ], [ %2, %34 ]
  ret %"class.blink::ImageCandidate"* %67
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1051"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %46

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1051"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %4, %40
  %15 = phi %"class.blink::ImageCandidate"* [ %42, %40 ], [ %6, %4 ]
  %16 = phi %"class.blink::ImageCandidate"* [ %41, %40 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.blink::ImageCandidate"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::ImageCandidate"* %16 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %16, i64 0, i32 1
  %22 = bitcast %"class.WTF::StringView"* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 0, i32 1
  %24 = bitcast %"class.WTF::StringView"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %24, i64 36, i1 false) #11
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #11
  br label %40

40:                                               ; preds = %39, %36, %14
  %41 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %16, i64 1
  %42 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %15, i64 1
  %43 = icmp eq %"class.blink::ImageCandidate"* %42, %10
  br i1 %43, label %44, label %14

44:                                               ; preds = %40, %4
  %45 = bitcast %"class.blink::ImageCandidate"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #11
  br label %101

46:                                               ; preds = %2
  %47 = zext i32 %1 to i64
  %48 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14ImageCandidateEEEmm(i64 %47) #11
  %49 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ImageCandidateEEEPKcv, i64 0, i64 0)) #11
  %50 = udiv i64 %48, 48
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %52, align 8
  %54 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %53, i64 %56
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %46
  %60 = bitcast %"class.blink::ImageCandidate"* %53 to i8*
  br label %96

61:                                               ; preds = %46
  %62 = bitcast i8* %49 to %"class.blink::ImageCandidate"*
  br label %63

63:                                               ; preds = %61, %89
  %64 = phi %"class.blink::ImageCandidate"* [ %91, %89 ], [ %53, %61 ]
  %65 = phi %"class.blink::ImageCandidate"* [ %90, %89 ], [ %62, %61 ]
  %66 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %64, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.blink::ImageCandidate"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::ImageCandidate"* %65 to i64*
  store i64 %68, i64* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %70 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %65, i64 0, i32 1
  %71 = bitcast %"class.WTF::StringView"* %70 to i8*
  %72 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %64, i64 0, i32 1
  %73 = bitcast %"class.WTF::StringView"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %73, i64 36, i1 false) #11
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #11
  br label %89

89:                                               ; preds = %88, %85, %63
  %90 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %65, i64 1
  %91 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %64, i64 1
  %92 = icmp eq %"class.blink::ImageCandidate"* %91, %57
  br i1 %92, label %93, label %63

93:                                               ; preds = %89
  %94 = bitcast %"class.WTF::Vector.1051"* %0 to i8**
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %59, %93
  %97 = phi i8* [ %95, %93 ], [ %60, %59 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %97) #11
  %98 = bitcast %"class.WTF::Vector.1051"* %0 to i64*
  store atomic i64 %51, i64* %98 monotonic, align 8
  %99 = trunc i64 %50 to i32
  %100 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %99, i32* %100, align 8
  br label %101

101:                                              ; preds = %96, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14ImageCandidateEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 44695552
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 44695552) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 48
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1051"*, %"class.blink::ImageCandidate"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"class.blink::ImageCandidate"* @_ZN3WTF6VectorIN5blink14ImageCandidateELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.1051"* %0, i32 %5, %"class.blink::ImageCandidate"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.1051", %"class.WTF::Vector.1051"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ImageCandidate"*, %"class.blink::ImageCandidate"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 %10, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %8, i64 %10, i32 1
  %34 = bitcast %"class.WTF::StringView"* %33 to i8*
  %35 = getelementptr inbounds %"class.blink::ImageCandidate", %"class.blink::ImageCandidate"* %6, i64 0, i32 1
  %36 = bitcast %"class.WTF::StringView"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %36, i64 36, i1 false) #11
  %37 = load i32, i32* %3, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
