; ModuleID = '../../ui/gl/gl_image_glx.cc'
source_filename = "../../ui/gl/gl_image_glx.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::GLXApi" = type { i32 (...)** }
%"class.gl::GLImageGLX" = type { %"class.gl::GLImage", i32, %"class.gfx::Size", i32 }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%"class.x11::XlibDisplayWrapper" = type <{ %struct._XDisplay*, i32, [4 x i8] }>
%struct._XDisplay = type opaque
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.ui::VisualPickerGlx" = type { %"class.x11::Connection"*, i32, i32, %"class.std::__1::unique_ptr.257" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.base::flat_map.260"* }
%"class.base::flat_map.260" = type opaque
%struct.__GLXFBConfigRec = type opaque
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::trace_event::ProcessMemoryDump" = type opaque

$_ZN2gl10GLImageGLX5FlushEv = comdat any

@_ZTVN2gl10GLImageGLXE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32)* @_ZN2gl10GLImageGLX12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*, i32)* @_ZN2gl10GLImageGLX15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32)* @_ZN2gl10GLImageGLX12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl10GLImageGLX15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (i1 (%"class.gl::GLImageGLX"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl10GLImageGLX20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImage"*, %"class.gfx::ColorSpace"*)* @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLX5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl10GLImageGLX12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (void ()* @_ZN2gl7GLImage15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLXD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLXD0Ev to i8*)] }, align 8
@_ZN2gl21g_current_glx_contextE = external local_unnamed_addr global %"class.gl::GLXApi"*, align 8
@switch.table._ZN2gl10GLImageGLX10InitializeEN3x116PixmapE = private unnamed_addr constant [8 x i32] [i32 8409, i32 0, i32 0, i32 0, i32 8409, i32 8409, i32 0, i32 8410], align 4

@_ZN2gl10GLImageGLXC1ERKN3gfx4SizeENS1_12BufferFormatE = hidden unnamed_addr alias void (%"class.gl::GLImageGLX"*, %"class.gfx::Size"*, i32), void (%"class.gl::GLImageGLX"*, %"class.gfx::Size"*, i32)* @_ZN2gl10GLImageGLXC2ERKN3gfx4SizeENS1_12BufferFormatE
@_ZN2gl10GLImageGLXD1Ev = hidden unnamed_addr alias void (%"class.gl::GLImageGLX"*), void (%"class.gl::GLImageGLX"*)* @_ZN2gl10GLImageGLXD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10GLImageGLXC2ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageGLX"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 0, i32 2, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 68, i1 false) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl10GLImageGLXE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 2
  %9 = bitcast %"class.gfx::Size"* %1 to i64*
  %10 = bitcast %"class.gfx::Size"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 3
  store i32 %2, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10GLImageGLXD2Ev(%"class.gl::GLImageGLX"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %3 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl10GLImageGLXE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = load %"class.gl::GLXApi"*, %"class.gl::GLXApi"** @_ZN2gl21g_current_glx_contextE, align 8
  %9 = bitcast %"class.x11::XlibDisplayWrapper"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %2, %"class.x11::Connection"* %10, i32 1) #7
  %11 = getelementptr inbounds %"class.x11::XlibDisplayWrapper", %"class.x11::XlibDisplayWrapper"* %2, i64 0, i32 0
  %12 = load %struct._XDisplay*, %struct._XDisplay** %11, align 8
  %13 = load i32, i32* %4, align 8
  %14 = zext i32 %13 to i64
  %15 = bitcast %"class.gl::GLXApi"* %8 to void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)***
  %16 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)**, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)** %16, i64 16
  %18 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)** %17, align 8
  call void %18(%"class.gl::GLXApi"* %8, %struct._XDisplay* %12, i64 %14) #7
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %19

19:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #2

declare void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* sret, %"class.x11::Connection"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10GLImageGLXD0Ev(%"class.gl::GLImageGLX"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %3 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl10GLImageGLXE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = load %"class.gl::GLXApi"*, %"class.gl::GLXApi"** @_ZN2gl21g_current_glx_contextE, align 8
  %9 = bitcast %"class.x11::XlibDisplayWrapper"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %2, %"class.x11::Connection"* %10, i32 1) #7
  %11 = getelementptr inbounds %"class.x11::XlibDisplayWrapper", %"class.x11::XlibDisplayWrapper"* %2, i64 0, i32 0
  %12 = load %struct._XDisplay*, %struct._XDisplay** %11, align 8
  %13 = load i32, i32* %4, align 8
  %14 = zext i32 %13 to i64
  %15 = bitcast %"class.gl::GLXApi"* %8 to void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)***
  %16 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)**, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)** %16, i64 16
  %18 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64)** %17, align 8
  call void %18(%"class.gl::GLXApi"* %8, %struct._XDisplay* %12, i64 %14) #7
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  br label %19

19:                                               ; preds = %1, %7
  %20 = bitcast %"class.gl::GLImageGLX"* %0 to i8*
  call void @_ZdlPv(i8* %20) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl10GLImageGLX10InitializeEN3x116PixmapE(%"class.gl::GLImageGLX"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [5 x i32], align 16
  %4 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %5 = tail call %"class.ui::VisualPickerGlx"* @_ZN2ui15VisualPickerGlx11GetInstanceEv() #7
  %6 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZN2ui15VisualPickerGlx20GetFbConfigForFormatEN3gfx12BufferFormatE(%"class.ui::VisualPickerGlx"* %5, i32 %7) #7
  %9 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %10 = tail call %struct.__GLXFBConfigRec* @_ZN2gl31GetGlxFbConfigForXProtoFbConfigEPN3x1110ConnectionENS0_3Glx8FbConfigE(%"class.x11::Connection"* %9, i32 %8) #7
  %11 = icmp eq %struct.__GLXFBConfigRec* %10, null
  br i1 %11, label %44, label %12

12:                                               ; preds = %2
  %13 = bitcast [5 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %13) #7
  %14 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 0
  %15 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 1
  %16 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 2
  %17 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 3
  %18 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 4
  %19 = bitcast [5 x i32]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 20, i1 false)
  store i32 8406, i32* %14, align 16
  store i32 8412, i32* %15, align 4
  store i32 8405, i32* %16, align 8
  %20 = load i32, i32* %6, align 4
  %21 = add i32 %20, -3
  %22 = icmp ult i32 %21, 8
  br i1 %22, label %23, label %27

23:                                               ; preds = %12
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN2gl10GLImageGLX10InitializeEN3x116PixmapE, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %12, %23
  %28 = phi i32 [ %26, %23 ], [ 0, %12 ]
  store i32 %28, i32* %17, align 4
  store i32 0, i32* %18, align 16
  %29 = load %"class.gl::GLXApi"*, %"class.gl::GLXApi"** @_ZN2gl21g_current_glx_contextE, align 8
  %30 = bitcast %"class.x11::XlibDisplayWrapper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #7
  %31 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %4, %"class.x11::Connection"* %31, i32 2) #7
  %32 = getelementptr inbounds %"class.x11::XlibDisplayWrapper", %"class.x11::XlibDisplayWrapper"* %4, i64 0, i32 0
  %33 = load %struct._XDisplay*, %struct._XDisplay** %32, align 8
  %34 = zext i32 %1 to i64
  %35 = bitcast %"class.gl::GLXApi"* %29 to i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)***
  %36 = load i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)**, i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)*, i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)** %36, i64 13
  %38 = load i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)*, i64 (%"class.gl::GLXApi"*, %struct._XDisplay*, %struct.__GLXFBConfigRec*, i64, i32*)** %37, align 8
  %39 = call i64 %38(%"class.gl::GLXApi"* %29, %struct._XDisplay* %33, %struct.__GLXFBConfigRec* nonnull %10, i64 %34, i32* nonnull %14) #7
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 1
  store i32 %40, i32* %41, align 8
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #7
  %42 = load i32, i32* %41, align 8
  %43 = icmp ne i32 %42, 0
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %13) #7
  br label %44

44:                                               ; preds = %2, %27
  %45 = phi i1 [ %43, %27 ], [ false, %2 ]
  ret i1 %45
}

declare %"class.ui::VisualPickerGlx"* @_ZN2ui15VisualPickerGlx11GetInstanceEv() local_unnamed_addr #2

declare i32 @_ZN2ui15VisualPickerGlx20GetFbConfigForFormatEN3gfx12BufferFormatE(%"class.ui::VisualPickerGlx"*, i32) local_unnamed_addr #2

declare %struct.__GLXFBConfigRec* @_ZN2gl31GetGlxFbConfigForXProtoFbConfigEPN3x1110ConnectionENS0_3Glx8FbConfigE(%"class.x11::Connection"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl10GLImageGLX7GetSizeEv(%"class.gl::GLImageGLX"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 2
  %3 = bitcast %"class.gfx::Size"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl10GLImageGLX17GetInternalFormatEv(%"class.gl::GLImageGLX"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32 %3) #7
  ret i32 %4
}

declare i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl10GLImageGLX11GetDataTypeEv(%"class.gl::GLImageGLX"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 5121
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl10GLImageGLX16ShouldBindOrCopyEv(%"class.gl::GLImageGLX"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl10GLImageGLX12BindTexImageEj(%"class.gl::GLImageGLX"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %4 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  %7 = icmp eq i32 %1, 3553
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %21

9:                                                ; preds = %2
  %10 = load %"class.gl::GLXApi"*, %"class.gl::GLXApi"** @_ZN2gl21g_current_glx_contextE, align 8
  %11 = bitcast %"class.x11::XlibDisplayWrapper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %3, %"class.x11::Connection"* %12, i32 1) #7
  %13 = getelementptr inbounds %"class.x11::XlibDisplayWrapper", %"class.x11::XlibDisplayWrapper"* %3, i64 0, i32 0
  %14 = load %struct._XDisplay*, %struct._XDisplay** %13, align 8
  %15 = load i32, i32* %4, align 8
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.gl::GLXApi"* %10 to void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)***
  %18 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)**, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)** %18, i64 3
  %20 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32, i32*)** %19, align 8
  call void %20(%"class.gl::GLXApi"* %10, %struct._XDisplay* %14, i64 %16, i32 8414, i32* null) #7
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  br label %21

21:                                               ; preds = %2, %9
  %22 = phi i1 [ true, %9 ], [ false, %2 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl10GLImageGLX15ReleaseTexImageEj(%"class.gl::GLImageGLX"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.x11::XlibDisplayWrapper", align 8
  %4 = load %"class.gl::GLXApi"*, %"class.gl::GLXApi"** @_ZN2gl21g_current_glx_contextE, align 8
  %5 = bitcast %"class.x11::XlibDisplayWrapper"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  call void @_ZN3x1110Connection14GetXlibDisplayENS_15XlibDisplayTypeE(%"class.x11::XlibDisplayWrapper"* nonnull sret %3, %"class.x11::Connection"* %6, i32 1) #7
  %7 = getelementptr inbounds %"class.x11::XlibDisplayWrapper", %"class.x11::XlibDisplayWrapper"* %3, i64 0, i32 0
  %8 = load %struct._XDisplay*, %struct._XDisplay** %7, align 8
  %9 = getelementptr inbounds %"class.gl::GLImageGLX", %"class.gl::GLImageGLX"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = bitcast %"class.gl::GLXApi"* %4 to void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)***
  %13 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)**, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)** %13, i64 42
  %15 = load void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)*, void (%"class.gl::GLXApi"*, %struct._XDisplay*, i64, i32)** %14, align 8
  call void %15(%"class.gl::GLXApi"* %4, %struct._XDisplay* %8, i64 %11, i32 8414) #7
  call void @_ZN3x1118XlibDisplayWrapperD1Ev(%"class.x11::XlibDisplayWrapper"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl10GLImageGLX12CopyTexImageEj(%"class.gl::GLImageGLX"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl10GLImageGLX15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImageGLX"* nocapture readnone, i32, %"class.gfx::Point"* nocapture readnone dereferenceable(8), %"class.gfx::Rect"* nocapture readnone dereferenceable(16)) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl10GLImageGLX20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE(%"class.gl::GLImageGLX"* nocapture readnone, i32, i32, i32, %"class.gfx::Rect"* nocapture readnone dereferenceable(16), %"class.gfx::RectF"* nocapture readnone dereferenceable(16), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = inttoptr i64 %7 to %"class.gfx::GpuFence"*
  tail call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %11) #7
  %12 = inttoptr i64 %7 to i8*
  tail call void @_ZdlPv(i8* %12) #8
  br label %13

13:                                               ; preds = %8, %10
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl10GLImageGLX12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImageGLX"* nocapture, %"class.base::trace_event::ProcessMemoryDump"* nocapture, i64, %"class.std::__1::basic_string"* nocapture dereferenceable(24)) unnamed_addr #6 align 2 {
  ret void
}

declare i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"*) unnamed_addr #2

declare zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"*, i32, i32) unnamed_addr #2

declare void @_ZN2gl7GLImage13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImage"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl10GLImageGLX5FlushEv(%"class.gl::GLImageGLX"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #2

declare void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #2

declare i32 @_ZNK2gl7GLImage7GetTypeEv(%"class.gl::GLImage"*) unnamed_addr #2

declare zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"*) unnamed_addr #2

declare void @_ZN2gl7GLImage15GetNativePixmapEv() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
