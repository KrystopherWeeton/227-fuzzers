; ModuleID = '../../third_party/libphonenumber/dist/cpp/src/phonenumbers/string_byte_sink.cc'
source_filename = "../../third_party/libphonenumber/dist/cpp/src/phonenumbers/string_byte_sink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.i18n::phonenumbers::StringByteSink" = type { %"class.icu_69::ByteSink", %"class.std::__1::basic_string"* }
%"class.icu_69::ByteSink" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@_ZTVN4i18n12phonenumbers14StringByteSinkE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.i18n::phonenumbers::StringByteSink"*)* @_ZN4i18n12phonenumbers14StringByteSinkD2Ev to i8*), i8* bitcast (void (%"class.i18n::phonenumbers::StringByteSink"*)* @_ZN4i18n12phonenumbers14StringByteSinkD0Ev to i8*), i8* bitcast (void (%"class.i18n::phonenumbers::StringByteSink"*, i8*, i32)* @_ZN4i18n12phonenumbers14StringByteSink6AppendEPKci to i8*), i8* bitcast (i8* (%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*)* @_ZN6icu_698ByteSink15GetAppendBufferEiiPciPi to i8*), i8* bitcast (void (%"class.icu_69::ByteSink"*)* @_ZN6icu_698ByteSink5FlushEv to i8*)] }, align 8

@_ZN4i18n12phonenumbers14StringByteSinkC1EPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.i18n::phonenumbers::StringByteSink"*, %"class.std::__1::basic_string"*), void (%"class.i18n::phonenumbers::StringByteSink"*, %"class.std::__1::basic_string"*)* @_ZN4i18n12phonenumbers14StringByteSinkC2EPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE
@_ZN4i18n12phonenumbers14StringByteSinkD1Ev = hidden unnamed_addr alias void (%"class.i18n::phonenumbers::StringByteSink"*), void (%"class.i18n::phonenumbers::StringByteSink"*)* @_ZN4i18n12phonenumbers14StringByteSinkD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4i18n12phonenumbers14StringByteSinkC2EPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::phonenumbers::StringByteSink"* nocapture, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.i18n::phonenumbers::StringByteSink", %"class.i18n::phonenumbers::StringByteSink"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4i18n12phonenumbers14StringByteSinkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.i18n::phonenumbers::StringByteSink", %"class.i18n::phonenumbers::StringByteSink"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %4, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_698ByteSinkD2Ev(%"class.icu_69::ByteSink"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12phonenumbers14StringByteSinkD2Ev(%"class.i18n::phonenumbers::StringByteSink"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.i18n::phonenumbers::StringByteSink", %"class.i18n::phonenumbers::StringByteSink"* %0, i64 0, i32 0
  tail call void @_ZN6icu_698ByteSinkD2Ev(%"class.icu_69::ByteSink"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12phonenumbers14StringByteSinkD0Ev(%"class.i18n::phonenumbers::StringByteSink"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.i18n::phonenumbers::StringByteSink", %"class.i18n::phonenumbers::StringByteSink"* %0, i64 0, i32 0
  tail call void @_ZN6icu_698ByteSinkD2Ev(%"class.icu_69::ByteSink"* %2) #4
  %3 = bitcast %"class.i18n::phonenumbers::StringByteSink"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12phonenumbers14StringByteSink6AppendEPKci(%"class.i18n::phonenumbers::StringByteSink"* nocapture readonly, i8*, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.i18n::phonenumbers::StringByteSink", %"class.i18n::phonenumbers::StringByteSink"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %5, i8* %1, i64 %6) #4
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare i8* @_ZN6icu_698ByteSink15GetAppendBufferEiiPciPi(%"class.icu_69::ByteSink"*, i32, i32, i8*, i32, i32*) unnamed_addr #3

declare void @_ZN6icu_698ByteSink5FlushEv(%"class.icu_69::ByteSink"*) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
