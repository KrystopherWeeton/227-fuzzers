; ModuleID = 'gen/components/metrics/public/mojom/single_sample_metrics.mojom-test-utils.cc'
source_filename = "gen/components/metrics/public/mojom/single_sample_metrics.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter" = type { %"class.metrics::mojom::SingleSampleMetricsProvider"* }
%"class.metrics::mojom::SingleSampleMetricsProvider" = type { i32 (...)** }
%"class.metrics::mojom::SingleSampleMetricAsyncWaiter" = type { %"class.metrics::mojom::SingleSampleMetric"* }
%"class.metrics::mojom::SingleSampleMetric" = type { i32 (...)** }
%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting" = type { %"class.metrics::mojom::SingleSampleMetricsProvider" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.4, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.6", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.3", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.4 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.5" }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting" = type { %"class.metrics::mojom::SingleSampleMetric" }

$_ZN7metrics5mojom27SingleSampleMetricsProviderD2Ev = comdat any

$_ZN7metrics5mojom48SingleSampleMetricsProviderInterceptorForTestingD0Ev = comdat any

$_ZN7metrics5mojom18SingleSampleMetricD2Ev = comdat any

$_ZN7metrics5mojom39SingleSampleMetricInterceptorForTestingD0Ev = comdat any

@_ZTVN7metrics5mojom48SingleSampleMetricsProviderInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.metrics::mojom::SingleSampleMetricsProvider"*)* @_ZN7metrics5mojom27SingleSampleMetricsProviderD2Ev to i8*), i8* bitcast (void (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)* @_ZN7metrics5mojom48SingleSampleMetricsProviderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)* @_ZN7metrics5mojom48SingleSampleMetricsProviderInterceptorForTesting25AcquireSingleSampleMetricERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiijiN4mojo15PendingReceiverINS0_18SingleSampleMetricEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7metrics5mojom39SingleSampleMetricInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.metrics::mojom::SingleSampleMetric"*)* @_ZN7metrics5mojom18SingleSampleMetricD2Ev to i8*), i8* bitcast (void (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)* @_ZN7metrics5mojom39SingleSampleMetricInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*, i32)* @_ZN7metrics5mojom39SingleSampleMetricInterceptorForTesting9SetSampleEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7metrics5mojom38SingleSampleMetricsProviderAsyncWaiterC1EPNS0_27SingleSampleMetricsProviderE = hidden unnamed_addr alias void (%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"*, %"class.metrics::mojom::SingleSampleMetricsProvider"*), void (%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"*, %"class.metrics::mojom::SingleSampleMetricsProvider"*)* @_ZN7metrics5mojom38SingleSampleMetricsProviderAsyncWaiterC2EPNS0_27SingleSampleMetricsProviderE
@_ZN7metrics5mojom38SingleSampleMetricsProviderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"*), void (%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"*)* @_ZN7metrics5mojom38SingleSampleMetricsProviderAsyncWaiterD2Ev
@_ZN7metrics5mojom29SingleSampleMetricAsyncWaiterC1EPNS0_18SingleSampleMetricE = hidden unnamed_addr alias void (%"class.metrics::mojom::SingleSampleMetricAsyncWaiter"*, %"class.metrics::mojom::SingleSampleMetric"*), void (%"class.metrics::mojom::SingleSampleMetricAsyncWaiter"*, %"class.metrics::mojom::SingleSampleMetric"*)* @_ZN7metrics5mojom29SingleSampleMetricAsyncWaiterC2EPNS0_18SingleSampleMetricE
@_ZN7metrics5mojom29SingleSampleMetricAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.metrics::mojom::SingleSampleMetricAsyncWaiter"*), void (%"class.metrics::mojom::SingleSampleMetricAsyncWaiter"*)* @_ZN7metrics5mojom29SingleSampleMetricAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics5mojom48SingleSampleMetricsProviderInterceptorForTesting25AcquireSingleSampleMetricERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiijiN4mojo15PendingReceiverINS0_18SingleSampleMetricEEE(%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32, i32, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingReceiver", align 8
  %9 = bitcast %"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"* %0 to %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)***
  %10 = load %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)**, %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)*, %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)** %10, i64 3
  %12 = load %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)*, %"class.metrics::mojom::SingleSampleMetricsProvider"* (%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.metrics::mojom::SingleSampleMetricsProvider"* %12(%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"* %0) #6
  %14 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %8, i64 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %14, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %15) #6
  %16 = bitcast %"class.metrics::mojom::SingleSampleMetricsProvider"* %13 to void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)***
  %17 = load void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)**, void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)*, void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)** %17, i64 2
  %19 = load void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)*, void (%"class.metrics::mojom::SingleSampleMetricsProvider"*, %"class.std::__1::basic_string"*, i32, i32, i32, i32, %"class.mojo::PendingReceiver"*)** %18, align 8
  call void %19(%"class.metrics::mojom::SingleSampleMetricsProvider"* %13, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2, i32 %3, i32 %4, i32 %5, %"class.mojo::PendingReceiver"* nonnull %8) #6
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %14) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7metrics5mojom38SingleSampleMetricsProviderAsyncWaiterC2EPNS0_27SingleSampleMetricsProviderE(%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"* nocapture, %"class.metrics::mojom::SingleSampleMetricsProvider"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter", %"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.metrics::mojom::SingleSampleMetricsProvider"* %1, %"class.metrics::mojom::SingleSampleMetricsProvider"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7metrics5mojom38SingleSampleMetricsProviderAsyncWaiterD2Ev(%"class.metrics::mojom::SingleSampleMetricsProviderAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7metrics5mojom39SingleSampleMetricInterceptorForTesting9SetSampleEi(%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"* %0 to %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)***
  %4 = load %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)**, %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)*, %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)*, %"class.metrics::mojom::SingleSampleMetric"* (%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.metrics::mojom::SingleSampleMetric"* %6(%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"* %0) #6
  %8 = bitcast %"class.metrics::mojom::SingleSampleMetric"* %7 to void (%"class.metrics::mojom::SingleSampleMetric"*, i32)***
  %9 = load void (%"class.metrics::mojom::SingleSampleMetric"*, i32)**, void (%"class.metrics::mojom::SingleSampleMetric"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.metrics::mojom::SingleSampleMetric"*, i32)*, void (%"class.metrics::mojom::SingleSampleMetric"*, i32)** %9, i64 2
  %11 = load void (%"class.metrics::mojom::SingleSampleMetric"*, i32)*, void (%"class.metrics::mojom::SingleSampleMetric"*, i32)** %10, align 8
  tail call void %11(%"class.metrics::mojom::SingleSampleMetric"* %7, i32 %1) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7metrics5mojom29SingleSampleMetricAsyncWaiterC2EPNS0_18SingleSampleMetricE(%"class.metrics::mojom::SingleSampleMetricAsyncWaiter"* nocapture, %"class.metrics::mojom::SingleSampleMetric"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.metrics::mojom::SingleSampleMetricAsyncWaiter", %"class.metrics::mojom::SingleSampleMetricAsyncWaiter"* %0, i64 0, i32 0
  store %"class.metrics::mojom::SingleSampleMetric"* %1, %"class.metrics::mojom::SingleSampleMetric"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7metrics5mojom29SingleSampleMetricAsyncWaiterD2Ev(%"class.metrics::mojom::SingleSampleMetricAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics5mojom27SingleSampleMetricsProviderD2Ev(%"class.metrics::mojom::SingleSampleMetricsProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics5mojom48SingleSampleMetricsProviderInterceptorForTestingD0Ev(%"class.metrics::mojom::SingleSampleMetricsProviderInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics5mojom18SingleSampleMetricD2Ev(%"class.metrics::mojom::SingleSampleMetric"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7metrics5mojom39SingleSampleMetricInterceptorForTestingD0Ev(%"class.metrics::mojom::SingleSampleMetricInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
