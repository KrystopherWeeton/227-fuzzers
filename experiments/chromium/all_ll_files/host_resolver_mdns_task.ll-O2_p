; ModuleID = '../../net/dns/host_resolver_mdns_task.cc'
source_filename = "../../net/dns/host_resolver_mdns_task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HostResolverMdnsTask" = type { %"class.net::MDnsClient"*, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"*, %"class.std::__1::__compressed_pair.47" }
%"class.net::HostResolverMdnsTask::Transaction" = type { i32, [4 x i8], %"class.net::HostCache::Entry", %"class.std::__1::unique_ptr", %"class.net::HostResolverMdnsTask"* }
%"class.net::HostCache::Entry" = type <{ i32, [4 x i8], %"class.absl::optional", %"class.absl::optional.16", %"class.absl::optional.21", %"class.absl::optional.33", i32, i8, [3 x i8], %"class.base::TimeDelta", %"class.base::TimeTicks", i32, %"class.base::internal::ClampedNumeric", %"class.base::internal::ClampedNumeric", [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.net::AddressList" }
%"class.net::AddressList" = type { %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.4" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.std::__1::vector.9" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.net::HostPortPair"*, %"class.net::HostPortPair"*, %"class.std::__1::__compressed_pair.28" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.net::HostPortPair"* }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.std::__1::vector.38" }
%"class.std::__1::vector.38" = type { i64*, i64, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.net::MDnsTransaction"* }
%"class.net::MDnsTransaction" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.net::HostResolverMdnsTask::Transaction"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.54", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.54" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.net::MDnsClient" = type { i32 (...)** }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { i32*, i32*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.net::RecordParsed" = type { i32 (...)**, %"class.std::__1::basic_string", i16, i16, i32, %"class.std::__1::unique_ptr.69", %"class.base::Time" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.net::RecordRdata"* }
%"class.net::RecordRdata" = type { i32 (...)** }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.75" }
%"class.base::time_internal::TimeBase.75" = type { i64 }
%"class.net::ARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::AAAARecordRdata" = type <{ %"class.net::RecordRdata", %"class.net::IPAddress", [7 x i8] }>
%"class.net::TxtRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::vector.9" }
%"class.net::PtrRecordRdata" = type { %"class.net::RecordRdata", %"class.std::__1::basic_string" }
%"class.net::SrvRecordRdata" = type { %"class.net::RecordRdata", i16, i16, i16, %"class.std::__1::basic_string" }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.89 }
%class.scoped_refptr.89 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%class.scoped_refptr.85 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.86" }>
%"class.base::RefCountedThreadSafe.86" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.86", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3net20HostResolverMdnsTask11Transaction5StartEv = comdat any

$_ZN3net20HostResolverMdnsTask11Transaction10OnCompleteENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net20HostResolverMdnsTask11TransactionEFvNS3_15MDnsTransaction6ResultEPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEFvS7_SA_EE3RunEPNS0_13BindStateBaseES7_SA_ = comdat any

$_ZN4base8internal9BindStateIMN3net20HostResolverMdnsTask11TransactionEFvNS2_15MDnsTransaction6ResultEPKNS2_12RecordParsedEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN3net20HostResolverMdnsTask11TransactionENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRNS1_12DnsQueryTypeEPS2_EEEvDpOT_ = comdat any

$_ZN3net9HostCache5EntryC2IRKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEEEiOT_NS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE = comdat any

@.str = private unnamed_addr constant [9 x i8] c"Complete\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../net/dns/host_resolver_mdns_task.cc\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@switch.table._ZN3net20HostResolverMdnsTask11Transaction10OnCompleteENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE = private unnamed_addr constant [4 x i32] [i32 0, i32 -9, i32 -105, i32 -105], align 4

@_ZN3net20HostResolverMdnsTaskC1EPNS_10MDnsClientERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_12DnsQueryTypeENS7_ISD_EEEE = hidden unnamed_addr alias void (%"class.net::HostResolverMdnsTask"*, %"class.net::MDnsClient"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.60"*), void (%"class.net::HostResolverMdnsTask"*, %"class.net::MDnsClient"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.60"*)* @_ZN3net20HostResolverMdnsTaskC2EPNS_10MDnsClientERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_12DnsQueryTypeENS7_ISD_EEEE
@_ZN3net20HostResolverMdnsTaskD1Ev = hidden unnamed_addr alias void (%"class.net::HostResolverMdnsTask"*), void (%"class.net::HostResolverMdnsTask"*)* @_ZN3net20HostResolverMdnsTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HostResolverMdnsTaskC2EPNS_10MDnsClientERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_12DnsQueryTypeENS7_ISD_EEEE(%"class.net::HostResolverMdnsTask"*, %"class.net::MDnsClient"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.60"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.net::HostResolverMdnsTask"*, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 0
  store %"class.net::MDnsClient"* %1, %"class.net::MDnsClient"** %7, align 8
  %8 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #8
  br label %21

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %8, i8* %18, i64 %20) #8
  br label %21

21:                                               ; preds = %13, %16
  %22 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 4, i32 0
  %24 = ptrtoint %"class.net::HostResolverMdnsTask"* %0 to i64
  %25 = bitcast %"class.std::__1::vector"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %23, i64 %24) #8
  %26 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %3, i64 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %3, i64 0, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %27, %29
  br i1 %30, label %37, label %31

31:                                               ; preds = %21
  %32 = bitcast i32* %5 to i8*
  %33 = bitcast %"class.net::HostResolverMdnsTask"** %6 to i8*
  %34 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 1
  %35 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.net::HostResolverMdnsTask::Transaction"** %34 to i64*
  br label %38

37:                                               ; preds = %54, %21
  ret void

38:                                               ; preds = %31, %54
  %39 = phi i32* [ %27, %31 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #8
  store i32 -1431655766, i32* %5, align 4
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  store %"class.net::HostResolverMdnsTask"* %0, %"class.net::HostResolverMdnsTask"** %6, align 8
  %41 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %34, align 8
  %42 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %35, align 8
  %43 = icmp ult %"class.net::HostResolverMdnsTask::Transaction"* %41, %42
  br i1 %43, label %44, label %53

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %41, i64 0, i32 0
  store i32 %40, i32* %45, align 8
  %46 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %41, i64 0, i32 2
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %46, i32 -1, i32 0, i8 0, i64 undef) #8
  %47 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %41, i64 0, i32 3
  %48 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %41, i64 0, i32 4
  %50 = bitcast %"class.net::HostResolverMdnsTask"** %49 to i64*
  store i64 %24, i64* %50, align 8
  %51 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %41, i64 1
  %52 = ptrtoint %"class.net::HostResolverMdnsTask::Transaction"* %51 to i64
  store i64 %52, i64* %36, align 8
  br label %54

53:                                               ; preds = %38
  call void @_ZNSt3__16vectorIN3net20HostResolverMdnsTask11TransactionENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRNS1_12DnsQueryTypeEPS2_EEEvDpOT_(%"class.std::__1::vector"* %22, i32* nonnull dereferenceable(4) %5, %"class.net::HostResolverMdnsTask"** nonnull dereferenceable(8) %6) #8
  br label %54

54:                                               ; preds = %44, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #8
  %55 = getelementptr inbounds i32, i32* %39, i64 1
  %56 = icmp eq i32* %55, %29
  br i1 %56, label %37, label %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HostResolverMdnsTaskD2Ev(%"class.net::HostResolverMdnsTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %3, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %5, align 8
  %7 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %6, %4
  br i1 %7, label %22, label %8

8:                                                ; preds = %1, %19
  %9 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %10, %19 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %9, i64 -1
  %11 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %9, i64 -1, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.net::MDnsTransaction"*, %"class.net::MDnsTransaction"** %11, align 8
  store %"class.net::MDnsTransaction"* null, %"class.net::MDnsTransaction"** %11, align 8
  %13 = icmp eq %"class.net::MDnsTransaction"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.net::MDnsTransaction"* %12 to void (%"class.net::MDnsTransaction"*)***
  %16 = load void (%"class.net::MDnsTransaction"*)**, void (%"class.net::MDnsTransaction"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %16, i64 1
  %18 = load void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %17, align 8
  tail call void %18(%"class.net::MDnsTransaction"* nonnull %12) #8
  br label %19

19:                                               ; preds = %14, %8
  %20 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %9, i64 -1, i32 2
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %20) #8
  %21 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %10, %4
  br i1 %21, label %22, label %8

22:                                               ; preds = %19, %1
  store %"class.net::HostResolverMdnsTask::Transaction"* %4, %"class.net::HostResolverMdnsTask::Transaction"** %5, align 8
  %23 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #8
  %24 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %24) #8
  %25 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %3, align 8
  %26 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %25, null
  br i1 %26, label %50, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.net::HostResolverMdnsTask::Transaction"* %25 to i8*
  %29 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %5, align 8
  %30 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %29, %25
  br i1 %30, label %48, label %31

31:                                               ; preds = %27, %42
  %32 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %33, %42 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %32, i64 -1
  %34 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %32, i64 -1, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.net::MDnsTransaction"*, %"class.net::MDnsTransaction"** %34, align 8
  store %"class.net::MDnsTransaction"* null, %"class.net::MDnsTransaction"** %34, align 8
  %36 = icmp eq %"class.net::MDnsTransaction"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.net::MDnsTransaction"* %35 to void (%"class.net::MDnsTransaction"*)***
  %39 = load void (%"class.net::MDnsTransaction"*)**, void (%"class.net::MDnsTransaction"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %39, i64 1
  %41 = load void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %40, align 8
  tail call void %41(%"class.net::MDnsTransaction"* nonnull %35) #8
  br label %42

42:                                               ; preds = %37, %31
  %43 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %32, i64 -1, i32 2
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %43) #8
  %44 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %33, %25
  br i1 %44, label %45, label %31

45:                                               ; preds = %42
  %46 = bitcast %"class.std::__1::vector"* %2 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %27
  %49 = phi i8* [ %47, %45 ], [ %28, %27 ]
  store %"class.net::HostResolverMdnsTask::Transaction"* %25, %"class.net::HostResolverMdnsTask::Transaction"** %5, align 8
  tail call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %22, %48
  %51 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #9
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HostResolverMdnsTask5StartEN4base12OnceCallbackIFvvEEE(%"class.net::HostResolverMdnsTask"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %3, %"class.base::internal::CallbackBase"* dereferenceable(8) %4) #8
  %6 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %6, align 8
  %8 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %8, align 8
  %10 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %18, %2
  ret void

12:                                               ; preds = %2, %18
  %13 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %19, %18 ], [ %7, %2 ]
  %14 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %13, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %18

17:                                               ; preds = %12
  tail call void @_ZN3net20HostResolverMdnsTask11Transaction5StartEv(%"class.net::HostResolverMdnsTask::Transaction"* %13)
  br label %18

18:                                               ; preds = %12, %17
  %19 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %13, i64 1
  %20 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %19, %9
  br i1 %20, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net20HostResolverMdnsTask11Transaction5StartEv(%"class.net::HostResolverMdnsTask::Transaction"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 4
  %4 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %3, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %4, i64 0, i32 0
  %6 = load %"class.net::MDnsClient"*, %"class.net::MDnsClient"** %5, align 8
  %7 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = tail call zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32 %8) #8
  %10 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %3, align 8
  %11 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %10, i64 0, i32 1
  %12 = bitcast %"class.base::RepeatingCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = ptrtoint %"class.net::HostResolverMdnsTask::Transaction"* %0 to i64
  %14 = tail call i8* @_Znwm(i64 56) #9, !noalias !2
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.net::RecordParsed"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net20HostResolverMdnsTask11TransactionEFvNS3_15MDnsTransaction6ResultEPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEFvS7_SA_EE3RunEPNS0_13BindStateBaseES7_SA_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net20HostResolverMdnsTask11TransactionEFvNS2_15MDnsTransaction6ResultEPKNS2_12RecordParsedEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*)* @_ZN3net20HostResolverMdnsTask11Transaction10OnCompleteENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE to i64), i64 0>, <2 x i64>* %17, align 8, !noalias !2
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %13, i64* %19, align 8, !noalias !2
  %20 = bitcast %"class.base::RepeatingCallback"* %2 to i8**
  store i8* %14, i8** %20, align 8, !alias.scope !2
  %21 = bitcast %"class.net::MDnsClient"* %6 to %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)***
  %22 = load %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)**, %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)*, %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)** %22, i64 3
  %24 = load %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)*, %"class.net::MDnsTransaction"* (%"class.net::MDnsClient"*, i16, %"class.std::__1::basic_string"*, i32, %"class.base::RepeatingCallback"*)** %23, align 8
  %25 = call %"class.net::MDnsTransaction"* %24(%"class.net::MDnsClient"* %6, i16 zeroext %9, %"class.std::__1::basic_string"* dereferenceable(24) %11, i32 7, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %2) #8
  %26 = ptrtoint %"class.net::MDnsTransaction"* %25 to i64
  %27 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %28 = bitcast %"class.net::MDnsTransaction"* %25 to i1 (%"class.net::MDnsTransaction"*)***
  %29 = load i1 (%"class.net::MDnsTransaction"*)**, i1 (%"class.net::MDnsTransaction"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.net::MDnsTransaction"*)*, i1 (%"class.net::MDnsTransaction"*)** %29, i64 2
  %31 = load i1 (%"class.net::MDnsTransaction"*)*, i1 (%"class.net::MDnsTransaction"*)** %30, align 8
  %32 = call zeroext i1 %31(%"class.net::MDnsTransaction"* %25) #8
  br i1 %32, label %35, label %33

33:                                               ; preds = %1
  %34 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %3, align 8
  call void @_ZN3net20HostResolverMdnsTask8CompleteEb(%"class.net::HostResolverMdnsTask"* %34, i1 zeroext true)
  br label %50

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 2, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %50

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.net::MDnsTransaction"*, %"class.net::MDnsTransaction"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  store i64 %26, i64* %43, align 8
  %44 = icmp eq %"class.net::MDnsTransaction"* %42, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.net::MDnsTransaction"* %42 to void (%"class.net::MDnsTransaction"*)***
  %47 = load void (%"class.net::MDnsTransaction"*)**, void (%"class.net::MDnsTransaction"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %47, i64 1
  %49 = load void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %48, align 8
  call void %49(%"class.net::MDnsTransaction"* nonnull %42) #8
  br label %57

50:                                               ; preds = %35, %33
  %51 = icmp eq %"class.net::MDnsTransaction"* %25, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %50
  %53 = bitcast %"class.net::MDnsTransaction"* %25 to void (%"class.net::MDnsTransaction"*)***
  %54 = load void (%"class.net::MDnsTransaction"*)**, void (%"class.net::MDnsTransaction"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %54, i64 1
  %56 = load void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %55, align 8
  call void %56(%"class.net::MDnsTransaction"* nonnull %25) #8
  br label %57

57:                                               ; preds = %45, %39, %50, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net20HostResolverMdnsTask10GetResultsEv(%"class.net::HostCache::Entry"* noalias sret, %"class.net::HostResolverMdnsTask"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::HostCache::Entry", align 8
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = alloca %"class.net::HostCache::Entry", align 8
  %6 = alloca %"class.net::HostCache::Entry", align 8
  %7 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %7, align 8
  %9 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %9, align 8
  %11 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %8, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %2, %16
  %13 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %17, %16 ], [ %8, %2 ]
  %14 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %13, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %19 [
    i32 -1, label %16
    i32 -105, label %16
    i32 0, label %16
  ]

16:                                               ; preds = %12, %12, %12
  %17 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %13, i64 1
  %18 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %17, %10
  br i1 %18, label %24, label %12

19:                                               ; preds = %12, %2
  %20 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %8, %2 ], [ %13, %12 ]
  %21 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %20, %10
  br i1 %21, label %24, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %20, i64 0, i32 2
  tail call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* dereferenceable(200) %23) #8
  br label %42

24:                                               ; preds = %16, %19
  %25 = bitcast %"class.net::HostCache::Entry"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 200, i1 false)
  %26 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %8, i64 0, i32 2
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* nonnull %3, %"class.net::HostCache::Entry"* dereferenceable(200) %26) #8
  %27 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %7, align 8
  %28 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %27, i64 1
  %29 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %9, align 8
  %30 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %28, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  br label %34

33:                                               ; preds = %34, %24
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %0, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %3) #8
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %25) #8
  br label %42

34:                                               ; preds = %31, %34
  %35 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %28, %31 ], [ %39, %34 ]
  %36 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %27, %31 ], [ %35, %34 ]
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %32) #8
  call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* nonnull %5, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %3) #8
  %37 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %36, i64 1, i32 2
  call void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"* nonnull %6, %"class.net::HostCache::Entry"* dereferenceable(200) %37) #8
  call void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* nonnull sret %4, %"class.net::HostCache::Entry"* nonnull %5, %"class.net::HostCache::Entry"* nonnull %6) #8
  %38 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* nonnull %3, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4) #8
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #8
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %6) #8
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %32) #8
  %39 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %35, i64 1
  %40 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %9, align 8
  %41 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %39, %40
  br i1 %41, label %33, label %34

42:                                               ; preds = %33, %22
  ret void
}

declare void @_ZN3net9HostCache5EntryC1ERKS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3net9HostCache5Entry12MergeEntriesES1_S1_(%"class.net::HostCache::Entry"* sret, %"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"*) local_unnamed_addr #3

declare void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) unnamed_addr #3

declare dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"*, %"class.net::HostCache::Entry"* dereferenceable(200)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HostResolverMdnsTask11ParseResultEiNS_12DnsQueryTypeEPKNS_12RecordParsedERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::HostCache::Entry"* noalias sret, i32, i32, %"class.net::RecordParsed"* nocapture readonly, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.net::AddressList", align 8
  %7 = alloca %"class.net::AddressList", align 8
  %8 = alloca %"class.net::AddressList", align 8
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = alloca %"class.net::AddressList", align 8
  %11 = alloca %"class.net::IPEndPoint", align 2
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %5
  tail call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 %1, i32 0, i8 0, i64 undef) #8
  br label %147

15:                                               ; preds = %5
  switch i32 %2, label %146 [
    i32 0, label %16
    i32 7, label %16
    i32 6, label %16
    i32 1, label %17
    i32 2, label %53
    i32 3, label %89
    i32 4, label %100
    i32 5, label %132
  ]

16:                                               ; preds = %15, %15, %15
  tail call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 -2, i32 0, i8 0, i64 undef) #8
  br label %147

17:                                               ; preds = %15
  %18 = bitcast %"class.net::AddressList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 2
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = bitcast %"class.net::RecordRdata"** %24 to %"class.net::ARecordRdata"**
  %26 = load %"class.net::ARecordRdata"*, %"class.net::ARecordRdata"** %25, align 8
  br label %27

27:                                               ; preds = %17, %23
  %28 = phi %"class.net::ARecordRdata"* [ %26, %23 ], [ null, %17 ]
  %29 = getelementptr inbounds %"class.net::ARecordRdata", %"class.net::ARecordRdata"* %28, i64 0, i32 1
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPAddress"* dereferenceable(17) %29, i16 zeroext 0) #8
  call void @_ZN3net11AddressListC1ERKNS_10IPEndPointE(%"class.net::AddressList"* nonnull %8, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %9) #8
  %30 = bitcast %"class.net::AddressList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon.1* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 49, i1 false) #8
  %38 = bitcast %union.anon.20* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 25, i1 false) #8
  %39 = bitcast %union.anon.25* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 25, i1 false) #8
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  %41 = bitcast %union.anon.37* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 29, i1 false)
  %42 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %42, align 8
  %43 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 -1, i32* %43, align 8
  %44 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %45, align 4
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %7, %"class.net::AddressList"* nonnull dereferenceable(48) %8) #8
  %46 = load i8, i8* %32, align 8, !range !7
  %47 = icmp eq i8 %46, 0
  %48 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %47, label %51, label %49

49:                                               ; preds = %27
  %50 = call dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSEOS0_(%"class.net::AddressList"* %48, %"class.net::AddressList"* nonnull dereferenceable(48) %7) #8
  br label %52

51:                                               ; preds = %27
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %48, %"class.net::AddressList"* nonnull dereferenceable(48) %7) #8
  store i8 1, i8* %32, align 8
  br label %52

52:                                               ; preds = %49, %51
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %8) #8
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #8
  br label %147

53:                                               ; preds = %15
  %54 = bitcast %"class.net::AddressList"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54) #8
  %55 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %55) #8
  %56 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 2
  %57 = load i16, i16* %56, align 8
  %58 = icmp eq i16 %57, 28
  br i1 %58, label %59, label %63

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %61 = bitcast %"class.net::RecordRdata"** %60 to %"class.net::AAAARecordRdata"**
  %62 = load %"class.net::AAAARecordRdata"*, %"class.net::AAAARecordRdata"** %61, align 8
  br label %63

63:                                               ; preds = %53, %59
  %64 = phi %"class.net::AAAARecordRdata"* [ %62, %59 ], [ null, %53 ]
  %65 = getelementptr inbounds %"class.net::AAAARecordRdata", %"class.net::AAAARecordRdata"* %64, i64 0, i32 1
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %11, %"class.net::IPAddress"* dereferenceable(17) %65, i16 zeroext 0) #8
  call void @_ZN3net11AddressListC1ERKNS_10IPEndPointE(%"class.net::AddressList"* nonnull %10, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %11) #8
  %66 = bitcast %"class.net::AddressList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %66) #8
  %67 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast %union.anon.1* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 49, i1 false) #8
  %74 = bitcast %union.anon.20* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 25, i1 false) #8
  %75 = bitcast %union.anon.25* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 25, i1 false) #8
  %76 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  %77 = bitcast %union.anon.37* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 29, i1 false)
  %78 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 -1, i32* %79, align 8
  %80 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %81, align 4
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* nonnull %6, %"class.net::AddressList"* nonnull dereferenceable(48) %10) #8
  %82 = load i8, i8* %68, align 8, !range !7
  %83 = icmp eq i8 %82, 0
  %84 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %83, label %87, label %85

85:                                               ; preds = %63
  %86 = call dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSEOS0_(%"class.net::AddressList"* %84, %"class.net::AddressList"* nonnull dereferenceable(48) %6) #8
  br label %88

87:                                               ; preds = %63
  call void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"* %84, %"class.net::AddressList"* nonnull dereferenceable(48) %6) #8
  store i8 1, i8* %68, align 8
  br label %88

88:                                               ; preds = %85, %87
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %66) #8
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %10) #8
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54) #8
  br label %147

89:                                               ; preds = %15
  %90 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 2
  %91 = load i16, i16* %90, align 8
  %92 = icmp eq i16 %91, 16
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %95 = bitcast %"class.net::RecordRdata"** %94 to %"class.net::TxtRecordRdata"**
  %96 = load %"class.net::TxtRecordRdata"*, %"class.net::TxtRecordRdata"** %95, align 8
  br label %97

97:                                               ; preds = %89, %93
  %98 = phi %"class.net::TxtRecordRdata"* [ %96, %93 ], [ null, %89 ]
  %99 = getelementptr inbounds %"class.net::TxtRecordRdata", %"class.net::TxtRecordRdata"* %98, i64 0, i32 1
  tail call void @_ZN3net9HostCache5EntryC2IRKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEEEiOT_NS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 0, %"class.std::__1::vector.9"* dereferenceable(24) %99, i32 0, i8 0, i64 undef) #8
  br label %147

100:                                              ; preds = %15
  %101 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #8
  %102 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 2
  %103 = load i16, i16* %102, align 8
  %104 = icmp eq i16 %103, 12
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %107 = bitcast %"class.net::RecordRdata"** %106 to %"class.net::PtrRecordRdata"**
  %108 = load %"class.net::PtrRecordRdata"*, %"class.net::PtrRecordRdata"** %107, align 8
  br label %109

109:                                              ; preds = %100, %105
  %110 = phi %"class.net::PtrRecordRdata"* [ %108, %105 ], [ null, %100 ]
  %111 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %110, i64 0, i32 1
  %112 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %112, i64 0, i32 1, i32 0
  %114 = load i8, i8* %113, align 1, !noalias !8
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %117, i64 24, i1 false) #8
  br label %123

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8, !noalias !8
  %121 = getelementptr inbounds %"class.net::PtrRecordRdata", %"class.net::PtrRecordRdata"* %110, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %120, i64 %122) #8
  br label %123

123:                                              ; preds = %116, %118
  call fastcc void @_ZN3net12_GLOBAL__N_119ParseHostnameResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostCache::Entry"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i16 zeroext 0)
  %124 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #9
  br label %131

131:                                              ; preds = %123, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #8
  br label %147

132:                                              ; preds = %15
  %133 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 2
  %134 = load i16, i16* %133, align 8
  %135 = icmp eq i16 %134, 33
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.net::RecordParsed", %"class.net::RecordParsed"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %138 = bitcast %"class.net::RecordRdata"** %137 to %"class.net::SrvRecordRdata"**
  %139 = load %"class.net::SrvRecordRdata"*, %"class.net::SrvRecordRdata"** %138, align 8
  %140 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %139, i64 0, i32 4
  br label %141

141:                                              ; preds = %132, %136
  %142 = phi %"class.std::__1::basic_string"* [ %140, %136 ], [ inttoptr (i64 16 to %"class.std::__1::basic_string"*), %132 ]
  %143 = phi %"class.net::SrvRecordRdata"* [ %139, %136 ], [ null, %132 ]
  %144 = getelementptr inbounds %"class.net::SrvRecordRdata", %"class.net::SrvRecordRdata"* %143, i64 0, i32 3
  %145 = load i16, i16* %144, align 4
  tail call fastcc void @_ZN3net12_GLOBAL__N_119ParseHostnameResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostCache::Entry"* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %142, i16 zeroext %145)
  br label %147

146:                                              ; preds = %15
  unreachable

147:                                              ; preds = %141, %131, %97, %88, %52, %16, %14
  ret void
}

declare void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"*, i32, i32, i8, i64) unnamed_addr #3

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #3

declare void @_ZN3net11AddressListC1ERKNS_10IPEndPointE(%"class.net::AddressList"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_119ParseHostnameResultERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostCache::Entry"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #0 {
  %4 = alloca [1 x %"class.net::HostPortPair"], align 8
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %0, i32 -105, i32 0, i8 0, i64 undef) #8
  br label %72

15:                                               ; preds = %3
  %16 = bitcast [1 x %"class.net::HostPortPair"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8
  %17 = getelementptr inbounds [1 x %"class.net::HostPortPair"], [1 x %"class.net::HostPortPair"]* %4, i64 0, i64 0
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* nonnull %17, %"class.std::__1::basic_string"* dereferenceable(24) %1, i16 zeroext %2) #8
  %18 = call i8* @_Znwm(i64 32) #9
  %19 = getelementptr inbounds i8, i8* %18, i64 32
  %20 = bitcast [1 x %"class.net::HostPortPair"]* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %15
  %25 = bitcast [1 x %"class.net::HostPortPair"]* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %25, i64 24, i1 false) #8
  br label %32

26:                                               ; preds = %15
  %27 = bitcast i8* %18 to %"class.std::__1::basic_string"*
  %28 = getelementptr inbounds [1 x %"class.net::HostPortPair"], [1 x %"class.net::HostPortPair"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds [1 x %"class.net::HostPortPair"], [1 x %"class.net::HostPortPair"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* %29, i64 %31) #8
  br label %32

32:                                               ; preds = %26, %24
  %33 = getelementptr inbounds i8, i8* %18, i64 24
  %34 = bitcast i8* %33 to i16*
  %35 = getelementptr inbounds [1 x %"class.net::HostPortPair"], [1 x %"class.net::HostPortPair"]* %4, i64 0, i64 0, i32 1
  %36 = load i16, i16* %35, align 8
  store i16 %36, i16* %34, align 8
  %37 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %union.anon.1* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 49, i1 false) #8
  %44 = bitcast %union.anon.20* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #8
  %45 = getelementptr inbounds %union.anon.25, %union.anon.25* %41, i64 1
  %46 = bitcast %union.anon.25* %45 to i8*
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  %48 = bitcast %union.anon.37* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 29, i1 false)
  %49 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 -1000000, i64 0>, <2 x i64>* %49, align 8
  %50 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 -1, i32* %50, align 8
  %51 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds i8, i8* %18, i64 32
  %56 = ptrtoint i8* %55 to i64
  %57 = ptrtoint i8* %19 to i64
  %58 = ptrtoint i8* %18 to i64
  %59 = bitcast %"class.std::__1::vector.26"* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %61 = bitcast %"class.net::HostPortPair"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"class.net::HostPortPair"** %62 to i64*
  store i64 %57, i64* %63, align 8
  store i8 1, i8* %54, align 8
  %64 = bitcast [1 x %"class.net::HostPortPair"]* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %32
  %69 = getelementptr inbounds [1 x %"class.net::HostPortPair"], [1 x %"class.net::HostPortPair"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %32, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8
  br label %72

72:                                               ; preds = %71, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HostResolverMdnsTask15CheckCompletionEb(%"class.net::HostResolverMdnsTask"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %3, align 8
  %5 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %5, align 8
  %7 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %4, %6
  br i1 %7, label %23, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %13, %12 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %9, i64 0, i32 2, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %23 [
    i32 -1, label %12
    i32 -105, label %12
    i32 0, label %12
  ]

12:                                               ; preds = %8, %8, %8
  %13 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %9, i64 1
  %14 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %13, %6
  br i1 %14, label %17, label %8

15:                                               ; preds = %17
  %16 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %22, %6
  br i1 %16, label %23, label %17

17:                                               ; preds = %12, %15
  %18 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %22, %15 ], [ %4, %12 ]
  %19 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %18, i64 0, i32 2, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  %22 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %18, i64 1
  br i1 %21, label %24, label %15

23:                                               ; preds = %8, %15, %2
  tail call void @_ZN3net20HostResolverMdnsTask8CompleteEb(%"class.net::HostResolverMdnsTask"* %0, i1 zeroext %1)
  br label %24

24:                                               ; preds = %17, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net20HostResolverMdnsTask8CompleteEb(%"class.net::HostResolverMdnsTask"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %9, align 8
  %11 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %11, align 8
  %13 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %10, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  br label %17

16:                                               ; preds = %33, %2
  br i1 %1, label %36, label %59

17:                                               ; preds = %14, %33
  %18 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %10, %14 ], [ %34, %33 ]
  %19 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %18, i64 0, i32 2, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %15) #8
  call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* nonnull %4, i32 -2, i32 0, i8 0, i64 undef) #8
  %23 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %18, i64 0, i32 2
  %24 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %23, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4) #8
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %15) #8
  %25 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.net::MDnsTransaction"*, %"class.net::MDnsTransaction"** %25, align 8
  store %"class.net::MDnsTransaction"* null, %"class.net::MDnsTransaction"** %25, align 8
  %27 = icmp eq %"class.net::MDnsTransaction"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.net::MDnsTransaction"* %26 to void (%"class.net::MDnsTransaction"*)***
  %30 = load void (%"class.net::MDnsTransaction"*)**, void (%"class.net::MDnsTransaction"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %30, i64 1
  %32 = load void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %31, align 8
  call void %32(%"class.net::MDnsTransaction"* nonnull %26) #8
  br label %33

33:                                               ; preds = %17, %28, %22
  %34 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %18, i64 1
  %35 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %34, %12
  br i1 %35, label %16, label %17

36:                                               ; preds = %16
  %37 = call dereferenceable(8) %class.scoped_refptr.85* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #8
  %38 = bitcast %class.scoped_refptr.85* %37 to %"class.base::TaskRunner"**
  %39 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %38, align 8
  %40 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 262) #8
  %41 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #8
  %42 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8, !noalias !11
  %43 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 4, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %43) #8, !noalias !11
  %44 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 4, i32 0, i32 1
  %45 = load i64, i64* %44, align 8, !noalias !11
  %46 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %46, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %45) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8, !noalias !11
  %47 = call i8* @_Znwm(i64 56) #9, !noalias !14
  %48 = bitcast i8* %47 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %48, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE") #8, !noalias !14
  %49 = getelementptr inbounds i8, i8* %47, i64 40
  %50 = bitcast i8* %49 to %"class.base::internal::WeakReference"*
  %51 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %50, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %51) #8, !noalias !14
  %52 = getelementptr inbounds i8, i8* %47, i64 48
  %53 = bitcast i8* %52 to i64*
  %54 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8, !noalias !14
  store i64 %55, i64* %53, align 8, !noalias !14
  %56 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %47, i8** %56, align 8, !alias.scope !14
  %57 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %39, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %7) #8
  %58 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #8
  br label %71

59:                                               ; preds = %16
  %60 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %0, i64 0, i32 3
  %61 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %60, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.base::OnceCallback"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %64, i64* %65, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %62, align 8
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %67 = inttoptr i64 %64 to %"class.base::internal::BindStateBase"*
  %68 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %67, i64 0, i32 1
  %69 = bitcast void ()** %68 to void (%"class.base::internal::BindStateBase"*)**
  %70 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %69, align 8
  call void %70(%"class.base::internal::BindStateBase"* %67) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  br label %71

71:                                               ; preds = %59, %36
  ret void
}

declare dereferenceable(8) %class.scoped_refptr.85* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i16 @_ZN3net19DnsQueryTypeToQtypeENS_12DnsQueryTypeE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net20HostResolverMdnsTask11Transaction10OnCompleteENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE(%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*) #0 comdat align 2 {
  %4 = alloca %"class.net::HostCache::Entry", align 8
  %5 = icmp ult i32 %1, 4
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN3net20HostResolverMdnsTask11Transaction10OnCompleteENS_15MDnsTransaction6ResultEPKNS_12RecordParsedE, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %6, %3
  %11 = phi i32 [ -9, %3 ], [ %9, %6 ]
  %12 = bitcast %"class.net::HostCache::Entry"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 4
  call void @_ZN3net20HostResolverMdnsTask11ParseResultEiNS_12DnsQueryTypeEPKNS_12RecordParsedERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.net::HostCache::Entry"* nonnull sret %4, i32 %11, i32 %14, %"class.net::RecordParsed"* %2, %"class.std::__1::basic_string"* dereferenceable(24) undef)
  %16 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 2
  %17 = call dereferenceable(200) %"class.net::HostCache::Entry"* @_ZN3net9HostCache5EntryaSEOS1_(%"class.net::HostCache::Entry"* %16, %"class.net::HostCache::Entry"* nonnull dereferenceable(200) %4) #8
  call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %12) #8
  %18 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %15, align 8
  %19 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.net::MDnsTransaction"*, %"class.net::MDnsTransaction"** %19, align 8
  %21 = icmp eq %"class.net::MDnsTransaction"* %20, null
  %22 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %18, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %22, align 8
  %24 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %18, i64 0, i32 2, i32 0, i32 1
  %25 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %24, align 8
  %26 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %23, %25
  br i1 %26, label %42, label %27

27:                                               ; preds = %10, %31
  %28 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %32, %31 ], [ %23, %10 ]
  %29 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %28, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %42 [
    i32 -1, label %31
    i32 -105, label %31
    i32 0, label %31
  ]

31:                                               ; preds = %27, %27, %27
  %32 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %28, i64 1
  %33 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %32, %25
  br i1 %33, label %36, label %27

34:                                               ; preds = %36
  %35 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %41, %25
  br i1 %35, label %42, label %36

36:                                               ; preds = %31, %34
  %37 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %41, %34 ], [ %23, %31 ]
  %38 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %37, i64 0, i32 2, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, -1
  %41 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %37, i64 1
  br i1 %40, label %43, label %34

42:                                               ; preds = %27, %34, %10
  call void @_ZN3net20HostResolverMdnsTask8CompleteEb(%"class.net::HostResolverMdnsTask"* %18, i1 zeroext %21) #8
  br label %43

43:                                               ; preds = %36, %42
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net20HostResolverMdnsTask11TransactionEFvNS3_15MDnsTransaction6ResultEPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEFvS7_SA_EE3RunEPNS0_13BindStateBaseES7_SA_(%"class.base::internal::BindStateBase"*, i32, %"class.net::RecordParsed"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.net::HostResolverMdnsTask::Transaction"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*)**
  %23 = load void (%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*)*, void (%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.net::HostResolverMdnsTask::Transaction"*, i32, %"class.net::RecordParsed"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.net::HostResolverMdnsTask::Transaction"* %14, i32 %1, %"class.net::RecordParsed"* %2) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net20HostResolverMdnsTask11TransactionEFvNS2_15MDnsTransaction6ResultEPKNS2_12RecordParsedEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net20HostResolverMdnsTask11TransactionENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRNS1_12DnsQueryTypeEPS2_EEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4), %"class.net::HostResolverMdnsTask"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.net::HostResolverMdnsTask::Transaction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 224
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 82351536043346212
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #10
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.net::HostResolverMdnsTask::Transaction"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 224
  %21 = icmp ult i64 %20, 41175768021673106
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 82351536043346212, %15 ]
  %29 = mul i64 %28, 224
  %30 = tail call i8* @_Znwm(i64 %29) #9
  %31 = bitcast i8* %30 to %"class.net::HostResolverMdnsTask::Transaction"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %34, i64 %10
  %36 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %34, i64 %33
  %37 = ptrtoint %"class.net::HostResolverMdnsTask::Transaction"* %36 to i64
  %38 = load i32, i32* %1, align 4
  %39 = bitcast %"class.net::HostResolverMdnsTask"** %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %35, i64 0, i32 0
  store i32 %38, i32* %41, align 8
  %42 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %34, i64 %10, i32 2
  tail call void @_ZN3net9HostCache5EntryC1EiNS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"* %42, i32 -1, i32 0, i8 0, i64 undef) #8
  %43 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %34, i64 %10, i32 3
  %44 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %34, i64 %10, i32 4
  %46 = bitcast %"class.net::HostResolverMdnsTask"** %45 to i64*
  store i64 %40, i64* %46, align 8
  %47 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %35, i64 1
  %48 = ptrtoint %"class.net::HostResolverMdnsTask::Transaction"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %50 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %49, align 8
  %51 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %4, align 8
  %52 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %51, %50
  br i1 %52, label %53, label %55

53:                                               ; preds = %32
  %54 = ptrtoint %"class.net::HostResolverMdnsTask::Transaction"* %50 to i64
  br label %80

55:                                               ; preds = %32, %55
  %56 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %75, %55 ], [ %35, %32 ]
  %57 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %58, %55 ], [ %51, %32 ]
  %58 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %57, i64 -1
  %59 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %56, i64 -1, i32 0
  %60 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %58, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %59, align 8
  %62 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %56, i64 -1, i32 2
  %63 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %57, i64 -1, i32 2
  tail call void @_ZN3net9HostCache5EntryC1EOS1_(%"class.net::HostCache::Entry"* %62, %"class.net::HostCache::Entry"* dereferenceable(200) %63) #8
  %64 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %56, i64 -1, i32 3
  %65 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %57, i64 -1, i32 3
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.net::MDnsTransaction"* null, %"class.net::MDnsTransaction"** %66, align 8
  %69 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %56, i64 -1, i32 4
  %71 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %57, i64 -1, i32 4
  %72 = bitcast %"class.net::HostResolverMdnsTask"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.net::HostResolverMdnsTask"** %70 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %56, i64 -1
  %76 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %58, %50
  br i1 %76, label %77, label %55

77:                                               ; preds = %55
  %78 = load i64, i64* %7, align 8
  %79 = load %"class.net::HostResolverMdnsTask::Transaction"*, %"class.net::HostResolverMdnsTask::Transaction"** %4, align 8
  br label %80

80:                                               ; preds = %53, %77
  %81 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %50, %53 ], [ %79, %77 ]
  %82 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %35, %53 ], [ %75, %77 ]
  %83 = phi i64 [ %54, %53 ], [ %78, %77 ]
  %84 = ptrtoint %"class.net::HostResolverMdnsTask::Transaction"* %82 to i64
  store i64 %84, i64* %7, align 8
  store i64 %48, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %85 = inttoptr i64 %83 to %"class.net::HostResolverMdnsTask::Transaction"*
  %86 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %81, %85
  br i1 %86, label %101, label %87

87:                                               ; preds = %80, %98
  %88 = phi %"class.net::HostResolverMdnsTask::Transaction"* [ %89, %98 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %88, i64 -1
  %90 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %88, i64 -1, i32 3, i32 0, i32 0, i32 0
  %91 = load %"class.net::MDnsTransaction"*, %"class.net::MDnsTransaction"** %90, align 8
  store %"class.net::MDnsTransaction"* null, %"class.net::MDnsTransaction"** %90, align 8
  %92 = icmp eq %"class.net::MDnsTransaction"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.net::MDnsTransaction"* %91 to void (%"class.net::MDnsTransaction"*)***
  %95 = load void (%"class.net::MDnsTransaction"*)**, void (%"class.net::MDnsTransaction"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %95, i64 1
  %97 = load void (%"class.net::MDnsTransaction"*)*, void (%"class.net::MDnsTransaction"*)** %96, align 8
  tail call void %97(%"class.net::MDnsTransaction"* nonnull %91) #8
  br label %98

98:                                               ; preds = %93, %87
  %99 = getelementptr inbounds %"class.net::HostResolverMdnsTask::Transaction", %"class.net::HostResolverMdnsTask::Transaction"* %88, i64 -1, i32 2
  tail call void @_ZN3net9HostCache5EntryD1Ev(%"class.net::HostCache::Entry"* %99) #8
  %100 = icmp eq %"class.net::HostResolverMdnsTask::Transaction"* %89, %85
  br i1 %100, label %101, label %87

101:                                              ; preds = %98, %80
  %102 = icmp eq i64 %83, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %104) #9
  br label %105

105:                                              ; preds = %101, %103
  ret void
}

declare void @_ZN3net11AddressListC1EOS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #3

declare dereferenceable(48) %"class.net::AddressList"* @_ZN3net11AddressListaSEOS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net9HostCache5EntryC2IRKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEEEEiOT_NS1_6SourceEN4absl8optionalIN4base9TimeDeltaEEE(%"class.net::HostCache::Entry"*, i32, %"class.std::__1::vector.9"* dereferenceable(24), i32, i8, i64) unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::vector.9", align 8
  %8 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %union.anon.37* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #8
  %16 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 6
  %17 = bitcast %union.anon.1* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 49, i1 false)
  %18 = bitcast %union.anon.20* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false)
  %19 = bitcast %union.anon.25* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 25, i1 false)
  store i32 %3, i32* %16, align 8
  %20 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 7
  store i8 0, i8* %20, align 4
  %21 = icmp eq i8 %4, 0
  %22 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 9, i32 0
  %23 = select i1 %21, i64 -1000000, i64 %5
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 11
  store i32 -1, i32* %25, align 8
  %26 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 12, i32 0
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 13, i32 0
  store i32 0, i32* %27, align 4
  %28 = bitcast %"class.std::__1::vector.9"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #8
  %29 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %2, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %2 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = sdiv exact i64 %34, 24
  %36 = icmp eq i64 %34, 0
  %37 = inttoptr i64 %33 to %"class.std::__1::basic_string"*
  %38 = inttoptr i64 %31 to %"class.std::__1::basic_string"*
  br i1 %36, label %39, label %41

39:                                               ; preds = %6
  %40 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %116

41:                                               ; preds = %6
  %42 = icmp ugt i64 %35, 768614336404564650
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::vector.9"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %44) #10
  unreachable

45:                                               ; preds = %41
  %46 = tail call i8* @_Znwm(i64 %34) #9
  %47 = bitcast i8* %46 to %"class.std::__1::basic_string"*
  %48 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %7, i64 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"** %48 to i8**
  store i8* %46, i8** %49, align 8
  %50 = bitcast %"class.std::__1::vector.9"* %7 to i8**
  store i8* %46, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 %35
  %52 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %51, %"class.std::__1::basic_string"** %52, align 8
  %53 = bitcast %"class.std::__1::basic_string"** %48 to i64*
  %54 = ptrtoint i8* %46 to i64
  %55 = icmp eq %"class.std::__1::basic_string"* %37, %38
  %56 = ptrtoint %"class.std::__1::basic_string"* %51 to i64
  br i1 %55, label %57, label %59

57:                                               ; preds = %45
  store i64 %54, i64* %53, align 8
  %58 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %116

59:                                               ; preds = %45, %74
  %60 = phi %"class.std::__1::basic_string"* [ %76, %74 ], [ %47, %45 ]
  %61 = phi %"class.std::__1::basic_string"* [ %75, %74 ], [ %37, %45 ]
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %59
  %67 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #8
  br label %74

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %60, i8* %71, i64 %73) #8
  br label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 1
  %77 = icmp eq %"class.std::__1::basic_string"* %75, %38
  br i1 %77, label %78, label %59

78:                                               ; preds = %74
  %79 = ptrtoint %"class.std::__1::basic_string"* %76 to i64
  %80 = load i8, i8* %11, align 8, !range !7
  store i64 %79, i64* %53, align 8
  %81 = icmp eq i8 %80, 0
  %82 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %81, label %116, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %82, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = icmp eq %"class.std::__1::basic_string"* %85, null
  br i1 %86, label %110, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %89 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %89, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %90, %85
  br i1 %91, label %107, label %92

92:                                               ; preds = %87, %102
  %93 = phi %"class.std::__1::basic_string"* [ %94, %102 ], [ %90, %87 ]
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 -1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #9
  br label %102

102:                                              ; preds = %99, %92
  %103 = icmp eq %"class.std::__1::basic_string"* %94, %85
  br i1 %103, label %104, label %92

104:                                              ; preds = %102
  %105 = bitcast %"class.std::__1::vector.9"* %82 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %104, %87
  %108 = phi i8* [ %106, %104 ], [ %88, %87 ]
  store %"class.std::__1::basic_string"* %85, %"class.std::__1::basic_string"** %89, align 8
  tail call void @_ZdlPv(i8* %108) #9
  %109 = bitcast %"class.std::__1::vector.9"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #8
  br label %110

110:                                              ; preds = %107, %83
  %111 = bitcast %"class.std::__1::vector.9"* %82 to i64*
  store i64 %54, i64* %111, align 8
  %112 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::basic_string"** %112 to i64*
  store i64 %79, i64* %113, align 8
  %114 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast %"class.std::__1::basic_string"** %114 to i64*
  store i64 %56, i64* %115, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #8
  br label %128

116:                                              ; preds = %57, %39, %78
  %117 = phi %"class.std::__1::vector.9"* [ %40, %39 ], [ %82, %78 ], [ %58, %57 ]
  %118 = phi i64 [ 0, %39 ], [ %79, %78 ], [ %54, %57 ]
  %119 = phi i64 [ 0, %39 ], [ %54, %78 ], [ %54, %57 ]
  %120 = phi i64 [ 0, %39 ], [ %56, %78 ], [ %56, %57 ]
  %121 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %122 = bitcast %"class.std::__1::basic_string"** %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #8
  %123 = bitcast %"class.std::__1::vector.9"* %117 to i64*
  store i64 %119, i64* %123, align 8
  %124 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %125 = bitcast %"class.std::__1::basic_string"** %124 to i64*
  store i64 %118, i64* %125, align 8
  %126 = getelementptr inbounds %"class.net::HostCache::Entry", %"class.net::HostCache::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %127 = bitcast %"class.std::__1::basic_string"** %126 to i64*
  store i64 %120, i64* %127, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #8
  store i8 1, i8* %11, align 8
  br label %128

128:                                              ; preds = %116, %110
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %8 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %7, %"class.base::internal::WeakReference"* dereferenceable(8) %8) #8
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  %13 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %7) #8
  br i1 %13, label %14, label %38

14:                                               ; preds = %1
  %15 = bitcast i64* %9 to %"class.net::HostResolverMdnsTask"**
  %16 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %15, align 8
  %17 = icmp eq %"class.net::HostResolverMdnsTask"* %16, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %7) #8
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %20, %18
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %7) #8
  %25 = load %"class.net::HostResolverMdnsTask"*, %"class.net::HostResolverMdnsTask"** %15, align 8
  %26 = select i1 %24, %"class.net::HostResolverMdnsTask"* %25, %"class.net::HostResolverMdnsTask"* null
  %27 = getelementptr inbounds %"class.net::HostResolverMdnsTask", %"class.net::HostResolverMdnsTask"* %26, i64 0, i32 3
  %28 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %34 = inttoptr i64 %31 to %"class.base::internal::BindStateBase"*
  %35 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %36 = bitcast void ()** %35 to void (%"class.base::internal::BindStateBase"*)**
  %37 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %36, align 8
  call void %37(%"class.base::internal::BindStateBase"* %34) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %38

38:                                               ; preds = %1, %14, %23
  %39 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net20HostResolverMdnsTask11TransactionEFvNS3_15MDnsTransaction6ResultEPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net20HostResolverMdnsTask11TransactionEFvNS3_15MDnsTransaction6ResultEPKNS3_12RecordParsedEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN3net20HostResolverMdnsTask11TransactionEFvNS1_15MDnsTransaction6ResultEPKNS1_12RecordParsedEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN3net20HostResolverMdnsTask11TransactionEFvNS1_15MDnsTransaction6ResultEPKNS1_12RecordParsedEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSB_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK3net14PtrRecordRdata9ptrdomainEv: argument 0"}
!10 = distinct !{!10, !"_ZNK3net14PtrRecordRdata9ptrdomainEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base14WeakPtrFactoryIN3net20HostResolverMdnsTaskEE10GetWeakPtrEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base14WeakPtrFactoryIN3net20HostResolverMdnsTaskEE10GetWeakPtrEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN3net20HostResolverMdnsTask8CompleteEbE3$_3JNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
