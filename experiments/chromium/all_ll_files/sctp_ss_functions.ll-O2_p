; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_ss_functions.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_ss_functions.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.37, %struct.anon.38, %struct.anon.39, %struct.anon.40, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon, %struct.anon.0, %struct.anon.1, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.5, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon = type { %struct.socket*, %struct.socket** }
%struct.anon.0 = type { %struct.socket*, %struct.socket** }
%struct.anon.1 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.3, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.3 = type { i64 }
%struct.sigio = type opaque
%struct.anon.5 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon.6 }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.pkthdr, %union.anon.9 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.8, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.8 = type { %struct.m_tag* }
%union.anon.9 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.10, %struct.sctp_readhead, %struct.anon.32, %struct.anon.33, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.10 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.11, %struct.anon.12, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.17, %struct.anon.18, %struct.anon.19, %struct.inpcbport*, %struct.mtx }
%struct.anon.11 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.12 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.14, %union.anon.16 }
%union.anon.14 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.16 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.17 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.18 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.19 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.13, %struct.inpcbhead, i16 }
%struct.anon.13 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.28, %struct.anon.29, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.20, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.20 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.22, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.22 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon.23, %struct.anon.24, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon.23 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.24 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.26, %struct.anon.27, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.25, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.25 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.26 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.27 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.21, i32, i8*, void (i8*)*, i32 }
%struct.anon.21 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.28 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.29 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.30, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.31, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.30 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.31 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.32 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.33 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctp_laddr = type { %struct.anon.34, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.34 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.35, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.35 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_iterator = type { %struct.anon.36, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.36 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.37 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.38 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.39 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.40 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon.41, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon.41 = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.47 }
%union.anon.47 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.48, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.48 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.42, %struct.anon.43, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.42 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.43 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.45, i16 }
%struct.anon.45 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.49, i32, i32, i32, [0 x i16] }
%struct.anon.49 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_cc_functions = type { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_ss_functions = type { {}*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.50, [15 x %struct.sctp_timewait] }
%struct.anon.50 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutexattr_t = type { i32 }

@sctp_ss_functions = hidden local_unnamed_addr constant [6 x { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }] [{ void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* } { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)* @sctp_ss_default_init, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)* @sctp_ss_default_clear, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)* @sctp_ss_default_init_stream, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_default_add, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_empty, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_default_remove, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_select, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)* @sctp_ss_default_scheduled, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_packet_done, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)* @sctp_ss_default_get_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)* @sctp_ss_default_set_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_user_msgs_incomplete }, { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* } { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)* @sctp_ss_default_init, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)* @sctp_ss_default_clear, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)* @sctp_ss_default_init_stream, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_rr_add, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_empty, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_default_remove, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_select, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)* @sctp_ss_default_scheduled, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_packet_done, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)* @sctp_ss_default_get_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)* @sctp_ss_default_set_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_user_msgs_incomplete }, { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* } { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)* @sctp_ss_default_init, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)* @sctp_ss_default_clear, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)* @sctp_ss_default_init_stream, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_rr_add, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_empty, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_default_remove, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_rrp_select, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)* @sctp_ss_default_scheduled, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_rrp_packet_done, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)* @sctp_ss_default_get_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)* @sctp_ss_default_set_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_user_msgs_incomplete }, { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* } { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)* @sctp_ss_default_init, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)* @sctp_ss_prio_clear, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)* @sctp_ss_prio_init_stream, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_prio_add, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_empty, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_prio_remove, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_prio_select, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)* @sctp_ss_default_scheduled, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_packet_done, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)* @sctp_ss_prio_get_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)* @sctp_ss_prio_set_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_user_msgs_incomplete }, { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* } { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)* @sctp_ss_default_init, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)* @sctp_ss_fb_clear, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)* @sctp_ss_fb_init_stream, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_fb_add, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_empty, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_fb_remove, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_fb_select, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)* @sctp_ss_fb_scheduled, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_packet_done, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)* @sctp_ss_default_get_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)* @sctp_ss_default_set_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_user_msgs_incomplete }, { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* } { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)* @sctp_ss_fcfs_init, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)* @sctp_ss_fcfs_clear, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)* @sctp_ss_fcfs_init_stream, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_fcfs_add, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_fcfs_is_empty, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)* @sctp_ss_fcfs_remove, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_fcfs_select, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)* @sctp_ss_default_scheduled, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)* @sctp_ss_default_packet_done, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)* @sctp_ss_default_get_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)* @sctp_ss_default_set_value, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* @sctp_ss_default_is_user_msgs_incomplete }], align 16
@system_base_info = external local_unnamed_addr global %struct.sctp_base_info, align 8

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_default_init(%struct.sctp_tcb*, %struct.sctp_association*, i32) #0 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #6
  br label %8

8:                                                ; preds = %5, %3
  %9 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 0
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %12 = bitcast %struct.sctp_stream_out** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  store %struct.sctp_stream_out** %10, %struct.sctp_stream_out*** %11, align 8
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 39, i32 3
  %19 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  br label %20

20:                                               ; preds = %16, %20
  %21 = phi i64 [ 0, %16 ], [ %25, %20 ]
  %22 = load void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)** %18, align 8
  %23 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %19, align 8
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %23, i64 %21
  tail call void %22(%struct.sctp_tcb* %0, %struct.sctp_association* %17, %struct.sctp_stream_out* %24, %struct.sctp_stream_queue_pending* null, i32 1) #6
  %25 = add nuw nsw i64 %21, 1
  %26 = load i16, i16* %13, align 2
  %27 = zext i16 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %20, label %29

29:                                               ; preds = %20, %8
  br i1 %4, label %30, label %33

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %31) #6
  br label %33

33:                                               ; preds = %30, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_default_clear(%struct.sctp_tcb*, %struct.sctp_association* nocapture, i32, i32) #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #6
  br label %9

9:                                                ; preds = %6, %4
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %11 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  %12 = icmp eq %struct.sctp_stream_out* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi %struct.sctp_stream_out* [ %11, %13 ], [ %31, %15 ]
  %17 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %17, align 8
  %19 = icmp eq %struct.sctp_stream_out* %18, null
  %20 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %16, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = bitcast %struct.sctp_stream_out*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %18, i64 0, i32 1, i32 0, i32 0, i32 1
  %24 = select i1 %19, %struct.sctp_stream_out*** %14, %struct.sctp_stream_out*** %23
  %25 = bitcast %struct.sctp_stream_out*** %24 to i64*
  store i64 %22, i64* %25, align 8
  %26 = bitcast %struct.sctp_stream_out** %17 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.sctp_stream_out*** %20 to i64**
  %29 = load i64*, i64** %28, align 8
  store i64 %27, i64* %29, align 8
  %30 = bitcast %struct.sctp_stream_out** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false)
  %31 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  %32 = icmp eq %struct.sctp_stream_out* %31, null
  br i1 %32, label %33, label %15

33:                                               ; preds = %15, %9
  %34 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %34, align 8
  br i1 %5, label %35, label %38

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %37 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %36) #6
  br label %38

38:                                               ; preds = %35, %33
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_default_init_stream(%struct.sctp_tcb* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_out* readnone) #1 {
  %4 = icmp eq %struct.sctp_stream_out* %2, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 0
  %7 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %6, align 8
  %8 = icmp eq %struct.sctp_stream_out* %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 1
  %12 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %11, align 8
  %13 = icmp eq %struct.sctp_stream_out* %12, %2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %11, align 8
  br label %15

15:                                               ; preds = %3, %10, %14
  %16 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = bitcast %struct.sctp_stream_out** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_default_add(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %15, align 8
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %24 = bitcast %struct.sctp_stream_out*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %struct.sctp_stream_out*** %19 to i64*
  store i64 %25, i64* %26, align 8
  %27 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %23, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %27, align 8
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %23, align 8
  br label %28

28:                                               ; preds = %22, %18, %14, %10
  br i1 %6, label %29, label %32

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %30) #6
  br label %32

32:                                               ; preds = %29, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @sctp_ss_default_is_empty(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association* nocapture readonly) #2 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %4 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %3, align 8
  %5 = icmp eq %struct.sctp_stream_out* %4, null
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_default_remove(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %14, label %63

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %63, label %22

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  %24 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %23, align 8
  %25 = icmp eq %struct.sctp_stream_out* %24, %2
  br i1 %25, label %26, label %48

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = bitcast %struct.sctp_stream_out*** %27 to %struct.sctpwheel_listhead**
  %29 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %28, align 8
  %30 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %29, i64 0, i32 1
  %31 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %30, align 8
  %32 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %31, align 8
  store %struct.sctp_stream_out* %32, %struct.sctp_stream_out** %23, align 8
  %33 = icmp eq %struct.sctp_stream_out* %32, null
  br i1 %33, label %34, label %44

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %36 = bitcast %struct.sctp_stream_out*** %35 to %struct.sctpwheel_listhead**
  %37 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %36, align 8
  %38 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %37, i64 0, i32 1
  %39 = bitcast %struct.sctp_stream_out*** %38 to i64**
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %struct.sctp_stream_out** %23 to i64*
  store i64 %41, i64* %42, align 8
  %43 = inttoptr i64 %41 to %struct.sctp_stream_out*
  br label %44

44:                                               ; preds = %34, %26
  %45 = phi %struct.sctp_stream_out* [ %43, %34 ], [ %32, %26 ]
  %46 = icmp eq %struct.sctp_stream_out* %45, %2
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %23, align 8
  br label %48

48:                                               ; preds = %22, %47, %44
  %49 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %50 = icmp eq %struct.sctp_stream_out* %49, null
  %51 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %struct.sctp_stream_out*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %55 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %49, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = select i1 %50, %struct.sctp_stream_out*** %54, %struct.sctp_stream_out*** %55
  %57 = bitcast %struct.sctp_stream_out*** %56 to i64*
  store i64 %53, i64* %57, align 8
  %58 = bitcast %struct.sctp_stream_out** %15 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %struct.sctp_stream_out*** %51 to i64**
  %61 = load i64*, i64** %60, align 8
  store i64 %59, i64* %61, align 8
  %62 = bitcast %struct.sctp_stream_out** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false)
  br label %63

63:                                               ; preds = %18, %48, %10
  br i1 %6, label %64, label %67

64:                                               ; preds = %63
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %66 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %65) #6
  br label %67

67:                                               ; preds = %64, %63
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %struct.sctp_stream_out* @sctp_ss_default_select(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* readnone, %struct.sctp_association* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 0
  %5 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %4, align 8
  %6 = icmp eq %struct.sctp_stream_out* %5, null
  br i1 %6, label %7, label %40

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  %9 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %8, align 8
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  %11 = icmp ne %struct.sctp_nets* %1, null
  %12 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 40), align 8
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %38, %7
  %15 = phi %struct.sctp_stream_out* [ %9, %7 ], [ %24, %38 ]
  %16 = icmp eq %struct.sctp_stream_out* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %18, align 8
  %20 = icmp eq %struct.sctp_stream_out* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %17, %14
  %22 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi %struct.sctp_stream_out* [ %19, %17 ], [ %22, %21 ]
  %25 = icmp ne %struct.sctp_stream_out* %24, null
  %26 = and i1 %11, %25
  %27 = and i1 %26, %13
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %24, i64 0, i32 0, i32 0
  %30 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %29, align 8
  %31 = icmp eq %struct.sctp_stream_queue_pending* %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %30, i64 0, i32 3
  %34 = load %struct.sctp_nets*, %struct.sctp_nets** %33, align 8
  %35 = icmp eq %struct.sctp_nets* %34, null
  %36 = icmp eq %struct.sctp_nets* %34, %1
  %37 = or i1 %35, %36
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = icmp eq %struct.sctp_stream_out* %24, %9
  br i1 %39, label %40, label %14

40:                                               ; preds = %23, %28, %32, %38, %3
  %41 = phi %struct.sctp_stream_out* [ %5, %3 ], [ %24, %23 ], [ %24, %28 ], [ %24, %32 ], [ null, %38 ]
  ret %struct.sctp_stream_out* %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_default_scheduled(%struct.sctp_tcb* nocapture, %struct.sctp_nets* nocapture readnone, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, i32) #1 {
  %6 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  store %struct.sctp_stream_out* %3, %struct.sctp_stream_out** %6, align 8
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %8 = load i8, i8* %7, align 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %3, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %12, i64 0, i32 17
  %16 = load i8, i8* %15, align 2
  %17 = icmp eq i8 %16, 1
  br i1 %17, label %19, label %18

18:                                               ; preds = %10, %14
  br label %19

19:                                               ; preds = %5, %14, %18
  %20 = phi %struct.sctp_stream_out* [ null, %18 ], [ %3, %14 ], [ null, %5 ]
  %21 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 0
  store %struct.sctp_stream_out* %20, %struct.sctp_stream_out** %21, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @sctp_ss_default_packet_done(%struct.sctp_tcb* nocapture, %struct.sctp_nets* nocapture, %struct.sctp_association* nocapture) #3 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @sctp_ss_default_get_value(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association* nocapture readnone, %struct.sctp_stream_out* nocapture readnone, i16* nocapture readnone) #3 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @sctp_ss_default_set_value(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association* nocapture readnone, %struct.sctp_stream_out* nocapture readnone, i16 zeroext) #3 {
  ret i32 -1
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @sctp_ss_default_is_user_msgs_incomplete(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association* nocapture readonly) #2 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 84
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 0
  %8 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %7, align 8
  %9 = icmp eq %struct.sctp_stream_out* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %8, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %12, i64 0, i32 16
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  %18 = zext i1 %17 to i32
  br label %19

19:                                               ; preds = %10, %6, %2, %14
  %20 = phi i32 [ %18, %14 ], [ 0, %2 ], [ 0, %6 ], [ 0, %10 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_rr_add(%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %52, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %52

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %22, label %52

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %24 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %23, align 8
  %25 = icmp eq %struct.sctp_stream_out* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 7
  %28 = load i16, i16* %27, align 4
  br label %31

29:                                               ; preds = %22
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %15, align 8
  %30 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %30, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %23, align 8
  store %struct.sctp_stream_out** %23, %struct.sctp_stream_out*** %19, align 8
  br label %52

31:                                               ; preds = %26, %36
  %32 = phi %struct.sctp_stream_out* [ %24, %26 ], [ %38, %36 ]
  %33 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %32, i64 0, i32 7
  %34 = load i16, i16* %33, align 4
  %35 = icmp ult i16 %34, %28
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %37, align 8
  %39 = icmp eq %struct.sctp_stream_out* %38, null
  br i1 %39, label %46, label %31

40:                                               ; preds = %31
  %41 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %32, i64 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast %struct.sctp_stream_out*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %struct.sctp_stream_out*** %19 to i64*
  store i64 %43, i64* %44, align 8
  store %struct.sctp_stream_out* %32, %struct.sctp_stream_out** %15, align 8
  %45 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %41, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %45, align 8
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %41, align 8
  br label %52

46:                                               ; preds = %36
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %15, align 8
  %47 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %48 = bitcast %struct.sctp_stream_out*** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %struct.sctp_stream_out*** %19 to i64*
  store i64 %49, i64* %50, align 8
  %51 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %47, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %51, align 8
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %47, align 8
  br label %52

52:                                               ; preds = %29, %46, %40, %18, %14, %10
  br i1 %6, label %53, label %56

53:                                               ; preds = %52
  %54 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %55 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %54) #6
  br label %56

56:                                               ; preds = %53, %52
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %struct.sctp_stream_out* @sctp_ss_rrp_select(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* nocapture readnone, %struct.sctp_association* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  %5 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %4, align 8
  ret %struct.sctp_stream_out* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_rrp_packet_done(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* readnone, %struct.sctp_association* nocapture) #1 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  %5 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %4, align 8
  %6 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  %7 = icmp ne %struct.sctp_nets* %1, null
  %8 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 40), align 8
  %9 = icmp eq i32 %8, 0
  br label %10

10:                                               ; preds = %34, %3
  %11 = phi %struct.sctp_stream_out* [ %5, %3 ], [ %20, %34 ]
  %12 = icmp eq %struct.sctp_stream_out* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %14, align 8
  %16 = icmp eq %struct.sctp_stream_out* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %13, %10
  %18 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %6, align 8
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi %struct.sctp_stream_out* [ %15, %13 ], [ %18, %17 ]
  %21 = icmp ne %struct.sctp_stream_out* %20, null
  %22 = and i1 %7, %21
  %23 = and i1 %22, %9
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %20, i64 0, i32 0, i32 0
  %26 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %25, align 8
  %27 = icmp eq %struct.sctp_stream_queue_pending* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %26, i64 0, i32 3
  %30 = load %struct.sctp_nets*, %struct.sctp_nets** %29, align 8
  %31 = icmp eq %struct.sctp_nets* %30, null
  %32 = icmp eq %struct.sctp_nets* %30, %1
  %33 = or i1 %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = icmp eq %struct.sctp_stream_out* %20, %5
  br i1 %35, label %36, label %10

36:                                               ; preds = %34, %28, %24, %19
  %37 = phi %struct.sctp_stream_out* [ %20, %28 ], [ %20, %24 ], [ %20, %19 ], [ null, %34 ]
  store %struct.sctp_stream_out* %37, %struct.sctp_stream_out** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_prio_clear(%struct.sctp_tcb*, %struct.sctp_association* nocapture, i32, i32) #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #6
  br label %9

9:                                                ; preds = %6, %4
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %11 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  %12 = icmp eq %struct.sctp_stream_out* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %2, 0
  %15 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  br label %16

16:                                               ; preds = %13, %20
  %17 = phi %struct.sctp_stream_out* [ %11, %13 ], [ %35, %20 ]
  br i1 %14, label %20, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %17, i64 0, i32 1, i32 0, i32 1
  store i16 0, i16* %19, align 8
  br label %20

20:                                               ; preds = %16, %18
  %21 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %21, align 8
  %23 = icmp eq %struct.sctp_stream_out* %22, null
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %17, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = bitcast %struct.sctp_stream_out*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %22, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = select i1 %23, %struct.sctp_stream_out*** %15, %struct.sctp_stream_out*** %27
  %29 = bitcast %struct.sctp_stream_out*** %28 to i64*
  store i64 %26, i64* %29, align 8
  %30 = bitcast %struct.sctp_stream_out** %21 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.sctp_stream_out*** %24 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  %34 = bitcast %struct.sctp_stream_out** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  %35 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  %36 = icmp eq %struct.sctp_stream_out* %35, null
  br i1 %36, label %37, label %16

37:                                               ; preds = %20, %9
  %38 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %38, align 8
  br i1 %5, label %39, label %42

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %40) #6
  br label %42

42:                                               ; preds = %39, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_prio_init_stream(%struct.sctp_tcb* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_out* readonly) #1 {
  %4 = icmp eq %struct.sctp_stream_out* %2, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 0
  %7 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %6, align 8
  %8 = icmp eq %struct.sctp_stream_out* %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 1
  %12 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %11, align 8
  %13 = icmp eq %struct.sctp_stream_out* %12, %2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %struct.sctp_stream_out** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  %19 = load i16, i16* %17, align 8
  %20 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 1
  store i16 %19, i16* %20, align 8
  br label %24

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = bitcast %struct.sctp_stream_out** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 18, i1 false)
  br label %24

24:                                               ; preds = %21, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_prio_add(%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %52, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %52

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %22, label %52

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %24 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %23, align 8
  %25 = icmp eq %struct.sctp_stream_out* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 1
  %28 = load i16, i16* %27, align 8
  br label %31

29:                                               ; preds = %22
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %15, align 8
  %30 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %30, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %23, align 8
  store %struct.sctp_stream_out** %23, %struct.sctp_stream_out*** %19, align 8
  br label %52

31:                                               ; preds = %26, %36
  %32 = phi %struct.sctp_stream_out* [ %24, %26 ], [ %38, %36 ]
  %33 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %32, i64 0, i32 1, i32 0, i32 1
  %34 = load i16, i16* %33, align 8
  %35 = icmp ult i16 %34, %28
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %37, align 8
  %39 = icmp eq %struct.sctp_stream_out* %38, null
  br i1 %39, label %46, label %31

40:                                               ; preds = %31
  %41 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %32, i64 0, i32 1, i32 0, i32 0, i32 1
  %42 = bitcast %struct.sctp_stream_out*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %struct.sctp_stream_out*** %19 to i64*
  store i64 %43, i64* %44, align 8
  store %struct.sctp_stream_out* %32, %struct.sctp_stream_out** %15, align 8
  %45 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %41, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %45, align 8
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %41, align 8
  br label %52

46:                                               ; preds = %36
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %15, align 8
  %47 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %48 = bitcast %struct.sctp_stream_out*** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %struct.sctp_stream_out*** %19 to i64*
  store i64 %49, i64* %50, align 8
  %51 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %47, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %51, align 8
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %47, align 8
  br label %52

52:                                               ; preds = %29, %46, %40, %18, %14, %10
  br i1 %6, label %53, label %56

53:                                               ; preds = %52
  %54 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %55 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %54) #6
  br label %56

56:                                               ; preds = %53, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_prio_remove(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %14, label %63

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %63, label %22

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  %24 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %23, align 8
  %25 = icmp eq %struct.sctp_stream_out* %24, %2
  br i1 %25, label %26, label %48

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = bitcast %struct.sctp_stream_out*** %27 to %struct.sctpwheel_listhead**
  %29 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %28, align 8
  %30 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %29, i64 0, i32 1
  %31 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %30, align 8
  %32 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %31, align 8
  store %struct.sctp_stream_out* %32, %struct.sctp_stream_out** %23, align 8
  %33 = icmp eq %struct.sctp_stream_out* %32, null
  br i1 %33, label %34, label %44

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %36 = bitcast %struct.sctp_stream_out*** %35 to %struct.sctpwheel_listhead**
  %37 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %36, align 8
  %38 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %37, i64 0, i32 1
  %39 = bitcast %struct.sctp_stream_out*** %38 to i64**
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %struct.sctp_stream_out** %23 to i64*
  store i64 %41, i64* %42, align 8
  %43 = inttoptr i64 %41 to %struct.sctp_stream_out*
  br label %44

44:                                               ; preds = %34, %26
  %45 = phi %struct.sctp_stream_out* [ %43, %34 ], [ %32, %26 ]
  %46 = icmp eq %struct.sctp_stream_out* %45, %2
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %23, align 8
  br label %48

48:                                               ; preds = %22, %47, %44
  %49 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %50 = icmp eq %struct.sctp_stream_out* %49, null
  %51 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %struct.sctp_stream_out*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %55 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %49, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = select i1 %50, %struct.sctp_stream_out*** %54, %struct.sctp_stream_out*** %55
  %57 = bitcast %struct.sctp_stream_out*** %56 to i64*
  store i64 %53, i64* %57, align 8
  %58 = bitcast %struct.sctp_stream_out** %15 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %struct.sctp_stream_out*** %51 to i64**
  %61 = load i64*, i64** %60, align 8
  store i64 %59, i64* %61, align 8
  %62 = bitcast %struct.sctp_stream_out** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false)
  br label %63

63:                                               ; preds = %18, %48, %10
  br i1 %6, label %64, label %67

64:                                               ; preds = %63
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %66 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %65) #6
  br label %67

67:                                               ; preds = %64, %63
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %struct.sctp_stream_out* @sctp_ss_prio_select(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* readnone, %struct.sctp_association* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 0
  %5 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %4, align 8
  %6 = icmp eq %struct.sctp_stream_out* %5, null
  br i1 %6, label %7, label %46

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  %9 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %8, align 8
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  %11 = icmp ne %struct.sctp_nets* %1, null
  %12 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 40), align 8
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %44, %7
  %15 = phi %struct.sctp_stream_out* [ %9, %7 ], [ %30, %44 ]
  %16 = icmp eq %struct.sctp_stream_out* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %18, align 8
  %20 = icmp eq %struct.sctp_stream_out* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %19, i64 0, i32 1, i32 0, i32 1
  %23 = load i16, i16* %22, align 8
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %15, i64 0, i32 1, i32 0, i32 1
  %25 = load i16, i16* %24, align 8
  %26 = icmp eq i16 %23, %25
  br i1 %26, label %29, label %27

27:                                               ; preds = %21, %17, %14
  %28 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi %struct.sctp_stream_out* [ %19, %21 ], [ %28, %27 ]
  %31 = icmp ne %struct.sctp_stream_out* %30, null
  %32 = and i1 %11, %31
  %33 = and i1 %32, %13
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %30, i64 0, i32 0, i32 0
  %36 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %35, align 8
  %37 = icmp eq %struct.sctp_stream_queue_pending* %36, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %36, i64 0, i32 3
  %40 = load %struct.sctp_nets*, %struct.sctp_nets** %39, align 8
  %41 = icmp eq %struct.sctp_nets* %40, null
  %42 = icmp eq %struct.sctp_nets* %40, %1
  %43 = or i1 %41, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %38
  %45 = icmp eq %struct.sctp_stream_out* %30, %9
  br i1 %45, label %46, label %14

46:                                               ; preds = %29, %34, %38, %44, %3
  %47 = phi %struct.sctp_stream_out* [ %5, %3 ], [ %30, %29 ], [ %30, %34 ], [ %30, %38 ], [ null, %44 ]
  ret %struct.sctp_stream_out* %47
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @sctp_ss_prio_get_value(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association* nocapture readnone, %struct.sctp_stream_out* readonly, i16* nocapture) #1 {
  %5 = icmp eq %struct.sctp_stream_out* %2, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 1
  %8 = load i16, i16* %7, align 8
  store i16 %8, i16* %3, align 2
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32 [ 1, %6 ], [ -1, %4 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @sctp_ss_prio_set_value(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association*, %struct.sctp_stream_out*, i16 zeroext) #0 {
  %5 = icmp eq %struct.sctp_stream_out* %2, null
  br i1 %5, label %97, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 1
  store i16 %3, i16* %7, align 8
  %8 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %9 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %8, align 8
  %10 = icmp eq %struct.sctp_stream_queue_pending* %9, null
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %11, align 8
  %13 = icmp eq %struct.sctp_stream_out* %12, null
  br i1 %10, label %14, label %62

14:                                               ; preds = %6
  br i1 %13, label %15, label %19

15:                                               ; preds = %14
  %16 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %16, align 8
  %18 = icmp eq %struct.sctp_stream_out** %17, null
  br i1 %18, label %97, label %19

19:                                               ; preds = %15, %14
  %20 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  %21 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %20, align 8
  %22 = icmp eq %struct.sctp_stream_out* %21, %2
  br i1 %22, label %23, label %45

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = bitcast %struct.sctp_stream_out*** %24 to %struct.sctpwheel_listhead**
  %26 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %25, align 8
  %27 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %26, i64 0, i32 1
  %28 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %27, align 8
  %29 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %28, align 8
  store %struct.sctp_stream_out* %29, %struct.sctp_stream_out** %20, align 8
  %30 = icmp eq %struct.sctp_stream_out* %29, null
  br i1 %30, label %31, label %41

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %33 = bitcast %struct.sctp_stream_out*** %32 to %struct.sctpwheel_listhead**
  %34 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %33, align 8
  %35 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %34, i64 0, i32 1
  %36 = bitcast %struct.sctp_stream_out*** %35 to i64**
  %37 = load i64*, i64** %36, align 8
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %struct.sctp_stream_out** %20 to i64*
  store i64 %38, i64* %39, align 8
  %40 = inttoptr i64 %38 to %struct.sctp_stream_out*
  br label %41

41:                                               ; preds = %31, %23
  %42 = phi %struct.sctp_stream_out* [ %40, %31 ], [ %29, %23 ]
  %43 = icmp eq %struct.sctp_stream_out* %42, %2
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %20, align 8
  br label %45

45:                                               ; preds = %44, %41, %19
  %46 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %11, align 8
  %47 = icmp eq %struct.sctp_stream_out* %46, null
  %48 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %49 = bitcast %struct.sctp_stream_out*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %46, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %53 = select i1 %47, %struct.sctp_stream_out*** %52, %struct.sctp_stream_out*** %51
  %54 = bitcast %struct.sctp_stream_out*** %53 to i64*
  store i64 %50, i64* %54, align 8
  %55 = bitcast %struct.sctp_stream_out** %11 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %struct.sctp_stream_out*** %48 to i64**
  %58 = load i64*, i64** %57, align 8
  store i64 %56, i64* %58, align 8
  %59 = bitcast %struct.sctp_stream_out** %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #6
  %60 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %8, align 8
  %61 = icmp eq %struct.sctp_stream_queue_pending* %60, null
  br i1 %61, label %97, label %63

62:                                               ; preds = %6
  br i1 %13, label %63, label %97

63:                                               ; preds = %45, %62
  %64 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %66 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %65, align 8
  %67 = icmp eq %struct.sctp_stream_out** %66, null
  br i1 %67, label %68, label %97

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %70 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %69, align 8
  %71 = icmp eq %struct.sctp_stream_out* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = load i16, i16* %7, align 8
  br label %76

74:                                               ; preds = %68
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %64, align 8
  %75 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  store %struct.sctp_stream_out** %64, %struct.sctp_stream_out*** %75, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %69, align 8
  store %struct.sctp_stream_out** %69, %struct.sctp_stream_out*** %65, align 8
  br label %97

76:                                               ; preds = %81, %72
  %77 = phi %struct.sctp_stream_out* [ %70, %72 ], [ %83, %81 ]
  %78 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %77, i64 0, i32 1, i32 0, i32 1
  %79 = load i16, i16* %78, align 8
  %80 = icmp ult i16 %79, %73
  br i1 %80, label %81, label %85

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %82, align 8
  %84 = icmp eq %struct.sctp_stream_out* %83, null
  br i1 %84, label %91, label %76

85:                                               ; preds = %76
  %86 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %77, i64 0, i32 1, i32 0, i32 0, i32 1
  %87 = bitcast %struct.sctp_stream_out*** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %struct.sctp_stream_out*** %65 to i64*
  store i64 %88, i64* %89, align 8
  store %struct.sctp_stream_out* %77, %struct.sctp_stream_out** %64, align 8
  %90 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %86, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %90, align 8
  store %struct.sctp_stream_out** %64, %struct.sctp_stream_out*** %86, align 8
  br label %97

91:                                               ; preds = %81
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %64, align 8
  %92 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %93 = bitcast %struct.sctp_stream_out*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %struct.sctp_stream_out*** %65 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %92, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %96, align 8
  store %struct.sctp_stream_out** %64, %struct.sctp_stream_out*** %92, align 8
  br label %97

97:                                               ; preds = %15, %91, %85, %74, %63, %62, %45, %4
  %98 = phi i32 [ -1, %4 ], [ 1, %45 ], [ 1, %62 ], [ 1, %63 ], [ 1, %74 ], [ 1, %85 ], [ 1, %91 ], [ 1, %15 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fb_clear(%struct.sctp_tcb*, %struct.sctp_association* nocapture, i32, i32) #0 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #6
  br label %9

9:                                                ; preds = %6, %4
  %10 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 0
  %11 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  %12 = icmp eq %struct.sctp_stream_out* %11, null
  br i1 %12, label %38, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %2, 0
  %15 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  br label %16

16:                                               ; preds = %13, %21
  %17 = phi %struct.sctp_stream_out* [ %11, %13 ], [ %36, %21 ]
  br i1 %14, label %21, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %17, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast i16* %19 to i32*
  store i32 -1, i32* %20, align 8
  br label %21

21:                                               ; preds = %16, %18
  %22 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %22, align 8
  %24 = icmp eq %struct.sctp_stream_out* %23, null
  %25 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %17, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %struct.sctp_stream_out*** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %23, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = select i1 %24, %struct.sctp_stream_out*** %15, %struct.sctp_stream_out*** %28
  %30 = bitcast %struct.sctp_stream_out*** %29 to i64*
  store i64 %27, i64* %30, align 8
  %31 = bitcast %struct.sctp_stream_out** %22 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct.sctp_stream_out*** %25 to i64**
  %34 = load i64*, i64** %33, align 8
  store i64 %32, i64* %34, align 8
  %35 = bitcast %struct.sctp_stream_out** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  %36 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %10, align 8
  %37 = icmp eq %struct.sctp_stream_out* %36, null
  br i1 %37, label %38, label %16

38:                                               ; preds = %21, %9
  %39 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %39, align 8
  br i1 %5, label %40, label %43

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %42 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %41) #6
  br label %43

43:                                               ; preds = %40, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_fb_init_stream(%struct.sctp_tcb* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_out* readonly) #1 {
  %4 = icmp eq %struct.sctp_stream_out* %2, null
  br i1 %4, label %23, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 0
  %7 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %6, align 8
  %8 = icmp eq %struct.sctp_stream_out* %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 1
  %12 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %11, align 8
  %13 = icmp eq %struct.sctp_stream_out* %12, %2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %11, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i16* %17 to i32*
  %19 = bitcast %struct.sctp_stream_out** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  %20 = load i32, i32* %18, align 8
  %21 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast i16* %21 to i32*
  store i32 %20, i32* %22, align 8
  br label %28

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 1
  %26 = bitcast i16* %25 to i32*
  %27 = bitcast %struct.sctp_stream_out** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false)
  store i32 -1, i32* %26, align 8
  br label %28

28:                                               ; preds = %23, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fb_add(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %36, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %36

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %22, label %36

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast i16* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %12, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %24, align 8
  br label %30

30:                                               ; preds = %22, %27
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %15, align 8
  %31 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %32 = bitcast %struct.sctp_stream_out*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %struct.sctp_stream_out*** %19 to i64*
  store i64 %33, i64* %34, align 8
  %35 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %31, align 8
  store %struct.sctp_stream_out* %2, %struct.sctp_stream_out** %35, align 8
  store %struct.sctp_stream_out** %15, %struct.sctp_stream_out*** %31, align 8
  br label %36

36:                                               ; preds = %30, %18, %14, %10
  br i1 %6, label %37, label %40

37:                                               ; preds = %36
  %38 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %39 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %38) #6
  br label %40

40:                                               ; preds = %37, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fb_remove(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending* nocapture readnone, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 0, i32 0
  %12 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %11, align 8
  %13 = icmp eq %struct.sctp_stream_queue_pending* %12, null
  br i1 %13, label %14, label %63

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %17 = icmp eq %struct.sctp_stream_out* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %19, align 8
  %21 = icmp eq %struct.sctp_stream_out** %20, null
  br i1 %21, label %63, label %22

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 1
  %24 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %23, align 8
  %25 = icmp eq %struct.sctp_stream_out* %24, %2
  br i1 %25, label %26, label %48

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = bitcast %struct.sctp_stream_out*** %27 to %struct.sctpwheel_listhead**
  %29 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %28, align 8
  %30 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %29, i64 0, i32 1
  %31 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %30, align 8
  %32 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %31, align 8
  store %struct.sctp_stream_out* %32, %struct.sctp_stream_out** %23, align 8
  %33 = icmp eq %struct.sctp_stream_out* %32, null
  br i1 %33, label %34, label %44

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %36 = bitcast %struct.sctp_stream_out*** %35 to %struct.sctpwheel_listhead**
  %37 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %36, align 8
  %38 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %37, i64 0, i32 1
  %39 = bitcast %struct.sctp_stream_out*** %38 to i64**
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %struct.sctp_stream_out** %23 to i64*
  store i64 %41, i64* %42, align 8
  %43 = inttoptr i64 %41 to %struct.sctp_stream_out*
  br label %44

44:                                               ; preds = %34, %26
  %45 = phi %struct.sctp_stream_out* [ %43, %34 ], [ %32, %26 ]
  %46 = icmp eq %struct.sctp_stream_out* %45, %2
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store %struct.sctp_stream_out* null, %struct.sctp_stream_out** %23, align 8
  br label %48

48:                                               ; preds = %22, %47, %44
  %49 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %15, align 8
  %50 = icmp eq %struct.sctp_stream_out* %49, null
  %51 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %52 = bitcast %struct.sctp_stream_out*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %55 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %49, i64 0, i32 1, i32 0, i32 0, i32 1
  %56 = select i1 %50, %struct.sctp_stream_out*** %54, %struct.sctp_stream_out*** %55
  %57 = bitcast %struct.sctp_stream_out*** %56 to i64*
  store i64 %53, i64* %57, align 8
  %58 = bitcast %struct.sctp_stream_out** %15 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %struct.sctp_stream_out*** %51 to i64**
  %61 = load i64*, i64** %60, align 8
  store i64 %59, i64* %61, align 8
  %62 = bitcast %struct.sctp_stream_out** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false)
  br label %63

63:                                               ; preds = %18, %48, %10
  br i1 %6, label %64, label %67

64:                                               ; preds = %63
  %65 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %66 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %65) #6
  br label %67

67:                                               ; preds = %64, %63
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %struct.sctp_stream_out* @sctp_ss_fb_select(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* readnone, %struct.sctp_association* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 0
  %5 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %4, align 8
  %6 = icmp eq %struct.sctp_stream_out* %5, null
  br i1 %6, label %7, label %67

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  %9 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %8, align 8
  %10 = icmp eq %struct.sctp_stream_out* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  %13 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %12, align 8
  %14 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 1
  %15 = bitcast %struct.sctp_stream_out*** %14 to %struct.sctpwheel_listhead**
  %16 = load %struct.sctpwheel_listhead*, %struct.sctpwheel_listhead** %15, align 8
  %17 = getelementptr inbounds %struct.sctpwheel_listhead, %struct.sctpwheel_listhead* %16, i64 0, i32 1
  %18 = load %struct.sctp_stream_out**, %struct.sctp_stream_out*** %17, align 8
  %19 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %18, align 8
  %20 = icmp eq %struct.sctp_stream_out* %13, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %11, %7
  %22 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  br label %25

23:                                               ; preds = %11
  %24 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi %struct.sctp_stream_out** [ %22, %21 ], [ %24, %23 ]
  %27 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %26, align 8
  %28 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 40), align 8
  %29 = icmp ne i32 %28, 0
  %30 = icmp eq %struct.sctp_nets* %1, null
  %31 = or i1 %30, %29
  %32 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  br label %33

33:                                               ; preds = %61, %25
  %34 = phi %struct.sctp_stream_out* [ null, %25 ], [ %62, %61 ]
  %35 = phi %struct.sctp_stream_out* [ %27, %25 ], [ %65, %61 ]
  %36 = icmp ne %struct.sctp_stream_out* %35, null
  br i1 %36, label %37, label %61

37:                                               ; preds = %33
  br i1 %31, label %48, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %35, i64 0, i32 0, i32 0
  %40 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %39, align 8
  %41 = icmp eq %struct.sctp_stream_queue_pending* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %40, i64 0, i32 3
  %44 = load %struct.sctp_nets*, %struct.sctp_nets** %43, align 8
  %45 = icmp eq %struct.sctp_nets* %44, null
  %46 = icmp eq %struct.sctp_nets* %44, %1
  %47 = or i1 %45, %46
  br i1 %47, label %48, label %61

48:                                               ; preds = %37, %42
  %49 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %35, i64 0, i32 1, i32 0, i32 1
  %50 = bitcast i16* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = icmp sgt i32 %51, -1
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = icmp eq %struct.sctp_stream_out* %34, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %34, i64 0, i32 1, i32 0, i32 1
  %57 = bitcast i16* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %51, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %55, %53
  br label %61

61:                                               ; preds = %42, %38, %48, %55, %60, %33
  %62 = phi %struct.sctp_stream_out* [ %35, %60 ], [ %34, %55 ], [ %34, %48 ], [ %34, %33 ], [ %34, %38 ], [ %34, %42 ]
  %63 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %35, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = select i1 %36, %struct.sctp_stream_out** %63, %struct.sctp_stream_out** %32
  %65 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %64, align 8
  %66 = icmp eq %struct.sctp_stream_out* %65, %62
  br i1 %66, label %67, label %33

67:                                               ; preds = %61, %3
  %68 = phi %struct.sctp_stream_out* [ %5, %3 ], [ %62, %61 ]
  ret %struct.sctp_stream_out* %68
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_fb_scheduled(%struct.sctp_tcb* nocapture, %struct.sctp_nets* nocapture readnone, %struct.sctp_association* nocapture, %struct.sctp_stream_out*, i32) #1 {
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 168
  %7 = load i8, i8* %6, align 2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %3, i64 0, i32 0, i32 0
  %11 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %10, align 8
  %12 = icmp eq %struct.sctp_stream_queue_pending* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %11, i64 0, i32 17
  %15 = load i8, i8* %14, align 2
  %16 = icmp eq i8 %15, 1
  br i1 %16, label %18, label %17

17:                                               ; preds = %9, %13
  br label %18

18:                                               ; preds = %5, %13, %17
  %19 = phi %struct.sctp_stream_out* [ null, %17 ], [ %3, %13 ], [ null, %5 ]
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 0
  store %struct.sctp_stream_out* %19, %struct.sctp_stream_out** %20, align 8
  %21 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %3, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast i16* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2, i32 0, i32 0
  %25 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %24, align 8
  %26 = icmp eq %struct.sctp_stream_out* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %18, %27
  %28 = phi %struct.sctp_stream_out* [ %36, %27 ], [ %25, %18 ]
  %29 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %28, i64 0, i32 1, i32 0, i32 1
  %30 = bitcast i16* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = sub nsw i32 %31, %23
  %33 = icmp sgt i32 %32, 0
  %34 = select i1 %33, i32 %32, i32 0
  store i32 %34, i32* %30, align 8
  %35 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %35, align 8
  %37 = icmp eq %struct.sctp_stream_out* %36, null
  br i1 %37, label %38, label %27

38:                                               ; preds = %27, %18
  %39 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %3, i64 0, i32 0, i32 0
  %40 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %39, align 8
  %41 = icmp eq %struct.sctp_stream_queue_pending* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %40, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ -1, %38 ]
  store i32 %46, i32* %22, align 8
  %47 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 1
  store %struct.sctp_stream_out* %3, %struct.sctp_stream_out** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fcfs_init(%struct.sctp_tcb*, %struct.sctp_association*, i32) #0 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %7 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %6) #6
  br label %8

8:                                                ; preds = %3, %5
  %9 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2
  %10 = bitcast %union.anon.47* %9 to %struct.sctp_stream_queue_pending**
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %10, align 8
  %11 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %12 = bitcast %struct.sctp_stream_out*** %11 to %union.anon.47**
  store %union.anon.47* %9, %union.anon.47** %12, align 8
  %13 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 129
  %14 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 28
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 2, i32 0, i32 1
  %16 = bitcast %struct.sctp_stream_out*** %15 to %struct.sctp_stream_queue_pending***
  %17 = bitcast %struct.sctp_stream_out*** %15 to i64*
  %18 = load i16, i16* %13, align 2
  br label %19

19:                                               ; preds = %8, %65
  %20 = phi i16 [ %18, %8 ], [ %60, %65 ]
  %21 = phi i32 [ 0, %8 ], [ %66, %65 ]
  %22 = icmp eq i16 %20, 0
  br i1 %22, label %68, label %23

23:                                               ; preds = %19
  %24 = icmp ne i32 %21, 0
  br label %25

25:                                               ; preds = %23, %59
  %26 = phi i16 [ %20, %23 ], [ %60, %59 ]
  %27 = phi i64 [ 0, %23 ], [ %62, %59 ]
  %28 = phi i32 [ 0, %23 ], [ %61, %59 ]
  %29 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %14, align 8
  %30 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %29, i64 %27, i32 0, i32 0
  %31 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %30, align 8
  %32 = icmp ne %struct.sctp_stream_queue_pending* %31, null
  %33 = and i1 %24, %32
  br i1 %33, label %34, label %43

34:                                               ; preds = %25, %34
  %35 = phi %struct.sctp_stream_queue_pending* [ %39, %34 ], [ %31, %25 ]
  %36 = phi i32 [ %38, %34 ], [ 0, %25 ]
  %37 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %35, i64 0, i32 4, i32 0
  %38 = add nuw i32 %36, 1
  %39 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %37, align 8
  %40 = icmp ne %struct.sctp_stream_queue_pending* %39, null
  %41 = icmp ult i32 %38, %21
  %42 = and i1 %41, %40
  br i1 %42, label %34, label %43

43:                                               ; preds = %34, %25
  %44 = phi %struct.sctp_stream_queue_pending* [ %31, %25 ], [ %39, %34 ]
  %45 = phi i1 [ %32, %25 ], [ %40, %34 ]
  br i1 %45, label %46, label %59

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %44, i64 0, i32 5, i32 0
  %48 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %47, align 8
  %49 = icmp eq %struct.sctp_stream_queue_pending* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %44, i64 0, i32 5, i32 1
  %52 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %51, align 8
  %53 = icmp eq %struct.sctp_stream_queue_pending** %52, null
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %47, align 8
  %55 = load i64, i64* %17, align 8
  %56 = bitcast %struct.sctp_stream_queue_pending*** %51 to i64*
  store i64 %55, i64* %56, align 8
  %57 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %16, align 8
  store %struct.sctp_stream_queue_pending* %44, %struct.sctp_stream_queue_pending** %57, align 8
  store %struct.sctp_stream_queue_pending** %47, %struct.sctp_stream_queue_pending*** %16, align 8
  %58 = load i16, i16* %13, align 2
  br label %59

59:                                               ; preds = %54, %50, %46, %43
  %60 = phi i16 [ %26, %43 ], [ %26, %46 ], [ %26, %50 ], [ %58, %54 ]
  %61 = phi i32 [ %28, %43 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ]
  %62 = add nuw nsw i64 %27, 1
  %63 = zext i16 %60 to i64
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %25, label %65

65:                                               ; preds = %59
  %66 = add i32 %21, 1
  %67 = icmp eq i32 %61, 0
  br i1 %67, label %68, label %19

68:                                               ; preds = %19, %65
  br i1 %4, label %69, label %72

69:                                               ; preds = %68
  %70 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %71 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %70) #6
  br label %72

72:                                               ; preds = %69, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fcfs_clear(%struct.sctp_tcb*, %struct.sctp_association* nocapture, i32, i32) #0 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %41, label %6

6:                                                ; preds = %4
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %10 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %9) #6
  br label %11

11:                                               ; preds = %8, %6
  %12 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2
  %13 = bitcast %union.anon.47* %12 to %struct.sctp_stream_queue_pending**
  %14 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %13, align 8
  %15 = icmp eq %struct.sctp_stream_queue_pending* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %18 = bitcast %struct.sctp_stream_out*** %17 to i64*
  br label %19

19:                                               ; preds = %16, %19
  %20 = phi %struct.sctp_stream_queue_pending* [ %14, %16 ], [ %35, %19 ]
  %21 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %20, i64 0, i32 5, i32 0
  %22 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %21, align 8
  %23 = icmp eq %struct.sctp_stream_queue_pending* %22, null
  %24 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %20, i64 0, i32 5, i32 1
  %25 = bitcast %struct.sctp_stream_queue_pending*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %22, i64 0, i32 5, i32 1
  %28 = bitcast %struct.sctp_stream_queue_pending*** %27 to i64*
  %29 = select i1 %23, i64* %18, i64* %28
  store i64 %26, i64* %29, align 8
  %30 = bitcast %struct.sctp_stream_queue_pending** %21 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.sctp_stream_queue_pending*** %24 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  %34 = bitcast %struct.sctp_stream_queue_pending** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  %35 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %13, align 8
  %36 = icmp eq %struct.sctp_stream_queue_pending* %35, null
  br i1 %36, label %37, label %19

37:                                               ; preds = %19, %11
  br i1 %7, label %38, label %41

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %40 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %39) #6
  br label %41

41:                                               ; preds = %4, %37, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @sctp_ss_fcfs_init_stream(%struct.sctp_tcb* nocapture, %struct.sctp_stream_out*, %struct.sctp_stream_out* readnone) #1 {
  %4 = icmp eq %struct.sctp_stream_out* %2, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 0
  %7 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %6, align 8
  %8 = icmp eq %struct.sctp_stream_out* %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %6, align 8
  br label %10

10:                                               ; preds = %9, %5
  %11 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 22, i32 1
  %12 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %11, align 8
  %13 = icmp eq %struct.sctp_stream_out* %12, %2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store %struct.sctp_stream_out* %1, %struct.sctp_stream_out** %11, align 8
  br label %15

15:                                               ; preds = %3, %10, %14
  %16 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = bitcast %struct.sctp_stream_out** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fcfs_add(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out* nocapture readnone, %struct.sctp_stream_queue_pending*, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = icmp eq %struct.sctp_stream_queue_pending* %3, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %3, i64 0, i32 5, i32 0
  %14 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %13, align 8
  %15 = icmp eq %struct.sctp_stream_queue_pending* %14, null
  br i1 %15, label %16, label %27

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %3, i64 0, i32 5, i32 1
  %18 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %17, align 8
  %19 = icmp eq %struct.sctp_stream_queue_pending** %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %16
  store %struct.sctp_stream_queue_pending* null, %struct.sctp_stream_queue_pending** %13, align 8
  %21 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %22 = bitcast %struct.sctp_stream_out*** %21 to %struct.sctp_stream_queue_pending***
  %23 = bitcast %struct.sctp_stream_out*** %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %struct.sctp_stream_queue_pending*** %17 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %22, align 8
  store %struct.sctp_stream_queue_pending* %3, %struct.sctp_stream_queue_pending** %26, align 8
  store %struct.sctp_stream_queue_pending** %13, %struct.sctp_stream_queue_pending*** %22, align 8
  br label %27

27:                                               ; preds = %10, %20, %16, %12
  br i1 %6, label %28, label %31

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %30 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #6
  br label %31

31:                                               ; preds = %28, %27
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @sctp_ss_fcfs_is_empty(%struct.sctp_tcb* nocapture readnone, %struct.sctp_association* nocapture readonly) #2 {
  %3 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2
  %4 = bitcast %union.anon.47* %3 to %struct.sctp_stream_queue_pending**
  %5 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %4, align 8
  %6 = icmp eq %struct.sctp_stream_queue_pending* %5, null
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @sctp_ss_fcfs_remove(%struct.sctp_tcb*, %struct.sctp_association* nocapture, %struct.sctp_stream_out* nocapture readnone, %struct.sctp_stream_queue_pending*, i32) #0 {
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %9 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %8) #6
  br label %10

10:                                               ; preds = %7, %5
  %11 = icmp eq %struct.sctp_stream_queue_pending* %3, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %3, i64 0, i32 5, i32 0
  %14 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %13, align 8
  %15 = icmp eq %struct.sctp_stream_queue_pending* %14, null
  %16 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %3, i64 0, i32 5, i32 1
  br i1 %15, label %17, label %20

17:                                               ; preds = %12
  %18 = load %struct.sctp_stream_queue_pending**, %struct.sctp_stream_queue_pending*** %16, align 8
  %19 = icmp eq %struct.sctp_stream_queue_pending** %18, null
  br i1 %19, label %35, label %25

20:                                               ; preds = %12
  %21 = bitcast %struct.sctp_stream_queue_pending*** %16 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %14, i64 0, i32 5, i32 1
  %24 = bitcast %struct.sctp_stream_queue_pending*** %23 to i64*
  store i64 %22, i64* %24, align 8
  br label %29

25:                                               ; preds = %17
  %26 = ptrtoint %struct.sctp_stream_queue_pending** %18 to i64
  %27 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %1, i64 0, i32 22, i32 2, i32 0, i32 1
  %28 = bitcast %struct.sctp_stream_out*** %27 to i64*
  store i64 %26, i64* %28, align 8
  br label %29

29:                                               ; preds = %25, %20
  %30 = bitcast %struct.sctp_stream_queue_pending** %13 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.sctp_stream_queue_pending*** %16 to i64**
  %33 = load i64*, i64** %32, align 8
  store i64 %31, i64* %33, align 8
  %34 = bitcast %struct.sctp_stream_queue_pending** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  br label %35

35:                                               ; preds = %17, %10, %29
  br i1 %6, label %36, label %39

36:                                               ; preds = %35
  %37 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 15
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %37) #6
  br label %39

39:                                               ; preds = %36, %35
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %struct.sctp_stream_out* @sctp_ss_fcfs_select(%struct.sctp_tcb* nocapture readnone, %struct.sctp_nets* readnone, %struct.sctp_association* nocapture readonly) #2 {
  %4 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 0
  %5 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %4, align 8
  %6 = icmp eq %struct.sctp_stream_out* %5, null
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 22, i32 2
  %9 = bitcast %union.anon.47* %8 to %struct.sctp_stream_queue_pending**
  %10 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %9, align 8
  %11 = icmp eq %struct.sctp_stream_queue_pending* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.sctp_association, %struct.sctp_association* %2, i64 0, i32 28
  %14 = load %struct.sctp_stream_out*, %struct.sctp_stream_out** %13, align 8
  %15 = icmp ne %struct.sctp_nets* %1, null
  %16 = load i32, i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 2, i32 40), align 8
  %17 = icmp eq i32 %16, 0
  br label %22

18:                                               ; preds = %35
  %19 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %23, i64 0, i32 5, i32 0
  %20 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %19, align 8
  %21 = icmp eq %struct.sctp_stream_queue_pending* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %12, %18
  %23 = phi %struct.sctp_stream_queue_pending* [ %10, %12 ], [ %20, %18 ]
  %24 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %23, i64 0, i32 12
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i64
  %27 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %14, i64 %26
  %28 = icmp ne %struct.sctp_stream_out* %27, null
  %29 = and i1 %15, %28
  %30 = and i1 %17, %29
  br i1 %30, label %31, label %41

31:                                               ; preds = %22
  %32 = getelementptr inbounds %struct.sctp_stream_out, %struct.sctp_stream_out* %27, i64 0, i32 0, i32 0
  %33 = load %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** %32, align 8
  %34 = icmp eq %struct.sctp_stream_queue_pending* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.sctp_stream_queue_pending, %struct.sctp_stream_queue_pending* %33, i64 0, i32 3
  %37 = load %struct.sctp_nets*, %struct.sctp_nets** %36, align 8
  %38 = icmp eq %struct.sctp_nets* %37, null
  %39 = icmp eq %struct.sctp_nets* %37, %1
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %18

41:                                               ; preds = %35, %31, %22, %18, %7, %3
  %42 = phi %struct.sctp_stream_out* [ %5, %3 ], [ null, %7 ], [ %27, %35 ], [ %27, %31 ], [ %27, %22 ], [ null, %18 ]
  ret %struct.sctp_stream_out* %42
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
