; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_req.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_req.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.X509_req_st = type { %struct.X509_REQ_INFO*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32 }
%struct.X509_REQ_INFO = type { %struct.ASN1_ENCODING_st, %struct.asn1_string_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.stack_st_X509_ATTRIBUTE* }
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type { %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st* }
%struct.stack_st_X509_ATTRIBUTE = type opaque
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type { %struct.asn1_string_st*, %struct.asn1_string_st* }
%struct.stack_st_X509_EXTENSION = type opaque
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type { %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_ALGOR* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.stack_st_X509_ALGOR = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.env_md_st = type opaque
%struct.x509_attributes_st = type { %struct.asn1_object_st*, %struct.stack_st_ASN1_TYPE* }
%struct.stack_st_ASN1_TYPE = type opaque
%struct.ASN1_VALUE_st = type opaque

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509/x509_req.c\00", align 1
@X509_EXTENSIONS_it = external constant %struct.ASN1_ITEM_st, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_req_st* @X509_to_X509_REQ(%struct.x509_st*, %struct.evp_pkey_st*, %struct.env_md_st*) local_unnamed_addr #0 {
  %4 = tail call %struct.X509_req_st* @X509_REQ_new() #6
  %5 = icmp eq %struct.X509_req_st* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 11, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 80) #6
  br label %35

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %4, i64 0, i32 0
  %9 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %8, align 8
  %10 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %9, i64 0, i32 1
  %11 = load %struct.asn1_string_st*, %struct.asn1_string_st** %10, align 8
  %12 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %11, i64 0, i32 0
  store i32 1, i32* %12, align 8
  %13 = tail call i8* @OPENSSL_malloc(i64 1) #6
  %14 = load %struct.asn1_string_st*, %struct.asn1_string_st** %10, align 8
  %15 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 2
  store i8* %13, i8** %15, align 8
  %16 = load %struct.asn1_string_st*, %struct.asn1_string_st** %10, align 8
  %17 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %16, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %35, label %20

20:                                               ; preds = %7
  store i8 0, i8* %18, align 1
  %21 = tail call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* %0) #6
  %22 = tail call i32 @X509_REQ_set_subject_name(%struct.X509_req_st* nonnull %4, %struct.X509_name_st* %21) #6
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = tail call %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st* %0) #6
  %26 = icmp eq %struct.evp_pkey_st* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @X509_REQ_set_pubkey(%struct.X509_req_st* nonnull %4, %struct.evp_pkey_st* nonnull %25) #6
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %25) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = tail call i32 @X509_REQ_sign(%struct.X509_req_st* nonnull %4, %struct.evp_pkey_st* nonnull %1, %struct.env_md_st* %2) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32, %27, %20, %24, %7, %6
  tail call void @X509_REQ_free(%struct.X509_req_st* %4) #6
  br label %36

36:                                               ; preds = %30, %32, %35
  %37 = phi %struct.X509_req_st* [ null, %35 ], [ %4, %32 ], [ %4, %30 ]
  ret %struct.X509_req_st* %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.X509_req_st* @X509_REQ_new() local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare i32 @X509_REQ_set_subject_name(%struct.X509_req_st*, %struct.X509_name_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

declare %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_REQ_set_pubkey(%struct.X509_req_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @X509_REQ_sign(%struct.X509_req_st*, %struct.evp_pkey_st*, %struct.env_md_st*) local_unnamed_addr #2

declare void @X509_REQ_free(%struct.X509_req_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_REQ_get_version(%struct.X509_req_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %3 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %2, align 8
  %4 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %3, i64 0, i32 1
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  %6 = tail call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* %5) #6
  ret i64 %6
}

declare i64 @ASN1_INTEGER_get(%struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_name_st* @X509_REQ_get_subject_name(%struct.X509_req_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %3 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %2, align 8
  %4 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %3, i64 0, i32 2
  %5 = load %struct.X509_name_st*, %struct.X509_name_st** %4, align 8
  ret %struct.X509_name_st* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @X509_REQ_get_pubkey(%struct.X509_req_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.X509_req_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %5 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %4, align 8
  %6 = icmp eq %struct.X509_REQ_INFO* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %5, i64 0, i32 3
  %9 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %8, align 8
  %10 = tail call %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st* %9) #6
  br label %11

11:                                               ; preds = %1, %3, %7
  %12 = phi %struct.evp_pkey_st* [ %10, %7 ], [ null, %3 ], [ null, %1 ]
  ret %struct.evp_pkey_st* %12
}

declare %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_check_private_key(%struct.X509_req_st* readonly, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.X509_req_st* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %6 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %5, align 8
  %7 = icmp eq %struct.X509_REQ_INFO* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %6, i64 0, i32 3
  %10 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %9, align 8
  %11 = tail call %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st* %10) #6
  br label %12

12:                                               ; preds = %2, %4, %8
  %13 = phi %struct.evp_pkey_st* [ %11, %8 ], [ null, %4 ], [ null, %2 ]
  %14 = tail call i32 @EVP_PKEY_cmp(%struct.evp_pkey_st* %13, %struct.evp_pkey_st* %1) #6
  switch i32 %14, label %24 [
    i32 1, label %15
    i32 0, label %16
    i32 -1, label %17
    i32 -2, label %18
  ]

15:                                               ; preds = %12
  br label %24

16:                                               ; preds = %12
  tail call void @ERR_put_error(i32 11, i32 0, i32 116, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 141) #6
  br label %24

17:                                               ; preds = %12
  tail call void @ERR_put_error(i32 11, i32 0, i32 115, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 144) #6
  br label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %23 [
    i32 408, label %21
    i32 28, label %22
  ]

21:                                               ; preds = %18
  tail call void @ERR_put_error(i32 11, i32 0, i32 15, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 148) #6
  br label %24

22:                                               ; preds = %18
  tail call void @ERR_put_error(i32 11, i32 0, i32 104, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 153) #6
  br label %24

23:                                               ; preds = %18
  tail call void @ERR_put_error(i32 11, i32 0, i32 128, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 156) #6
  br label %24

24:                                               ; preds = %23, %12, %22, %21, %17, %16, %15
  %25 = phi i32 [ 0, %12 ], [ 0, %21 ], [ 0, %22 ], [ 0, %23 ], [ 0, %17 ], [ 0, %16 ], [ 1, %15 ]
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* %13) #6
  ret i32 %25
}

declare i32 @EVP_PKEY_cmp(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @X509_REQ_extension_nid(i32) local_unnamed_addr #4 {
  %2 = add i32 %0, -171
  %3 = icmp ult i32 %2, 2
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509_EXTENSION* @X509_REQ_get_extensions(%struct.X509_req_st* readonly) local_unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = icmp eq %struct.X509_req_st* %0, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %6 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %5, align 8
  %7 = icmp eq %struct.X509_REQ_INFO* %6, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %6, i64 0, i32 4
  %10 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %9, align 8
  %11 = tail call i32 @X509at_get_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE* %10, i32 172, i32 -1) #6
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %5, align 8
  %15 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %14, i64 0, i32 4
  %16 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %15, align 8
  %17 = tail call i32 @X509at_get_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE* %16, i32 171, i32 -1) #6
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %45, label %19

19:                                               ; preds = %8, %13
  %20 = phi i32 [ %17, %13 ], [ %11, %8 ]
  %21 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %5, align 8
  %22 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %21, i64 0, i32 4
  %23 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %22, align 8
  %24 = tail call %struct.x509_attributes_st* @X509at_get_attr(%struct.stack_st_X509_ATTRIBUTE* %23, i32 %20) #6
  %25 = tail call %struct.asn1_type_st* @X509_ATTRIBUTE_get0_type(%struct.x509_attributes_st* %24, i32 0) #6
  %26 = icmp eq %struct.asn1_type_st* %25, null
  br i1 %26, label %45, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %25, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 16
  br i1 %30, label %31, label %45

31:                                               ; preds = %27
  %32 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  %33 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %25, i64 0, i32 1
  %34 = bitcast %union.anon* %33 to %struct.asn1_string_st**
  %35 = load %struct.asn1_string_st*, %struct.asn1_string_st** %34, align 8
  %36 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %35, i64 0, i32 2
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast i8** %2 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %35, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** null, i8** nonnull %2, i64 %42, %struct.ASN1_ITEM_st* nonnull @X509_EXTENSIONS_it) #6
  %44 = bitcast %struct.ASN1_VALUE_st* %43 to %struct.stack_st_X509_EXTENSION*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %45

45:                                               ; preds = %13, %19, %27, %31, %1, %4
  %46 = phi %struct.stack_st_X509_EXTENSION* [ null, %4 ], [ null, %1 ], [ null, %13 ], [ %44, %31 ], [ null, %27 ], [ null, %19 ]
  ret %struct.stack_st_X509_EXTENSION* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_get_attr_by_NID(%struct.X509_req_st* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %5 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %4, align 8
  %6 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %5, i64 0, i32 4
  %7 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %6, align 8
  %8 = tail call i32 @X509at_get_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE* %7, i32 %1, i32 %2) #6
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_attributes_st* @X509_REQ_get_attr(%struct.X509_req_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %4 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %3, align 8
  %5 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %4, i64 0, i32 4
  %6 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %5, align 8
  %7 = tail call %struct.x509_attributes_st* @X509at_get_attr(%struct.stack_st_X509_ATTRIBUTE* %6, i32 %1) #6
  ret %struct.x509_attributes_st* %7
}

declare %struct.asn1_type_st* @X509_ATTRIBUTE_get0_type(%struct.x509_attributes_st*, i32) local_unnamed_addr #2

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_add_extensions_nid(%struct.X509_req_st* nocapture readonly, %struct.stack_st_X509_EXTENSION*, i32) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  store i8* null, i8** %4, align 8
  %6 = bitcast %struct.stack_st_X509_EXTENSION* %1 to %struct.ASN1_VALUE_st*
  %7 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %6, i8** nonnull %4, %struct.ASN1_ITEM_st* nonnull @X509_EXTENSIONS_it) #6
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = load i8*, i8** %4, align 8
  %11 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %12 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %11, align 8
  %13 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %12, i64 0, i32 4
  %14 = call %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE** %13, i32 %2, i32 16, i8* %10, i32 %7) #6
  %15 = icmp ne %struct.stack_st_X509_ATTRIBUTE* %14, null
  %16 = zext i1 %15 to i32
  %17 = load i8*, i8** %4, align 8
  call void @OPENSSL_free(i8* %17) #6
  br label %18

18:                                               ; preds = %3, %9
  %19 = phi i32 [ %16, %9 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  ret i32 %19
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_add1_attr_by_NID(%struct.X509_req_st* nocapture readonly, i32, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %7 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %6, align 8
  %8 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %7, i64 0, i32 4
  %9 = tail call %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE** %8, i32 %1, i32 %2, i8* %3, i32 %4) #6
  %10 = icmp ne %struct.stack_st_X509_ATTRIBUTE* %9, null
  %11 = zext i1 %10 to i32
  ret i32 %11
}

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_add_extensions(%struct.X509_req_st* nocapture readonly, %struct.stack_st_X509_EXTENSION*) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  store i8* null, i8** %3, align 8
  %5 = bitcast %struct.stack_st_X509_EXTENSION* %1 to %struct.ASN1_VALUE_st*
  %6 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %5, i8** nonnull %3, %struct.ASN1_ITEM_st* nonnull @X509_EXTENSIONS_it) #6
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %11 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %10, align 8
  %12 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %11, i64 0, i32 4
  %13 = call %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE** %12, i32 172, i32 16, i8* %9, i32 %6) #6
  %14 = icmp ne %struct.stack_st_X509_ATTRIBUTE* %13, null
  %15 = zext i1 %14 to i32
  %16 = load i8*, i8** %3, align 8
  call void @OPENSSL_free(i8* %16) #6
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi i32 [ %15, %8 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_get_attr_count(%struct.X509_req_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %3 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %2, align 8
  %4 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %3, i64 0, i32 4
  %5 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %4, align 8
  %6 = tail call i32 @X509at_get_attr_count(%struct.stack_st_X509_ATTRIBUTE* %5) #6
  ret i32 %6
}

declare i32 @X509at_get_attr_count(%struct.stack_st_X509_ATTRIBUTE*) local_unnamed_addr #2

declare i32 @X509at_get_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_get_attr_by_OBJ(%struct.X509_req_st* nocapture readonly, %struct.asn1_object_st*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %5 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %4, align 8
  %6 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %5, i64 0, i32 4
  %7 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %6, align 8
  %8 = tail call i32 @X509at_get_attr_by_OBJ(%struct.stack_st_X509_ATTRIBUTE* %7, %struct.asn1_object_st* %1, i32 %2) #6
  ret i32 %8
}

declare i32 @X509at_get_attr_by_OBJ(%struct.stack_st_X509_ATTRIBUTE*, %struct.asn1_object_st*, i32) local_unnamed_addr #2

declare %struct.x509_attributes_st* @X509at_get_attr(%struct.stack_st_X509_ATTRIBUTE*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_attributes_st* @X509_REQ_delete_attr(%struct.X509_req_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %4 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %3, align 8
  %5 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %4, i64 0, i32 4
  %6 = load %struct.stack_st_X509_ATTRIBUTE*, %struct.stack_st_X509_ATTRIBUTE** %5, align 8
  %7 = tail call %struct.x509_attributes_st* @X509at_delete_attr(%struct.stack_st_X509_ATTRIBUTE* %6, i32 %1) #6
  ret %struct.x509_attributes_st* %7
}

declare %struct.x509_attributes_st* @X509at_delete_attr(%struct.stack_st_X509_ATTRIBUTE*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_add1_attr(%struct.X509_req_st* nocapture readonly, %struct.x509_attributes_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %4 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %3, align 8
  %5 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %4, i64 0, i32 4
  %6 = tail call %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr(%struct.stack_st_X509_ATTRIBUTE** %5, %struct.x509_attributes_st* %1) #6
  %7 = icmp ne %struct.stack_st_X509_ATTRIBUTE* %6, null
  %8 = zext i1 %7 to i32
  ret i32 %8
}

declare %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr(%struct.stack_st_X509_ATTRIBUTE**, %struct.x509_attributes_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_add1_attr_by_OBJ(%struct.X509_req_st* nocapture readonly, %struct.asn1_object_st*, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %7 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %6, align 8
  %8 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %7, i64 0, i32 4
  %9 = tail call %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_OBJ(%struct.stack_st_X509_ATTRIBUTE** %8, %struct.asn1_object_st* %1, i32 %2, i8* %3, i32 %4) #6
  %10 = icmp ne %struct.stack_st_X509_ATTRIBUTE* %9, null
  %11 = zext i1 %10 to i32
  ret i32 %11
}

declare %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_OBJ(%struct.stack_st_X509_ATTRIBUTE**, %struct.asn1_object_st*, i32, i8*, i32) local_unnamed_addr #2

declare %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_NID(%struct.stack_st_X509_ATTRIBUTE**, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_add1_attr_by_txt(%struct.X509_req_st* nocapture readonly, i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %7 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %6, align 8
  %8 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %7, i64 0, i32 4
  %9 = tail call %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_txt(%struct.stack_st_X509_ATTRIBUTE** %8, i8* %1, i32 %2, i8* %3, i32 %4) #6
  %10 = icmp ne %struct.stack_st_X509_ATTRIBUTE* %9, null
  %11 = zext i1 %10 to i32
  ret i32 %11
}

declare %struct.stack_st_X509_ATTRIBUTE* @X509at_add1_attr_by_txt(%struct.stack_st_X509_ATTRIBUTE**, i8*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @X509_REQ_get0_signature(%struct.X509_req_st* nocapture readonly, %struct.asn1_string_st**, %struct.X509_algor_st**) local_unnamed_addr #5 {
  %4 = icmp eq %struct.asn1_string_st** %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 2
  %7 = bitcast %struct.asn1_string_st** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.asn1_string_st** %1 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %5
  %11 = icmp eq %struct.X509_algor_st** %2, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 1
  %14 = bitcast %struct.X509_algor_st** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %struct.X509_algor_st** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_REQ_get_signature_nid(%struct.X509_req_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 1
  %3 = load %struct.X509_algor_st*, %struct.X509_algor_st** %2, align 8
  %4 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %3, i64 0, i32 0
  %5 = load %struct.asn1_object_st*, %struct.asn1_object_st** %4, align 8
  %6 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* %5) #6
  ret i32 %6
}

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_re_X509_REQ_tbs(%struct.X509_req_st* nocapture readonly, i8**) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_req_st, %struct.X509_req_st* %0, i64 0, i32 0
  %4 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %3, align 8
  %5 = getelementptr inbounds %struct.X509_REQ_INFO, %struct.X509_REQ_INFO* %4, i64 0, i32 0, i32 2
  store i32 1, i32* %5, align 8
  %6 = load %struct.X509_REQ_INFO*, %struct.X509_REQ_INFO** %3, align 8
  %7 = tail call i32 @i2d_X509_REQ_INFO(%struct.X509_REQ_INFO* %6, i8** %1) #6
  ret i32 %7
}

declare i32 @i2d_X509_REQ_INFO(%struct.X509_REQ_INFO*, i8**) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
