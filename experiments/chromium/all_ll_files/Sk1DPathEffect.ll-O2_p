; ModuleID = '../../third_party/skia/src/effects/Sk1DPathEffect.cpp'
source_filename = "../../third_party/skia/src/effects/Sk1DPathEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPath1DPathEffectImpl = type { %class.Sk1DPathEffect.base, [4 x i8], %class.SkPath, float, float, i32, [4 x i8] }
%class.Sk1DPathEffect.base = type { %class.SkPathEffectBase.base }
%class.SkPathEffectBase.base = type { %class.SkPathEffect.base }
%class.SkPathEffect.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkPathMeasure = type { %class.SkContourMeasureIter, %class.sk_sp.14 }
%class.SkContourMeasureIter = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkContourMeasureIter::Impl"* }
%"class.SkContourMeasureIter::Impl" = type opaque
%class.sk_sp.14 = type { %class.SkContourMeasure* }
%class.SkContourMeasure = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkTDArray.15, %class.SkTDArray, float, i8, [3 x i8] }>
%class.SkTDArray.15 = type { %"struct.SkContourMeasure::Segment"*, i32, i32 }
%"struct.SkContourMeasure::Segment" = type { float, i32, i32 }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.16 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.26 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.23*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.26*, %class.SkReadBuffer*)* }
%class.sk_sp.23 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.23*, i8*, i64, i8*)*, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.27*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.27*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.27*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.27 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.28, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.28 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.29, i32, i32 }
%class.sk_sp.29 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.30, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.30 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkPathEffectBase = type { %class.SkPathEffect.base, [4 x i8] }
%class.SkStrokeRec = type { float, float, float, i32 }
%class.Sk1DPathEffect = type { %class.SkPathEffectBase.base, [4 x i8] }
%"class.SkPathEffectBase::PointData" = type { i32, %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath }
%"struct.SkPathEffect::DashInfo" = type { float*, i32, float }

$_ZN22SkPath1DPathEffectImplC2ERK6SkPathffN18SkPath1DPathEffect5StyleE = comdat any

$_ZN22SkPath1DPathEffectImpl10CreateProcER12SkReadBuffer = comdat any

$_ZN22SkPath1DPathEffectImplD2Ev = comdat any

$_ZN22SkPath1DPathEffectImplD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK22SkPath1DPathEffectImpl10getFactoryEv = comdat any

$_ZNK22SkPath1DPathEffectImpl11getTypeNameEv = comdat any

$_ZNK22SkPath1DPathEffectImpl7flattenER13SkWriteBuffer = comdat any

$_ZNK16SkPathEffectBase18getFlattenableTypeEv = comdat any

$_ZNK22SkPath1DPathEffectImpl12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect = comdat any

$_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect = comdat any

$_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE = comdat any

$_ZNK14Sk1DPathEffect17computeFastBoundsEP6SkRect = comdat any

$_ZNK22SkPath1DPathEffectImpl5beginEf = comdat any

@.str = private unnamed_addr constant [23 x i8] c"SkPath1DPathEffectImpl\00", align 1
@_ZTV22SkPath1DPathEffectImpl = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPath1DPathEffectImpl*)* @_ZN22SkPath1DPathEffectImplD2Ev to i8*), i8* bitcast (void (%class.SkPath1DPathEffectImpl*)* @_ZN22SkPath1DPathEffectImplD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.26*, %class.SkReadBuffer*)* (%class.SkPath1DPathEffectImpl*)* @_ZNK22SkPath1DPathEffectImpl10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkPath1DPathEffectImpl*)* @_ZNK22SkPath1DPathEffectImpl11getTypeNameEv to i8*), i8* bitcast (void (%class.SkPath1DPathEffectImpl*, %class.SkWriteBuffer*)* @_ZNK22SkPath1DPathEffectImpl7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*)* @_ZNK16SkPathEffectBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkPath1DPathEffectImpl*, %class.SkPath*, %class.SkPath*, %class.SkStrokeRec*, %struct.SkRect*)* @_ZNK22SkPath1DPathEffectImpl12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect to i8*), i8* bitcast (i1 (%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath*, %class.SkStrokeRec*, %class.SkMatrix*, %struct.SkRect*)* @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect to i8*), i8* bitcast (i32 (%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*)* @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE to i8*), i8* bitcast (i1 (%class.Sk1DPathEffect*, %struct.SkRect*)* @_ZNK14Sk1DPathEffect17computeFastBoundsEP6SkRect to i8*), i8* bitcast (float (%class.SkPath1DPathEffectImpl*, float)* @_ZNK22SkPath1DPathEffectImpl5beginEf to i8*), i8* bitcast (float (%class.SkPath1DPathEffectImpl*, %class.SkPath*, float, %class.SkPathMeasure*)* @_ZNK22SkPath1DPathEffectImpl4nextEP6SkPathfR13SkPathMeasure to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"SkPath1DPathEffect\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK22SkPath1DPathEffectImpl4nextEP6SkPathfR13SkPathMeasure(%class.SkPath1DPathEffectImpl*, %class.SkPath*, float, %class.SkPathMeasure* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkPath::Iter", align 8
  %6 = alloca [4 x %struct.SkPoint], align 16
  %7 = alloca [3 x %struct.SkPoint], align 16
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca %class.SkMatrix, align 16
  %10 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %114 [
    i32 0, label %12
    i32 1, label %23
    i32 2, label %35
  ]

12:                                               ; preds = %4
  %13 = bitcast %struct.SkPoint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  %16 = call zeroext i1 @_ZN13SkPathMeasure9getPosTanEfP7SkPointS1_(%class.SkPathMeasure* %3, float %2, %struct.SkPoint* nonnull %8, %struct.SkPoint* null) #8
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  %19 = load float, float* %14, align 4
  %20 = load float, float* %15, align 4
  %21 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_ffNS_11AddPathModeE(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %18, float %19, float %20, i32 0) #8
  br label %22

22:                                               ; preds = %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  br label %114

23:                                               ; preds = %4
  %24 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #8
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %26 = bitcast %class.SkMatrix* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 16
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 16
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %29, align 16
  store i32 16, i32* %25, align 4
  %30 = call zeroext i1 @_ZN13SkPathMeasure9getMatrixEfP8SkMatrixNS_11MatrixFlagsE(%class.SkPathMeasure* %3, float %2, %class.SkMatrix* nonnull %9, i32 3) #8
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  %33 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %32, %class.SkMatrix* nonnull dereferenceable(40) %9, i32 0) #8
  br label %34

34:                                               ; preds = %31, %23
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #8
  br label %114

35:                                               ; preds = %4
  %36 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  %37 = bitcast %"class.SkPath::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %5, i64 0, i32 3
  %39 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %5, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false) #8
  %40 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %5, i64 0, i32 6
  %41 = bitcast float* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 -1, i64 16, i1 false) #8
  %42 = bitcast i8* %40 to i64*
  store i64 -6148914691236517206, i64* %42, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %5, %class.SkPath* dereferenceable(16) %36, i1 zeroext false) #8
  %43 = bitcast [4 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #8
  %44 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 0
  %45 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 0, i32 0
  %46 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 0, i32 1
  %47 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 1
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %47, i64 0, i32 0
  %49 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 1, i32 1
  %50 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %6, i64 0, i64 2
  %51 = bitcast [3 x %struct.SkPoint]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 -1, i64 32, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %52 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 0
  %53 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 0, i32 0
  %54 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 0, i32 1
  %55 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 1, i32 0
  %56 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 1, i32 1
  %57 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 2, i32 0
  %58 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %7, i64 0, i64 2, i32 1
  %59 = bitcast %struct.SkPoint* %47 to i64*
  %60 = bitcast %struct.SkPoint* %50 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %51, i8 -1, i64 24, i1 false) #8
  br label %61

61:                                               ; preds = %112, %35
  %62 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %5, %struct.SkPoint* nonnull %44) #8
  switch i32 %62, label %112 [
    i32 6, label %113
    i32 0, label %63
    i32 1, label %69
    i32 2, label %82
    i32 3, label %90
    i32 4, label %100
    i32 5, label %110
  ]

63:                                               ; preds = %61
  %64 = call fastcc zeroext i1 @_ZL11morphpointsP7SkPointPKS_iR13SkPathMeasuref(%struct.SkPoint* nonnull %52, %struct.SkPoint* nonnull %44, i32 1, %class.SkPathMeasure* dereferenceable(16) %3, float %2) #8
  br i1 %64, label %65, label %112

65:                                               ; preds = %63
  %66 = load float, float* %53, align 16
  %67 = load float, float* %54, align 4
  %68 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %66, float %67) #8
  br label %112

69:                                               ; preds = %61
  %70 = load i64, i64* %59, align 8
  store i64 %70, i64* %60, align 16
  %71 = load float, float* %45, align 16
  %72 = trunc i64 %70 to i32
  %73 = bitcast i32 %72 to float
  %74 = fadd float %71, %73
  %75 = fmul float %74, 5.000000e-01
  %76 = load float, float* %46, align 4
  %77 = lshr i64 %70, 32
  %78 = trunc i64 %77 to i32
  %79 = bitcast i32 %78 to float
  %80 = fadd float %76, %79
  %81 = fmul float %80, 5.000000e-01
  store float %75, float* %48, align 8
  store float %81, float* %49, align 4
  br label %82

82:                                               ; preds = %69, %61
  %83 = call fastcc zeroext i1 @_ZL11morphpointsP7SkPointPKS_iR13SkPathMeasuref(%struct.SkPoint* nonnull %52, %struct.SkPoint* %47, i32 2, %class.SkPathMeasure* dereferenceable(16) %3, float %2) #8
  br i1 %83, label %84, label %112

84:                                               ; preds = %82
  %85 = load float, float* %53, align 16
  %86 = load float, float* %54, align 4
  %87 = load float, float* %55, align 8
  %88 = load float, float* %56, align 4
  %89 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %1, float %85, float %86, float %87, float %88) #8
  br label %112

90:                                               ; preds = %61
  %91 = call fastcc zeroext i1 @_ZL11morphpointsP7SkPointPKS_iR13SkPathMeasuref(%struct.SkPoint* nonnull %52, %struct.SkPoint* %47, i32 2, %class.SkPathMeasure* dereferenceable(16) %3, float %2) #8
  br i1 %91, label %92, label %112

92:                                               ; preds = %90
  %93 = load float*, float** %38, align 8
  %94 = load float, float* %93, align 4
  %95 = load float, float* %53, align 16
  %96 = load float, float* %54, align 4
  %97 = load float, float* %55, align 8
  %98 = load float, float* %56, align 4
  %99 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %1, float %95, float %96, float %97, float %98, float %94) #8
  br label %112

100:                                              ; preds = %61
  %101 = call fastcc zeroext i1 @_ZL11morphpointsP7SkPointPKS_iR13SkPathMeasuref(%struct.SkPoint* nonnull %52, %struct.SkPoint* %47, i32 3, %class.SkPathMeasure* dereferenceable(16) %3, float %2) #8
  br i1 %101, label %102, label %112

102:                                              ; preds = %100
  %103 = load float, float* %53, align 16
  %104 = load float, float* %54, align 4
  %105 = load float, float* %55, align 8
  %106 = load float, float* %56, align 4
  %107 = load float, float* %57, align 16
  %108 = load float, float* %58, align 4
  %109 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %1, float %103, float %104, float %105, float %106, float %107, float %108) #8
  br label %112

110:                                              ; preds = %61
  %111 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %1) #8
  br label %112

112:                                              ; preds = %110, %102, %100, %92, %90, %84, %82, %65, %63, %61
  br label %61

113:                                              ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %37) #8
  br label %114

114:                                              ; preds = %4, %113, %34, %22
  %115 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 3
  %116 = load float, float* %115, align 8
  ret float %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN13SkPathMeasure9getPosTanEfP7SkPointS1_(%class.SkPathMeasure*, float, %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_ffNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), float, float, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN13SkPathMeasure9getMatrixEfP8SkMatrixNS_11MatrixFlagsE(%class.SkPathMeasure*, float, %class.SkMatrix*, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkPath1DPathEffect4MakeERK6SkPathffNS_5StyleE(%class.sk_sp.16* noalias nocapture sret, %class.SkPath* dereferenceable(16), float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = fcmp ugt float %2, 0.000000e+00
  br i1 %6, label %7, label %21

7:                                                ; preds = %5
  %8 = bitcast float %2 to i32
  %9 = and i32 %8, 2139095040
  %10 = icmp eq i32 %9, 2139095040
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = bitcast float %3 to i32
  %13 = and i32 %12, 2139095040
  %14 = icmp eq i32 %13, 2139095040
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %17 = load %class.SkPathRef*, %class.SkPathRef** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 4, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %11, %7, %5, %15
  %22 = getelementptr inbounds %class.sk_sp.16, %class.sk_sp.16* %0, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %22, align 8
  br label %27

23:                                               ; preds = %15
  %24 = tail call i8* @_Znwm(i64 48) #9
  %25 = bitcast i8* %24 to %class.SkPath1DPathEffectImpl*
  tail call void @_ZN22SkPath1DPathEffectImplC2ERK6SkPathffN18SkPath1DPathEffect5StyleE(%class.SkPath1DPathEffectImpl* nonnull %25, %class.SkPath* dereferenceable(16) %1, float %2, float %3, i32 %4)
  %26 = bitcast %class.sk_sp.16* %0 to i8**
  store i8* %24, i8** %26, align 8
  br label %27

27:                                               ; preds = %23, %21
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPath1DPathEffectImplC2ERK6SkPathffN18SkPath1DPathEffect5StyleE(%class.SkPath1DPathEffectImpl*, %class.SkPath* dereferenceable(16), float, float, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV22SkPath1DPathEffectImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %8, %class.SkPath* dereferenceable(16) %1) #8
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 9
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 3, i32 0
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %15, %struct.SkPoint* %17, i32 %19) #8
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 10
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  store i8 0, i8* %11, align 8
  br label %23

23:                                               ; preds = %5, %14
  %24 = tail call i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath* %8) #8
  %25 = fcmp olt float %3, 0.000000e+00
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = fsub float -0.000000e+00, %3
  %28 = fcmp ogt float %27, %2
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = tail call float @fmodf(float %27, float %2) #8
  br label %38

31:                                               ; preds = %23
  %32 = fcmp ogt float %3, %2
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = tail call float @fmodf(float %3, float %2) #8
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi float [ %34, %33 ], [ %3, %31 ]
  %37 = fsub float %2, %36
  br label %38

38:                                               ; preds = %26, %29, %35
  %39 = phi float [ %30, %29 ], [ %27, %26 ], [ %37, %35 ]
  %40 = fcmp ult float %39, %2
  %41 = select i1 %40, float %39, float 0.000000e+00
  %42 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 3
  store float %2, float* %42, align 8
  %43 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 4
  store float %41, float* %43, align 4
  %44 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 5
  store i32 %4, i32* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkPath1DPathEffect20RegisterFlattenablesEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.26*, %class.SkReadBuffer*)* nonnull @_ZN22SkPath1DPathEffectImpl10CreateProcER12SkReadBuffer) #8
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.26*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPath1DPathEffectImpl10CreateProcER12SkReadBuffer(%class.sk_sp.26* noalias sret, %class.SkReadBuffer* dereferenceable(136)) #0 comdat align 2 {
  %3 = alloca %class.SkPath, align 8
  %4 = tail call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #8
  %5 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 0, i32 0
  %7 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %3) #8
  call void @_ZN12SkReadBuffer8readPathEP6SkPath(%class.SkReadBuffer* %1, %class.SkPath* nonnull %3) #8
  %8 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #8
  %9 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #8
  %10 = icmp ugt i32 %9, 2
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #8
  br label %12

12:                                               ; preds = %2, %11
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 %9, i32 0
  %17 = fcmp ugt float %4, 0.000000e+00
  %18 = and i1 %17, %15
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = bitcast float %4 to i32
  %21 = and i32 %20, 2139095040
  %22 = icmp eq i32 %21, 2139095040
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = bitcast float %8 to i32
  %25 = and i32 %24, 2139095040
  %26 = icmp eq i32 %25, 2139095040
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  %28 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8, !noalias !3
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %28, i64 0, i32 4, i32 2
  %30 = load i32, i32* %29, align 4, !noalias !3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = call i8* @_Znwm(i64 48) #9, !noalias !3
  %34 = bitcast i8* %33 to %class.SkPath1DPathEffectImpl*
  call void @_ZN22SkPath1DPathEffectImplC2ERK6SkPathffN18SkPath1DPathEffect5StyleE(%class.SkPath1DPathEffectImpl* nonnull %34, %class.SkPath* nonnull dereferenceable(16) %3, float %4, float %8, i32 %16) #8, !noalias !3
  %35 = ptrtoint i8* %33 to i64
  br label %36

36:                                               ; preds = %19, %23, %27, %32, %12
  %37 = phi i64 [ %35, %32 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ], [ 0, %12 ]
  %38 = bitcast %class.sk_sp.26* %0 to i64*
  store i64 %37, i64* %38, align 8
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPath1DPathEffectImplD2Ev(%class.SkPath1DPathEffectImpl*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV22SkPath1DPathEffectImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %3) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkPath1DPathEffectImplD0Ev(%class.SkPath1DPathEffectImpl*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV22SkPath1DPathEffectImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %3) #8
  %4 = bitcast %class.SkPath1DPathEffectImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.26*, %class.SkReadBuffer*)* @_ZNK22SkPath1DPathEffectImpl10getFactoryEv(%class.SkPath1DPathEffectImpl*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.26*, %class.SkReadBuffer*)* @_ZN22SkPath1DPathEffectImpl10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK22SkPath1DPathEffectImpl11getTypeNameEv(%class.SkPath1DPathEffectImpl*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK22SkPath1DPathEffectImpl7flattenER13SkWriteBuffer(%class.SkPath1DPathEffectImpl*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 3
  %4 = load float, float* %3, align 8
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %6 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %6, i64 5
  %8 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, float %4) #8
  %9 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 2
  %10 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkPath*)***
  %11 = load void (%class.SkWriteBuffer*, %class.SkPath*)**, void (%class.SkWriteBuffer*, %class.SkPath*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkPath*)*, void (%class.SkWriteBuffer*, %class.SkPath*)** %11, i64 24
  %13 = load void (%class.SkWriteBuffer*, %class.SkPath*)*, void (%class.SkWriteBuffer*, %class.SkPath*)** %12, align 8
  tail call void %13(%class.SkWriteBuffer* %1, %class.SkPath* dereferenceable(16) %9) #8
  %14 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 4
  %15 = load float, float* %14, align 4
  %16 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %5, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, i64 5
  %18 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %1, float %15) #8
  %19 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 5
  %20 = load i32, i32* %19, align 8
  %21 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %22 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %22, i64 9
  %24 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %23, align 8
  tail call void %24(%class.SkWriteBuffer* %1, i32 %20) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase18getFlattenableTypeEv(%class.SkPathEffectBase*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkPath1DPathEffectImpl12onFilterPathEP6SkPathRKS0_P11SkStrokeRecPK6SkRect(%class.SkPath1DPathEffectImpl*, %class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.SkPathMeasure, align 8
  tail call void @_ZN11SkStrokeRec12setFillStyleEv(%class.SkStrokeRec* %3) #8
  %7 = bitcast %class.SkPath1DPathEffectImpl* %0 to %class.Sk1DPathEffect*
  %8 = bitcast %class.SkPathMeasure* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #8
  call void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure* nonnull %6, %class.SkPath* dereferenceable(16) %2, i1 zeroext false, float 1.000000e+00) #8
  %9 = bitcast %class.SkPath1DPathEffectImpl* %0 to float (%class.Sk1DPathEffect*, float)***
  %10 = bitcast %class.SkPath1DPathEffectImpl* %0 to float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)***
  br label %11

11:                                               ; preds = %31, %5
  %12 = call float @_ZN13SkPathMeasure9getLengthEv(%class.SkPathMeasure* nonnull %6) #8
  %13 = load float (%class.Sk1DPathEffect*, float)**, float (%class.Sk1DPathEffect*, float)*** %9, align 8
  %14 = getelementptr inbounds float (%class.Sk1DPathEffect*, float)*, float (%class.Sk1DPathEffect*, float)** %13, i64 11
  %15 = load float (%class.Sk1DPathEffect*, float)*, float (%class.Sk1DPathEffect*, float)** %14, align 8
  %16 = call float %15(%class.Sk1DPathEffect* %7, float %12) #8
  br label %17

17:                                               ; preds = %23, %11
  %18 = phi i32 [ 100000, %11 ], [ %24, %23 ]
  %19 = phi float [ %16, %11 ], [ %30, %23 ]
  %20 = fcmp olt float %19, %12
  %21 = icmp ne i32 %18, 0
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = add nsw i32 %18, -1
  %25 = load float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)**, float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)*** %10, align 8
  %26 = getelementptr inbounds float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)*, float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)** %25, i64 12
  %27 = load float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)*, float (%class.Sk1DPathEffect*, %class.SkPath*, float, %class.SkPathMeasure*)** %26, align 8
  %28 = call float %27(%class.Sk1DPathEffect* %7, %class.SkPath* %1, float %19, %class.SkPathMeasure* nonnull dereferenceable(16) %6) #8
  %29 = fcmp ugt float %28, 0.000000e+00
  %30 = fadd float %19, %28
  br i1 %29, label %17, label %31

31:                                               ; preds = %23, %17
  %32 = call zeroext i1 @_ZN13SkPathMeasure11nextContourEv(%class.SkPathMeasure* nonnull %6) #8
  br i1 %32, label %11, label %33

33:                                               ; preds = %31
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkPathEffectBase10onAsPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkPathEffectBase9onAsADashEPN12SkPathEffect8DashInfoE(%class.SkPathEffectBase*, %"struct.SkPathEffect::DashInfo"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14Sk1DPathEffect17computeFastBoundsEP6SkRect(%class.Sk1DPathEffect*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK22SkPath1DPathEffectImpl5beginEf(%class.SkPath1DPathEffectImpl*, float) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkPath1DPathEffectImpl, %class.SkPath1DPathEffectImpl* %0, i64 0, i32 4
  %4 = load float, float* %3, align 4
  ret float %4
}

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZL11morphpointsP7SkPointPKS_iR13SkPathMeasuref(%struct.SkPoint*, %struct.SkPoint* nocapture readonly, i32, %class.SkPathMeasure* dereferenceable(16), float) unnamed_addr #0 {
  %6 = alloca %struct.SkPoint, align 4
  %7 = alloca %struct.SkPoint, align 4
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca %struct.SkPoint, align 4
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %51

11:                                               ; preds = %5
  %12 = bitcast %struct.SkPoint* %6 to i8*
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 0
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  %15 = bitcast %struct.SkPoint* %7 to i8*
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 0
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %18 = bitcast %class.SkMatrix* %8 to i8*
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %22 = bitcast %struct.SkPoint* %9 to i8*
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %25 = bitcast float* %24 to i32*
  %26 = zext i32 %2 to i64
  %27 = bitcast %class.SkMatrix* %8 to <4 x float>*
  %28 = bitcast float* %20 to <4 x float>*
  br label %29

29:                                               ; preds = %38, %11
  %30 = phi i64 [ 0, %11 ], [ %48, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store float 0xFFFFFFFFE0000000, float* %16, align 4
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %30, i32 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %30, i32 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = fadd float %32, %4
  %37 = call zeroext i1 @_ZN13SkPathMeasure9getPosTanEfP7SkPointS1_(%class.SkPathMeasure* %3, float %36, %struct.SkPoint* nonnull %6, %struct.SkPoint* nonnull %7) #8
  br i1 %37, label %38, label %50

38:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %27, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 16
  store float 1.000000e+00, float* %21, align 16
  store i32 16, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store float %32, float* %23, align 4
  store i32 %35, i32* %25, align 4
  %39 = load float, float* %17, align 4
  %40 = load float, float* %16, align 4
  %41 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setSinCosEffff(%class.SkMatrix* nonnull %8, float %39, float %40, float 0.000000e+00, float 0.000000e+00) #8
  %42 = fsub float -0.000000e+00, %32
  %43 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %8, float %42, float 0.000000e+00) #8
  %44 = load float, float* %13, align 4
  %45 = load float, float* %14, align 4
  %46 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %8, float %44, float %45) #8
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %30
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %8, %struct.SkPoint* %47, %struct.SkPoint* nonnull %9, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %48 = add nuw nsw i64 %30, 1
  %49 = icmp eq i64 %48, %26
  br i1 %49, label %51, label %29

50:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %51

51:                                               ; preds = %38, %5, %50
  %52 = phi i1 [ false, %50 ], [ true, %5 ], [ true, %38 ]
  ret i1 %52
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setSinCosEffff(%class.SkMatrix*, float, float, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath*, float, float, float, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #2

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @fmodf(float, float) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure*, %class.SkPath* dereferenceable(16), i1 zeroext, float) unnamed_addr #2

declare float @_ZN13SkPathMeasure9getLengthEv(%class.SkPathMeasure*) local_unnamed_addr #2

declare zeroext i1 @_ZN13SkPathMeasure11nextContourEv(%class.SkPathMeasure*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure*) unnamed_addr #7

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare void @_ZN12SkReadBuffer8readPathEP6SkPath(%class.SkReadBuffer*, %class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #7

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare void @_ZN11SkStrokeRec12setFillStyleEv(%class.SkStrokeRec*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN18SkPath1DPathEffect4MakeERK6SkPathffNS_5StyleE: argument 0"}
!5 = distinct !{!5, !"_ZN18SkPath1DPathEffect4MakeERK6SkPathffNS_5StyleE"}
