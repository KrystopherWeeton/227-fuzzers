; ModuleID = '../../net/dns/dns_reloader.cc'
source_filename = "../../net/dns/dns_reloader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [72 x i8] }
%"class.net::(anonymous namespace)::DnsReloader" = type <{ %"class.net::NetworkChangeNotifier::DNSObserver", %"class.base::Lock", i32, %"class.base::ThreadLocalOwnedPointer", [4 x i8] }>
%"class.net::NetworkChangeNotifier::DNSObserver" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ThreadLocalOwnedPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%struct.__res_state = type { i32, i32, i64, i32, [3 x %struct.sockaddr_in], i16, [7 x i8*], [256 x i8], i64, i32, [10 x %struct.anon], i8*, i8*, i32, i32, i32, %union.anon }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.anon = type { %struct.in_addr, i32 }
%union.anon = type { %struct.anon.1 }
%struct.anon.1 = type { i16, [3 x i16], [3 x i32], i16, i16, [3 x %struct.sockaddr_in6*], [2 x i32] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.2 }
%union.anon.2 = type { [4 x i32] }

@_ZN3net12_GLOBAL__N_114g_dns_reloaderE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN3net12_GLOBAL__N_111DnsReloaderE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::DnsReloader"*)* @_ZN3net12_GLOBAL__N_111DnsReloader12OnDNSChangedEv to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsReloader"*)* @_ZN3net12_GLOBAL__N_111DnsReloaderD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::DnsReloader"*)* @_ZN3net12_GLOBAL__N_111DnsReloaderD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net21EnsureDnsReloaderInitEv() local_unnamed_addr #0 {
  %1 = tail call fastcc %"class.net::(anonymous namespace)::DnsReloader"* @_ZN4base12LazyInstanceIN3net12_GLOBAL__N_111DnsReloaderENS_8internal23LeakyLazyInstanceTraitsIS3_EEE7PointerEv()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.net::(anonymous namespace)::DnsReloader"* @_ZN4base12LazyInstanceIN3net12_GLOBAL__N_111DnsReloaderENS_8internal23LeakyLazyInstanceTraitsIS3_EEE7PointerEv() unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 0)) #6
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void @_ZN3net21NetworkChangeNotifier11DNSObserverC2Ev(%"class.net::NetworkChangeNotifier::DNSObserver"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 0) to %"class.net::NetworkChangeNotifier::DNSObserver"*)) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_111DnsReloaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 16) to %"class.base::internal::LockImpl"*)) #6
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 56) to i32*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 60) to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* nonnull @_ZN4base23ThreadLocalOwnedPointerIN3net12_GLOBAL__N_111DnsReloader11ReloadStateEE12DeleteTlsPtrEPv) #6
  tail call void @_ZN3net21NetworkChangeNotifier14AddDNSObserverEPNS0_11DNSObserverE(%"class.net::NetworkChangeNotifier::DNSObserver"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 0) to %"class.net::NetworkChangeNotifier::DNSObserver"*)) #6
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE to i8*)) #6
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3net12_GLOBAL__N_114g_dns_reloaderE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.net::(anonymous namespace)::DnsReloader"*
  ret %"class.net::(anonymous namespace)::DnsReloader"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22DnsReloaderMaybeReloadEv() local_unnamed_addr #0 {
  %1 = tail call fastcc %"class.net::(anonymous namespace)::DnsReloader"* @_ZN4base12LazyInstanceIN3net12_GLOBAL__N_111DnsReloaderENS_8internal23LeakyLazyInstanceTraitsIS3_EEE7PointerEv()
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %1, i64 0, i32 3, i32 0
  %3 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %2) #6
  %4 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %0
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #6
  br label %10

10:                                               ; preds = %8, %0
  %11 = icmp eq i8* %3, null
  br i1 %11, label %12, label %22

12:                                               ; preds = %10
  %13 = tail call i8* @_Znwm(i64 4) #7
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 4
  %17 = tail call %struct.__res_state* @__res_state() #8
  %18 = tail call i32 @__res_ninit(%struct.__res_state* %17) #6
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %2) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %2, i8* nonnull %13) #6
  %20 = icmp eq i8* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %12
  tail call void @__res_nclose(%struct.__res_state* %17) #6
  tail call void @_ZdlPv(i8* nonnull %19) #7
  br label %31

22:                                               ; preds = %10
  %23 = bitcast i8* %3 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  store i32 %26, i32* %23, align 4
  %29 = tail call %struct.__res_state* @__res_state() #8
  tail call void @__res_nclose(%struct.__res_state* %29) #6
  %30 = tail call i32 @__res_ninit(%struct.__res_state* %29) #6
  br label %31

31:                                               ; preds = %12, %21, %22, %28
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #6
  ret void
}

; Function Attrs: nounwind
declare i32 @__res_ninit(%struct.__res_state*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare %struct.__res_state* @__res_state() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @__res_nclose(%struct.__res_state*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #3

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #3

declare void @_ZN3net21NetworkChangeNotifier11DNSObserverC2Ev(%"class.net::NetworkChangeNotifier::DNSObserver"*) unnamed_addr #3

declare void @_ZN3net21NetworkChangeNotifier14AddDNSObserverEPNS0_11DNSObserverE(%"class.net::NetworkChangeNotifier::DNSObserver"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_111DnsReloader12OnDNSChangedEv(%"class.net::(anonymous namespace)::DnsReloader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_111DnsReloaderD2Ev(%"class.net::(anonymous namespace)::DnsReloader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net12_GLOBAL__N_111DnsReloaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %0, i64 0, i32 3, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* null) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call %struct.__res_state* @__res_state() #8
  tail call void @__res_nclose(%struct.__res_state* %7) #6
  tail call void @_ZdlPv(i8* nonnull %4) #7
  br label %8

8:                                                ; preds = %1, %6
  tail call void @_ZN4base18ThreadLocalStorage4SlotD1Ev(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %9 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %9) #6
  %10 = getelementptr inbounds %"class.net::(anonymous namespace)::DnsReloader", %"class.net::(anonymous namespace)::DnsReloader"* %0, i64 0, i32 0
  tail call void @_ZN3net21NetworkChangeNotifier11DNSObserverD2Ev(%"class.net::NetworkChangeNotifier::DNSObserver"* %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_111DnsReloaderD0Ev(%"class.net::(anonymous namespace)::DnsReloader"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net12_GLOBAL__N_111DnsReloaderD2Ev(%"class.net::(anonymous namespace)::DnsReloader"* %0) #6
  %2 = bitcast %"class.net::(anonymous namespace)::DnsReloader"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base23ThreadLocalOwnedPointerIN3net12_GLOBAL__N_111DnsReloader11ReloadStateEE12DeleteTlsPtrEPv(i8*) #0 align 2 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.__res_state* @__res_state() #8
  tail call void @__res_nclose(%struct.__res_state* %4) #6
  tail call void @_ZdlPv(i8* nonnull %0) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net21NetworkChangeNotifier11DNSObserverD2Ev(%"class.net::NetworkChangeNotifier::DNSObserver"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base18ThreadLocalStorage4SlotD1Ev(%"class.base::ThreadLocalStorage::Slot"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
