; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/qpack_instructions.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/qpack_instructions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.quic::QpackInstruction"**, %"struct.quic::QpackInstruction"**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.quic::QpackInstruction"** }
%"class.quic::QpackInstructionWithValues" = type { %"struct.quic::QpackInstruction"*, i8, i64, i64, %"class.absl::string_view", %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }

@_ZZN4quic34InsertWithNameReferenceInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic34InsertWithNameReferenceInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic34InsertWithNameReferenceInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic34InsertWithNameReferenceInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp = private unnamed_addr constant [3 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 0, i8 64 }, %"struct.quic::QpackInstructionField" { i32 1, i8 6 }, %"struct.quic::QpackInstructionField" { i32 4, i8 7 }], align 4
@_ZZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp.1 = private unnamed_addr constant [2 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 3, i8 5 }, %"struct.quic::QpackInstructionField" { i32 4, i8 7 }], align 4
@_ZZN4quic20DuplicateInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic20DuplicateInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic20DuplicateInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic20DuplicateInstructionEvE11instruction = internal global i64 0, align 8
@_ZZN4quic34SetDynamicTableCapacityInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic34SetDynamicTableCapacityInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE11instruction = internal global i64 0, align 8
@_ZZN4quic26QpackEncoderStreamLanguageEvE8language = internal global %"class.std::__1::vector.2"* null, align 8
@_ZGVZN4quic26QpackEncoderStreamLanguageEvE8language = internal global i64 0, align 8
@_ZZN4quic31InsertCountIncrementInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic31InsertCountIncrementInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic31InsertCountIncrementInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic31InsertCountIncrementInstructionEvE11instruction = internal global i64 0, align 8
@_ZZN4quic32HeaderAcknowledgementInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic32HeaderAcknowledgementInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic32HeaderAcknowledgementInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic32HeaderAcknowledgementInstructionEvE11instruction = internal global i64 0, align 8
@_ZZN4quic29StreamCancellationInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic29StreamCancellationInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic29StreamCancellationInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic29StreamCancellationInstructionEvE11instruction = internal global i64 0, align 8
@_ZZN4quic26QpackDecoderStreamLanguageEvE8language = internal global %"class.std::__1::vector.2"* null, align 8
@_ZGVZN4quic26QpackDecoderStreamLanguageEvE8language = internal global i64 0, align 8
@_ZZN4quic22QpackPrefixInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic22QpackPrefixInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic22QpackPrefixInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic22QpackPrefixInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp.7 = private unnamed_addr constant [3 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 1, i8 8 }, %"struct.quic::QpackInstructionField" { i32 0, i8 -128 }, %"struct.quic::QpackInstructionField" { i32 2, i8 7 }], align 4
@_ZZN4quic19QpackPrefixLanguageEvE8language = internal global %"class.std::__1::vector.2"* null, align 8
@_ZGVZN4quic19QpackPrefixLanguageEvE8language = internal global i64 0, align 8
@_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp.8 = private unnamed_addr constant [2 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 0, i8 64 }, %"struct.quic::QpackInstructionField" { i32 1, i8 6 }], align 4
@_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction = internal global i64 0, align 8
@_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp.10 = private unnamed_addr constant [3 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 0, i8 16 }, %"struct.quic::QpackInstructionField" { i32 1, i8 4 }, %"struct.quic::QpackInstructionField" { i32 4, i8 7 }], align 4
@_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp.11 = private unnamed_addr constant [2 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 1, i8 3 }, %"struct.quic::QpackInstructionField" { i32 4, i8 7 }], align 4
@_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode = internal global %"struct.quic::QpackInstructionOpcode"* null, align 8
@_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode = internal global i64 0, align 8
@_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction = internal global %"struct.quic::QpackInstruction"* null, align 8
@_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction = internal global i64 0, align 8
@.ref.tmp.12 = private unnamed_addr constant [2 x %"struct.quic::QpackInstructionField"] [%"struct.quic::QpackInstructionField" { i32 3, i8 3 }, %"struct.quic::QpackInstructionField" { i32 4, i8 7 }], align 4
@_ZZN4quic26QpackRequestStreamLanguageEvE8language = internal global %"class.std::__1::vector.2"* null, align 8
@_ZGVZN4quic26QpackRequestStreamLanguageEvE8language = internal global i64 0, align 8

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4quiceqERKNS_22QpackInstructionOpcodeES2_(%"struct.quic::QpackInstructionOpcode"* dereferenceable(2), %"struct.quic::QpackInstructionOpcode"* dereferenceable(2)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.quic::QpackInstructionOpcode", %"struct.quic::QpackInstructionOpcode"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.quic::QpackInstructionOpcode", %"struct.quic::QpackInstructionOpcode"* %1, i64 0, i32 0
  %5 = load i8, i8* %3, align 1
  %6 = load i8, i8* %4, align 1
  %7 = icmp eq i8 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.quic::QpackInstructionOpcode", %"struct.quic::QpackInstructionOpcode"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"struct.quic::QpackInstructionOpcode", %"struct.quic::QpackInstructionOpcode"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %11, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic34InsertWithNameReferenceInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34InsertWithNameReferenceInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34InsertWithNameReferenceInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 -128, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -128, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34InsertWithNameReferenceInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34InsertWithNameReferenceInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34InsertWithNameReferenceInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34InsertWithNameReferenceInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34InsertWithNameReferenceInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34InsertWithNameReferenceInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 24) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 24
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([3 x %"struct.quic::QpackInstructionField"]* @.ref.tmp to i8*), i64 24, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34InsertWithNameReferenceInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34InsertWithNameReferenceInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34InsertWithNameReferenceInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic34InsertWithNameReferenceInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic37InsertWithoutNameReferenceInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 64, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -64, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic37InsertWithoutNameReferenceInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 16) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 16
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([2 x %"struct.quic::QpackInstructionField"]* @.ref.tmp.1 to i8*), i64 16, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic37InsertWithoutNameReferenceInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic20DuplicateInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic20DuplicateInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic20DuplicateInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -32, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic20DuplicateInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic20DuplicateInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic20DuplicateInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic20DuplicateInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %32, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic20DuplicateInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic20DuplicateInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 8) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = bitcast i8* %22 to i64*
  store i64 21474836481, i64* %29, align 4
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic20DuplicateInstructionEvE11instruction to i8**), align 8
  %31 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic20DuplicateInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic20DuplicateInstructionEvE11instruction) #5
  br label %32

32:                                               ; preds = %13, %16, %10
  %33 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic20DuplicateInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic34SetDynamicTableCapacityInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 32, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -32, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34SetDynamicTableCapacityInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34SetDynamicTableCapacityInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %32, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34SetDynamicTableCapacityInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 8) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = bitcast i8* %22 to i64*
  store i64 21474836481, i64* %29, align 4
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34SetDynamicTableCapacityInstructionEvE11instruction to i8**), align 8
  %31 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34SetDynamicTableCapacityInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34SetDynamicTableCapacityInstructionEvE11instruction) #5
  br label %32

32:                                               ; preds = %13, %16, %10
  %33 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic34SetDynamicTableCapacityInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2"* @_ZN4quic26QpackEncoderStreamLanguageEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic26QpackEncoderStreamLanguageEvE8language to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %28, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic26QpackEncoderStreamLanguageEvE8language) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 24) #6
  %8 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34InsertWithNameReferenceInstructionEv()
  %9 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic37InsertWithoutNameReferenceInstructionEv()
  %10 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic20DuplicateInstructionEv()
  %11 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34SetDynamicTableCapacityInstructionEv()
  %12 = tail call i8* @_Znwm(i64 32) #6
  %13 = bitcast i8* %12 to %"struct.quic::QpackInstruction"**
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast i8* %7 to i8**
  store i8* %12, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 32
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = bitcast i8* %14 to i64*
  store %"struct.quic::QpackInstruction"* %8, %"struct.quic::QpackInstruction"** %13, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 8
  %21 = bitcast i8* %20 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %9, %"struct.quic::QpackInstruction"** %21, align 8
  %22 = getelementptr inbounds i8, i8* %12, i64 16
  %23 = bitcast i8* %22 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %10, %"struct.quic::QpackInstruction"** %23, align 8
  %24 = getelementptr inbounds i8, i8* %12, i64 24
  %25 = bitcast i8* %24 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %11, %"struct.quic::QpackInstruction"** %25, align 8
  %26 = ptrtoint i8* %16 to i64
  store i64 %26, i64* %19, align 8
  store i8* %7, i8** bitcast (%"class.std::__1::vector.2"** @_ZZN4quic26QpackEncoderStreamLanguageEvE8language to i8**), align 8
  %27 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.std::__1::vector.2"** @_ZZN4quic26QpackEncoderStreamLanguageEvE8language to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic26QpackEncoderStreamLanguageEvE8language) #5
  br label %28

28:                                               ; preds = %3, %6, %0
  %29 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** @_ZZN4quic26QpackEncoderStreamLanguageEvE8language, align 8
  ret %"class.std::__1::vector.2"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic31InsertCountIncrementInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic31InsertCountIncrementInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic31InsertCountIncrementInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -64, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic31InsertCountIncrementInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic31InsertCountIncrementInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic31InsertCountIncrementInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic31InsertCountIncrementInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %32, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic31InsertCountIncrementInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic31InsertCountIncrementInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 8) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = bitcast i8* %22 to i64*
  store i64 25769803777, i64* %29, align 4
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic31InsertCountIncrementInstructionEvE11instruction to i8**), align 8
  %31 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic31InsertCountIncrementInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic31InsertCountIncrementInstructionEvE11instruction) #5
  br label %32

32:                                               ; preds = %13, %16, %10
  %33 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic31InsertCountIncrementInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic32HeaderAcknowledgementInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic32HeaderAcknowledgementInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic32HeaderAcknowledgementInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 -128, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -128, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic32HeaderAcknowledgementInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic32HeaderAcknowledgementInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic32HeaderAcknowledgementInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic32HeaderAcknowledgementInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %32, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic32HeaderAcknowledgementInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic32HeaderAcknowledgementInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 8) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = bitcast i8* %22 to i64*
  store i64 30064771073, i64* %29, align 4
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic32HeaderAcknowledgementInstructionEvE11instruction to i8**), align 8
  %31 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic32HeaderAcknowledgementInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic32HeaderAcknowledgementInstructionEvE11instruction) #5
  br label %32

32:                                               ; preds = %13, %16, %10
  %33 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic32HeaderAcknowledgementInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic29StreamCancellationInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic29StreamCancellationInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic29StreamCancellationInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 64, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -64, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic29StreamCancellationInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic29StreamCancellationInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic29StreamCancellationInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic29StreamCancellationInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %32, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic29StreamCancellationInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic29StreamCancellationInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 8) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = bitcast i8* %22 to i64*
  store i64 25769803777, i64* %29, align 4
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic29StreamCancellationInstructionEvE11instruction to i8**), align 8
  %31 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic29StreamCancellationInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic29StreamCancellationInstructionEvE11instruction) #5
  br label %32

32:                                               ; preds = %13, %16, %10
  %33 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic29StreamCancellationInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2"* @_ZN4quic26QpackDecoderStreamLanguageEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic26QpackDecoderStreamLanguageEvE8language to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %25, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic26QpackDecoderStreamLanguageEvE8language) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 24) #6
  %8 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic31InsertCountIncrementInstructionEv()
  %9 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic32HeaderAcknowledgementInstructionEv()
  %10 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic29StreamCancellationInstructionEv()
  %11 = tail call i8* @_Znwm(i64 24) #6
  %12 = bitcast i8* %11 to %"struct.quic::QpackInstruction"**
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %7 to i8**
  store i8* %11, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = getelementptr inbounds i8, i8* %7, i64 16
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast i8* %13 to i64*
  store %"struct.quic::QpackInstruction"* %8, %"struct.quic::QpackInstruction"** %12, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 8
  %20 = bitcast i8* %19 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %9, %"struct.quic::QpackInstruction"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 16
  %22 = bitcast i8* %21 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %10, %"struct.quic::QpackInstruction"** %22, align 8
  %23 = ptrtoint i8* %15 to i64
  store i64 %23, i64* %18, align 8
  store i8* %7, i8** bitcast (%"class.std::__1::vector.2"** @_ZZN4quic26QpackDecoderStreamLanguageEvE8language to i8**), align 8
  %24 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.std::__1::vector.2"** @_ZZN4quic26QpackDecoderStreamLanguageEvE8language to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic26QpackDecoderStreamLanguageEvE8language) #5
  br label %25

25:                                               ; preds = %3, %6, %0
  %26 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** @_ZZN4quic26QpackDecoderStreamLanguageEvE8language, align 8
  ret %"class.std::__1::vector.2"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic22QpackPrefixInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic22QpackPrefixInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic22QpackPrefixInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 0, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic22QpackPrefixInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic22QpackPrefixInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic22QpackPrefixInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic22QpackPrefixInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic22QpackPrefixInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic22QpackPrefixInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 24) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 24
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([3 x %"struct.quic::QpackInstructionField"]* @.ref.tmp.7 to i8*), i64 24, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic22QpackPrefixInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic22QpackPrefixInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic22QpackPrefixInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic22QpackPrefixInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2"* @_ZN4quic19QpackPrefixLanguageEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic19QpackPrefixLanguageEvE8language to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %19, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic19QpackPrefixLanguageEvE8language) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 24) #6
  %8 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic22QpackPrefixInstructionEv()
  %9 = tail call i8* @_Znwm(i64 8) #6
  %10 = bitcast i8* %9 to %"struct.quic::QpackInstruction"**
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %7 to i8**
  store i8* %9, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to i8**
  store i8* %13, i8** %15, align 8
  %16 = bitcast i8* %11 to i64*
  store %"struct.quic::QpackInstruction"* %8, %"struct.quic::QpackInstruction"** %10, align 8
  %17 = ptrtoint i8* %13 to i64
  store i64 %17, i64* %16, align 8
  store i8* %7, i8** bitcast (%"class.std::__1::vector.2"** @_ZZN4quic19QpackPrefixLanguageEvE8language to i8**), align 8
  %18 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.std::__1::vector.2"** @_ZZN4quic19QpackPrefixLanguageEvE8language to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic19QpackPrefixLanguageEvE8language) #5
  br label %19

19:                                               ; preds = %3, %6, %0
  %20 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** @_ZZN4quic19QpackPrefixLanguageEvE8language, align 8
  ret %"class.std::__1::vector.2"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic34QpackIndexedHeaderFieldInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 -128, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -128, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 16) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 16
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([2 x %"struct.quic::QpackInstructionField"]* @.ref.tmp.8 to i8*), i64 16, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic34QpackIndexedHeaderFieldInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 16, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -16, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %32, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %32, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 8) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  %29 = bitcast i8* %22 to i64*
  store i64 17179869185, i64* %29, align 4
  %30 = ptrtoint i8* %25 to i64
  store i64 %30, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction to i8**), align 8
  %31 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction) #5
  br label %32

32:                                               ; preds = %13, %16, %10
  %33 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 64, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -64, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 24) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 24
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([3 x %"struct.quic::QpackInstructionField"]* @.ref.tmp.10 to i8*), i64 24, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -16, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 16) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 16
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([2 x %"struct.quic::QpackInstructionField"]* @.ref.tmp.11 to i8*), i64 16, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.quic::QpackInstruction"* @_ZN4quic34QpackLiteralHeaderFieldInstructionEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 2) #6
  store i8 32, i8* %7, align 2
  %8 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 -32, i8* %8, align 1
  store i8* %7, i8** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode to i8**), align 8
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode) #5
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %31, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %13
  %17 = tail call i8* @_Znwm(i64 32) #6
  %18 = load i16*, i16** bitcast (%"struct.quic::QpackInstructionOpcode"** @_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE6opcode to i16**), align 8
  %19 = bitcast i8* %17 to i16*
  %20 = load i16, i16* %18, align 1
  store i16 %20, i16* %19, align 16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = tail call i8* @_Znwm(i64 16) #6
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %21 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 16
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast i8* %23 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([2 x %"struct.quic::QpackInstructionField"]* @.ref.tmp.12 to i8*), i64 16, i1 false) #5
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %28, align 8
  store i8* %17, i8** bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"struct.quic::QpackInstruction"** @_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction) #5
  br label %31

31:                                               ; preds = %13, %16, %10
  %32 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** @_ZZN4quic34QpackLiteralHeaderFieldInstructionEvE11instruction, align 8
  ret %"struct.quic::QpackInstruction"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.2"* @_ZN4quic26QpackRequestStreamLanguageEv() local_unnamed_addr #1 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4quic26QpackRequestStreamLanguageEvE8language to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %31, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4quic26QpackRequestStreamLanguageEvE8language) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 24) #6
  %8 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34QpackIndexedHeaderFieldInstructionEv()
  %9 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic42QpackIndexedHeaderFieldPostBaseInstructionEv()
  %10 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEv()
  %11 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic42QpackLiteralHeaderFieldPostBaseInstructionEv()
  %12 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34QpackLiteralHeaderFieldInstructionEv()
  %13 = tail call i8* @_Znwm(i64 40) #6
  %14 = bitcast i8* %13 to %"struct.quic::QpackInstruction"**
  %15 = getelementptr inbounds i8, i8* %7, i64 8
  %16 = bitcast i8* %7 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 40
  %18 = getelementptr inbounds i8, i8* %7, i64 16
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = bitcast i8* %15 to i64*
  store %"struct.quic::QpackInstruction"* %8, %"struct.quic::QpackInstruction"** %14, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 8
  %22 = bitcast i8* %21 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %9, %"struct.quic::QpackInstruction"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 16
  %24 = bitcast i8* %23 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %10, %"struct.quic::QpackInstruction"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %13, i64 24
  %26 = bitcast i8* %25 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %11, %"struct.quic::QpackInstruction"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 32
  %28 = bitcast i8* %27 to %"struct.quic::QpackInstruction"**
  store %"struct.quic::QpackInstruction"* %12, %"struct.quic::QpackInstruction"** %28, align 8
  %29 = ptrtoint i8* %17 to i64
  store i64 %29, i64* %20, align 8
  store i8* %7, i8** bitcast (%"class.std::__1::vector.2"** @_ZZN4quic26QpackRequestStreamLanguageEvE8language to i8**), align 8
  %30 = tail call {}* @llvm.invariant.start.p0i8(i64 8, i8* bitcast (%"class.std::__1::vector.2"** @_ZZN4quic26QpackRequestStreamLanguageEvE8language to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4quic26QpackRequestStreamLanguageEvE8language) #5
  br label %31

31:                                               ; preds = %3, %6, %0
  %32 = load %"class.std::__1::vector.2"*, %"class.std::__1::vector.2"** @_ZZN4quic26QpackRequestStreamLanguageEvE8language, align 8
  ret %"class.std::__1::vector.2"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues23InsertWithNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i1 zeroext, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %6 = zext i1 %1 to i8
  %7 = bitcast %"class.quic::QpackInstructionWithValues"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %9 = bitcast %"class.absl::string_view"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #5
  %10 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34InsertWithNameReferenceInstructionEv()
  %11 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %10, %"struct.quic::QpackInstruction"** %11, align 8
  %12 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  store i8 %6, i8* %12, align 8
  %13 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 0
  store i8* %3, i8** %14, align 8
  %15 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 1
  store i64 %4, i64* %15, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues26InsertWithoutNameReferenceEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i8*, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  %7 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic37InsertWithoutNameReferenceInstructionEv()
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %7, %"struct.quic::QpackInstruction"** %8, align 8
  %9 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 0
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 1
  store i64 %4, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues9DuplicateEm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %5 = bitcast %"class.absl::string_view"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #5
  %6 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic20DuplicateInstructionEv()
  %7 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %6, %"struct.quic::QpackInstruction"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %1, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues23SetDynamicTableCapacityEm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %5 = bitcast %"class.absl::string_view"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #5
  %6 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34SetDynamicTableCapacityInstructionEv()
  %7 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %6, %"struct.quic::QpackInstruction"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %1, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues20InsertCountIncrementEm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %5 = bitcast %"class.absl::string_view"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #5
  %6 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic31InsertCountIncrementInstructionEv()
  %7 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %6, %"struct.quic::QpackInstruction"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %1, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues21HeaderAcknowledgementEm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %5 = bitcast %"class.absl::string_view"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #5
  %6 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic32HeaderAcknowledgementInstructionEv()
  %7 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %6, %"struct.quic::QpackInstruction"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %1, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues18StreamCancellationEm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %5 = bitcast %"class.absl::string_view"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #5
  %6 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic29StreamCancellationInstructionEv()
  %7 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %6, %"struct.quic::QpackInstruction"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %1, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues6PrefixEm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i64) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.quic::QpackInstructionWithValues"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false)
  %4 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %5 = bitcast %"class.absl::string_view"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #5
  %6 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic22QpackPrefixInstructionEv()
  %7 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %6, %"struct.quic::QpackInstruction"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 3
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  store i8 0, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues18IndexedHeaderFieldEbm(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i1 zeroext, i64) local_unnamed_addr #1 align 2 {
  %4 = zext i1 %1 to i8
  %5 = bitcast %"class.quic::QpackInstructionWithValues"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  %6 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %7 = bitcast %"class.absl::string_view"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #5
  %8 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34QpackIndexedHeaderFieldInstructionEv()
  %9 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %8, %"struct.quic::QpackInstruction"** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  store i8 %4, i8* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %2, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues31LiteralHeaderFieldNameReferenceEbmN4absl11string_viewE(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i1 zeroext, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %6 = zext i1 %1 to i8
  %7 = bitcast %"class.quic::QpackInstructionWithValues"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4
  %9 = bitcast %"class.absl::string_view"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #5
  %10 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic47QpackLiteralHeaderFieldNameReferenceInstructionEv()
  %11 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %10, %"struct.quic::QpackInstruction"** %11, align 8
  %12 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  store i8 %6, i8* %12, align 8
  %13 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 2
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 0
  store i8* %3, i8** %14, align 8
  %15 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 1
  store i64 %4, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic26QpackInstructionWithValues18LiteralHeaderFieldEN4absl11string_viewES2_(%"class.quic::QpackInstructionWithValues"* noalias nocapture sret, i8*, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  %7 = tail call %"struct.quic::QpackInstruction"* @_ZN4quic34QpackLiteralHeaderFieldInstructionEv()
  %8 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 0
  store %"struct.quic::QpackInstruction"* %7, %"struct.quic::QpackInstruction"** %8, align 8
  %9 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 4, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 0
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %0, i64 0, i32 5, i32 1
  store i64 %4, i64* %12, align 8
  ret void
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
