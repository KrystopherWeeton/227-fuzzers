; ModuleID = '../../net/http/http_basic_stream.cc'
source_filename = "../../net/http/http_basic_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpBasicStream" = type { %"class.net::HttpStream", %"class.net::HttpBasicState", %"class.base::TimeTicks", %"class.base::RepeatingCallback.135" }
%"class.net::HttpStream" = type { i32 (...)** }
%"class.net::HttpBasicState" = type <{ %class.scoped_refptr, %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.44", i8, [7 x i8], %class.GURL, %"class.std::__1::basic_string", %"struct.net::MutableNetworkTrafficAnnotationTag", [4 x i8] }>
%class.scoped_refptr = type { %"class.net::GrowableIOBuffer"* }
%"class.net::GrowableIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::unique_ptr", i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::ClientSocketHandle"* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.net::HttpStreamParser"* }
%"class.net::HttpStreamParser" = type { i32 (...)**, i32, %"struct.net::HttpRequestInfo"*, %class.scoped_refptr.79, i32, %class.scoped_refptr, i32, i64, i64, i64, %"class.net::HttpResponseInfo"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i8, i64, %"class.std::__1::unique_ptr.118", %class.scoped_refptr.80, i32, %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.net::StreamSocket"*, i8, %"class.net::NetLogWithSource", %"class.base::RepeatingCallback", %class.scoped_refptr.124, %class.scoped_refptr.124, i8, i32, %"struct.net::MutableNetworkTrafficAnnotationTag", %"class.base::WeakPtrFactory" }
%"struct.net::HttpRequestInfo" = type <{ %class.GURL, %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i8, [7 x i8], %"class.net::HttpRequestHeaders", %"class.net::UploadDataStream"*, i32, i32, i32, %"class.net::SocketTag", [3 x i8], %"struct.net::MutableNetworkTrafficAnnotationTag", i32, %"class.absl::optional.74", i32, [4 x i8] }>
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.18" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.53" }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.55" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback", %"class.net::NetLogWithSource" }
%"class.net::SocketTag" = type { i8 }
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.url::Origin" }
%class.scoped_refptr.79 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.80, i32, i32 }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.82", %class.scoped_refptr.25, %"class.net::SSLInfo", %class.scoped_refptr.117, %"class.net::HttpVaryData", %"class.std::__1::vector" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.81" }
%"class.base::time_internal::TimeBase.81" = type { i64 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.25 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe.26", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector", %"class.std::__1::vector.27" }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { i32*, i32*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i32* }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.87, %class.scoped_refptr.87, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.100", %"class.std::__1::basic_string", %"class.std::__1::vector.108", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.87 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.88", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.89", %"class.std::__1::vector.93" }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.std::__1::unique_ptr.89"*, %"class.std::__1::unique_ptr.89"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::unique_ptr.89"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.103" }
%"class.net::HashValue" = type { i32, %union.anon.102 }
%union.anon.102 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.112" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.110, i32, [4 x i8] }>
%class.scoped_refptr.110 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.111", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.111" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.117 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type opaque
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.net::HttpChunkedDecoder"* }
%"class.net::HttpChunkedDecoder" = type opaque
%class.scoped_refptr.80 = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.60", %"class.std::__1::vector.67" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.62" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.69" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.124 = type { %"class.net::HttpStreamParser::SeekableIOBuffer"* }
%"class.net::HttpStreamParser::SeekableIOBuffer" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.126", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.126" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.127" }
%"struct.std::__1::atomic.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__atomic_base.129" }
%"struct.std::__1::__atomic_base.129" = type { %"struct.std::__1::__cxx_atomic_impl.130" }
%"struct.std::__1::__cxx_atomic_impl.130" = type { %"struct.std::__1::__cxx_atomic_base_impl.131" }
%"struct.std::__1::__cxx_atomic_base_impl.131" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.47" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback.135" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.net::ClientSocketHandle" = type { i8, %"class.net::ClientSocketPool"*, %"class.net::HigherLayeredPool"*, %"class.std::__1::unique_ptr.5", %"class.net::ClientSocketPool::GroupId", i32, %"class.base::OnceCallback", %"class.base::TimeDelta", i64, %"struct.net::ResolveErrorInfo", i8, %class.scoped_refptr.25, %"class.std::__1::vector.34", %"struct.net::NetLogSource", %"struct.net::LoadTimingInfo::ConnectTiming" }
%"class.net::ClientSocketPool" = type { %"class.net::LowerLayeredPool" }
%"class.net::LowerLayeredPool" = type { i32 (...)** }
%"class.net::HigherLayeredPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::StreamSocket"* }
%"class.net::ClientSocketPool::GroupId" = type <{ %"class.net::HostPortPair", i32, i32, %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.36" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.net::ConnectionAttempt"* }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::HttpRawRequestHeaders" = type { %"class.std::__1::vector.136", %"class.std::__1::basic_string" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.138" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::pair"* }
%"class.net::HttpRequestHeaders::Iterator" = type { i8, %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter" }
%"class.std::__1::__wrap_iter" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::AlternativeService" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::HttpNetworkSession" = type { %"class.net::NetLog"*, %"class.net::HttpServerProperties"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HostResolver"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::ProxyResolutionService"*, %"class.net::SSLConfigService"*, %"class.net::HttpAuthCache", %"class.net::SSLClientSessionCache", %"class.net::SSLClientContext", %"class.net::WebSocketEndpointLockManager", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.339", %"class.net::QuicStreamFactory", %"class.net::SpdySessionPool", %"class.std::__1::unique_ptr.628", %"class.std::__1::map.648", %"class.std::__1::vector.659", %"class.base::flat_map.666", %"struct.net::HttpNetworkSession::Params", %"struct.net::HttpNetworkSession::Context", %"class.std::__1::unique_ptr.284" }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr.143", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector", %"class.base::MRUCache.217", %"class.base::flat_map.237", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.149" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.161", %"class.std::__1::map.168", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.208" }
%"class.std::__1::list.161" = type { %"class.std::__1::__list_imp.162" }
%"class.std::__1::__list_imp.162" = type { %"struct.std::__1::__list_node_base.163", %"class.std::__1::__compressed_pair.164" }
%"struct.std::__1::__list_node_base.163" = type { %"struct.std::__1::__list_node_base.163"*, %"struct.std::__1::__list_node_base.163"* }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.168" = type { %"class.std::__1::__tree.169" }
%"class.std::__1::__tree.169" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.186" }
%"class.base::MRUCache.186" = type { %"class.base::MRUCacheBase.187" }
%"class.base::MRUCacheBase.187" = type { i32 (...)**, %"class.std::__1::list.188", %"class.std::__1::map.195", i64 }
%"class.std::__1::list.188" = type { %"class.std::__1::__list_imp.189" }
%"class.std::__1::__list_imp.189" = type { %"struct.std::__1::__list_node_base.190", %"class.std::__1::__compressed_pair.191" }
%"struct.std::__1::__list_node_base.190" = type { %"struct.std::__1::__list_node_base.190"*, %"struct.std::__1::__list_node_base.190"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.195" = type { %"class.std::__1::__tree.196" }
%"class.std::__1::__tree.196" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.base::WeakPtrFactory.208" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.209" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.std::__1::pair.211"*, %"struct.std::__1::pair.211"*, %"class.std::__1::__compressed_pair.212" }
%"struct.std::__1::pair.211" = type opaque
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.std::__1::pair.211"* }
%"class.base::MRUCache.217" = type { %"class.base::MRUCacheBase.218" }
%"class.base::MRUCacheBase.218" = type { i32 (...)**, %"class.std::__1::list.219", %"class.std::__1::map.226", i64 }
%"class.std::__1::list.219" = type { %"class.std::__1::__list_imp.220" }
%"class.std::__1::__list_imp.220" = type { %"struct.std::__1::__list_node_base.221", %"class.std::__1::__compressed_pair.222" }
%"struct.std::__1::__list_node_base.221" = type { %"struct.std::__1::__list_node_base.221"*, %"struct.std::__1::__list_node_base.221"* }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.226" = type { %"class.std::__1::__tree.227" }
%"class.std::__1::__tree.227" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.base::flat_map.237" = type { %"class.base::internal::flat_tree.238" }
%"class.base::internal::flat_tree.238" = type { %"class.std::__1::vector.239" }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { %"struct.std::__1::pair.241"*, %"struct.std::__1::pair.241"*, %"class.std::__1::__compressed_pair.242" }
%"struct.std::__1::pair.241" = type opaque
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::pair.241"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.207" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.204, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.206" }
%class.scoped_refptr.204 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.205" }>
%"class.base::RefCountedThreadSafe.205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.206" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback.207" = type { %"class.base::internal::CallbackBase" }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.247", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.249" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::HttpAuthCache" = type { %"class.base::TickClock"*, %"class.base::Clock"*, i8, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.254" }
%"class.std::__1::__tree.254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.net::SSLClientSessionCache" = type { %"class.base::Clock"*, %"struct.net::SSLClientSessionCache::Config", %"class.base::MRUCache.264", i64, %"class.std::__1::unique_ptr.284" }
%"struct.net::SSLClientSessionCache::Config" = type { i64, i64 }
%"class.base::MRUCache.264" = type { %"class.base::MRUCacheBase.265" }
%"class.base::MRUCacheBase.265" = type { i32 (...)**, %"class.std::__1::list.266", %"class.std::__1::map.273", i64 }
%"class.std::__1::list.266" = type { %"class.std::__1::__list_imp.267" }
%"class.std::__1::__list_imp.267" = type { %"struct.std::__1::__list_node_base.268", %"class.std::__1::__compressed_pair.269" }
%"struct.std::__1::__list_node_base.268" = type { %"struct.std::__1::__list_node_base.268"*, %"struct.std::__1::__list_node_base.268"* }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.273" = type { %"class.std::__1::__tree.274" }
%"class.std::__1::__tree.274" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.net::SSLClientContext" = type { %"class.net::SSLConfigService::Observer", %"class.net::CertDatabase::Observer", %"struct.net::SSLContextConfig", %"class.net::SSLConfigService"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SSLClientSessionCache"*, %"class.net::SCTAuditingDelegate"*, %"class.net::SSLClientAuthCache", %"class.base::ObserverList.309" }
%"class.net::SSLConfigService::Observer" = type { i32 (...)** }
%"class.net::CertDatabase::Observer" = type { i32 (...)** }
%"struct.net::SSLContextConfig" = type <{ i16, i16, i16, [2 x i8], %"class.std::__1::vector.291", i8, i8, [6 x i8] }>
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { i16*, i16*, %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { i16* }
%"class.net::TransportSecurityState" = type opaque
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::SSLClientAuthCache" = type { %"class.std::__1::map.298" }
%"class.std::__1::map.298" = type { %"class.std::__1::__tree.299" }
%"class.std::__1::__tree.299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.base::ObserverList.309" = type <{ %"class.std::__1::vector.310", %"class.base::LinkedList.318", i64, i32, [4 x i8] }>
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.313" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.312 }
%class.scoped_refptr.312 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.318" = type { %"class.base::LinkNode.319" }
%"class.base::LinkNode.319" = type { %"class.base::internal::LinkNodeBase" }
%"class.net::WebSocketEndpointLockManager" = type { %"class.std::__1::map.321", %"class.base::TimeDelta", i64, %"class.base::WeakPtrFactory.332" }
%"class.std::__1::map.321" = type { %"class.std::__1::__tree.322" }
%"class.std::__1::__tree.322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.base::WeakPtrFactory.332" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.net::ClientSocketPoolManager"* }
%"class.net::ClientSocketPoolManager" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.net::ServerPushDelegate"* }
%"class.net::ServerPushDelegate" = type { i32 (...)** }
%"class.net::QuicStreamFactory" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::NetworkObserver", %"class.net::CertDatabase::Observer", i8, %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::ClientSocketFactory"*, %"class.net::HttpServerProperties"*, %"class.net::ServerPushDelegate"*, %"class.net::CertVerifier"*, %"class.net::CTPolicyEnforcer"*, %"class.net::TransportSecurityState"*, %"class.net::SCTAuditingDelegate"*, %"class.net::QuicCryptoClientStreamFactory"*, %"class.quic::QuicRandom"*, %"class.quic::QuicClock"*, %"struct.net::QuicParams", %"class.net::QuicClockSkewDetector", %"class.net::SocketPerformanceWatcherFactory"*, %"class.std::__1::unique_ptr.370", %"class.std::__1::unique_ptr.376", %"class.std::__1::map.382", %"class.std::__1::map.393", %"class.std::__1::map.404", %"class.std::__1::map.413", %"class.std::__1::map.422", %"class.std::__1::set.431", %"class.std::__1::map.441", %"class.std::__1::map.450", %"class.base::MRUCache.461", %"class.quic::QuicConfig", %"class.std::__1::map.508", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, %"class.quic::QuicTime::Delta", i64, %"class.net::IPEndPoint", i8, i8, %"class.net::NetworkConnection", i32, %"class.net::QuicConnectivityMonitor", %"class.base::TickClock"*, %"class.base::SequencedTaskRunner"*, %"class.net::SSLConfigService"*, i8, %"class.base::WeakPtrFactory.554" }
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::NetworkChangeNotifier::NetworkObserver" = type { i32 (...)**, %class.scoped_refptr.346 }
%class.scoped_refptr.346 = type { %"class.base::ObserverListThreadSafe.347"* }
%"class.base::ObserverListThreadSafe.347" = type opaque
%"class.net::ClientSocketFactory" = type opaque
%"class.net::QuicCryptoClientStreamFactory" = type opaque
%"class.quic::QuicRandom" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.348", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.355", %"class.std::__1::vector.363", %"class.std::__1::vector.363", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.350" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.355" = type { %"class.std::__1::__tree.356" }
%"class.std::__1::__tree.356" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::vector.363" = type { %"class.std::__1::__vector_base.364" }
%"class.std::__1::__vector_base.364" = type { i32*, i32*, %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { i32* }
%"class.net::QuicClockSkewDetector" = type { %"class.base::TimeTicks", %"class.base::Time" }
%"class.net::SocketPerformanceWatcherFactory" = type opaque
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.net::QuicChromiumConnectionHelper"* }
%"class.net::QuicChromiumConnectionHelper" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.quic::QuicAlarmFactory"* }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"class.std::__1::map.382" = type { %"class.std::__1::__tree.383" }
%"class.std::__1::__tree.383" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.393" = type { %"class.std::__1::__tree.394" }
%"class.std::__1::__tree.394" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.404" = type { %"class.std::__1::__tree.405" }
%"class.std::__1::__tree.405" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.413" = type { %"class.std::__1::__tree.414" }
%"class.std::__1::__tree.414" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.422" = type { %"class.std::__1::__tree.423" }
%"class.std::__1::__tree.423" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.424", %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::set.431" = type { %"class.std::__1::__tree.432" }
%"class.std::__1::__tree.432" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.433", %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.441" = type { %"class.std::__1::__tree.442" }
%"class.std::__1::__tree.442" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.450" = type { %"class.std::__1::__tree.451" }
%"class.std::__1::__tree.451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.452", %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.base::MRUCache.461" = type { %"class.base::MRUCacheBase.462" }
%"class.base::MRUCacheBase.462" = type { i32 (...)**, %"class.std::__1::list.463", %"class.std::__1::map.470", i64 }
%"class.std::__1::list.463" = type { %"class.std::__1::__list_imp.464" }
%"class.std::__1::__list_imp.464" = type { %"struct.std::__1::__list_node_base.465", %"class.std::__1::__compressed_pair.466" }
%"struct.std::__1::__list_node_base.465" = type { %"struct.std::__1::__list_node_base.465"*, %"struct.std::__1::__list_node_base.465"* }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.470" = type { %"class.std::__1::__tree.471" }
%"class.std::__1::__tree.471" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.472", %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.479", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.486", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.363", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.496", %"class.absl::optional.496", %"class.absl::optional.496", %"class.absl::optional.496", %"class.absl::optional.496", %"class.absl::optional.496", %"class.absl::flat_hash_map", %"class.absl::flat_hash_map" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.363", %"class.std::__1::vector.363" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.479" = type { %"class.absl::optional_internal::optional_data.480" }
%"class.absl::optional_internal::optional_data.480" = type { %"class.absl::optional_internal::optional_data_base.481" }
%"class.absl::optional_internal::optional_data_base.481" = type { %"class.absl::optional_internal::optional_data_dtor_base.482" }
%"class.absl::optional_internal::optional_data_dtor_base.482" = type { i8, %union.anon.483 }
%union.anon.483 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.484, i32 }
%union.anon.484 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.485 }
%union.anon.485 = type { [4 x i32] }
%"class.absl::optional.486" = type { %"class.absl::optional_internal::optional_data.487" }
%"class.absl::optional_internal::optional_data.487" = type { %"class.absl::optional_internal::optional_data_base.488" }
%"class.absl::optional_internal::optional_data_base.488" = type { %"class.absl::optional_internal::optional_data_dtor_base.489" }
%"class.absl::optional_internal::optional_data_dtor_base.489" = type { i8, %union.anon.490 }
%union.anon.490 = type { %"struct.std::__1::pair.491" }
%"struct.std::__1::pair.491" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array.495" }
%"class.quic::QuicConnectionId" = type { %union.anon.492 }
%union.anon.492 = type { %struct.anon.494 }
%struct.anon.494 = type { i8, i8* }
%"struct.std::__1::array.495" = type { [16 x i8] }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array.495", %"struct.std::__1::array.495", i8 }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::optional.496" = type { %"class.absl::optional_internal::optional_data.497" }
%"class.absl::optional_internal::optional_data.497" = type { %"class.absl::optional_internal::optional_data_base.498" }
%"class.absl::optional_internal::optional_data_base.498" = type { %"class.absl::optional_internal::optional_data_dtor_base.499" }
%"class.absl::optional_internal::optional_data_dtor_base.499" = type { i8, %union.anon.500 }
%union.anon.500 = type { %"class.quic::QuicConnectionId" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::map.508" = type { %"class.std::__1::__tree.509" }
%"class.std::__1::__tree.509" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.net::NetworkConnection" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", i32, i8* }
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.517 }
%class.scoped_refptr.517 = type { %"class.base::ObserverListThreadSafe.518"* }
%"class.base::ObserverListThreadSafe.518" = type opaque
%"class.net::QuicConnectivityMonitor" = type { %"class.net::QuicChromiumClientSession::ConnectivityObserver", i64, %"class.std::__1::set.520", %"class.std::__1::set.520", %"class.absl::optional.528", %"class.base::internal::ClampedNumeric", %"class.base::flat_map.533", %"class.base::flat_map.543", %"class.base::WeakPtrFactory.553" }
%"class.net::QuicChromiumClientSession::ConnectivityObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.519" }
%"class.base::WeakPtrFactory.519" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::set.520" = type { %"class.std::__1::__tree.521" }
%"class.std::__1::__tree.521" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.absl::optional.528" = type { %"class.absl::optional_internal::optional_data.529" }
%"class.absl::optional_internal::optional_data.529" = type { %"class.absl::optional_internal::optional_data_base.530" }
%"class.absl::optional_internal::optional_data_base.530" = type { %"class.absl::optional_internal::optional_data_dtor_base.531" }
%"class.absl::optional_internal::optional_data_dtor_base.531" = type { i8, %union.anon.532 }
%union.anon.532 = type { %"class.base::internal::ClampedNumeric" }
%"class.base::internal::ClampedNumeric" = type { i32 }
%"class.base::flat_map.533" = type { %"class.base::internal::flat_tree.534" }
%"class.base::internal::flat_tree.534" = type { %"class.std::__1::vector.535" }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"struct.std::__1::pair.537"*, %"struct.std::__1::pair.537"*, %"class.std::__1::__compressed_pair.538" }
%"struct.std::__1::pair.537" = type opaque
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"struct.std::__1::pair.537"* }
%"class.base::flat_map.543" = type { %"class.base::internal::flat_tree.544" }
%"class.base::internal::flat_tree.544" = type { %"class.std::__1::vector.545" }
%"class.std::__1::vector.545" = type { %"class.std::__1::__vector_base.546" }
%"class.std::__1::__vector_base.546" = type { %"struct.std::__1::pair.547"*, %"struct.std::__1::pair.547"*, %"class.std::__1::__compressed_pair.548" }
%"struct.std::__1::pair.547" = type opaque
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::pair.547"* }
%"class.base::WeakPtrFactory.553" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.554" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::SpdySessionPool" = type { %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::SSLClientContext::Observer", %"class.net::HttpServerProperties"*, %"class.net::TransportSecurityState"*, %"class.std::__1::set.555", %"class.std::__1::map.565", %"class.std::__1::multimap.576", %"class.std::__1::map.585", %"class.net::Http2PushPromiseIndex", %"class.net::SSLClientContext"*, %"class.net::HostResolver"*, %"class.std::__1::vector.348", i8, i8, i8, i8, i64, i32, %"class.std::__1::map.602", %"class.absl::optional.613", i8, i8, %"class.std::__1::map.618", i64 ()*, %"class.net::ServerPushDelegate"*, %"class.net::NetworkQualityEstimator"*, %"class.base::WeakPtrFactory.627" }
%"class.net::SSLClientContext::Observer" = type { %"class.base::CheckedObserver" }
%"class.std::__1::set.555" = type { %"class.std::__1::__tree.556" }
%"class.std::__1::__tree.556" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.565" = type { %"class.std::__1::__tree.566" }
%"class.std::__1::__tree.566" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::multimap.576" = type { %"class.std::__1::__tree.577" }
%"class.std::__1::__tree.577" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.585" = type { %"class.std::__1::__tree.586" }
%"class.std::__1::__tree.586" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.net::Http2PushPromiseIndex" = type { %"class.std::__1::set.594" }
%"class.std::__1::set.594" = type { %"class.std::__1::__tree.595" }
%"class.std::__1::__tree.595" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.596", %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::map.602" = type { %"class.std::__1::__tree.603" }
%"class.std::__1::__tree.603" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.absl::optional.613" = type { %"class.absl::optional_internal::optional_data.614" }
%"class.absl::optional_internal::optional_data.614" = type { %"class.absl::optional_internal::optional_data_base.615" }
%"class.absl::optional_internal::optional_data_base.615" = type { %"class.absl::optional_internal::optional_data_dtor_base.616" }
%"class.absl::optional_internal::optional_data_dtor_base.616" = type { i8, %union.anon.617 }
%union.anon.617 = type { %"struct.net::SpdySessionPool::GreasedHttp2Frame" }
%"struct.net::SpdySessionPool::GreasedHttp2Frame" = type { i8, i8, %"class.std::__1::basic_string" }
%"class.std::__1::map.618" = type { %"class.std::__1::__tree.619" }
%"class.std::__1::__tree.619" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.620", %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.base::WeakPtrFactory.627" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.net::HttpStreamFactory"* }
%"class.net::HttpStreamFactory" = type { i32 (...)**, %"class.net::HttpNetworkSession"*, %"class.std::__1::set.631", %"class.std::__1::unique_ptr.639" }
%"class.std::__1::set.631" = type { %"class.std::__1::__tree.632" }
%"class.std::__1::__tree.632" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.net::HttpStreamFactory::JobFactory"* }
%"class.net::HttpStreamFactory::JobFactory" = type opaque
%"class.std::__1::map.648" = type { %"class.std::__1::__tree.649" }
%"class.std::__1::__tree.649" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.650", %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { i32*, i32*, %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { i32* }
%"class.base::flat_map.666" = type { %"class.base::internal::flat_tree.667" }
%"class.base::internal::flat_tree.667" = type { %"class.std::__1::vector.668" }
%"class.std::__1::vector.668" = type { %"class.std::__1::__vector_base.669" }
%"class.std::__1::__vector_base.669" = type { %"struct.std::__1::pair.670"*, %"struct.std::__1::pair.670"*, %"class.std::__1::__compressed_pair.671" }
%"struct.std::__1::pair.670" = type opaque
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"struct.std::__1::pair.670"* }
%"struct.net::HttpNetworkSession::Params" = type <{ i8, [7 x i8], %"class.net::HostMappingRules", i8, i8, i16, i16, i8, i8, i8, [7 x i8], i64, i32, [4 x i8], %"class.std::__1::map.602", %"class.absl::optional.613", i8, [7 x i8], i64 ()*, i8, i8, i8, i8, i8, [3 x i8], %"class.base::internal::flat_tree.690", i8, i8, i8, [5 x i8] }>
%"class.net::HostMappingRules" = type { %"class.std::__1::vector.676", %"class.std::__1::vector.683" }
%"class.std::__1::vector.676" = type { %"class.std::__1::__vector_base.677" }
%"class.std::__1::__vector_base.677" = type { %"struct.net::HostMappingRules::MapRule"*, %"struct.net::HostMappingRules::MapRule"*, %"class.std::__1::__compressed_pair.678" }
%"struct.net::HostMappingRules::MapRule" = type opaque
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"struct.net::HostMappingRules::MapRule"* }
%"class.std::__1::vector.683" = type { %"class.std::__1::__vector_base.684" }
%"class.std::__1::__vector_base.684" = type { %"struct.net::HostMappingRules::ExclusionRule"*, %"struct.net::HostMappingRules::ExclusionRule"*, %"class.std::__1::__compressed_pair.685" }
%"struct.net::HostMappingRules::ExclusionRule" = type opaque
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"struct.net::HostMappingRules::ExclusionRule"* }
%"class.base::internal::flat_tree.690" = type { %"class.std::__1::vector" }
%"struct.net::HttpNetworkSession::Context" = type { %"class.net::ClientSocketFactory"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::HttpUserAgentSettings"*, %"class.net::SSLConfigService"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::HttpServerProperties"*, %"class.net::NetLog"*, %"class.net::SocketPerformanceWatcherFactory"*, %"class.net::NetworkQualityEstimator"*, %"class.net::QuicContext"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::QuicCryptoClientStreamFactory"* }
%"class.net::ProxyDelegate" = type opaque
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.691", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback.287", %"class.base::RepeatingCallback.287", %"class.base::Location" }
%"class.base::RepeatingCallback.287" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.net::HttpResponseBodyDrainer" = type { %class.scoped_refptr.80, %"class.std::__1::unique_ptr.697", i32, i32, %"class.base::OneShotTimer", %"class.net::HttpNetworkSession"* }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.net::HttpStream"* }
%"struct.net::NetErrorDetails" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>

$_ZN3net10HttpStream21SetRequestIdempotencyENS_11IdempotencyE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS0_17UnretainedWrapperIS4_EES7_EEES6_E7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS0_17UnretainedWrapperIS3_EES6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3net15HttpBasicStreamE = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpBasicStream"*)* @_ZN3net15HttpBasicStreamD2Ev to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*)* @_ZN3net15HttpBasicStreamD0Ev to i8*), i8* bitcast (i32 (%"class.net::HttpBasicStream"*, %"struct.net::HttpRequestInfo"*, i1, i32, %"class.net::NetLogWithSource"*, %"class.base::OnceCallback"*)* @_ZN3net15HttpBasicStream16InitializeStreamEPKNS_15HttpRequestInfoEbNS_15RequestPriorityERKNS_16NetLogWithSourceEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::HttpBasicStream"*, %"class.net::HttpRequestHeaders"*, %"class.net::HttpResponseInfo"*, %"class.base::OnceCallback"*)* @_ZN3net15HttpBasicStream11SendRequestERKNS_18HttpRequestHeadersEPNS_16HttpResponseInfoEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*)* @_ZN3net15HttpBasicStream19ReadResponseHeadersEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::HttpBasicStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net15HttpBasicStream16ReadResponseBodyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, i1)* @_ZN3net15HttpBasicStream5CloseEb to i8*), i8* bitcast (i1 (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream22IsResponseBodyCompleteEv to i8*), i8* bitcast (i1 (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream18IsConnectionReusedEv to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*)* @_ZN3net15HttpBasicStream19SetConnectionReusedEv to i8*), i8* bitcast (i1 (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream18CanReuseConnectionEv to i8*), i8* bitcast (i64 (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream21GetTotalReceivedBytesEv to i8*), i8* bitcast (i64 (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream17GetTotalSentBytesEv to i8*), i8* bitcast (i1 (%"class.net::HttpBasicStream"*, %"struct.net::LoadTimingInfo"*)* @_ZNK3net15HttpBasicStream17GetLoadTimingInfoEPNS_14LoadTimingInfoE to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, %"class.net::SSLInfo"*)* @_ZN3net15HttpBasicStream10GetSSLInfoEPNS_7SSLInfoE to i8*), i8* bitcast (i1 (%"class.net::HttpBasicStream"*, %"struct.net::AlternativeService"*)* @_ZNK3net15HttpBasicStream21GetAlternativeServiceEPNS_18AlternativeServiceE to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, %"class.net::SSLCertRequestInfo"*)* @_ZN3net15HttpBasicStream21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (i1 (%"class.net::HttpBasicStream"*, %"class.net::IPEndPoint"*)* @_ZN3net15HttpBasicStream17GetRemoteEndpointEPNS_10IPEndPointE to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, %"class.net::HttpNetworkSession"*)* @_ZN3net15HttpBasicStream5DrainEPNS_18HttpNetworkSessionE to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, %"struct.net::NetErrorDetails"*)* @_ZN3net15HttpBasicStream23PopulateNetErrorDetailsEPNS_15NetErrorDetailsE to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, i32)* @_ZN3net15HttpBasicStream11SetPriorityENS_15RequestPriorityE to i8*), i8* bitcast (%"class.net::HttpStream"* (%"class.net::HttpBasicStream"*)* @_ZN3net15HttpBasicStream18RenewStreamForAuthEv to i8*), i8* bitcast (void (%"class.net::HttpBasicStream"*, %"class.base::RepeatingCallback.135"*)* @_ZN3net15HttpBasicStream25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE to i8*), i8* bitcast (void (%"class.net::HttpStream"*, i32)* @_ZN3net10HttpStream21SetRequestIdempotencyENS_11IdempotencyE to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream13GetDnsAliasesEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.net::HttpBasicStream"*)* @_ZNK3net15HttpBasicStream18GetAcceptChViaAlpsEv to i8*)] }, align 8

@_ZN3net15HttpBasicStreamC1ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb = hidden unnamed_addr alias void (%"class.net::HttpBasicStream"*, %"class.net::ClientSocketHandle"*, i1), void (%"class.net::HttpBasicStream"*, %"class.net::ClientSocketHandle"*, i1)* @_ZN3net15HttpBasicStreamC2ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb
@_ZN3net15HttpBasicStreamD1Ev = hidden unnamed_addr alias void (%"class.net::HttpBasicStream"*), void (%"class.net::HttpBasicStream"*)* @_ZN3net15HttpBasicStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStreamC2ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb(%"class.net::HttpBasicStream"*, %"class.net::ClientSocketHandle"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3net15HttpBasicStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  tail call void @_ZN3net14HttpBasicStateC1ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb(%"class.net::HttpBasicState"* %5, %"class.net::ClientSocketHandle"* %1, i1 zeroext %2) #12
  %6 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN3net14HttpBasicStateC1ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb(%"class.net::HttpBasicState"*, %"class.net::ClientSocketHandle"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStreamD2Ev(%"class.net::HttpBasicStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3net15HttpBasicStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #12
  %4 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  tail call void @_ZN3net14HttpBasicStateD1Ev(%"class.net::HttpBasicState"* %4) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net14HttpBasicStateD1Ev(%"class.net::HttpBasicState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStreamD0Ev(%"class.net::HttpBasicStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3net15HttpBasicStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #12
  %4 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  tail call void @_ZN3net14HttpBasicStateD1Ev(%"class.net::HttpBasicState"* %4) #12
  %5 = bitcast %"class.net::HttpBasicStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15HttpBasicStream16InitializeStreamEPKNS_15HttpRequestInfoEbNS_15RequestPriorityERKNS_16NetLogWithSourceEN4base12OnceCallbackIFviEEE(%"class.net::HttpBasicStream"*, %"struct.net::HttpRequestInfo"*, i1 zeroext, i32, %"class.net::NetLogWithSource"* dereferenceable(24), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  tail call void @_ZN3net14HttpBasicState10InitializeEPKNS_15HttpRequestInfoENS_15RequestPriorityERKNS_16NetLogWithSourceE(%"class.net::HttpBasicState"* %8, %"struct.net::HttpRequestInfo"* %1, i32 %3, %"class.net::NetLogWithSource"* dereferenceable(24) %4) #12
  br i1 %2, label %27, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %10, align 8
  %12 = ptrtoint %"class.net::HttpBasicStream"* %0 to i64
  %13 = tail call i8* @_Znwm(i64 64) #13, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS0_17UnretainedWrapperIS4_EES7_EEES6_E7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS0_17UnretainedWrapperIS3_EES6_EE7DestroyEPKNS0_13BindStateBaseE) #12, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*, i32)* @_ZN3net15HttpBasicStream20OnHandshakeConfirmedEN4base12OnceCallbackIFviEEEi to i64), i64 0>, <2 x i64>* %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %12, i64* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %22 = load i64, i64* %21, align 8, !noalias !2
  %23 = bitcast i8* %19 to i64*
  store i64 %22, i64* %23, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8, !noalias !2
  %24 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %13, i8** %24, align 8, !alias.scope !2
  %25 = call i32 @_ZN3net16HttpStreamParser16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"* %11, %"class.base::OnceCallback"* nonnull %7) #12
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #12
  br label %27

27:                                               ; preds = %9, %6
  %28 = phi i32 [ 0, %6 ], [ %25, %9 ]
  ret i32 %28
}

declare void @_ZN3net14HttpBasicState10InitializeEPKNS_15HttpRequestInfoENS_15RequestPriorityERKNS_16NetLogWithSourceE(%"class.net::HttpBasicState"*, %"struct.net::HttpRequestInfo"*, i32, %"class.net::NetLogWithSource"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN3net16HttpStreamParser16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream20OnHandshakeConfirmedEN4base12OnceCallbackIFviEEEi(%"class.net::HttpBasicStream"* nocapture, %"class.base::OnceCallback"* nocapture, i32) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %8 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  br label %9

9:                                                ; preds = %6, %3
  %10 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %16 = inttoptr i64 %13 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, i32)**
  %19 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %18, align 8
  tail call void %19(%"class.base::internal::BindStateBase"* %16, i32 %2) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15HttpBasicStream11SendRequestERKNS_18HttpRequestHeadersEPNS_16HttpResponseInfoEN4base12OnceCallbackIFviEEE(%"class.net::HttpBasicStream"*, %"class.net::HttpRequestHeaders"* dereferenceable(24), %"class.net::HttpResponseInfo"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::HttpRawRequestHeaders", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.net::HttpRequestHeaders::Iterator", align 8
  %9 = alloca %"class.net::HttpRawRequestHeaders", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"struct.net::NetworkTrafficAnnotationTag", align 4
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %13, align 8
  %15 = icmp eq %"class.base::internal::BindStateBase"* %14, null
  br i1 %15, label %109, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.net::HttpRawRequestHeaders"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #12
  %18 = bitcast %"class.net::HttpRawRequestHeaders"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  call void @_ZN3net21HttpRawRequestHeadersC1Ev(%"class.net::HttpRawRequestHeaders"* nonnull %6) #12
  %19 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  call void @_ZNK3net14HttpBasicState19GenerateRequestLineEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.net::HttpBasicState"* %20) #12
  %21 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* %19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %23 to i64
  %31 = select i1 %24, i64 %29, i64 %30
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %33 = icmp ugt i64 %31, -17
  br i1 %33, label %34, label %36

34:                                               ; preds = %16
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %35) #14
  unreachable

36:                                               ; preds = %16
  %37 = icmp ult i64 %31, 23
  br i1 %37, label %46, label %38

38:                                               ; preds = %36
  %39 = add nuw i64 %31, 16
  %40 = and i64 %39, -16
  %41 = call i8* @_Znwm(i64 %40) #13
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8, !alias.scope !7
  %43 = or i64 %40, -9223372036854775808
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %43, i64* %44, align 8, !alias.scope !7
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %45, align 8, !alias.scope !7
  br label %51

46:                                               ; preds = %36
  %47 = trunc i64 %31 to i8
  %48 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 %47, i8* %49, align 1, !alias.scope !7
  %50 = icmp eq i64 %31, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46, %38
  %52 = phi i8* [ %41, %38 ], [ %32, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 %27, i64 %31, i1 false) #12
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %32, %46 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %31
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"class.net::HttpRawRequestHeaders", %"class.net::HttpRawRequestHeaders"* %6, i64 0, i32 1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #13
  %64 = load i8, i8* %22, align 1
  br label %65

65:                                               ; preds = %53, %61
  %66 = phi i8 [ %23, %53 ], [ %64, %61 ]
  %67 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %32, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  %68 = icmp slt i8 %66, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %65, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  %72 = getelementptr inbounds %"class.net::HttpRequestHeaders::Iterator", %"class.net::HttpRequestHeaders::Iterator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  call void @_ZN3net18HttpRequestHeaders8IteratorC1ERKS0_(%"class.net::HttpRequestHeaders::Iterator"* nonnull %8, %"class.net::HttpRequestHeaders"* dereferenceable(24) %1) #12
  %73 = call zeroext i1 @_ZN3net18HttpRequestHeaders8Iterator7GetNextEv(%"class.net::HttpRequestHeaders::Iterator"* nonnull %8) #12
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.net::HttpRequestHeaders::Iterator", %"class.net::HttpRequestHeaders::Iterator"* %8, i64 0, i32 1, i32 0
  br label %81

76:                                               ; preds = %81, %71
  call void @_ZN3net18HttpRequestHeaders8IteratorD1Ev(%"class.net::HttpRequestHeaders::Iterator"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #12
  call void @_ZN3net21HttpRawRequestHeadersC1EOS0_(%"class.net::HttpRawRequestHeaders"* nonnull %9, %"class.net::HttpRawRequestHeaders"* nonnull dereferenceable(48) %6) #12
  %77 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %13, align 8
  %78 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %77, i64 0, i32 1
  %79 = bitcast void ()** %78 to void (%"class.base::internal::BindStateBase"*, %"class.net::HttpRawRequestHeaders"*)**
  %80 = load void (%"class.base::internal::BindStateBase"*, %"class.net::HttpRawRequestHeaders"*)*, void (%"class.base::internal::BindStateBase"*, %"class.net::HttpRawRequestHeaders"*)** %79, align 8
  call void %80(%"class.base::internal::BindStateBase"* %77, %"class.net::HttpRawRequestHeaders"* nonnull dereferenceable(48) %9) #12
  call void @_ZN3net21HttpRawRequestHeadersD1Ev(%"class.net::HttpRawRequestHeaders"* nonnull %9) #12
  call void @_ZN3net21HttpRawRequestHeadersD1Ev(%"class.net::HttpRawRequestHeaders"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #12
  br label %109

81:                                               ; preds = %74, %81
  %82 = load %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"** %75, align 8
  %83 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %82 to i8*
  %90 = select i1 %86, i8* %88, i8* %89
  %91 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %85 to i64
  %94 = select i1 %86, i64 %92, i64 %93
  %95 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %82, i64 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  %103 = select i1 %99, i8* %101, i8* %102
  %104 = getelementptr inbounds %"struct.net::HttpRequestHeaders::HeaderKeyValuePair", %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* %82, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %98 to i64
  %107 = select i1 %99, i64 %105, i64 %106
  call void @_ZN3net21HttpRawRequestHeaders3AddEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpRawRequestHeaders"* nonnull %6, i8* %90, i64 %94, i8* %103, i64 %107) #12
  %108 = call zeroext i1 @_ZN3net18HttpRequestHeaders8Iterator7GetNextEv(%"class.net::HttpRequestHeaders::Iterator"* nonnull %8) #12
  br i1 %108, label %81, label %76

109:                                              ; preds = %4, %76
  %110 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %111 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %110, align 8
  %112 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #12
  %113 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  call void @_ZNK3net14HttpBasicState19GenerateRequestLineEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.net::HttpBasicState"* %113) #12
  %114 = bitcast %"struct.net::NetworkTrafficAnnotationTag"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #12
  %115 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 7, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %11, i64 0, i32 0
  store i32 %116, i32* %117, align 4
  %118 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.base::OnceCallback"* %12 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %118, align 8
  %122 = call i32 @_ZN3net16HttpStreamParser11SendRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_18HttpRequestHeadersERKNS_27NetworkTrafficAnnotationTagEPNS_16HttpResponseInfoEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"* %111, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.net::HttpRequestHeaders"* dereferenceable(24) %1, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) %11, %"class.net::HttpResponseInfo"* %2, %"class.base::OnceCallback"* nonnull %12) #12
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %123) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #12
  %124 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %109
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #13
  br label %131

131:                                              ; preds = %109, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #12
  ret i32 %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN3net21HttpRawRequestHeadersC1Ev(%"class.net::HttpRawRequestHeaders"*) unnamed_addr #1

declare void @_ZNK3net14HttpBasicState19GenerateRequestLineEv(%"class.std::__1::basic_string"* sret, %"class.net::HttpBasicState"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN3net18HttpRequestHeaders8IteratorC1ERKS0_(%"class.net::HttpRequestHeaders::Iterator"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN3net18HttpRequestHeaders8Iterator7GetNextEv(%"class.net::HttpRequestHeaders::Iterator"*) local_unnamed_addr #1

declare void @_ZN3net21HttpRawRequestHeaders3AddEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpRawRequestHeaders"*, i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeaders8IteratorD1Ev(%"class.net::HttpRequestHeaders::Iterator"*) unnamed_addr #2

declare void @_ZN3net21HttpRawRequestHeadersC1EOS0_(%"class.net::HttpRawRequestHeaders"*, %"class.net::HttpRawRequestHeaders"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net21HttpRawRequestHeadersD1Ev(%"class.net::HttpRawRequestHeaders"*) unnamed_addr #2

declare i32 @_ZN3net16HttpStreamParser11SendRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_18HttpRequestHeadersERKNS_27NetworkTrafficAnnotationTagEPNS_16HttpResponseInfoEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::HttpRequestHeaders"* dereferenceable(24), %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4), %"class.net::HttpResponseInfo"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15HttpBasicStream19ReadResponseHeadersEN4base12OnceCallbackIFviEEE(%"class.net::HttpBasicStream"* nocapture readonly, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %4, align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = call i32 @_ZN3net16HttpStreamParser19ReadResponseHeadersEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"* %5, %"class.base::OnceCallback"* nonnull %3) #12
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #12
  ret i32 %10
}

declare i32 @_ZN3net16HttpStreamParser19ReadResponseHeadersEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15HttpBasicStream16ReadResponseBodyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::HttpBasicStream"* nocapture readonly, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %6, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = call i32 @_ZN3net16HttpStreamParser16ReadResponseBodyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"* %7, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #12
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #12
  ret i32 %12
}

declare i32 @_ZN3net16HttpStreamParser16ReadResponseBodyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream5CloseEb(%"class.net::HttpBasicStream"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %3, align 8
  %5 = icmp eq %"class.net::HttpStreamParser"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %9, align 8
  %11 = icmp ne %"class.net::StreamSocket"* %10, null
  %12 = and i1 %11, %1
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = bitcast %"class.net::StreamSocket"* %10 to void (%"class.net::StreamSocket"*)***
  %15 = load void (%"class.net::StreamSocket"*)**, void (%"class.net::StreamSocket"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %15, i64 13
  %17 = load void (%"class.net::StreamSocket"*)*, void (%"class.net::StreamSocket"*)** %16, align 8
  tail call void %17(%"class.net::StreamSocket"* nonnull %10) #12
  %18 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %7, align 8
  br label %19

19:                                               ; preds = %13, %6
  %20 = phi %"class.net::ClientSocketHandle"* [ %18, %13 ], [ %8, %6 ]
  tail call void @_ZN3net18ClientSocketHandle5ResetEv(%"class.net::ClientSocketHandle"* %20) #12
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

declare void @_ZN3net18ClientSocketHandle5ResetEv(%"class.net::ClientSocketHandle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.net::HttpStream"* @_ZN3net15HttpBasicStream18RenewStreamForAuthEv(%"class.net::HttpBasicStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  tail call void @_ZN3net14HttpBasicState12DeleteParserEv(%"class.net::HttpBasicState"* %2) #12
  %3 = tail call i8* @_Znwm(i64 208) #13
  %4 = tail call %"class.net::ClientSocketHandle"* @_ZN3net14HttpBasicState17ReleaseConnectionEv(%"class.net::HttpBasicState"* %2) #12
  %5 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 3
  %6 = load i8, i8* %5, align 8, !range !10
  %7 = icmp ne i8 %6, 0
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN3net15HttpBasicStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 8
  %10 = bitcast i8* %9 to %"class.net::HttpBasicState"*
  tail call void @_ZN3net14HttpBasicStateC1ENSt3__110unique_ptrINS_18ClientSocketHandleENS1_14default_deleteIS3_EEEEb(%"class.net::HttpBasicState"* %10, %"class.net::ClientSocketHandle"* %4, i1 zeroext %7) #12
  %11 = getelementptr inbounds i8, i8* %3, i64 192
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #12
  %12 = bitcast i8* %3 to %"class.net::HttpStream"*
  ret %"class.net::HttpStream"* %12
}

declare void @_ZN3net14HttpBasicState12DeleteParserEv(%"class.net::HttpBasicState"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare %"class.net::ClientSocketHandle"* @_ZN3net14HttpBasicState17ReleaseConnectionEv(%"class.net::HttpBasicState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15HttpBasicStream22IsResponseBodyCompleteEv(%"class.net::HttpBasicStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK3net16HttpStreamParser22IsResponseBodyCompleteEv(%"class.net::HttpStreamParser"* %3) #12
  ret i1 %4
}

declare zeroext i1 @_ZNK3net16HttpStreamParser22IsResponseBodyCompleteEv(%"class.net::HttpStreamParser"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15HttpBasicStream18IsConnectionReusedEv(%"class.net::HttpBasicStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK3net14HttpBasicState18IsConnectionReusedEv(%"class.net::HttpBasicState"* %2) #12
  ret i1 %3
}

declare zeroext i1 @_ZNK3net14HttpBasicState18IsConnectionReusedEv(%"class.net::HttpBasicState"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream19SetConnectionReusedEv(%"class.net::HttpBasicStream"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %2, align 8
  %4 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %3, i64 0, i32 5
  store i32 2, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15HttpBasicStream18CanReuseConnectionEv(%"class.net::HttpBasicStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %2, align 8
  %4 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %4, align 8
  %6 = icmp eq %"class.net::StreamSocket"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK3net16HttpStreamParser18CanReuseConnectionEv(%"class.net::HttpStreamParser"* %9) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK3net16HttpStreamParser18CanReuseConnectionEv(%"class.net::HttpStreamParser"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net15HttpBasicStream21GetTotalReceivedBytesEv(%"class.net::HttpBasicStream"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %2, align 8
  %4 = icmp eq %"class.net::HttpStreamParser"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %3, i64 0, i32 8
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net15HttpBasicStream17GetTotalSentBytesEv(%"class.net::HttpBasicStream"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %2, align 8
  %4 = icmp eq %"class.net::HttpStreamParser"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %3, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15HttpBasicStream17GetLoadTimingInfoEPNS_14LoadTimingInfoE(%"class.net::HttpBasicStream"*, %"struct.net::LoadTimingInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %3, align 8
  %5 = bitcast %"class.net::HttpBasicStream"* %0 to i1 (%"class.net::HttpBasicStream"*)***
  %6 = load i1 (%"class.net::HttpBasicStream"*)**, i1 (%"class.net::HttpBasicStream"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.net::HttpBasicStream"*)*, i1 (%"class.net::HttpBasicStream"*)** %6, i64 8
  %8 = load i1 (%"class.net::HttpBasicStream"*)*, i1 (%"class.net::HttpBasicStream"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.net::HttpBasicStream"* %0) #12
  %10 = tail call zeroext i1 @_ZNK3net18ClientSocketHandle17GetLoadTimingInfoEbPNS_14LoadTimingInfoE(%"class.net::ClientSocketHandle"* %4, i1 zeroext %9, %"struct.net::LoadTimingInfo"* %1) #12
  br i1 %10, label %11, label %40

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %12, align 8
  %14 = icmp eq %"class.net::HttpStreamParser"* %13, null
  br i1 %14, label %40, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.net::LoadTimingInfo", %"struct.net::LoadTimingInfo"* %1, i64 0, i32 10, i32 5, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  store i64 %21, i64* %16, align 8
  %24 = getelementptr inbounds %"struct.net::LoadTimingInfo", %"struct.net::LoadTimingInfo"* %1, i64 0, i32 10, i32 3, i32 0, i32 0
  %25 = load i64, i64* %20, align 8
  store i64 %25, i64* %24, align 8
  %26 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %12, align 8
  br label %27

27:                                               ; preds = %23, %19, %15
  %28 = phi %"class.net::HttpStreamParser"* [ %26, %23 ], [ %13, %19 ], [ %13, %15 ]
  %29 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %28, i64 0, i32 11, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.net::LoadTimingInfo", %"struct.net::LoadTimingInfo"* %1, i64 0, i32 13, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %12, align 8
  %33 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %32, i64 0, i32 13, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.net::LoadTimingInfo", %"struct.net::LoadTimingInfo"* %1, i64 0, i32 15, i32 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %12, align 8
  %37 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %36, i64 0, i32 14, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.net::LoadTimingInfo", %"struct.net::LoadTimingInfo"* %1, i64 0, i32 16, i32 0, i32 0
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %2, %11, %27
  %41 = phi i1 [ true, %27 ], [ false, %11 ], [ false, %2 ]
  ret i1 %41
}

declare zeroext i1 @_ZNK3net18ClientSocketHandle17GetLoadTimingInfoEbPNS_14LoadTimingInfoE(%"class.net::ClientSocketHandle"*, i1 zeroext, %"struct.net::LoadTimingInfo"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net15HttpBasicStream21GetAlternativeServiceEPNS_18AlternativeServiceE(%"class.net::HttpBasicStream"* nocapture readnone, %"struct.net::AlternativeService"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream10GetSSLInfoEPNS_7SSLInfoE(%"class.net::HttpBasicStream"* nocapture readonly, %"class.net::SSLInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %3, align 8
  %5 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %5, align 8
  %7 = icmp eq %"class.net::StreamSocket"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN3net7SSLInfo5ResetEv(%"class.net::SSLInfo"* %1) #12
  br label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %10, align 8
  tail call void @_ZN3net16HttpStreamParser10GetSSLInfoEPNS_7SSLInfoE(%"class.net::HttpStreamParser"* %11, %"class.net::SSLInfo"* %1) #12
  br label %12

12:                                               ; preds = %9, %8
  ret void
}

declare void @_ZN3net7SSLInfo5ResetEv(%"class.net::SSLInfo"*) local_unnamed_addr #1

declare void @_ZN3net16HttpStreamParser10GetSSLInfoEPNS_7SSLInfoE(%"class.net::HttpStreamParser"*, %"class.net::SSLInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::HttpBasicStream"* nocapture readonly, %"class.net::SSLCertRequestInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %3, align 8
  %5 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %5, align 8
  %7 = icmp eq %"class.net::StreamSocket"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN3net18SSLCertRequestInfo5ResetEv(%"class.net::SSLCertRequestInfo"* %1) #12
  br label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %10, align 8
  tail call void @_ZN3net16HttpStreamParser21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::HttpStreamParser"* %11, %"class.net::SSLCertRequestInfo"* %1) #12
  br label %12

12:                                               ; preds = %9, %8
  ret void
}

declare void @_ZN3net18SSLCertRequestInfo5ResetEv(%"class.net::SSLCertRequestInfo"*) local_unnamed_addr #1

declare void @_ZN3net16HttpStreamParser21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::HttpStreamParser"*, %"class.net::SSLCertRequestInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15HttpBasicStream17GetRemoteEndpointEPNS_10IPEndPointE(%"class.net::HttpBasicStream"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.net::ClientSocketHandle"*, %"class.net::ClientSocketHandle"** %3, align 8
  %5 = icmp eq %"class.net::ClientSocketHandle"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::ClientSocketHandle", %"class.net::ClientSocketHandle"* %4, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %7, align 8
  %9 = icmp eq %"class.net::StreamSocket"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.net::StreamSocket"* %8 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %12 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %12, i64 16
  %14 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %13, align 8
  %15 = tail call i32 %14(%"class.net::StreamSocket"* nonnull %8, %"class.net::IPEndPoint"* %1) #12
  %16 = icmp eq i32 %15, 0
  br label %17

17:                                               ; preds = %2, %6, %10
  %18 = phi i1 [ %16, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream5DrainEPNS_18HttpNetworkSessionE(%"class.net::HttpBasicStream"*, %"class.net::HttpNetworkSession"*) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 160) #13
  %4 = bitcast i8* %3 to %"class.net::HttpResponseBodyDrainer"*
  %5 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 0
  tail call void @_ZN3net23HttpResponseBodyDrainerC1EPNS_10HttpStreamE(%"class.net::HttpResponseBodyDrainer"* nonnull %4, %"class.net::HttpStream"* %5) #12
  tail call void @_ZN3net23HttpResponseBodyDrainer5StartEPNS_18HttpNetworkSessionE(%"class.net::HttpResponseBodyDrainer"* nonnull %4, %"class.net::HttpNetworkSession"* %1) #12
  ret void
}

declare void @_ZN3net23HttpResponseBodyDrainerC1EPNS_10HttpStreamE(%"class.net::HttpResponseBodyDrainer"*, %"class.net::HttpStream"*) unnamed_addr #1

declare void @_ZN3net23HttpResponseBodyDrainer5StartEPNS_18HttpNetworkSessionE(%"class.net::HttpResponseBodyDrainer"*, %"class.net::HttpNetworkSession"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net15HttpBasicStream23PopulateNetErrorDetailsEPNS_15NetErrorDetailsE(%"class.net::HttpBasicStream"* nocapture readnone, %"struct.net::NetErrorDetails"* nocapture) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"struct.net::NetErrorDetails", %"struct.net::NetErrorDetails"* %1, i64 0, i32 3
  store i32 1, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net15HttpBasicStream11SetPriorityENS_15RequestPriorityE(%"class.net::HttpBasicStream"* nocapture, i32) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpBasicStream25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE(%"class.net::HttpBasicStream"*, %"class.base::RepeatingCallback.135"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.135", %"class.base::RepeatingCallback.135"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net15HttpBasicStream13GetDnsAliasesEv(%"class.net::HttpBasicStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpBasicStream", %"class.net::HttpBasicStream"* %0, i64 0, i32 1
  %3 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net14HttpBasicState13GetDnsAliasesEv(%"class.net::HttpBasicState"* %2) #12
  ret %"class.std::__1::vector"* %3
}

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net14HttpBasicState13GetDnsAliasesEv(%"class.net::HttpBasicState"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZNK3net15HttpBasicStream18GetAcceptChViaAlpsEv(%"class.net::HttpBasicStream"* nocapture readnone) unnamed_addr #10 align 2 {
  ret { i8*, i64 } zeroinitializer
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net10HttpStream21SetRequestIdempotencyENS_11IdempotencyE(%"class.net::HttpStream"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS0_17UnretainedWrapperIS4_EES7_EEES6_E7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %9 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds i8, i8* %7, i64 %13
  %16 = bitcast i8* %15 to %"class.net::HttpBasicStream"*
  %17 = and i64 %10, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %10, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*, i32)**
  %25 = load void (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*, i32)*, void (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*, i32)** %24, align 8
  br label %28

26:                                               ; preds = %2
  %27 = inttoptr i64 %10 to void (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*, i32)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.net::HttpBasicStream"*, %"class.base::OnceCallback"*, i32)* [ %25, %19 ], [ %27, %26 ]
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::BindStateBase"**
  %31 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  call void %29(%"class.net::HttpBasicStream"* %16, %"class.base::OnceCallback"* nonnull %3, i32 %1) #12
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS0_17UnretainedWrapperIS3_EES6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15HttpBasicStreamEFvNS2_IFviEEEiEJNS0_17UnretainedWrapperIS4_EES6_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15HttpBasicStreamEFvNS2_IFviEEEiEJNS0_17UnretainedWrapperIS4_EES6_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS_8internal17UnretainedWrapperIS2_EES5_EEENS3_INS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net15HttpBasicStreamEFvNS_12OnceCallbackIFviEEEiEJNS_8internal17UnretainedWrapperIS2_EES5_EEENS3_INS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!10 = !{i8 0, i8 2}
