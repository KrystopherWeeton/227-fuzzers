; ModuleID = '../../media/mojo/common/audio_data_s16_converter.cc'
source_filename = "../../media/mojo/common/audio_data_s16_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AudioDataS16Converter" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.0", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.media::ChannelMixer"* }
%"class.media::ChannelMixer" = type <{ %"class.std::__1::vector.12", i8, [7 x i8] }>
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { float*, float*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::vector.14"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.47" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.media::mojom::AudioDataS16"* }
%"class.media::mojom::AudioDataS16" = type { i32, i32, i32, %"class.std::__1::vector.50" }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i16*, i16*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i16* }
%"class.media::AudioBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.29", i32, i32, i32, i32, i32, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.std::__1::unique_ptr.30", i64, %"class.std::__1::vector.33", %class.scoped_refptr.40 }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i8* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i8**, i8**, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i8** }
%class.scoped_refptr.40 = type { %"class.media::AudioBufferMemoryPool"* }
%"class.media::AudioBufferMemoryPool" = type { %"class.base::RefCountedThreadSafe.41", %"class.base::Lock", %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.42" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIsNS_9allocatorIsEEE6assignIPsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm = comdat any

@_ZTVN5media21AudioDataS16ConverterE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::AudioDataS16Converter"*)* @_ZN5media21AudioDataS16ConverterD2Ev to i8*), i8* bitcast (void (%"class.media::AudioDataS16Converter"*)* @_ZN5media21AudioDataS16ConverterD0Ev to i8*)] }, align 8

@_ZN5media21AudioDataS16ConverterC1Ev = hidden unnamed_addr alias void (%"class.media::AudioDataS16Converter"*), void (%"class.media::AudioDataS16Converter"*)* @_ZN5media21AudioDataS16ConverterC2Ev
@_ZN5media21AudioDataS16ConverterD1Ev = hidden unnamed_addr alias void (%"class.media::AudioDataS16Converter"*), void (%"class.media::AudioDataS16Converter"*)* @_ZN5media21AudioDataS16ConverterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media21AudioDataS16ConverterC2Ev(%"class.media::AudioDataS16Converter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media21AudioDataS16ConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16ConverterD2Ev(%"class.media::AudioDataS16Converter"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media21AudioDataS16ConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.media::ChannelMixer"*, %"class.media::ChannelMixer"** %3, align 8
  store %"class.media::ChannelMixer"* null, %"class.media::ChannelMixer"** %3, align 8
  %5 = icmp eq %"class.media::ChannelMixer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5media12ChannelMixerD1Ev(%"class.media::ChannelMixer"* nonnull %4) #9
  %7 = bitcast %"class.media::ChannelMixer"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %9, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %9, align 8
  %11 = icmp eq %"class.media::AudioBus"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.media::AudioBus"* %10 to void (%"class.media::AudioBus"*)***
  %14 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %14, i64 1
  %16 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %15, align 8
  tail call void %16(%"class.media::AudioBus"* nonnull %10) #9
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %18, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %18, align 8
  %20 = icmp eq %"class.media::AudioBus"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.media::AudioBus"* %19 to void (%"class.media::AudioBus"*)***
  %23 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %23, i64 1
  %25 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %24, align 8
  tail call void %25(%"class.media::AudioBus"* nonnull %19) #9
  br label %26

26:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16ConverterD0Ev(%"class.media::AudioDataS16Converter"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media21AudioDataS16ConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.media::ChannelMixer"*, %"class.media::ChannelMixer"** %3, align 8
  store %"class.media::ChannelMixer"* null, %"class.media::ChannelMixer"** %3, align 8
  %5 = icmp eq %"class.media::ChannelMixer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5media12ChannelMixerD1Ev(%"class.media::ChannelMixer"* nonnull %4) #9
  %7 = bitcast %"class.media::ChannelMixer"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %9, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %9, align 8
  %11 = icmp eq %"class.media::AudioBus"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.media::AudioBus"* %10 to void (%"class.media::AudioBus"*)***
  %14 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %14, i64 1
  %16 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %15, align 8
  tail call void %16(%"class.media::AudioBus"* nonnull %10) #9
  br label %17

17:                                               ; preds = %12, %8
  %18 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %18, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %18, align 8
  %20 = icmp eq %"class.media::AudioBus"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.media::AudioBus"* %19 to void (%"class.media::AudioBus"*)***
  %23 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %23, i64 1
  %25 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %24, align 8
  tail call void %25(%"class.media::AudioBus"* nonnull %19) #9
  br label %26

26:                                               ; preds = %17, %21
  %27 = bitcast %"class.media::AudioDataS16Converter"* %0 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16Converter21ConvertToAudioDataS16E13scoped_refptrINS_11AudioBufferEEb(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.media::AudioDataS16Converter"* nocapture, %"class.media::AudioBuffer"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  %8 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  %11 = or i1 %10, %3
  %12 = and i1 %7, %11
  br i1 %12, label %13, label %37

13:                                               ; preds = %4
  %14 = tail call i8* @_Znwm(i64 40) #10, !noalias !2
  %15 = bitcast i8* %14 to %"class.media::mojom::AudioDataS16"*
  tail call void @_ZN5media5mojom12AudioDataS16C1Ev(%"class.media::mojom::AudioDataS16"* nonnull %15) #9, !noalias !2
  %16 = ptrtoint i8* %14 to i64
  %17 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %16, i64* %17, align 8, !alias.scope !2
  %18 = load i32, i32* %8, align 4
  %19 = bitcast i8* %14 to i32*
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 6
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i8, i8* %14, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 8
  %24 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds i8, i8* %14, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 4
  %28 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 12, i32 0, i32 0
  %29 = bitcast i8*** %28 to i16***
  %30 = load i16**, i16*** %29, align 8
  %31 = load i16*, i16** %30, align 8
  %32 = getelementptr inbounds i8, i8* %14, i64 16
  %33 = bitcast i8* %32 to %"class.std::__1::vector.50"*
  %34 = mul nsw i32 %18, %21
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %31, i64 %35
  tail call void @_ZNSt3__16vectorIsNS_9allocatorIsEEE6assignIPsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.50"* %33, i16* %31, i16* %36)
  br label %82

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %39, align 8
  %41 = icmp eq %"class.media::AudioBus"* %40, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %40, i64 0, i32 5
  %44 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %40, i64 0, i32 5, i32 0, i32 1
  %45 = bitcast float*** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = lshr exact i64 %49, 3
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %9, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %40, i64 0, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %73, label %59

59:                                               ; preds = %53, %42, %37
  %60 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 6
  %61 = load i32, i32* %60, align 4
  %62 = tail call %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32 %9, i32 %61) #9
  %63 = ptrtoint %"class.media::AudioBus"* %62 to i64
  %64 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %39, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  store i64 %63, i64* %65, align 8
  %66 = icmp eq %"class.media::AudioBus"* %64, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %59
  %68 = bitcast %"class.media::AudioBus"* %64 to void (%"class.media::AudioBus"*)***
  %69 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %69, i64 1
  %71 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %70, align 8
  tail call void %71(%"class.media::AudioBus"* nonnull %64) #9
  %72 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %39, align 8
  br label %73

73:                                               ; preds = %53, %59, %67
  %74 = phi %"class.media::AudioBus"* [ %62, %59 ], [ %72, %67 ], [ %40, %53 ]
  %75 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 6
  %76 = load i32, i32* %75, align 4
  tail call void @_ZNK5media11AudioBuffer10ReadFramesEiiiPNS_8AudioBusE(%"class.media::AudioBuffer"* %2, i32 %76, i32 0, i32 0, %"class.media::AudioBus"* %74) #9
  %77 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %39, align 8
  %78 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 5
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  tail call void @_ZN5media21AudioDataS16Converter37ConvertAudioBusToAudioDataS16InternalERKNS_8AudioBusEiNS_13ChannelLayoutEb(%"class.mojo::StructPtr"* sret %0, %"class.media::AudioDataS16Converter"* %1, %"class.media::AudioBus"* dereferenceable(80) %77, i32 %79, i32 %81, i1 zeroext %3)
  br label %82

82:                                               ; preds = %13, %73
  %83 = icmp eq %"class.media::AudioBuffer"* %2, null
  br i1 %83, label %96, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %2, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe.29", %"class.base::RefCountedThreadSafe.29"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i32* %86, i32 1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.29", %"class.base::RefCountedThreadSafe.29"* %85, i64 -2
  %91 = bitcast %"class.base::RefCountedThreadSafe.29"* %90 to %"class.media::AudioBuffer"*
  %92 = bitcast %"class.base::RefCountedThreadSafe.29"* %90 to void (%"class.media::AudioBuffer"*)***
  %93 = load void (%"class.media::AudioBuffer"*)**, void (%"class.media::AudioBuffer"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.media::AudioBuffer"*)*, void (%"class.media::AudioBuffer"*)** %93, i64 1
  %95 = load void (%"class.media::AudioBuffer"*)*, void (%"class.media::AudioBuffer"*)** %94, align 8
  tail call void %95(%"class.media::AudioBuffer"* nonnull %91) #9
  br label %96

96:                                               ; preds = %82, %84, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIsNS_9allocatorIsEEE6assignIPsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.50"*, i16*, i16*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i16* %2 to i64
  %5 = ptrtoint i16* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 1
  %8 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i16** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.50"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 1
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i16*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i16** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 1
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i16, i16* %1, i64 %22
  %25 = select i1 %23, i16* %24, i16* %2
  %26 = ptrtoint i16* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 1
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i16* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %31, i8* align 2 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 1
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i16* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %40, i8* align 2 %41, i64 %36, i1 false) #9
  %42 = inttoptr i64 %35 to i16*
  %43 = getelementptr inbounds i16, i16* %42, i64 %39
  %44 = ptrtoint i16* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %88

47:                                               ; preds = %33
  %48 = getelementptr inbounds i16, i16* %16, i64 %28
  store i16* %48, i16** %18, align 8
  br label %88

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i16** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.50"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp slt i64 %6, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.50"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #11
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 1
  %63 = icmp ult i64 %62, 4611686018427387903
  %64 = icmp ult i64 %57, %7
  %65 = select i1 %64, i64 %7, i64 %57
  %66 = select i1 %63, i64 %65, i64 9223372036854775807
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::vector.50"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #11
  unreachable

70:                                               ; preds = %61
  %71 = shl i64 %66, 1
  %72 = tail call i8* @_Znwm(i64 %71) #10
  %73 = bitcast i8* %72 to i16*
  %74 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %75 = bitcast i16** %74 to i8**
  store i8* %72, i8** %75, align 8
  %76 = bitcast %"class.std::__1::vector.50"* %0 to i8**
  store i8* %72, i8** %76, align 8
  %77 = getelementptr inbounds i16, i16* %73, i64 %66
  store i16* %77, i16** %8, align 8
  %78 = bitcast i16** %74 to i64*
  %79 = ptrtoint i8* %72 to i64
  %80 = icmp sgt i64 %6, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %70
  %82 = lshr exact i64 %6, 1
  %83 = bitcast i16* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %72, i8* align 2 %83, i64 %6, i1 false) #9
  %84 = getelementptr inbounds i16, i16* %73, i64 %82
  %85 = ptrtoint i16* %84 to i64
  br label %86

86:                                               ; preds = %70, %81
  %87 = phi i64 [ %85, %81 ], [ %79, %70 ]
  store i64 %87, i64* %78, align 8
  br label %88

88:                                               ; preds = %45, %47, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16Converter24CopyBufferToTempAudioBusERKNS_11AudioBufferE(%"class.media::AudioDataS16Converter"* nocapture, %"class.media::AudioBuffer"* dereferenceable(104)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  %6 = icmp eq %"class.media::AudioBus"* %5, null
  %7 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  br i1 %6, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %5, i64 0, i32 5
  %11 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %5, i64 0, i32 5, i32 0, i32 1
  %12 = bitcast float*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = lshr exact i64 %16, 3
  %18 = trunc i64 %17 to i32
  %19 = icmp eq i32 %8, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %1, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %5, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %40, label %26

26:                                               ; preds = %2, %20, %9
  %27 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %1, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  %29 = tail call %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32 %8, i32 %28) #9
  %30 = ptrtoint %"class.media::AudioBus"* %29 to i64
  %31 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %30, i64* %32, align 8
  %33 = icmp eq %"class.media::AudioBus"* %31, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %26
  %35 = bitcast %"class.media::AudioBus"* %31 to void (%"class.media::AudioBus"*)***
  %36 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %36, i64 1
  %38 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %37, align 8
  tail call void %38(%"class.media::AudioBus"* nonnull %31) #9
  %39 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  br label %40

40:                                               ; preds = %26, %34, %20
  %41 = phi %"class.media::AudioBus"* [ %29, %26 ], [ %39, %34 ], [ %5, %20 ]
  %42 = getelementptr inbounds %"class.media::AudioBuffer", %"class.media::AudioBuffer"* %1, i64 0, i32 6
  %43 = load i32, i32* %42, align 4
  tail call void @_ZNK5media11AudioBuffer10ReadFramesEiiiPNS_8AudioBusE(%"class.media::AudioBuffer"* %1, i32 %43, i32 0, i32 0, %"class.media::AudioBus"* %41) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16Converter37ConvertAudioBusToAudioDataS16InternalERKNS_8AudioBusEiNS_13ChannelLayoutEb(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.media::AudioDataS16Converter"* nocapture, %"class.media::AudioBus"* dereferenceable(80), i32, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %7 = tail call i8* @_Znwm(i64 40) #10, !noalias !5
  %8 = bitcast i8* %7 to %"class.media::mojom::AudioDataS16"*
  tail call void @_ZN5media5mojom12AudioDataS16C1Ev(%"class.media::mojom::AudioDataS16"* nonnull %8) #9, !noalias !5
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %9, i64* %10, align 8, !alias.scope !5
  %11 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 5
  %12 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 5, i32 0, i32 1
  %13 = bitcast float*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 3
  %19 = trunc i64 %18 to i32
  %20 = bitcast i8* %7 to i32*
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds i8, i8* %7, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %7, i64 4
  %26 = bitcast i8* %25 to i32*
  store i32 %3, i32* %26, align 4
  %27 = load i64, i64* %13, align 8
  %28 = load i64, i64* %15, align 8
  %29 = sub i64 %27, %28
  %30 = lshr exact i64 %29, 3
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 2
  %33 = or i1 %32, %5
  br i1 %33, label %166, label %34

34:                                               ; preds = %6
  store i32 1, i32* %20, align 8
  %35 = load i32, i32* %21, align 8
  tail call void @_ZN5media21AudioDataS16Converter25ResetChannelMixerIfNeededEiNS_13ChannelLayoutE(%"class.media::AudioDataS16Converter"* %1, i32 %35, i32 %4)
  %36 = getelementptr inbounds i8, i8* %7, i64 16
  %37 = load i32, i32* %21, align 8
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %7, i64 24
  %40 = bitcast i8* %39 to i16**
  %41 = bitcast i8* %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast i8* %36 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 1
  %47 = icmp ult i64 %46, %38
  %48 = inttoptr i64 %44 to i16*
  br i1 %47, label %49, label %52

49:                                               ; preds = %34
  %50 = bitcast i8* %36 to %"class.std::__1::vector.50"*
  %51 = sub nsw i64 %38, %46
  tail call void @_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm(%"class.std::__1::vector.50"* %50, i64 %51) #9
  br label %56

52:                                               ; preds = %34
  %53 = icmp ugt i64 %46, %38
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = getelementptr inbounds i16, i16* %48, i64 %38
  store i16* %55, i16** %40, align 8
  br label %56

56:                                               ; preds = %49, %52, %54
  %57 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.media::ChannelMixer"*, %"class.media::ChannelMixer"** %57, align 8
  %59 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %59, align 8
  tail call void @_ZN5media12ChannelMixer9TransformEPKNS_8AudioBusEPS1_(%"class.media::ChannelMixer"* %58, %"class.media::AudioBus"* %2, %"class.media::AudioBus"* %60) #9
  %61 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %59, align 8
  %62 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %61, i64 0, i32 6
  %63 = load i32, i32* %62, align 8
  %64 = bitcast i8* %36 to i16**
  %65 = load i16*, i16** %64, align 8
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %63, i32 %63) #9
  %66 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %61, i64 0, i32 5
  %67 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %61, i64 0, i32 5, i32 0, i32 1
  %68 = bitcast float*** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = lshr exact i64 %72, 3
  %74 = trunc i64 %73 to i32
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %76, label %289

76:                                               ; preds = %56
  %77 = inttoptr i64 %71 to float**
  %78 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %61, i64 0, i32 5, i32 0, i32 0
  %79 = icmp sgt i32 %63, 0
  %80 = shl i64 %72, 29
  %81 = ashr exact i64 %80, 32
  %82 = sext i32 %63 to i64
  %83 = and i64 %73, 4294967295
  %84 = icmp ugt i32 %63, 3
  %85 = icmp eq i64 %80, 4294967296
  %86 = and i1 %84, %85
  %87 = and i64 %82, -4
  %88 = mul nsw i64 %87, %81
  %89 = icmp eq i64 %87, %82
  br label %90

90:                                               ; preds = %140, %76
  %91 = phi float** [ %77, %76 ], [ %141, %140 ]
  %92 = phi i64 [ 0, %76 ], [ %138, %140 ]
  %93 = getelementptr i16, i16* %65, i64 %92
  %94 = add i64 %92, %82
  %95 = getelementptr i16, i16* %65, i64 %94
  %96 = getelementptr inbounds float*, float** %91, i64 %92
  %97 = load float*, float** %96, align 8
  br i1 %79, label %98, label %137

98:                                               ; preds = %90
  br i1 %86, label %99, label %106

99:                                               ; preds = %98
  %100 = getelementptr float, float* %97, i64 %82
  %101 = bitcast float* %100 to i16*
  %102 = icmp ult i16* %93, %101
  %103 = bitcast i16* %95 to float*
  %104 = icmp ult float* %97, %103
  %105 = and i1 %102, %104
  br i1 %105, label %106, label %109

106:                                              ; preds = %98, %136, %99
  %107 = phi i64 [ 0, %99 ], [ 0, %98 ], [ %87, %136 ]
  %108 = phi i64 [ %92, %99 ], [ %92, %98 ], [ %110, %136 ]
  br label %142

109:                                              ; preds = %99
  %110 = add i64 %92, %88
  br label %111

111:                                              ; preds = %111, %109
  %112 = phi i64 [ 0, %109 ], [ %134, %111 ]
  %113 = mul i64 %112, %81
  %114 = add i64 %92, %113
  %115 = getelementptr inbounds float, float* %97, i64 %112
  %116 = bitcast float* %115 to <4 x float>*
  %117 = load <4 x float>, <4 x float>* %116, align 4, !alias.scope !8
  %118 = fcmp olt <4 x float> %117, zeroinitializer
  %119 = fcmp ult <4 x float> %117, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %120 = fcmp ole <4 x float> %117, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %121 = xor <4 x i1> %118, <i1 true, i1 true, i1 true, i1 true>
  %122 = and <4 x i1> %119, %121
  %123 = and <4 x i1> %120, %118
  %124 = xor <4 x i1> %119, <i1 true, i1 true, i1 true, i1 true>
  %125 = and <4 x i1> %124, %121
  %126 = select <4 x i1> %122, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> <float 3.276800e+04, float 3.276800e+04, float 3.276800e+04, float 3.276800e+04>
  %127 = fmul <4 x float> %117, %126
  %128 = fadd <4 x float> %127, zeroinitializer
  %129 = fptosi <4 x float> %128 to <4 x i16>
  %130 = select <4 x i1> %123, <4 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768>, <4 x i16> %129
  %131 = select <4 x i1> %125, <4 x i16> <i16 32767, i16 32767, i16 32767, i16 32767>, <4 x i16> %130
  %132 = getelementptr inbounds i16, i16* %65, i64 %114
  %133 = bitcast i16* %132 to <4 x i16>*
  store <4 x i16> %131, <4 x i16>* %133, align 2, !alias.scope !11, !noalias !8
  %134 = add i64 %112, 4
  %135 = icmp eq i64 %134, %87
  br i1 %135, label %136, label %111, !llvm.loop !13

136:                                              ; preds = %111
  br i1 %89, label %137, label %106

137:                                              ; preds = %160, %136, %90
  %138 = add nuw nsw i64 %92, 1
  %139 = icmp eq i64 %138, %83
  br i1 %139, label %289, label %140

140:                                              ; preds = %137
  %141 = load float**, float*** %78, align 8
  br label %90

142:                                              ; preds = %106, %160
  %143 = phi i64 [ %163, %160 ], [ %107, %106 ]
  %144 = phi i64 [ %164, %160 ], [ %108, %106 ]
  %145 = getelementptr inbounds float, float* %97, i64 %143
  %146 = load float, float* %145, align 4
  %147 = fcmp olt float %146, 0.000000e+00
  br i1 %147, label %148, label %154

148:                                              ; preds = %142
  %149 = fcmp ugt float %146, -1.000000e+00
  br i1 %149, label %150, label %160

150:                                              ; preds = %148
  %151 = fmul float %146, 3.276800e+04
  %152 = fadd float %151, 0.000000e+00
  %153 = fptosi float %152 to i16
  br label %160

154:                                              ; preds = %142
  %155 = fcmp ult float %146, 1.000000e+00
  br i1 %155, label %156, label %160

156:                                              ; preds = %154
  %157 = fmul float %146, 3.276700e+04
  %158 = fadd float %157, 0.000000e+00
  %159 = fptosi float %158 to i16
  br label %160

160:                                              ; preds = %156, %154, %150, %148
  %161 = phi i16 [ %153, %150 ], [ %159, %156 ], [ -32768, %148 ], [ 32767, %154 ]
  %162 = getelementptr inbounds i16, i16* %65, i64 %144
  store i16 %161, i16* %162, align 2
  %163 = add nuw nsw i64 %143, 1
  %164 = add i64 %144, %81
  %165 = icmp eq i64 %163, %82
  br i1 %165, label %137, label %142, !llvm.loop !15

166:                                              ; preds = %6
  %167 = getelementptr inbounds i8, i8* %7, i64 16
  %168 = load i32, i32* %21, align 8
  %169 = mul nsw i32 %168, %31
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %7, i64 24
  %172 = bitcast i8* %171 to i16**
  %173 = bitcast i8* %171 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast i8* %167 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 1
  %179 = icmp ult i64 %178, %170
  %180 = inttoptr i64 %176 to i16*
  br i1 %179, label %181, label %186

181:                                              ; preds = %166
  %182 = bitcast i8* %167 to %"class.std::__1::vector.50"*
  %183 = sub nsw i64 %170, %178
  tail call void @_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm(%"class.std::__1::vector.50"* %182, i64 %183) #9
  %184 = bitcast i8* %167 to i16**
  %185 = load i16*, i16** %184, align 8
  br label %190

186:                                              ; preds = %166
  %187 = icmp ugt i64 %178, %170
  br i1 %187, label %188, label %190

188:                                              ; preds = %186
  %189 = getelementptr inbounds i16, i16* %180, i64 %170
  store i16* %189, i16** %172, align 8
  br label %190

190:                                              ; preds = %181, %186, %188
  %191 = phi i16* [ %185, %181 ], [ %180, %186 ], [ %180, %188 ]
  %192 = load i32, i32* %21, align 8
  tail call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %192, i32 %192) #9
  %193 = load i64, i64* %13, align 8
  %194 = load i64, i64* %15, align 8
  %195 = sub i64 %193, %194
  %196 = lshr exact i64 %195, 3
  %197 = trunc i64 %196 to i32
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %199, label %289

199:                                              ; preds = %190
  %200 = inttoptr i64 %194 to float**
  %201 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 5, i32 0, i32 0
  %202 = icmp sgt i32 %192, 0
  %203 = shl i64 %195, 29
  %204 = ashr exact i64 %203, 32
  %205 = sext i32 %192 to i64
  %206 = and i64 %196, 4294967295
  %207 = icmp ugt i32 %192, 3
  %208 = icmp eq i64 %203, 4294967296
  %209 = and i1 %207, %208
  %210 = and i64 %205, -4
  %211 = mul nsw i64 %210, %204
  %212 = icmp eq i64 %210, %205
  br label %213

213:                                              ; preds = %263, %199
  %214 = phi float** [ %200, %199 ], [ %264, %263 ]
  %215 = phi i64 [ 0, %199 ], [ %261, %263 ]
  %216 = getelementptr i16, i16* %191, i64 %215
  %217 = add i64 %215, %205
  %218 = getelementptr i16, i16* %191, i64 %217
  %219 = getelementptr inbounds float*, float** %214, i64 %215
  %220 = load float*, float** %219, align 8
  br i1 %202, label %221, label %260

221:                                              ; preds = %213
  br i1 %209, label %222, label %229

222:                                              ; preds = %221
  %223 = getelementptr float, float* %220, i64 %205
  %224 = bitcast float* %223 to i16*
  %225 = icmp ult i16* %216, %224
  %226 = bitcast i16* %218 to float*
  %227 = icmp ult float* %220, %226
  %228 = and i1 %225, %227
  br i1 %228, label %229, label %232

229:                                              ; preds = %221, %259, %222
  %230 = phi i64 [ 0, %222 ], [ 0, %221 ], [ %210, %259 ]
  %231 = phi i64 [ %215, %222 ], [ %215, %221 ], [ %233, %259 ]
  br label %265

232:                                              ; preds = %222
  %233 = add i64 %215, %211
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %257, %234 ]
  %236 = mul i64 %235, %204
  %237 = add i64 %215, %236
  %238 = getelementptr inbounds float, float* %220, i64 %235
  %239 = bitcast float* %238 to <4 x float>*
  %240 = load <4 x float>, <4 x float>* %239, align 4, !alias.scope !16
  %241 = fcmp olt <4 x float> %240, zeroinitializer
  %242 = fcmp ult <4 x float> %240, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %243 = fcmp ole <4 x float> %240, <float -1.000000e+00, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  %244 = xor <4 x i1> %241, <i1 true, i1 true, i1 true, i1 true>
  %245 = and <4 x i1> %242, %244
  %246 = and <4 x i1> %243, %241
  %247 = xor <4 x i1> %242, <i1 true, i1 true, i1 true, i1 true>
  %248 = and <4 x i1> %247, %244
  %249 = select <4 x i1> %245, <4 x float> <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>, <4 x float> <float 3.276800e+04, float 3.276800e+04, float 3.276800e+04, float 3.276800e+04>
  %250 = fmul <4 x float> %240, %249
  %251 = fadd <4 x float> %250, zeroinitializer
  %252 = fptosi <4 x float> %251 to <4 x i16>
  %253 = select <4 x i1> %246, <4 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768>, <4 x i16> %252
  %254 = select <4 x i1> %248, <4 x i16> <i16 32767, i16 32767, i16 32767, i16 32767>, <4 x i16> %253
  %255 = getelementptr inbounds i16, i16* %191, i64 %237
  %256 = bitcast i16* %255 to <4 x i16>*
  store <4 x i16> %254, <4 x i16>* %256, align 2, !alias.scope !19, !noalias !16
  %257 = add i64 %235, 4
  %258 = icmp eq i64 %257, %210
  br i1 %258, label %259, label %234, !llvm.loop !21

259:                                              ; preds = %234
  br i1 %212, label %260, label %229

260:                                              ; preds = %283, %259, %213
  %261 = add nuw nsw i64 %215, 1
  %262 = icmp eq i64 %261, %206
  br i1 %262, label %289, label %263

263:                                              ; preds = %260
  %264 = load float**, float*** %201, align 8
  br label %213

265:                                              ; preds = %229, %283
  %266 = phi i64 [ %286, %283 ], [ %230, %229 ]
  %267 = phi i64 [ %287, %283 ], [ %231, %229 ]
  %268 = getelementptr inbounds float, float* %220, i64 %266
  %269 = load float, float* %268, align 4
  %270 = fcmp olt float %269, 0.000000e+00
  br i1 %270, label %271, label %277

271:                                              ; preds = %265
  %272 = fcmp ugt float %269, -1.000000e+00
  br i1 %272, label %273, label %283

273:                                              ; preds = %271
  %274 = fmul float %269, 3.276800e+04
  %275 = fadd float %274, 0.000000e+00
  %276 = fptosi float %275 to i16
  br label %283

277:                                              ; preds = %265
  %278 = fcmp ult float %269, 1.000000e+00
  br i1 %278, label %279, label %283

279:                                              ; preds = %277
  %280 = fmul float %269, 3.276700e+04
  %281 = fadd float %280, 0.000000e+00
  %282 = fptosi float %281 to i16
  br label %283

283:                                              ; preds = %279, %277, %273, %271
  %284 = phi i16 [ %276, %273 ], [ %282, %279 ], [ -32768, %271 ], [ 32767, %277 ]
  %285 = getelementptr inbounds i16, i16* %191, i64 %267
  store i16 %284, i16* %285, align 2
  %286 = add nuw nsw i64 %266, 1
  %287 = add i64 %267, %204
  %288 = icmp eq i64 %286, %205
  br i1 %288, label %260, label %265, !llvm.loop !22

289:                                              ; preds = %137, %260, %190, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16Converter21ConvertToAudioDataS16ENSt3__110unique_ptrINS_8AudioBusENS1_14default_deleteIS3_EEEEiNS_13ChannelLayoutEb(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.media::AudioDataS16Converter"* nocapture, %"class.media::AudioBus"*, i32, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  tail call void @_ZN5media21AudioDataS16Converter37ConvertAudioBusToAudioDataS16InternalERKNS_8AudioBusEiNS_13ChannelLayoutEb(%"class.mojo::StructPtr"* sret %0, %"class.media::AudioDataS16Converter"* %1, %"class.media::AudioBus"* dereferenceable(80) %2, i32 %3, i32 %4, i1 zeroext %5)
  %7 = icmp eq %"class.media::AudioBus"* %2, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %6
  %9 = bitcast %"class.media::AudioBus"* %2 to void (%"class.media::AudioBus"*)***
  %10 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %10, i64 1
  %12 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %11, align 8
  tail call void %12(%"class.media::AudioBus"* nonnull %2) #9
  br label %13

13:                                               ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21AudioDataS16Converter25ResetChannelMixerIfNeededEiNS_13ChannelLayoutE(%"class.media::AudioDataS16Converter"* nocapture, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %5, align 8
  %7 = icmp eq %"class.media::AudioBus"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %6, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %23, label %12

12:                                               ; preds = %3, %8
  %13 = tail call %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32 1, i32 %1) #9
  %14 = ptrtoint %"class.media::AudioBus"* %13 to i64
  %15 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %5, align 8
  %16 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %"class.media::AudioBus"* %15, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.media::AudioBus"* %15 to void (%"class.media::AudioBus"*)***
  %20 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %20, i64 1
  %22 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %21, align 8
  tail call void %22(%"class.media::AudioBus"* nonnull %15) #9
  br label %23

23:                                               ; preds = %12, %18, %8
  %24 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, %2
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  store i32 %2, i32* %24, align 8
  %28 = tail call i8* @_Znwm(i64 32) #10
  %29 = bitcast i8* %28 to %"class.media::ChannelMixer"*
  tail call void @_ZN5media12ChannelMixerC1ENS_13ChannelLayoutES1_(%"class.media::ChannelMixer"* nonnull %29, i32 %2, i32 2) #9
  %30 = ptrtoint i8* %28 to i64
  %31 = getelementptr inbounds %"class.media::AudioDataS16Converter", %"class.media::AudioDataS16Converter"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.media::ChannelMixer"*, %"class.media::ChannelMixer"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.9"* %31 to i64*
  store i64 %30, i64* %34, align 8
  %35 = icmp eq %"class.media::ChannelMixer"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  tail call void @_ZN5media12ChannelMixerD1Ev(%"class.media::ChannelMixer"* nonnull %33) #9
  %37 = bitcast %"class.media::ChannelMixer"* %33 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %27, %36, %23
  ret void
}

declare void @_ZN5media12ChannelMixer9TransformEPKNS_8AudioBusEPS1_(%"class.media::ChannelMixer"*, %"class.media::AudioBus"*, %"class.media::AudioBus"*) local_unnamed_addr #3

declare %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32, i32) local_unnamed_addr #3

declare void @_ZNK5media11AudioBuffer10ReadFramesEiiiPNS_8AudioBusE(%"class.media::AudioBuffer"*, i32, i32, i32, %"class.media::AudioBus"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5media12ChannelMixerD1Ev(%"class.media::ChannelMixer"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5media5mojom12AudioDataS16C1Ev(%"class.media::mojom::AudioDataS16"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm(%"class.std::__1::vector.50"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i16*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i16, i16* %13, i64 %18
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 2
  %25 = and i64 %24, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint i16* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %81

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.50"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 1
  %34 = add i64 %33, %1
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.50"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 1
  %41 = icmp ult i64 %40, 4611686018427387903
  %42 = icmp ult i64 %39, %34
  %43 = select i1 %42, i64 %34, i64 %39
  %44 = select i1 %41, i64 %43, i64 9223372036854775807
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

49:                                               ; preds = %46
  %50 = shl i64 %44, 1
  %51 = tail call i8* @_Znwm(i64 %50) #10
  %52 = bitcast i8* %51 to i16*
  br label %53

53:                                               ; preds = %49, %38
  %54 = phi i16* [ %52, %49 ], [ null, %38 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %33
  %56 = getelementptr inbounds i16, i16* %54, i64 %44
  %57 = getelementptr inbounds i16, i16* %55, i64 %1
  %58 = bitcast i16* %55 to i8*
  %59 = shl i64 %1, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %58, i8 0, i64 %59, i1 false) #9
  %60 = ptrtoint i16* %56 to i64
  %61 = ptrtoint i16* %57 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %0, i64 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = load i64, i64* %7, align 8
  %65 = ptrtoint i16* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 1
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i16, i16* %55, i64 %68
  %70 = ptrtoint i16* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast i16* %69 to i8*
  %74 = bitcast i16* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 %66, i1 false) #9
  %75 = load i16*, i16** %62, align 8
  br label %76

76:                                               ; preds = %53, %72
  %77 = phi i16* [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %30, align 8
  store i64 %61, i64* %7, align 8
  store i64 %60, i64* %4, align 8
  %78 = icmp eq i16* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i16* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %79, %76, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN5media8AudioBus13CheckOverflowEiii(i32, i32, i32) local_unnamed_addr #3

declare void @_ZN5media12ChannelMixerC1ENS_13ChannelLayoutES1_(%"class.media::ChannelMixer"*, i32, i32) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5media5mojom12AudioDataS163NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN5media5mojom12AudioDataS163NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5media5mojom12AudioDataS163NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5media5mojom12AudioDataS163NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !14}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !14}
!22 = distinct !{!22, !14}
