; ModuleID = '../../ppapi/utility/graphics/paint_aggregator.cc'
source_filename = "../../ppapi/utility/graphics/paint_aggregator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.pp::PaintAggregator::PaintUpdate" = type { i8, %"class.pp::Point", %"class.pp::Rect", %"class.std::__1::vector", %"class.pp::Rect" }
%"class.pp::Point" = type { %struct.PP_Point }
%struct.PP_Point = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.pp::Rect"*, %"class.pp::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.pp::Rect"* }
%"class.pp::Rect" = type { %struct.PP_Rect }
%struct.PP_Rect = type { %struct.PP_Point, %struct.PP_Size }
%struct.PP_Size = type { i32, i32 }
%"class.pp::PaintAggregator::InternalPaintUpdate" = type { %"class.pp::Point", %"class.pp::Rect", %"class.std::__1::vector" }
%"class.pp::PaintAggregator" = type { %"class.pp::PaintAggregator::InternalPaintUpdate", float, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2pp4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZN2pp15PaintAggregator11PaintUpdateC1Ev = hidden unnamed_addr alias void (%"struct.pp::PaintAggregator::PaintUpdate"*), void (%"struct.pp::PaintAggregator::PaintUpdate"*)* @_ZN2pp15PaintAggregator11PaintUpdateC2Ev
@_ZN2pp15PaintAggregator11PaintUpdateD1Ev = hidden unnamed_addr alias void (%"struct.pp::PaintAggregator::PaintUpdate"*), void (%"struct.pp::PaintAggregator::PaintUpdate"*)* @_ZN2pp15PaintAggregator11PaintUpdateD2Ev
@_ZN2pp15PaintAggregator19InternalPaintUpdateC1Ev = hidden unnamed_addr alias void (%"class.pp::PaintAggregator::InternalPaintUpdate"*), void (%"class.pp::PaintAggregator::InternalPaintUpdate"*)* @_ZN2pp15PaintAggregator19InternalPaintUpdateC2Ev
@_ZN2pp15PaintAggregator19InternalPaintUpdateD1Ev = hidden unnamed_addr alias void (%"class.pp::PaintAggregator::InternalPaintUpdate"*), void (%"class.pp::PaintAggregator::InternalPaintUpdate"*)* @_ZN2pp15PaintAggregator19InternalPaintUpdateD2Ev
@_ZN2pp15PaintAggregatorC1Ev = hidden unnamed_addr alias void (%"class.pp::PaintAggregator"*), void (%"class.pp::PaintAggregator"*)* @_ZN2pp15PaintAggregatorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator11PaintUpdateC2Ev(%"struct.pp::PaintAggregator::PaintUpdate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 24, i1 false)
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator11PaintUpdateD2Ev(%"struct.pp::PaintAggregator::PaintUpdate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.pp::Rect"*, %"class.pp::Rect"** %2, align 8
  %4 = icmp eq %"class.pp::Rect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.pp::Rect"* %3 to i64
  %7 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.pp::Rect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.pp::Rect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator19InternalPaintUpdateC2Ev(%"class.pp::PaintAggregator::InternalPaintUpdate"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.pp::PaintAggregator::InternalPaintUpdate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator19InternalPaintUpdateD2Ev(%"class.pp::PaintAggregator::InternalPaintUpdate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.pp::Rect"*, %"class.pp::Rect"** %2, align 8
  %4 = icmp eq %"class.pp::Rect"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.pp::Rect"* %3 to i64
  %7 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"class.pp::Rect"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.pp::Rect"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2pp15PaintAggregator19InternalPaintUpdate15GetScrollDamageEv(%"class.pp::Rect"* noalias sret, %"class.pp::PaintAggregator::InternalPaintUpdate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.pp::Rect", align 4
  %4 = bitcast %"class.pp::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %3, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %3, i64 0, i32 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %4, i8 0, i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %6, align 4
  %15 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  store i32 %18, i32* %8, align 4
  %19 = icmp sgt i32 %10, 0
  %20 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %23

22:                                               ; preds = %12
  store i32 %21, i32* %5, align 4
  store i32 %10, i32* %7, align 4
  br label %52

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %21, %10
  %27 = add i32 %26, %25
  store i32 %27, i32* %5, align 4
  %28 = sub nsw i32 0, %10
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  store i32 %30, i32* %7, align 4
  br label %52

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %5, align 4
  %36 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 %37, i32 0
  store i32 %39, i32* %7, align 4
  %40 = icmp sgt i32 %33, 0
  %41 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %44

43:                                               ; preds = %31
  store i32 %42, i32* %6, align 4
  store i32 %33, i32* %8, align 4
  br label %52

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %42, %33
  %48 = add i32 %47, %46
  store i32 %48, i32* %6, align 4
  %49 = sub nsw i32 0, %33
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  store i32 %51, i32* %8, align 4
  br label %52

52:                                               ; preds = %43, %44, %22, %23
  %53 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 1
  call void @_ZNK2pp4Rect9IntersectERKS0_(%"class.pp::Rect"* sret %0, %"class.pp::Rect"* %53, %"class.pp::Rect"* nonnull dereferenceable(16) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK2pp4Rect9IntersectERKS0_(%"class.pp::Rect"* sret, %"class.pp::Rect"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2pp15PaintAggregator19InternalPaintUpdate14GetPaintBoundsEv(%"class.pp::Rect"* noalias sret, %"class.pp::PaintAggregator::InternalPaintUpdate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.pp::Rect", align 4
  %4 = bitcast %"class.pp::Rect"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 16, i1 false) #9
  %5 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"class.pp::PaintAggregator::InternalPaintUpdate", %"class.pp::PaintAggregator::InternalPaintUpdate"* %1, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"class.pp::Rect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.pp::Rect"* %3 to i8*
  br label %14

14:                                               ; preds = %12, %14
  %15 = phi i64 [ %10, %12 ], [ %21, %14 ]
  %16 = phi i64 [ 0, %12 ], [ %19, %14 ]
  %17 = inttoptr i64 %15 to %"class.pp::Rect"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %18 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %17, i64 %16
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %3, %"class.pp::Rect"* %0, %"class.pp::Rect"* dereferenceable(16) %18) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* nonnull align 4 %13, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %19 = add nuw i64 %16, 1
  %20 = load i64, i64* %7, align 8
  %21 = load i64, i64* %9, align 8
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 4
  %24 = icmp ult i64 %19, %23
  br i1 %24, label %14, label %25

25:                                               ; preds = %14, %2
  ret void
}

declare void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* sret, %"class.pp::Rect"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregatorC2Ev(%"class.pp::PaintAggregator"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.pp::PaintAggregator"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 48, i1 false) #9
  %3 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 1
  store float 0x3FE99999A0000000, float* %3, align 8
  %4 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 2
  store i64 10, i64* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2pp15PaintAggregator16HasPendingUpdateEv(%"class.pp::PaintAggregator"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.pp::Rect"*, %"class.pp::Rect"** %10, align 8
  %12 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %13 = load %"class.pp::Rect"*, %"class.pp::Rect"** %12, align 8
  %14 = icmp ne %"class.pp::Rect"* %11, %13
  br label %15

15:                                               ; preds = %9, %5
  %16 = phi i1 [ true, %5 ], [ %14, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator18ClearPendingUpdateEv(%"class.pp::PaintAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.pp::PaintAggregator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  %3 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2
  tail call void @_ZNSt3__16vectorIN2pp4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %3, %"class.pp::Rect"* null, %"class.pp::Rect"* null) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2pp15PaintAggregator16GetPendingUpdateEv(%"struct.pp::PaintAggregator::PaintUpdate"* noalias sret, %"class.pp::PaintAggregator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.pp::Rect", align 4
  %4 = alloca %"class.pp::Rect", align 4
  %5 = alloca %"class.pp::Rect", align 8
  %6 = alloca %"class.pp::Rect", align 4
  %7 = alloca %"class.pp::Rect", align 4
  %8 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 32, i1 false)
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false) #9
  %11 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 1
  %13 = bitcast %"class.pp::PaintAggregator"* %1 to i64*
  %14 = bitcast %"class.pp::Point"* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %1, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 2
  %18 = bitcast %"class.pp::Rect"* %17 to i8*
  %19 = bitcast %"class.pp::Rect"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 16, i1 false)
  %20 = trunc i64 %15 to i32
  %21 = icmp ne i32 %20, 0
  %22 = icmp ugt i64 %15, 4294967295
  %23 = or i1 %22, %21
  %24 = zext i1 %23 to i8
  store i8 %24, i8* %8, align 8
  %25 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %1, i64 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %27 = bitcast %"class.pp::Rect"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 4
  %33 = add nsw i64 %32, 1
  %34 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.pp::Rect"** %34 to i64*
  %36 = bitcast %"class.std::__1::vector"* %9 to i64*
  %37 = icmp eq i64 %33, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %2
  %39 = icmp ugt i64 %33, 1152921504606846975
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #10
  unreachable

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3, i32 0, i32 1
  %43 = bitcast %"class.pp::Rect"** %42 to i64*
  %44 = shl i64 %33, 4
  %45 = tail call i8* @_Znwm(i64 %44) #8
  %46 = bitcast i8* %45 to %"class.pp::Rect"*
  %47 = ptrtoint i8* %45 to i64
  %48 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %46, i64 %33
  %49 = ptrtoint %"class.pp::Rect"* %48 to i64
  store i64 %47, i64* %36, align 8
  store i64 %47, i64* %43, align 8
  store i64 %49, i64* %35, align 8
  br label %50

50:                                               ; preds = %41, %2
  %51 = phi %"class.pp::Rect"* [ null, %2 ], [ %48, %41 ]
  %52 = phi i8* [ null, %2 ], [ %45, %41 ]
  %53 = phi %"class.pp::Rect"* [ null, %2 ], [ %46, %41 ]
  %54 = icmp eq i64 %28, %30
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = bitcast %"class.pp::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %56, i8 0, i64 16, i1 false) #9, !alias.scope !2
  br label %76

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3, i32 0, i32 1
  %59 = bitcast %"class.pp::Rect"** %58 to i64*
  br label %82

60:                                               ; preds = %186
  %61 = bitcast %"class.pp::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %61, i8 0, i64 16, i1 false) #9, !alias.scope !2
  %62 = icmp eq i64 %188, %189
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.pp::Rect"* %3 to i8*
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ %189, %63 ], [ %72, %65 ]
  %67 = phi i64 [ 0, %63 ], [ %70, %65 ]
  %68 = inttoptr i64 %66 to %"class.pp::Rect"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9, !noalias !2
  %69 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %68, i64 %67
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %3, %"class.pp::Rect"* nonnull %4, %"class.pp::Rect"* dereferenceable(16) %69) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 4 %64, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9, !noalias !2
  %70 = add nuw i64 %67, 1
  %71 = load i64, i64* %27, align 8, !noalias !2
  %72 = load i64, i64* %29, align 8, !noalias !2
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = icmp ult i64 %70, %74
  br i1 %75, label %65, label %76

76:                                               ; preds = %65, %55, %60
  %77 = phi i8* [ %56, %55 ], [ %61, %60 ], [ %61, %65 ]
  %78 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 4
  %79 = bitcast %"class.pp::Rect"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 4 %77, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #9
  %80 = load i8, i8* %8, align 8, !range !5
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %330, label %197

82:                                               ; preds = %193, %57
  %83 = phi %"class.pp::Rect"* [ %51, %57 ], [ %196, %193 ]
  %84 = phi i8* [ %52, %57 ], [ %195, %193 ]
  %85 = phi %"class.pp::Rect"* [ %53, %57 ], [ %194, %193 ]
  %86 = phi i64 [ %30, %57 ], [ %189, %193 ]
  %87 = phi i64 [ 0, %57 ], [ %187, %193 ]
  %88 = inttoptr i64 %86 to %"class.pp::Rect"*
  %89 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %88, i64 %87
  %90 = icmp eq %"class.pp::Rect"* %85, %83
  %91 = ptrtoint %"class.pp::Rect"* %83 to i64
  br i1 %90, label %96, label %92

92:                                               ; preds = %82
  %93 = bitcast %"class.pp::Rect"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %93, i64 16, i1 false) #9
  %94 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %85, i64 1
  %95 = ptrtoint %"class.pp::Rect"* %94 to i64
  store i64 %95, i64* %59, align 8
  br label %186

96:                                               ; preds = %82
  %97 = load i64, i64* %36, align 8
  %98 = sub i64 %91, %97
  %99 = ashr exact i64 %98, 4
  %100 = add nsw i64 %99, 1
  %101 = icmp ugt i64 %100, 1152921504606846975
  %102 = inttoptr i64 %97 to %"class.pp::Rect"*
  br i1 %101, label %103, label %105

103:                                              ; preds = %96
  %104 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #10
  unreachable

105:                                              ; preds = %96
  %106 = icmp ult i64 %99, 576460752303423487
  br i1 %106, label %107, label %115

107:                                              ; preds = %105
  %108 = ashr exact i64 %98, 3
  %109 = icmp ult i64 %108, %100
  %110 = select i1 %109, i64 %100, i64 %108
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %120, label %112

112:                                              ; preds = %107
  %113 = icmp ugt i64 %110, 1152921504606846975
  br i1 %113, label %114, label %115

114:                                              ; preds = %112
  tail call void @abort() #10
  unreachable

115:                                              ; preds = %112, %105
  %116 = phi i64 [ %110, %112 ], [ 1152921504606846975, %105 ]
  %117 = shl i64 %116, 4
  %118 = tail call i8* @_Znwm(i64 %117) #8
  %119 = bitcast i8* %118 to %"class.pp::Rect"*
  br label %120

120:                                              ; preds = %115, %107
  %121 = phi i64 [ %116, %115 ], [ 0, %107 ]
  %122 = phi %"class.pp::Rect"* [ %119, %115 ], [ null, %107 ]
  %123 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %122, i64 %99
  %124 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %122, i64 %121
  %125 = ptrtoint %"class.pp::Rect"* %124 to i64
  %126 = bitcast %"class.pp::Rect"* %123 to i8*
  %127 = bitcast %"class.pp::Rect"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 16, i1 false) #9
  %128 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %123, i64 1
  %129 = ptrtoint %"class.pp::Rect"* %128 to i64
  %130 = icmp eq %"class.pp::Rect"* %83, %102
  br i1 %130, label %179, label %131

131:                                              ; preds = %120
  %132 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %83, i64 -1
  %133 = bitcast %"class.pp::Rect"* %132 to i8*
  %134 = sub i64 0, %97
  %135 = getelementptr i8, i8* %133, i64 %134
  %136 = ptrtoint i8* %135 to i64
  %137 = lshr i64 %136, 4
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %131, %141
  %142 = phi %"class.pp::Rect"* [ %145, %141 ], [ %123, %131 ]
  %143 = phi %"class.pp::Rect"* [ %146, %141 ], [ %83, %131 ]
  %144 = phi i64 [ %149, %141 ], [ %139, %131 ]
  %145 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %142, i64 -1
  %146 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %143, i64 -1
  %147 = bitcast %"class.pp::Rect"* %145 to i8*
  %148 = bitcast %"class.pp::Rect"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 16, i1 false) #9
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %141, !llvm.loop !6

151:                                              ; preds = %141, %131
  %152 = phi %"class.pp::Rect"* [ undef, %131 ], [ %145, %141 ]
  %153 = phi %"class.pp::Rect"* [ %123, %131 ], [ %145, %141 ]
  %154 = phi %"class.pp::Rect"* [ %83, %131 ], [ %146, %141 ]
  %155 = icmp ult i8* %135, inttoptr (i64 48 to i8*)
  br i1 %155, label %176, label %156

156:                                              ; preds = %151, %156
  %157 = phi %"class.pp::Rect"* [ %171, %156 ], [ %153, %151 ]
  %158 = phi %"class.pp::Rect"* [ %172, %156 ], [ %154, %151 ]
  %159 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 -1
  %160 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 -1
  %161 = bitcast %"class.pp::Rect"* %159 to i8*
  %162 = bitcast %"class.pp::Rect"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 16, i1 false) #9
  %163 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 -2
  %164 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 -2
  %165 = bitcast %"class.pp::Rect"* %163 to i8*
  %166 = bitcast %"class.pp::Rect"* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 16, i1 false) #9
  %167 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 -3
  %168 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 -3
  %169 = bitcast %"class.pp::Rect"* %167 to i8*
  %170 = bitcast %"class.pp::Rect"* %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %169, i8* align 4 %170, i64 16, i1 false) #9
  %171 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 -4
  %172 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 -4
  %173 = bitcast %"class.pp::Rect"* %171 to i8*
  %174 = bitcast %"class.pp::Rect"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* align 4 %174, i64 16, i1 false) #9
  %175 = icmp eq %"class.pp::Rect"* %172, %102
  br i1 %175, label %176, label %156

176:                                              ; preds = %156, %151
  %177 = phi %"class.pp::Rect"* [ %152, %151 ], [ %171, %156 ]
  %178 = load i64, i64* %36, align 8
  br label %179

179:                                              ; preds = %120, %176
  %180 = phi %"class.pp::Rect"* [ %177, %176 ], [ %123, %120 ]
  %181 = phi i64 [ %178, %176 ], [ %91, %120 ]
  %182 = ptrtoint %"class.pp::Rect"* %180 to i64
  store i64 %182, i64* %36, align 8
  store i64 %129, i64* %59, align 8
  store i64 %125, i64* %35, align 8
  %183 = icmp eq i64 %181, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %179
  %185 = inttoptr i64 %181 to i8*
  tail call void @_ZdlPv(i8* %185) #8
  br label %186

186:                                              ; preds = %92, %179, %184
  %187 = add nuw i64 %87, 1
  %188 = load i64, i64* %27, align 8
  %189 = load i64, i64* %29, align 8
  %190 = sub i64 %188, %189
  %191 = ashr exact i64 %190, 4
  %192 = icmp ult i64 %187, %191
  br i1 %192, label %193, label %60

193:                                              ; preds = %186
  %194 = load %"class.pp::Rect"*, %"class.pp::Rect"** %58, align 8
  %195 = bitcast %"class.pp::Rect"* %194 to i8*
  %196 = load %"class.pp::Rect"*, %"class.pp::Rect"** %34, align 8
  br label %82

197:                                              ; preds = %76
  %198 = bitcast %"class.pp::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #9
  call void @_ZNK2pp15PaintAggregator19InternalPaintUpdate15GetScrollDamageEv(%"class.pp::Rect"* nonnull sret %5, %"class.pp::PaintAggregator::InternalPaintUpdate"* %11)
  %199 = bitcast %"class.pp::Rect"* %5 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %5, i64 0, i32 0, i32 1
  %202 = bitcast %struct.PP_Size* %201 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %200 to i32
  %205 = lshr i64 %200, 32
  %206 = trunc i64 %205 to i32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #9
  %207 = trunc i64 %203 to i32
  %208 = icmp sgt i32 %207, 0
  %209 = select i1 %208, i32 %207, i32 0
  %210 = lshr i64 %203, 32
  %211 = trunc i64 %210 to i32
  %212 = icmp sgt i32 %211, 0
  %213 = select i1 %212, i32 %211, i32 0
  %214 = getelementptr inbounds %"struct.pp::PaintAggregator::PaintUpdate", %"struct.pp::PaintAggregator::PaintUpdate"* %0, i64 0, i32 3, i32 0, i32 1
  %215 = load %"class.pp::Rect"*, %"class.pp::Rect"** %214, align 8
  %216 = load %"class.pp::Rect"*, %"class.pp::Rect"** %34, align 8
  %217 = icmp ult %"class.pp::Rect"* %215, %216
  %218 = ptrtoint %"class.pp::Rect"* %216 to i64
  br i1 %217, label %219, label %227

219:                                              ; preds = %197
  %220 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %215, i64 0, i32 0, i32 0, i32 0
  store i32 %204, i32* %220, align 4
  %221 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %215, i64 0, i32 0, i32 0, i32 1
  store i32 %206, i32* %221, align 4
  %222 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %215, i64 0, i32 0, i32 1, i32 0
  store i32 %209, i32* %222, align 4
  %223 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %215, i64 0, i32 0, i32 1, i32 1
  store i32 %213, i32* %223, align 4
  %224 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %215, i64 1
  %225 = ptrtoint %"class.pp::Rect"* %224 to i64
  %226 = bitcast %"class.pp::Rect"** %214 to i64*
  store i64 %225, i64* %226, align 8
  br label %323

227:                                              ; preds = %197
  %228 = ptrtoint %"class.pp::Rect"* %215 to i64
  %229 = bitcast %"class.pp::Rect"** %214 to i64*
  %230 = load i64, i64* %36, align 8
  %231 = sub i64 %228, %230
  %232 = ashr exact i64 %231, 4
  %233 = add nsw i64 %232, 1
  %234 = icmp ugt i64 %233, 1152921504606846975
  %235 = inttoptr i64 %230 to %"class.pp::Rect"*
  br i1 %234, label %236, label %238

236:                                              ; preds = %227
  %237 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %237) #10
  unreachable

238:                                              ; preds = %227
  %239 = sub i64 %218, %230
  %240 = ashr exact i64 %239, 4
  %241 = icmp ult i64 %240, 576460752303423487
  br i1 %241, label %242, label %250

242:                                              ; preds = %238
  %243 = ashr exact i64 %239, 3
  %244 = icmp ult i64 %243, %233
  %245 = select i1 %244, i64 %233, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242
  %248 = icmp ugt i64 %245, 1152921504606846975
  br i1 %248, label %249, label %250

249:                                              ; preds = %247
  call void @abort() #10
  unreachable

250:                                              ; preds = %247, %238
  %251 = phi i64 [ %245, %247 ], [ 1152921504606846975, %238 ]
  %252 = shl i64 %251, 4
  %253 = call i8* @_Znwm(i64 %252) #8
  %254 = bitcast i8* %253 to %"class.pp::Rect"*
  br label %255

255:                                              ; preds = %250, %242
  %256 = phi i64 [ %251, %250 ], [ 0, %242 ]
  %257 = phi %"class.pp::Rect"* [ %254, %250 ], [ null, %242 ]
  %258 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %257, i64 %232
  %259 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %257, i64 %256
  %260 = ptrtoint %"class.pp::Rect"* %259 to i64
  %261 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %258, i64 0, i32 0, i32 0, i32 0
  store i32 %204, i32* %261, align 4
  %262 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %257, i64 %232, i32 0, i32 0, i32 1
  store i32 %206, i32* %262, align 4
  %263 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %257, i64 %232, i32 0, i32 1, i32 0
  store i32 %209, i32* %263, align 4
  %264 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %257, i64 %232, i32 0, i32 1, i32 1
  store i32 %213, i32* %264, align 4
  %265 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %258, i64 1
  %266 = ptrtoint %"class.pp::Rect"* %265 to i64
  %267 = icmp eq %"class.pp::Rect"* %215, %235
  br i1 %267, label %316, label %268

268:                                              ; preds = %255
  %269 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %215, i64 -1, i32 0, i32 0, i32 0
  %270 = bitcast i32* %269 to i8*
  %271 = sub i64 0, %230
  %272 = getelementptr i8, i8* %270, i64 %271
  %273 = ptrtoint i8* %272 to i64
  %274 = lshr i64 %273, 4
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 3
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %288, label %278

278:                                              ; preds = %268, %278
  %279 = phi %"class.pp::Rect"* [ %282, %278 ], [ %258, %268 ]
  %280 = phi %"class.pp::Rect"* [ %283, %278 ], [ %215, %268 ]
  %281 = phi i64 [ %286, %278 ], [ %276, %268 ]
  %282 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %279, i64 -1
  %283 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %280, i64 -1
  %284 = bitcast %"class.pp::Rect"* %282 to i8*
  %285 = bitcast %"class.pp::Rect"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 16, i1 false) #9
  %286 = add i64 %281, -1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %278, !llvm.loop !8

288:                                              ; preds = %278, %268
  %289 = phi %"class.pp::Rect"* [ undef, %268 ], [ %282, %278 ]
  %290 = phi %"class.pp::Rect"* [ %258, %268 ], [ %282, %278 ]
  %291 = phi %"class.pp::Rect"* [ %215, %268 ], [ %283, %278 ]
  %292 = icmp ult i8* %272, inttoptr (i64 48 to i8*)
  br i1 %292, label %313, label %293

293:                                              ; preds = %288, %293
  %294 = phi %"class.pp::Rect"* [ %308, %293 ], [ %290, %288 ]
  %295 = phi %"class.pp::Rect"* [ %309, %293 ], [ %291, %288 ]
  %296 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %294, i64 -1
  %297 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %295, i64 -1
  %298 = bitcast %"class.pp::Rect"* %296 to i8*
  %299 = bitcast %"class.pp::Rect"* %297 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %298, i8* align 4 %299, i64 16, i1 false) #9
  %300 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %294, i64 -2
  %301 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %295, i64 -2
  %302 = bitcast %"class.pp::Rect"* %300 to i8*
  %303 = bitcast %"class.pp::Rect"* %301 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 16, i1 false) #9
  %304 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %294, i64 -3
  %305 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %295, i64 -3
  %306 = bitcast %"class.pp::Rect"* %304 to i8*
  %307 = bitcast %"class.pp::Rect"* %305 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %306, i8* align 4 %307, i64 16, i1 false) #9
  %308 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %294, i64 -4
  %309 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %295, i64 -4
  %310 = bitcast %"class.pp::Rect"* %308 to i8*
  %311 = bitcast %"class.pp::Rect"* %309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %310, i8* align 4 %311, i64 16, i1 false) #9
  %312 = icmp eq %"class.pp::Rect"* %309, %235
  br i1 %312, label %313, label %293

313:                                              ; preds = %293, %288
  %314 = phi %"class.pp::Rect"* [ %289, %288 ], [ %308, %293 ]
  %315 = load i64, i64* %36, align 8
  br label %316

316:                                              ; preds = %255, %313
  %317 = phi %"class.pp::Rect"* [ %314, %313 ], [ %258, %255 ]
  %318 = phi i64 [ %315, %313 ], [ %228, %255 ]
  %319 = ptrtoint %"class.pp::Rect"* %317 to i64
  store i64 %319, i64* %36, align 8
  store i64 %266, i64* %229, align 8
  store i64 %260, i64* %35, align 8
  %320 = icmp eq i64 %318, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %316
  %322 = inttoptr i64 %318 to i8*
  call void @_ZdlPv(i8* %322) #8
  br label %323

323:                                              ; preds = %219, %316, %321
  %324 = bitcast %"class.pp::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #9
  %325 = bitcast %"class.pp::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %325) #9
  %326 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %7, i64 0, i32 0, i32 0, i32 0
  store i32 %204, i32* %326, align 4
  %327 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %7, i64 0, i32 0, i32 0, i32 1
  store i32 %206, i32* %327, align 4
  %328 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %7, i64 0, i32 0, i32 1, i32 0
  store i32 %209, i32* %328, align 4
  %329 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %7, i64 0, i32 0, i32 1, i32 1
  store i32 %213, i32* %329, align 4
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %6, %"class.pp::Rect"* %78, %"class.pp::Rect"* nonnull dereferenceable(16) %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 4 %324, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #9
  br label %330

330:                                              ; preds = %323, %76
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.pp::Rect", align 4
  %4 = alloca %"class.pp::Rect", align 4
  %5 = alloca %"class.pp::Rect", align 4
  %6 = alloca %"class.pp::Rect", align 4
  %7 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %10 = bitcast %"class.pp::Rect"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %50, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %15, %43
  %18 = phi i64 [ %13, %15 ], [ %46, %43 ]
  %19 = phi i64 [ 0, %15 ], [ %44, %43 ]
  %20 = inttoptr i64 %18 to %"class.pp::Rect"*
  %21 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %20, i64 %19
  %22 = tail call zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"* %21, %"class.pp::Rect"* dereferenceable(16) %1) #9
  br i1 %22, label %196, label %23

23:                                               ; preds = %17
  %24 = tail call zeroext i1 @_ZNK2pp4Rect10IntersectsERKS0_(%"class.pp::Rect"* %1, %"class.pp::Rect"* dereferenceable(16) %21) #9
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = tail call zeroext i1 @_ZNK2pp4Rect14SharesEdgeWithERKS0_(%"class.pp::Rect"* %1, %"class.pp::Rect"* dereferenceable(16) %21) #9
  br i1 %26, label %27, label %43

27:                                               ; preds = %25, %23
  %28 = bitcast %"class.pp::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #9
  %29 = bitcast %"class.pp::Rect"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -86, i64 16, i1 false)
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %4, %"class.pp::Rect"* %21, %"class.pp::Rect"* dereferenceable(16) %1) #9
  %30 = load %"class.pp::Rect"*, %"class.pp::Rect"** %16, align 8
  %31 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %30, i64 %19
  %32 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %31, i64 1
  %33 = load i64, i64* %10, align 8
  %34 = ptrtoint %"class.pp::Rect"* %32 to i64
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 4
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.pp::Rect"* %31 to i8*
  %40 = bitcast %"class.pp::Rect"* %32 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %40, i64 %35, i1 false) #9
  br label %41

41:                                               ; preds = %27, %38
  %42 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %31, i64 %36
  store %"class.pp::Rect"* %42, %"class.pp::Rect"** %9, align 8
  call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* nonnull dereferenceable(16) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #9
  br label %196

43:                                               ; preds = %25
  %44 = add nuw i64 %19, 1
  %45 = load i64, i64* %10, align 8
  %46 = load i64, i64* %12, align 8
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 4
  %49 = icmp ult i64 %44, %48
  br i1 %49, label %17, label %50

50:                                               ; preds = %43, %2
  %51 = phi i64 [ %11, %2 ], [ %46, %43 ]
  %52 = phi i64 [ %11, %2 ], [ %45, %43 ]
  %53 = inttoptr i64 %52 to %"class.pp::Rect"*
  %54 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %55 = load %"class.pp::Rect"*, %"class.pp::Rect"** %54, align 8
  %56 = icmp eq %"class.pp::Rect"* %55, %53
  br i1 %56, label %62, label %57

57:                                               ; preds = %50
  %58 = inttoptr i64 %52 to i8*
  %59 = bitcast %"class.pp::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %59, i64 16, i1 false) #9
  %60 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %53, i64 1
  %61 = ptrtoint %"class.pp::Rect"* %60 to i64
  store i64 %61, i64* %10, align 8
  br label %154

62:                                               ; preds = %50
  %63 = ptrtoint %"class.pp::Rect"* %55 to i64
  %64 = sub i64 %63, %51
  %65 = ashr exact i64 %64, 4
  %66 = add nsw i64 %65, 1
  %67 = icmp ugt i64 %66, 1152921504606846975
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #10
  unreachable

70:                                               ; preds = %62
  %71 = bitcast %"class.pp::Rect"** %54 to i64*
  %72 = icmp ult i64 %65, 576460752303423487
  br i1 %72, label %73, label %81

73:                                               ; preds = %70
  %74 = ashr exact i64 %64, 3
  %75 = icmp ult i64 %74, %66
  %76 = select i1 %75, i64 %66, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = icmp ugt i64 %76, 1152921504606846975
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  tail call void @abort() #10
  unreachable

81:                                               ; preds = %78, %70
  %82 = phi i64 [ %76, %78 ], [ 1152921504606846975, %70 ]
  %83 = shl i64 %82, 4
  %84 = tail call i8* @_Znwm(i64 %83) #8
  %85 = bitcast i8* %84 to %"class.pp::Rect"*
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64 [ %82, %81 ], [ 0, %73 ]
  %88 = phi %"class.pp::Rect"* [ %85, %81 ], [ null, %73 ]
  %89 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %88, i64 %65
  %90 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %88, i64 %87
  %91 = ptrtoint %"class.pp::Rect"* %90 to i64
  %92 = bitcast %"class.pp::Rect"* %89 to i8*
  %93 = bitcast %"class.pp::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 16, i1 false) #9
  %94 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %89, i64 1
  %95 = ptrtoint %"class.pp::Rect"* %94 to i64
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %97 = load %"class.pp::Rect"*, %"class.pp::Rect"** %96, align 8
  %98 = ptrtoint %"class.pp::Rect"* %97 to i64
  %99 = load %"class.pp::Rect"*, %"class.pp::Rect"** %9, align 8
  %100 = icmp eq %"class.pp::Rect"* %99, %97
  br i1 %100, label %147, label %101

101:                                              ; preds = %86
  %102 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %99, i64 -1, i32 0, i32 0, i32 0
  %103 = ptrtoint i32* %102 to i64
  %104 = sub i64 %103, %98
  %105 = lshr i64 %104, 4
  %106 = add nuw nsw i64 %105, 1
  %107 = and i64 %106, 3
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %119, label %109

109:                                              ; preds = %101, %109
  %110 = phi %"class.pp::Rect"* [ %113, %109 ], [ %89, %101 ]
  %111 = phi %"class.pp::Rect"* [ %114, %109 ], [ %99, %101 ]
  %112 = phi i64 [ %117, %109 ], [ %107, %101 ]
  %113 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %110, i64 -1
  %114 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %111, i64 -1
  %115 = bitcast %"class.pp::Rect"* %113 to i8*
  %116 = bitcast %"class.pp::Rect"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %116, i64 16, i1 false) #9
  %117 = add i64 %112, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %109, !llvm.loop !9

119:                                              ; preds = %109, %101
  %120 = phi %"class.pp::Rect"* [ undef, %101 ], [ %113, %109 ]
  %121 = phi %"class.pp::Rect"* [ %89, %101 ], [ %113, %109 ]
  %122 = phi %"class.pp::Rect"* [ %99, %101 ], [ %114, %109 ]
  %123 = icmp ult i64 %104, 48
  br i1 %123, label %144, label %124

124:                                              ; preds = %119, %124
  %125 = phi %"class.pp::Rect"* [ %139, %124 ], [ %121, %119 ]
  %126 = phi %"class.pp::Rect"* [ %140, %124 ], [ %122, %119 ]
  %127 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %125, i64 -1
  %128 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %126, i64 -1
  %129 = bitcast %"class.pp::Rect"* %127 to i8*
  %130 = bitcast %"class.pp::Rect"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 16, i1 false) #9
  %131 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %125, i64 -2
  %132 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %126, i64 -2
  %133 = bitcast %"class.pp::Rect"* %131 to i8*
  %134 = bitcast %"class.pp::Rect"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 16, i1 false) #9
  %135 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %125, i64 -3
  %136 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %126, i64 -3
  %137 = bitcast %"class.pp::Rect"* %135 to i8*
  %138 = bitcast %"class.pp::Rect"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 16, i1 false) #9
  %139 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %125, i64 -4
  %140 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %126, i64 -4
  %141 = bitcast %"class.pp::Rect"* %139 to i8*
  %142 = bitcast %"class.pp::Rect"* %140 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %142, i64 16, i1 false) #9
  %143 = icmp eq %"class.pp::Rect"* %140, %97
  br i1 %143, label %144, label %124

144:                                              ; preds = %124, %119
  %145 = phi %"class.pp::Rect"* [ %120, %119 ], [ %139, %124 ]
  %146 = load i64, i64* %12, align 8
  br label %147

147:                                              ; preds = %86, %144
  %148 = phi %"class.pp::Rect"* [ %145, %144 ], [ %89, %86 ]
  %149 = phi i64 [ %146, %144 ], [ %98, %86 ]
  %150 = ptrtoint %"class.pp::Rect"* %148 to i64
  store i64 %150, i64* %12, align 8
  store i64 %95, i64* %10, align 8
  store i64 %91, i64* %71, align 8
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = inttoptr i64 %149 to i8*
  tail call void @_ZdlPv(i8* %153) #8
  br label %154

154:                                              ; preds = %57, %147, %152
  %155 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %187, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %187, label %163

163:                                              ; preds = %159
  %164 = tail call zeroext i1 @_ZNK2pp15PaintAggregator26ShouldInvalidateScrollRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* dereferenceable(16) %1)
  br i1 %164, label %165, label %169

165:                                              ; preds = %163
  %166 = bitcast %"class.pp::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #9
  %167 = bitcast %"class.pp::Rect"* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %166, i8* align 8 %167, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %167, i8 0, i64 16, i1 false)
  %168 = bitcast %"class.pp::PaintAggregator"* %0 to i64*
  store i64 0, i64* %168, align 8
  call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* nonnull dereferenceable(16) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #9
  br label %187

169:                                              ; preds = %163
  %170 = tail call zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"* %155, %"class.pp::Rect"* dereferenceable(16) %1) #9
  br i1 %170, label %171, label %187

171:                                              ; preds = %169
  %172 = bitcast %"class.pp::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #9
  %173 = bitcast %"class.pp::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #9
  call void @_ZNK2pp15PaintAggregator19InternalPaintUpdate15GetScrollDamageEv(%"class.pp::Rect"* nonnull sret %6, %"class.pp::PaintAggregator::InternalPaintUpdate"* %7)
  call void @_ZNK2pp4Rect8SubtractERKS0_(%"class.pp::Rect"* nonnull sret %5, %"class.pp::Rect"* %1, %"class.pp::Rect"* nonnull dereferenceable(16) %6) #9
  %174 = load %"class.pp::Rect"*, %"class.pp::Rect"** %9, align 8
  %175 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %174, i64 -1
  %176 = bitcast %"class.pp::Rect"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* nonnull align 4 %172, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #9
  %177 = load %"class.pp::Rect"*, %"class.pp::Rect"** %9, align 8
  %178 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -1
  %179 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -1, i32 0, i32 1, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %171
  %183 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -1, i32 0, i32 1, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %171, %182
  store %"class.pp::Rect"* %178, %"class.pp::Rect"** %9, align 8
  br label %187

187:                                              ; preds = %154, %165, %182, %186, %169, %159
  %188 = load i64, i64* %10, align 8
  %189 = load i64, i64* %12, align 8
  %190 = sub i64 %188, %189
  %191 = ashr exact i64 %190, 4
  %192 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 2
  %193 = load i64, i64* %192, align 8
  %194 = icmp ugt i64 %191, %193
  br i1 %194, label %195, label %196

195:                                              ; preds = %187
  call void @_ZN2pp15PaintAggregator17CombinePaintRectsEv(%"class.pp::PaintAggregator"* %0)
  br label %196

196:                                              ; preds = %17, %41, %195, %187
  ret void
}

declare zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2pp4Rect10IntersectsERKS0_(%"class.pp::Rect"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2pp4Rect14SharesEdgeWithERKS0_(%"class.pp::Rect"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2pp15PaintAggregator26ShouldInvalidateScrollRectERKNS_4RectE(%"class.pp::PaintAggregator"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1
  %12 = tail call zeroext i1 @_ZNK2pp4Rect10IntersectsERKS0_(%"class.pp::Rect"* %11, %"class.pp::Rect"* dereferenceable(16) %1) #9
  br i1 %12, label %13, label %80

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"* %11, %"class.pp::Rect"* dereferenceable(16) %1) #9
  br i1 %14, label %15, label %80

15:                                               ; preds = %13
  %16 = load i32, i32* %3, align 4, !noalias !10
  br label %17

17:                                               ; preds = %15, %6
  %18 = phi i32 [ %16, %15 ], [ %4, %6 ]
  %19 = icmp sgt i32 %18, 0
  %20 = select i1 %19, i32 %18, i32 0
  br label %21

21:                                               ; preds = %17, %2
  %22 = phi i32 [ 0, %2 ], [ %20, %17 ]
  %23 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4, !noalias !10
  %25 = icmp sgt i32 %24, 0
  %26 = select i1 %25, i32 %24, i32 0
  %27 = mul nsw i32 %26, %22
  %28 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %30 = bitcast %"class.pp::Rect"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %31, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1
  br label %54

37:                                               ; preds = %72, %21
  %38 = phi i32 [ %27, %21 ], [ %73, %72 ]
  %39 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %40 = load i32, i32* %39, align 4, !noalias !13
  %41 = icmp sgt i32 %40, 0
  %42 = select i1 %41, i32 %40, i32 0
  %43 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4, !noalias !13
  %45 = icmp sgt i32 %44, 0
  %46 = select i1 %45, i32 %44, i32 0
  %47 = mul nsw i32 %46, %42
  %48 = sitofp i32 %38 to float
  %49 = sitofp i32 %47 to float
  %50 = fdiv float %48, %49
  %51 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 1
  %52 = load float, float* %51, align 8
  %53 = fcmp ogt float %50, %52
  br label %80

54:                                               ; preds = %35, %72
  %55 = phi i64 [ %33, %35 ], [ %76, %72 ]
  %56 = phi i64 [ 0, %35 ], [ %74, %72 ]
  %57 = phi i32 [ %27, %35 ], [ %73, %72 ]
  %58 = inttoptr i64 %55 to %"class.pp::Rect"*
  %59 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %58, i64 %56
  %60 = tail call zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"* %36, %"class.pp::Rect"* dereferenceable(16) %59) #9
  br i1 %60, label %61, label %72

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %58, i64 %56, i32 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 4, !noalias !16
  %64 = icmp sgt i32 %63, 0
  %65 = select i1 %64, i32 %63, i32 0
  %66 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %58, i64 %56, i32 0, i32 1, i32 1
  %67 = load i32, i32* %66, align 4, !noalias !16
  %68 = icmp sgt i32 %67, 0
  %69 = select i1 %68, i32 %67, i32 0
  %70 = mul nsw i32 %69, %65
  %71 = add nsw i32 %70, %57
  br label %72

72:                                               ; preds = %61, %54
  %73 = phi i32 [ %71, %61 ], [ %57, %54 ]
  %74 = add nuw i64 %56, 1
  %75 = load i64, i64* %30, align 8
  %76 = load i64, i64* %32, align 8
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 4
  %79 = icmp ult i64 %74, %78
  br i1 %79, label %54, label %37

80:                                               ; preds = %13, %10, %37
  %81 = phi i1 [ %53, %37 ], [ false, %10 ], [ true, %13 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator20InvalidateScrollRectEv(%"class.pp::PaintAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.pp::Rect", align 4
  %3 = bitcast %"class.pp::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #9
  %4 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.pp::Rect"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3, i8* align 8 %5, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  %6 = bitcast %"class.pp::PaintAggregator"* %0 to i64*
  store i64 0, i64* %6, align 8
  call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* nonnull dereferenceable(16) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #9
  ret void
}

declare void @_ZNK2pp4Rect8SubtractERKS0_(%"class.pp::Rect"* sret, %"class.pp::Rect"*, %"class.pp::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator17CombinePaintRectsEv(%"class.pp::PaintAggregator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.pp::Rect", align 4
  %3 = alloca %"class.pp::Rect", align 4
  %4 = alloca %"class.pp::Rect", align 4
  %5 = alloca %"class.pp::Rect", align 4
  %6 = alloca %"class.pp::Rect", align 4
  %7 = alloca %"class.pp::Rect", align 4
  %8 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %115

16:                                               ; preds = %1, %12
  %17 = bitcast %"class.pp::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 16, i1 false) #9, !alias.scope !19
  %18 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %20 = bitcast %"class.pp::Rect"** %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !19
  %22 = bitcast %"class.std::__1::vector"* %18 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !19
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %16
  %26 = inttoptr i64 %23 to %"class.pp::Rect"*
  %27 = inttoptr i64 %21 to %"class.pp::Rect"*
  br label %43

28:                                               ; preds = %16
  %29 = bitcast %"class.pp::Rect"* %2 to i8*
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ %23, %28 ], [ %37, %30 ]
  %32 = phi i64 [ 0, %28 ], [ %35, %30 ]
  %33 = inttoptr i64 %31 to %"class.pp::Rect"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9, !noalias !19
  %34 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %33, i64 %32
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %2, %"class.pp::Rect"* nonnull %3, %"class.pp::Rect"* dereferenceable(16) %34) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* nonnull align 4 %29, i64 16, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9, !noalias !19
  %35 = add nuw i64 %32, 1
  %36 = load i64, i64* %20, align 8, !noalias !19
  %37 = load i64, i64* %22, align 8, !noalias !19
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 4
  %40 = icmp ult i64 %35, %39
  br i1 %40, label %30, label %41

41:                                               ; preds = %30
  %42 = inttoptr i64 %37 to %"class.pp::Rect"*
  br label %43

43:                                               ; preds = %41, %25
  %44 = phi %"class.pp::Rect"* [ %27, %25 ], [ %42, %41 ]
  %45 = phi %"class.pp::Rect"* [ %26, %25 ], [ %42, %41 ]
  %46 = phi i64 [ %21, %25 ], [ %37, %41 ]
  %47 = ptrtoint %"class.pp::Rect"* %45 to i64
  store i64 %46, i64* %20, align 8
  %48 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %49 = load %"class.pp::Rect"*, %"class.pp::Rect"** %48, align 8
  %50 = icmp eq %"class.pp::Rect"* %49, %44
  br i1 %50, label %55, label %51

51:                                               ; preds = %43
  %52 = inttoptr i64 %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 4 %17, i64 16, i1 false) #9
  %53 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %44, i64 1
  %54 = ptrtoint %"class.pp::Rect"* %53 to i64
  store i64 %54, i64* %20, align 8
  br label %324

55:                                               ; preds = %43
  %56 = bitcast %"class.pp::Rect"** %48 to i64*
  %57 = call i8* @_Znwm(i64 16) #8
  %58 = bitcast i8* %57 to %"class.pp::Rect"*
  %59 = getelementptr inbounds i8, i8* %57, i64 16
  %60 = ptrtoint i8* %59 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %57, i8* nonnull align 4 %17, i64 16, i1 false) #9
  %61 = icmp eq %"class.pp::Rect"* %44, %45
  br i1 %61, label %108, label %62

62:                                               ; preds = %55
  %63 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %44, i64 -1, i32 0, i32 0, i32 0
  %64 = ptrtoint i32* %63 to i64
  %65 = sub i64 %64, %47
  %66 = lshr i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %70
  %71 = phi %"class.pp::Rect"* [ %74, %70 ], [ %58, %62 ]
  %72 = phi %"class.pp::Rect"* [ %75, %70 ], [ %44, %62 ]
  %73 = phi i64 [ %78, %70 ], [ %68, %62 ]
  %74 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %71, i64 -1
  %75 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %72, i64 -1
  %76 = bitcast %"class.pp::Rect"* %74 to i8*
  %77 = bitcast %"class.pp::Rect"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 16, i1 false) #9
  %78 = add i64 %73, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %70, !llvm.loop !22

80:                                               ; preds = %70, %62
  %81 = phi %"class.pp::Rect"* [ undef, %62 ], [ %74, %70 ]
  %82 = phi %"class.pp::Rect"* [ %58, %62 ], [ %74, %70 ]
  %83 = phi %"class.pp::Rect"* [ %44, %62 ], [ %75, %70 ]
  %84 = icmp ult i64 %65, 48
  br i1 %84, label %105, label %85

85:                                               ; preds = %80, %85
  %86 = phi %"class.pp::Rect"* [ %100, %85 ], [ %82, %80 ]
  %87 = phi %"class.pp::Rect"* [ %101, %85 ], [ %83, %80 ]
  %88 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %86, i64 -1
  %89 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %87, i64 -1
  %90 = bitcast %"class.pp::Rect"* %88 to i8*
  %91 = bitcast %"class.pp::Rect"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %90, i8* align 4 %91, i64 16, i1 false) #9
  %92 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %86, i64 -2
  %93 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %87, i64 -2
  %94 = bitcast %"class.pp::Rect"* %92 to i8*
  %95 = bitcast %"class.pp::Rect"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 16, i1 false) #9
  %96 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %86, i64 -3
  %97 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %87, i64 -3
  %98 = bitcast %"class.pp::Rect"* %96 to i8*
  %99 = bitcast %"class.pp::Rect"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 16, i1 false) #9
  %100 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %86, i64 -4
  %101 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %87, i64 -4
  %102 = bitcast %"class.pp::Rect"* %100 to i8*
  %103 = bitcast %"class.pp::Rect"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 16, i1 false) #9
  %104 = icmp eq %"class.pp::Rect"* %101, %45
  br i1 %104, label %105, label %85

105:                                              ; preds = %85, %80
  %106 = phi %"class.pp::Rect"* [ %81, %80 ], [ %100, %85 ]
  %107 = load i64, i64* %22, align 8
  br label %108

108:                                              ; preds = %55, %105
  %109 = phi %"class.pp::Rect"* [ %106, %105 ], [ %58, %55 ]
  %110 = phi i64 [ %107, %105 ], [ %46, %55 ]
  %111 = ptrtoint %"class.pp::Rect"* %109 to i64
  store i64 %111, i64* %22, align 8
  store i64 %60, i64* %20, align 8
  store i64 %60, i64* %56, align 8
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %324, label %113

113:                                              ; preds = %108
  %114 = inttoptr i64 %110 to i8*
  call void @_ZdlPv(i8* %114) #8
  br label %324

115:                                              ; preds = %12
  %116 = bitcast %"class.pp::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %116, i8 0, i64 16, i1 false) #9
  %117 = bitcast %"class.pp::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %117, i8 0, i64 16, i1 false) #9
  %118 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2
  %119 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %120 = bitcast %"class.pp::Rect"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %121, %123
  %125 = inttoptr i64 %123 to %"class.pp::Rect"*
  br i1 %124, label %126, label %128

126:                                              ; preds = %115
  %127 = inttoptr i64 %121 to %"class.pp::Rect"*
  br label %133

128:                                              ; preds = %115
  %129 = bitcast %"class.pp::Rect"* %7 to i8*
  %130 = bitcast %"class.pp::Rect"* %6 to i8*
  br label %308

131:                                              ; preds = %315
  %132 = inttoptr i64 %319 to %"class.pp::Rect"*
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi %"class.pp::Rect"* [ %127, %126 ], [ %132, %131 ]
  %135 = phi %"class.pp::Rect"* [ %125, %126 ], [ %132, %131 ]
  %136 = phi i64 [ %121, %126 ], [ %319, %131 ]
  %137 = ptrtoint %"class.pp::Rect"* %135 to i64
  store i64 %136, i64* %120, align 8
  %138 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %139 = load %"class.pp::Rect"*, %"class.pp::Rect"** %138, align 8
  %140 = icmp eq %"class.pp::Rect"* %139, %134
  br i1 %140, label %145, label %141

141:                                              ; preds = %133
  %142 = inttoptr i64 %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %142, i8* nonnull align 4 %116, i64 16, i1 false) #9
  %143 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %134, i64 1
  %144 = ptrtoint %"class.pp::Rect"* %143 to i64
  store i64 %144, i64* %120, align 8
  br label %207

145:                                              ; preds = %133
  %146 = bitcast %"class.pp::Rect"** %138 to i64*
  %147 = call i8* @_Znwm(i64 16) #8
  %148 = bitcast i8* %147 to %"class.pp::Rect"*
  %149 = getelementptr inbounds i8, i8* %147, i64 16
  %150 = bitcast i8* %149 to %"class.pp::Rect"*
  %151 = ptrtoint i8* %149 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* nonnull align 4 %116, i64 16, i1 false) #9
  %152 = icmp eq %"class.pp::Rect"* %134, %135
  br i1 %152, label %199, label %153

153:                                              ; preds = %145
  %154 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %134, i64 -1, i32 0, i32 0, i32 0
  %155 = ptrtoint i32* %154 to i64
  %156 = sub i64 %155, %137
  %157 = lshr i64 %156, 4
  %158 = add nuw nsw i64 %157, 1
  %159 = and i64 %158, 3
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %153, %161
  %162 = phi %"class.pp::Rect"* [ %165, %161 ], [ %148, %153 ]
  %163 = phi %"class.pp::Rect"* [ %166, %161 ], [ %134, %153 ]
  %164 = phi i64 [ %169, %161 ], [ %159, %153 ]
  %165 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %162, i64 -1
  %166 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %163, i64 -1
  %167 = bitcast %"class.pp::Rect"* %165 to i8*
  %168 = bitcast %"class.pp::Rect"* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 16, i1 false) #9
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %161, !llvm.loop !23

171:                                              ; preds = %161, %153
  %172 = phi %"class.pp::Rect"* [ undef, %153 ], [ %165, %161 ]
  %173 = phi %"class.pp::Rect"* [ %148, %153 ], [ %165, %161 ]
  %174 = phi %"class.pp::Rect"* [ %134, %153 ], [ %166, %161 ]
  %175 = icmp ult i64 %156, 48
  br i1 %175, label %196, label %176

176:                                              ; preds = %171, %176
  %177 = phi %"class.pp::Rect"* [ %191, %176 ], [ %173, %171 ]
  %178 = phi %"class.pp::Rect"* [ %192, %176 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -1
  %180 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %178, i64 -1
  %181 = bitcast %"class.pp::Rect"* %179 to i8*
  %182 = bitcast %"class.pp::Rect"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %182, i64 16, i1 false) #9
  %183 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -2
  %184 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %178, i64 -2
  %185 = bitcast %"class.pp::Rect"* %183 to i8*
  %186 = bitcast %"class.pp::Rect"* %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %185, i8* align 4 %186, i64 16, i1 false) #9
  %187 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -3
  %188 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %178, i64 -3
  %189 = bitcast %"class.pp::Rect"* %187 to i8*
  %190 = bitcast %"class.pp::Rect"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* align 4 %190, i64 16, i1 false) #9
  %191 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %177, i64 -4
  %192 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %178, i64 -4
  %193 = bitcast %"class.pp::Rect"* %191 to i8*
  %194 = bitcast %"class.pp::Rect"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 16, i1 false) #9
  %195 = icmp eq %"class.pp::Rect"* %192, %135
  br i1 %195, label %196, label %176

196:                                              ; preds = %176, %171
  %197 = phi %"class.pp::Rect"* [ %172, %171 ], [ %191, %176 ]
  %198 = load i64, i64* %122, align 8
  br label %199

199:                                              ; preds = %145, %196
  %200 = phi %"class.pp::Rect"* [ %197, %196 ], [ %148, %145 ]
  %201 = phi i64 [ %198, %196 ], [ %136, %145 ]
  %202 = ptrtoint %"class.pp::Rect"* %200 to i64
  store i64 %202, i64* %122, align 8
  store i64 %151, i64* %120, align 8
  store i64 %151, i64* %146, align 8
  %203 = icmp eq i64 %201, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %199
  %205 = inttoptr i64 %201 to i8*
  call void @_ZdlPv(i8* %205) #8
  %206 = load %"class.pp::Rect"*, %"class.pp::Rect"** %119, align 8
  br label %207

207:                                              ; preds = %141, %199, %204
  %208 = phi %"class.pp::Rect"* [ %143, %141 ], [ %150, %199 ], [ %206, %204 ]
  %209 = load %"class.pp::Rect"*, %"class.pp::Rect"** %138, align 8
  %210 = icmp eq %"class.pp::Rect"* %208, %209
  br i1 %210, label %215, label %211

211:                                              ; preds = %207
  %212 = bitcast %"class.pp::Rect"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* nonnull align 4 %117, i64 16, i1 false) #9
  %213 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %208, i64 1
  %214 = ptrtoint %"class.pp::Rect"* %213 to i64
  store i64 %214, i64* %120, align 8
  br label %307

215:                                              ; preds = %207
  %216 = ptrtoint %"class.pp::Rect"* %209 to i64
  %217 = load i64, i64* %122, align 8
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 4
  %220 = add nsw i64 %219, 1
  %221 = icmp ugt i64 %220, 1152921504606846975
  br i1 %221, label %222, label %224

222:                                              ; preds = %215
  %223 = bitcast %"class.std::__1::vector"* %118 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %223) #10
  unreachable

224:                                              ; preds = %215
  %225 = bitcast %"class.pp::Rect"** %138 to i64*
  %226 = icmp ult i64 %219, 576460752303423487
  br i1 %226, label %227, label %235

227:                                              ; preds = %224
  %228 = ashr exact i64 %218, 3
  %229 = icmp ult i64 %228, %220
  %230 = select i1 %229, i64 %220, i64 %228
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %240, label %232

232:                                              ; preds = %227
  %233 = icmp ugt i64 %230, 1152921504606846975
  br i1 %233, label %234, label %235

234:                                              ; preds = %232
  call void @abort() #10
  unreachable

235:                                              ; preds = %232, %224
  %236 = phi i64 [ %230, %232 ], [ 1152921504606846975, %224 ]
  %237 = shl i64 %236, 4
  %238 = call i8* @_Znwm(i64 %237) #8
  %239 = bitcast i8* %238 to %"class.pp::Rect"*
  br label %240

240:                                              ; preds = %235, %227
  %241 = phi i64 [ %236, %235 ], [ 0, %227 ]
  %242 = phi %"class.pp::Rect"* [ %239, %235 ], [ null, %227 ]
  %243 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %242, i64 %219
  %244 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %242, i64 %241
  %245 = ptrtoint %"class.pp::Rect"* %244 to i64
  %246 = bitcast %"class.pp::Rect"* %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* nonnull align 4 %117, i64 16, i1 false) #9
  %247 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %243, i64 1
  %248 = ptrtoint %"class.pp::Rect"* %247 to i64
  %249 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %118, i64 0, i32 0, i32 0
  %250 = load %"class.pp::Rect"*, %"class.pp::Rect"** %249, align 8
  %251 = ptrtoint %"class.pp::Rect"* %250 to i64
  %252 = load %"class.pp::Rect"*, %"class.pp::Rect"** %119, align 8
  %253 = icmp eq %"class.pp::Rect"* %252, %250
  br i1 %253, label %300, label %254

254:                                              ; preds = %240
  %255 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %252, i64 -1, i32 0, i32 0, i32 0
  %256 = ptrtoint i32* %255 to i64
  %257 = sub i64 %256, %251
  %258 = lshr i64 %257, 4
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %272, label %262

262:                                              ; preds = %254, %262
  %263 = phi %"class.pp::Rect"* [ %266, %262 ], [ %243, %254 ]
  %264 = phi %"class.pp::Rect"* [ %267, %262 ], [ %252, %254 ]
  %265 = phi i64 [ %270, %262 ], [ %260, %254 ]
  %266 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %263, i64 -1
  %267 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %264, i64 -1
  %268 = bitcast %"class.pp::Rect"* %266 to i8*
  %269 = bitcast %"class.pp::Rect"* %267 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 16, i1 false) #9
  %270 = add i64 %265, -1
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %262, !llvm.loop !24

272:                                              ; preds = %262, %254
  %273 = phi %"class.pp::Rect"* [ undef, %254 ], [ %266, %262 ]
  %274 = phi %"class.pp::Rect"* [ %243, %254 ], [ %266, %262 ]
  %275 = phi %"class.pp::Rect"* [ %252, %254 ], [ %267, %262 ]
  %276 = icmp ult i64 %257, 48
  br i1 %276, label %297, label %277

277:                                              ; preds = %272, %277
  %278 = phi %"class.pp::Rect"* [ %292, %277 ], [ %274, %272 ]
  %279 = phi %"class.pp::Rect"* [ %293, %277 ], [ %275, %272 ]
  %280 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %278, i64 -1
  %281 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %279, i64 -1
  %282 = bitcast %"class.pp::Rect"* %280 to i8*
  %283 = bitcast %"class.pp::Rect"* %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %283, i64 16, i1 false) #9
  %284 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %278, i64 -2
  %285 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %279, i64 -2
  %286 = bitcast %"class.pp::Rect"* %284 to i8*
  %287 = bitcast %"class.pp::Rect"* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %286, i8* align 4 %287, i64 16, i1 false) #9
  %288 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %278, i64 -3
  %289 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %279, i64 -3
  %290 = bitcast %"class.pp::Rect"* %288 to i8*
  %291 = bitcast %"class.pp::Rect"* %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 4 %291, i64 16, i1 false) #9
  %292 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %278, i64 -4
  %293 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %279, i64 -4
  %294 = bitcast %"class.pp::Rect"* %292 to i8*
  %295 = bitcast %"class.pp::Rect"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %294, i8* align 4 %295, i64 16, i1 false) #9
  %296 = icmp eq %"class.pp::Rect"* %293, %250
  br i1 %296, label %297, label %277

297:                                              ; preds = %277, %272
  %298 = phi %"class.pp::Rect"* [ %273, %272 ], [ %292, %277 ]
  %299 = load i64, i64* %122, align 8
  br label %300

300:                                              ; preds = %240, %297
  %301 = phi %"class.pp::Rect"* [ %298, %297 ], [ %243, %240 ]
  %302 = phi i64 [ %299, %297 ], [ %251, %240 ]
  %303 = ptrtoint %"class.pp::Rect"* %301 to i64
  store i64 %303, i64* %122, align 8
  store i64 %248, i64* %120, align 8
  store i64 %245, i64* %225, align 8
  %304 = icmp eq i64 %302, 0
  br i1 %304, label %307, label %305

305:                                              ; preds = %300
  %306 = inttoptr i64 %302 to i8*
  call void @_ZdlPv(i8* %306) #8
  br label %307

307:                                              ; preds = %211, %300, %305
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #9
  br label %324

308:                                              ; preds = %128, %315
  %309 = phi %"class.pp::Rect"* [ %125, %128 ], [ %323, %315 ]
  %310 = phi i64 [ 0, %128 ], [ %317, %315 ]
  %311 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %309, i64 %310
  %312 = call zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"* %8, %"class.pp::Rect"* dereferenceable(16) %311) #9
  br i1 %312, label %313, label %314

313:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #9
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %6, %"class.pp::Rect"* nonnull %4, %"class.pp::Rect"* dereferenceable(16) %311) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %116, i8* nonnull align 4 %130, i64 16, i1 false)
  br label %315

314:                                              ; preds = %308
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #9
  call void @_ZNK2pp4Rect5UnionERKS0_(%"class.pp::Rect"* nonnull sret %7, %"class.pp::Rect"* nonnull %5, %"class.pp::Rect"* dereferenceable(16) %311) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %117, i8* nonnull align 4 %129, i64 16, i1 false)
  br label %315

315:                                              ; preds = %314, %313
  %316 = phi i8* [ %129, %314 ], [ %130, %313 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %316) #9
  %317 = add nuw i64 %310, 1
  %318 = load i64, i64* %120, align 8
  %319 = load i64, i64* %122, align 8
  %320 = sub i64 %318, %319
  %321 = ashr exact i64 %320, 4
  %322 = icmp ult i64 %317, %321
  %323 = inttoptr i64 %319 to %"class.pp::Rect"*
  br i1 %322, label %308, label %131

324:                                              ; preds = %113, %108, %51, %307
  %325 = phi i8* [ %116, %307 ], [ %17, %51 ], [ %17, %108 ], [ %17, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %325) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp15PaintAggregator10ScrollRectERKNS_4RectERKNS_5PointE(%"class.pp::PaintAggregator"*, %"class.pp::Rect"* dereferenceable(16), %"class.pp::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.pp::Rect", align 4
  %5 = alloca %"class.pp::Rect", align 4
  %6 = alloca %"class.pp::Rect", align 4
  %7 = alloca %"class.pp::Rect", align 4
  %8 = alloca %"class.pp::Rect", align 4
  %9 = alloca %"class.pp::Rect", align 4
  %10 = alloca %"class.pp::Rect", align 4
  %11 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %2, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %2, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  tail call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* dereferenceable(16) %1)
  br label %150

19:                                               ; preds = %14, %3
  %20 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %49, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %20, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %48

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %22, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 0, i32 0, i32 1, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %26, %46
  br i1 %47, label %49, label %48

48:                                               ; preds = %44, %28, %34, %40
  tail call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* dereferenceable(16) %1)
  br label %150

49:                                               ; preds = %44, %19, %24
  br i1 %13, label %54, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %50, %49
  %55 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %2, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %63, label %60

60:                                               ; preds = %54
  %61 = icmp eq i32 %59, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %50, %60
  tail call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* dereferenceable(16) %1)
  br label %150

63:                                               ; preds = %54, %60
  %64 = phi i32 [ 0, %60 ], [ %59, %54 ]
  %65 = bitcast %"class.pp::Rect"* %20 to i8*
  %66 = bitcast %"class.pp::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 4 %66, i64 16, i1 false)
  %67 = load i32, i32* %11, align 4
  %68 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = add nsw i32 %64, %67
  store i32 %69, i32* %68, align 4
  %70 = load i32, i32* %55, align 4
  %71 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = add nsw i32 %72, %70
  store i32 %73, i32* %71, align 4
  %74 = or i32 %73, %69
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %91, label %76

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %79 = bitcast %"class.pp::Rect"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector"* %77 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %80, %82
  br i1 %83, label %144, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 0, i32 0, i32 0
  %86 = bitcast %"class.pp::Rect"* %9 to i8*
  %87 = bitcast %"class.pp::Rect"* %4 to i8*
  %88 = bitcast %"class.pp::Rect"* %5 to i8*
  %89 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %0, i64 0, i32 0
  %90 = bitcast %"class.pp::Rect"* %6 to i8*
  br label %92

91:                                               ; preds = %63
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false)
  br label %150

92:                                               ; preds = %84, %136
  %93 = phi i64 [ %82, %84 ], [ %140, %136 ]
  %94 = phi i64 [ 0, %84 ], [ %138, %136 ]
  %95 = inttoptr i64 %93 to %"class.pp::Rect"*
  %96 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %95, i64 %94
  %97 = call zeroext i1 @_ZNK2pp4Rect8ContainsERKS0_(%"class.pp::Rect"* %20, %"class.pp::Rect"* dereferenceable(16) %96) #9
  br i1 %97, label %98, label %129

98:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #9
  %99 = load %"class.pp::Rect"*, %"class.pp::Rect"** %85, align 8
  %100 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %99, i64 %94
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9, !noalias !25
  %101 = bitcast %"class.pp::Rect"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 4 %101, i64 16, i1 false) #9, !noalias !25
  %102 = load i32, i32* %11, align 4, !noalias !25
  %103 = load i32, i32* %55, align 4, !noalias !25
  call void @_ZN2pp4Rect6OffsetEii(%"class.pp::Rect"* nonnull %4, i32 %102, i32 %103) #9, !noalias !25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #9, !noalias !25
  call void @_ZNK2pp4Rect9IntersectERKS0_(%"class.pp::Rect"* nonnull sret %5, %"class.pp::Rect"* %20, %"class.pp::Rect"* nonnull dereferenceable(16) %4) #9, !noalias !25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* nonnull align 4 %88, i64 16, i1 false) #9, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #9, !noalias !25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #9, !noalias !25
  call void @_ZNK2pp15PaintAggregator19InternalPaintUpdate15GetScrollDamageEv(%"class.pp::Rect"* nonnull sret %6, %"class.pp::PaintAggregator::InternalPaintUpdate"* %89) #9, !noalias !25
  call void @_ZNK2pp4Rect8SubtractERKS0_(%"class.pp::Rect"* nonnull sret %9, %"class.pp::Rect"* nonnull %4, %"class.pp::Rect"* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #9, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9, !noalias !25
  %104 = load %"class.pp::Rect"*, %"class.pp::Rect"** %85, align 8
  %105 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %104, i64 %94
  %106 = bitcast %"class.pp::Rect"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* nonnull align 4 %86, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #9
  %107 = load %"class.pp::Rect"*, %"class.pp::Rect"** %85, align 8
  %108 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %107, i64 %94
  %109 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %107, i64 %94, i32 0, i32 1, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %98
  %113 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %107, i64 %94, i32 0, i32 1, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %136

116:                                              ; preds = %98, %112
  %117 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %108, i64 1
  %118 = load i64, i64* %79, align 8
  %119 = ptrtoint %"class.pp::Rect"* %117 to i64
  %120 = sub i64 %118, %119
  %121 = ashr exact i64 %120, 4
  %122 = icmp eq i64 %120, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %116
  %124 = bitcast %"class.pp::Rect"* %108 to i8*
  %125 = bitcast %"class.pp::Rect"* %117 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %120, i1 false) #9
  br label %126

126:                                              ; preds = %116, %123
  %127 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %108, i64 %121
  store %"class.pp::Rect"* %127, %"class.pp::Rect"** %78, align 8
  %128 = add i64 %94, -1
  br label %136

129:                                              ; preds = %92
  %130 = load %"class.pp::Rect"*, %"class.pp::Rect"** %85, align 8
  %131 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %130, i64 %94
  %132 = call zeroext i1 @_ZNK2pp4Rect10IntersectsERKS0_(%"class.pp::Rect"* %20, %"class.pp::Rect"* dereferenceable(16) %131) #9
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  %134 = bitcast %"class.pp::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %134, i8* align 8 %65, i64 16, i1 false) #9
  %135 = bitcast %"class.pp::PaintAggregator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false)
  call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* nonnull dereferenceable(16) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #9
  br label %150

136:                                              ; preds = %126, %112, %129
  %137 = phi i64 [ %128, %126 ], [ %94, %112 ], [ %94, %129 ]
  %138 = add i64 %137, 1
  %139 = load i64, i64* %79, align 8
  %140 = load i64, i64* %81, align 8
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 4
  %143 = icmp ult i64 %138, %142
  br i1 %143, label %92, label %144

144:                                              ; preds = %136, %76
  %145 = bitcast %"class.pp::Rect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %145, i8 0, i64 16, i1 false) #9
  %146 = call zeroext i1 @_ZNK2pp15PaintAggregator26ShouldInvalidateScrollRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* nonnull dereferenceable(16) %10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145) #9
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = bitcast %"class.pp::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %148, i8* align 8 %65, i64 16, i1 false) #9
  %149 = bitcast %"class.pp::PaintAggregator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false)
  call void @_ZN2pp15PaintAggregator14InvalidateRectERKNS_4RectE(%"class.pp::PaintAggregator"* %0, %"class.pp::Rect"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #9
  br label %150

150:                                              ; preds = %133, %18, %48, %62, %91, %147, %144
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2pp15PaintAggregator15ScrollPaintRectERKNS_4RectERKNS_5PointE(%"class.pp::Rect"* noalias sret, %"class.pp::PaintAggregator"*, %"class.pp::Rect"* nocapture readonly dereferenceable(16), %"class.pp::Point"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.pp::Rect", align 4
  %6 = alloca %"class.pp::Rect", align 4
  %7 = alloca %"class.pp::Rect", align 4
  %8 = bitcast %"class.pp::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = bitcast %"class.pp::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %3, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.pp::Point", %"class.pp::Point"* %3, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  call void @_ZN2pp4Rect6OffsetEii(%"class.pp::Rect"* nonnull %5, i32 %11, i32 %13) #9
  %14 = bitcast %"class.pp::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %1, i64 0, i32 0
  %16 = getelementptr inbounds %"class.pp::PaintAggregator", %"class.pp::PaintAggregator"* %1, i64 0, i32 0, i32 1
  call void @_ZNK2pp4Rect9IntersectERKS0_(%"class.pp::Rect"* nonnull sret %6, %"class.pp::Rect"* %16, %"class.pp::Rect"* nonnull dereferenceable(16) %5) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %14, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  %17 = bitcast %"class.pp::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  call void @_ZNK2pp15PaintAggregator19InternalPaintUpdate15GetScrollDamageEv(%"class.pp::Rect"* nonnull sret %7, %"class.pp::PaintAggregator::InternalPaintUpdate"* %15)
  call void @_ZNK2pp4Rect8SubtractERKS0_(%"class.pp::Rect"* sret %0, %"class.pp::Rect"* nonnull %5, %"class.pp::Rect"* nonnull dereferenceable(16) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2pp4RectENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.pp::Rect"*, %"class.pp::Rect"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.pp::Rect"* %1 to i64
  %5 = ptrtoint %"class.pp::Rect"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.pp::Rect"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.pp::Rect"*
  br i1 %15, label %99, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.pp::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %1, i64 %22
  %25 = select i1 %23, %"class.pp::Rect"* %24, %"class.pp::Rect"* %2
  %26 = ptrtoint %"class.pp::Rect"* %25 to i64
  %27 = sub i64 %26, %4
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.pp::Rect"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #9
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %97

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"class.pp::Rect"* %25, %2
  br i1 %36, label %95, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i8*
  %39 = xor i64 %22, -1
  %40 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %2, i64 %39, i32 0, i32 0, i32 0
  %41 = ptrtoint i32* %40 to i64
  %42 = sub i64 %41, %4
  %43 = lshr i64 %42, 4
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 3
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37, %47
  %48 = phi i64 [ %56, %47 ], [ %35, %37 ]
  %49 = phi i8* [ %57, %47 ], [ %38, %37 ]
  %50 = phi %"class.pp::Rect"* [ %53, %47 ], [ %24, %37 ]
  %51 = phi i64 [ %58, %47 ], [ %45, %37 ]
  %52 = bitcast %"class.pp::Rect"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %52, i64 16, i1 false) #9
  %53 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %50, i64 1
  %54 = inttoptr i64 %48 to %"class.pp::Rect"*
  %55 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %54, i64 1
  %56 = ptrtoint %"class.pp::Rect"* %55 to i64
  %57 = bitcast %"class.pp::Rect"* %55 to i8*
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47, !llvm.loop !28

60:                                               ; preds = %47
  %61 = ptrtoint %"class.pp::Rect"* %55 to i64
  %62 = bitcast %"class.pp::Rect"* %55 to i8*
  br label %63

63:                                               ; preds = %37, %60
  %64 = phi %"class.pp::Rect"* [ undef, %37 ], [ %55, %60 ]
  %65 = phi i64 [ %35, %37 ], [ %61, %60 ]
  %66 = phi i8* [ %38, %37 ], [ %62, %60 ]
  %67 = phi %"class.pp::Rect"* [ %24, %37 ], [ %53, %60 ]
  %68 = icmp ult i64 %42, 48
  br i1 %68, label %92, label %69

69:                                               ; preds = %63
  %70 = inttoptr i64 %65 to %"class.pp::Rect"*
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi %"class.pp::Rect"* [ %70, %69 ], [ %89, %71 ]
  %73 = phi i8* [ %66, %69 ], [ %91, %71 ]
  %74 = phi %"class.pp::Rect"* [ %67, %69 ], [ %88, %71 ]
  %75 = bitcast %"class.pp::Rect"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %75, i64 16, i1 false) #9
  %76 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %74, i64 1
  %77 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %72, i64 1
  %78 = bitcast %"class.pp::Rect"* %77 to i8*
  %79 = bitcast %"class.pp::Rect"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 16, i1 false) #9
  %80 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %74, i64 2
  %81 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %72, i64 2
  %82 = bitcast %"class.pp::Rect"* %81 to i8*
  %83 = bitcast %"class.pp::Rect"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 16, i1 false) #9
  %84 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %74, i64 3
  %85 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %72, i64 3
  %86 = bitcast %"class.pp::Rect"* %85 to i8*
  %87 = bitcast %"class.pp::Rect"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 16, i1 false) #9
  %88 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %74, i64 4
  %89 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %72, i64 4
  %90 = icmp eq %"class.pp::Rect"* %88, %2
  %91 = bitcast %"class.pp::Rect"* %89 to i8*
  br i1 %90, label %92, label %71

92:                                               ; preds = %71, %63
  %93 = phi %"class.pp::Rect"* [ %64, %63 ], [ %89, %71 ]
  %94 = ptrtoint %"class.pp::Rect"* %93 to i64
  br label %95

95:                                               ; preds = %92, %34
  %96 = phi i64 [ %35, %34 ], [ %94, %92 ]
  store i64 %96, i64* %19, align 8
  br label %181

97:                                               ; preds = %33
  %98 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %16, i64 %28
  store %"class.pp::Rect"* %98, %"class.pp::Rect"** %18, align 8
  br label %181

99:                                               ; preds = %3
  %100 = icmp eq i64 %12, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %103 = bitcast %"class.pp::Rect"** %102 to i64*
  store i64 %12, i64* %103, align 8
  %104 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %104) #8
  %105 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #9
  br label %106

106:                                              ; preds = %99, %101
  %107 = phi i64 [ %10, %99 ], [ 0, %101 ]
  %108 = icmp ugt i64 %7, 1152921504606846975
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #10
  unreachable

111:                                              ; preds = %106
  %112 = ashr exact i64 %107, 4
  %113 = icmp ult i64 %112, 576460752303423487
  br i1 %113, label %114, label %121

114:                                              ; preds = %111
  %115 = ashr exact i64 %107, 3
  %116 = icmp ult i64 %115, %7
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = icmp ugt i64 %115, 1152921504606846975
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #10
  unreachable

121:                                              ; preds = %114, %111, %117
  %122 = phi i64 [ %115, %117 ], [ 1152921504606846975, %111 ], [ %7, %114 ]
  %123 = shl i64 %122, 4
  %124 = tail call i8* @_Znwm(i64 %123) #8
  %125 = bitcast i8* %124 to %"class.pp::Rect"*
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %127 = bitcast %"class.pp::Rect"** %126 to i8**
  store i8* %124, i8** %127, align 8
  %128 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %124, i8** %128, align 8
  %129 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %125, i64 %122
  store %"class.pp::Rect"* %129, %"class.pp::Rect"** %8, align 8
  %130 = bitcast %"class.pp::Rect"** %126 to i64*
  %131 = ptrtoint i8* %124 to i64
  %132 = icmp eq %"class.pp::Rect"* %1, %2
  br i1 %132, label %179, label %133

133:                                              ; preds = %121
  %134 = getelementptr %"class.pp::Rect", %"class.pp::Rect"* %2, i64 -1, i32 0, i32 0, i32 0
  %135 = ptrtoint i32* %134 to i64
  %136 = sub i64 %135, %4
  %137 = lshr i64 %136, 4
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %151, label %141

141:                                              ; preds = %133, %141
  %142 = phi %"class.pp::Rect"* [ %148, %141 ], [ %125, %133 ]
  %143 = phi %"class.pp::Rect"* [ %147, %141 ], [ %1, %133 ]
  %144 = phi i64 [ %149, %141 ], [ %139, %133 ]
  %145 = bitcast %"class.pp::Rect"* %142 to i8*
  %146 = bitcast %"class.pp::Rect"* %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* align 4 %146, i64 16, i1 false) #9
  %147 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %143, i64 1
  %148 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %142, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %141, !llvm.loop !29

151:                                              ; preds = %141, %133
  %152 = phi %"class.pp::Rect"* [ undef, %133 ], [ %148, %141 ]
  %153 = phi %"class.pp::Rect"* [ %125, %133 ], [ %148, %141 ]
  %154 = phi %"class.pp::Rect"* [ %1, %133 ], [ %147, %141 ]
  %155 = icmp ult i64 %136, 48
  br i1 %155, label %176, label %156

156:                                              ; preds = %151, %156
  %157 = phi %"class.pp::Rect"* [ %174, %156 ], [ %153, %151 ]
  %158 = phi %"class.pp::Rect"* [ %173, %156 ], [ %154, %151 ]
  %159 = bitcast %"class.pp::Rect"* %157 to i8*
  %160 = bitcast %"class.pp::Rect"* %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %160, i64 16, i1 false) #9
  %161 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 1
  %162 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 1
  %163 = bitcast %"class.pp::Rect"* %162 to i8*
  %164 = bitcast %"class.pp::Rect"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* align 4 %164, i64 16, i1 false) #9
  %165 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 2
  %166 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 2
  %167 = bitcast %"class.pp::Rect"* %166 to i8*
  %168 = bitcast %"class.pp::Rect"* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %167, i8* align 4 %168, i64 16, i1 false) #9
  %169 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 3
  %170 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 3
  %171 = bitcast %"class.pp::Rect"* %170 to i8*
  %172 = bitcast %"class.pp::Rect"* %169 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %172, i64 16, i1 false) #9
  %173 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %158, i64 4
  %174 = getelementptr inbounds %"class.pp::Rect", %"class.pp::Rect"* %157, i64 4
  %175 = icmp eq %"class.pp::Rect"* %173, %2
  br i1 %175, label %176, label %156

176:                                              ; preds = %156, %151
  %177 = phi %"class.pp::Rect"* [ %152, %151 ], [ %174, %156 ]
  %178 = ptrtoint %"class.pp::Rect"* %177 to i64
  br label %179

179:                                              ; preds = %176, %121
  %180 = phi i64 [ %131, %121 ], [ %178, %176 ]
  store i64 %180, i64* %130, align 8
  br label %181

181:                                              ; preds = %95, %97, %179
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2pp4Rect6OffsetEii(%"class.pp::Rect"*, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK2pp15PaintAggregator19InternalPaintUpdate14GetPaintBoundsEv: argument 0"}
!4 = distinct !{!4, !"_ZNK2pp15PaintAggregator19InternalPaintUpdate14GetPaintBoundsEv"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK2pp4Rect4sizeEv: argument 0"}
!12 = distinct !{!12, !"_ZNK2pp4Rect4sizeEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK2pp4Rect4sizeEv: argument 0"}
!15 = distinct !{!15, !"_ZNK2pp4Rect4sizeEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK2pp4Rect4sizeEv: argument 0"}
!18 = distinct !{!18, !"_ZNK2pp4Rect4sizeEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK2pp15PaintAggregator19InternalPaintUpdate14GetPaintBoundsEv: argument 0"}
!21 = distinct !{!21, !"_ZNK2pp15PaintAggregator19InternalPaintUpdate14GetPaintBoundsEv"}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK2pp15PaintAggregator15ScrollPaintRectERKNS_4RectERKNS_5PointE: argument 0"}
!27 = distinct !{!27, !"_ZNK2pp15PaintAggregator15ScrollPaintRectERKNS_4RectERKNS_5PointE"}
!28 = distinct !{!28, !7}
!29 = distinct !{!29, !7}
