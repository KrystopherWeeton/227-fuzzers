; ModuleID = '../../components/reporting/encryption/primitives.cc'
source_filename = "../../components/reporting/encryption/primitives.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.env_md_st = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.crypto::Aead" = type { %"class.absl::optional", %struct.evp_aead_st* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.base::span" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.evp_aead_st = type opaque
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9reporting19ComputeSharedSecretEPKhPhS2_(i8*, i8*, i8*) local_unnamed_addr #0 {
  %4 = alloca [32 x i8], align 16
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #5
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 32, i1 false)
  call void @X25519_keypair(i8* %2, i8* nonnull %5) #5
  %6 = call i32 @X25519(i8* %1, i8* nonnull %5, i8* %0) #5
  %7 = icmp eq i32 %6, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  ret i1 %7
}

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @X25519_keypair(i8*, i8*) local_unnamed_addr #1

declare i32 @X25519(i8*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9reporting19ProduceSymmetricKeyEPKhPh(i8*, i8*) local_unnamed_addr #0 {
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #5
  %3 = tail call %struct.env_md_st* @EVP_sha256() #5
  %4 = tail call i32 @HKDF(i8* %1, i64 32, %struct.env_md_st* %3, i8* %0, i64 32, i8* null, i64 0, i8* null, i64 0) #5
  %5 = icmp eq i32 %4, 1
  ret i1 %5
}

declare i32 @HKDF(i8*, i64, %struct.env_md_st*, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9reporting26PerformSymmetricEncryptionEPKhN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(i8*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %5 = alloca %"class.crypto::Aead", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #5
  %9 = getelementptr inbounds %"class.crypto::Aead", %"class.crypto::Aead"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN6crypto4AeadC1ENS0_13AeadAlgorithmE(%"class.crypto::Aead"* nonnull %5, i32 3) #5
  call void @_ZN6crypto4Aead4InitEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::Aead"* nonnull %5, i64 32, i8* %0) #5
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  store i8 12, i8* %14, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 13, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #5
  %18 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = bitcast %"class.base::BasicStringPiece"* %7 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %20, align 8
  %21 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 0, i64* %21, align 8
  %22 = call zeroext i1 @_ZNK6crypto4Aead4SealEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_S6_PNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.crypto::Aead"* nonnull %5, i8* %1, i64 %2, i8* nonnull %10, i64 12, %"class.base::BasicStringPiece"* nonnull byval(%"class.base::BasicStringPiece") align 8 %7, %"class.std::__1::basic_string"* %3) #5
  %23 = load i8, i8* %19, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #6
  br label %28

28:                                               ; preds = %4, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #5
  br i1 %22, label %29, label %38

29:                                               ; preds = %28
  %30 = load i8, i8* %14, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i8*, i8** %11, align 8
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i8* %32, i8* %10
  %36 = select i1 %31, i64 %33, i64 %34
  %37 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i8* %35, i64 %36) #5
  br label %38

38:                                               ; preds = %28, %29
  %39 = phi i1 [ true, %29 ], [ false, %28 ]
  %40 = load i8, i8* %14, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %43) #6
  br label %44

44:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #5
  call void @_ZN6crypto4AeadD1Ev(%"class.crypto::Aead"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #5
  ret i1 %39
}

declare void @_ZN6crypto4AeadC1ENS0_13AeadAlgorithmE(%"class.crypto::Aead"*, i32) unnamed_addr #1

declare void @_ZN6crypto4Aead4InitEN4base4spanIKhLm18446744073709551615EEE(%"class.crypto::Aead"*, i64, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK6crypto4Aead4SealEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_S6_PNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.crypto::Aead"*, i8*, i64, i8*, i64, %"class.base::BasicStringPiece"* byval(%"class.base::BasicStringPiece") align 8, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6crypto4AeadD1Ev(%"class.crypto::Aead"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9reporting15VerifySignatureEPKhN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES1_(i8*, i8*, i64, i8*) local_unnamed_addr #0 {
  tail call void @_ZN6crypto17EnsureOpenSSLInitEv() #5
  %5 = tail call i32 @ED25519_verify(i8* %1, i64 %2, i8* %3, i8* %0) #5
  %6 = icmp eq i32 %5, 1
  ret i1 %6
}

declare i32 @ED25519_verify(i8*, i64, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
