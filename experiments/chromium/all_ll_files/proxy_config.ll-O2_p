; ModuleID = '../../net/proxy_resolution/proxy_config.cc'
source_filename = "../../net/proxy_resolution/proxy_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ProxyConfig::ProxyRules" = type { %"class.net::ProxyBypassRules", i8, i32, %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList" }
%"class.net::ProxyBypassRules" = type { %"class.net::SchemeHostPortMatcher" }
%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SchemeHostPortMatcherRule"* }
%"class.net::SchemeHostPortMatcherRule" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.net::ProxyList" = type { %"class.std::__1::vector.4" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.11" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::ProxyServer"* }
%"class.net::ProxyConfig" = type { i8, %class.GURL, i8, %"struct.net::ProxyConfig::ProxyRules" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.16" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.GURL* }
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::allocator.9" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.30" }
%"union.absl::variant_internal::DestructibleUnionImpl.30" = type { %"union.absl::variant_internal::DestructibleUnionImpl.31" }
%"union.absl::variant_internal::DestructibleUnionImpl.31" = type { %"union.absl::variant_internal::DestructibleUnionImpl.32" }
%"union.absl::variant_internal::DestructibleUnionImpl.32" = type { %"union.absl::variant_internal::DestructibleUnionImpl.33" }
%"union.absl::variant_internal::DestructibleUnionImpl.33" = type { %"class.std::__1::basic_string" }

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

@.str.2 = private unnamed_addr constant [6 x i8] c"socks\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"wss\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"auto_detect\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"pac_url\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"pac_mandatory\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"single_proxy\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"fallback\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"proxy_per_scheme\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"reverse_bypass\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"bypass_list\00", align 1

@_ZN3net11ProxyConfig10ProxyRulesC1Ev = hidden unnamed_addr alias void (%"struct.net::ProxyConfig::ProxyRules"*), void (%"struct.net::ProxyConfig::ProxyRules"*)* @_ZN3net11ProxyConfig10ProxyRulesC2Ev
@_ZN3net11ProxyConfig10ProxyRulesC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::ProxyConfig::ProxyRules"*, %"struct.net::ProxyConfig::ProxyRules"*), void (%"struct.net::ProxyConfig::ProxyRules"*, %"struct.net::ProxyConfig::ProxyRules"*)* @_ZN3net11ProxyConfig10ProxyRulesC2ERKS1_
@_ZN3net11ProxyConfig10ProxyRulesD1Ev = hidden unnamed_addr alias void (%"struct.net::ProxyConfig::ProxyRules"*), void (%"struct.net::ProxyConfig::ProxyRules"*)* @_ZN3net11ProxyConfig10ProxyRulesD2Ev
@_ZN3net11ProxyConfigC1Ev = hidden unnamed_addr alias void (%"class.net::ProxyConfig"*), void (%"class.net::ProxyConfig"*)* @_ZN3net11ProxyConfigC2Ev
@_ZN3net11ProxyConfigC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::ProxyConfig"*, %"class.net::ProxyConfig"*), void (%"class.net::ProxyConfig"*, %"class.net::ProxyConfig"*)* @_ZN3net11ProxyConfigC2ERKS0_
@_ZN3net11ProxyConfigD1Ev = hidden unnamed_addr alias void (%"class.net::ProxyConfig"*), void (%"class.net::ProxyConfig"*)* @_ZN3net11ProxyConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfig10ProxyRulesC2Ev(%"struct.net::ProxyConfig::ProxyRules"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 0
  tail call void @_ZN3net16ProxyBypassRulesC1Ev(%"class.net::ProxyBypassRules"* %2) #8
  %3 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 3
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %5) #8
  %6 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %6) #8
  %7 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %7) #8
  %8 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 6
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %8) #8
  %9 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %9) #8
  ret void
}

declare void @_ZN3net16ProxyBypassRulesC1Ev(%"class.net::ProxyBypassRules"*) unnamed_addr #1

declare void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfig10ProxyRulesC2ERKS1_(%"struct.net::ProxyConfig::ProxyRules"*, %"struct.net::ProxyConfig::ProxyRules"* dereferenceable(152)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 0
  tail call void @_ZN3net16ProxyBypassRulesC1ERKS0_(%"class.net::ProxyBypassRules"* %3, %"class.net::ProxyBypassRules"* dereferenceable(24) %4) #8
  %5 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 1
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %5 to i64*
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 3
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %10, %"class.net::ProxyList"* dereferenceable(24) %11) #8
  %12 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 4
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %12, %"class.net::ProxyList"* dereferenceable(24) %13) #8
  %14 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 5
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %14, %"class.net::ProxyList"* dereferenceable(24) %15) #8
  %16 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 6
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %16, %"class.net::ProxyList"* dereferenceable(24) %17) #8
  %18 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  %19 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 7
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %18, %"class.net::ProxyList"* dereferenceable(24) %19) #8
  ret void
}

declare void @_ZN3net16ProxyBypassRulesC1ERKS0_(%"class.net::ProxyBypassRules"*, %"class.net::ProxyBypassRules"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"*, %"class.net::ProxyList"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfig10ProxyRulesD2Ev(%"struct.net::ProxyConfig::ProxyRules"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %2) #8
  %3 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 6
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %3) #8
  %4 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %4) #8
  %5 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %5) #8
  %6 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 3
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %6) #8
  %7 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 0
  tail call void @_ZN3net16ProxyBypassRulesD1Ev(%"class.net::ProxyBypassRules"* %7) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net16ProxyBypassRulesD1Ev(%"class.net::ProxyBypassRules"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11ProxyConfig10ProxyRules5ApplyERK4GURLPNS_9ProxyInfoE(%"struct.net::ProxyConfig::ProxyRules"*, %class.GURL* dereferenceable(120), %"class.net::ProxyInfo"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::allocator.9", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @_ZN3net9ProxyInfo9UseDirectEv(%"class.net::ProxyInfo"* %2) #8
  br label %48

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp ne i8 %13, 0
  %15 = tail call zeroext i1 @_ZNK3net16ProxyBypassRules7MatchesERK4GURLb(%"class.net::ProxyBypassRules"* %11, %class.GURL* dereferenceable(120) %1, i1 zeroext %14) #8
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @_ZN3net9ProxyInfo26UseDirectWithBypassedProxyEv(%"class.net::ProxyInfo"* %2) #8
  br label %48

17:                                               ; preds = %10
  %18 = load i32, i32* %6, align 4
  switch i32 %18, label %47 [
    i32 1, label %19
    i32 2, label %21
  ]

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 3
  tail call void @_ZN3net9ProxyInfo12UseProxyListERKNS_9ProxyListE(%"class.net::ProxyInfo"* %2, %"class.net::ProxyList"* dereferenceable(24) %20) #8
  br label %48

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %24 = load i32, i32* %23, align 4, !noalias !3
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #8, !alias.scope !3
  br label %34

27:                                               ; preds = %21
  %28 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !3
  %31 = sext i32 %30 to i64
  %32 = sext i32 %24 to i64
  %33 = getelementptr inbounds %"class.std::__1::allocator.9", %"class.std::__1::allocator.9"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %28, i64 %31, i64 %32, %"class.std::__1::allocator.9"* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #8, !noalias !3
  br label %34

34:                                               ; preds = %26, %27
  %35 = call %"class.net::ProxyList"* @_ZNK3net11ProxyConfig10ProxyRules23MapUrlSchemeToProxyListERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::ProxyConfig::ProxyRules"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %34, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  %44 = icmp eq %"class.net::ProxyList"* %35, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %43
  call void @_ZN3net9ProxyInfo12UseProxyListERKNS_9ProxyListE(%"class.net::ProxyInfo"* %2, %"class.net::ProxyList"* nonnull dereferenceable(24) %35) #8
  br label %48

46:                                               ; preds = %43
  call void @_ZN3net9ProxyInfo9UseDirectEv(%"class.net::ProxyInfo"* %2) #8
  br label %48

47:                                               ; preds = %17
  tail call void @_ZN3net9ProxyInfo9UseDirectEv(%"class.net::ProxyInfo"* %2) #8
  br label %48

48:                                               ; preds = %45, %46, %47, %19, %16, %9
  ret void
}

declare void @_ZN3net9ProxyInfo9UseDirectEv(%"class.net::ProxyInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net16ProxyBypassRules7MatchesERK4GURLb(%"class.net::ProxyBypassRules"*, %class.GURL* dereferenceable(120), i1 zeroext) local_unnamed_addr #1

declare void @_ZN3net9ProxyInfo26UseDirectWithBypassedProxyEv(%"class.net::ProxyInfo"*) local_unnamed_addr #1

declare void @_ZN3net9ProxyInfo12UseProxyListERKNS_9ProxyListE(%"class.net::ProxyInfo"*, %"class.net::ProxyList"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ProxyList"* @_ZNK3net11ProxyConfig10ProxyRules23MapUrlSchemeToProxyListERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::ProxyConfig::ProxyRules"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.net::ProxyList"* @_ZN3net11ProxyConfig10ProxyRules33MapUrlSchemeToProxyListNoFallbackERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::ProxyConfig::ProxyRules"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %4 = icmp eq %"class.net::ProxyList"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* nonnull %3) #8
  br i1 %6, label %7, label %48

7:                                                ; preds = %2, %5
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 2
  br i1 %16, label %17, label %24

17:                                               ; preds = %7
  %18 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = load i8, i8* %9, align 1
  %22 = load i64, i64* %12, align 8
  %23 = zext i8 %21 to i64
  br label %24

24:                                               ; preds = %20, %7
  %25 = phi i64 [ %23, %20 ], [ %14, %7 ]
  %26 = phi i64 [ %22, %20 ], [ %13, %7 ]
  %27 = phi i8 [ %21, %20 ], [ %10, %7 ]
  %28 = icmp slt i8 %27, 0
  %29 = select i1 %28, i64 %26, i64 %25
  %30 = icmp eq i64 %29, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %24
  %32 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  %36 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %35) #8
  br i1 %36, label %37, label %48

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  %39 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %38) #8
  br i1 %39, label %40, label %48

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  %42 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %41) #8
  %43 = select i1 %42, %"class.net::ProxyList"* null, %"class.net::ProxyList"* %41
  br label %48

44:                                               ; preds = %24, %31
  %45 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  %46 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %45) #8
  %47 = select i1 %46, %"class.net::ProxyList"* null, %"class.net::ProxyList"* %45
  br label %48

48:                                               ; preds = %40, %37, %34, %44, %5
  %49 = phi %"class.net::ProxyList"* [ %3, %5 ], [ %47, %44 ], [ %35, %34 ], [ %38, %37 ], [ %43, %40 ]
  ret %"class.net::ProxyList"* %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfig10ProxyRules15ParseFromStringERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::ProxyConfig::ProxyRules"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.net::ProxyList", align 8
  %4 = alloca %"class.net::ProxyList", align 8
  %5 = alloca %"class.net::ProxyList", align 8
  %6 = alloca %"class.net::ProxyList", align 8
  %7 = alloca %"class.net::ProxyList", align 8
  %8 = alloca %"class.base::StringTokenizerT", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::StringTokenizerT", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = bitcast %"class.net::ProxyList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* nonnull %3) #8
  %17 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 3
  %18 = call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"* %17, %"class.net::ProxyList"* nonnull dereferenceable(24) %3) #8
  call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  %19 = bitcast %"class.net::ProxyList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* nonnull %4) #8
  %20 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  %21 = call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"* %20, %"class.net::ProxyList"* nonnull dereferenceable(24) %4) #8
  call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  %22 = bitcast %"class.net::ProxyList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* nonnull %5) #8
  %23 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  %24 = call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"* %23, %"class.net::ProxyList"* nonnull dereferenceable(24) %5) #8
  call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  %25 = bitcast %"class.net::ProxyList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8
  call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* nonnull %6) #8
  %26 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 6
  %27 = call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"* %26, %"class.net::ProxyList"* nonnull dereferenceable(24) %6) #8
  call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8
  %28 = bitcast %"class.net::ProxyList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8
  call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* nonnull %7) #8
  %29 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  %30 = call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"* %29, %"class.net::ProxyList"* nonnull dereferenceable(24) %7) #8
  call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8
  %31 = bitcast %"class.base::StringTokenizerT"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %31) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 96, i1 false)
  %32 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %33 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 1, i8* %34, align 1
  store i8 59, i8* %32, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 3, i32 0
  %40 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 4
  %41 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 5
  %44 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #8
  %45 = load i8, i8* %42, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %52 = zext i8 %45 to i64
  %53 = select i1 %46, i8* %48, i8* %51
  %54 = select i1 %46, i64 %50, i64 %52
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  store i8* %53, i8** %36, align 8
  store i8* %53, i8** %37, align 8
  store i8* %53, i8** %38, align 8
  store i8* %55, i8** %39, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %32, i64 24, i1 false) #8
  %57 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 6
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 7
  store i8 1, i8* %58, align 4
  %59 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 9
  store i32 0, i32* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  %60 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 5
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.base::StringTokenizerT"* %10 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds i8, i8* %65, i64 1
  %69 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 2, i32 0
  %71 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 4
  %72 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %73 = bitcast %"class.base::StringTokenizerT"* %10 to i64*
  %74 = bitcast i8** %69 to i64*
  %75 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 6
  %76 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 7
  %77 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 9
  %78 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 5
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %10, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %86 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %103 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = bitcast i8** %37 to <2 x i64>*
  %106 = bitcast i8** %70 to <2 x i64>*
  br label %107

107:                                              ; preds = %469, %2
  %108 = phi i32 [ %472, %469 ], [ 0, %2 ]
  %109 = phi i64 [ %471, %469 ], [ 0, %2 ]
  %110 = phi i8 [ %470, %469 ], [ 0, %2 ]
  %111 = icmp slt i8 %110, 0
  %112 = zext i8 %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  %114 = icmp eq i64 %113, 0
  %115 = icmp eq i32 %108, 0
  %116 = and i1 %114, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %107
  %118 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %8) #8
  br i1 %118, label %121, label %473

119:                                              ; preds = %107
  %120 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %8) #8
  br i1 %120, label %121, label %473

121:                                              ; preds = %119, %117
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %64) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 96, i1 false)
  %122 = load <2 x i64>, <2 x i64>* %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #8
  store i8 1, i8* %67, align 1
  store i8 61, i8* %65, align 8
  store i8 0, i8* %68, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #8
  %123 = extractelement <2 x i64> %122, i32 0
  store i64 %123, i64* %73, align 8
  store i64 %123, i64* %74, align 8
  store <2 x i64> %122, <2 x i64>* %106, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %65, i64 24, i1 false) #8
  store i32 0, i32* %75, align 8
  store i8 1, i8* %76, align 4
  store i32 0, i32* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #8
  br label %124

124:                                              ; preds = %452, %121
  %125 = phi i32 [ %455, %452 ], [ 0, %121 ]
  %126 = phi i64 [ %454, %452 ], [ 0, %121 ]
  %127 = phi i8 [ %453, %452 ], [ 0, %121 ]
  %128 = icmp slt i8 %127, 0
  %129 = zext i8 %127 to i64
  %130 = select i1 %128, i64 %126, i64 %129
  %131 = icmp eq i64 %130, 0
  %132 = icmp eq i32 %125, 0
  %133 = and i1 %131, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %124
  %135 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %10) #8
  br i1 %135, label %138, label %456

136:                                              ; preds = %124
  %137 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %10) #8
  br i1 %137, label %138, label %456

138:                                              ; preds = %134, %136
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 24, i1 false)
  %139 = load i8*, i8** %69, align 8, !noalias !8
  %140 = ptrtoint i8* %139 to i64
  %141 = load i8*, i8** %70, align 8, !noalias !8
  %142 = ptrtoint i8* %141 to i64
  %143 = sub i64 %142, %140
  %144 = icmp ugt i64 %143, -17
  br i1 %144, label %145, label %147

145:                                              ; preds = %138
  %146 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %146) #10
  unreachable

147:                                              ; preds = %138
  %148 = icmp ult i64 %143, 23
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = trunc i64 %143 to i8
  store i8 %150, i8* %87, align 1, !alias.scope !8
  br label %156

151:                                              ; preds = %147
  %152 = add nuw i64 %143, 16
  %153 = and i64 %152, -16
  %154 = call i8* @_Znwm(i64 %153) #9
  store i8* %154, i8** %83, align 8, !alias.scope !8
  %155 = or i64 %153, -9223372036854775808
  store i64 %155, i64* %85, align 8, !alias.scope !8
  store i64 %143, i64* %84, align 8, !alias.scope !8
  br label %156

156:                                              ; preds = %151, %149
  %157 = phi i8* [ %82, %149 ], [ %154, %151 ]
  %158 = icmp eq i8* %139, %141
  br i1 %158, label %261, label %159

159:                                              ; preds = %156
  %160 = ptrtoint i8* %141 to i64
  %161 = sub i64 %160, %140
  %162 = icmp ult i64 %161, 32
  br i1 %162, label %251, label %163

163:                                              ; preds = %159
  %164 = ptrtoint i8* %141 to i64
  %165 = sub i64 %164, %140
  %166 = getelementptr i8, i8* %157, i64 %165
  %167 = icmp ult i8* %157, %141
  %168 = icmp ult i8* %139, %166
  %169 = and i1 %167, %168
  br i1 %169, label %251, label %170

170:                                              ; preds = %163
  %171 = and i64 %161, -32
  %172 = getelementptr i8, i8* %157, i64 %171
  %173 = getelementptr i8, i8* %139, i64 %171
  %174 = add i64 %171, -32
  %175 = lshr exact i64 %174, 5
  %176 = add nuw nsw i64 %175, 1
  %177 = and i64 %176, 3
  %178 = icmp ult i64 %174, 96
  br i1 %178, label %230, label %179

179:                                              ; preds = %170
  %180 = sub nsw i64 %176, %177
  br label %181

181:                                              ; preds = %181, %179
  %182 = phi i64 [ 0, %179 ], [ %227, %181 ]
  %183 = phi i64 [ %180, %179 ], [ %228, %181 ]
  %184 = getelementptr i8, i8* %157, i64 %182
  %185 = getelementptr i8, i8* %139, i64 %182
  %186 = bitcast i8* %185 to <16 x i8>*
  %187 = load <16 x i8>, <16 x i8>* %186, align 1, !alias.scope !11
  %188 = getelementptr i8, i8* %185, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !11
  %191 = bitcast i8* %184 to <16 x i8>*
  store <16 x i8> %187, <16 x i8>* %191, align 1, !alias.scope !14, !noalias !11
  %192 = getelementptr i8, i8* %184, i64 16
  %193 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %193, align 1, !alias.scope !14, !noalias !11
  %194 = or i64 %182, 32
  %195 = getelementptr i8, i8* %157, i64 %194
  %196 = getelementptr i8, i8* %139, i64 %194
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !11
  %199 = getelementptr i8, i8* %196, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  %201 = load <16 x i8>, <16 x i8>* %200, align 1, !alias.scope !11
  %202 = bitcast i8* %195 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %202, align 1, !alias.scope !14, !noalias !11
  %203 = getelementptr i8, i8* %195, i64 16
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %201, <16 x i8>* %204, align 1, !alias.scope !14, !noalias !11
  %205 = or i64 %182, 64
  %206 = getelementptr i8, i8* %157, i64 %205
  %207 = getelementptr i8, i8* %139, i64 %205
  %208 = bitcast i8* %207 to <16 x i8>*
  %209 = load <16 x i8>, <16 x i8>* %208, align 1, !alias.scope !11
  %210 = getelementptr i8, i8* %207, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1, !alias.scope !11
  %213 = bitcast i8* %206 to <16 x i8>*
  store <16 x i8> %209, <16 x i8>* %213, align 1, !alias.scope !14, !noalias !11
  %214 = getelementptr i8, i8* %206, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %212, <16 x i8>* %215, align 1, !alias.scope !14, !noalias !11
  %216 = or i64 %182, 96
  %217 = getelementptr i8, i8* %157, i64 %216
  %218 = getelementptr i8, i8* %139, i64 %216
  %219 = bitcast i8* %218 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 1, !alias.scope !11
  %221 = getelementptr i8, i8* %218, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  %223 = load <16 x i8>, <16 x i8>* %222, align 1, !alias.scope !11
  %224 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> %220, <16 x i8>* %224, align 1, !alias.scope !14, !noalias !11
  %225 = getelementptr i8, i8* %217, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  store <16 x i8> %223, <16 x i8>* %226, align 1, !alias.scope !14, !noalias !11
  %227 = add i64 %182, 128
  %228 = add i64 %183, -4
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %181, !llvm.loop !16

230:                                              ; preds = %181, %170
  %231 = phi i64 [ 0, %170 ], [ %227, %181 ]
  %232 = icmp eq i64 %177, 0
  br i1 %232, label %249, label %233

233:                                              ; preds = %230, %233
  %234 = phi i64 [ %246, %233 ], [ %231, %230 ]
  %235 = phi i64 [ %247, %233 ], [ %177, %230 ]
  %236 = getelementptr i8, i8* %157, i64 %234
  %237 = getelementptr i8, i8* %139, i64 %234
  %238 = bitcast i8* %237 to <16 x i8>*
  %239 = load <16 x i8>, <16 x i8>* %238, align 1, !alias.scope !11
  %240 = getelementptr i8, i8* %237, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  %242 = load <16 x i8>, <16 x i8>* %241, align 1, !alias.scope !11
  %243 = bitcast i8* %236 to <16 x i8>*
  store <16 x i8> %239, <16 x i8>* %243, align 1, !alias.scope !14, !noalias !11
  %244 = getelementptr i8, i8* %236, i64 16
  %245 = bitcast i8* %244 to <16 x i8>*
  store <16 x i8> %242, <16 x i8>* %245, align 1, !alias.scope !14, !noalias !11
  %246 = add i64 %234, 32
  %247 = add i64 %235, -1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %233, !llvm.loop !18

249:                                              ; preds = %233, %230
  %250 = icmp eq i64 %161, %171
  br i1 %250, label %261, label %251

251:                                              ; preds = %249, %163, %159
  %252 = phi i8* [ %157, %163 ], [ %157, %159 ], [ %172, %249 ]
  %253 = phi i8* [ %139, %163 ], [ %139, %159 ], [ %173, %249 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i8* [ %259, %254 ], [ %252, %251 ]
  %256 = phi i8* [ %258, %254 ], [ %253, %251 ]
  %257 = load i8, i8* %256, align 1
  store i8 %257, i8* %255, align 1
  %258 = getelementptr inbounds i8, i8* %256, i64 1
  %259 = getelementptr inbounds i8, i8* %255, i64 1
  %260 = icmp eq i8* %258, %141
  br i1 %260, label %261, label %254, !llvm.loop !20

261:                                              ; preds = %254, %249, %156
  %262 = phi i8* [ %157, %156 ], [ %172, %249 ], [ %259, %254 ]
  store i8 0, i8* %262, align 1
  %263 = load i8, i8* %80, align 1
  %264 = icmp slt i8 %263, 0
  %265 = load i64, i64* %81, align 8
  %266 = zext i8 %263 to i64
  %267 = select i1 %264, i64 %265, i64 %266
  %268 = icmp eq i64 %267, 0
  %269 = load i32, i32* %75, align 8
  %270 = icmp eq i32 %269, 0
  %271 = and i1 %268, %270
  br i1 %271, label %272, label %274

272:                                              ; preds = %261
  %273 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %10) #8
  br i1 %273, label %292, label %276

274:                                              ; preds = %261
  %275 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %10) #8
  br i1 %275, label %292, label %276

276:                                              ; preds = %272, %274
  %277 = load i32, i32* %15, align 4
  %278 = icmp eq i32 %277, 2
  br i1 %278, label %445, label %279

279:                                              ; preds = %276
  %280 = load i8, i8* %87, align 1
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %283, label %282

282:                                              ; preds = %279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* nonnull align 8 %82, i64 24, i1 false) #8
  br label %286

283:                                              ; preds = %279
  %284 = load i8*, i8** %83, align 8
  %285 = load i64, i64* %84, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %13, i8* %284, i64 %285) #8
  br label %286

286:                                              ; preds = %282, %283
  call fastcc void @_ZN3net12_GLOBAL__N_126AddProxyURIListToProxyListENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9ProxyListENS_11ProxyServer6SchemeE(%"class.std::__1::basic_string"* nonnull %13, %"class.net::ProxyList"* %17, i32 4)
  %287 = load i8, i8* %90, align 1
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %286
  %290 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %290) #9
  br label %291

291:                                              ; preds = %286, %289
  store i32 1, i32* %15, align 4
  br label %445

292:                                              ; preds = %272, %274
  %293 = load i8, i8* %87, align 1
  %294 = icmp slt i8 %293, 0
  %295 = load i8*, i8** %83, align 8
  %296 = select i1 %294, i8* %295, i8* %82
  %297 = load i64, i64* %84, align 8
  %298 = zext i8 %293 to i64
  %299 = select i1 %294, i64 %297, i64 %298
  %300 = call i32 @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %296, i64 %299, i32 3, %"class.std::__1::basic_string"* nonnull %12) #8
  store i32 2, i32* %15, align 4
  %301 = call %"class.net::ProxyList"* @_ZN3net11ProxyConfig10ProxyRules33MapUrlSchemeToProxyListNoFallbackERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::ProxyConfig::ProxyRules"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12)
  %302 = load i8, i8* %87, align 1
  %303 = icmp slt i8 %302, 0
  %304 = load i64, i64* %84, align 8
  %305 = zext i8 %302 to i64
  %306 = select i1 %303, i64 %304, i64 %305
  %307 = icmp eq i64 %306, 5
  br i1 %307, label %308, label %311

308:                                              ; preds = %292
  %309 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %12, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #8
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %308, %292
  br label %312

312:                                              ; preds = %308, %311
  %313 = phi %"class.net::ProxyList"* [ %301, %311 ], [ %29, %308 ]
  %314 = phi i32 [ 4, %311 ], [ 8, %308 ]
  %315 = icmp eq %"class.net::ProxyList"* %313, null
  br i1 %315, label %445, label %316

316:                                              ; preds = %312
  %317 = load i8*, i8** %69, align 8, !noalias !21
  %318 = ptrtoint i8* %317 to i64
  %319 = load i8*, i8** %70, align 8, !noalias !21
  %320 = ptrtoint i8* %319 to i64
  %321 = sub i64 %320, %318
  %322 = icmp ugt i64 %321, -17
  br i1 %322, label %323, label %325

323:                                              ; preds = %316
  %324 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %324) #10
  unreachable

325:                                              ; preds = %316
  %326 = icmp ult i64 %321, 23
  br i1 %326, label %327, label %329

327:                                              ; preds = %325
  %328 = trunc i64 %321 to i8
  store i8 %328, i8* %96, align 1, !alias.scope !21
  br label %334

329:                                              ; preds = %325
  %330 = add nuw i64 %321, 16
  %331 = and i64 %330, -16
  %332 = call i8* @_Znwm(i64 %331) #9
  store i8* %332, i8** %92, align 8, !alias.scope !21
  %333 = or i64 %331, -9223372036854775808
  store i64 %333, i64* %93, align 8, !alias.scope !21
  store i64 %321, i64* %94, align 8, !alias.scope !21
  br label %334

334:                                              ; preds = %329, %327
  %335 = phi i8* [ %97, %327 ], [ %332, %329 ]
  %336 = icmp eq i8* %317, %319
  br i1 %336, label %439, label %337

337:                                              ; preds = %334
  %338 = ptrtoint i8* %319 to i64
  %339 = sub i64 %338, %318
  %340 = icmp ult i64 %339, 32
  br i1 %340, label %429, label %341

341:                                              ; preds = %337
  %342 = ptrtoint i8* %319 to i64
  %343 = sub i64 %342, %318
  %344 = getelementptr i8, i8* %335, i64 %343
  %345 = icmp ult i8* %335, %319
  %346 = icmp ult i8* %317, %344
  %347 = and i1 %345, %346
  br i1 %347, label %429, label %348

348:                                              ; preds = %341
  %349 = and i64 %339, -32
  %350 = getelementptr i8, i8* %335, i64 %349
  %351 = getelementptr i8, i8* %317, i64 %349
  %352 = add i64 %349, -32
  %353 = lshr exact i64 %352, 5
  %354 = add nuw nsw i64 %353, 1
  %355 = and i64 %354, 3
  %356 = icmp ult i64 %352, 96
  br i1 %356, label %408, label %357

357:                                              ; preds = %348
  %358 = sub nsw i64 %354, %355
  br label %359

359:                                              ; preds = %359, %357
  %360 = phi i64 [ 0, %357 ], [ %405, %359 ]
  %361 = phi i64 [ %358, %357 ], [ %406, %359 ]
  %362 = getelementptr i8, i8* %335, i64 %360
  %363 = getelementptr i8, i8* %317, i64 %360
  %364 = bitcast i8* %363 to <16 x i8>*
  %365 = load <16 x i8>, <16 x i8>* %364, align 1, !alias.scope !24
  %366 = getelementptr i8, i8* %363, i64 16
  %367 = bitcast i8* %366 to <16 x i8>*
  %368 = load <16 x i8>, <16 x i8>* %367, align 1, !alias.scope !24
  %369 = bitcast i8* %362 to <16 x i8>*
  store <16 x i8> %365, <16 x i8>* %369, align 1, !alias.scope !27, !noalias !24
  %370 = getelementptr i8, i8* %362, i64 16
  %371 = bitcast i8* %370 to <16 x i8>*
  store <16 x i8> %368, <16 x i8>* %371, align 1, !alias.scope !27, !noalias !24
  %372 = or i64 %360, 32
  %373 = getelementptr i8, i8* %335, i64 %372
  %374 = getelementptr i8, i8* %317, i64 %372
  %375 = bitcast i8* %374 to <16 x i8>*
  %376 = load <16 x i8>, <16 x i8>* %375, align 1, !alias.scope !24
  %377 = getelementptr i8, i8* %374, i64 16
  %378 = bitcast i8* %377 to <16 x i8>*
  %379 = load <16 x i8>, <16 x i8>* %378, align 1, !alias.scope !24
  %380 = bitcast i8* %373 to <16 x i8>*
  store <16 x i8> %376, <16 x i8>* %380, align 1, !alias.scope !27, !noalias !24
  %381 = getelementptr i8, i8* %373, i64 16
  %382 = bitcast i8* %381 to <16 x i8>*
  store <16 x i8> %379, <16 x i8>* %382, align 1, !alias.scope !27, !noalias !24
  %383 = or i64 %360, 64
  %384 = getelementptr i8, i8* %335, i64 %383
  %385 = getelementptr i8, i8* %317, i64 %383
  %386 = bitcast i8* %385 to <16 x i8>*
  %387 = load <16 x i8>, <16 x i8>* %386, align 1, !alias.scope !24
  %388 = getelementptr i8, i8* %385, i64 16
  %389 = bitcast i8* %388 to <16 x i8>*
  %390 = load <16 x i8>, <16 x i8>* %389, align 1, !alias.scope !24
  %391 = bitcast i8* %384 to <16 x i8>*
  store <16 x i8> %387, <16 x i8>* %391, align 1, !alias.scope !27, !noalias !24
  %392 = getelementptr i8, i8* %384, i64 16
  %393 = bitcast i8* %392 to <16 x i8>*
  store <16 x i8> %390, <16 x i8>* %393, align 1, !alias.scope !27, !noalias !24
  %394 = or i64 %360, 96
  %395 = getelementptr i8, i8* %335, i64 %394
  %396 = getelementptr i8, i8* %317, i64 %394
  %397 = bitcast i8* %396 to <16 x i8>*
  %398 = load <16 x i8>, <16 x i8>* %397, align 1, !alias.scope !24
  %399 = getelementptr i8, i8* %396, i64 16
  %400 = bitcast i8* %399 to <16 x i8>*
  %401 = load <16 x i8>, <16 x i8>* %400, align 1, !alias.scope !24
  %402 = bitcast i8* %395 to <16 x i8>*
  store <16 x i8> %398, <16 x i8>* %402, align 1, !alias.scope !27, !noalias !24
  %403 = getelementptr i8, i8* %395, i64 16
  %404 = bitcast i8* %403 to <16 x i8>*
  store <16 x i8> %401, <16 x i8>* %404, align 1, !alias.scope !27, !noalias !24
  %405 = add i64 %360, 128
  %406 = add i64 %361, -4
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %408, label %359, !llvm.loop !29

408:                                              ; preds = %359, %348
  %409 = phi i64 [ 0, %348 ], [ %405, %359 ]
  %410 = icmp eq i64 %355, 0
  br i1 %410, label %427, label %411

411:                                              ; preds = %408, %411
  %412 = phi i64 [ %424, %411 ], [ %409, %408 ]
  %413 = phi i64 [ %425, %411 ], [ %355, %408 ]
  %414 = getelementptr i8, i8* %335, i64 %412
  %415 = getelementptr i8, i8* %317, i64 %412
  %416 = bitcast i8* %415 to <16 x i8>*
  %417 = load <16 x i8>, <16 x i8>* %416, align 1, !alias.scope !24
  %418 = getelementptr i8, i8* %415, i64 16
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !24
  %421 = bitcast i8* %414 to <16 x i8>*
  store <16 x i8> %417, <16 x i8>* %421, align 1, !alias.scope !27, !noalias !24
  %422 = getelementptr i8, i8* %414, i64 16
  %423 = bitcast i8* %422 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %423, align 1, !alias.scope !27, !noalias !24
  %424 = add i64 %412, 32
  %425 = add i64 %413, -1
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %427, label %411, !llvm.loop !30

427:                                              ; preds = %411, %408
  %428 = icmp eq i64 %339, %349
  br i1 %428, label %439, label %429

429:                                              ; preds = %427, %341, %337
  %430 = phi i8* [ %335, %341 ], [ %335, %337 ], [ %350, %427 ]
  %431 = phi i8* [ %317, %341 ], [ %317, %337 ], [ %351, %427 ]
  br label %432

432:                                              ; preds = %429, %432
  %433 = phi i8* [ %437, %432 ], [ %430, %429 ]
  %434 = phi i8* [ %436, %432 ], [ %431, %429 ]
  %435 = load i8, i8* %434, align 1
  store i8 %435, i8* %433, align 1
  %436 = getelementptr inbounds i8, i8* %434, i64 1
  %437 = getelementptr inbounds i8, i8* %433, i64 1
  %438 = icmp eq i8* %436, %319
  br i1 %438, label %439, label %432, !llvm.loop !31

439:                                              ; preds = %432, %427, %334
  %440 = phi i8* [ %335, %334 ], [ %350, %427 ], [ %437, %432 ]
  store i8 0, i8* %440, align 1
  call fastcc void @_ZN3net12_GLOBAL__N_126AddProxyURIListToProxyListENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9ProxyListENS_11ProxyServer6SchemeE(%"class.std::__1::basic_string"* nonnull %14, %"class.net::ProxyList"* nonnull %313, i32 %314)
  %441 = load i8, i8* %96, align 1
  %442 = icmp slt i8 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %439
  %444 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %444) #9
  br label %445

445:                                              ; preds = %443, %439, %312, %276, %291
  %446 = phi i32 [ 1, %291 ], [ 4, %276 ], [ 0, %312 ], [ 0, %439 ], [ 0, %443 ]
  %447 = load i8, i8* %87, align 1
  %448 = icmp slt i8 %447, 0
  br i1 %448, label %449, label %451

449:                                              ; preds = %445
  %450 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %450) #9
  br label %451

451:                                              ; preds = %445, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #8
  switch i32 %446, label %456 [
    i32 0, label %452
    i32 4, label %452
  ]

452:                                              ; preds = %451, %451
  %453 = load i8, i8* %80, align 1
  %454 = load i64, i64* %81, align 8
  %455 = load i32, i32* %75, align 8
  br label %124

456:                                              ; preds = %134, %136, %451
  %457 = phi i32 [ %446, %451 ], [ 0, %136 ], [ 0, %134 ]
  %458 = load i8, i8* %80, align 1
  %459 = icmp slt i8 %458, 0
  br i1 %459, label %460, label %462

460:                                              ; preds = %456
  %461 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %461) #9
  br label %462

462:                                              ; preds = %460, %456
  %463 = load i8, i8* %99, align 1
  %464 = icmp slt i8 %463, 0
  br i1 %464, label %465, label %467

465:                                              ; preds = %462
  %466 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %466) #9
  br label %467

467:                                              ; preds = %462, %465
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %64) #8
  %468 = icmp eq i32 %457, 0
  br i1 %468, label %469, label %473

469:                                              ; preds = %467
  %470 = load i8, i8* %62, align 1
  %471 = load i64, i64* %63, align 8
  %472 = load i32, i32* %57, align 8
  br label %107

473:                                              ; preds = %117, %119, %467
  %474 = load i8, i8* %62, align 1
  %475 = icmp slt i8 %474, 0
  br i1 %475, label %476, label %479

476:                                              ; preds = %473
  %477 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load i8*, i8** %477, align 8
  call void @_ZdlPv(i8* %478) #9
  br label %479

479:                                              ; preds = %476, %473
  %480 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %481 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %480, i64 0, i32 1, i32 0
  %482 = load i8, i8* %481, align 1
  %483 = icmp slt i8 %482, 0
  br i1 %483, label %484, label %487

484:                                              ; preds = %479
  %485 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load i8*, i8** %485, align 8
  call void @_ZdlPv(i8* %486) #9
  br label %487

487:                                              ; preds = %479, %484
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %31) #8
  ret void
}

declare dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSEOS0_(%"class.net::ProxyList"*, %"class.net::ProxyList"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_126AddProxyURIListToProxyListENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9ProxyListENS_11ProxyServer6SchemeE(%"class.std::__1::basic_string"*, %"class.net::ProxyList"*, i32) unnamed_addr #0 {
  %4 = alloca %"class.base::StringTokenizerT", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::ProxyServer", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.base::StringTokenizerT"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 96, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 1, i8* %11, align 1
  store i8 44, i8* %9, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 2, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 3, i32 0
  %17 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #8
  %22 = load i8, i8* %19, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %29 = zext i8 %22 to i64
  %30 = select i1 %23, i8* %25, i8* %28
  %31 = select i1 %23, i64 %27, i64 %29
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %30, i8** %13, align 8
  store i8* %30, i8** %14, align 8
  store i8* %30, i8** %15, align 8
  store i8* %32, i8** %16, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %9, i64 24, i1 false) #8
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 6
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 7
  store i8 1, i8* %35, align 4
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 9
  store i32 0, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  %37 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.net::ProxyServer"* %6 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2
  %49 = bitcast %"class.net::HostPortPair"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %207, %3
  %53 = phi i32 [ %210, %207 ], [ 0, %3 ]
  %54 = phi i64 [ %209, %207 ], [ 0, %3 ]
  %55 = phi i8 [ %208, %207 ], [ 0, %3 ]
  %56 = icmp slt i8 %55, 0
  %57 = zext i8 %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  %59 = icmp eq i64 %58, 0
  %60 = icmp eq i32 %53, 0
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %52
  %63 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #8
  br i1 %63, label %66, label %211

64:                                               ; preds = %52
  %65 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #8
  br i1 %65, label %66, label %211

66:                                               ; preds = %62, %64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8
  %67 = load i8*, i8** %14, align 8, !noalias !32
  %68 = ptrtoint i8* %67 to i64
  %69 = load i8*, i8** %15, align 8, !noalias !32
  %70 = ptrtoint i8* %69 to i64
  %71 = sub i64 %70, %68
  %72 = icmp ugt i64 %71, -17
  br i1 %72, label %73, label %75

73:                                               ; preds = %66
  %74 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %74) #10
  unreachable

75:                                               ; preds = %66
  %76 = icmp ult i64 %71, 23
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = trunc i64 %71 to i8
  store i8 %78, i8* %47, align 1, !alias.scope !32
  br label %84

79:                                               ; preds = %75
  %80 = add nuw i64 %71, 16
  %81 = and i64 %80, -16
  %82 = call i8* @_Znwm(i64 %81) #9
  store i8* %82, i8** %43, align 8, !alias.scope !32
  %83 = or i64 %81, -9223372036854775808
  store i64 %83, i64* %44, align 8, !alias.scope !32
  store i64 %71, i64* %45, align 8, !alias.scope !32
  br label %84

84:                                               ; preds = %79, %77
  %85 = phi i8* [ %42, %77 ], [ %82, %79 ]
  %86 = icmp eq i8* %67, %69
  br i1 %86, label %189, label %87

87:                                               ; preds = %84
  %88 = ptrtoint i8* %69 to i64
  %89 = sub i64 %88, %68
  %90 = icmp ult i64 %89, 32
  br i1 %90, label %179, label %91

91:                                               ; preds = %87
  %92 = ptrtoint i8* %69 to i64
  %93 = sub i64 %92, %68
  %94 = getelementptr i8, i8* %85, i64 %93
  %95 = icmp ult i8* %85, %69
  %96 = icmp ult i8* %67, %94
  %97 = and i1 %95, %96
  br i1 %97, label %179, label %98

98:                                               ; preds = %91
  %99 = and i64 %89, -32
  %100 = getelementptr i8, i8* %85, i64 %99
  %101 = getelementptr i8, i8* %67, i64 %99
  %102 = add i64 %99, -32
  %103 = lshr exact i64 %102, 5
  %104 = add nuw nsw i64 %103, 1
  %105 = and i64 %104, 3
  %106 = icmp ult i64 %102, 96
  br i1 %106, label %158, label %107

107:                                              ; preds = %98
  %108 = sub nsw i64 %104, %105
  br label %109

109:                                              ; preds = %109, %107
  %110 = phi i64 [ 0, %107 ], [ %155, %109 ]
  %111 = phi i64 [ %108, %107 ], [ %156, %109 ]
  %112 = getelementptr i8, i8* %85, i64 %110
  %113 = getelementptr i8, i8* %67, i64 %110
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !35
  %116 = getelementptr i8, i8* %113, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !35
  %119 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %119, align 1, !alias.scope !38, !noalias !35
  %120 = getelementptr i8, i8* %112, i64 16
  %121 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %121, align 1, !alias.scope !38, !noalias !35
  %122 = or i64 %110, 32
  %123 = getelementptr i8, i8* %85, i64 %122
  %124 = getelementptr i8, i8* %67, i64 %122
  %125 = bitcast i8* %124 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !35
  %127 = getelementptr i8, i8* %124, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !35
  %130 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %130, align 1, !alias.scope !38, !noalias !35
  %131 = getelementptr i8, i8* %123, i64 16
  %132 = bitcast i8* %131 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %132, align 1, !alias.scope !38, !noalias !35
  %133 = or i64 %110, 64
  %134 = getelementptr i8, i8* %85, i64 %133
  %135 = getelementptr i8, i8* %67, i64 %133
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !35
  %138 = getelementptr i8, i8* %135, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !alias.scope !35
  %141 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1, !alias.scope !38, !noalias !35
  %142 = getelementptr i8, i8* %134, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1, !alias.scope !38, !noalias !35
  %144 = or i64 %110, 96
  %145 = getelementptr i8, i8* %85, i64 %144
  %146 = getelementptr i8, i8* %67, i64 %144
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !35
  %149 = getelementptr i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !35
  %152 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 1, !alias.scope !38, !noalias !35
  %153 = getelementptr i8, i8* %145, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %151, <16 x i8>* %154, align 1, !alias.scope !38, !noalias !35
  %155 = add i64 %110, 128
  %156 = add i64 %111, -4
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %109, !llvm.loop !40

158:                                              ; preds = %109, %98
  %159 = phi i64 [ 0, %98 ], [ %155, %109 ]
  %160 = icmp eq i64 %105, 0
  br i1 %160, label %177, label %161

161:                                              ; preds = %158, %161
  %162 = phi i64 [ %174, %161 ], [ %159, %158 ]
  %163 = phi i64 [ %175, %161 ], [ %105, %158 ]
  %164 = getelementptr i8, i8* %85, i64 %162
  %165 = getelementptr i8, i8* %67, i64 %162
  %166 = bitcast i8* %165 to <16 x i8>*
  %167 = load <16 x i8>, <16 x i8>* %166, align 1, !alias.scope !35
  %168 = getelementptr i8, i8* %165, i64 16
  %169 = bitcast i8* %168 to <16 x i8>*
  %170 = load <16 x i8>, <16 x i8>* %169, align 1, !alias.scope !35
  %171 = bitcast i8* %164 to <16 x i8>*
  store <16 x i8> %167, <16 x i8>* %171, align 1, !alias.scope !38, !noalias !35
  %172 = getelementptr i8, i8* %164, i64 16
  %173 = bitcast i8* %172 to <16 x i8>*
  store <16 x i8> %170, <16 x i8>* %173, align 1, !alias.scope !38, !noalias !35
  %174 = add i64 %162, 32
  %175 = add i64 %163, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %161, !llvm.loop !41

177:                                              ; preds = %161, %158
  %178 = icmp eq i64 %89, %99
  br i1 %178, label %189, label %179

179:                                              ; preds = %177, %91, %87
  %180 = phi i8* [ %85, %91 ], [ %85, %87 ], [ %100, %177 ]
  %181 = phi i8* [ %67, %91 ], [ %67, %87 ], [ %101, %177 ]
  br label %182

182:                                              ; preds = %179, %182
  %183 = phi i8* [ %187, %182 ], [ %180, %179 ]
  %184 = phi i8* [ %186, %182 ], [ %181, %179 ]
  %185 = load i8, i8* %184, align 1
  store i8 %185, i8* %183, align 1
  %186 = getelementptr inbounds i8, i8* %184, i64 1
  %187 = getelementptr inbounds i8, i8* %183, i64 1
  %188 = icmp eq i8* %186, %69
  br i1 %188, label %189, label %182, !llvm.loop !42

189:                                              ; preds = %182, %177, %84
  %190 = phi i8* [ %85, %84 ], [ %100, %177 ], [ %187, %182 ]
  store i8 0, i8* %190, align 1
  %191 = load i8, i8* %47, align 1
  %192 = icmp slt i8 %191, 0
  %193 = load i8*, i8** %43, align 8
  %194 = select i1 %192, i8* %193, i8* %42
  %195 = load i64, i64* %45, align 8
  %196 = zext i8 %191 to i64
  %197 = select i1 %192, i64 %195, i64 %196
  call void @_ZN3net11ProxyServer7FromURIEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_6SchemeE(%"class.net::ProxyServer"* nonnull sret %6, i8* %194, i64 %197, i32 %2) #8
  call void @_ZN3net9ProxyList14AddProxyServerERKNS_11ProxyServerE(%"class.net::ProxyList"* %1, %"class.net::ProxyServer"* nonnull dereferenceable(40) %6) #8
  %198 = load i8, i8* %50, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %189
  %201 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %201) #9
  br label %202

202:                                              ; preds = %189, %200
  %203 = load i8, i8* %47, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %202
  %206 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %206) #9
  br label %207

207:                                              ; preds = %202, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #8
  %208 = load i8, i8* %39, align 1
  %209 = load i64, i64* %40, align 8
  %210 = load i32, i32* %34, align 8
  br label %52

211:                                              ; preds = %62, %64
  %212 = load i8, i8* %39, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #9
  br label %217

217:                                              ; preds = %214, %211
  %218 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  %220 = load i8, i8* %219, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  call void @_ZdlPv(i8* %224) #9
  br label %225

225:                                              ; preds = %217, %222
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #8
  ret void
}

declare i32 @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ProxyList"* @_ZN3net11ProxyConfig10ProxyRules33MapUrlSchemeToProxyListNoFallbackERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.net::ProxyConfig::ProxyRules"* readnone, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 4
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = load i8, i8* %4, align 1
  %17 = load i64, i64* %7, align 8
  %18 = zext i8 %16 to i64
  br label %21

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  br label %49

21:                                               ; preds = %15, %2
  %22 = phi i64 [ %18, %15 ], [ %9, %2 ]
  %23 = phi i64 [ %17, %15 ], [ %8, %2 ]
  %24 = phi i8 [ %16, %15 ], [ %5, %2 ]
  %25 = icmp slt i8 %24, 0
  %26 = select i1 %25, i64 %23, i64 %22
  %27 = icmp eq i64 %26, 5
  br i1 %27, label %28, label %37

28:                                               ; preds = %21
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = load i8, i8* %4, align 1
  %33 = load i64, i64* %7, align 8
  %34 = zext i8 %32 to i64
  br label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  br label %49

37:                                               ; preds = %31, %21
  %38 = phi i64 [ %34, %31 ], [ %22, %21 ]
  %39 = phi i64 [ %33, %31 ], [ %23, %21 ]
  %40 = phi i8 [ %32, %31 ], [ %24, %21 ]
  %41 = icmp slt i8 %40, 0
  %42 = select i1 %41, i64 %39, i64 %38
  %43 = icmp eq i64 %42, 3
  br i1 %43, label %44, label %49

44:                                               ; preds = %37
  %45 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #8
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 6
  %48 = select i1 %46, %"class.net::ProxyList"* %47, %"class.net::ProxyList"* null
  ret %"class.net::ProxyList"* %48

49:                                               ; preds = %19, %35, %37
  %50 = phi %"class.net::ProxyList"* [ null, %37 ], [ %20, %19 ], [ %36, %35 ]
  ret %"class.net::ProxyList"* %50
}

declare zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ProxyList"* @_ZNK3net11ProxyConfig10ProxyRules30GetProxyListForWebSocketSchemeEv(%"struct.net::ProxyConfig::ProxyRules"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  %3 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %2) #8
  br i1 %3, label %4, label %11

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  %6 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %5) #8
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  %9 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %8) #8
  %10 = select i1 %9, %"class.net::ProxyList"* null, %"class.net::ProxyList"* %8
  br label %11

11:                                               ; preds = %7, %4, %1
  %12 = phi %"class.net::ProxyList"* [ %2, %1 ], [ %5, %4 ], [ %10, %7 ]
  ret %"class.net::ProxyList"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net11ProxyConfig10ProxyRules6EqualsERKS1_(%"struct.net::ProxyConfig::ProxyRules"*, %"struct.net::ProxyConfig::ProxyRules"* dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %38

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 3
  %11 = tail call zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"* %9, %"class.net::ProxyList"* dereferenceable(24) %10) #8
  br i1 %11, label %12, label %38

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 4
  %15 = tail call zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"* %13, %"class.net::ProxyList"* dereferenceable(24) %14) #8
  br i1 %15, label %16, label %38

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 5
  %19 = tail call zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"* %17, %"class.net::ProxyList"* dereferenceable(24) %18) #8
  br i1 %19, label %20, label %38

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 6
  %23 = tail call zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"* %21, %"class.net::ProxyList"* dereferenceable(24) %22) #8
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 7
  %26 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 7
  %27 = tail call zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"* %25, %"class.net::ProxyList"* dereferenceable(24) %26) #8
  br i1 %27, label %28, label %38

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZNK3net16ProxyBypassRuleseqERKS0_(%"class.net::ProxyBypassRules"* %29, %"class.net::ProxyBypassRules"* dereferenceable(24) %30) #8
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %0, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = getelementptr inbounds %"struct.net::ProxyConfig::ProxyRules", %"struct.net::ProxyConfig::ProxyRules"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %34, %36
  br label %38

38:                                               ; preds = %32, %28, %24, %20, %16, %12, %8, %2
  %39 = phi i1 [ false, %28 ], [ false, %24 ], [ false, %20 ], [ false, %16 ], [ false, %12 ], [ false, %8 ], [ false, %2 ], [ %37, %32 ]
  ret i1 %39
}

declare zeroext i1 @_ZNK3net9ProxyList6EqualsERKS0_(%"class.net::ProxyList"*, %"class.net::ProxyList"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net16ProxyBypassRuleseqERKS0_(%"class.net::ProxyBypassRules"*, %"class.net::ProxyBypassRules"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfigC2Ev(%"class.net::ProxyConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %3) #8
  %4 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3net16ProxyBypassRulesC1Ev(%"class.net::ProxyBypassRules"* %5) #8
  %6 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 3
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %8) #8
  %9 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 4
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %9) #8
  %10 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %10) #8
  %11 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %11) #8
  %12 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 7
  tail call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* %12) #8
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfigC2ERKS0_(%"class.net::ProxyConfig"*, %"class.net::ProxyConfig"* dereferenceable(288)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  store i8 %5, i8* %3, align 8
  %6 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #8
  %8 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  store i8 %10, i8* %8, align 8
  %11 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 0
  %12 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 0
  tail call void @_ZN3net16ProxyBypassRulesC1ERKS0_(%"class.net::ProxyBypassRules"* %11, %"class.net::ProxyBypassRules"* dereferenceable(24) %12) #8
  %13 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 1
  %14 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 1
  %15 = bitcast i8* %14 to i64*
  %16 = bitcast i8* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 3
  %19 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 3
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %18, %"class.net::ProxyList"* dereferenceable(24) %19) #8
  %20 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 4
  %21 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 4
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %20, %"class.net::ProxyList"* dereferenceable(24) %21) #8
  %22 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 5
  %23 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 5
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %22, %"class.net::ProxyList"* dereferenceable(24) %23) #8
  %24 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 6
  %25 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 6
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %24, %"class.net::ProxyList"* dereferenceable(24) %25) #8
  %26 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 7
  %27 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 7
  tail call void @_ZN3net9ProxyListC1ERKS0_(%"class.net::ProxyList"* %26, %"class.net::ProxyList"* dereferenceable(24) %27) #8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfigD2Ev(%"class.net::ProxyConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 7
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %2) #8
  %3 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 6
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %3) #8
  %4 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 5
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %4) #8
  %5 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 4
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %5) #8
  %6 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 3
  tail call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* %6) #8
  %7 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3net16ProxyBypassRulesD1Ev(%"class.net::ProxyBypassRules"* %7) #8
  %8 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %8) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(288) %"class.net::ProxyConfig"* @_ZN3net11ProxyConfigaSERKS0_(%"class.net::ProxyConfig"* returned, %"class.net::ProxyConfig"* dereferenceable(288)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %6, %class.GURL* dereferenceable(120) %7) #8
  %9 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 2
  store i8 %10, i8* %11, align 8
  %12 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 0
  %14 = tail call dereferenceable(24) %"class.net::ProxyBypassRules"* @_ZN3net16ProxyBypassRulesaSERKS0_(%"class.net::ProxyBypassRules"* %12, %"class.net::ProxyBypassRules"* dereferenceable(24) %13) #8
  %15 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 1
  %16 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 1
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %15 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 3
  %21 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 3
  %22 = tail call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"* %20, %"class.net::ProxyList"* dereferenceable(24) %21) #8
  %23 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 4
  %24 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 4
  %25 = tail call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"* %23, %"class.net::ProxyList"* dereferenceable(24) %24) #8
  %26 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 5
  %27 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 5
  %28 = tail call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"* %26, %"class.net::ProxyList"* dereferenceable(24) %27) #8
  %29 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 6
  %30 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 6
  %31 = tail call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"* %29, %"class.net::ProxyList"* dereferenceable(24) %30) #8
  %32 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3, i32 7
  %33 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 7
  %34 = tail call dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"* %32, %"class.net::ProxyList"* dereferenceable(24) %33) #8
  ret %"class.net::ProxyConfig"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net11ProxyConfig6EqualsERKS0_(%"class.net::ProxyConfig"*, %"class.net::ProxyConfig"* dereferenceable(288)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %22

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 1
  %11 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %9, %class.GURL* dereferenceable(120) %10) #8
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3
  %21 = tail call zeroext i1 @_ZNK3net11ProxyConfig10ProxyRules6EqualsERKS1_(%"struct.net::ProxyConfig::ProxyRules"* %19, %"struct.net::ProxyConfig::ProxyRules"* dereferenceable(152) %20)
  br label %22

22:                                               ; preds = %18, %12, %8, %2
  %23 = phi i1 [ false, %12 ], [ false, %8 ], [ false, %2 ], [ %21, %18 ]
  ret i1 %23
}

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net11ProxyConfig20HasAutomaticSettingsEv(%"class.net::ProxyConfig"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11ProxyConfig22ClearAutomaticSettingsEv(%"class.net::ProxyConfig"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %4) #8
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %2) #8
  %5 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %0, i64 0, i32 1
  %6 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %5, %class.GURL* nonnull dereferenceable(120) %2) #8
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11ProxyConfig7ToValueEv(%"class.base::Value"* noalias sret, %"class.net::ProxyConfig"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.base::Value", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #8
  %12 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = tail call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i64 11, i1 zeroext true) #8
  br label %17

17:                                               ; preds = %2, %15
  %18 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %41, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %25 to i64
  %34 = select i1 %26, i64 %32, i64 %33
  %35 = tail call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7, i8* %30, i64 %34) #8
  %36 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %21
  %40 = tail call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 13, i1 zeroext true) #8
  br label %41

41:                                               ; preds = %17, %21, %39
  %42 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 2
  %43 = load i32, i32* %42, align 4
  switch i32 %43, label %78 [
    i32 0, label %118
    i32 1, label %44
    i32 2, label %50
  ]

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 3
  %46 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %45) #8
  br i1 %46, label %78, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.base::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #8
  call void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* nonnull sret %7, %"class.net::ProxyList"* %45) #8
  %49 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %7) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #8
  br label %78

50:                                               ; preds = %41
  %51 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #8
  %52 = bitcast %"class.base::Value"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %8, i8 zeroext 6) #8
  %53 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 4
  %54 = call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %53) #8
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #8
  call void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* nonnull sret %6, %"class.net::ProxyList"* %53) #8
  %57 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %6) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %50, %55
  %59 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 5
  %60 = call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %59) #8
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #8
  call void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* nonnull sret %5, %"class.net::ProxyList"* %59) #8
  %63 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %5) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #8
  br label %64

64:                                               ; preds = %58, %61
  %65 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 6
  %66 = call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %65) #8
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #8
  call void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* nonnull sret %4, %"class.net::ProxyList"* %65) #8
  %69 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %4) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #8
  br label %70

70:                                               ; preds = %64, %67
  %71 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 7
  %72 = call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %71) #8
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #8
  call void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* nonnull sret %3, %"class.net::ProxyList"* %71) #8
  %75 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %3) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #8
  br label %76

76:                                               ; preds = %70, %73
  %77 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %8) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #8
  br label %78

78:                                               ; preds = %47, %44, %41, %76
  %79 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %79, align 8
  %81 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %81, align 8
  %83 = icmp eq %"class.std::__1::unique_ptr"* %80, %82
  br i1 %83, label %118, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %1, i64 0, i32 3, i32 1
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i64 14, i1 zeroext true) #8
  br label %90

90:                                               ; preds = %84, %88
  %91 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #8
  %92 = bitcast %"class.base::Value"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %9, i8 zeroext 7) #8
  %93 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %79, align 8
  %94 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %81, align 8
  %95 = icmp eq %"class.std::__1::unique_ptr"* %93, %94
  br i1 %95, label %101, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %103

101:                                              ; preds = %115, %90
  %102 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %9) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #8
  br label %118

103:                                              ; preds = %96, %115
  %104 = phi %"class.std::__1::unique_ptr"* [ %93, %96 ], [ %116, %115 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.net::SchemeHostPortMatcherRule"*, %"class.net::SchemeHostPortMatcherRule"** %105, align 8
  %107 = bitcast %"class.net::SchemeHostPortMatcherRule"* %106 to void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)***
  %108 = load void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)**, void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)** %108, i64 3
  %110 = load void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SchemeHostPortMatcherRule"*)** %109, align 8
  call void %110(%"class.std::__1::basic_string"* nonnull sret %10, %"class.net::SchemeHostPortMatcherRule"* %106) #8
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #8
  %111 = load i8, i8* %99, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %114) #9
  br label %115

115:                                              ; preds = %103, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  %117 = icmp eq %"class.std::__1::unique_ptr"* %116, %94
  br i1 %117, label %101, label %103

118:                                              ; preds = %41, %101, %78
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.9"* dereferenceable(1)) unnamed_addr #1

declare void @_ZN3net9ProxyList14AddProxyServerERKNS_11ProxyServerE(%"class.net::ProxyList"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN3net11ProxyServer7FromURIEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_6SchemeE(%"class.net::ProxyServer"* sret, i8*, i64, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.net::ProxyBypassRules"* @_ZN3net16ProxyBypassRulesaSERKS0_(%"class.net::ProxyBypassRules"*, %"class.net::ProxyBypassRules"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.net::ProxyList"* @_ZN3net9ProxyListaSERKS0_(%"class.net::ProxyList"*, %"class.net::ProxyList"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3net9ProxyList7ToValueEv(%"class.base::Value"* sret, %"class.net::ProxyList"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #8
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #8
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #8
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #8
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!5 = distinct !{!5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!6 = distinct !{!6, !7, !"_ZNK4GURL6schemeEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4GURL6schemeEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !17}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !17}
!30 = distinct !{!30, !19}
!31 = distinct !{!31, !17}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !17}
!41 = distinct !{!41, !19}
!42 = distinct !{!42, !17}
