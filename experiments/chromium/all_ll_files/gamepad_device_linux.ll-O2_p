; ModuleID = '../../device/gamepad/gamepad_device_linux.cc'
source_filename = "../../device/gamepad/gamepad_device_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.device::GamepadDeviceLinux" = type { %"class.device::AbstractHapticGamepad", %"class.std::__1::basic_string", %"class.base::ScopedGeneric", i32, %"class.std::__1::vector", i32, i16, i16, i16, i16, %"class.std::__1::basic_string", %"class.base::ScopedGeneric", i32, i8, i8, %"class.std::__1::vector.9", %"class.base::ScopedGeneric", i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.38", %class.scoped_refptr.1, %class.scoped_refptr.1, %"class.base::WeakPtrFactory.45" }
%"class.device::AbstractHapticGamepad" = type { i32 (...)**, i8, i8, i32, %"class.base::OnceCallback", %class.scoped_refptr.1 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.device::Dualshock4Controller"* }
%"class.device::Dualshock4Controller" = type { %"class.device::AbstractHapticGamepad", i32, i32, %"class.std::__1::unique_ptr.17", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.device::HidWriter"* }
%"class.device::HidWriter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.22", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.device::XboxHidController"* }
%"class.device::XboxHidController" = type { %"class.device::AbstractHapticGamepad", %"class.std::__1::unique_ptr.17", %"class.base::WeakPtrFactory.34" }
%"class.base::WeakPtrFactory.34" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.device::HidHapticGamepad"* }
%"class.device::HidHapticGamepad" = type { %"class.device::AbstractHapticGamepad", i8, i64, i64, i64, i64, i32, i32, %"class.std::__1::unique_ptr.17", %"class.base::WeakPtrFactory.41" }
%"class.base::WeakPtrFactory.41" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtrFactory.45" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.device::Gamepad" = type <{ i8, i8, [128 x i16], [2 x i8], i64, i32, i32, [16 x double], i32, [32 x %"class.device::GamepadButton"], %"class.device::GamepadHapticActuator", i32, %"class.device::GamepadPose", i32, i32, i8, [3 x i8] }>
%"class.device::GamepadButton" = type <{ i8, i8, i8, i8, double }>
%"class.device::GamepadHapticActuator" = type { i8, i32 }
%"class.device::GamepadPose" = type { i8, i8, i8, %"class.device::GamepadQuaternion", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector", %"class.device::GamepadVector" }
%"class.device::GamepadQuaternion" = type { i8, float, float, float, float }
%"class.device::GamepadVector" = type { i8, float, float, float }
%struct.js_event = type { i32, i16, i8, i8 }
%struct.input_event = type { %struct.timeval, i16, i16, i32 }
%struct.timeval = type { i64, i64 }
%"class.device::UdevGamepadLinux" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%struct.udev_device = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.device::GamepadIdList" = type { i8 }
%"class.base::OnceCallback.46" = type { %"class.base::internal::CallbackBase" }
%struct.hidraw_devinfo = type { i32, i16, i16 }
%"class.device::HidWriterLinux" = type <{ %"class.device::HidWriter", i32, [4 x i8] }>
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon.60 }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon.60 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.54" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZTVN6device18GamepadDeviceLinuxE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.device::GamepadDeviceLinux"*)* @_ZN6device18GamepadDeviceLinuxD2Ev to i8*), i8* bitcast (void (%"class.device::GamepadDeviceLinux"*)* @_ZN6device18GamepadDeviceLinuxD0Ev to i8*), i8* bitcast (void (%"class.device::GamepadDeviceLinux"*, double, double)* @_ZN6device18GamepadDeviceLinux12SetVibrationEdd to i8*), i8* bitcast (void (%"class.device::GamepadDeviceLinux"*)* @_ZN6device18GamepadDeviceLinux16SetZeroVibrationEv to i8*), i8* bitcast (double (%"class.device::AbstractHapticGamepad"*)* @_ZN6device21AbstractHapticGamepad26GetMaxEffectDurationMillisEv to i8*), i8* bitcast (void (%"class.base::WeakPtr"*, %"class.device::GamepadDeviceLinux"*)* @_ZN6device18GamepadDeviceLinux10GetWeakPtrEv to i8*), i8* bitcast (void (%"class.device::GamepadDeviceLinux"*)* @_ZN6device18GamepadDeviceLinux10DoShutdownEv to i8*)] }, align 8
@_ZN6device12_GLOBAL__N_115kInputSubsystemE = internal constant [6 x i8] c"input\00", align 1
@.str = private unnamed_addr constant [10 x i8] c"id/vendor\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"id/product\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"id/version\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@_ZN6device12_GLOBAL__N_113kUsbSubsystemE = internal constant [4 x i8] c"usb\00", align 1
@_ZN6device12_GLOBAL__N_114kUsbDeviceTypeE = internal constant [11 x i8] c"usb_device\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"idVendor\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"idProduct\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"manufacturer\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"product\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"bcdDevice\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6device18GamepadDeviceLinuxC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE13scoped_refptrIN4base19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.device::GamepadDeviceLinux"*, %"class.std::__1::basic_string"*, %"class.base::SequencedTaskRunner"*), void (%"class.device::GamepadDeviceLinux"*, %"class.std::__1::basic_string"*, %"class.base::SequencedTaskRunner"*)* @_ZN6device18GamepadDeviceLinuxC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE13scoped_refptrIN4base19SequencedTaskRunnerEE
@_ZN6device18GamepadDeviceLinuxD1Ev = hidden unnamed_addr alias void (%"class.device::GamepadDeviceLinux"*), void (%"class.device::GamepadDeviceLinux"*)* @_ZN6device18GamepadDeviceLinuxD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinuxC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.device::GamepadDeviceLinux"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepadC2Ev(%"class.device::AbstractHapticGamepad"* %4) #14
  %5 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device18GamepadDeviceLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #14
  br label %19

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %16, i64 %18) #14
  br label %19

19:                                               ; preds = %11, %14
  %20 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 1, i32 0
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 2
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 3
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 1
  %26 = tail call i8* @_Znwm(i64 8) #15
  %27 = bitcast %"class.std::__1::vector"* %24 to i8**
  store i8* %26, i8** %27, align 8
  %28 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 32, i64 1>, <2 x i64>* %28, align 8
  %29 = bitcast i8* %26 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 5
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10
  %32 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #14
  %33 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  store i32 -1, i32* %34, align 4
  %35 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 2
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 12
  store i32 -1, i32* %36, align 8
  %37 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 13
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15
  %40 = bitcast %"class.std::__1::vector.9"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #14
  %41 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16, i32 1, i32 0
  store i32 -1, i32* %42, align 4
  %43 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16, i32 2
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 17
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18
  %46 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 21, i32 0
  %47 = bitcast %"class.std::__1::unique_ptr"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false)
  store %"class.base::SequencedTaskRunner"* %2, %"class.base::SequencedTaskRunner"** %46, align 8
  %48 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %19
  %50 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %19, %49
  %53 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #14
  %54 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %53, i64 0, i32 0
  %55 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %54, align 8
  %56 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 22, i32 0
  store %"class.base::SequencedTaskRunner"* %55, %"class.base::SequencedTaskRunner"** %56, align 8
  %57 = icmp eq %"class.base::SequencedTaskRunner"* %55, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %55, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  br label %61

61:                                               ; preds = %52, %58
  %62 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 23, i32 0
  %63 = ptrtoint %"class.device::GamepadDeviceLinux"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %62, i64 %63) #14
  br i1 %48, label %72, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw sub i32* %66, i32 1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %65, i64 -2
  %71 = bitcast %"class.base::RefCountedThreadSafe.2"* %70 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %71) #14
  br label %72

72:                                               ; preds = %61, %64, %69
  ret void
}

declare void @_ZN6device21AbstractHapticGamepadC2Ev(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %class.scoped_refptr.1* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinuxD2Ev(%"class.device::GamepadDeviceLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN6device18GamepadDeviceLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 23, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #14
  %4 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 22, i32 0
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SequencedTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.2"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #14
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 21, i32 0
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SequencedTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.2"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #14
  br label %27

27:                                               ; preds = %15, %19, %24
  %28 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %29 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %28, align 8
  store %"class.device::HidHapticGamepad"* null, %"class.device::HidHapticGamepad"** %28, align 8
  %30 = icmp eq %"class.device::HidHapticGamepad"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.device::HidHapticGamepad"* %29 to void (%"class.device::HidHapticGamepad"*)***
  %33 = load void (%"class.device::HidHapticGamepad"*)**, void (%"class.device::HidHapticGamepad"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.device::HidHapticGamepad"*)*, void (%"class.device::HidHapticGamepad"*)** %33, i64 1
  %35 = load void (%"class.device::HidHapticGamepad"*)*, void (%"class.device::HidHapticGamepad"*)** %34, align 8
  tail call void %35(%"class.device::HidHapticGamepad"* nonnull %29) #14
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %38 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %37, align 8
  store %"class.device::XboxHidController"* null, %"class.device::XboxHidController"** %37, align 8
  %39 = icmp eq %"class.device::XboxHidController"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.device::XboxHidController"* %38 to void (%"class.device::XboxHidController"*)***
  %42 = load void (%"class.device::XboxHidController"*)**, void (%"class.device::XboxHidController"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.device::XboxHidController"*)*, void (%"class.device::XboxHidController"*)** %42, i64 1
  %44 = load void (%"class.device::XboxHidController"*)*, void (%"class.device::XboxHidController"*)** %43, align 8
  tail call void %44(%"class.device::XboxHidController"* nonnull %38) #14
  br label %45

45:                                               ; preds = %36, %40
  %46 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %47 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %46, align 8
  store %"class.device::Dualshock4Controller"* null, %"class.device::Dualshock4Controller"** %46, align 8
  %48 = icmp eq %"class.device::Dualshock4Controller"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.device::Dualshock4Controller"* %47 to void (%"class.device::Dualshock4Controller"*)***
  %51 = load void (%"class.device::Dualshock4Controller"*)**, void (%"class.device::Dualshock4Controller"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.device::Dualshock4Controller"*)*, void (%"class.device::Dualshock4Controller"*)** %51, i64 1
  %53 = load void (%"class.device::Dualshock4Controller"*)*, void (%"class.device::Dualshock4Controller"*)** %52, align 8
  tail call void %53(%"class.device::Dualshock4Controller"* nonnull %47) #14
  br label %54

54:                                               ; preds = %45, %49
  %55 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %55) #14
  %56 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = ptrtoint i32* %57 to i64
  %61 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast i32* %57 to i8*
  tail call void @_ZdlPv(i8* %63) #15
  br label %64

64:                                               ; preds = %54, %59
  %65 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %65) #14
  %66 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #15
  br label %74

74:                                               ; preds = %64, %71
  %75 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast i64* %76 to i8*
  tail call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %74, %78
  %81 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %81) #14
  %82 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %80, %87
  %91 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepadD2Ev(%"class.device::AbstractHapticGamepad"* %91) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0)) #14
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i64 44) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #14
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #14
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6device21AbstractHapticGamepadD2Ev(%"class.device::AbstractHapticGamepad"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinuxD0Ev(%"class.device::GamepadDeviceLinux"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6device18GamepadDeviceLinuxD2Ev(%"class.device::GamepadDeviceLinux"* %0) #14
  %2 = bitcast %"class.device::GamepadDeviceLinux"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux10DoShutdownEv(%"class.device::GamepadDeviceLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %6, i32 %3) #14
  %7 = load i32, i32* %2, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %7) #14
  store i32 -1, i32* %2, align 8
  br label %8

8:                                                ; preds = %5, %1
  store i32 -1, i32* %2, align 8
  %9 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 6
  store i16 0, i16* %10, align 4
  %11 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 7
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 9
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %21, align 8
  br label %24

22:                                               ; preds = %8
  %23 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  store i8 0, i8* %23, align 1
  store i8 0, i8* %15, align 1
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 5
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15
  %28 = bitcast %"class.std::__1::vector.9"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  store i8 0, i8* %32, align 1
  tail call void @_ZN6device18GamepadDeviceLinux14CloseEvdevNodeEv(%"class.device::GamepadDeviceLinux"* %0)
  tail call void @_ZN6device18GamepadDeviceLinux15CloseHidrawNodeEv(%"class.device::GamepadDeviceLinux"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux15CloseJoydevNodeEv(%"class.device::GamepadDeviceLinux"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %6, i32 %3) #14
  %7 = load i32, i32* %2, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %7) #14
  store i32 -1, i32* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  store i32 -1, i32* %2, align 8
  %9 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 3
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 6
  store i16 0, i16* %10, align 4
  %11 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 7
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 9
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %21, align 8
  br label %24

22:                                               ; preds = %8
  %23 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  store i8 0, i8* %23, align 1
  store i8 0, i8* %15, align 1
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 5
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15
  %28 = bitcast %"class.std::__1::vector.9"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  store i8 0, i8* %32, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux14CloseEvdevNodeEv(%"class.device::GamepadDeviceLinux"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11
  %3 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 12
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = tail call i32 (i32, i64, ...) @ioctl(i32 %4, i64 1074021761, i32 %8) #14
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %22

13:                                               ; preds = %10
  %14 = tail call i32* @__errno_location() #16
  br label %15

15:                                               ; preds = %13, %18
  %16 = load i32, i32* %14, align 4
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %18, label %22

18:                                               ; preds = %15
  %19 = load i32, i32* %3, align 4
  %20 = tail call i32 (i32, i64, ...) @ioctl(i32 %19, i64 1074021761, i32 %8) #14
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %15, label %22

22:                                               ; preds = %18, %15, %10
  store i32 -1, i32* %7, align 8
  %23 = load i32, i32* %3, align 8
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %28, label %25

25:                                               ; preds = %6, %22
  %26 = phi i32 [ %23, %22 ], [ %4, %6 ]
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %2, i32 %26) #14
  %27 = load i32, i32* %3, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %27) #14
  store i32 -1, i32* %3, align 8
  br label %28

28:                                               ; preds = %1, %22, %25
  store i32 -1, i32* %3, align 8
  %29 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 13
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15
  %31 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %30, i64 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = ptrtoint i32* %32 to i64
  %34 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %35 = load i32*, i32** %34, align 8
  %36 = icmp eq i32* %32, %35
  br i1 %36, label %83, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 0
  %39 = getelementptr i32, i32* %35, i64 -1
  %40 = ptrtoint i32* %39 to i64
  %41 = sub i64 %40, %33
  %42 = and i64 %41, 4
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %59

44:                                               ; preds = %37
  %45 = load i32, i32* %32, align 4
  %46 = icmp sgt i32 %45, -1
  br i1 %46, label %47, label %57

47:                                               ; preds = %44
  %48 = sext i32 %45 to i64
  %49 = load i64*, i64** %38, align 8
  %50 = lshr i64 %48, 6
  %51 = getelementptr inbounds i64, i64* %49, i64 %50
  %52 = and i64 %48, 63
  %53 = shl i64 1, %52
  %54 = xor i64 %53, -1
  %55 = load i64, i64* %51, align 8
  %56 = and i64 %55, %54
  store i64 %56, i64* %51, align 8
  br label %57

57:                                               ; preds = %47, %44
  %58 = getelementptr inbounds i32, i32* %32, i64 1
  br label %59

59:                                               ; preds = %57, %37
  %60 = phi i32* [ %32, %37 ], [ %58, %57 ]
  %61 = icmp ult i64 %41, 4
  br i1 %61, label %80, label %62

62:                                               ; preds = %59, %97
  %63 = phi i32* [ %98, %97 ], [ %60, %59 ]
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, -1
  br i1 %65, label %66, label %76

66:                                               ; preds = %62
  %67 = sext i32 %64 to i64
  %68 = load i64*, i64** %38, align 8
  %69 = lshr i64 %67, 6
  %70 = getelementptr inbounds i64, i64* %68, i64 %69
  %71 = and i64 %67, 63
  %72 = shl i64 1, %71
  %73 = xor i64 %72, -1
  %74 = load i64, i64* %70, align 8
  %75 = and i64 %74, %73
  store i64 %75, i64* %70, align 8
  br label %76

76:                                               ; preds = %66, %62
  %77 = getelementptr inbounds i32, i32* %63, i64 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, -1
  br i1 %79, label %87, label %97

80:                                               ; preds = %97, %59
  %81 = bitcast %"class.std::__1::vector.9"* %30 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %28, %80
  %84 = phi i64 [ %82, %80 ], [ %33, %28 ]
  %85 = bitcast i32** %34 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  store i8 0, i8* %86, align 1
  ret void

87:                                               ; preds = %76
  %88 = sext i32 %78 to i64
  %89 = load i64*, i64** %38, align 8
  %90 = lshr i64 %88, 6
  %91 = getelementptr inbounds i64, i64* %89, i64 %90
  %92 = and i64 %88, 63
  %93 = shl i64 1, %92
  %94 = xor i64 %93, -1
  %95 = load i64, i64* %91, align 8
  %96 = and i64 %95, %94
  store i64 %96, i64* %91, align 8
  br label %97

97:                                               ; preds = %87, %76
  %98 = getelementptr inbounds i32, i32* %63, i64 2
  %99 = icmp eq i32* %98, %35
  br i1 %99, label %80, label %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux15CloseHidrawNodeEv(%"class.device::GamepadDeviceLinux"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %2, align 8
  %4 = icmp eq %"class.device::Dualshock4Controller"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store %"class.device::Dualshock4Controller"* null, %"class.device::Dualshock4Controller"** %2, align 8
  br label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %3, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepad8ShutdownEv(%"class.device::AbstractHapticGamepad"* %7) #14
  %8 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %2, align 8
  store %"class.device::Dualshock4Controller"* null, %"class.device::Dualshock4Controller"** %2, align 8
  %9 = icmp eq %"class.device::Dualshock4Controller"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.device::Dualshock4Controller"* %8 to void (%"class.device::Dualshock4Controller"*)***
  %12 = load void (%"class.device::Dualshock4Controller"*)**, void (%"class.device::Dualshock4Controller"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.device::Dualshock4Controller"*)*, void (%"class.device::Dualshock4Controller"*)** %12, i64 1
  %14 = load void (%"class.device::Dualshock4Controller"*)*, void (%"class.device::Dualshock4Controller"*)** %13, align 8
  tail call void %14(%"class.device::Dualshock4Controller"* nonnull %8) #14
  br label %15

15:                                               ; preds = %5, %6, %10
  %16 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %17 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %16, align 8
  %18 = icmp eq %"class.device::XboxHidController"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store %"class.device::XboxHidController"* null, %"class.device::XboxHidController"** %16, align 8
  br label %29

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.device::XboxHidController", %"class.device::XboxHidController"* %17, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepad8ShutdownEv(%"class.device::AbstractHapticGamepad"* %21) #14
  %22 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %16, align 8
  store %"class.device::XboxHidController"* null, %"class.device::XboxHidController"** %16, align 8
  %23 = icmp eq %"class.device::XboxHidController"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.device::XboxHidController"* %22 to void (%"class.device::XboxHidController"*)***
  %26 = load void (%"class.device::XboxHidController"*)**, void (%"class.device::XboxHidController"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.device::XboxHidController"*)*, void (%"class.device::XboxHidController"*)** %26, i64 1
  %28 = load void (%"class.device::XboxHidController"*)*, void (%"class.device::XboxHidController"*)** %27, align 8
  tail call void %28(%"class.device::XboxHidController"* nonnull %22) #14
  br label %29

29:                                               ; preds = %19, %20, %24
  %30 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %31 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %30, align 8
  %32 = icmp eq %"class.device::HidHapticGamepad"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  store %"class.device::HidHapticGamepad"* null, %"class.device::HidHapticGamepad"** %30, align 8
  br label %43

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.device::HidHapticGamepad", %"class.device::HidHapticGamepad"* %31, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepad8ShutdownEv(%"class.device::AbstractHapticGamepad"* %35) #14
  %36 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %30, align 8
  store %"class.device::HidHapticGamepad"* null, %"class.device::HidHapticGamepad"** %30, align 8
  %37 = icmp eq %"class.device::HidHapticGamepad"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.device::HidHapticGamepad"* %36 to void (%"class.device::HidHapticGamepad"*)***
  %40 = load void (%"class.device::HidHapticGamepad"*)**, void (%"class.device::HidHapticGamepad"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.device::HidHapticGamepad"*)*, void (%"class.device::HidHapticGamepad"*)** %40, i64 1
  %42 = load void (%"class.device::HidHapticGamepad"*)*, void (%"class.device::HidHapticGamepad"*)** %41, align 8
  tail call void %42(%"class.device::HidHapticGamepad"* nonnull %36) #14
  br label %43

43:                                               ; preds = %33, %34, %38
  %44 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16, i32 1, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %48, i32 %45) #14
  %49 = load i32, i32* %44, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %49) #14
  store i32 -1, i32* %44, align 8
  br label %50

50:                                               ; preds = %43, %47
  store i32 -1, i32* %44, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6device18GamepadDeviceLinux7IsEmptyEv(%"class.device::GamepadDeviceLinux"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ false, %5 ], [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6device18GamepadDeviceLinux17SupportsVibrationEv(%"class.device::GamepadDeviceLinux"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %2, align 8
  %4 = icmp eq %"class.device::Dualshock4Controller"* %3, null
  br i1 %4, label %5, label %25

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %7 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %6, align 8
  %8 = icmp eq %"class.device::XboxHidController"* %7, null
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %11 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %10, align 8
  %12 = icmp eq %"class.device::HidHapticGamepad"* %11, null
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 73272074
  br i1 %16, label %25, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 13
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp ne i32 %23, -1
  br label %25

25:                                               ; preds = %9, %5, %1, %21, %17, %13
  %26 = phi i1 [ true, %9 ], [ true, %5 ], [ true, %1 ], [ false, %13 ], [ false, %17 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux12ReadPadStateEPNS_7GamepadE(%"class.device::GamepadDeviceLinux"*, %"class.device::Gamepad"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN6device18GamepadDeviceLinux15ReadJoydevStateEPNS_7GamepadE(%"class.device::GamepadDeviceLinux"* %0, %"class.device::Gamepad"* %1)
  %4 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN6device18GamepadDeviceLinux26InitializeEvdevSpecialKeysEv(%"class.device::GamepadDeviceLinux"* %0)
  br label %8

8:                                                ; preds = %2, %7
  %9 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZN6device18GamepadDeviceLinux20ReadEvdevSpecialKeysEPNS_7GamepadE(%"class.device::GamepadDeviceLinux"* %0, %"class.device::Gamepad"* %1)
  %16 = or i1 %3, %15
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi i1 [ %3, %8 ], [ %16, %14 ]
  %19 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 0
  br label %21

20:                                               ; preds = %21
  br i1 %18, label %44, label %47

21:                                               ; preds = %21, %17
  %22 = phi i64 [ 0, %17 ], [ %42, %21 ]
  %23 = load i64*, i64** %19, align 8
  %24 = lshr i64 %22, 6
  %25 = getelementptr inbounds i64, i64* %23, i64 %24
  %26 = shl i64 1, %22
  %27 = load i64, i64* %25, align 8
  %28 = and i64 %27, %26
  %29 = icmp ne i64 %28, 0
  %30 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %22, i32 0
  %31 = zext i1 %29 to i8
  store i8 %31, i8* %30, align 4
  %32 = or i64 %22, 1
  %33 = load i64*, i64** %19, align 8
  %34 = lshr i64 %22, 6
  %35 = getelementptr inbounds i64, i64* %33, i64 %34
  %36 = shl i64 1, %32
  %37 = load i64, i64* %35, align 8
  %38 = and i64 %37, %36
  %39 = icmp ne i64 %38, 0
  %40 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %32, i32 0
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 4
  %42 = add nuw nsw i64 %22, 2
  %43 = icmp eq i64 %42, 32
  br i1 %43, label %20, label %21

44:                                               ; preds = %20
  %45 = tail call i64 @_ZN6device18GamepadDataFetcher25CurrentTimeInMicrosecondsEv() #14
  %46 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 4
  store i64 %45, i64* %46, align 4
  br label %47

47:                                               ; preds = %44, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device18GamepadDeviceLinux15ReadJoydevStateEPNS_7GamepadE(%"class.device::GamepadDeviceLinux"* nocapture readonly, %"class.device::Gamepad"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %struct.js_event*
  %5 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %89, label %8

8:                                                ; preds = %2
  %9 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %struct.js_event, %struct.js_event* %4, i64 0, i32 1
  %11 = getelementptr inbounds %struct.js_event, %struct.js_event* %4, i64 0, i32 2
  %12 = getelementptr inbounds %struct.js_event, %struct.js_event* %4, i64 0, i32 3
  %13 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 6
  %14 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 5
  %15 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 0
  %16 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 8
  store i64 -6148914691236517206, i64* %3, align 8
  br label %17

17:                                               ; preds = %52, %8
  %18 = phi i8 [ 0, %8 ], [ 1, %52 ]
  br label %19

19:                                               ; preds = %60, %17
  br label %20

20:                                               ; preds = %24, %19
  %21 = load i32, i32* %5, align 4
  %22 = call i64 @read(i32 %21, i8* nonnull %9, i64 8) #14
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = tail call i32* @__errno_location() #16
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %20, label %87

28:                                               ; preds = %20
  %29 = icmp sgt i64 %22, 0
  br i1 %29, label %30, label %87

30:                                               ; preds = %28
  %31 = load i8, i8* %12, align 1
  %32 = load i8, i8* %11, align 2
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %30
  %37 = icmp ugt i8 %31, 15
  br i1 %37, label %60, label %38

38:                                               ; preds = %36
  %39 = zext i8 %31 to i64
  %40 = load i16, i16* %10, align 4
  %41 = sitofp i16 %40 to float
  %42 = fdiv float %41, 3.276700e+04
  %43 = fpext float %42 to double
  %44 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 7, i64 %39
  store double %43, double* %44, align 4
  %45 = zext i8 %31 to i32
  %46 = shl i32 1, %45
  %47 = load i32, i32* %13, align 4
  %48 = or i32 %47, %46
  store i32 %48, i32* %13, align 4
  %49 = load i32, i32* %14, align 4
  %50 = zext i32 %49 to i64
  %51 = icmp ult i64 %39, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %38, %53, %80, %84
  br label %17

53:                                               ; preds = %38
  %54 = add nuw nsw i32 %45, 1
  store i32 %54, i32* %14, align 4
  br label %52

55:                                               ; preds = %30
  %56 = and i32 %33, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp ugt i8 %31, 31
  %59 = or i1 %58, %57
  br i1 %59, label %60, label %61

60:                                               ; preds = %55, %36
  br label %19

61:                                               ; preds = %55
  %62 = zext i8 %31 to i64
  %63 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %62, i32 0
  store i8 1, i8* %63, align 4
  %64 = load i16, i16* %10, align 4
  %65 = icmp ne i16 %64, 0
  %66 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %62, i32 1
  %67 = zext i1 %65 to i8
  store i8 %67, i8* %66, align 1
  %68 = icmp eq i16 %64, 0
  %69 = select i1 %68, double 0.000000e+00, double 1.000000e+00
  %70 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %62, i32 4
  store double %69, double* %70, align 4
  %71 = icmp slt i8 %32, 0
  br i1 %71, label %72, label %80

72:                                               ; preds = %61
  %73 = load i64*, i64** %15, align 8
  %74 = lshr i64 %62, 6
  %75 = getelementptr inbounds i64, i64* %73, i64 %74
  %76 = and i64 %62, 63
  %77 = shl i64 1, %76
  %78 = load i64, i64* %75, align 8
  %79 = or i64 %78, %77
  store i64 %79, i64* %75, align 8
  br label %80

80:                                               ; preds = %72, %61
  %81 = load i32, i32* %16, align 4
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %62, %82
  br i1 %83, label %52, label %84

84:                                               ; preds = %80
  %85 = zext i8 %31 to i32
  %86 = add nuw nsw i32 %85, 1
  store i32 %86, i32* %16, align 4
  br label %52

87:                                               ; preds = %28, %24
  %88 = icmp ne i8 %18, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  br label %89

89:                                               ; preds = %2, %87
  %90 = phi i1 [ %88, %87 ], [ false, %2 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux26InitializeEvdevSpecialKeysEv(%"class.device::GamepadDeviceLinux"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [1 x i64], align 8
  %3 = alloca [12 x i64], align 16
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %170, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  store i8 1, i8* %10, align 1
  %11 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #14
  %14 = bitcast [1 x i64]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds [1 x i64], [1 x i64]* %2, i64 0, i64 0
  store i64 -6148914691236517206, i64* %15, align 8
  %16 = bitcast [12 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 96, i1 false) #14
  store i64 0, i64* %13, align 8
  %17 = call i32 (i32, i64, ...) @ioctl(i32 %7, i64 2149532960, i64* nonnull %15) #14
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %28

19:                                               ; preds = %9
  %20 = tail call i32* @__errno_location() #16
  br label %21

21:                                               ; preds = %19, %24
  %22 = load i32, i32* %20, align 4
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %24, label %110

24:                                               ; preds = %21
  %25 = load i32, i32* %6, align 4
  %26 = call i32 (i32, i64, ...) @ioctl(i32 %25, i64 2149532960, i64* nonnull %15) #14
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %21, label %28

28:                                               ; preds = %24, %9
  %29 = phi i32 [ %17, %9 ], [ %26, %24 ]
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %110, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds [12 x i64], [12 x i64]* %3, i64 0, i64 0
  br label %33

33:                                               ; preds = %37, %31
  %34 = load i32, i32* %6, align 4
  %35 = call i32 (i32, i64, ...) @ioctl(i32 %34, i64 2197767457, i64* nonnull %32) #14
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = tail call i32* @__errno_location() #16
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %33, label %110

41:                                               ; preds = %33
  %42 = icmp slt i32 %35, 0
  br i1 %42, label %110, label %43

43:                                               ; preds = %41
  %44 = load i64, i64* %15, align 8
  %45 = and i64 %44, 2
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %110, label %47

47:                                               ; preds = %43
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector"* nonnull %4, i64 6, i1 zeroext false) #14
  %48 = getelementptr inbounds [12 x i64], [12 x i64]* %3, i64 0, i64 2
  %49 = load i64, i64* %48, align 16
  %50 = and i64 %49, 2048
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = load i64*, i64** %12, align 8
  %54 = load i64, i64* %53, align 8
  %55 = or i64 %54, 1
  store i64 %55, i64* %53, align 8
  br label %56

56:                                               ; preds = %52, %47
  %57 = phi i64 [ 1, %52 ], [ 0, %47 ]
  %58 = getelementptr inbounds [12 x i64], [12 x i64]* %3, i64 0, i64 1
  %59 = load i64, i64* %58, align 8
  %60 = and i64 %59, 4503599627370496
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = load i64*, i64** %12, align 8
  %64 = load i64, i64* %63, align 8
  %65 = or i64 %64, 2
  store i64 %65, i64* %63, align 8
  %66 = add nuw nsw i64 %57, 1
  br label %67

67:                                               ; preds = %62, %56
  %68 = phi i64 [ %66, %62 ], [ %57, %56 ]
  %69 = getelementptr inbounds [12 x i64], [12 x i64]* %3, i64 0, i64 3
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 33554432
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %67
  %74 = load i64*, i64** %12, align 8
  %75 = load i64, i64* %74, align 8
  %76 = or i64 %75, 4
  store i64 %76, i64* %74, align 8
  %77 = add nuw nsw i64 %68, 1
  br label %78

78:                                               ; preds = %73, %67
  %79 = phi i64 [ %77, %73 ], [ %68, %67 ]
  %80 = load i64, i64* %48, align 16
  %81 = and i64 %80, 17592186044416
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = load i64*, i64** %12, align 8
  %85 = load i64, i64* %84, align 8
  %86 = or i64 %85, 8
  store i64 %86, i64* %84, align 8
  %87 = add nuw nsw i64 %79, 1
  %88 = load i64, i64* %48, align 16
  br label %89

89:                                               ; preds = %83, %78
  %90 = phi i64 [ %88, %83 ], [ %80, %78 ]
  %91 = phi i64 [ %87, %83 ], [ %79, %78 ]
  %92 = and i64 %90, 1073741824
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = load i64*, i64** %12, align 8
  %96 = load i64, i64* %95, align 8
  %97 = or i64 %96, 16
  store i64 %97, i64* %95, align 8
  %98 = add nuw nsw i64 %91, 1
  %99 = load i64, i64* %48, align 16
  br label %100

100:                                              ; preds = %94, %89
  %101 = phi i64 [ %99, %94 ], [ %90, %89 ]
  %102 = phi i64 [ %98, %94 ], [ %91, %89 ]
  %103 = and i64 %101, 549755813888
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %100
  %106 = load i64*, i64** %12, align 8
  %107 = load i64, i64* %106, align 8
  %108 = or i64 %107, 32
  store i64 %108, i64* %106, align 8
  %109 = add nuw nsw i64 %102, 1
  br label %110

110:                                              ; preds = %21, %37, %28, %41, %43, %100, %105
  %111 = phi i64 [ 0, %41 ], [ 0, %28 ], [ 0, %43 ], [ %109, %105 ], [ %102, %100 ], [ 0, %37 ], [ 0, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %112 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15
  %113 = bitcast %"class.std::__1::vector.9"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = icmp eq i64 %111, 0
  br i1 %117, label %164, label %118

118:                                              ; preds = %110
  %119 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #14
  store i32 -1, i32* %5, align 4
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi(%"class.std::__1::vector.9"* %112, i64 6, i32* nonnull dereferenceable(4) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #14
  %120 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 0
  %121 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %112, i64 0, i32 0, i32 0
  br label %122

122:                                              ; preds = %159, %118
  %123 = phi i64 [ 0, %118 ], [ %162, %159 ]
  %124 = phi i64 [ 0, %118 ], [ %161, %159 ]
  %125 = phi i64 [ %111, %118 ], [ %160, %159 ]
  %126 = load i64*, i64** %12, align 8
  %127 = lshr i64 %123, 6
  %128 = getelementptr inbounds i64, i64* %126, i64 %127
  %129 = shl i64 1, %123
  %130 = load i64, i64* %128, align 8
  %131 = and i64 %130, %129
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %159, label %133

133:                                              ; preds = %122
  %134 = load i64*, i64** %120, align 8
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %146, %135 ], [ %124, %133 ]
  %137 = lshr i64 %136, 6
  %138 = getelementptr inbounds i64, i64* %134, i64 %137
  %139 = and i64 %136, 63
  %140 = shl i64 1, %139
  %141 = load i64, i64* %138, align 8
  %142 = and i64 %140, %141
  %143 = icmp ne i64 %142, 0
  %144 = icmp ult i64 %136, 32
  %145 = and i1 %144, %143
  %146 = add nuw nsw i64 %136, 1
  br i1 %145, label %135, label %147

147:                                              ; preds = %135
  %148 = icmp ugt i64 %136, 31
  br i1 %148, label %164, label %149

149:                                              ; preds = %147
  %150 = trunc i64 %136 to i32
  %151 = load i32*, i32** %121, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 %123
  store i32 %150, i32* %152, align 4
  %153 = load i64*, i64** %120, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 %137
  %155 = load i64, i64* %154, align 8
  %156 = or i64 %155, %140
  store i64 %156, i64* %154, align 8
  %157 = add i64 %125, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %164, label %159

159:                                              ; preds = %122, %149
  %160 = phi i64 [ %125, %122 ], [ %157, %149 ]
  %161 = phi i64 [ %124, %122 ], [ %146, %149 ]
  %162 = add nuw nsw i64 %123, 1
  %163 = icmp eq i64 %162, 6
  br i1 %163, label %164, label %122

164:                                              ; preds = %147, %149, %159, %110
  %165 = load i64*, i64** %12, align 8
  %166 = icmp eq i64* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %164
  %168 = bitcast i64* %165 to i8*
  call void @_ZdlPv(i8* %168) #15
  br label %169

169:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  br label %170

170:                                              ; preds = %1, %169
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device18GamepadDeviceLinux20ReadEvdevSpecialKeysEPNS_7GamepadE(%"class.device::GamepadDeviceLinux"* nocapture readonly, %"class.device::Gamepad"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.input_event, align 8
  %4 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %60, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.input_event* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %struct.input_event, %struct.input_event* %3, i64 0, i32 1
  %10 = getelementptr inbounds %struct.input_event, %struct.input_event* %3, i64 0, i32 2
  %11 = getelementptr inbounds %struct.input_event, %struct.input_event* %3, i64 0, i32 3
  %12 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 0
  %13 = bitcast %struct.input_event* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  br label %14

14:                                               ; preds = %114, %7
  %15 = phi i8 [ 0, %7 ], [ %115, %114 ]
  br label %16

16:                                               ; preds = %24, %14
  %17 = load i32, i32* %4, align 4
  %18 = call i64 @read(i32 %17, i8* nonnull %8, i64 24) #14
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = tail call i32* @__errno_location() #16
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %24, label %57

24:                                               ; preds = %20, %29
  br label %16

25:                                               ; preds = %16
  %26 = icmp slt i64 %18, 1
  %27 = icmp ult i64 %18, 24
  %28 = or i1 %26, %27
  br i1 %28, label %57, label %29

29:                                               ; preds = %25
  %30 = load i16, i16* %9, align 8
  %31 = icmp eq i16 %30, 1
  br i1 %31, label %32, label %24

32:                                               ; preds = %29
  %33 = load i16, i16* %10, align 2
  %34 = load i32, i32* %11, align 4
  %35 = icmp ne i32 %34, 0
  %36 = zext i1 %35 to i8
  %37 = icmp eq i32 %34, 0
  %38 = select i1 %37, double 0.000000e+00, double 1.000000e+00
  %39 = load i32*, i32** %12, align 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, -1
  %42 = icmp eq i16 %33, 139
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %45, i32 1
  store i8 %36, i8* %46, align 1
  %47 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %45, i32 4
  store double %38, double* %47, align 4
  %48 = load i32*, i32** %12, align 8
  br label %49

49:                                               ; preds = %32, %44
  %50 = phi i32* [ %39, %32 ], [ %48, %44 ]
  %51 = phi i8 [ %15, %32 ], [ 1, %44 ]
  %52 = getelementptr inbounds i32, i32* %50, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, -1
  %55 = icmp eq i16 %33, 116
  %56 = and i1 %54, %55
  br i1 %56, label %62, label %67

57:                                               ; preds = %25, %20
  %58 = and i8 %15, 1
  %59 = icmp ne i8 %58, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  br label %60

60:                                               ; preds = %2, %57
  %61 = phi i1 [ %59, %57 ], [ false, %2 ]
  ret i1 %61

62:                                               ; preds = %49
  %63 = sext i32 %53 to i64
  %64 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %63, i32 1
  store i8 %36, i8* %64, align 1
  %65 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %63, i32 4
  store double %38, double* %65, align 4
  %66 = load i32*, i32** %12, align 8
  br label %67

67:                                               ; preds = %49, %62
  %68 = phi i32* [ %50, %49 ], [ %66, %62 ]
  %69 = phi i8 [ %51, %49 ], [ 1, %62 ]
  %70 = getelementptr inbounds i32, i32* %68, i64 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, -1
  %73 = icmp eq i16 %33, 217
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %80

75:                                               ; preds = %67
  %76 = sext i32 %71 to i64
  %77 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %76, i32 1
  store i8 %36, i8* %77, align 1
  %78 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %76, i32 4
  store double %38, double* %78, align 4
  %79 = load i32*, i32** %12, align 8
  br label %80

80:                                               ; preds = %67, %75
  %81 = phi i32* [ %68, %67 ], [ %79, %75 ]
  %82 = phi i8 [ %69, %67 ], [ 1, %75 ]
  %83 = getelementptr inbounds i32, i32* %81, i64 3
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, -1
  %86 = icmp eq i16 %33, 172
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %89, i32 1
  store i8 %36, i8* %90, align 1
  %91 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %89, i32 4
  store double %38, double* %91, align 4
  %92 = load i32*, i32** %12, align 8
  br label %93

93:                                               ; preds = %80, %88
  %94 = phi i32* [ %81, %80 ], [ %92, %88 ]
  %95 = phi i8 [ %82, %80 ], [ 1, %88 ]
  %96 = getelementptr inbounds i32, i32* %94, i64 4
  %97 = load i32, i32* %96, align 4
  %98 = icmp sgt i32 %97, -1
  %99 = icmp eq i16 %33, 158
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %106

101:                                              ; preds = %93
  %102 = sext i32 %97 to i64
  %103 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %102, i32 1
  store i8 %36, i8* %103, align 1
  %104 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %102, i32 4
  store double %38, double* %104, align 4
  %105 = load i32*, i32** %12, align 8
  br label %106

106:                                              ; preds = %93, %101
  %107 = phi i32* [ %94, %93 ], [ %105, %101 ]
  %108 = phi i8 [ %95, %93 ], [ 1, %101 ]
  %109 = getelementptr inbounds i32, i32* %107, i64 5
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, -1
  %112 = icmp eq i16 %33, 167
  %113 = and i1 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %106, %116
  %115 = phi i8 [ %108, %106 ], [ 1, %116 ]
  br label %14

116:                                              ; preds = %106
  %117 = sext i32 %110 to i64
  %118 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %117, i32 1
  store i8 %36, i8* %118, align 1
  %119 = getelementptr inbounds %"class.device::Gamepad", %"class.device::Gamepad"* %1, i64 0, i32 9, i64 %117, i32 4
  store double %38, double* %119, align 4
  br label %114
}

declare i64 @_ZN6device18GamepadDataFetcher25CurrentTimeInMicrosecondsEv() local_unnamed_addr #1

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void (%"class.device::Gamepad"*, %"class.device::Gamepad"*)* @_ZNK6device18GamepadDeviceLinux18GetMappingFunctionEv(%"class.device::GamepadDeviceLinux"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %10 = select i1 %6, i8* %8, i8* %9
  %11 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %5 to i64
  %14 = select i1 %6, i64 %12, i64 %13
  %15 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 6
  %16 = load i16, i16* %15, align 4
  %17 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 7
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 8
  %20 = load i16, i16* %19, align 8
  %21 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 9
  %22 = load i16, i16* %21, align 2
  %23 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 17
  %24 = load i32, i32* %23, align 8
  %25 = tail call void (%"class.device::Gamepad"*, %"class.device::Gamepad"*)* @_ZN6device33GetGamepadStandardMappingFunctionEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEttttNS_14GamepadBusTypeE(i8* %10, i64 %14, i16 zeroext %16, i16 zeroext %18, i16 zeroext %20, i16 zeroext %22, i32 %24) #14
  ret void (%"class.device::Gamepad"*, %"class.device::Gamepad"*)* %25
}

declare void (%"class.device::Gamepad"*, %"class.device::Gamepad"*)* @_ZN6device33GetGamepadStandardMappingFunctionEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEttttNS_14GamepadBusTypeE(i8*, i64, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6device18GamepadDeviceLinux12IsSameDeviceERKNS_16UdevGamepadLinuxE(%"class.device::GamepadDeviceLinux"* nocapture readonly, %"class.device::UdevGamepadLinux"* nocapture readonly dereferenceable(56)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.device::UdevGamepadLinux", %"class.device::UdevGamepadLinux"* %1, i64 0, i32 3
  %4 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.device::UdevGamepadLinux", %"class.device::UdevGamepadLinux"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %54

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %26 = select i1 %8, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %30 = select i1 %16, i8* %28, i8* %29
  %31 = icmp eq i64 %12, 0
  br i1 %8, label %38, label %32

32:                                               ; preds = %22
  br i1 %31, label %54, label %33

33:                                               ; preds = %32
  %34 = ptrtoint i8* %24 to i64
  %35 = trunc i64 %34 to i8
  %36 = load i8, i8* %30, align 1
  %37 = icmp eq i8 %36, %35
  br i1 %37, label %42, label %54

38:                                               ; preds = %22
  br i1 %31, label %54, label %39

39:                                               ; preds = %38
  %40 = tail call i32 @bcmp(i8* %26, i8* %30, i64 %12) #14
  %41 = icmp eq i32 %40, 0
  br label %54

42:                                               ; preds = %33, %49
  %43 = phi i64 [ %46, %49 ], [ %11, %33 ]
  %44 = phi i8* [ %47, %49 ], [ %25, %33 ]
  %45 = phi i8* [ %50, %49 ], [ %30, %33 ]
  %46 = add i64 %43, -1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  %51 = load i8, i8* %47, align 1
  %52 = load i8, i8* %50, align 1
  %53 = icmp eq i8 %51, %52
  br i1 %53, label %42, label %54

54:                                               ; preds = %42, %49, %33, %2, %32, %38, %39
  %55 = phi i1 [ false, %2 ], [ %41, %39 ], [ true, %38 ], [ true, %32 ], [ false, %33 ], [ false, %49 ], [ true, %42 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device18GamepadDeviceLinux14OpenJoydevNodeERKNS_16UdevGamepadLinuxEP11udev_device(%"class.device::GamepadDeviceLinux"*, %"class.device::UdevGamepadLinux"* nocapture readonly dereferenceable(56), %struct.udev_device*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.base::ScopedGeneric", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %24, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %22, i32 %19) #14
  %23 = load i32, i32* %18, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %23) #14
  store i32 -1, i32* %18, align 8
  br label %24

24:                                               ; preds = %21, %3
  store i32 -1, i32* %18, align 8
  %25 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 3
  store i32 -1, i32* %25, align 8
  %26 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 6
  store i16 0, i16* %26, align 4
  %27 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 7
  store i16 0, i16* %27, align 2
  %28 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 9
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %37, align 8
  br label %40

38:                                               ; preds = %24
  %39 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  store i8 0, i8* %39, align 1
  store i8 0, i8* %31, align 1
  br label %40

40:                                               ; preds = %34, %38
  %41 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 5
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 4, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15
  %44 = bitcast %"class.std::__1::vector.9"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 15, i32 0, i32 1
  %47 = bitcast i32** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 14
  store i8 0, i8* %48, align 1
  %49 = bitcast %"class.base::ScopedGeneric"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #14
  %50 = getelementptr inbounds %"class.device::UdevGamepadLinux", %"class.device::UdevGamepadLinux"* %1, i64 0, i32 2
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %58 = select i1 %54, i8* %56, i8* %57
  %59 = tail call i32 (i8*, i32, ...) @open64(i8* %58, i32 2048) #14
  %60 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 1, i32 0
  store i32 %59, i32* %61, align 8
  %62 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 2
  store i8 0, i8* %62, align 4
  %63 = icmp eq i32 %59, -1
  br i1 %63, label %64, label %66

64:                                               ; preds = %40
  %65 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2
  store i32 -1, i32* %61, align 8
  br label %71

66:                                               ; preds = %40
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %15, i32 %59) #14
  %67 = load i32, i32* %61, align 8
  %68 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 2
  store i32 -1, i32* %61, align 8
  %69 = icmp eq i32 %67, -1
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %15, i32 %67) #14
  br label %71

71:                                               ; preds = %64, %70, %66
  %72 = phi i1 [ true, %64 ], [ false, %70 ], [ true, %66 ]
  %73 = phi %"class.base::ScopedGeneric"* [ %65, %64 ], [ %68, %70 ], [ %68, %66 ]
  %74 = phi i32 [ -1, %64 ], [ %67, %70 ], [ -1, %66 ]
  %75 = load i32, i32* %18, align 8
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = icmp eq i32 %75, %74
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  call void @abort() #17
  unreachable

80:                                               ; preds = %77
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %73, i32 %75) #14
  %81 = load i32, i32* %18, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %81) #14
  store i32 -1, i32* %18, align 8
  br label %82

82:                                               ; preds = %80, %71
  store i32 %74, i32* %18, align 8
  br i1 %72, label %84, label %83

83:                                               ; preds = %82
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %73, i32 %74) #14
  br label %84

84:                                               ; preds = %82, %83
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #14
  %85 = load i32, i32* %18, align 8
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %292, label %87

87:                                               ; preds = %84
  %88 = call %struct.udev_device* @_ZN6device45udev_device_get_parent_with_subsystem_devtypeEP11udev_devicePKcS3_(%struct.udev_device* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN6device12_GLOBAL__N_115kInputSubsystemE, i64 0, i64 0), i8* null) #14
  %89 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #14
  %90 = icmp eq i8* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  %92 = call i64 @strlen(i8* nonnull %89) #14
  br label %96

93:                                               ; preds = %87
  %94 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  br label %96

96:                                               ; preds = %91, %93
  %97 = phi i64 [ 0, %93 ], [ %92, %91 ]
  %98 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* %88, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #14
  %99 = icmp eq i8* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = call i64 @strlen(i8* nonnull %98) #14
  br label %105

102:                                              ; preds = %96
  %103 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #14
  br label %105

105:                                              ; preds = %100, %102
  %106 = phi i64 [ 0, %102 ], [ %101, %100 ]
  %107 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* %88, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #14
  %108 = icmp eq i8* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  %110 = call i64 @strlen(i8* nonnull %107) #14
  br label %114

111:                                              ; preds = %105
  %112 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %113 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #14
  br label %114

114:                                              ; preds = %109, %111
  %115 = phi i64 [ 0, %111 ], [ %110, %109 ]
  %116 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #14
  %117 = icmp eq i8* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = call i64 @strlen(i8* nonnull %116) #14
  br label %123

120:                                              ; preds = %114
  %121 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #14
  br label %123

123:                                              ; preds = %118, %120
  %124 = phi i64 [ 0, %120 ], [ %119, %118 ]
  %125 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #14
  store i32 0, i32* %10, align 4
  %126 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %89, i64 %97, i32* nonnull %10) #14
  br i1 %126, label %127, label %132

127:                                              ; preds = %123
  %128 = load i32, i32* %10, align 4
  %129 = icmp ugt i32 %128, 65535
  %130 = trunc i32 %128 to i16
  %131 = select i1 %129, i16 0, i16 %130
  br label %132

132:                                              ; preds = %123, %127
  %133 = phi i16 [ 0, %123 ], [ %131, %127 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #14
  %134 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #14
  store i32 0, i32* %9, align 4
  %135 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %98, i64 %106, i32* nonnull %9) #14
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = load i32, i32* %9, align 4
  %138 = icmp ugt i32 %137, 65535
  %139 = trunc i32 %137 to i16
  %140 = select i1 %138, i16 0, i16 %139
  br label %141

141:                                              ; preds = %132, %136
  %142 = phi i16 [ 0, %132 ], [ %140, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #14
  %143 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #14
  store i32 0, i32* %8, align 4
  %144 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %107, i64 %115, i32* nonnull %8) #14
  br i1 %144, label %145, label %150

145:                                              ; preds = %141
  %146 = load i32, i32* %8, align 4
  %147 = icmp ugt i32 %146, 65535
  %148 = trunc i32 %146 to i16
  %149 = select i1 %147, i16 0, i16 %148
  br label %150

150:                                              ; preds = %141, %145
  %151 = phi i16 [ 0, %141 ], [ %149, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #14
  %152 = call %struct.udev_device* @_ZN6device45udev_device_get_parent_with_subsystem_devtypeEP11udev_devicePKcS3_(%struct.udev_device* %88, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN6device12_GLOBAL__N_113kUsbSubsystemE, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN6device12_GLOBAL__N_114kUsbDeviceTypeE, i64 0, i64 0)) #14
  %153 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #14
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %157 = icmp ugt i64 %124, -17
  %158 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 24, i1 false)
  br i1 %157, label %159, label %161

159:                                              ; preds = %150
  %160 = bitcast %"class.std::__1::basic_string"* %16 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %160) #17
  unreachable

161:                                              ; preds = %150
  %162 = icmp ult i64 %124, 23
  br i1 %162, label %168, label %163

163:                                              ; preds = %161
  %164 = add nuw i64 %124, 16
  %165 = and i64 %164, -16
  %166 = call i8* @_Znwm(i64 %165) #15
  store i8* %166, i8** %154, align 8, !alias.scope !3
  %167 = or i64 %165, -9223372036854775808
  store i64 %167, i64* %156, align 8, !alias.scope !3
  store i64 %124, i64* %155, align 8, !alias.scope !3
  br label %173

168:                                              ; preds = %161
  %169 = trunc i64 %124 to i8
  %170 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  store i8 %169, i8* %171, align 1, !alias.scope !3
  %172 = icmp eq i64 %124, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %168, %163
  %174 = phi i8* [ %166, %163 ], [ %153, %168 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %174, i8* align 1 %116, i64 %124, i1 false) #14
  br label %175

175:                                              ; preds = %168, %173
  %176 = phi i8* [ %153, %168 ], [ %174, %173 ]
  %177 = getelementptr inbounds i8, i8* %176, i64 %124
  store i8 0, i8* %177, align 1
  %178 = icmp eq %struct.udev_device* %152, null
  br i1 %178, label %241, label %179

179:                                              ; preds = %175
  %180 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* nonnull %152, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #14
  %181 = icmp eq i8* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %179
  %183 = call i64 @strlen(i8* nonnull %180) #14
  br label %187

184:                                              ; preds = %179
  %185 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %186 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #14
  br label %187

187:                                              ; preds = %182, %184
  %188 = phi i64 [ 0, %184 ], [ %183, %182 ]
  %189 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* nonnull %152, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #14
  %190 = icmp eq i8* %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %187
  %192 = call i64 @strlen(i8* nonnull %189) #14
  br label %196

193:                                              ; preds = %187
  %194 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #14
  br label %196

196:                                              ; preds = %191, %193
  %197 = phi i64 [ 0, %193 ], [ %192, %191 ]
  %198 = icmp eq i64 %97, %188
  br i1 %198, label %199, label %222

199:                                              ; preds = %196
  %200 = call i32 @bcmp(i8* %89, i8* %180, i64 %97) #14
  %201 = icmp eq i32 %200, 0
  %202 = icmp eq i64 %106, %197
  %203 = and i1 %202, %201
  br i1 %203, label %204, label %222

204:                                              ; preds = %199
  %205 = call i32 @bcmp(i8* %98, i8* %189, i64 %106) #14
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %222

207:                                              ; preds = %204
  %208 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* nonnull %152, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0)) #14
  %209 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* nonnull %152, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)) #14
  %210 = icmp ne i8* %208, null
  %211 = icmp ne i8* %209, null
  %212 = and i1 %210, %211
  br i1 %212, label %213, label %222

213:                                              ; preds = %207
  %214 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #14
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* nonnull %208, i8* nonnull %209) #14
  %215 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  %217 = load i8, i8* %216, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %213
  %220 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %220) #15
  br label %221

221:                                              ; preds = %219, %213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %153, i8* nonnull align 8 %214, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #14
  br label %222

222:                                              ; preds = %196, %207, %221, %204, %199
  %223 = call i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device* nonnull %152, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #14
  %224 = icmp eq i8* %223, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %222
  %226 = call i64 @strlen(i8* nonnull %223) #14
  br label %230

227:                                              ; preds = %222
  %228 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0)) #14
  %229 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #14
  br label %230

230:                                              ; preds = %225, %227
  %231 = phi i64 [ 0, %227 ], [ %226, %225 ]
  %232 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %232) #14
  store i32 0, i32* %4, align 4
  %233 = call zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %223, i64 %231, i32* nonnull %4) #14
  br i1 %233, label %234, label %239

234:                                              ; preds = %230
  %235 = load i32, i32* %4, align 4
  %236 = icmp ugt i32 %235, 65535
  %237 = trunc i32 %235 to i16
  %238 = select i1 %236, i16 0, i16 %237
  br label %239

239:                                              ; preds = %230, %234
  %240 = phi i16 [ 0, %230 ], [ %238, %234 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %232) #14
  br label %241

241:                                              ; preds = %175, %239
  %242 = phi i16 [ %240, %239 ], [ 0, %175 ]
  %243 = getelementptr inbounds %"class.device::UdevGamepadLinux", %"class.device::UdevGamepadLinux"* %1, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  store i32 %244, i32* %25, align 8
  store i16 %133, i16* %26, align 4
  store i16 %142, i16* %27, align 2
  %245 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 8
  store i16 %151, i16* %245, align 8
  store i16 %242, i16* %28, align 2
  %246 = icmp eq %"class.std::__1::basic_string"* %29, %16
  br i1 %246, label %247, label %249

247:                                              ; preds = %241
  %248 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %270

249:                                              ; preds = %241
  %250 = load i8, i8* %31, align 1
  %251 = icmp slt i8 %250, 0
  %252 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %251, label %263, label %256

256:                                              ; preds = %249
  br i1 %255, label %259, label %257

257:                                              ; preds = %256
  %258 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* nonnull align 8 %153, i64 24, i1 false) #14
  br label %270

259:                                              ; preds = %256
  %260 = load i8*, i8** %154, align 8
  %261 = load i64, i64* %155, align 8
  %262 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %260, i64 %261) #14
  br label %270

263:                                              ; preds = %249
  %264 = load i8*, i8** %154, align 8
  %265 = load i64, i64* %155, align 8
  %266 = zext i8 %254 to i64
  %267 = select i1 %255, i8* %264, i8* %153
  %268 = select i1 %255, i64 %265, i64 %266
  %269 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %267, i64 %268) #14
  br label %270

270:                                              ; preds = %247, %257, %259, %263
  %271 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %248, %247 ], [ %252, %257 ], [ %252, %259 ], [ %252, %263 ]
  %272 = call dereferenceable(1) %"class.device::GamepadIdList"* @_ZN6device13GamepadIdList3GetEv() #14
  %273 = load i8, i8* %31, align 1
  %274 = icmp slt i8 %273, 0
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %278 = select i1 %274, i8* %276, i8* %277
  %279 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %280 = load i64, i64* %279, align 8
  %281 = zext i8 %273 to i64
  %282 = select i1 %274, i64 %280, i64 %281
  %283 = load i16, i16* %26, align 4
  %284 = load i16, i16* %27, align 2
  %285 = call i32 @_ZNK6device13GamepadIdList12GetGamepadIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtt(%"class.device::GamepadIdList"* %272, i8* %278, i64 %282, i16 zeroext %283, i16 zeroext %284) #14
  store i32 %285, i32* %41, align 8
  %286 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %271, i64 0, i32 1, i32 0
  %287 = load i8, i8* %286, align 1
  %288 = icmp slt i8 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %270
  %290 = load i8*, i8** %154, align 8
  call void @_ZdlPv(i8* %290) #15
  br label %291

291:                                              ; preds = %270, %289
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #14
  br label %292

292:                                              ; preds = %84, %291
  %293 = phi i1 [ true, %291 ], [ false, %84 ]
  ret i1 %293
}

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #6

declare %struct.udev_device* @_ZN6device45udev_device_get_parent_with_subsystem_devtypeEP11udev_devicePKcS3_(%struct.udev_device*, i8*, i8*) local_unnamed_addr #1

declare i8* @_ZN6device29udev_device_get_sysattr_valueEP11udev_devicePKc(%struct.udev_device*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare dereferenceable(1) %"class.device::GamepadIdList"* @_ZN6device13GamepadIdList3GetEv() local_unnamed_addr #1

declare i32 @_ZNK6device13GamepadIdList12GetGamepadIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtt(%"class.device::GamepadIdList"*, i8*, i64, i16 zeroext, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6device18GamepadDeviceLinux13OpenEvdevNodeERKNS_16UdevGamepadLinuxE(%"class.device::GamepadDeviceLinux"*, %"class.device::UdevGamepadLinux"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x i64], align 8
  %4 = alloca [2 x i64], align 16
  %5 = alloca i64, align 8
  %6 = alloca %"class.base::ScopedGeneric", align 8
  tail call void @_ZN6device18GamepadDeviceLinux14CloseEvdevNodeEv(%"class.device::GamepadDeviceLinux"* %0)
  %7 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.device::UdevGamepadLinux", %"class.device::UdevGamepadLinux"* %1, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = tail call i32 (i8*, i32, ...) @open64(i8* %16, i32 2050) #14
  %18 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 2
  store i8 0, i8* %20, align 4
  %21 = icmp eq i32 %17, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11
  store i32 -1, i32* %19, align 8
  br label %29

24:                                               ; preds = %2
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %17) #14
  %25 = load i32, i32* %19, align 8
  %26 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11
  store i32 -1, i32* %19, align 8
  %27 = icmp eq i32 %25, -1
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %25) #14
  br label %29

29:                                               ; preds = %22, %28, %24
  %30 = phi i1 [ true, %22 ], [ false, %28 ], [ true, %24 ]
  %31 = phi %"class.base::ScopedGeneric"* [ %23, %22 ], [ %26, %28 ], [ %26, %24 ]
  %32 = phi i32 [ -1, %22 ], [ %25, %28 ], [ -1, %24 ]
  %33 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %41, label %36

36:                                               ; preds = %29
  %37 = icmp eq i32 %34, %32
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  call void @abort() #17
  unreachable

39:                                               ; preds = %36
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %31, i32 %34) #14
  %40 = load i32, i32* %33, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %40) #14
  store i32 -1, i32* %33, align 8
  br label %41

41:                                               ; preds = %39, %29
  store i32 %32, i32* %33, align 8
  br i1 %30, label %43, label %42

42:                                               ; preds = %41
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %31, i32 %32) #14
  br label %43

43:                                               ; preds = %41, %42
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  %44 = load i32, i32* %33, align 8
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %109, label %46

46:                                               ; preds = %43
  %47 = bitcast [1 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  %48 = getelementptr inbounds [1 x i64], [1 x i64]* %3, i64 0, i64 0
  store i64 -6148914691236517206, i64* %48, align 8
  %49 = bitcast [2 x i64]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #14
  %50 = getelementptr inbounds [2 x i64], [2 x i64]* %4, i64 0, i64 0
  %51 = getelementptr inbounds [2 x i64], [2 x i64]* %4, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 16, i1 false) #14
  %52 = call i32 (i32, i64, ...) @ioctl(i32 %44, i64 2149532960, i64* nonnull %48) #14
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %63

54:                                               ; preds = %46
  %55 = tail call i32* @__errno_location() #16
  br label %56

56:                                               ; preds = %54, %59
  %57 = load i32, i32* %55, align 4
  %58 = icmp eq i32 %57, 4
  br i1 %58, label %59, label %85

59:                                               ; preds = %56
  %60 = load i32, i32* %33, align 4
  %61 = call i32 (i32, i64, ...) @ioctl(i32 %60, i64 2149532960, i64* nonnull %48) #14
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %56, label %63

63:                                               ; preds = %59, %46
  %64 = phi i32 [ %52, %46 ], [ %61, %59 ]
  %65 = icmp slt i32 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %63, %70
  %67 = load i32, i32* %33, align 4
  %68 = call i32 (i32, i64, ...) @ioctl(i32 %67, i64 2155824437, i64* nonnull %50) #14
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = tail call i32* @__errno_location() #16
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 4
  br i1 %73, label %66, label %85

74:                                               ; preds = %66
  %75 = icmp slt i32 %68, 0
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = load i64, i64* %48, align 8
  %78 = and i64 %77, 2097152
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = load i64, i64* %51, align 8
  %82 = lshr i64 %81, 16
  %83 = trunc i64 %82 to i8
  %84 = and i8 %83, 1
  br label %85

85:                                               ; preds = %56, %70, %63, %74, %76, %80
  %86 = phi i8 [ %84, %80 ], [ 0, %74 ], [ 0, %63 ], [ 0, %76 ], [ 0, %70 ], [ 0, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  %87 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 13
  store i8 %86, i8* %87, align 4
  %88 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #14
  %89 = bitcast i64* %5 to i16*
  store i64 -6148914691236517206, i64* %5, align 8
  br label %90

90:                                               ; preds = %94, %85
  %91 = load i32, i32* %33, align 4
  %92 = call i32 (i32, i64, ...) @ioctl(i32 %91, i64 2148025602, i64* nonnull %5) #14
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = tail call i32* @__errno_location() #16
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 4
  br i1 %97, label %90, label %106

98:                                               ; preds = %90
  %99 = icmp sgt i32 %92, -1
  br i1 %99, label %100, label %106

100:                                              ; preds = %98
  %101 = load i16, i16* %89, align 8
  %102 = icmp eq i16 %101, 5
  %103 = select i1 %102, i32 2, i32 0
  %104 = icmp eq i16 %101, 3
  %105 = select i1 %104, i32 1, i32 %103
  br label %106

106:                                              ; preds = %94, %98, %100
  %107 = phi i32 [ %105, %100 ], [ 0, %98 ], [ 0, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #14
  %108 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 17
  store i32 %107, i32* %108, align 8
  br label %109

109:                                              ; preds = %43, %106
  %110 = phi i1 [ true, %106 ], [ false, %43 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux14OpenHidrawNodeERKNS_16UdevGamepadLinuxEN4base12OnceCallbackIFvPS0_EEE(%"class.device::GamepadDeviceLinux"*, %"class.device::UdevGamepadLinux"* nocapture readonly dereferenceable(56), %"class.base::OnceCallback.46"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.46", align 8
  %5 = alloca %"class.base::ScopedGeneric", align 8
  %6 = alloca %"class.base::ScopedGeneric", align 8
  %7 = alloca %"class.base::OnceCallback.46", align 8
  %8 = alloca %"class.base::ScopedGeneric", align 8
  tail call void @_ZN6device18GamepadDeviceLinux15CloseHidrawNodeEv(%"class.device::GamepadDeviceLinux"* %0)
  %9 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 2
  %13 = getelementptr inbounds %"class.device::UdevGamepadLinux", %"class.device::UdevGamepadLinux"* %1, i64 0, i32 2
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load i8, i8* %15, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = tail call i32 (i8*, i32, ...) @open64(i8* %22, i32 2050) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 %23, i32* %11, align 8
  store i8 0, i8* %12, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %23) #14
  %26 = load i32, i32* %11, align 8
  br label %27

27:                                               ; preds = %3, %25
  %28 = phi i32 [ -1, %3 ], [ %26, %25 ]
  %29 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback.46"* %2 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.base::OnceCallback.46"* %7 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %33 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 1
  store i32 -1, i32* %11, align 8
  %35 = icmp eq i32 %28, -1
  br i1 %35, label %36, label %40

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %34, i64 0, i32 0
  store i32 -1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 2
  store i8 0, i8* %38, align 4
  %39 = bitcast %"class.base::ScopedGeneric"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  br label %52

40:                                               ; preds = %27
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %28) #14
  %41 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %34, i64 0, i32 0
  store i32 %28, i32* %41, align 8
  %42 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 2
  store i8 0, i8* %42, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %8, i32 %28) #14
  %43 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %"class.base::ScopedGeneric"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  %46 = icmp eq i32 %44, -1
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  store i32 -1, i32* %48, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %8, i32 %44) #14
  %50 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 1, i32 0
  store i32 %44, i32* %50, align 8
  %51 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 2
  store i8 0, i8* %51, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %5, i32 %44) #14
  call void @_ZN6device18GamepadDeviceLinux16InitializeHidrawEN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::GamepadDeviceLinux"* %0, %"class.base::ScopedGeneric"* nonnull %5) #14
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %5) #14
  br label %52

52:                                               ; preds = %36, %40, %47
  %53 = phi i8* [ %39, %36 ], [ %45, %40 ], [ %45, %47 ]
  %54 = bitcast %"class.base::OnceCallback.46"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %7, i64 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %32, align 8
  %57 = bitcast %"class.base::OnceCallback.46"* %4 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %58 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %4, i64 0, i32 0
  %59 = inttoptr i64 %56 to %"class.base::internal::BindStateBase"*
  %60 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %59, i64 0, i32 1
  %61 = bitcast void ()** %60 to void (%"class.base::internal::BindStateBase"*, %"class.device::GamepadDeviceLinux"*)**
  %62 = load void (%"class.base::internal::BindStateBase"*, %"class.device::GamepadDeviceLinux"*)*, void (%"class.base::internal::BindStateBase"*, %"class.device::GamepadDeviceLinux"*)** %61, align 8
  call void %62(%"class.base::internal::BindStateBase"* %59, %"class.device::GamepadDeviceLinux"* %0) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %8) #14
  %63 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #14
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux24OnOpenHidrawNodeCompleteEN4base12OnceCallbackIFvPS0_EEENS1_13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::GamepadDeviceLinux"*, %"class.base::OnceCallback.46"* nocapture, %"class.base::ScopedGeneric"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.46", align 8
  %5 = alloca %"class.base::ScopedGeneric", align 8
  %6 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %2, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  store i32 -1, i32* %6, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %2, i32 %7) #14
  %11 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 1, i32 0
  store i32 %7, i32* %11, align 8
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 2
  store i8 0, i8* %12, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %5, i32 %7) #14
  call void @_ZN6device18GamepadDeviceLinux16InitializeHidrawEN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::GamepadDeviceLinux"* %0, %"class.base::ScopedGeneric"* nonnull %5)
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %5) #14
  br label %13

13:                                               ; preds = %3, %9
  %14 = bitcast %"class.base::OnceCallback.46"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.46"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback.46"* %4 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %4, i64 0, i32 0
  %20 = inttoptr i64 %17 to %"class.base::internal::BindStateBase"*
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %20, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*, %"class.device::GamepadDeviceLinux"*)**
  %23 = load void (%"class.base::internal::BindStateBase"*, %"class.device::GamepadDeviceLinux"*)*, void (%"class.base::internal::BindStateBase"*, %"class.device::GamepadDeviceLinux"*)** %22, align 8
  call void %23(%"class.base::internal::BindStateBase"* %20, %"class.device::GamepadDeviceLinux"* %0) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux16InitializeHidrawEN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::GamepadDeviceLinux"*, %"class.base::ScopedGeneric"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16
  %6 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 -1, i32* %6, align 8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %7) #14
  br label %10

10:                                               ; preds = %9, %2
  %11 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 16, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = icmp eq i32 %12, %7
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @abort() #17
  unreachable

17:                                               ; preds = %14
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %5, i32 %12) #14
  %18 = load i32, i32* %11, align 8
  tail call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %18) #14
  store i32 -1, i32* %11, align 8
  br label %19

19:                                               ; preds = %17, %10
  store i32 %7, i32* %11, align 8
  br i1 %8, label %21, label %20

20:                                               ; preds = %19
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %5, i32 %7) #14
  br label %21

21:                                               ; preds = %19, %20
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #14
  %25 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 17
  %26 = bitcast i64* %3 to %struct.hidraw_devinfo*
  %27 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  %28 = bitcast i64* %3 to i32*
  %29 = getelementptr inbounds %struct.hidraw_devinfo, %struct.hidraw_devinfo* %26, i64 0, i32 1
  %30 = getelementptr inbounds %struct.hidraw_devinfo, %struct.hidraw_devinfo* %26, i64 0, i32 2
  store i64 -6148914691236517206, i64* %3, align 8
  br label %31

31:                                               ; preds = %35, %21
  %32 = load i32, i32* %11, align 4
  %33 = call i32 (i32, i64, ...) @ioctl(i32 %32, i64 2148026371, i64* nonnull %3) #14
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = tail call i32* @__errno_location() #16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 4
  br i1 %38, label %31, label %73

39:                                               ; preds = %31
  %40 = icmp slt i32 %33, 0
  br i1 %40, label %73, label %41

41:                                               ; preds = %39
  %42 = icmp eq i32* %25, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = load i32, i32* %28, align 8
  %45 = icmp eq i32 %44, 5
  %46 = select i1 %45, i32 2, i32 0
  %47 = icmp eq i32 %44, 3
  %48 = select i1 %47, i32 1, i32 %46
  store i32 %48, i32* %25, align 4
  br label %49

49:                                               ; preds = %43, %41
  %50 = load i16, i16* %29, align 4
  %51 = load i16, i16* %30, align 2
  br label %52

52:                                               ; preds = %57, %49
  %53 = load i32, i32* %11, align 4
  %54 = call i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"* nonnull %4, i64 256) #14
  %55 = call i32 (i32, i64, ...) @ioctl(i32 %53, i64 2164279300, i8* %54) #14
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %61

57:                                               ; preds = %52
  %58 = tail call i32* @__errno_location() #16
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %52, label %65

61:                                               ; preds = %52
  %62 = icmp slt i32 %55, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %75

65:                                               ; preds = %57, %61
  %66 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = load i8*, i8** %23, align 8
  store i8 0, i8* %71, align 1
  store i64 0, i64* %24, align 8
  br label %75

72:                                               ; preds = %65
  store i8 0, i8* %22, align 8
  store i8 0, i8* %67, align 1
  br label %75

73:                                               ; preds = %35, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %152

75:                                               ; preds = %63, %72, %70
  %76 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %64, %63 ], [ %66, %72 ], [ %66, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %77 = call dereferenceable(1) %"class.device::GamepadIdList"* @_ZN6device13GamepadIdList3GetEv() #14
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i8*, i8** %23, align 8
  %82 = select i1 %80, i8* %81, i8* %22
  %83 = load i64, i64* %24, align 8
  %84 = zext i8 %79 to i64
  %85 = select i1 %80, i64 %83, i64 %84
  %86 = call i32 @_ZNK6device13GamepadIdList12GetGamepadIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEtt(%"class.device::GamepadIdList"* %77, i8* %82, i64 %85, i16 zeroext %50, i16 zeroext %51) #14
  %87 = call zeroext i1 @_ZN6device20Dualshock4Controller12IsDualshock4ENS_9GamepadIdE(i32 %86) #14
  %88 = call zeroext i1 @_ZN6device17XboxHidController9IsXboxHidENS_9GamepadIdE(i32 %86) #14
  %89 = call zeroext i1 @_ZN6device16HidHapticGamepad11IsHidHapticEtt(i16 zeroext %50, i16 zeroext %51) #14
  br i1 %87, label %90, label %111

90:                                               ; preds = %75
  %91 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %92, align 8
  %94 = icmp eq %"class.device::Dualshock4Controller"* %93, null
  br i1 %94, label %95, label %111

95:                                               ; preds = %90
  %96 = call i8* @_Znwm(i64 16) #15
  %97 = bitcast i8* %96 to %"class.device::HidWriterLinux"*
  call void @_ZN6device14HidWriterLinuxC1ERKN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::HidWriterLinux"* nonnull %97, %"class.base::ScopedGeneric"* dereferenceable(16) %5) #14
  %98 = call i8* @_Znwm(i64 64) #15
  %99 = bitcast i8* %98 to %"class.device::Dualshock4Controller"*
  %100 = load i32, i32* %25, align 4
  %101 = bitcast i8* %96 to %"class.device::HidWriter"*
  call void @_ZN6device20Dualshock4ControllerC1ENS_9GamepadIdENS_14GamepadBusTypeENSt3__110unique_ptrINS_9HidWriterENS3_14default_deleteIS5_EEEE(%"class.device::Dualshock4Controller"* nonnull %99, i32 %86, i32 %100, %"class.device::HidWriter"* nonnull %101) #14
  %102 = ptrtoint i8* %98 to i64
  %103 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %92, align 8
  %104 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %102, i64* %104, align 8
  %105 = icmp eq %"class.device::Dualshock4Controller"* %103, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %95
  %107 = bitcast %"class.device::Dualshock4Controller"* %103 to void (%"class.device::Dualshock4Controller"*)***
  %108 = load void (%"class.device::Dualshock4Controller"*)**, void (%"class.device::Dualshock4Controller"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.device::Dualshock4Controller"*)*, void (%"class.device::Dualshock4Controller"*)** %108, i64 1
  %110 = load void (%"class.device::Dualshock4Controller"*)*, void (%"class.device::Dualshock4Controller"*)** %109, align 8
  call void %110(%"class.device::Dualshock4Controller"* nonnull %103) #14
  br i1 %88, label %112, label %132

111:                                              ; preds = %90, %95, %75
  br i1 %88, label %112, label %132

112:                                              ; preds = %106, %111
  %113 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %114, align 8
  %116 = icmp eq %"class.device::XboxHidController"* %115, null
  br i1 %116, label %117, label %132

117:                                              ; preds = %112
  %118 = call i8* @_Znwm(i64 16) #15
  %119 = bitcast i8* %118 to %"class.device::HidWriterLinux"*
  call void @_ZN6device14HidWriterLinuxC1ERKN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::HidWriterLinux"* nonnull %119, %"class.base::ScopedGeneric"* dereferenceable(16) %5) #14
  %120 = call i8* @_Znwm(i64 56) #15
  %121 = bitcast i8* %120 to %"class.device::XboxHidController"*
  %122 = bitcast i8* %118 to %"class.device::HidWriter"*
  call void @_ZN6device17XboxHidControllerC1ENSt3__110unique_ptrINS_9HidWriterENS1_14default_deleteIS3_EEEE(%"class.device::XboxHidController"* nonnull %121, %"class.device::HidWriter"* nonnull %122) #14
  %123 = ptrtoint i8* %120 to i64
  %124 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %114, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.31"* %113 to i64*
  store i64 %123, i64* %125, align 8
  %126 = icmp eq %"class.device::XboxHidController"* %124, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %117
  %128 = bitcast %"class.device::XboxHidController"* %124 to void (%"class.device::XboxHidController"*)***
  %129 = load void (%"class.device::XboxHidController"*)**, void (%"class.device::XboxHidController"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.device::XboxHidController"*)*, void (%"class.device::XboxHidController"*)** %129, i64 1
  %131 = load void (%"class.device::XboxHidController"*)*, void (%"class.device::XboxHidController"*)** %130, align 8
  call void %131(%"class.device::XboxHidController"* nonnull %124) #14
  br i1 %89, label %133, label %152

132:                                              ; preds = %112, %117, %106, %111
  br i1 %89, label %133, label %152

133:                                              ; preds = %127, %132
  %134 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 20
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.38"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %135, align 8
  %137 = icmp eq %"class.device::HidHapticGamepad"* %136, null
  br i1 %137, label %138, label %152

138:                                              ; preds = %133
  %139 = call i8* @_Znwm(i64 16) #15
  %140 = bitcast i8* %139 to %"class.device::HidWriterLinux"*
  call void @_ZN6device14HidWriterLinuxC1ERKN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::HidWriterLinux"* nonnull %140, %"class.base::ScopedGeneric"* dereferenceable(16) %5) #14
  %141 = bitcast i8* %139 to %"class.device::HidWriter"*
  %142 = call %"class.device::HidHapticGamepad"* @_ZN6device16HidHapticGamepad6CreateEttNSt3__110unique_ptrINS_9HidWriterENS1_14default_deleteIS3_EEEE(i16 zeroext %50, i16 zeroext %51, %"class.device::HidWriter"* nonnull %141) #14
  %143 = ptrtoint %"class.device::HidHapticGamepad"* %142 to i64
  %144 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %135, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.38"* %134 to i64*
  store i64 %143, i64* %145, align 8
  %146 = icmp eq %"class.device::HidHapticGamepad"* %144, null
  br i1 %146, label %152, label %147

147:                                              ; preds = %138
  %148 = bitcast %"class.device::HidHapticGamepad"* %144 to void (%"class.device::HidHapticGamepad"*)***
  %149 = load void (%"class.device::HidHapticGamepad"*)**, void (%"class.device::HidHapticGamepad"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.device::HidHapticGamepad"*)*, void (%"class.device::HidHapticGamepad"*)** %149, i64 1
  %151 = load void (%"class.device::HidHapticGamepad"*)*, void (%"class.device::HidHapticGamepad"*)** %150, align 8
  call void %151(%"class.device::HidHapticGamepad"* nonnull %144) #14
  br label %152

152:                                              ; preds = %133, %147, %138, %127, %73, %132
  %153 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %76, %133 ], [ %76, %147 ], [ %76, %138 ], [ %76, %127 ], [ %74, %73 ], [ %76, %132 ]
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %153, i64 0, i32 1, i32 0
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  %158 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %158) #15
  br label %159

159:                                              ; preds = %152, %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  ret void
}

declare zeroext i1 @_ZN6device20Dualshock4Controller12IsDualshock4ENS_9GamepadIdE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6device17XboxHidController9IsXboxHidENS_9GamepadIdE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6device16HidHapticGamepad11IsHidHapticEtt(i16 zeroext, i16 zeroext) local_unnamed_addr #1

declare %"class.device::HidHapticGamepad"* @_ZN6device16HidHapticGamepad6CreateEttNSt3__110unique_ptrINS_9HidWriterENS1_14default_deleteIS3_EEEE(i16 zeroext, i16 zeroext, %"class.device::HidWriter"*) local_unnamed_addr #1

declare void @_ZN6device21AbstractHapticGamepad8ShutdownEv(%"class.device::AbstractHapticGamepad"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux12SetVibrationEdd(%"class.device::GamepadDeviceLinux"* nocapture, double, double) unnamed_addr #0 align 2 {
  %4 = alloca %struct.ff_effect, align 8
  %5 = alloca %struct.input_event, align 8
  %6 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %7 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %6, align 8
  %8 = icmp eq %"class.device::Dualshock4Controller"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void @_ZN6device20Dualshock4Controller12SetVibrationEdd(%"class.device::Dualshock4Controller"* nonnull %7, double %1, double %2) #14
  br label %65

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %12 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %11, align 8
  %13 = icmp eq %"class.device::XboxHidController"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZN6device17XboxHidController12SetVibrationEdd(%"class.device::XboxHidController"* nonnull %12, double %1, double %2) #14
  br label %65

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %17 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %16, align 8
  %18 = icmp eq %"class.device::HidHapticGamepad"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @_ZN6device16HidHapticGamepad12SetVibrationEdd(%"class.device::HidHapticGamepad"* nonnull %17, double %1, double %2) #14
  br label %65

20:                                               ; preds = %15
  %21 = fmul double %1, 6.553500e+04
  %22 = fptoui double %21 to i16
  %23 = fmul double %2, 6.553500e+04
  %24 = fptoui double %23 to i16
  %25 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 12
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %struct.ff_effect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 48, i1 false) #14
  %28 = getelementptr inbounds %struct.ff_effect, %struct.ff_effect* %4, i64 0, i32 0
  store i16 80, i16* %28, align 8
  %29 = trunc i32 %26 to i16
  %30 = getelementptr inbounds %struct.ff_effect, %struct.ff_effect* %4, i64 0, i32 1
  store i16 %29, i16* %30, align 2
  %31 = getelementptr inbounds %struct.ff_effect, %struct.ff_effect* %4, i64 0, i32 4, i32 0
  store i16 5000, i16* %31, align 2
  %32 = getelementptr inbounds %struct.ff_effect, %struct.ff_effect* %4, i64 0, i32 4, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %struct.ff_effect, %struct.ff_effect* %4, i64 0, i32 5, i32 0, i32 0
  store i16 %22, i16* %33, align 8
  %34 = getelementptr inbounds %struct.ff_effect, %struct.ff_effect* %4, i64 0, i32 5, i32 0, i32 1
  store i16 %24, i16* %34, align 2
  %35 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  br label %36

36:                                               ; preds = %40, %20
  %37 = load i32, i32* %35, align 4
  %38 = call i32 (i32, i64, ...) @ioctl(i32 %37, i64 1076905344, %struct.ff_effect* nonnull %4) #14
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = tail call i32* @__errno_location() #16
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %36, label %47

44:                                               ; preds = %36
  %45 = icmp slt i32 %38, 0
  %46 = load i16, i16* %30, align 2
  br i1 %45, label %47, label %48

47:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #14
  store i32 -1, i32* %25, align 8
  br label %65

48:                                               ; preds = %44
  %49 = sext i16 %46 to i32
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #14
  store i32 %49, i32* %25, align 8
  %50 = icmp eq i16 %46, -1
  br i1 %50, label %65, label %51

51:                                               ; preds = %48
  %52 = bitcast %struct.input_event* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #14
  %53 = getelementptr inbounds %struct.input_event, %struct.input_event* %5, i64 0, i32 1
  %54 = getelementptr inbounds %struct.input_event, %struct.input_event* %5, i64 0, i32 2
  %55 = getelementptr inbounds %struct.input_event, %struct.input_event* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #14
  store i16 21, i16* %53, align 8
  store i16 %46, i16* %54, align 2
  store i32 1, i32* %55, align 4
  br label %56

56:                                               ; preds = %60, %51
  %57 = load i32, i32* %35, align 4
  %58 = call i64 @write(i32 %57, i8* nonnull %52, i64 24) #14
  %59 = icmp eq i64 %58, -1
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = tail call i32* @__errno_location() #16
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #14
  br label %65

65:                                               ; preds = %47, %64, %48, %19, %14, %9
  ret void
}

declare void @_ZN6device20Dualshock4Controller12SetVibrationEdd(%"class.device::Dualshock4Controller"*, double, double) unnamed_addr #1

declare void @_ZN6device17XboxHidController12SetVibrationEdd(%"class.device::XboxHidController"*, double, double) unnamed_addr #1

declare void @_ZN6device16HidHapticGamepad12SetVibrationEdd(%"class.device::HidHapticGamepad"*, double, double) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux16SetZeroVibrationEv(%"class.device::GamepadDeviceLinux"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %struct.input_event, align 8
  %3 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %4 = load %"class.device::Dualshock4Controller"*, %"class.device::Dualshock4Controller"** %3, align 8
  %5 = icmp eq %"class.device::Dualshock4Controller"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.device::Dualshock4Controller", %"class.device::Dualshock4Controller"* %4, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv(%"class.device::AbstractHapticGamepad"* %7) #14
  br label %40

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %10 = load %"class.device::XboxHidController"*, %"class.device::XboxHidController"** %9, align 8
  %11 = icmp eq %"class.device::XboxHidController"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.device::XboxHidController", %"class.device::XboxHidController"* %10, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv(%"class.device::AbstractHapticGamepad"* %13) #14
  br label %40

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %16 = load %"class.device::HidHapticGamepad"*, %"class.device::HidHapticGamepad"** %15, align 8
  %17 = icmp eq %"class.device::HidHapticGamepad"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.device::HidHapticGamepad", %"class.device::HidHapticGamepad"* %16, i64 0, i32 0
  tail call void @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv(%"class.device::AbstractHapticGamepad"* %19) #14
  br label %40

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 12
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %40, label %24

24:                                               ; preds = %20
  %25 = bitcast %struct.input_event* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %struct.input_event, %struct.input_event* %2, i64 0, i32 1
  %27 = getelementptr inbounds %struct.input_event, %struct.input_event* %2, i64 0, i32 2
  %28 = getelementptr inbounds %struct.input_event, %struct.input_event* %2, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #14
  store i16 21, i16* %26, align 8
  %29 = trunc i32 %22 to i16
  store i16 %29, i16* %27, align 2
  store i32 0, i32* %28, align 4
  %30 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %0, i64 0, i32 11, i32 1, i32 0
  br label %31

31:                                               ; preds = %35, %24
  %32 = load i32, i32* %30, align 4
  %33 = call i64 @write(i32 %32, i8* nonnull %25, i64 24) #14
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = tail call i32* @__errno_location() #16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 4
  br i1 %38, label %31, label %39

39:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  br label %40

40:                                               ; preds = %20, %6, %12, %18, %39
  ret void
}

declare void @_ZN6device21AbstractHapticGamepad16SetZeroVibrationEv(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device18GamepadDeviceLinux10GetWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.device::GamepadDeviceLinux"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr.54", align 8
  %5 = bitcast %"class.base::WeakPtr.54"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  %6 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14, !noalias !6
  %7 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %1, i64 0, i32 23, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %7) #14, !noalias !6
  %8 = getelementptr inbounds %"class.device::GamepadDeviceLinux", %"class.device::GamepadDeviceLinux"* %1, i64 0, i32 23, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !6
  %10 = getelementptr inbounds %"class.base::WeakPtr.54", %"class.base::WeakPtr.54"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %9) #14
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14, !noalias !6
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::WeakPtr.54", %"class.base::WeakPtr.54"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %11, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %12) #14
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::WeakPtr.54", %"class.base::WeakPtr.54"* %4, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare double @_ZN6device21AbstractHapticGamepad26GetMaxEffectDurationMillisEv(%"class.device::AbstractHapticGamepad"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !9
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #14
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #17
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !14
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #14, !noalias !19
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !22
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !19
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !19
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #14
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #14
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #14
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #17
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !25
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !25
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !25
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !30
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !33
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !33
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !36
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #14
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !39
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !39
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !39
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #14, !noalias !39
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !39
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !39
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !39
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !42
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !42
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !45
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !45
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !45
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !45
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !45
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !45
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #14
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #14
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare zeroext i1 @_ZN4base15HexStringToUIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #1

declare i8* @_ZN4base9WriteIntoEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #14
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEmRKi(%"class.std::__1::vector.9"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i32* %2 to i8*
  %5 = bitcast i32* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i32*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i32, i32* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 2
  %22 = add i64 %21, -4
  %23 = lshr exact i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 8
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i32* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i32* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i32, i32* %16, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i32* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i32, i32* %2, align 4
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds i32, i32* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !46

44:                                               ; preds = %37, %26
  %45 = phi i32* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 28
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 2
  %49 = add i64 %48, -4
  %50 = lshr exact i64 %49, 2
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i32, i32* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i32* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 9223372036854775800
  %59 = getelementptr i32, i32* %16, i64 %58
  %60 = add nsw i64 %58, -8
  %61 = lshr exact i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i32, i32* %2, align 4, !alias.scope !48
  %68 = insertelement <4 x i32> undef, i32 %67, i32 0
  %69 = shufflevector <4 x i32> %68, <4 x i32> undef, <4 x i32> zeroinitializer
  %70 = insertelement <4 x i32> undef, i32 %67, i32 0
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <4 x i32> zeroinitializer
  %72 = load i32, i32* %2, align 4, !alias.scope !48
  %73 = insertelement <4 x i32> undef, i32 %72, i32 0
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> zeroinitializer
  %75 = insertelement <4 x i32> undef, i32 %72, i32 0
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i32, i32* %16, i64 %78
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %81, align 4, !alias.scope !51, !noalias !48
  %82 = getelementptr i32, i32* %80, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %83, align 4, !alias.scope !51, !noalias !48
  %84 = or i64 %78, 8
  %85 = getelementptr i32, i32* %16, i64 %84
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %86, align 4, !alias.scope !51, !noalias !48
  %87 = getelementptr i32, i32* %85, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %88, align 4, !alias.scope !51, !noalias !48
  %89 = add i64 %78, 16
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !53

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i32, i32* %16, i64 %93
  %97 = load i32, i32* %2, align 4, !alias.scope !48
  %98 = insertelement <4 x i32> undef, i32 %97, i32 0
  %99 = shufflevector <4 x i32> %98, <4 x i32> undef, <4 x i32> zeroinitializer
  %100 = insertelement <4 x i32> undef, i32 %97, i32 0
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> zeroinitializer
  %102 = bitcast i32* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %102, align 4, !alias.scope !51, !noalias !48
  %103 = getelementptr i32, i32* %96, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %104, align 4, !alias.scope !51, !noalias !48
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i32* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i32* [ %126, %109 ], [ %45, %44 ]
  %111 = load i32, i32* %2, align 4
  store i32 %111, i32* %110, align 4
  %112 = getelementptr inbounds i32, i32* %110, i64 1
  %113 = load i32, i32* %2, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds i32, i32* %110, i64 2
  %115 = load i32, i32* %2, align 4
  store i32 %115, i32* %114, align 4
  %116 = getelementptr inbounds i32, i32* %110, i64 3
  %117 = load i32, i32* %2, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %110, i64 4
  %119 = load i32, i32* %2, align 4
  store i32 %119, i32* %118, align 4
  %120 = getelementptr inbounds i32, i32* %110, i64 5
  %121 = load i32, i32* %2, align 4
  store i32 %121, i32* %120, align 4
  %122 = getelementptr inbounds i32, i32* %110, i64 6
  %123 = load i32, i32* %2, align 4
  store i32 %123, i32* %122, align 4
  %124 = getelementptr inbounds i32, i32* %110, i64 7
  %125 = load i32, i32* %2, align 4
  store i32 %125, i32* %124, align 4
  %126 = getelementptr inbounds i32, i32* %110, i64 8
  %127 = icmp eq i32* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !55

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 2
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #17
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 2
  %142 = icmp ult i64 %141, 2305843009213693951
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 1
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 4611686018427387903
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #17
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 4611686018427387903, %139 ]
  %153 = shl i64 %152, 2
  %154 = tail call i8* @_Znwm(i64 %153) #15
  %155 = bitcast i8* %154 to i32*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i32* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i32, i32* %158, i64 %134
  %160 = getelementptr inbounds i32, i32* %158, i64 %157
  %161 = getelementptr inbounds i32, i32* %159, i64 %1
  %162 = shl nsw i64 %1, 2
  %163 = add i64 %162, -4
  %164 = lshr exact i64 %163, 2
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 8
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i32* %159 to i8*
  %169 = shl nsw i64 %1, 2
  %170 = add i64 %169, -4
  %171 = lshr exact i64 %170, 2
  %172 = add nsw i64 %134, %171
  %173 = add i64 %172, 1
  %174 = getelementptr i32, i32* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i32* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 9223372036854775800
  %181 = getelementptr i32, i32* %159, i64 %180
  %182 = add nsw i64 %180, -8
  %183 = lshr exact i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i32, i32* %2, align 4, !alias.scope !56
  %190 = insertelement <4 x i32> undef, i32 %189, i32 0
  %191 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> zeroinitializer
  %192 = insertelement <4 x i32> undef, i32 %189, i32 0
  %193 = shufflevector <4 x i32> %192, <4 x i32> undef, <4 x i32> zeroinitializer
  %194 = load i32, i32* %2, align 4, !alias.scope !56
  %195 = insertelement <4 x i32> undef, i32 %194, i32 0
  %196 = shufflevector <4 x i32> %195, <4 x i32> undef, <4 x i32> zeroinitializer
  %197 = insertelement <4 x i32> undef, i32 %194, i32 0
  %198 = shufflevector <4 x i32> %197, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i32, i32* %159, i64 %200
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %203, align 4, !alias.scope !59, !noalias !56
  %204 = getelementptr i32, i32* %202, i64 4
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %193, <4 x i32>* %205, align 4, !alias.scope !59, !noalias !56
  %206 = or i64 %200, 8
  %207 = getelementptr i32, i32* %159, i64 %206
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %196, <4 x i32>* %208, align 4, !alias.scope !59, !noalias !56
  %209 = getelementptr i32, i32* %207, i64 4
  %210 = bitcast i32* %209 to <4 x i32>*
  store <4 x i32> %198, <4 x i32>* %210, align 4, !alias.scope !59, !noalias !56
  %211 = add i64 %200, 16
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !61

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i32, i32* %159, i64 %215
  %219 = load i32, i32* %2, align 4, !alias.scope !56
  %220 = insertelement <4 x i32> undef, i32 %219, i32 0
  %221 = shufflevector <4 x i32> %220, <4 x i32> undef, <4 x i32> zeroinitializer
  %222 = insertelement <4 x i32> undef, i32 %219, i32 0
  %223 = shufflevector <4 x i32> %222, <4 x i32> undef, <4 x i32> zeroinitializer
  %224 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %221, <4 x i32>* %224, align 4, !alias.scope !59, !noalias !56
  %225 = getelementptr i32, i32* %218, i64 4
  %226 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %223, <4 x i32>* %226, align 4, !alias.scope !59, !noalias !56
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i32* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i32* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i32, i32* %158, i64 %233
  %235 = ptrtoint i32* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 2
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i32* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i32, i32* %2, align 4
  store i32 %244, i32* %242, align 4
  %245 = getelementptr inbounds i32, i32* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !62

248:                                              ; preds = %241, %229
  %249 = phi i32* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 28
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i32* [ %268, %251 ], [ %249, %248 ]
  %253 = load i32, i32* %2, align 4
  store i32 %253, i32* %252, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32, i32* %2, align 4
  store i32 %255, i32* %254, align 4
  %256 = getelementptr inbounds i32, i32* %252, i64 2
  %257 = load i32, i32* %2, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 3
  %259 = load i32, i32* %2, align 4
  store i32 %259, i32* %258, align 4
  %260 = getelementptr inbounds i32, i32* %252, i64 4
  %261 = load i32, i32* %2, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 5
  %263 = load i32, i32* %2, align 4
  store i32 %263, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %252, i64 6
  %265 = load i32, i32* %2, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 7
  %267 = load i32, i32* %2, align 4
  store i32 %267, i32* %266, align 4
  %268 = getelementptr inbounds i32, i32* %252, i64 8
  %269 = icmp eq i32* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !63

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i32* %160 to i64
  %272 = ptrtoint i32* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i32* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 2
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i32, i32* %159, i64 %279
  %281 = ptrtoint i32* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i32* %280 to i8*
  %285 = bitcast i32* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 %277, i1 false) #14
  %286 = load i32*, i32** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i32* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i32* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #15
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN6device14HidWriterLinuxC1ERKN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"class.device::HidWriterLinux"*, %"class.base::ScopedGeneric"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN6device20Dualshock4ControllerC1ENS_9GamepadIdENS_14GamepadBusTypeENSt3__110unique_ptrINS_9HidWriterENS3_14default_deleteIS5_EEEE(%"class.device::Dualshock4Controller"*, i32, i32, %"class.device::HidWriter"*) unnamed_addr #1

declare void @_ZN6device17XboxHidControllerC1ENSt3__110unique_ptrINS_9HidWriterENS1_14default_deleteIS3_EEEE(%"class.device::XboxHidController"*, %"class.device::HidWriter"*) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readnone }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base14WeakPtrFactoryIN6device18GamepadDeviceLinuxEE10GetWeakPtrEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base14WeakPtrFactoryIN6device18GamepadDeviceLinuxEE10GetWeakPtrEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!12 = distinct !{!12, !13, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!17 = distinct !{!17, !18, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!22 = !{!20, !23}
!23 = distinct !{!23, !24, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!28 = distinct !{!28, !29, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!33 = !{!34, !31}
!34 = distinct !{!34, !35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!42 = !{!40, !43}
!43 = distinct !{!43, !44, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!45 = !{!43}
!46 = distinct !{!46, !47}
!47 = !{!"llvm.loop.unroll.disable"}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = distinct !{!53, !54}
!54 = !{!"llvm.loop.isvectorized", i32 1}
!55 = distinct !{!55, !54}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !54}
!62 = distinct !{!62, !47}
!63 = distinct !{!63, !54}
