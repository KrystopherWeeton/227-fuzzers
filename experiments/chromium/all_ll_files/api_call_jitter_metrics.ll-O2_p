; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/api_call_jitter_metrics.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/api_call_jitter_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::metrics::Histogram" = type opaque
%"class.webrtc::ApiCallJitterMetrics::Jitter" = type { i32, i32 }
%"class.webrtc::ApiCallJitterMetrics" = type <{ %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter", i32, i32, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str = private unnamed_addr constant [43 x i8] c"WebRTC.Audio.EchoCanceller.MaxRenderJitter\00", align 1
@_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_0 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.1 = private unnamed_addr constant [43 x i8] c"WebRTC.Audio.EchoCanceller.MinRenderJitter\00", align 1
@_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_1 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"WebRTC.Audio.EchoCanceller.MaxCaptureJitter\00", align 1
@_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_2 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"WebRTC.Audio.EchoCanceller.MinCaptureJitter\00", align 1

@_ZN6webrtc20ApiCallJitterMetrics6JitterC1Ev = hidden unnamed_addr alias void (%"class.webrtc::ApiCallJitterMetrics::Jitter"*), void (%"class.webrtc::ApiCallJitterMetrics::Jitter"*)* @_ZN6webrtc20ApiCallJitterMetrics6JitterC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20ApiCallJitterMetrics6JitterC2Ev(%"class.webrtc::ApiCallJitterMetrics::Jitter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter"* %0, i64 0, i32 1
  store i32 2147483647, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20ApiCallJitterMetrics6Jitter6UpdateEi(%"class.webrtc::ApiCallJitterMetrics::Jitter"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, %1
  %6 = select i1 %5, i32 %1, i32 %4
  store i32 %6, i32* %3, align 4
  %7 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %1, i32 %8
  store i32 %10, i32* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20ApiCallJitterMetrics6Jitter5ResetEv(%"class.webrtc::ApiCallJitterMetrics::Jitter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter"* %0, i64 0, i32 1
  store i32 2147483647, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics::Jitter", %"class.webrtc::ApiCallJitterMetrics::Jitter"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc20ApiCallJitterMetrics5ResetEv(%"class.webrtc::ApiCallJitterMetrics"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.webrtc::ApiCallJitterMetrics"* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 2147483647, i32 0, i32 2147483647>, <4 x i32>* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 10, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20ApiCallJitterMetrics16ReportRenderCallEv(%"class.webrtc::ApiCallJitterMetrics"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 1
  br label %26

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %15
  %19 = select i1 %18, i32 %15, i32 %17
  store i32 %19, i32* %16, align 4
  %20 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %15
  %23 = select i1 %22, i32 %15, i32 %21
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %9, %13
  %25 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  store i32 0, i32* %25, align 4
  br label %26

26:                                               ; preds = %5, %24
  %27 = phi i32 [ %8, %5 ], [ 1, %24 ]
  %28 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  store i32 %27, i32* %28, align 4
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEv(%"class.webrtc::ApiCallJitterMetrics"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 5
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %15
  %19 = select i1 %18, i32 %15, i32 %17
  store i32 %19, i32* %16, align 4
  %20 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %15
  %23 = select i1 %22, i32 %15, i32 %21
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %13, %9
  store i8 1, i8* %10, align 1
  %25 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  store i32 1, i32* %25, align 4
  store i8 0, i8* %6, align 4
  br label %34

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 5
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = add i32 %28, 1
  %32 = icmp eq i8 %30, 0
  %33 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 2
  store i32 %31, i32* %33, align 4
  store i8 0, i8* %6, align 4
  br i1 %32, label %155, label %34

34:                                               ; preds = %24, %26
  %35 = phi i32* [ %25, %24 ], [ %33, %26 ]
  %36 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 4
  %39 = icmp eq i32 %38, 1000
  br i1 %39, label %40, label %155

40:                                               ; preds = %34
  %41 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer to i64*) acquire, align 8
  %42 = inttoptr i64 %41 to %"class.webrtc::metrics::Histogram"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %62

44:                                               ; preds = %40
  %45 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = tail call i8* @_Znwm(i64 48) #9
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast i64* %48 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %49, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i64 42, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 42
  store i8 0, i8* %50, align 1
  %51 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 1, i32 50, i32 50) #8
  %52 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %56, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  %59 = ptrtoint %"class.webrtc::metrics::Histogram"* %51 to i64
  %60 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer to i64*), i64 0, i64 %59 seq_cst seq_cst
  %61 = icmp eq %"class.webrtc::metrics::Histogram"* %51, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %40, %58
  %63 = phi %"class.webrtc::metrics::Histogram"* [ %51, %58 ], [ %42, %40 ]
  %64 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 50
  %67 = select i1 %66, i32 %65, i32 50
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %63, i32 %67) #8
  br label %68

68:                                               ; preds = %58, %62
  %69 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_0 to i64*) acquire, align 8
  %70 = inttoptr i64 %69 to %"class.webrtc::metrics::Histogram"*
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %90

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #8
  %74 = call i8* @_Znwm(i64 48) #9
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %74, i8** %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> <i64 42, i64 -9223372036854775760>, <2 x i64>* %77, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0), i64 42, i1 false) #8
  %78 = getelementptr inbounds i8, i8* %74, i64 42
  store i8 0, i8* %78, align 1
  %79 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 1, i32 50, i32 50) #8
  %80 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %72
  %85 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %84, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #8
  %87 = ptrtoint %"class.webrtc::metrics::Histogram"* %79 to i64
  %88 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_0 to i64*), i64 0, i64 %87 seq_cst seq_cst
  %89 = icmp eq %"class.webrtc::metrics::Histogram"* %79, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %68, %86
  %91 = phi %"class.webrtc::metrics::Histogram"* [ %79, %86 ], [ %70, %68 ]
  %92 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %93, 50
  %95 = select i1 %94, i32 %93, i32 50
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %91, i32 %95) #8
  br label %96

96:                                               ; preds = %86, %90
  %97 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_1 to i64*) acquire, align 8
  %98 = inttoptr i64 %97 to %"class.webrtc::metrics::Histogram"*
  %99 = icmp eq i64 %97, 0
  br i1 %99, label %100, label %118

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #8
  %102 = call i8* @_Znwm(i64 48) #9
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %102, i8** %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> <i64 43, i64 -9223372036854775760>, <2 x i64>* %105, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %102, i8* align 1 getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i64 43, i1 false) #8
  %106 = getelementptr inbounds i8, i8* %102, i64 43
  store i8 0, i8* %106, align 1
  %107 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i32 1, i32 50, i32 50) #8
  %108 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %100
  %113 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %113) #9
  br label %114

114:                                              ; preds = %112, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #8
  %115 = ptrtoint %"class.webrtc::metrics::Histogram"* %107 to i64
  %116 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_1 to i64*), i64 0, i64 %115 seq_cst seq_cst
  %117 = icmp eq %"class.webrtc::metrics::Histogram"* %107, null
  br i1 %117, label %124, label %118

118:                                              ; preds = %96, %114
  %119 = phi %"class.webrtc::metrics::Histogram"* [ %107, %114 ], [ %98, %96 ]
  %120 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 1, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp slt i32 %121, 50
  %123 = select i1 %122, i32 %121, i32 50
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %119, i32 %123) #8
  br label %124

124:                                              ; preds = %114, %118
  %125 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_2 to i64*) acquire, align 8
  %126 = inttoptr i64 %125 to %"class.webrtc::metrics::Histogram"*
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %128, label %146

128:                                              ; preds = %124
  %129 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #8
  %130 = call i8* @_Znwm(i64 48) #9
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> <i64 43, i64 -9223372036854775760>, <2 x i64>* %133, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %130, i8* align 1 getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i64 43, i1 false) #8
  %134 = getelementptr inbounds i8, i8* %130, i64 43
  store i8 0, i8* %134, align 1
  %135 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i32 1, i32 50, i32 50) #8
  %136 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  %138 = load i8, i8* %137, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %128
  %141 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %141) #9
  br label %142

142:                                              ; preds = %140, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #8
  %143 = ptrtoint %"class.webrtc::metrics::Histogram"* %135 to i64
  %144 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ApiCallJitterMetrics17ReportCaptureCallEvE24atomic_histogram_pointer_2 to i64*), i64 0, i64 %143 seq_cst seq_cst
  %145 = icmp eq %"class.webrtc::metrics::Histogram"* %135, null
  br i1 %145, label %152, label %146

146:                                              ; preds = %124, %142
  %147 = phi %"class.webrtc::metrics::Histogram"* [ %135, %142 ], [ %126, %124 ]
  %148 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 1, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp slt i32 %149, 50
  %151 = select i1 %150, i32 %149, i32 50
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %147, i32 %151) #8
  br label %152

152:                                              ; preds = %142, %146
  store i32 0, i32* %36, align 4
  %153 = bitcast %"class.webrtc::ApiCallJitterMetrics"* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 2147483647, i32 0, i32 2147483647>, <4 x i32>* %153, align 4
  %154 = bitcast i32* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %154, i8 0, i64 10, i1 false) #8
  br label %155

155:                                              ; preds = %26, %152, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc20ApiCallJitterMetrics30WillReportMetricsAtNextCaptureEv(%"class.webrtc::ApiCallJitterMetrics"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ApiCallJitterMetrics", %"class.webrtc::ApiCallJitterMetrics"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 999
  ret i1 %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
