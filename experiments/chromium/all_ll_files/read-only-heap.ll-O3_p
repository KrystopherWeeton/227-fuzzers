; ModuleID = '../../v8/src/heap/read-only-heap.cc'
source_filename = "../../v8/src/heap/read-only-heap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.452" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.556", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.42", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.46", %"class.std::__1::vector.46", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.339", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.385", %"class.std::__1::shared_ptr.391", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.414", %"class.std::__1::unique_ptr.440", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.446", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.459", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set", i8, [7 x i8], %"class.std::__1::unordered_map.465", %"class.std::__1::unordered_map.491", %"class.std::__1::unordered_map.465", %"class.std::__1::unordered_map.515", %"class.std::__1::vector.543", i8, %"class.std::__1::unique_ptr.550", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.682", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.688", %"class.std::__1::unique_ptr.709", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.719", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.839", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.852", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.862", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.873", %"struct.std::__1::atomic.33", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.948", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.991"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.999", i32, i8, i8, i32, i32, %"class.std::__1::vector.1005", %"class.std::__1::vector.1005", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1012", i64, %"class.std::__1::unordered_map.1013", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.452", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.41", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1069", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.677", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.677" = type { %"struct.std::__1::__atomic_base.678" }
%"struct.std::__1::__atomic_base.678" = type { %"struct.std::__1::__cxx_atomic_impl.679" }
%"struct.std::__1::__cxx_atomic_impl.679" = type { %"struct.std::__1::__cxx_atomic_base_impl.680" }
%"struct.std::__1::__cxx_atomic_base_impl.680" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.688" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.556", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.703" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.692" }
%"class.std::__1::vector.692" = type { %"class.std::__1::__vector_base.693" }
%"class.std::__1::__vector_base.693" = type { %"class.std::__1::unique_ptr.694"*, %"class.std::__1::unique_ptr.694"*, %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.1220" }
%"class.std::__1::__compressed_pair.1220" = type { %"struct.std::__1::__compressed_pair_elem.1221" }
%"struct.std::__1::__compressed_pair_elem.1221" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.std::__1::unique_ptr.694"* }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.712", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.712" = type { %"struct.std::__1::__atomic_base.713" }
%"struct.std::__1::__atomic_base.713" = type { %"struct.std::__1::__cxx_atomic_impl.714" }
%"struct.std::__1::__cxx_atomic_impl.714" = type { %"struct.std::__1::__cxx_atomic_base_impl.715" }
%"struct.std::__1::__cxx_atomic_base_impl.715" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.719" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.720", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.720" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.721", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type opaque
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"struct.std::__1::atomic.33", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"class.std::__1::set.771", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.780" }
%"class.v8::internal::TaggedImpl.780" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.615", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.781", %"class.v8::internal::DetachableVector.782", %"class.v8::internal::DetachableVector.781", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.782" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.781" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.395", %"class.std::__1::set.403" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.395" = type { %"class.std::__1::__tree.396" }
%"class.std::__1::__tree.396" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.403" = type { %"class.std::__1::__tree.404" }
%"class.std::__1::__tree.404" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.783", %"class.std::__1::vector.789", %"class.std::__1::unique_ptr.796", %"class.std::__1::vector.803", %"class.std::__1::unique_ptr.810", i64, %"class.std::__1::vector.816", %"class.std::__1::vector.824", %"class.std::__1::vector.832", i8, i8, i32 }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.791" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.v8::internal::GlobalHandles::NodeSpace.799"* }
%"class.v8::internal::GlobalHandles::NodeSpace.799" = type opaque
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"struct.std::__1::pair.818"*, %"struct.std::__1::pair.818"*, %"class.std::__1::__compressed_pair.819" }
%"struct.std::__1::pair.818" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::pair.818"* }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.std::__1::pair.826"*, %"struct.std::__1::pair.826"*, %"class.std::__1::__compressed_pair.827" }
%"struct.std::__1::pair.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::pair.826"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.834" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.621", %"class.std::__1::vector.839" }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { i64**, i64**, %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.846" }
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { i32*, i32*, %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.852" = type { %"struct.std::__1::__atomic_base.853" }
%"struct.std::__1::__atomic_base.853" = type { %"struct.std::__1::__cxx_atomic_impl.854" }
%"struct.std::__1::__cxx_atomic_impl.854" = type { %"struct.std::__1::__cxx_atomic_base_impl.855" }
%"struct.std::__1::__cxx_atomic_base_impl.855" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.862" = type { %"struct.std::__1::__atomic_base.863" }
%"struct.std::__1::__atomic_base.863" = type { %"struct.std::__1::__cxx_atomic_impl.864" }
%"struct.std::__1::__cxx_atomic_impl.864" = type { %"struct.std::__1::__cxx_atomic_base_impl.865" }
%"struct.std::__1::__cxx_atomic_base_impl.865" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.869 }
%union.anon.869 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.873" = type { %"class.std::__1::__hash_table.874" }
%"class.std::__1::__hash_table.874" = type <{ %"class.std::__1::unique_ptr.875", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.893", [4 x i8] }>
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877", %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::__hash_node_base.878"** }
%"struct.std::__1::__hash_node_base.878" = type { %"struct.std::__1::__hash_node_base.878"* }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.std::__1::__bucket_list_deallocator.880" }
%"class.std::__1::__bucket_list_deallocator.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base.878" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.899", %"class.v8::internal::Handle.905", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.906", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.905" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.906" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.907", %"class.std::__1::vector.913", %"class.std::__1::unique_ptr.921", %"class.std::__1::unique_ptr.927", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"struct.std::__1::pair.947" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"class.std::__1::unique_ptr.915"*, %"class.std::__1::unique_ptr.915"*, %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::unique_ptr.915" = type opaque
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.std::__1::unique_ptr.915"* }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"struct.std::__1::pair.941"*, %"struct.std::__1::pair.941"*, %"class.std::__1::__compressed_pair.942" }
%"struct.std::__1::pair.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::pair.941"* }
%"struct.std::__1::pair.947" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.681"*, i16, i8*)*, i8* }
%"class.v8::Local.681" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.951", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.951" = type { %"class.std::__1::__hash_table.952" }
%"class.std::__1::__hash_table.952" = type <{ %"class.std::__1::unique_ptr.953", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.968", %"class.std::__1::__compressed_pair.972", [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955", %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.std::__1::__hash_node_base.956"** }
%"struct.std::__1::__hash_node_base.956" = type { %"struct.std::__1::__hash_node_base.956"* }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.std::__1::__bucket_list_deallocator.958" }
%"class.std::__1::__bucket_list_deallocator.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.956" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.986" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.980"**, %"struct.std::__1::pair.980"**, %"struct.std::__1::pair.980"**, %"class.std::__1::__compressed_pair.981" }
%"struct.std::__1::pair.980" = type opaque
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::pair.980"** }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %"class.v8::internal::Handle.993"*, %"class.v8::internal::Handle.993"*, %"class.std::__1::__compressed_pair.994" }
%"class.v8::internal::Handle.993" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.v8::internal::Handle.993"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.857", i32, %"class.v8::Local.681" }
%"class.v8::Local.857" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.621", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1005" = type { %"class.std::__1::__vector_base.1006" }
%"class.std::__1::__vector_base.1006" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1012" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1013" = type { %"class.std::__1::__hash_table.1014" }
%"class.std::__1::__hash_table.1014" = type <{ %"class.std::__1::unique_ptr.1015", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1033", [4 x i8] }>
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1018"** }
%"struct.std::__1::__hash_node_base.1018" = type { %"struct.std::__1::__hash_node_base.1018"* }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::__bucket_list_deallocator.1020" }
%"class.std::__1::__bucket_list_deallocator.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1018" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.41" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1037", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1066", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1067", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1037" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1062, %union.anon.1064, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1062 = type { i64 }
%union.anon.1064 = type { i64 }
%"class.std::__1::weak_ptr.1066" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.41" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1067" = type { %"class.v8::PersistentBase.1068" }
%"class.v8::PersistentBase.1068" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1038", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1038" = type { %"class.std::__1::__hash_table.1039" }
%"class.std::__1::__hash_table.1039" = type <{ %"class.std::__1::unique_ptr.1040", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1058", [4 x i8] }>
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042", %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1043"** }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::__bucket_list_deallocator.1045" }
%"class.std::__1::__bucket_list_deallocator.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1043" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.602", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.606", %"class.std::__1::unique_ptr.631", %"class.std::__1::unique_ptr.385", %"class.std::__1::vector.637", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.602" = type { %"struct.std::__1::__atomic_base.603" }
%"struct.std::__1::__atomic_base.603" = type { %"struct.std::__1::__cxx_atomic_impl.604" }
%"struct.std::__1::__cxx_atomic_impl.604" = type { %"struct.std::__1::__cxx_atomic_base_impl.605" }
%"struct.std::__1::__cxx_atomic_base_impl.605" = type { i32 }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.621" }
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.637" = type { %"class.std::__1::__vector_base.638" }
%"class.std::__1::__vector_base.638" = type { %"struct.std::__1::pair.639"*, %"struct.std::__1::pair.639"*, %"class.std::__1::__compressed_pair.640" }
%"struct.std::__1::pair.639" = type opaque
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::pair.639"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.596" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.563", %"class.std::__1::vector.563", %"class.std::__1::unordered_set.570", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.563" = type { %"class.std::__1::__vector_base.564" }
%"class.std::__1::__vector_base.564" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.565" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set.570" = type { %"class.std::__1::__hash_table.571" }
%"class.std::__1::__hash_table.571" = type <{ %"class.std::__1::unique_ptr.572", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.591", [4 x i8] }>
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574", %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.575"** }
%"struct.std::__1::__hash_node_base.575" = type { %"struct.std::__1::__hash_node_base.575"* }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"class.std::__1::__bucket_list_deallocator.577" }
%"class.std::__1::__bucket_list_deallocator.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.std::__1::__hash_node_base.575" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.183", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.165", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.169" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.171" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.187", i8, [7 x i8] }>
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { i64*, i64*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.858", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.858" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.669" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"struct.std::__1::pair.671"*, %"struct.std::__1::pair.671"*, %"class.std::__1::__compressed_pair.672" }
%"struct.std::__1::pair.671" = type { i32, i64 }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"struct.std::__1::pair.671"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.645" }
%"class.std::__1::unordered_map.645" = type { %"class.std::__1::__hash_table.646" }
%"class.std::__1::__hash_table.646" = type <{ %"class.std::__1::unique_ptr.647", %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.665", [4 x i8] }>
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649", %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base.650"** }
%"struct.std::__1::__hash_node_base.650" = type { %"struct.std::__1::__hash_node_base.650"* }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.std::__1::__bucket_list_deallocator.652" }
%"class.std::__1::__bucket_list_deallocator.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::__hash_node_base.650" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.33", %"struct.std::__1::atomic.37", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.48" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.std::__1::vector.199", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.62", %"class.std::__1::vector.63", %"class.std::__1::vector.70", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.62" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.std::__1::unique_ptr.72"*, %"class.std::__1::unique_ptr.72"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr.72"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.78", %"class.v8::internal::Worklist.80", %"class.v8::internal::Worklist.80", %"class.v8::internal::Worklist.80", %"class.v8::internal::Worklist.82", %"class.v8::internal::Worklist.84", %"class.v8::internal::Worklist.86", %"class.v8::internal::Worklist.88", %"class.v8::internal::Worklist.90", %"class.v8::internal::Worklist.92" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.78" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.80" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.82" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.84" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.86" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.88" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.90" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.92" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.94", i8, i64 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.110" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.62"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.110" = type { %"class.std::__1::__hash_table.111" }
%"class.std::__1::__hash_table.111" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.130", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.115"** }
%"struct.std::__1::__hash_node_base.115" = type { %"struct.std::__1::__hash_node_base.115"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator.117" }
%"class.std::__1::__bucket_list_deallocator.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.115" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.139" }
%"class.std::__1::unordered_map.139" = type { %"class.std::__1::__hash_table.140" }
%"class.std::__1::__hash_table.140" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.159", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.144"** }
%"struct.std::__1::__hash_node_base.144" = type { %"struct.std::__1::__hash_node_base.144"* }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::__bucket_list_deallocator.146" }
%"class.std::__1::__bucket_list_deallocator.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base.144" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.std::__1::pair.201"*, %"struct.std::__1::pair.201"*, %"class.std::__1::__compressed_pair.202" }
%"struct.std::__1::pair.201" = type opaque
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.std::__1::pair.201"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.207", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.163"], [3 x %"class.std::__1::vector.163"], i8, %"struct.std::__1::atomic.33", [6 x i8], %"class.std::__1::vector.163", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.217"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.217" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.235"], %"class.std::__1::unique_ptr.207" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.273", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.277", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.282" }
%"struct.std::__1::atomic.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.282" = type { %"class.std::__1::__hash_table.283" }
%"class.std::__1::__hash_table.283" = type <{ %"class.std::__1::unique_ptr.284", %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.299", %"class.std::__1::__compressed_pair.302", [4 x i8] }>
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286", %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base.287"** }
%"struct.std::__1::__hash_node_base.287" = type { %"struct.std::__1::__hash_node_base.287"* }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.std::__1::__bucket_list_deallocator.289" }
%"class.std::__1::__bucket_list_deallocator.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.287" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.207", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.33", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.312", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.312" = type { %"class.std::__1::__hash_table.313" }
%"class.std::__1::__hash_table.313" = type <{ %"class.std::__1::unique_ptr.314", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.332", [4 x i8] }>
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316", %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"struct.std::__1::__hash_node_base.317"** }
%"struct.std::__1::__hash_node_base.317" = type { %"struct.std::__1::__hash_node_base.317"* }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.std::__1::__bucket_list_deallocator.319" }
%"class.std::__1::__bucket_list_deallocator.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base.317" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.348" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.391" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.410", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.392", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.410" = type { %"struct.std::__1::__atomic_base.411" }
%"struct.std::__1::__atomic_base.411" = type { %"struct.std::__1::__cxx_atomic_impl.412" }
%"struct.std::__1::__cxx_atomic_impl.412" = type { %"struct.std::__1::__cxx_atomic_base_impl.413" }
%"struct.std::__1::__cxx_atomic_base_impl.413" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.414" = type { %"class.std::__1::__hash_table.415" }
%"class.std::__1::__hash_table.415" = type <{ %"class.std::__1::unique_ptr.416", %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.434", [4 x i8] }>
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418", %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"struct.std::__1::__hash_node_base.419"** }
%"struct.std::__1::__hash_node_base.419" = type { %"struct.std::__1::__hash_node_base.419"* }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.std::__1::__bucket_list_deallocator.421" }
%"class.std::__1::__bucket_list_deallocator.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"struct.std::__1::__hash_node_base.419" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.452", %"class.std::__1::vector.452" }
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.242" }
%"class.std::__1::__hash_table.242" = type <{ %"class.std::__1::unique_ptr.243", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.262", [4 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.246"** }
%"struct.std::__1::__hash_node_base.246" = type { %"struct.std::__1::__hash_node_base.246"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator.248" }
%"class.std::__1::__bucket_list_deallocator.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base.246" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.491" = type { %"class.std::__1::__hash_table.492" }
%"class.std::__1::__hash_table.492" = type <{ %"class.std::__1::unique_ptr.493", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.511", [4 x i8] }>
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.496"** }
%"struct.std::__1::__hash_node_base.496" = type { %"struct.std::__1::__hash_node_base.496"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__bucket_list_deallocator.498" }
%"class.std::__1::__bucket_list_deallocator.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.std::__1::__hash_node_base.496" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.465" = type { %"class.std::__1::__hash_table.466" }
%"class.std::__1::__hash_table.466" = type <{ %"class.std::__1::unique_ptr.467", %"class.std::__1::__compressed_pair.477", %"class.std::__1::__compressed_pair.482", %"class.std::__1::__compressed_pair.485", [4 x i8] }>
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469", %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__hash_node_base.470"** }
%"struct.std::__1::__hash_node_base.470" = type { %"struct.std::__1::__hash_node_base.470"* }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.std::__1::__bucket_list_deallocator.472" }
%"class.std::__1::__bucket_list_deallocator.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.std::__1::__hash_node_base.470" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.515" = type { %"class.std::__1::__hash_table.516" }
%"class.std::__1::__hash_table.516" = type <{ %"class.std::__1::unique_ptr.517", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.532", %"class.std::__1::__compressed_pair.537", [4 x i8] }>
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519", %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.520"** }
%"struct.std::__1::__hash_node_base.520" = type { %"struct.std::__1::__hash_node_base.520"* }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.std::__1::__bucket_list_deallocator.522" }
%"class.std::__1::__bucket_list_deallocator.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.std::__1::__hash_node_base.520" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.556" = type { %"class.std::__1::__vector_base.557" }
%"class.std::__1::__vector_base.557" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.558" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::Object"* }
%"struct.std::__1::aligned_storage<40, 8>::type" = type { [40 x i8] }
%"struct.std::__1::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::ReadOnlyHeapObjectIterator" = type { %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::__wrap_iter", i64 }
%"class.std::__1::__wrap_iter" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::SnapshotData" = type { %"class.v8::internal::SerializedData.base", [3 x i8] }
%"class.v8::internal::SerializedData.base" = type <{ i32 (...)**, i8*, i32, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.v8::internal::ReadOnlyDeserializer" = type { %"class.v8::internal::Deserializer" }
%"class.v8::internal::Deserializer" = type { %"class.v8::internal::SerializerDeserializer", %"class.v8::internal::Isolate"*, %"class.std::__1::vector.991", %"class.v8::internal::SnapshotByteSource", i32, [4 x i8], %"class.v8::internal::Deserializer::HotObjectsList", %"class.std::__1::vector.1135", %"class.std::__1::vector.1143", %"class.std::__1::vector.1151", %"class.std::__1::vector.1159", %"class.std::__1::vector.1167", %"class.std::__1::vector.1175", %"class.std::__1::vector.1183", %"class.std::__1::vector.1191", %"class.std::__1::vector.1199", %"class.std::__1::vector.991", %"class.std::__1::vector.1206", i32, i8, i8, i8, %"class.std::__1::vector.991" }
%"class.v8::internal::SerializerDeserializer" = type { %"class.v8::internal::RootVisitor" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::SnapshotByteSource" = type { i8*, i32, i32 }
%"class.v8::internal::Deserializer::HotObjectsList" = type <{ [8 x %"class.v8::internal::Handle.993"], i32, [4 x i8] }>
%"class.std::__1::vector.1135" = type { %"class.std::__1::__vector_base.1136" }
%"class.std::__1::__vector_base.1136" = type { %"class.v8::internal::Handle.1137"*, %"class.v8::internal::Handle.1137"*, %"class.std::__1::__compressed_pair.1138" }
%"class.v8::internal::Handle.1137" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.v8::internal::Handle.1137"* }
%"class.std::__1::vector.1143" = type { %"class.std::__1::__vector_base.1144" }
%"class.std::__1::__vector_base.1144" = type { %"class.v8::internal::Handle.1145"*, %"class.v8::internal::Handle.1145"*, %"class.std::__1::__compressed_pair.1146" }
%"class.v8::internal::Handle.1145" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.v8::internal::Handle.1145"* }
%"class.std::__1::vector.1151" = type { %"class.std::__1::__vector_base.1152" }
%"class.std::__1::__vector_base.1152" = type { %"class.v8::internal::Handle.1153"*, %"class.v8::internal::Handle.1153"*, %"class.std::__1::__compressed_pair.1154" }
%"class.v8::internal::Handle.1153" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"class.v8::internal::Handle.1153"* }
%"class.std::__1::vector.1159" = type { %"class.std::__1::__vector_base.1160" }
%"class.std::__1::__vector_base.1160" = type { %"class.v8::internal::Handle.1161"*, %"class.v8::internal::Handle.1161"*, %"class.std::__1::__compressed_pair.1162" }
%"class.v8::internal::Handle.1161" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.v8::internal::Handle.1161"* }
%"class.std::__1::vector.1167" = type { %"class.std::__1::__vector_base.1168" }
%"class.std::__1::__vector_base.1168" = type { %"class.v8::internal::Handle.1169"*, %"class.v8::internal::Handle.1169"*, %"class.std::__1::__compressed_pair.1170" }
%"class.v8::internal::Handle.1169" = type opaque
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.v8::internal::Handle.1169"* }
%"class.std::__1::vector.1175" = type { %"class.std::__1::__vector_base.1176" }
%"class.std::__1::__vector_base.1176" = type { %"class.v8::internal::Handle.1177"*, %"class.v8::internal::Handle.1177"*, %"class.std::__1::__compressed_pair.1178" }
%"class.v8::internal::Handle.1177" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.v8::internal::Handle.1177"* }
%"class.std::__1::vector.1183" = type { %"class.std::__1::__vector_base.1184" }
%"class.std::__1::__vector_base.1184" = type { %"class.v8::internal::Handle.1185"*, %"class.v8::internal::Handle.1185"*, %"class.std::__1::__compressed_pair.1186" }
%"class.v8::internal::Handle.1185" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.v8::internal::Handle.1185"* }
%"class.std::__1::vector.1191" = type { %"class.std::__1::__vector_base.1192" }
%"class.std::__1::__vector_base.1192" = type { %"class.v8::internal::Handle.1193"*, %"class.v8::internal::Handle.1193"*, %"class.std::__1::__compressed_pair.1194" }
%"class.v8::internal::Handle.1193" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.v8::internal::Handle.1193"* }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::vector.1206" = type { %"class.std::__1::__vector_base.1207" }
%"class.std::__1::__vector_base.1207" = type { %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"struct.v8::internal::Deserializer::UnresolvedForwardRef"*, %"class.std::__1::__compressed_pair.1208" }
%"struct.v8::internal::Deserializer::UnresolvedForwardRef" = type { %"class.v8::internal::Handle.993", i32, i32 }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"struct.v8::internal::Deserializer::UnresolvedForwardRef"* }
%"struct.std::__1::atomic.1128" = type { %"struct.std::__1::__atomic_base.1129" }
%"struct.std::__1::__atomic_base.1129" = type { %"struct.std::__1::__atomic_base.1130" }
%"struct.std::__1::__atomic_base.1130" = type { %"struct.std::__1::__cxx_atomic_impl.1131" }
%"struct.std::__1::__cxx_atomic_impl.1131" = type { %"struct.std::__1::__cxx_atomic_base_impl.1132" }
%"struct.std::__1::__cxx_atomic_base_impl.1132" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::SharedMemoryStatistics" = type { i64, i64, i64 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<v8::internal::SingleCopyReadOnlyArtifacts, std::__1::allocator<v8::internal::SingleCopyReadOnlyArtifacts> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<v8::internal::SingleCopyReadOnlyArtifacts, std::__1::allocator<v8::internal::SingleCopyReadOnlyArtifacts> >::_Storage" = type { [80 x i8] }
%"class.v8::internal::SingleCopyReadOnlyArtifacts" = type { %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::PageAllocator"* }

$_ZN2v88internal12ReadOnlyHeapD2Ev = comdat any

$_ZN2v88internal12ReadOnlyHeapD0Ev = comdat any

$_ZN2v88internal12ReadOnlyHeap22InitializeIsolateRootsEPNS0_7IsolateE = comdat any

$_ZN2v88internal12ReadOnlyHeap26InitializeFromIsolateRootsEPNS0_7IsolateE = comdat any

$_ZN2v88internal12ReadOnlyHeap16IsOwnedByIsolateEv = comdat any

$_ZN2v88internal16SoleReadOnlyHeapD0Ev = comdat any

$_ZN2v88internal16SoleReadOnlyHeap16IsOwnedByIsolateEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZN2v88internal17ReadOnlyArtifactsD2Ev = comdat any

$_ZN2v88internal17ReadOnlyArtifactsD0Ev = comdat any

$_ZN2v88internal20ReadOnlyDeserializerD0Ev = comdat any

$_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE = comdat any

$_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv = comdat any

$_ZNSt3__120__throw_bad_weak_ptrEv = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEEE = comdat any

$_ZTVN2v88internal17ReadOnlyArtifactsE = comdat any

$_ZTVN2v88internal20ReadOnlyDeserializerE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported = internal unnamed_addr global i8 0, align 1
@_ZGVZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported = internal global i64 0, align 8
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = hidden local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"* null, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"!artifacts\00", align 1
@_ZTVN2v88internal12ReadOnlyHeapE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ReadOnlyHeap"*)* @_ZN2v88internal12ReadOnlyHeapD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ReadOnlyHeap"*)* @_ZN2v88internal12ReadOnlyHeapD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal12ReadOnlyHeap14OnHeapTearDownEPNS0_4HeapE to i8*), i8* bitcast (void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal12ReadOnlyHeap22InitializeIsolateRootsEPNS0_7IsolateE to i8*), i8* bitcast (void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal12ReadOnlyHeap26InitializeFromIsolateRootsEPNS0_7IsolateE to i8*), i8* bitcast (i1 (%"class.v8::internal::ReadOnlyHeap"*)* @_ZN2v88internal12ReadOnlyHeap16IsOwnedByIsolateEv to i8*)] }, align 8
@_ZTVN2v88internal16SoleReadOnlyHeapE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ReadOnlyHeap"*)* @_ZN2v88internal12ReadOnlyHeapD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::SoleReadOnlyHeap"*)* @_ZN2v88internal16SoleReadOnlyHeapD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal16SoleReadOnlyHeap14OnHeapTearDownEPNS0_4HeapE to i8*), i8* bitcast (void (%"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal16SoleReadOnlyHeap22InitializeIsolateRootsEPNS0_7IsolateE to i8*), i8* bitcast (void (%"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::Isolate"*)* @_ZN2v88internal16SoleReadOnlyHeap26InitializeFromIsolateRootsEPNS0_7IsolateE to i8*), i8* bitcast (i1 (%"class.v8::internal::SoleReadOnlyHeap"*)* @_ZN2v88internal16SoleReadOnlyHeap16IsOwnedByIsolateEv to i8*)] }, align 8
@_ZN2v88internal12_GLOBAL__N_130read_only_heap_creation_mutex_E = internal global { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" } { { { i8 } } zeroinitializer, [7 x i8] undef, %"struct.std::__1::aligned_storage<40, 8>::type" zeroinitializer }, align 8
@_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E = internal global { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" } { { { i8 } } zeroinitializer, [7 x i8] undef, %"struct.std::__1::aligned_storage<16, 8>::type" zeroinitializer }, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVN2v88internal27SingleCopyReadOnlyArtifactsE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZTVN2v88internal17ReadOnlyArtifactsE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ReadOnlyArtifacts"*)* @_ZN2v88internal17ReadOnlyArtifactsD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ReadOnlyArtifacts"*)* @_ZN2v88internal17ReadOnlyArtifactsD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN2v88internal20ReadOnlyDeserializerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Deserializer"*)* @_ZN2v88internal12DeserializerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ReadOnlyDeserializer"*)* @_ZN2v88internal20ReadOnlyDeserializerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Deserializer"*, i32, i8*, i64, i64)* @_ZN2v88internal12Deserializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)* @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::Deserializer"*, i32)* @_ZN2v88internal12Deserializer11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8

@_ZN2v88internal12ReadOnlyHeapC1EPS1_PNS0_13ReadOnlySpaceE = hidden unnamed_addr alias void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlySpace"*), void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlySpace"*)* @_ZN2v88internal12ReadOnlyHeapC2EPS1_PNS0_13ReadOnlySpaceE
@_ZN2v88internal26ReadOnlyHeapObjectIteratorC1EPNS0_12ReadOnlyHeapE = hidden unnamed_addr alias void (%"class.v8::internal::ReadOnlyHeapObjectIterator"*, %"class.v8::internal::ReadOnlyHeap"*), void (%"class.v8::internal::ReadOnlyHeapObjectIterator"*, %"class.v8::internal::ReadOnlyHeap"*)* @_ZN2v88internal26ReadOnlyHeapObjectIteratorC2EPNS0_12ReadOnlyHeapE
@_ZN2v88internal26ReadOnlyHeapObjectIteratorC1EPNS0_13ReadOnlySpaceE = hidden unnamed_addr alias void (%"class.v8::internal::ReadOnlyHeapObjectIterator"*, %"class.v8::internal::ReadOnlySpace"*), void (%"class.v8::internal::ReadOnlyHeapObjectIterator"*, %"class.v8::internal::ReadOnlySpace"*)* @_ZN2v88internal26ReadOnlyHeapObjectIteratorC2EPNS0_13ReadOnlySpaceE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %14, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() #14
  %8 = bitcast %"class.v8::PageAllocator"* %7 to i1 (%"class.v8::PageAllocator"*)***
  %9 = load i1 (%"class.v8::PageAllocator"*)**, i1 (%"class.v8::PageAllocator"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.v8::PageAllocator"*)*, i1 (%"class.v8::PageAllocator"*)** %9, i64 13
  %11 = load i1 (%"class.v8::PageAllocator"*)*, i1 (%"class.v8::PageAllocator"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.v8::PageAllocator"* %7) #14
  %13 = zext i1 %12 to i8
  store i8 %13, i8* @_ZZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported) #14
  br label %14

14:                                               ; preds = %3, %6, %0
  %15 = load i8, i8* @_ZZN2v88internal12ReadOnlyHeap23IsSharedMemoryAvailableEvE34shared_memory_allocation_supported, align 1, !range !3
  %16 = icmp ne i8 %15, 0
  ret i1 %16
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

declare %"class.v8::PageAllocator"* @_ZN2v88internal24GetPlatformPageAllocatorEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeap5SetUpEPNS0_7IsolateEPNS0_12SnapshotDataEb(%"class.v8::internal::Isolate"*, %"class.v8::internal::SnapshotData"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function", align 8
  %5 = alloca %"class.v8::internal::ReadOnlyDeserializer", align 8
  %6 = alloca %"class.std::__1::function", align 8
  %7 = alloca %"class.std::__1::function", align 8
  %8 = icmp eq %"class.v8::internal::SnapshotData"* %1, null
  br i1 %8, label %118, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::function"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #14
  %11 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_130read_only_heap_creation_mutex_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %14, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  %16 = bitcast %"class.std::__1::function"* %7 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv, void (i8*)** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast [8 x i8]* %17 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_130read_only_heap_creation_mutex_E, i64 0, i32 2, i32 0, i64 0), i8** %18, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_130read_only_heap_creation_mutex_E to %"struct.std::__1::atomic.1128"*), %"class.std::__1::function"* nonnull %7) #14
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 1
  %21 = load void (i8*)*, void (i8*)** %20, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void %21(i8* %25) #14
  br label %26

26:                                               ; preds = %9, %13, %23
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #14
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_130read_only_heap_creation_mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #14
  %27 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #14
  %28 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %31, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %32, align 8
  %33 = bitcast %"class.std::__1::function"* %6 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv, void (i8*)** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast [8 x i8]* %34 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0), i8** %35, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E to %"struct.std::__1::atomic.1128"*), %"class.std::__1::function"* nonnull %6) #14
  %36 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %32, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %36, i64 0, i32 1
  %38 = load void (i8*)*, void (i8*)** %37, align 8
  %39 = icmp eq void (i8*)* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void %38(i8* %42) #14
  br label %43

43:                                               ; preds = %26, %30, %40
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #14
  %44 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 8) to %"class.std::__1::__shared_weak_count"**), align 8
  %45 = icmp eq %"class.std::__1::__shared_weak_count"* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  %47 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %44) #14
  %48 = icmp eq %"class.std::__1::__shared_weak_count"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = load %"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::ReadOnlyArtifacts"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::internal::ReadOnlyArtifacts"**), align 8
  %51 = icmp eq %"class.v8::internal::ReadOnlyArtifacts"* %50, null
  br i1 %51, label %52, label %89

52:                                               ; preds = %49, %43, %46
  %53 = phi %"class.std::__1::__shared_weak_count"* [ %47, %49 ], [ null, %46 ], [ null, %43 ]
  %54 = call fastcc { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal12_GLOBAL__N_133InitializeSharedReadOnlyArtifactsEv()
  %55 = extractvalue { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } %54, 0
  %56 = extractvalue { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } %54, 1
  %57 = icmp eq %"class.std::__1::__shared_weak_count"* %53, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %53, i64 0, i32 0, i32 1
  %60 = atomicrmw add i64* %59, i64 -1 acq_rel
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %53, i64 0, i32 0
  %64 = bitcast %"class.std::__1::__shared_weak_count"* %53 to void (%"class.std::__1::__shared_count"*)***
  %65 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %65, i64 2
  %67 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %66, align 8
  call void %67(%"class.std::__1::__shared_count"* %63) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %53) #14
  br label %68

68:                                               ; preds = %62, %58, %52
  call void @_ZN2v88internal17ReadOnlyArtifacts18InitializeChecksumEPNS0_12SnapshotDataE(%"class.v8::internal::ReadOnlyArtifacts"* %55, %"class.v8::internal::SnapshotData"* nonnull %1) #14
  %69 = icmp eq %"class.std::__1::__shared_weak_count"* %56, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %56, i64 0, i32 0, i32 1
  %72 = atomicrmw add i64* %71, i64 1 monotonic
  br label %73

73:                                               ; preds = %68, %70
  %74 = call %"class.v8::internal::ReadOnlyHeap"* @_ZN2v88internal12ReadOnlyHeap32CreateInitalHeapForBootstrappingEPNS0_7IsolateENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::ReadOnlyArtifacts"* %55, %"class.std::__1::__shared_weak_count"* %56)
  %75 = bitcast %"class.v8::internal::ReadOnlyDeserializer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %75) #14
  %76 = getelementptr inbounds %"class.v8::internal::ReadOnlyDeserializer", %"class.v8::internal::ReadOnlyDeserializer"* %5, i64 0, i32 0
  %77 = bitcast %"class.v8::internal::SnapshotData"* %1 to { i8*, i64 } (%"class.v8::internal::SnapshotData"*)***
  %78 = load { i8*, i64 } (%"class.v8::internal::SnapshotData"*)**, { i8*, i64 } (%"class.v8::internal::SnapshotData"*)*** %77, align 8
  %79 = getelementptr inbounds { i8*, i64 } (%"class.v8::internal::SnapshotData"*)*, { i8*, i64 } (%"class.v8::internal::SnapshotData"*)** %78, i64 2
  %80 = load { i8*, i64 } (%"class.v8::internal::SnapshotData"*)*, { i8*, i64 } (%"class.v8::internal::SnapshotData"*)** %79, align 8
  %81 = call { i8*, i64 } %80(%"class.v8::internal::SnapshotData"* nonnull %1) #14
  %82 = extractvalue { i8*, i64 } %81, 0
  %83 = extractvalue { i8*, i64 } %81, 1
  %84 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %1, i64 0, i32 0, i32 1
  %85 = bitcast i8** %84 to i32**
  %86 = load i32*, i32** %85, align 8
  %87 = load i32, i32* %86, align 1
  call void @_ZN2v88internal12DeserializerC2EPNS0_7IsolateENS0_6VectorIKhEEjbb(%"class.v8::internal::Deserializer"* nonnull %76, %"class.v8::internal::Isolate"* %0, i8* %82, i64 %83, i32 %87, i1 zeroext false, i1 zeroext %2) #14
  %88 = getelementptr inbounds %"class.v8::internal::ReadOnlyDeserializer", %"class.v8::internal::ReadOnlyDeserializer"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal20ReadOnlyDeserializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  call void @_ZN2v88internal20ReadOnlyDeserializer22DeserializeIntoIsolateEv(%"class.v8::internal::ReadOnlyDeserializer"* nonnull %5) #14
  call void @_ZN2v88internal12ReadOnlyHeap15InitFromIsolateEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"* %74, %"class.v8::internal::Isolate"* %0) #14
  call void @_ZN2v88internal12DeserializerD2Ev(%"class.v8::internal::Deserializer"* nonnull %76) #14
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %75) #14
  br label %97

89:                                               ; preds = %49
  %90 = bitcast %"class.v8::internal::ReadOnlyArtifacts"* %50 to %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)***
  %91 = load %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)**, %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)*, %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)** %91, i64 4
  %93 = load %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)*, %"class.v8::internal::ReadOnlyHeap"* (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)** %92, align 8
  %94 = call %"class.v8::internal::ReadOnlyHeap"* %93(%"class.v8::internal::ReadOnlyArtifacts"* nonnull %50, %"class.v8::internal::Isolate"* %0) #14
  %95 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %96 = atomicrmw add i64* %95, i64 1 monotonic
  call void @_ZN2v88internal7Isolate26SetUpFromReadOnlyArtifactsENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEEPNS0_12ReadOnlyHeapE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::ReadOnlyArtifacts"* nonnull %50, %"class.std::__1::__shared_weak_count"* nonnull %47, %"class.v8::internal::ReadOnlyHeap"* %94) #14
  br label %97

97:                                               ; preds = %89, %73
  %98 = phi %"class.v8::internal::ReadOnlyArtifacts"* [ %50, %89 ], [ %55, %73 ]
  %99 = phi %"class.std::__1::__shared_weak_count"* [ %47, %89 ], [ %56, %73 ]
  %100 = phi i1 [ false, %89 ], [ true, %73 ]
  %101 = phi %"class.v8::internal::ReadOnlyHeap"* [ %94, %89 ], [ %74, %73 ]
  call void @_ZN2v88internal17ReadOnlyArtifacts14VerifyChecksumEPNS0_12SnapshotDataEb(%"class.v8::internal::ReadOnlyArtifacts"* %98, %"class.v8::internal::SnapshotData"* nonnull %1, i1 zeroext %100) #14
  %102 = bitcast %"class.v8::internal::ReadOnlyHeap"* %101 to void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)***
  %103 = load void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)**, void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)*, void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)** %103, i64 3
  %105 = load void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)*, void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)** %104, align 8
  call void %105(%"class.v8::internal::ReadOnlyHeap"* %101, %"class.v8::internal::Isolate"* %0) #14
  %106 = icmp eq %"class.std::__1::__shared_weak_count"* %99, null
  br i1 %106, label %117, label %107

107:                                              ; preds = %97
  %108 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %99, i64 0, i32 0, i32 1
  %109 = atomicrmw add i64* %108, i64 -1 acq_rel
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %117

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %99, i64 0, i32 0
  %113 = bitcast %"class.std::__1::__shared_weak_count"* %99 to void (%"class.std::__1::__shared_count"*)***
  %114 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %114, i64 2
  %116 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %115, align 8
  call void %116(%"class.std::__1::__shared_count"* %112) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %99) #14
  br label %117

117:                                              ; preds = %97, %107, %111
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* bitcast (%"struct.std::__1::aligned_storage<40, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<40, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_130read_only_heap_creation_mutex_E, i64 0, i32 2) to %"class.v8::base::Mutex"*)) #14
  br label %177

118:                                              ; preds = %3
  %119 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #14
  %120 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %121 = icmp eq i8 %120, 2
  br i1 %121, label %135, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %124 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %123, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %124, align 8
  %125 = bitcast %"class.std::__1::function"* %4 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv, void (i8*)** %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 1
  %127 = bitcast [8 x i8]* %126 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0), i8** %127, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E to %"struct.std::__1::atomic.1128"*), %"class.std::__1::function"* nonnull %4) #14
  %128 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %124, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %128, i64 0, i32 1
  %130 = load void (i8*)*, void (i8*)** %129, align 8
  %131 = icmp eq void (i8*)* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void %130(i8* %134) #14
  br label %135

135:                                              ; preds = %118, %122, %132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #14
  %136 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 8) to %"class.std::__1::__shared_weak_count"**), align 8
  %137 = icmp eq %"class.std::__1::__shared_weak_count"* %136, null
  br i1 %137, label %145, label %138

138:                                              ; preds = %135
  %139 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %136) #14
  %140 = icmp eq %"class.std::__1::__shared_weak_count"* %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = load %"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::ReadOnlyArtifacts"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::internal::ReadOnlyArtifacts"**), align 8
  %143 = icmp eq %"class.v8::internal::ReadOnlyArtifacts"* %142, null
  br i1 %143, label %145, label %144, !prof !4

144:                                              ; preds = %141
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #15
  unreachable

145:                                              ; preds = %141, %135, %138
  %146 = phi %"class.std::__1::__shared_weak_count"* [ %139, %141 ], [ null, %138 ], [ null, %135 ]
  %147 = call fastcc { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal12_GLOBAL__N_133InitializeSharedReadOnlyArtifactsEv()
  %148 = extractvalue { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } %147, 0
  %149 = extractvalue { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } %147, 1
  %150 = icmp eq %"class.std::__1::__shared_weak_count"* %146, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %146, i64 0, i32 0, i32 1
  %153 = atomicrmw add i64* %152, i64 -1 acq_rel
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %146, i64 0, i32 0
  %157 = bitcast %"class.std::__1::__shared_weak_count"* %146 to void (%"class.std::__1::__shared_count"*)***
  %158 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %158, i64 2
  %160 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %159, align 8
  call void %160(%"class.std::__1::__shared_count"* %156) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %146) #14
  br label %161

161:                                              ; preds = %155, %151, %145
  %162 = icmp eq %"class.std::__1::__shared_weak_count"* %149, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %149, i64 0, i32 0, i32 1
  %165 = atomicrmw add i64* %164, i64 1 monotonic
  %166 = call %"class.v8::internal::ReadOnlyHeap"* @_ZN2v88internal12ReadOnlyHeap32CreateInitalHeapForBootstrappingEPNS0_7IsolateENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::ReadOnlyArtifacts"* %148, %"class.std::__1::__shared_weak_count"* nonnull %149)
  call void @_ZN2v88internal17ReadOnlyArtifacts14VerifyChecksumEPNS0_12SnapshotDataEb(%"class.v8::internal::ReadOnlyArtifacts"* %148, %"class.v8::internal::SnapshotData"* null, i1 zeroext true) #14
  %167 = atomicrmw add i64* %164, i64 -1 acq_rel
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %177

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %149, i64 0, i32 0
  %171 = bitcast %"class.std::__1::__shared_weak_count"* %149 to void (%"class.std::__1::__shared_count"*)***
  %172 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %172, i64 2
  %174 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %173, align 8
  call void %174(%"class.std::__1::__shared_count"* %170) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %149) #14
  br label %177

175:                                              ; preds = %161
  %176 = call %"class.v8::internal::ReadOnlyHeap"* @_ZN2v88internal12ReadOnlyHeap32CreateInitalHeapForBootstrappingEPNS0_7IsolateENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::ReadOnlyArtifacts"* %148, %"class.std::__1::__shared_weak_count"* null)
  call void @_ZN2v88internal17ReadOnlyArtifacts14VerifyChecksumEPNS0_12SnapshotDataEb(%"class.v8::internal::ReadOnlyArtifacts"* %148, %"class.v8::internal::SnapshotData"* null, i1 zeroext true) #14
  br label %177

177:                                              ; preds = %175, %169, %163, %117
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } @_ZN2v88internal12_GLOBAL__N_133InitializeSharedReadOnlyArtifactsEv() unnamed_addr #0 {
  %1 = alloca %"class.std::__1::function", align 8
  %2 = tail call i8* @_Znwm(i64 104) #16
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 24
  %6 = getelementptr inbounds i8, i8* %2, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false) #14
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal17ReadOnlyArtifactsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = bitcast i8* %6 to i64*
  store atomic i64 0, i64* %9 seq_cst, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 64
  %11 = bitcast i8* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 72
  %13 = bitcast i8* %12 to i64*
  store atomic i64 0, i64* %13 seq_cst, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal27SingleCopyReadOnlyArtifactsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 96
  %16 = bitcast i8* %15 to %"class.v8::PageAllocator"**
  store %"class.v8::PageAllocator"* null, %"class.v8::PageAllocator"** %16, align 8
  %17 = bitcast i8* %2 to %"class.std::__1::__shared_weak_count"*
  %18 = ptrtoint i8* %5 to i64
  %19 = ptrtoint i8* %2 to i64
  %20 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #14
  %21 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %22 = icmp eq i8 %21, 2
  br i1 %22, label %36, label %23

23:                                               ; preds = %0
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %24, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %25, align 8
  %26 = bitcast %"class.std::__1::function"* %1 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv, void (i8*)** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast [8 x i8]* %27 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0), i8** %28, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E to %"struct.std::__1::atomic.1128"*), %"class.std::__1::function"* nonnull %1) #14
  %29 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %25, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %29, i64 0, i32 1
  %31 = load void (i8*)*, void (i8*)** %30, align 8
  %32 = icmp eq void (i8*)* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void %31(i8* %35) #14
  br label %36

36:                                               ; preds = %0, %23, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #14
  %37 = getelementptr inbounds i8, i8* %2, i64 16
  %38 = bitcast i8* %37 to i64*
  %39 = atomicrmw add i64* %38, i64 1 monotonic
  store i64 %18, i64* bitcast (%"struct.std::__1::aligned_storage<16, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2) to i64*), align 8
  %40 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 8) to %"class.std::__1::__shared_weak_count"**), align 8
  store i64 %19, i64* bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 8) to i64*), align 8
  %41 = icmp eq %"class.std::__1::__shared_weak_count"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %36
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %40) #14
  br label %43

43:                                               ; preds = %36, %42
  %44 = bitcast i8* %5 to %"class.v8::internal::ReadOnlyArtifacts"*
  %45 = insertvalue { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8::internal::ReadOnlyArtifacts"* %44, 0
  %46 = insertvalue { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } %45, %"class.std::__1::__shared_weak_count"* %17, 1
  ret { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* } %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2v88internal17ReadOnlyArtifacts18InitializeChecksumEPNS0_12SnapshotDataE(%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::SnapshotData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ReadOnlyHeap"* @_ZN2v88internal12ReadOnlyHeap32CreateInitalHeapForBootstrappingEPNS0_7IsolateENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 136) #14
  %5 = bitcast i8* %4 to %"class.v8::internal::ReadOnlySpace"*
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal13ReadOnlySpaceC1EPNS0_4HeapE(%"class.v8::internal::ReadOnlySpace"* %5, %"class.v8::internal::Heap"* %6) #14
  %7 = tail call i8* @_Znwm(i64 4744) #16
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 16
  %11 = bitcast i8* %10 to i8**
  store i8* %4, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal16SoleReadOnlyHeapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i8* %7, i8** bitcast (%"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E to i8**), align 8
  %13 = bitcast i8* %7 to %"class.v8::internal::ReadOnlyHeap"*
  tail call void @_ZN2v88internal17ReadOnlyArtifacts18set_read_only_heapENSt3__110unique_ptrINS0_12ReadOnlyHeapENS2_14default_deleteIS4_EEEE(%"class.v8::internal::ReadOnlyArtifacts"* %1, %"class.v8::internal::ReadOnlyHeap"* nonnull %13) #14
  %14 = icmp eq %"class.std::__1::__shared_weak_count"* %2, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0, i32 1
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  br label %18

18:                                               ; preds = %15, %3
  %19 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"** %19, align 8
  tail call void @_ZN2v88internal7Isolate26SetUpFromReadOnlyArtifactsENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEEPNS0_12ReadOnlyHeapE(%"class.v8::internal::Isolate"* %0, %"class.v8::internal::ReadOnlyArtifacts"* %1, %"class.std::__1::__shared_weak_count"* %2, %"class.v8::internal::ReadOnlyHeap"* %20) #14
  %21 = load %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"** %19, align 8
  br i1 %14, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0, i32 1
  %24 = atomicrmw add i64* %23, i64 -1 acq_rel
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %2, i64 0, i32 0
  %28 = bitcast %"class.std::__1::__shared_weak_count"* %2 to void (%"class.std::__1::__shared_count"*)***
  %29 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %29, i64 2
  %31 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %30, align 8
  tail call void %31(%"class.std::__1::__shared_count"* %27) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %2) #14
  br label %32

32:                                               ; preds = %18, %22, %26
  ret %"class.v8::internal::ReadOnlyHeap"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeap21DeseralizeIntoIsolateEPNS0_7IsolateEPNS0_12SnapshotDataEb(%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::SnapshotData"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::ReadOnlyDeserializer", align 8
  %6 = bitcast %"class.v8::internal::ReadOnlyDeserializer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 432, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.v8::internal::ReadOnlyDeserializer", %"class.v8::internal::ReadOnlyDeserializer"* %5, i64 0, i32 0
  %8 = bitcast %"class.v8::internal::SnapshotData"* %2 to { i8*, i64 } (%"class.v8::internal::SnapshotData"*)***
  %9 = load { i8*, i64 } (%"class.v8::internal::SnapshotData"*)**, { i8*, i64 } (%"class.v8::internal::SnapshotData"*)*** %8, align 8
  %10 = getelementptr inbounds { i8*, i64 } (%"class.v8::internal::SnapshotData"*)*, { i8*, i64 } (%"class.v8::internal::SnapshotData"*)** %9, i64 2
  %11 = load { i8*, i64 } (%"class.v8::internal::SnapshotData"*)*, { i8*, i64 } (%"class.v8::internal::SnapshotData"*)** %10, align 8
  %12 = tail call { i8*, i64 } %11(%"class.v8::internal::SnapshotData"* %2) #14
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  %15 = getelementptr inbounds %"class.v8::internal::SnapshotData", %"class.v8::internal::SnapshotData"* %2, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i32**
  %17 = load i32*, i32** %16, align 8
  %18 = load i32, i32* %17, align 1
  call void @_ZN2v88internal12DeserializerC2EPNS0_7IsolateENS0_6VectorIKhEEjbb(%"class.v8::internal::Deserializer"* nonnull %7, %"class.v8::internal::Isolate"* %1, i8* %13, i64 %14, i32 %18, i1 zeroext false, i1 zeroext %3) #14
  %19 = getelementptr inbounds %"class.v8::internal::ReadOnlyDeserializer", %"class.v8::internal::ReadOnlyDeserializer"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal20ReadOnlyDeserializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  call void @_ZN2v88internal20ReadOnlyDeserializer22DeserializeIntoIsolateEv(%"class.v8::internal::ReadOnlyDeserializer"* nonnull %5) #14
  call void @_ZN2v88internal12ReadOnlyHeap15InitFromIsolateEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"* %0, %"class.v8::internal::Isolate"* %1)
  call void @_ZN2v88internal12DeserializerD2Ev(%"class.v8::internal::Deserializer"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 432, i8* nonnull %6) #14
  ret void
}

declare void @_ZN2v88internal7Isolate26SetUpFromReadOnlyArtifactsENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEEPNS0_12ReadOnlyHeapE(%"class.v8::internal::Isolate"*, %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"*, %"class.v8::internal::ReadOnlyHeap"*) local_unnamed_addr #2

declare void @_ZN2v88internal17ReadOnlyArtifacts14VerifyChecksumEPNS0_12SnapshotDataEb(%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::SnapshotData"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare i8* @_ZN2v88internal8MallocednwEm(i64) local_unnamed_addr #2

declare void @_ZN2v88internal13ReadOnlySpaceC1EPNS0_4HeapE(%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::Heap"*) unnamed_addr #2

declare void @_ZN2v88internal20ReadOnlyDeserializer22DeserializeIntoIsolateEv(%"class.v8::internal::ReadOnlyDeserializer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeap15InitFromIsolateEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %4, align 8
  tail call void @_ZN2v88internal13ReadOnlySpace11ShrinkPagesEv(%"class.v8::internal::ReadOnlySpace"* %5) #14
  %6 = bitcast %"class.v8::internal::ReadOnlyHeap"* %0 to void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)***
  %7 = load void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)**, void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)*, void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)** %7, i64 4
  %9 = load void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)*, void (%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*)** %8, align 8
  tail call void %9(%"class.v8::internal::ReadOnlyHeap"* %0, %"class.v8::internal::Isolate"* %1) #14
  %10 = bitcast %"class.std::__1::function"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #14
  %11 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %12 = icmp eq i8 %11, 2
  br i1 %12, label %26, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %14, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  %16 = bitcast %"class.std::__1::function"* %3 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv, void (i8*)** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 1
  %18 = bitcast [8 x i8]* %17 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0), i8** %18, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E to %"struct.std::__1::atomic.1128"*), %"class.std::__1::function"* nonnull %3) #14
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 1
  %21 = load void (i8*)*, void (i8*)** %20, align 8
  %22 = icmp eq void (i8*)* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void %21(i8* %25) #14
  br label %26

26:                                               ; preds = %2, %13, %23
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #14
  %27 = load %"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::ReadOnlyArtifacts"** bitcast (%"struct.std::__1::aligned_storage<16, 8>::type"* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2) to %"class.v8::internal::ReadOnlyArtifacts"**), align 8
  %28 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 8) to %"class.std::__1::__shared_weak_count"**), align 8
  %29 = icmp eq %"class.std::__1::__shared_weak_count"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %28) #14
  %32 = icmp eq %"class.std::__1::__shared_weak_count"* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %26, %30
  call void @_ZNSt3__120__throw_bad_weak_ptrEv() #15
  unreachable

34:                                               ; preds = %30
  %35 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %4, align 8
  %36 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0, i32 1
  %37 = atomicrmw add i64* %36, i64 1 monotonic
  call void @_ZN2v88internal13ReadOnlySpace28DetachPagesAndAddToArtifactsENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEE(%"class.v8::internal::ReadOnlySpace"* %35, %"class.v8::internal::ReadOnlyArtifacts"* %27, %"class.std::__1::__shared_weak_count"* nonnull %31) #14
  %38 = bitcast %"class.v8::internal::ReadOnlyArtifacts"* %27 to void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)***
  %39 = load void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)**, void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)*, void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)** %39, i64 3
  %41 = load void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)*, void (%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::Isolate"*)** %40, align 8
  call void %41(%"class.v8::internal::ReadOnlyArtifacts"* %27, %"class.v8::internal::Isolate"* %1) #14
  %42 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::SharedReadOnlySpace"*, %"class.v8::internal::SharedReadOnlySpace"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::SharedReadOnlySpace", %"class.v8::internal::SharedReadOnlySpace"* %43, i64 0, i32 0
  store %"class.v8::internal::ReadOnlySpace"* %44, %"class.v8::internal::ReadOnlySpace"** %4, align 8
  %45 = atomicrmw add i64* %36, i64 -1 acq_rel
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0
  %49 = bitcast %"class.std::__1::__shared_weak_count"* %31 to void (%"class.std::__1::__shared_count"*)***
  %50 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %50, i64 2
  %52 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %51, align 8
  call void %52(%"class.std::__1::__shared_count"* %48) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %31) #14
  br label %53

53:                                               ; preds = %47, %34
  %54 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 1
  store i8 1, i8* %54, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal12DeserializerD2Ev(%"class.v8::internal::Deserializer"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeap27OnCreateHeapObjectsCompleteEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal12ReadOnlyHeap15InitFromIsolateEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"* %0, %"class.v8::internal::Isolate"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeapC2EPS1_PNS0_13ReadOnlySpaceE(%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"* nocapture readonly, %"class.v8::internal::ReadOnlySpace"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal12ReadOnlyHeapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 2
  store %"class.v8::internal::ReadOnlySpace"* %2, %"class.v8::internal::ReadOnlySpace"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %1, i64 0, i32 3
  %9 = bitcast %"class.std::__1::vector.452"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #14
  %10 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %1, i64 0, i32 3, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::Object"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.452"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 2305843009213693951
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector.452"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #15
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #16
  %24 = bitcast i8* %23 to %"class.v8::internal::Object"*
  %25 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::Object"** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector.452"* %7 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %24, i64 %16
  %29 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::Object"* %28, %"class.v8::internal::Object"** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.452", %"class.std::__1::vector.452"* %8, i64 0, i32 0, i32 0
  %31 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast %"class.v8::internal::Object"** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint %"class.v8::internal::Object"* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 3
  %40 = bitcast %"class.v8::internal::Object"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %40, i64 %36, i1 false) #14
  %41 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %24, i64 %39
  %42 = ptrtoint %"class.v8::internal::Object"* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %3, %43
  ret void
}

declare void @_ZN2v88internal17ReadOnlyArtifacts18set_read_only_heapENSt3__110unique_ptrINS0_12ReadOnlyHeapENS2_14default_deleteIS4_EEEE(%"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::ReadOnlyHeap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SoleReadOnlyHeap22InitializeIsolateRootsEPNS0_7IsolateE(%"class.v8::internal::SoleReadOnlyHeap"* nocapture readonly, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 0
  %4 = bitcast i64* %3 to i8*
  %5 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %0, i64 0, i32 1, i64 0
  %6 = bitcast i64* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %6, i64 4696, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal16SoleReadOnlyHeap26InitializeFromIsolateRootsEPNS0_7IsolateE(%"class.v8::internal::SoleReadOnlyHeap"* nocapture, %"class.v8::internal::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 0
  %4 = bitcast i64* %3 to i8*
  %5 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %0, i64 0, i32 1, i64 0
  %6 = bitcast i64* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 %4, i64 4696, i1 false)
  ret void
}

declare void @_ZN2v88internal13ReadOnlySpace11ShrinkPagesEv(%"class.v8::internal::ReadOnlySpace"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2v88internal13ReadOnlySpace28DetachPagesAndAddToArtifactsENSt3__110shared_ptrINS0_17ReadOnlyArtifactsEEE(%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeap14OnHeapTearDownEPNS0_4HeapE(%"class.v8::internal::ReadOnlyHeap"* nocapture readonly, %"class.v8::internal::Heap"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 85, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %5, align 8
  %7 = bitcast %"class.v8::internal::ReadOnlySpace"* %4 to void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)***
  %8 = load void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)**, void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)*, void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)** %8, i64 6
  %10 = load void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)*, void (%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::MemoryAllocator"*)** %9, align 8
  tail call void %10(%"class.v8::internal::ReadOnlySpace"* %4, %"class.v8::internal::MemoryAllocator"* %6) #14
  %11 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %12 = icmp eq %"class.v8::internal::ReadOnlySpace"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.v8::internal::ReadOnlySpace"* %11 to void (%"class.v8::internal::ReadOnlySpace"*)***
  %15 = load void (%"class.v8::internal::ReadOnlySpace"*)**, void (%"class.v8::internal::ReadOnlySpace"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.v8::internal::ReadOnlySpace"*)*, void (%"class.v8::internal::ReadOnlySpace"*)** %15, i64 5
  %17 = load void (%"class.v8::internal::ReadOnlySpace"*)*, void (%"class.v8::internal::ReadOnlySpace"*)** %16, align 8
  tail call void %17(%"class.v8::internal::ReadOnlySpace"* nonnull %11) #14
  br label %18

18:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal16SoleReadOnlyHeap14OnHeapTearDownEPNS0_4HeapE(%"class.v8::internal::SoleReadOnlyHeap"* nocapture, %"class.v8::internal::Heap"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12ReadOnlyHeap31PopulateReadOnlySpaceStatisticsEPNS_22SharedMemoryStatisticsE(%"class.v8::SharedMemoryStatistics"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = getelementptr inbounds %"class.v8::SharedMemoryStatistics", %"class.v8::SharedMemoryStatistics"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::SharedMemoryStatistics", %"class.v8::SharedMemoryStatistics"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::SharedMemoryStatistics", %"class.v8::SharedMemoryStatistics"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::function"* %2 to i8*
  %7 = bitcast %"class.v8::SharedMemoryStatistics"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  %8 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 0, i32 0, i32 0) acquire, align 8
  %9 = icmp eq i8 %8, 2
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE, void (%"union.std::__1::__function::__policy_storage"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS5_16FunctionWithArgsIJDpT_EE4typeESD_EUlvE_FvvEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %12, align 8
  %13 = bitcast %"class.std::__1::function"* %2 to void (i8*)**
  store void (i8*)* @_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv, void (i8*)** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast [8 x i8]* %14 to i8**
  store i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0), i8** %15, align 8
  call void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"* bitcast ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E to %"struct.std::__1::atomic.1128"*), %"class.std::__1::function"* nonnull %2) #14
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void %18(i8* %22) #14
  br label %23

23:                                               ; preds = %1, %10, %20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  %24 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 8) to %"class.std::__1::__shared_weak_count"**), align 8
  %25 = icmp eq %"class.std::__1::__shared_weak_count"* %24, null
  br i1 %25, label %60, label %26

26:                                               ; preds = %23
  %27 = call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %24) #14
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %26
  %30 = load %"class.v8::internal::ReadOnlyArtifacts"*, %"class.v8::internal::ReadOnlyArtifacts"** bitcast (i8* getelementptr inbounds ({ { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }, { { { i8 } }, [7 x i8], %"struct.std::__1::aligned_storage<16, 8>::type" }* @_ZN2v88internal12_GLOBAL__N_120read_only_artifacts_E, i64 0, i32 2, i32 0, i64 0) to %"class.v8::internal::ReadOnlyArtifacts"**), align 8
  %31 = icmp eq %"class.v8::internal::ReadOnlyArtifacts"* %30, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.v8::internal::SharedReadOnlySpace"*, %"class.v8::internal::SharedReadOnlySpace"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::SharedReadOnlySpace", %"class.v8::internal::SharedReadOnlySpace"* %34, i64 0, i32 0, i32 0
  %36 = bitcast %"class.v8::internal::SharedReadOnlySpace"* %34 to i64 (%"class.v8::internal::BaseSpace"*)***
  %37 = load i64 (%"class.v8::internal::BaseSpace"*)**, i64 (%"class.v8::internal::BaseSpace"*)*** %36, align 8
  %38 = load i64 (%"class.v8::internal::BaseSpace"*)*, i64 (%"class.v8::internal::BaseSpace"*)** %37, align 8
  %39 = call i64 %38(%"class.v8::internal::BaseSpace"* %35) #14
  store i64 %39, i64* %3, align 8
  %40 = getelementptr inbounds %"class.v8::internal::SharedReadOnlySpace", %"class.v8::internal::SharedReadOnlySpace"* %34, i64 0, i32 0
  %41 = bitcast %"class.v8::internal::SharedReadOnlySpace"* %34 to i64 (%"class.v8::internal::ReadOnlySpace"*)***
  %42 = load i64 (%"class.v8::internal::ReadOnlySpace"*)**, i64 (%"class.v8::internal::ReadOnlySpace"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.v8::internal::ReadOnlySpace"*)*, i64 (%"class.v8::internal::ReadOnlySpace"*)** %42, i64 3
  %44 = load i64 (%"class.v8::internal::ReadOnlySpace"*)*, i64 (%"class.v8::internal::ReadOnlySpace"*)** %43, align 8
  %45 = call i64 %44(%"class.v8::internal::ReadOnlySpace"* %40) #14
  store i64 %45, i64* %4, align 8
  %46 = load i64 (%"class.v8::internal::ReadOnlySpace"*)**, i64 (%"class.v8::internal::ReadOnlySpace"*)*** %41, align 8
  %47 = getelementptr inbounds i64 (%"class.v8::internal::ReadOnlySpace"*)*, i64 (%"class.v8::internal::ReadOnlySpace"*)** %46, i64 2
  %48 = load i64 (%"class.v8::internal::ReadOnlySpace"*)*, i64 (%"class.v8::internal::ReadOnlySpace"*)** %47, align 8
  %49 = call i64 %48(%"class.v8::internal::ReadOnlySpace"* %40) #14
  store i64 %49, i64* %5, align 8
  br label %50

50:                                               ; preds = %29, %32
  %51 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %52 = atomicrmw add i64* %51, i64 -1 acq_rel
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0
  %56 = bitcast %"class.std::__1::__shared_weak_count"* %27 to void (%"class.std::__1::__shared_count"*)***
  %57 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %57, i64 2
  %59 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %58, align 8
  call void %59(%"class.std::__1::__shared_count"* %55) #14
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %27) #14
  br label %60

60:                                               ; preds = %54, %50, %26, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsEm(i64) local_unnamed_addr #8 align 2 {
  %2 = and i64 %0, -262144
  %3 = inttoptr i64 %2 to %"class.v8::internal::BasicMemoryChunk"*
  %4 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 2097152
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64) local_unnamed_addr #8 align 2 {
  %2 = and i64 %0, -262144
  %3 = inttoptr i64 %2 to %"class.v8::internal::BasicMemoryChunk"*
  %4 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 2097152
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Object"* @_ZN2v88internal12ReadOnlyHeap25ExtendReadOnlyObjectCacheEv(%"class.v8::internal::ReadOnlyHeap"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %5, align 8
  %7 = icmp ult %"class.v8::internal::Object"* %4, %6
  %8 = ptrtoint %"class.v8::internal::Object"* %6 to i64
  br i1 %7, label %9, label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %4, i64 0, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %4, i64 1
  %12 = ptrtoint %"class.v8::internal::Object"* %11 to i64
  %13 = bitcast %"class.v8::internal::Object"** %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %72

14:                                               ; preds = %1
  %15 = ptrtoint %"class.v8::internal::Object"* %4 to i64
  %16 = bitcast %"class.v8::internal::Object"** %3 to i64*
  %17 = bitcast %"class.std::__1::vector.452"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 2305843009213693951
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::vector.452"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #15
  unreachable

25:                                               ; preds = %14
  %26 = bitcast %"class.v8::internal::Object"** %5 to i64*
  %27 = sub i64 %8, %18
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 1152921504606846975
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 2
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 2305843009213693951
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 2305843009213693951, %25 ]
  %40 = shl i64 %39, 3
  %41 = tail call i8* @_Znwm(i64 %40) #16
  %42 = bitcast i8* %41 to %"class.v8::internal::Object"*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi %"class.v8::internal::Object"* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %45, i64 %20
  %47 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %45, i64 %44
  %48 = ptrtoint %"class.v8::internal::Object"* %47 to i64
  %49 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %46, i64 0, i32 0, i32 0
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %46, i64 1
  %51 = ptrtoint %"class.v8::internal::Object"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.452", %"class.std::__1::vector.452"* %2, i64 0, i32 0, i32 0
  %53 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %52, align 8
  %54 = load i64, i64* %16, align 8
  %55 = ptrtoint %"class.v8::internal::Object"* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = sub nsw i64 0, %57
  %59 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %46, i64 %58
  %60 = ptrtoint %"class.v8::internal::Object"* %59 to i64
  %61 = icmp sgt i64 %56, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %43
  %63 = bitcast %"class.v8::internal::Object"* %59 to i8*
  %64 = bitcast %"class.v8::internal::Object"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %56, i1 false) #14
  %65 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %52, align 8
  br label %66

66:                                               ; preds = %62, %43
  %67 = phi %"class.v8::internal::Object"* [ %53, %43 ], [ %65, %62 ]
  store i64 %60, i64* %17, align 8
  store i64 %51, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %68 = icmp eq %"class.v8::internal::Object"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.v8::internal::Object"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #16
  %71 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %3, align 8
  br label %72

72:                                               ; preds = %9, %66, %69
  %73 = phi %"class.v8::internal::Object"* [ %11, %9 ], [ %50, %66 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %73, i64 -1
  ret %"class.v8::internal::Object"* %74
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal12ReadOnlyHeap23cached_read_only_objectEm(%"class.v8::internal::ReadOnlyHeap"* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %4, i64 %1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal12ReadOnlyHeap37read_only_object_cache_is_initializedEv(%"class.v8::internal::ReadOnlyHeap"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::Object"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.452"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %5, %7
  ret i1 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal12ReadOnlyHeap27read_only_object_cache_sizeEv(%"class.v8::internal::ReadOnlyHeap"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::Object"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.452"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26ReadOnlyHeapObjectIteratorC2EPNS0_12ReadOnlyHeapE(%"class.v8::internal::ReadOnlyHeapObjectIterator"* nocapture, %"class.v8::internal::ReadOnlyHeap"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %1, i64 0, i32 2
  %4 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 0
  store %"class.v8::internal::ReadOnlySpace"* %4, %"class.v8::internal::ReadOnlySpace"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %4, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 1, i32 0
  store %"class.v8::internal::ReadOnlyPage"** %7, %"class.v8::internal::ReadOnlyPage"*** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::ReadOnlyPage"** %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = tail call i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32 0) #14
  %13 = add i64 %12, %11
  store i64 %13, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal26ReadOnlyHeapObjectIteratorC2EPNS0_13ReadOnlySpaceE(%"class.v8::internal::ReadOnlyHeapObjectIterator"* nocapture, %"class.v8::internal::ReadOnlySpace"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 0
  store %"class.v8::internal::ReadOnlySpace"* %1, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %1, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 1, i32 0
  store %"class.v8::internal::ReadOnlyPage"** %5, %"class.v8::internal::ReadOnlyPage"*** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 2
  %8 = bitcast %"class.v8::internal::ReadOnlyPage"** %5 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32 0) #14
  %11 = add i64 %10, %9
  store i64 %11, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26ReadOnlyHeapObjectIterator4NextEv(%"class.v8::internal::ReadOnlyHeapObjectIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::HeapObject", align 8
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %4, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::ReadOnlyPage"** %8, %6
  br i1 %9, label %76, label %10

10:                                               ; preds = %1
  %11 = load %"class.v8::internal::ReadOnlyPage"*, %"class.v8::internal::ReadOnlyPage"** %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeapObjectIterator", %"class.v8::internal::ReadOnlyHeapObjectIterator"* %0, i64 0, i32 2
  %13 = bitcast %"class.v8::internal::HeapObject"* %2 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %2, i64 0, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %75, %10
  %16 = phi %"class.v8::internal::ReadOnlyPage"* [ %11, %10 ], [ %42, %75 ]
  %17 = ptrtoint %"class.v8::internal::ReadOnlyPage"* %16 to i64
  %18 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage", %"class.v8::internal::ReadOnlyPage"* %16, i64 0, i32 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage", %"class.v8::internal::ReadOnlyPage"* %16, i64 0, i32 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = call i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32 0) #14
  %23 = add i64 %19, %17
  %24 = sub i64 %23, %21
  %25 = add i64 %24, %22
  %26 = load i64, i64* %12, align 8
  %27 = icmp eq i64 %26, %25
  br i1 %27, label %28, label %40

28:                                               ; preds = %15
  %29 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %7, align 8
  %30 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage"*, %"class.v8::internal::ReadOnlyPage"** %29, i64 1
  store %"class.v8::internal::ReadOnlyPage"** %30, %"class.v8::internal::ReadOnlyPage"*** %7, align 8
  %31 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %31, i64 0, i32 3, i32 0, i32 1
  %33 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %32, align 8
  %34 = icmp eq %"class.v8::internal::ReadOnlyPage"** %30, %33
  br i1 %34, label %76, label %35

35:                                               ; preds = %28
  %36 = load %"class.v8::internal::ReadOnlyPage"*, %"class.v8::internal::ReadOnlyPage"** %30, align 8
  %37 = ptrtoint %"class.v8::internal::ReadOnlyPage"* %36 to i64
  %38 = call i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32 0) #14
  %39 = add i64 %38, %37
  store i64 %39, i64* %12, align 8
  br label %40

40:                                               ; preds = %35, %15
  %41 = phi i64 [ %39, %35 ], [ %26, %15 ]
  %42 = phi %"class.v8::internal::ReadOnlyPage"* [ %36, %35 ], [ %16, %15 ]
  %43 = load %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::ReadOnlySpace"** %3, align 8
  %44 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %43, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %41, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %43, i64 0, i32 5
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %41, %49
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  store i64 %49, i64* %12, align 8
  br label %75

52:                                               ; preds = %47, %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %53 = add i64 %41, 1
  store i64 %53, i64* %14, align 8
  %54 = and i64 %53, -4294967296
  %55 = inttoptr i64 %41 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %54, %57
  %59 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %2, i64 %58) #14
  %60 = sext i32 %59 to i64
  %61 = load i64, i64* %12, align 8
  %62 = add i64 %61, %60
  store i64 %62, i64* %12, align 8
  %63 = load i64, i64* %14, align 8
  %64 = and i64 %63, -4294967296
  %65 = add i64 %63, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  %74 = icmp eq i16 %73, 169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  br i1 %74, label %75, label %76

75:                                               ; preds = %52, %51
  br label %15

76:                                               ; preds = %52, %28, %1
  %77 = phi i64 [ 0, %1 ], [ %63, %52 ], [ 0, %28 ]
  ret i64 %77
}

declare i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12ReadOnlyHeapD2Ev(%"class.v8::internal::ReadOnlyHeap"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal12ReadOnlyHeapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Object"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Object"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Object"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Object"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12ReadOnlyHeapD0Ev(%"class.v8::internal::ReadOnlyHeap"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal12ReadOnlyHeapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Object"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Object"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::ReadOnlyHeap", %"class.v8::internal::ReadOnlyHeap"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Object"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Object"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.v8::internal::ReadOnlyHeap"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12ReadOnlyHeap22InitializeIsolateRootsEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12ReadOnlyHeap26InitializeFromIsolateRootsEPNS0_7IsolateE(%"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::Isolate"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal12ReadOnlyHeap16IsOwnedByIsolateEv(%"class.v8::internal::ReadOnlyHeap"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16SoleReadOnlyHeapD0Ev(%"class.v8::internal::SoleReadOnlyHeap"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal12ReadOnlyHeapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.v8::internal::Object"*, %"class.v8::internal::Object"** %3, align 8
  %5 = icmp eq %"class.v8::internal::Object"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Object"* %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Object"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Object"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.v8::internal::SoleReadOnlyHeap"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal16SoleReadOnlyHeap16IsOwnedByIsolateEv(%"class.v8::internal::SoleReadOnlyHeap"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #14
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<v8::internal::SingleCopyReadOnlyArtifacts, std::__1::allocator<v8::internal::SingleCopyReadOnlyArtifacts> >::_Storage"* %2 to %"class.v8::internal::SingleCopyReadOnlyArtifacts"*
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace<v8::internal::SingleCopyReadOnlyArtifacts, std::__1::allocator<v8::internal::SingleCopyReadOnlyArtifacts> >::_Storage"* %2 to void (%"class.v8::internal::SingleCopyReadOnlyArtifacts"*)***
  %5 = load void (%"class.v8::internal::SingleCopyReadOnlyArtifacts"*)**, void (%"class.v8::internal::SingleCopyReadOnlyArtifacts"*)*** %4, align 8
  %6 = load void (%"class.v8::internal::SingleCopyReadOnlyArtifacts"*)*, void (%"class.v8::internal::SingleCopyReadOnlyArtifacts"*)** %5, align 8
  tail call void %6(%"class.v8::internal::SingleCopyReadOnlyArtifacts"* %3) #14
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2v88internal27SingleCopyReadOnlyArtifactsENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17ReadOnlyArtifactsD2Ev(%"class.v8::internal::ReadOnlyArtifacts"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal17ReadOnlyArtifactsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::ReadOnlyHeap"*, %"class.v8::internal::ReadOnlyHeap"** %3, align 8
  store %"class.v8::internal::ReadOnlyHeap"* null, %"class.v8::internal::ReadOnlyHeap"** %3, align 8
  %5 = icmp eq %"class.v8::internal::ReadOnlyHeap"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::internal::ReadOnlyHeap"* %4 to void (%"class.v8::internal::ReadOnlyHeap"*)***
  %8 = load void (%"class.v8::internal::ReadOnlyHeap"*)**, void (%"class.v8::internal::ReadOnlyHeap"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::internal::ReadOnlyHeap"*)*, void (%"class.v8::internal::ReadOnlyHeap"*)** %8, i64 1
  %10 = load void (%"class.v8::internal::ReadOnlyHeap"*)*, void (%"class.v8::internal::ReadOnlyHeap"*)** %9, align 8
  tail call void %10(%"class.v8::internal::ReadOnlyHeap"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::SharedReadOnlySpace"*, %"class.v8::internal::SharedReadOnlySpace"** %12, align 8
  store %"class.v8::internal::SharedReadOnlySpace"* null, %"class.v8::internal::SharedReadOnlySpace"** %12, align 8
  %14 = icmp eq %"class.v8::internal::SharedReadOnlySpace"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.v8::internal::SharedReadOnlySpace"* %13 to void (%"class.v8::internal::SharedReadOnlySpace"*)***
  %17 = load void (%"class.v8::internal::SharedReadOnlySpace"*)**, void (%"class.v8::internal::SharedReadOnlySpace"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.v8::internal::SharedReadOnlySpace"*)*, void (%"class.v8::internal::SharedReadOnlySpace"*)** %17, i64 5
  %19 = load void (%"class.v8::internal::SharedReadOnlySpace"*)*, void (%"class.v8::internal::SharedReadOnlySpace"*)** %18, align 8
  tail call void %19(%"class.v8::internal::SharedReadOnlySpace"* nonnull %13) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"*** %21, align 8
  %23 = icmp eq %"class.v8::internal::ReadOnlyPage"** %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %"class.v8::internal::ReadOnlyPage"** %22 to i64
  %26 = getelementptr inbounds %"class.v8::internal::ReadOnlyArtifacts", %"class.v8::internal::ReadOnlyArtifacts"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::ReadOnlyPage"*** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.v8::internal::ReadOnlyPage"** %22 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17ReadOnlyArtifactsD0Ev(%"class.v8::internal::ReadOnlyArtifacts"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #6

declare void @_ZN2v88internal12DeserializerC2EPNS0_7IsolateENS0_6VectorIKhEEjbb(%"class.v8::internal::Deserializer"*, %"class.v8::internal::Isolate"*, i8*, i64, i32, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20ReadOnlyDeserializerD0Ev(%"class.v8::internal::ReadOnlyDeserializer"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ReadOnlyDeserializer", %"class.v8::internal::ReadOnlyDeserializer"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal12DeserializerD2Ev(%"class.v8::internal::Deserializer"* %2) #14
  %3 = bitcast %"class.v8::internal::ReadOnlyDeserializer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #16
  ret void
}

declare void @_ZN2v88internal12Deserializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::Deserializer"*, i32, i8*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootVisitor"*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = add i64 %3, 8
  %6 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %7 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %7, i64 2
  %9 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::RootVisitor"* %0, i32 %1, i8* %2, i64 %3, i64 %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable
}

declare void @_ZN2v88internal12Deserializer11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::Deserializer"*, i32) unnamed_addr #2

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base16LazyInstanceImplINSt3__18weak_ptrINS_8internal17ReadOnlyArtifactsEEENS0_32StaticallyAllocatedInstanceTraitIS6_EENS0_21DefaultConstructTraitIS6_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS6_EEE12InitInstanceEPv(i8*) #0 comdat align 2 {
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false) #14
  ret void
}

declare void @_ZN2v84base12CallOnceImplEPNSt3__16atomicIhEENS1_8functionIFvvEEE(%"struct.std::__1::atomic.1128"*, %"class.std::__1::function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN2v84base8CallOnceIJPvEvEEvPNS_6atomicIhEENS7_16FunctionWithArgsIJDpT_EE4typeESF_EUlvE_S2_EEEEvPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to void (i8*)**
  %3 = load void (i8*)*, void (i8*)** %2, align 8
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void %3(i8* %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base16LazyInstanceImplINS0_5MutexENS0_32StaticallyAllocatedInstanceTraitIS2_EENS0_21DefaultConstructTraitIS2_EENS0_23ThreadSafeInitOnceTraitENS0_18LeakyInstanceTraitIS2_EEE12InitInstanceEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %2) #14
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #2

; Function Attrs: nounwind
declare %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_bad_weak_ptrEv() local_unnamed_addr #13 comdat {
  tail call void @abort() #15
  unreachable
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
