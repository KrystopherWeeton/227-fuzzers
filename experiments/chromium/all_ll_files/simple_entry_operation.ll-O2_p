; ModuleID = '../../net/disk_cache/simple/simple_entry_operation.cc'
source_filename = "../../net/disk_cache/simple/simple_entry_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.disk_cache::SimpleEntryOperation" = type <{ %class.scoped_refptr, %class.scoped_refptr.89, %"class.base::OnceCallback", %"class.base::OnceCallback.92", i32, i32, i64, i32, [4 x i8], i64*, i32, i32, i32, i8, i8, [2 x i8] }>
%class.scoped_refptr = type { %"class.disk_cache::SimpleEntryImpl"* }
%"class.disk_cache::SimpleEntryImpl" = type <{ %"class.disk_cache::Entry", %"class.base::RefCounted", [4 x i8], %class.scoped_refptr.0, %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %"class.disk_cache::SimpleFileTracker"*, i32, [4 x i8], %"class.base::FilePath", i64, i8, [7 x i8], %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", [3 x i32], i32, i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i8], i8, [3 x i32], %"class.disk_cache::SimpleSynchronousEntry"*, %class.scoped_refptr.43, %"class.std::__1::queue", %"class.net::NetLogWithSource", %class.scoped_refptr.57, %class.scoped_refptr.57, %class.scoped_refptr.63, i32, [4 x i8] }>
%"class.disk_cache::Entry" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.0 = type { %"class.disk_cache::BackendCleanupTracker"* }
%"class.disk_cache::BackendCleanupTracker" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.disk_cache::SimpleEntryImpl::ActiveEntryProxy"* }
%"class.disk_cache::SimpleEntryImpl::ActiveEntryProxy" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.disk_cache::SimpleFileTracker" = type { %"class.base::Lock", %"class.std::__1::unordered_map", %"class.std::__1::list", i32, i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.9", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.23", [4 x i8] }>
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.disk_cache::SimpleSynchronousEntry" = type { i32, %"class.base::FilePath", %"struct.disk_cache::SimpleFileTracker::EntryFileKey", %"class.std::__1::basic_string", i8, i8, [2 x i8], %"class.disk_cache::SimpleFileTracker"*, i32, i32, [2 x i8], %"class.std::__1::map", i8, i64 }
%"struct.disk_cache::SimpleFileTracker::EntryFileKey" = type { i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%class.scoped_refptr.43 = type { %"class.net::PrioritizedTaskRunner"* }
%"class.net::PrioritizedTaskRunner" = type opaque
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.disk_cache::SimpleEntryOperation"*, i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.44" }
%"class.base::time_internal::TimeBase.44" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.50" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.45" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.52" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%class.scoped_refptr.57 = type { %"class.net::GrowableIOBuffer"* }
%"class.net::GrowableIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::unique_ptr.59", i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.58", i8* }
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i8* }
%class.scoped_refptr.63 = type { %"class.disk_cache::SimplePostDoomWaiterTable"* }
%"class.disk_cache::SimplePostDoomWaiterTable" = type { %"class.base::RefCounted.64", i32, %"class.std::__1::unordered_map.65" }
%"class.base::RefCounted.64" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map.65" = type { %"class.std::__1::__hash_table.66" }
%"class.std::__1::__hash_table.66" = type <{ %"class.std::__1::unique_ptr.67", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.85", [4 x i8] }>
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base.70"** }
%"struct.std::__1::__hash_node_base.70" = type { %"struct.std::__1::__hash_node_base.70"* }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__bucket_list_deallocator.72" }
%"class.std::__1::__bucket_list_deallocator.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base.70" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%class.scoped_refptr.89 = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.91", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.92" = type { %"class.base::internal::CallbackBase" }

@_ZN10disk_cache20SimpleEntryOperationC1EOS0_ = hidden unnamed_addr alias void (%"class.disk_cache::SimpleEntryOperation"*, %"class.disk_cache::SimpleEntryOperation"*), void (%"class.disk_cache::SimpleEntryOperation"*, %"class.disk_cache::SimpleEntryOperation"*)* @_ZN10disk_cache20SimpleEntryOperationC2EOS0_
@_ZN10disk_cache20SimpleEntryOperationD1Ev = hidden unnamed_addr alias void (%"class.disk_cache::SimpleEntryOperation"*), void (%"class.disk_cache::SimpleEntryOperation"*)* @_ZN10disk_cache20SimpleEntryOperationD2Ev
@_ZN10disk_cache20SimpleEntryOperationC1EPNS_15SimpleEntryImplEPN3net8IOBufferEN4base12OnceCallbackIFviEEEiliPlNS0_18EntryOperationTypeENS_18OpenEntryIndexEnumEibb = hidden unnamed_addr alias void (%"class.disk_cache::SimpleEntryOperation"*, %"class.disk_cache::SimpleEntryImpl"*, %"class.net::IOBuffer"*, %"class.base::OnceCallback"*, i32, i64, i32, i64*, i32, i32, i32, i1, i1), void (%"class.disk_cache::SimpleEntryOperation"*, %"class.disk_cache::SimpleEntryImpl"*, %"class.net::IOBuffer"*, %"class.base::OnceCallback"*, i32, i64, i32, i64*, i32, i32, i32, i1, i1)* @_ZN10disk_cache20SimpleEntryOperationC2EPNS_15SimpleEntryImplEPN3net8IOBufferEN4base12OnceCallbackIFviEEEiliPlNS0_18EntryOperationTypeENS_18OpenEntryIndexEnumEibb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperationC2EOS0_(%"class.disk_cache::SimpleEntryOperation"* nocapture, %"class.disk_cache::SimpleEntryOperation"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %1, i64 0, i32 0, i32 0
  %4 = bitcast %"class.disk_cache::SimpleEntryOperation"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.disk_cache::SimpleEntryOperation"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.disk_cache::SimpleEntryImpl"* null, %"class.disk_cache::SimpleEntryImpl"** %3, align 8
  %7 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %class.scoped_refptr.89, %class.scoped_refptr.89* %8, i64 0, i32 0
  %10 = bitcast %class.scoped_refptr.89* %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.scoped_refptr.89* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %9, align 8
  %13 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %1, i64 0, i32 2
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::OnceCallback"* %13 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.base::OnceCallback.92"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::OnceCallback.92"* %19 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %25 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %1, i64 0, i32 4
  %27 = bitcast i32* %25 to i8*
  %28 = bitcast i32* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 46, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperationD2Ev(%"class.disk_cache::SimpleEntryOperation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #4
  %3 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #4
  %4 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.58", %"class.base::RefCountedThreadSafe.58"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.58", %"class.base::RefCountedThreadSafe.58"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.58"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.58"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #4
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  %21 = load %"class.disk_cache::SimpleEntryImpl"*, %"class.disk_cache::SimpleEntryImpl"** %20, align 8
  %22 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %21, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #4
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %24, i64 -2
  %31 = bitcast %"class.base::RefCounted"* %30 to %"class.disk_cache::SimpleEntryImpl"*
  %32 = bitcast %"class.base::RefCounted"* %30 to void (%"class.disk_cache::SimpleEntryImpl"*)***
  %33 = load void (%"class.disk_cache::SimpleEntryImpl"*)**, void (%"class.disk_cache::SimpleEntryImpl"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.disk_cache::SimpleEntryImpl"*)*, void (%"class.disk_cache::SimpleEntryImpl"*)** %33, i64 16
  %35 = load void (%"class.disk_cache::SimpleEntryImpl"*)*, void (%"class.disk_cache::SimpleEntryImpl"*)** %34, align 8
  tail call void %35(%"class.disk_cache::SimpleEntryImpl"* nonnull %31) #4
  br label %36

36:                                               ; preds = %19, %23, %29
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation13OpenOperationEPNS_15SimpleEntryImplENS0_16EntryResultStateEN4base12OnceCallbackIFvNS_11EntryResultEEEE(%"class.disk_cache::SimpleEntryOperation"* noalias sret, %"class.disk_cache::SimpleEntryImpl"*, i32, %"class.base::OnceCallback.92"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1
  %7 = bitcast %class.scoped_refptr.89* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 72, i1 false)
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %9 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %9, align 8
  %10 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #4
  br label %13

13:                                               ; preds = %4, %11
  %14 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  %15 = bitcast %"class.net::IOBuffer"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %16 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %20 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 16, i1 false)
  %21 = bitcast i64** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 22, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #4
  %22 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0
  %23 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %3, i64 0, i32 0
  %24 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %22, %"class.base::internal::CallbackBase"* dereferenceable(8) %23) #4
  %25 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 4
  store i32 %2, i32* %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation15CreateOperationEPNS_15SimpleEntryImplENS0_16EntryResultStateEN4base12OnceCallbackIFvNS_11EntryResultEEEE(%"class.disk_cache::SimpleEntryOperation"* noalias sret, %"class.disk_cache::SimpleEntryImpl"*, i32, %"class.base::OnceCallback.92"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1
  %7 = bitcast %class.scoped_refptr.89* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 72, i1 false)
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %9 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %9, align 8
  %10 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #4
  br label %13

13:                                               ; preds = %4, %11
  %14 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  %15 = bitcast %"class.net::IOBuffer"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %16 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %18, align 8
  %19 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  %20 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 16, i1 false)
  store i32 1, i32* %19, align 8
  %21 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %23 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 10, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #4
  %24 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0
  %25 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %3, i64 0, i32 0
  %26 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %24, %"class.base::internal::CallbackBase"* dereferenceable(8) %25) #4
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 4
  store i32 %2, i32* %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation21OpenOrCreateOperationEPNS_15SimpleEntryImplENS_18OpenEntryIndexEnumENS0_16EntryResultStateEN4base12OnceCallbackIFvNS_11EntryResultEEEE(%"class.disk_cache::SimpleEntryOperation"* noalias sret, %"class.disk_cache::SimpleEntryImpl"*, i32, i32, %"class.base::OnceCallback.92"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1
  %8 = bitcast %class.scoped_refptr.89* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 72, i1 false)
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %10 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %10, align 8
  %11 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #4
  br label %14

14:                                               ; preds = %5, %12
  %15 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  %16 = bitcast %"class.net::IOBuffer"** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false)
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %19, align 8
  %20 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  %21 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 16, i1 false)
  store i32 2, i32* %20, align 8
  %22 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  store i32 %2, i32* %22, align 4
  %23 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 12
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 13
  store i8 0, i8* %24, align 4
  %25 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 14
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #4
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0
  %28 = getelementptr inbounds %"class.base::OnceCallback.92", %"class.base::OnceCallback.92"* %4, i64 0, i32 0
  %29 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %27, %"class.base::internal::CallbackBase"* dereferenceable(8) %28) #4
  %30 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 4
  store i32 %3, i32* %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation14CloseOperationEPNS_15SimpleEntryImplE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %5 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %5, align 8
  %6 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #4
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  %11 = bitcast %"class.net::IOBuffer"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %13 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %14, align 8
  %15 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  %16 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false)
  store i32 3, i32* %15, align 8
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %19 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 10, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation13ReadOperationEPNS_15SimpleEntryImplEiiiPN3net8IOBufferEN4base12OnceCallbackIFviEEE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*, i32, i32, i32, %"class.net::IOBuffer"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %13, align 8
  %14 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #4
  br label %17

17:                                               ; preds = %15, %7
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* %5, %"class.net::IOBuffer"** %18, align 8
  %19 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %17, %20
  %24 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %24 to i64*
  store i64 %11, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %28 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  store i32 %3, i32* %28, align 4
  %29 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 6
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 7
  store i32 %4, i32* %30, align 8
  %31 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %31, align 8
  %32 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  store i32 4, i32* %32, align 8
  %33 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 12
  store i32 %2, i32* %34, align 8
  %35 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 13
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 14
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation14WriteOperationEPNS_15SimpleEntryImplEiiiPN3net8IOBufferEbbN4base12OnceCallbackIFviEEE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*, i32, i32, i32, %"class.net::IOBuffer"*, i1 zeroext, i1 zeroext, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = zext i1 %6 to i8
  %16 = zext i1 %7 to i8
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %17, align 8
  %18 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #4
  br label %21

21:                                               ; preds = %19, %9
  %22 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* %5, %"class.net::IOBuffer"** %22, align 8
  %23 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %21, %24
  %28 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.base::OnceCallback"* %28 to i64*
  store i64 %13, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  %31 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  %32 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  store i32 %3, i32* %32, align 4
  %33 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 6
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 7
  store i32 %4, i32* %34, align 8
  %35 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %35, align 8
  %36 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  store i32 5, i32* %36, align 8
  %37 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 12
  store i32 %2, i32* %38, align 8
  %39 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 13
  store i8 %15, i8* %39, align 4
  %40 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 14
  store i8 %16, i8* %40, align 1
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation19ReadSparseOperationEPNS_15SimpleEntryImplEliPN3net8IOBufferEN4base12OnceCallbackIFviEEE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*, i64, i32, %"class.net::IOBuffer"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %12, align 8
  %13 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #4
  br label %16

16:                                               ; preds = %14, %6
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* %4, %"class.net::IOBuffer"** %17, align 8
  %18 = icmp eq %"class.net::IOBuffer"* %4, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %16, %19
  %23 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"* %23 to i64*
  store i64 %10, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %26 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 6
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 7
  store i32 %3, i32* %29, align 8
  %30 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %30, align 8
  %31 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  store i32 6, i32* %31, align 8
  %32 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %34 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 10, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation20WriteSparseOperationEPNS_15SimpleEntryImplEliPN3net8IOBufferEN4base12OnceCallbackIFviEEE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*, i64, i32, %"class.net::IOBuffer"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %12, align 8
  %13 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #4
  br label %16

16:                                               ; preds = %14, %6
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* %4, %"class.net::IOBuffer"** %17, align 8
  %18 = icmp eq %"class.net::IOBuffer"* %4, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %16, %19
  %23 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"* %23 to i64*
  store i64 %10, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %26 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 6
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 7
  store i32 %3, i32* %29, align 8
  %30 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %30, align 8
  %31 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  store i32 7, i32* %31, align 8
  %32 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %34 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 10, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation26GetAvailableRangeOperationEPNS_15SimpleEntryImplEliPlN4base12OnceCallbackIFviEEE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*, i64, i32, i64*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %12, align 8
  %13 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #4
  br label %16

16:                                               ; preds = %6, %14
  %17 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %17, align 8
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %18 to i64*
  store i64 %10, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %21 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %21, align 8
  %22 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 6
  store i64 %2, i64* %23, align 8
  %24 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 7
  store i32 %3, i32* %24, align 8
  %25 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* %4, i64** %25, align 8
  %26 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  store i32 8, i32* %26, align 8
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %29 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 10, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperation13DoomOperationEPNS_15SimpleEntryImplEN4base12OnceCallbackIFviEEE(%"class.disk_cache::SimpleEntryOperation"* noalias nocapture sret, %"class.disk_cache::SimpleEntryImpl"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %9, align 8
  %10 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #4
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %14, align 8
  %15 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %15 to i64*
  store i64 %7, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %18 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %19 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* null, i64** %20, align 8
  %21 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  %22 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false)
  store i32 9, i32* %21, align 8
  %23 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %25 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 10, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10disk_cache20SimpleEntryOperationC2EPNS_15SimpleEntryImplEPN3net8IOBufferEN4base12OnceCallbackIFviEEEiliPlNS0_18EntryOperationTypeENS_18OpenEntryIndexEnumEibb(%"class.disk_cache::SimpleEntryOperation"* nocapture, %"class.disk_cache::SimpleEntryImpl"*, %"class.net::IOBuffer"*, %"class.base::OnceCallback"* nocapture, i32, i64, i32, i64*, i32, i32, i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %14 = zext i1 %11 to i8
  %15 = zext i1 %12 to i8
  %16 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 0, i32 0
  store %"class.disk_cache::SimpleEntryImpl"* %1, %"class.disk_cache::SimpleEntryImpl"** %16, align 8
  %17 = icmp eq %"class.disk_cache::SimpleEntryImpl"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.disk_cache::SimpleEntryImpl", %"class.disk_cache::SimpleEntryImpl"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #4
  br label %20

20:                                               ; preds = %13, %18
  %21 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 1, i32 0
  store %"class.net::IOBuffer"* %2, %"class.net::IOBuffer"** %21, align 8
  %22 = icmp eq %"class.net::IOBuffer"* %2, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %20, %23
  %27 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback"* %27 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %33 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 5
  store i32 %4, i32* %33, align 4
  %34 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 6
  store i64 %5, i64* %34, align 8
  %35 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 7
  store i32 %6, i32* %35, align 8
  %36 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 9
  store i64* %7, i64** %36, align 8
  %37 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 10
  store i32 %8, i32* %37, align 8
  %38 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 11
  store i32 %9, i32* %38, align 4
  %39 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 12
  store i32 %10, i32* %39, align 8
  %40 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 13
  store i8 %14, i8* %40, align 4
  %41 = getelementptr inbounds %"class.disk_cache::SimpleEntryOperation", %"class.disk_cache::SimpleEntryOperation"* %0, i64 0, i32 14
  store i8 %15, i8* %41, align 1
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
