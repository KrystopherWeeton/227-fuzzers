; ModuleID = '../../third_party/blink/renderer/modules/mediastream/video_track_adapter_settings.cc'
source_filename = "../../third_party/blink/renderer/modules/mediastream/video_track_adapter_settings.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::VideoTrackAdapterSettings" = type { %"class.absl::optional", double, double, double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }

@_ZN5blink25VideoTrackAdapterSettingsC1Ev = hidden unnamed_addr alias void (%"class.blink::VideoTrackAdapterSettings"*), void (%"class.blink::VideoTrackAdapterSettings"*)* @_ZN5blink25VideoTrackAdapterSettingsC2Ev
@_ZN5blink25VideoTrackAdapterSettingsC1ERKN3gfx4SizeEd = hidden unnamed_addr alias void (%"class.blink::VideoTrackAdapterSettings"*, %"class.gfx::Size"*, double), void (%"class.blink::VideoTrackAdapterSettings"*, %"class.gfx::Size"*, double)* @_ZN5blink25VideoTrackAdapterSettingsC2ERKN3gfx4SizeEd
@_ZN5blink25VideoTrackAdapterSettingsC1EN4absl8optionalIN3gfx4SizeEEEddd = hidden unnamed_addr alias void (%"class.blink::VideoTrackAdapterSettings"*, i64, i32, double, double, double), void (%"class.blink::VideoTrackAdapterSettings"*, i64, i32, double, double, double)* @_ZN5blink25VideoTrackAdapterSettingsC2EN4absl8optionalIN3gfx4SizeEEEddd
@_ZN5blink25VideoTrackAdapterSettingsC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::VideoTrackAdapterSettings"*, %"class.blink::VideoTrackAdapterSettings"*), void (%"class.blink::VideoTrackAdapterSettings"*, %"class.blink::VideoTrackAdapterSettings"*)* @_ZN5blink25VideoTrackAdapterSettingsC2ERKS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink25VideoTrackAdapterSettingsC2Ev(%"class.blink::VideoTrackAdapterSettings"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::VideoTrackAdapterSettings"* %0 to i64*
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 1
  %4 = bitcast double* %3 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 0x7FEFFFFFFFFFFFFF>, <2 x double>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 3
  store double 0.000000e+00, double* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25VideoTrackAdapterSettingsC2EN4absl8optionalIN3gfx4SizeEEEddd(%"class.blink::VideoTrackAdapterSettings"* nocapture, i64, i32, double, double, double) unnamed_addr #1 align 2 {
  %7 = bitcast %"class.blink::VideoTrackAdapterSettings"* %0 to i64*
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 1
  store double %3, double* %9, align 8
  %10 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 2
  store double %4, double* %10, align 8
  %11 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 3
  store double %5, double* %11, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink25VideoTrackAdapterSettingsC2ERKN3gfx4SizeEd(%"class.blink::VideoTrackAdapterSettings"* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), double) unnamed_addr #3 align 2 {
  %4 = alloca %"class.absl::optional_internal::optional_data_dtor_base", align 8
  %5 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %4, i64 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = bitcast %"class.gfx::Size"* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base", %"class.absl::optional_internal::optional_data_dtor_base"* %4, i64 0, i32 1
  %9 = bitcast %union.anon* %8 to i64*
  store i64 %7, i64* %9, align 4
  %10 = bitcast %"class.absl::optional_internal::optional_data_dtor_base"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %7, 32
  %13 = trunc i64 %12 to i32
  %14 = bitcast %"class.blink::VideoTrackAdapterSettings"* %0 to i64*
  store i64 %11, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 1
  %17 = bitcast double* %16 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 0x7FF0000000000000>, <2 x double>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 3
  store double %2, double* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25VideoTrackAdapterSettingsC2ERKS0_(%"class.blink::VideoTrackAdapterSettings"* nocapture, %"class.blink::VideoTrackAdapterSettings"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::VideoTrackAdapterSettings"* @_ZN5blink25VideoTrackAdapterSettingsaSERKS0_(%"class.blink::VideoTrackAdapterSettings"* returned, %"class.blink::VideoTrackAdapterSettings"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret %"class.blink::VideoTrackAdapterSettings"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink25VideoTrackAdapterSettingseqERKS0_(%"class.blink::VideoTrackAdapterSettings"* nocapture readonly, %"class.blink::VideoTrackAdapterSettings"* nocapture readonly dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = icmp eq i8 %7, 0
  br i1 %13, label %14, label %15, !prof !3

14:                                               ; preds = %12
  tail call void @llvm.trap() #5
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %21, label %46

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %28, label %46

27:                                               ; preds = %2
  br i1 %9, label %46, label %28

28:                                               ; preds = %27, %21
  %29 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 1
  %30 = load double, double* %29, align 8
  %31 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 1
  %32 = load double, double* %31, align 8
  %33 = fcmp oeq double %30, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 2
  %36 = load double, double* %35, align 8
  %37 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 2
  %38 = load double, double* %37, align 8
  %39 = fcmp oeq double %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %0, i64 0, i32 3
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %"class.blink::VideoTrackAdapterSettings", %"class.blink::VideoTrackAdapterSettings"* %1, i64 0, i32 3
  %44 = load double, double* %43, align 8
  %45 = fcmp oeq double %42, %44
  br label %46

46:                                               ; preds = %27, %15, %21, %40, %34, %28
  %47 = phi i1 [ false, %34 ], [ false, %28 ], [ false, %27 ], [ %45, %40 ], [ false, %21 ], [ false, %15 ]
  ret i1 %47
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
