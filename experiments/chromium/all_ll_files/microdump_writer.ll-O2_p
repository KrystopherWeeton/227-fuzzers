; ModuleID = '../../third_party/breakpad/breakpad/src/client/linux/microdump_writer/microdump_writer.cc'
source_filename = "../../third_party/breakpad/breakpad/src/client/linux/microdump_writer/microdump_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"struct.google_breakpad::MicrodumpExtraInfo" = type { i8*, i8*, i8*, i8* }
%struct.MDRawContextAMD64 = type { i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i16, i16, i16, i16, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.anon.37, [26 x %struct.uint128_struct], i64, i64, i64, i64, i64, i64 }
%union.anon.37 = type { %struct.MDXmmSaveArea32AMD64 }
%struct.MDXmmSaveArea32AMD64 = type { i16, i16, i8, i8, i16, i32, i16, i16, i32, i16, i16, i32, i32, [8 x %struct.uint128_struct], [16 x %struct.uint128_struct], [96 x i8] }
%struct.uint128_struct = type { i64, i64 }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%"class.google_breakpad::LinuxPtraceDumper" = type <{ %"class.google_breakpad::LinuxDumper", i8, [7 x i8] }>
%"class.google_breakpad::LinuxDumper" = type { i32 (...)**, i32, i8*, i64, i32, i32, %"class.std::__1::vector", i32, %"class.google_breakpad::PageAllocator", %"class.google_breakpad::wasteful_vector", %"class.google_breakpad::wasteful_vector.13", %"class.google_breakpad::wasteful_vector.22" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64* }
%"class.google_breakpad::PageAllocator" = type { i64, %"struct.google_breakpad::PageAllocator::PageHeader"*, i8*, i64, i64 }
%"struct.google_breakpad::PageAllocator::PageHeader" = type { %"struct.google_breakpad::PageAllocator::PageHeader"*, i64 }
%"class.google_breakpad::wasteful_vector" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.google_breakpad::PageStdAllocator" }
%"struct.google_breakpad::PageStdAllocator" = type { %"class.google_breakpad::PageAllocator"*, i32*, i64 }
%"class.google_breakpad::wasteful_vector.13" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"**, %"class.std::__1::__compressed_pair.16" }
%"struct.google_breakpad::MappingInfo" = type { i64, i64, %struct.anon, i64, i8, [255 x i8] }
%struct.anon = type { i64, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.google_breakpad::MappingInfo"** }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.google_breakpad::PageStdAllocator.19" }
%"struct.google_breakpad::PageStdAllocator.19" = type { %"class.google_breakpad::PageAllocator"*, %"struct.google_breakpad::MappingInfo"**, i64 }
%"class.google_breakpad::wasteful_vector.22" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i64*, i64*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.google_breakpad::PageStdAllocator.27" }
%"struct.google_breakpad::PageStdAllocator.27" = type { %"class.google_breakpad::PageAllocator"*, i64*, i64 }
%"class.(anonymous namespace)::MicrodumpWriter" = type { %struct.ucontext_t*, %struct._libc_fpstate*, %"class.google_breakpad::LinuxDumper"*, %"class.std::__1::list"*, i8, i64, i8, %"struct.google_breakpad::MicrodumpExtraInfo", i8*, i8*, i64, i64, i64 }
%struct.ucontext_t = type { i64, %struct.ucontext_t*, %struct.stack_t, %struct.mcontext_t, %struct.__sigset_t, %struct._libc_fpstate, [4 x i64] }
%struct.stack_t = type { i8*, i32, i64 }
%struct.mcontext_t = type { [23 x i64], %struct._libc_fpstate*, [8 x i64] }
%struct.__sigset_t = type { [16 x i64] }
%struct._libc_fpstate = type { i16, i16, i16, i16, i64, i64, i32, i32, [8 x %struct._libc_fpxreg], [16 x %struct._libc_xmmreg], [24 x i32] }
%struct._libc_fpxreg = type { [4 x i16], i16, [3 x i16] }
%struct._libc_xmmreg = type { [4 x i32] }
%"struct.google_breakpad::ExceptionHandler::CrashContext" = type { %struct.siginfo_t, i32, %struct.ucontext_t, %struct._libc_fpstate }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon }
%union.anon = type { %struct.anon.31, [80 x i8] }
%struct.anon.31 = type { i32, i32, i32, i64, i64 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.google_breakpad::MappingEntry" }
%"struct.google_breakpad::MappingEntry" = type { %"struct.google_breakpad::MappingInfo", [16 x i8] }
%"class.google_breakpad::auto_wasteful_vector" = type <{ %"class.google_breakpad::wasteful_vector.39", [20 x i8], [4 x i8] }>
%"class.google_breakpad::wasteful_vector.39" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i8*, i8*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.google_breakpad::PageStdAllocator.45" }
%"struct.google_breakpad::PageStdAllocator.45" = type { %"class.google_breakpad::PageAllocator"*, i8*, i64 }
%struct.MDGUID = type { i32, i16, i16, [8 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15google_breakpad13PageAllocator5AllocEm = comdat any

$_ZNSt3__16vectorIhN15google_breakpad16PageStdAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSD_IS7_EES9_S9_ = comdat any

@.str = private unnamed_addr constant [34 x i8] c"Microdump skipped (uninteresting)\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"-----BEGIN BREAKPAD MICRODUMP-----\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"-----END BREAKPAD MICRODUMP-----\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"V \00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"UNKNOWN:0.0.0.0\00", align 1
@_ZZN12_GLOBAL__N_115MicrodumpWriter17DumpOSInformationEvE5kOSId = internal constant [2 x i8] c"L\00", align 1
@_ZZN12_GLOBAL__N_115MicrodumpWriter17DumpOSInformationEvE5kArch = internal constant [7 x i8] c"x86_64\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"O \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"unknown_hw_arch\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"no build fingerprint available\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"P \00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"R \00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"G \00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"S 0 \00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"S \00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"C \00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"M \00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"0 \00", align 1
@_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX = internal unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15google_breakpad14WriteMicrodumpEiPKvmRKNSt3__14listINS_12MappingEntryENS2_9allocatorIS4_EEEEbmbRKNS_18MicrodumpExtraInfoE(i32, i8*, i64, %"class.std::__1::list"* dereferenceable(24), i1 zeroext, i64, i1 zeroext, %"struct.google_breakpad::MicrodumpExtraInfo"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %9 = alloca %struct.MDRawContextAMD64, align 8
  %10 = alloca [17 x i8], align 16
  %11 = alloca [9 x i8], align 1
  %12 = alloca [3 x i8], align 1
  %13 = alloca %struct.utsname, align 1
  %14 = alloca %"class.google_breakpad::LinuxPtraceDumper", align 8
  %15 = alloca %"class.(anonymous namespace)::MicrodumpWriter", align 8
  %16 = bitcast %"class.google_breakpad::LinuxPtraceDumper"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 264, i1 false)
  call void @_ZN15google_breakpad17LinuxPtraceDumperC1Ei(%"class.google_breakpad::LinuxPtraceDumper"* nonnull %14, i32 %0) #7
  %17 = icmp eq i8* %1, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %8
  %19 = icmp eq i64 %2, 1616
  br i1 %19, label %20, label %916

20:                                               ; preds = %18
  %21 = bitcast i8* %1 to %"struct.google_breakpad::ExceptionHandler::CrashContext"*
  %22 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0
  %23 = bitcast i8* %1 to %struct.siginfo_t*
  call void @_ZN15google_breakpad11LinuxDumper23SetCrashInfoFromSigInfoERK9siginfo_t(%"class.google_breakpad::LinuxDumper"* nonnull %22, %struct.siginfo_t* nonnull dereferenceable(128) %23) #7
  %24 = getelementptr inbounds i8, i8* %1, i64 128
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 7
  store i32 %26, i32* %27, align 8
  br label %28

28:                                               ; preds = %8, %20
  %29 = phi %"struct.google_breakpad::ExceptionHandler::CrashContext"* [ %21, %20 ], [ null, %8 ]
  %30 = bitcast %"class.(anonymous namespace)::MicrodumpWriter"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %30) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 56, i1 false)
  %31 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0
  %32 = zext i1 %4 to i8
  %33 = zext i1 %6 to i8
  %34 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 0
  %35 = icmp ne %"struct.google_breakpad::ExceptionHandler::CrashContext"* %29, null
  %36 = getelementptr inbounds %"struct.google_breakpad::ExceptionHandler::CrashContext", %"struct.google_breakpad::ExceptionHandler::CrashContext"* %29, i64 0, i32 2
  %37 = select i1 %35, %struct.ucontext_t* %36, %struct.ucontext_t* null
  store %struct.ucontext_t* %37, %struct.ucontext_t** %34, align 8
  %38 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.google_breakpad::ExceptionHandler::CrashContext", %"struct.google_breakpad::ExceptionHandler::CrashContext"* %29, i64 0, i32 3
  %40 = select i1 %35, %struct._libc_fpstate* %39, %struct._libc_fpstate* null
  store %struct._libc_fpstate* %40, %struct._libc_fpstate** %38, align 8
  %41 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 2
  store %"class.google_breakpad::LinuxDumper"* %31, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %42 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 3
  store %"class.std::__1::list"* %3, %"class.std::__1::list"** %42, align 8
  %43 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 4
  store i8 %32, i8* %43, align 8
  %44 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 5
  store i64 %5, i64* %44, align 8
  %45 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 6
  store i8 %33, i8* %45, align 8
  %46 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 7
  %47 = bitcast %"struct.google_breakpad::MicrodumpExtraInfo"* %46 to i8*
  %48 = bitcast %"struct.google_breakpad::MicrodumpExtraInfo"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 32, i1 false) #7
  %49 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 8
  %50 = bitcast i8** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 40, i1 false) #7
  %51 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 8, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  %54 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 8, i32 0
  %55 = load i64, i64* %54, align 8
  br i1 %53, label %67, label %56

56:                                               ; preds = %28
  %57 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 8, i32 3
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %55, %58
  %60 = icmp ult i64 %59, 2048
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds i8, i8* %52, i64 %58
  %63 = add i64 %58, 2048
  store i64 %63, i64* %57, align 8
  %64 = icmp eq i64 %63, %55
  br i1 %64, label %65, label %106

65:                                               ; preds = %61
  %66 = bitcast i8** %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #7
  br label %106

67:                                               ; preds = %56, %28
  %68 = add i64 %55, 2063
  %69 = udiv i64 %68, %55
  %70 = mul i64 %69, %55
  %71 = call i64 asm sideeffect "movq $5,%r10;movq $6,%r8;movq $7,%r9;syscall\0A", "={ax},0,{di},{si},{dx},r,r,r,~{r10},~{r8},~{r9},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 9, i64 0, i64 %70, i64 3, i64 34, i64 -1, i64 0) #7, !srcloc !2
  %72 = icmp ugt i64 %71, -4096
  br i1 %72, label %73, label %77

73:                                               ; preds = %67
  %74 = trunc i64 %71 to i32
  %75 = sub nsw i32 0, %74
  %76 = tail call i32* @__errno_location() #8
  store i32 %75, i32* %76, align 4
  br label %105

77:                                               ; preds = %67
  %78 = inttoptr i64 %71 to i8*
  %79 = icmp eq i8* %78, inttoptr (i64 -1 to i8*)
  br i1 %79, label %105, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 8, i32 1
  %82 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %71 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %78, i64 8
  %86 = bitcast i8* %85 to i64*
  store i64 %69, i64* %86, align 8
  %87 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %81 to i8**
  store i8* %78, i8** %87, align 8
  %88 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 8, i32 4
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, %69
  store i64 %90, i64* %88, align 8
  %91 = icmp eq i64 %71, 0
  br i1 %91, label %105, label %92

92:                                               ; preds = %80
  %93 = load i64, i64* %54, align 8
  %94 = mul i64 %93, %69
  %95 = add i64 %93, 2064
  %96 = sub i64 %95, %94
  %97 = urem i64 %96, %93
  %98 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0, i32 8, i32 3
  store i64 %97, i64* %98, align 8
  %99 = icmp eq i64 %97, 0
  %100 = add i64 %69, -1
  %101 = mul i64 %93, %100
  %102 = getelementptr inbounds i8, i8* %78, i64 %101
  %103 = select i1 %99, i8* null, i8* %102
  store i8* %103, i8** %51, align 8
  %104 = getelementptr inbounds i8, i8* %78, i64 16
  br label %106

105:                                              ; preds = %80, %77, %73
  store i8* null, i8** %49, align 8
  br label %110

106:                                              ; preds = %61, %65, %92
  %107 = phi i8* [ %62, %65 ], [ %62, %61 ], [ %104, %92 ]
  store i8* %107, i8** %49, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  store i8 0, i8* %107, align 1
  br label %110

110:                                              ; preds = %105, %106, %109
  %111 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %112 = bitcast %"class.google_breakpad::LinuxDumper"* %111 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %113 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %113, i64 2
  %115 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %114, align 8
  %116 = call zeroext i1 %115(%"class.google_breakpad::LinuxDumper"* %111) #7
  %117 = xor i1 %116, true
  %118 = load i8*, i8** %49, align 8
  %119 = icmp eq i8* %118, null
  %120 = or i1 %119, %117
  br i1 %120, label %908, label %121

121:                                              ; preds = %110
  %122 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %123 = bitcast %"class.google_breakpad::LinuxDumper"* %122 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %124 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %124, i64 5
  %126 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %125, align 8
  %127 = call zeroext i1 %126(%"class.google_breakpad::LinuxDumper"* %122) #7
  br i1 %127, label %128, label %908

128:                                              ; preds = %121
  %129 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %130 = bitcast %"class.google_breakpad::LinuxDumper"* %129 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %131 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %130, align 8
  %132 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %131, i64 3
  %133 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %132, align 8
  %134 = call zeroext i1 %133(%"class.google_breakpad::LinuxDumper"* %129) #7
  br i1 %134, label %135, label %908

135:                                              ; preds = %128
  %136 = load %struct.ucontext_t*, %struct.ucontext_t** %34, align 8
  %137 = call i64 @_ZN15google_breakpad14UContextReader15GetStackPointerEPK10ucontext_t(%struct.ucontext_t* %136) #7
  %138 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 12
  store i64 %137, i64* %138, align 8
  %139 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %140 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 11
  %141 = bitcast i64* %140 to i8**
  %142 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 10
  %143 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper12GetStackInfoEPPKvPmm(%"class.google_breakpad::LinuxDumper"* %139, i8** %141, i64* %142, i64 %137) #7
  br i1 %143, label %144, label %190

144:                                              ; preds = %135
  %145 = load i64, i64* %142, align 8
  %146 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %147 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %146, i64 0, i32 8
  %148 = and i64 %145, 4294967295
  %149 = call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %147, i64 %148) #7
  %150 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 9
  store i8* %149, i8** %150, align 8
  %151 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %152 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %151, i64 0, i32 7
  %153 = load i32, i32* %152, align 8
  %154 = load i8*, i8** %141, align 8
  %155 = load i64, i64* %142, align 8
  %156 = bitcast %"class.google_breakpad::LinuxDumper"* %151 to i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)***
  %157 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)**, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*** %156, align 8
  %158 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %157, i64 8
  %159 = load i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)*, i1 (%"class.google_breakpad::LinuxDumper"*, i8*, i32, i8*, i64)** %158, align 8
  %160 = call zeroext i1 %159(%"class.google_breakpad::LinuxDumper"* %151, i8* %149, i32 %153, i8* %154, i64 %155) #7
  %161 = load i8, i8* %43, align 8, !range !3
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %190, label %163

163:                                              ; preds = %144
  %164 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %165 = load i64, i64* %44, align 8
  %166 = call %"struct.google_breakpad::MappingInfo"* @_ZNK15google_breakpad11LinuxDumper17FindMappingNoBiasEm(%"class.google_breakpad::LinuxDumper"* %164, i64 %165) #7
  %167 = icmp eq %"struct.google_breakpad::MappingInfo"* %166, null
  br i1 %167, label %186, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %166, i64 0, i32 2, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %166, i64 0, i32 2, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = load %struct.ucontext_t*, %struct.ucontext_t** %34, align 8
  %174 = call i64 @_ZN15google_breakpad14UContextReader21GetInstructionPointerEPK10ucontext_t(%struct.ucontext_t* %173) #7
  %175 = icmp ugt i64 %170, %174
  %176 = icmp ugt i64 %174, %172
  %177 = or i1 %175, %176
  br i1 %177, label %178, label %190

178:                                              ; preds = %168
  %179 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %180 = load i8*, i8** %150, align 8
  %181 = load i64, i64* %142, align 8
  %182 = load i64, i64* %138, align 8
  %183 = load i64, i64* %140, align 8
  %184 = sub i64 %182, %183
  %185 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper24StackHasPointerToMappingEPKhmmRKNS_11MappingInfoE(%"class.google_breakpad::LinuxDumper"* %179, i8* %180, i64 %181, i64 %184, %"struct.google_breakpad::MappingInfo"* nonnull dereferenceable(296) %166) #7
  br i1 %185, label %190, label %186

186:                                              ; preds = %178, %163
  %187 = call i64 @my_strlen(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0)) #7
  %188 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 %187) #7
  %189 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  br label %908

190:                                              ; preds = %178, %168, %144, %135
  %191 = phi i32 [ 0, %168 ], [ 0, %144 ], [ 1, %135 ], [ 0, %178 ]
  %192 = call i64 @my_strlen(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #7
  %193 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i64 %192) #7
  %194 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %195 = load i8*, i8** %49, align 8
  %196 = call i64 @my_strlcat(i8* %195, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2048) #7
  %197 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 7, i32 1
  %198 = load i8*, i8** %197, align 8
  %199 = icmp eq i8* %198, null
  %200 = load i8*, i8** %49, align 8
  br i1 %199, label %203, label %201

201:                                              ; preds = %190
  %202 = call i64 @my_strlcat(i8* %200, i8* nonnull %198, i64 2048) #7
  br label %205

203:                                              ; preds = %190
  %204 = call i64 @my_strlcat(i8* %200, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i64 2048) #7
  br label %205

205:                                              ; preds = %203, %201
  %206 = load i8*, i8** %49, align 8
  %207 = call i64 @my_strlen(i8* %206) #7
  %208 = call i32 @_ZN6logger5writeEPKcm(i8* %206, i64 %207) #7
  %209 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %210 = load i8*, i8** %49, align 8
  store i8 0, i8* %210, align 1
  %211 = call i64 @sysconf(i32 83) #7
  %212 = load i8*, i8** %49, align 8
  %213 = call i64 @my_strlcat(i8* %212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2048) #7
  %214 = load i8*, i8** %49, align 8
  %215 = call i64 @my_strlcat(i8* %214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter17DumpOSInformationEvE5kOSId, i64 0, i64 0), i64 2048) #7
  %216 = load i8*, i8** %49, align 8
  %217 = call i64 @my_strlcat(i8* %216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %218 = load i8*, i8** %49, align 8
  %219 = call i64 @my_strlcat(i8* %218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter17DumpOSInformationEvE5kArch, i64 0, i64 0), i64 2048) #7
  %220 = load i8*, i8** %49, align 8
  %221 = call i64 @my_strlcat(i8* %220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %222 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %222) #7
  %223 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 1
  %224 = getelementptr inbounds [3 x i8], [3 x i8]* %12, i64 0, i64 2
  %225 = and i64 %211, 15
  %226 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  store i8 %227, i8* %223, align 1
  %228 = lshr i64 %211, 4
  %229 = and i64 %228, 15
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %229
  %231 = load i8, i8* %230, align 1
  store i8 %231, i8* %222, align 1
  store i8 0, i8* %224, align 1
  %232 = load i8*, i8** %49, align 8
  %233 = call i64 @my_strlcat(i8* %232, i8* nonnull %222, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %222) #7
  %234 = load i8*, i8** %49, align 8
  %235 = call i64 @my_strlcat(i8* %234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %236 = getelementptr inbounds %struct.utsname, %struct.utsname* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 390, i8* nonnull %236) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %236, i8 -86, i64 390, i1 false) #7
  %237 = call i32 @uname(%struct.utsname* nonnull %13) #7
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %struct.utsname, %struct.utsname* %13, i64 0, i32 4, i64 0
  %240 = select i1 %238, i8* %239, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)
  %241 = load i8*, i8** %49, align 8
  %242 = call i64 @my_strlcat(i8* %241, i8* %240, i64 2048) #7
  %243 = load i8*, i8** %49, align 8
  %244 = call i64 @my_strlcat(i8* %243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %245 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 7, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %251, label %248

248:                                              ; preds = %205
  %249 = load i8*, i8** %49, align 8
  %250 = call i64 @my_strlcat(i8* %249, i8* nonnull %246, i64 2048) #7
  br label %264

251:                                              ; preds = %205
  br i1 %238, label %252, label %261

252:                                              ; preds = %251
  %253 = getelementptr inbounds %struct.utsname, %struct.utsname* %13, i64 0, i32 2, i64 0
  %254 = load i8*, i8** %49, align 8
  %255 = call i64 @my_strlcat(i8* %254, i8* %253, i64 2048) #7
  %256 = load i8*, i8** %49, align 8
  %257 = call i64 @my_strlcat(i8* %256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %258 = getelementptr inbounds %struct.utsname, %struct.utsname* %13, i64 0, i32 3, i64 0
  %259 = load i8*, i8** %49, align 8
  %260 = call i64 @my_strlcat(i8* %259, i8* %258, i64 2048) #7
  br label %264

261:                                              ; preds = %251
  %262 = load i8*, i8** %49, align 8
  %263 = call i64 @my_strlcat(i8* %262, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i64 2048) #7
  br label %264

264:                                              ; preds = %261, %252, %248
  %265 = load i8*, i8** %49, align 8
  %266 = call i64 @my_strlen(i8* %265) #7
  %267 = call i32 @_ZN6logger5writeEPKcm(i8* %265, i64 %266) #7
  %268 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %269 = load i8*, i8** %49, align 8
  store i8 0, i8* %269, align 1
  call void @llvm.lifetime.end.p0i8(i64 390, i8* nonnull %236) #7
  %270 = load i8*, i8** %49, align 8
  %271 = call i64 @my_strlcat(i8* %270, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i64 2048) #7
  %272 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 7, i32 3
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  %275 = load i8*, i8** %49, align 8
  br i1 %274, label %278, label %276

276:                                              ; preds = %264
  %277 = call i64 @my_strlcat(i8* %275, i8* nonnull %273, i64 2048) #7
  br label %280

278:                                              ; preds = %264
  %279 = call i64 @my_strlcat(i8* %275, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 2048) #7
  br label %280

280:                                              ; preds = %278, %276
  %281 = load i8*, i8** %49, align 8
  %282 = call i64 @my_strlen(i8* %281) #7
  %283 = call i32 @_ZN6logger5writeEPKcm(i8* %281, i64 %282) #7
  %284 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %285 = load i8*, i8** %49, align 8
  store i8 0, i8* %285, align 1
  %286 = load i8*, i8** %49, align 8
  %287 = call i64 @my_strlcat(i8* %286, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2048) #7
  %288 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %289 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %288, i64 0, i32 4
  %290 = load i32, i32* %289, align 8
  %291 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %291) #7
  %292 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 1
  %293 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 2
  %294 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 3
  %295 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 4
  %296 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 5
  %297 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 6
  %298 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 7
  %299 = getelementptr inbounds [9 x i8], [9 x i8]* %11, i64 0, i64 8
  %300 = and i32 %290, 15
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %301
  %303 = load i8, i8* %302, align 1
  store i8 %303, i8* %298, align 1
  %304 = lshr i32 %290, 4
  %305 = and i32 %304, 15
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  store i8 %308, i8* %297, align 1
  %309 = lshr i32 %290, 8
  %310 = and i32 %309, 15
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %311
  %313 = load i8, i8* %312, align 1
  store i8 %313, i8* %296, align 1
  %314 = lshr i32 %290, 12
  %315 = and i32 %314, 15
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %316
  %318 = load i8, i8* %317, align 1
  store i8 %318, i8* %295, align 1
  %319 = lshr i32 %290, 16
  %320 = and i32 %319, 15
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %321
  %323 = load i8, i8* %322, align 1
  store i8 %323, i8* %294, align 1
  %324 = lshr i32 %290, 20
  %325 = and i32 %324, 15
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %326
  %328 = load i8, i8* %327, align 1
  store i8 %328, i8* %293, align 1
  %329 = lshr i32 %290, 24
  %330 = and i32 %329, 15
  %331 = zext i32 %330 to i64
  %332 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %331
  %333 = load i8, i8* %332, align 1
  store i8 %333, i8* %292, align 1
  %334 = lshr i32 %290, 28
  %335 = zext i32 %334 to i64
  %336 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %335
  %337 = load i8, i8* %336, align 1
  store i8 %337, i8* %291, align 1
  store i8 0, i8* %299, align 1
  %338 = load i8*, i8** %49, align 8
  %339 = call i64 @my_strlcat(i8* %338, i8* nonnull %291, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %291) #7
  %340 = load i8*, i8** %49, align 8
  %341 = call i64 @my_strlcat(i8* %340, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %342 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %343 = call i8* @_ZNK15google_breakpad11LinuxDumper20GetCrashSignalStringEv(%"class.google_breakpad::LinuxDumper"* %342) #7
  %344 = load i8*, i8** %49, align 8
  %345 = call i64 @my_strlcat(i8* %344, i8* %343, i64 2048) #7
  %346 = load i8*, i8** %49, align 8
  %347 = call i64 @my_strlcat(i8* %346, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %348 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %349 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %348, i64 0, i32 3
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %351) #7
  %352 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 1
  %353 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 2
  %354 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 3
  %355 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 4
  %356 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 5
  %357 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 6
  %358 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 7
  %359 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 8
  %360 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 9
  %361 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 10
  %362 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 11
  %363 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 12
  %364 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 13
  %365 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 14
  %366 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 15
  %367 = getelementptr inbounds [17 x i8], [17 x i8]* %10, i64 0, i64 16
  %368 = and i64 %350, 15
  %369 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %368
  %370 = load i8, i8* %369, align 1
  store i8 %370, i8* %366, align 1
  %371 = lshr i64 %350, 4
  %372 = and i64 %371, 15
  %373 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %372
  %374 = load i8, i8* %373, align 1
  store i8 %374, i8* %365, align 2
  %375 = lshr i64 %350, 8
  %376 = and i64 %375, 15
  %377 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %376
  %378 = load i8, i8* %377, align 1
  store i8 %378, i8* %364, align 1
  %379 = lshr i64 %350, 12
  %380 = and i64 %379, 15
  %381 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %380
  %382 = load i8, i8* %381, align 1
  store i8 %382, i8* %363, align 4
  %383 = lshr i64 %350, 16
  %384 = and i64 %383, 15
  %385 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %384
  %386 = load i8, i8* %385, align 1
  store i8 %386, i8* %362, align 1
  %387 = lshr i64 %350, 20
  %388 = and i64 %387, 15
  %389 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %388
  %390 = load i8, i8* %389, align 1
  store i8 %390, i8* %361, align 2
  %391 = lshr i64 %350, 24
  %392 = and i64 %391, 15
  %393 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %392
  %394 = load i8, i8* %393, align 1
  store i8 %394, i8* %360, align 1
  %395 = lshr i64 %350, 28
  %396 = and i64 %395, 15
  %397 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %396
  %398 = load i8, i8* %397, align 1
  store i8 %398, i8* %359, align 8
  %399 = lshr i64 %350, 32
  %400 = and i64 %399, 15
  %401 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %400
  %402 = load i8, i8* %401, align 1
  store i8 %402, i8* %358, align 1
  %403 = lshr i64 %350, 36
  %404 = and i64 %403, 15
  %405 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %404
  %406 = load i8, i8* %405, align 1
  store i8 %406, i8* %357, align 2
  %407 = lshr i64 %350, 40
  %408 = and i64 %407, 15
  %409 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %408
  %410 = load i8, i8* %409, align 1
  store i8 %410, i8* %356, align 1
  %411 = lshr i64 %350, 44
  %412 = and i64 %411, 15
  %413 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %412
  %414 = load i8, i8* %413, align 1
  store i8 %414, i8* %355, align 4
  %415 = lshr i64 %350, 48
  %416 = and i64 %415, 15
  %417 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %416
  %418 = load i8, i8* %417, align 1
  store i8 %418, i8* %354, align 1
  %419 = lshr i64 %350, 52
  %420 = and i64 %419, 15
  %421 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %420
  %422 = load i8, i8* %421, align 1
  store i8 %422, i8* %353, align 2
  %423 = lshr i64 %350, 56
  %424 = and i64 %423, 15
  %425 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %424
  %426 = load i8, i8* %425, align 1
  store i8 %426, i8* %352, align 1
  %427 = lshr i64 %350, 60
  %428 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %427
  %429 = load i8, i8* %428, align 1
  store i8 %429, i8* %351, align 16
  store i8 0, i8* %367, align 16
  %430 = load i8*, i8** %49, align 8
  %431 = call i64 @my_strlcat(i8* %430, i8* nonnull %351, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %351) #7
  %432 = load i8*, i8** %49, align 8
  %433 = call i64 @my_strlen(i8* %432) #7
  %434 = call i32 @_ZN6logger5writeEPKcm(i8* %432, i64 %433) #7
  %435 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %436 = load i8*, i8** %49, align 8
  store i8 0, i8* %436, align 1
  %437 = load i8*, i8** %49, align 8
  %438 = call i64 @my_strlcat(i8* %437, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2048) #7
  %439 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 7, i32 2
  %440 = load i8*, i8** %439, align 8
  %441 = icmp eq i8* %440, null
  %442 = load i8*, i8** %49, align 8
  br i1 %441, label %445, label %443

443:                                              ; preds = %280
  %444 = call i64 @my_strlcat(i8* %442, i8* nonnull %440, i64 2048) #7
  br label %447

445:                                              ; preds = %280
  %446 = call i64 @my_strlcat(i8* %442, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i64 2048) #7
  br label %447

447:                                              ; preds = %445, %443
  %448 = load i8*, i8** %49, align 8
  %449 = call i64 @my_strlen(i8* %448) #7
  %450 = call i32 @_ZN6logger5writeEPKcm(i8* %448, i64 %449) #7
  %451 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %452 = load i8*, i8** %49, align 8
  store i8 0, i8* %452, align 1
  %453 = icmp eq i32 %191, 0
  br i1 %453, label %454, label %782

454:                                              ; preds = %447
  %455 = load i8, i8* %45, align 8, !range !3
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %465, label %457

457:                                              ; preds = %454
  %458 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %459 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 9
  %460 = load i8*, i8** %459, align 8
  %461 = load i64, i64* %142, align 8
  %462 = load i64, i64* %138, align 8
  %463 = load i64, i64* %140, align 8
  %464 = sub i64 %462, %463
  call void @_ZN15google_breakpad11LinuxDumper17SanitizeStackCopyEPhmmm(%"class.google_breakpad::LinuxDumper"* %458, i8* %460, i64 %461, i64 %462, i64 %464) #7
  br label %465

465:                                              ; preds = %457, %454
  %466 = load i8*, i8** %49, align 8
  %467 = call i64 @my_strlcat(i8* %466, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 2048) #7
  %468 = load i64, i64* %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %351) #7
  %469 = and i64 %468, 15
  %470 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %469
  %471 = load i8, i8* %470, align 1
  store i8 %471, i8* %366, align 1
  %472 = lshr i64 %468, 4
  %473 = and i64 %472, 15
  %474 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %473
  %475 = load i8, i8* %474, align 1
  store i8 %475, i8* %365, align 2
  %476 = lshr i64 %468, 8
  %477 = and i64 %476, 15
  %478 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %477
  %479 = load i8, i8* %478, align 1
  store i8 %479, i8* %364, align 1
  %480 = lshr i64 %468, 12
  %481 = and i64 %480, 15
  %482 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %481
  %483 = load i8, i8* %482, align 1
  store i8 %483, i8* %363, align 4
  %484 = lshr i64 %468, 16
  %485 = and i64 %484, 15
  %486 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %485
  %487 = load i8, i8* %486, align 1
  store i8 %487, i8* %362, align 1
  %488 = lshr i64 %468, 20
  %489 = and i64 %488, 15
  %490 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %489
  %491 = load i8, i8* %490, align 1
  store i8 %491, i8* %361, align 2
  %492 = lshr i64 %468, 24
  %493 = and i64 %492, 15
  %494 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %493
  %495 = load i8, i8* %494, align 1
  store i8 %495, i8* %360, align 1
  %496 = lshr i64 %468, 28
  %497 = and i64 %496, 15
  %498 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %497
  %499 = load i8, i8* %498, align 1
  store i8 %499, i8* %359, align 8
  %500 = lshr i64 %468, 32
  %501 = and i64 %500, 15
  %502 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %501
  %503 = load i8, i8* %502, align 1
  store i8 %503, i8* %358, align 1
  %504 = lshr i64 %468, 36
  %505 = and i64 %504, 15
  %506 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %505
  %507 = load i8, i8* %506, align 1
  store i8 %507, i8* %357, align 2
  %508 = lshr i64 %468, 40
  %509 = and i64 %508, 15
  %510 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %509
  %511 = load i8, i8* %510, align 1
  store i8 %511, i8* %356, align 1
  %512 = lshr i64 %468, 44
  %513 = and i64 %512, 15
  %514 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %513
  %515 = load i8, i8* %514, align 1
  store i8 %515, i8* %355, align 4
  %516 = lshr i64 %468, 48
  %517 = and i64 %516, 15
  %518 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %517
  %519 = load i8, i8* %518, align 1
  store i8 %519, i8* %354, align 1
  %520 = lshr i64 %468, 52
  %521 = and i64 %520, 15
  %522 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %521
  %523 = load i8, i8* %522, align 1
  store i8 %523, i8* %353, align 2
  %524 = lshr i64 %468, 56
  %525 = and i64 %524, 15
  %526 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %525
  %527 = load i8, i8* %526, align 1
  store i8 %527, i8* %352, align 1
  %528 = lshr i64 %468, 60
  %529 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %528
  %530 = load i8, i8* %529, align 1
  store i8 %530, i8* %351, align 16
  store i8 0, i8* %367, align 16
  %531 = load i8*, i8** %49, align 8
  %532 = call i64 @my_strlcat(i8* %531, i8* nonnull %351, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %351) #7
  %533 = load i8*, i8** %49, align 8
  %534 = call i64 @my_strlcat(i8* %533, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %535 = load i64, i64* %140, align 8
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %351) #7
  %536 = and i64 %535, 15
  %537 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %536
  %538 = load i8, i8* %537, align 1
  store i8 %538, i8* %366, align 1
  %539 = lshr i64 %535, 4
  %540 = and i64 %539, 15
  %541 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %540
  %542 = load i8, i8* %541, align 1
  store i8 %542, i8* %365, align 2
  %543 = lshr i64 %535, 8
  %544 = and i64 %543, 15
  %545 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %544
  %546 = load i8, i8* %545, align 1
  store i8 %546, i8* %364, align 1
  %547 = lshr i64 %535, 12
  %548 = and i64 %547, 15
  %549 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %548
  %550 = load i8, i8* %549, align 1
  store i8 %550, i8* %363, align 4
  %551 = lshr i64 %535, 16
  %552 = and i64 %551, 15
  %553 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %552
  %554 = load i8, i8* %553, align 1
  store i8 %554, i8* %362, align 1
  %555 = lshr i64 %535, 20
  %556 = and i64 %555, 15
  %557 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %556
  %558 = load i8, i8* %557, align 1
  store i8 %558, i8* %361, align 2
  %559 = lshr i64 %535, 24
  %560 = and i64 %559, 15
  %561 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %560
  %562 = load i8, i8* %561, align 1
  store i8 %562, i8* %360, align 1
  %563 = lshr i64 %535, 28
  %564 = and i64 %563, 15
  %565 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %564
  %566 = load i8, i8* %565, align 1
  store i8 %566, i8* %359, align 8
  %567 = lshr i64 %535, 32
  %568 = and i64 %567, 15
  %569 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %568
  %570 = load i8, i8* %569, align 1
  store i8 %570, i8* %358, align 1
  %571 = lshr i64 %535, 36
  %572 = and i64 %571, 15
  %573 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %572
  %574 = load i8, i8* %573, align 1
  store i8 %574, i8* %357, align 2
  %575 = lshr i64 %535, 40
  %576 = and i64 %575, 15
  %577 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %576
  %578 = load i8, i8* %577, align 1
  store i8 %578, i8* %356, align 1
  %579 = lshr i64 %535, 44
  %580 = and i64 %579, 15
  %581 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %580
  %582 = load i8, i8* %581, align 1
  store i8 %582, i8* %355, align 4
  %583 = lshr i64 %535, 48
  %584 = and i64 %583, 15
  %585 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %584
  %586 = load i8, i8* %585, align 1
  store i8 %586, i8* %354, align 1
  %587 = lshr i64 %535, 52
  %588 = and i64 %587, 15
  %589 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %588
  %590 = load i8, i8* %589, align 1
  store i8 %590, i8* %353, align 2
  %591 = lshr i64 %535, 56
  %592 = and i64 %591, 15
  %593 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %592
  %594 = load i8, i8* %593, align 1
  store i8 %594, i8* %352, align 1
  %595 = lshr i64 %535, 60
  %596 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %595
  %597 = load i8, i8* %596, align 1
  store i8 %597, i8* %351, align 16
  store i8 0, i8* %367, align 16
  %598 = load i8*, i8** %49, align 8
  %599 = call i64 @my_strlcat(i8* %598, i8* nonnull %351, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %351) #7
  %600 = load i8*, i8** %49, align 8
  %601 = call i64 @my_strlcat(i8* %600, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %602 = load i64, i64* %142, align 8
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %351) #7
  %603 = and i64 %602, 15
  %604 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %603
  %605 = load i8, i8* %604, align 1
  store i8 %605, i8* %366, align 1
  %606 = lshr i64 %602, 4
  %607 = and i64 %606, 15
  %608 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %607
  %609 = load i8, i8* %608, align 1
  store i8 %609, i8* %365, align 2
  %610 = lshr i64 %602, 8
  %611 = and i64 %610, 15
  %612 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %611
  %613 = load i8, i8* %612, align 1
  store i8 %613, i8* %364, align 1
  %614 = lshr i64 %602, 12
  %615 = and i64 %614, 15
  %616 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %615
  %617 = load i8, i8* %616, align 1
  store i8 %617, i8* %363, align 4
  %618 = lshr i64 %602, 16
  %619 = and i64 %618, 15
  %620 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %619
  %621 = load i8, i8* %620, align 1
  store i8 %621, i8* %362, align 1
  %622 = lshr i64 %602, 20
  %623 = and i64 %622, 15
  %624 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %623
  %625 = load i8, i8* %624, align 1
  store i8 %625, i8* %361, align 2
  %626 = lshr i64 %602, 24
  %627 = and i64 %626, 15
  %628 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %627
  %629 = load i8, i8* %628, align 1
  store i8 %629, i8* %360, align 1
  %630 = lshr i64 %602, 28
  %631 = and i64 %630, 15
  %632 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %631
  %633 = load i8, i8* %632, align 1
  store i8 %633, i8* %359, align 8
  %634 = lshr i64 %602, 32
  %635 = and i64 %634, 15
  %636 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %635
  %637 = load i8, i8* %636, align 1
  store i8 %637, i8* %358, align 1
  %638 = lshr i64 %602, 36
  %639 = and i64 %638, 15
  %640 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %639
  %641 = load i8, i8* %640, align 1
  store i8 %641, i8* %357, align 2
  %642 = lshr i64 %602, 40
  %643 = and i64 %642, 15
  %644 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %643
  %645 = load i8, i8* %644, align 1
  store i8 %645, i8* %356, align 1
  %646 = lshr i64 %602, 44
  %647 = and i64 %646, 15
  %648 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %647
  %649 = load i8, i8* %648, align 1
  store i8 %649, i8* %355, align 4
  %650 = lshr i64 %602, 48
  %651 = and i64 %650, 15
  %652 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %651
  %653 = load i8, i8* %652, align 1
  store i8 %653, i8* %354, align 1
  %654 = lshr i64 %602, 52
  %655 = and i64 %654, 15
  %656 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %655
  %657 = load i8, i8* %656, align 1
  store i8 %657, i8* %353, align 2
  %658 = lshr i64 %602, 56
  %659 = and i64 %658, 15
  %660 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %659
  %661 = load i8, i8* %660, align 1
  store i8 %661, i8* %352, align 1
  %662 = lshr i64 %602, 60
  %663 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %662
  %664 = load i8, i8* %663, align 1
  store i8 %664, i8* %351, align 16
  store i8 0, i8* %367, align 16
  %665 = load i8*, i8** %49, align 8
  %666 = call i64 @my_strlcat(i8* %665, i8* nonnull %351, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %351) #7
  %667 = load i8*, i8** %49, align 8
  %668 = call i64 @my_strlen(i8* %667) #7
  %669 = call i32 @_ZN6logger5writeEPKcm(i8* %667, i64 %668) #7
  %670 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %671 = load i8*, i8** %49, align 8
  store i8 0, i8* %671, align 1
  %672 = load i64, i64* %142, align 8
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %782, label %674

674:                                              ; preds = %465
  %675 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %15, i64 0, i32 9
  br label %676

676:                                              ; preds = %773, %674
  %677 = phi i64 [ 0, %674 ], [ %779, %773 ]
  %678 = load i8*, i8** %49, align 8
  %679 = call i64 @my_strlcat(i8* %678, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i64 2048) #7
  %680 = load i64, i64* %140, align 8
  %681 = add i64 %680, %677
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %351) #7
  %682 = and i64 %681, 15
  %683 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %682
  %684 = load i8, i8* %683, align 1
  store i8 %684, i8* %366, align 1
  %685 = lshr i64 %681, 4
  %686 = and i64 %685, 15
  %687 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %686
  %688 = load i8, i8* %687, align 1
  store i8 %688, i8* %365, align 2
  %689 = lshr i64 %681, 8
  %690 = and i64 %689, 15
  %691 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %690
  %692 = load i8, i8* %691, align 1
  store i8 %692, i8* %364, align 1
  %693 = lshr i64 %681, 12
  %694 = and i64 %693, 15
  %695 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %694
  %696 = load i8, i8* %695, align 1
  store i8 %696, i8* %363, align 4
  %697 = lshr i64 %681, 16
  %698 = and i64 %697, 15
  %699 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %698
  %700 = load i8, i8* %699, align 1
  store i8 %700, i8* %362, align 1
  %701 = lshr i64 %681, 20
  %702 = and i64 %701, 15
  %703 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %702
  %704 = load i8, i8* %703, align 1
  store i8 %704, i8* %361, align 2
  %705 = lshr i64 %681, 24
  %706 = and i64 %705, 15
  %707 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %706
  %708 = load i8, i8* %707, align 1
  store i8 %708, i8* %360, align 1
  %709 = lshr i64 %681, 28
  %710 = and i64 %709, 15
  %711 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %710
  %712 = load i8, i8* %711, align 1
  store i8 %712, i8* %359, align 8
  %713 = lshr i64 %681, 32
  %714 = and i64 %713, 15
  %715 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %714
  %716 = load i8, i8* %715, align 1
  store i8 %716, i8* %358, align 1
  %717 = lshr i64 %681, 36
  %718 = and i64 %717, 15
  %719 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %718
  %720 = load i8, i8* %719, align 1
  store i8 %720, i8* %357, align 2
  %721 = lshr i64 %681, 40
  %722 = and i64 %721, 15
  %723 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %722
  %724 = load i8, i8* %723, align 1
  store i8 %724, i8* %356, align 1
  %725 = lshr i64 %681, 44
  %726 = and i64 %725, 15
  %727 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %726
  %728 = load i8, i8* %727, align 1
  store i8 %728, i8* %355, align 4
  %729 = lshr i64 %681, 48
  %730 = and i64 %729, 15
  %731 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %730
  %732 = load i8, i8* %731, align 1
  store i8 %732, i8* %354, align 1
  %733 = lshr i64 %681, 52
  %734 = and i64 %733, 15
  %735 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %734
  %736 = load i8, i8* %735, align 1
  store i8 %736, i8* %353, align 2
  %737 = lshr i64 %681, 56
  %738 = and i64 %737, 15
  %739 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %738
  %740 = load i8, i8* %739, align 1
  store i8 %740, i8* %352, align 1
  %741 = lshr i64 %681, 60
  %742 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %741
  %743 = load i8, i8* %742, align 1
  store i8 %743, i8* %351, align 16
  store i8 0, i8* %367, align 16
  %744 = load i8*, i8** %49, align 8
  %745 = call i64 @my_strlcat(i8* %744, i8* nonnull %351, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %351) #7
  %746 = load i8*, i8** %49, align 8
  %747 = call i64 @my_strlcat(i8* %746, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %748 = load i64, i64* %142, align 8
  %749 = sub i64 %748, %677
  %750 = icmp ult i64 %749, 384
  %751 = select i1 %750, i64 %749, i64 384
  %752 = icmp eq i64 %751, 0
  br i1 %752, label %773, label %753

753:                                              ; preds = %676
  %754 = load i8*, i8** %675, align 8
  %755 = getelementptr inbounds i8, i8* %754, i64 %677
  br label %756

756:                                              ; preds = %756, %753
  %757 = phi i64 [ 0, %753 ], [ %770, %756 ]
  %758 = phi i8* [ %755, %753 ], [ %771, %756 ]
  %759 = load i8, i8* %758, align 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %222) #7
  %760 = and i8 %759, 15
  %761 = zext i8 %760 to i64
  %762 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %761
  %763 = load i8, i8* %762, align 1
  store i8 %763, i8* %223, align 1
  %764 = lshr i8 %759, 4
  %765 = zext i8 %764 to i64
  %766 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %765
  %767 = load i8, i8* %766, align 1
  store i8 %767, i8* %222, align 1
  store i8 0, i8* %224, align 1
  %768 = load i8*, i8** %49, align 8
  %769 = call i64 @my_strlcat(i8* %768, i8* nonnull %222, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %222) #7
  %770 = add nuw i64 %757, 1
  %771 = getelementptr inbounds i8, i8* %758, i64 1
  %772 = icmp eq i64 %770, %751
  br i1 %772, label %773, label %756

773:                                              ; preds = %756, %676
  %774 = load i8*, i8** %49, align 8
  %775 = call i64 @my_strlen(i8* %774) #7
  %776 = call i32 @_ZN6logger5writeEPKcm(i8* %774, i64 %775) #7
  %777 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %778 = load i8*, i8** %49, align 8
  store i8 0, i8* %778, align 1
  %779 = add i64 %677, 384
  %780 = load i64, i64* %142, align 8
  %781 = icmp ult i64 %779, %780
  br i1 %781, label %676, label %782

782:                                              ; preds = %773, %465, %447
  %783 = bitcast %struct.MDRawContextAMD64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1232, i8* nonnull %783) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %783, i8 -86, i64 1232, i1 false) #7
  call void @my_memset(i8* nonnull %783, i8 signext 0, i64 1232) #7
  %784 = load %struct.ucontext_t*, %struct.ucontext_t** %34, align 8
  %785 = load %struct._libc_fpstate*, %struct._libc_fpstate** %38, align 8
  call void @_ZN15google_breakpad14UContextReader14FillCPUContextEP17MDRawContextAMD64PK10ucontext_tPK13_libc_fpstate(%struct.MDRawContextAMD64* nonnull %9, %struct.ucontext_t* %784, %struct._libc_fpstate* %785) #7
  %786 = load i8*, i8** %49, align 8
  %787 = call i64 @my_strlcat(i8* %786, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i64 2048) #7
  br label %788

788:                                              ; preds = %788, %782
  %789 = phi i64 [ 0, %782 ], [ %802, %788 ]
  %790 = phi i8* [ %783, %782 ], [ %803, %788 ]
  %791 = load i8, i8* %790, align 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %222) #7
  %792 = and i8 %791, 15
  %793 = zext i8 %792 to i64
  %794 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %793
  %795 = load i8, i8* %794, align 1
  store i8 %795, i8* %223, align 1
  %796 = lshr i8 %791, 4
  %797 = zext i8 %796 to i64
  %798 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %797
  %799 = load i8, i8* %798, align 1
  store i8 %799, i8* %222, align 1
  store i8 0, i8* %224, align 1
  %800 = load i8*, i8** %49, align 8
  %801 = call i64 @my_strlcat(i8* %800, i8* nonnull %222, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %222) #7
  %802 = add nuw nsw i64 %789, 1
  %803 = getelementptr inbounds i8, i8* %790, i64 1
  %804 = icmp eq i64 %802, 1232
  br i1 %804, label %805, label %788

805:                                              ; preds = %788
  %806 = load i8*, i8** %49, align 8
  %807 = call i64 @my_strlen(i8* %806) #7
  %808 = call i32 @_ZN6logger5writeEPKcm(i8* %806, i64 %807) #7
  %809 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %810 = load i8*, i8** %49, align 8
  store i8 0, i8* %810, align 1
  call void @llvm.lifetime.end.p0i8(i64 1232, i8* nonnull %783) #7
  %811 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %812 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %811, i64 0, i32 10, i32 0
  %813 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %811, i64 0, i32 10, i32 0, i32 0, i32 1
  %814 = bitcast %"struct.google_breakpad::MappingInfo"*** %813 to i64*
  %815 = load i64, i64* %814, align 8
  %816 = bitcast %"class.std::__1::vector.14"* %812 to i64*
  %817 = load i64, i64* %816, align 8
  %818 = icmp eq i64 %815, %817
  br i1 %818, label %819, label %827

819:                                              ; preds = %878, %805
  %820 = load %"class.std::__1::list"*, %"class.std::__1::list"** %42, align 8
  %821 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %820, i64 0, i32 0, i32 0, i32 1
  %822 = bitcast %"struct.std::__1::__list_node_base"** %821 to i64*
  %823 = load i64, i64* %822, align 8
  %824 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %820, i64 0, i32 0, i32 0
  %825 = inttoptr i64 %823 to %"struct.std::__1::__list_node_base"*
  %826 = icmp eq %"struct.std::__1::__list_node_base"* %824, %825
  br i1 %826, label %904, label %891

827:                                              ; preds = %805, %878
  %828 = phi %"class.google_breakpad::LinuxDumper"* [ %879, %878 ], [ %811, %805 ]
  %829 = phi i64 [ %881, %878 ], [ 0, %805 ]
  %830 = phi i32 [ %880, %878 ], [ 0, %805 ]
  %831 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %828, i64 0, i32 10, i32 0, i32 0, i32 0
  %832 = load %"struct.google_breakpad::MappingInfo"**, %"struct.google_breakpad::MappingInfo"*** %831, align 8
  %833 = getelementptr inbounds %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %832, i64 %829
  %834 = load %"struct.google_breakpad::MappingInfo"*, %"struct.google_breakpad::MappingInfo"** %833, align 8
  %835 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %834, i64 0, i32 5, i64 0
  %836 = load i8, i8* %835, align 1
  %837 = icmp eq i8 %836, 0
  br i1 %837, label %878, label %838

838:                                              ; preds = %827
  %839 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %834, i64 0, i32 4
  %840 = load i8, i8* %839, align 8, !range !3
  %841 = icmp eq i8 %840, 0
  br i1 %841, label %878, label %842

842:                                              ; preds = %838
  %843 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %834, i64 0, i32 1
  %844 = load i64, i64* %843, align 8
  %845 = icmp ult i64 %844, 4096
  br i1 %845, label %878, label %846

846:                                              ; preds = %842
  %847 = load %"class.std::__1::list"*, %"class.std::__1::list"** %42, align 8
  %848 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %847, i64 0, i32 0, i32 0, i32 1
  %849 = bitcast %"struct.std::__1::__list_node_base"** %848 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %847, i64 0, i32 0, i32 0
  %852 = inttoptr i64 %850 to %"struct.std::__1::__list_node_base"*
  %853 = icmp eq %"struct.std::__1::__list_node_base"* %851, %852
  br i1 %853, label %876, label %854

854:                                              ; preds = %846
  %855 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %834, i64 0, i32 0
  %856 = load i64, i64* %855, align 8
  %857 = add i64 %856, %844
  br label %858

858:                                              ; preds = %870, %854
  %859 = phi %"struct.std::__1::__list_node_base"* [ %852, %854 ], [ %874, %870 ]
  %860 = phi i64 [ %850, %854 ], [ %873, %870 ]
  %861 = inttoptr i64 %860 to %"struct.std::__1::__list_node"*
  %862 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %861, i64 0, i32 1, i32 0, i32 0
  %863 = load i64, i64* %862, align 8
  %864 = icmp ult i64 %856, %863
  br i1 %864, label %870, label %865

865:                                              ; preds = %858
  %866 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %861, i64 0, i32 1, i32 0, i32 1
  %867 = load i64, i64* %866, align 8
  %868 = add i64 %867, %863
  %869 = icmp ugt i64 %857, %868
  br i1 %869, label %870, label %878

870:                                              ; preds = %865, %858
  %871 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %859, i64 0, i32 1
  %872 = bitcast %"struct.std::__1::__list_node_base"** %871 to i64*
  %873 = load i64, i64* %872, align 8
  %874 = inttoptr i64 %873 to %"struct.std::__1::__list_node_base"*
  %875 = icmp eq %"struct.std::__1::__list_node_base"* %851, %874
  br i1 %875, label %876, label %858

876:                                              ; preds = %870, %846
  call fastcc void @_ZN12_GLOBAL__N_115MicrodumpWriter10DumpModuleERKN15google_breakpad11MappingInfoEbjPKh(%"class.(anonymous namespace)::MicrodumpWriter"* nonnull %15, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %834, i1 zeroext true, i32 %830, i8* null) #7
  %877 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  br label %878

878:                                              ; preds = %865, %876, %842, %838, %827
  %879 = phi %"class.google_breakpad::LinuxDumper"* [ %828, %827 ], [ %828, %842 ], [ %828, %838 ], [ %877, %876 ], [ %828, %865 ]
  %880 = add i32 %830, 1
  %881 = zext i32 %880 to i64
  %882 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %879, i64 0, i32 10, i32 0
  %883 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %879, i64 0, i32 10, i32 0, i32 0, i32 1
  %884 = bitcast %"struct.google_breakpad::MappingInfo"*** %883 to i64*
  %885 = load i64, i64* %884, align 8
  %886 = bitcast %"class.std::__1::vector.14"* %882 to i64*
  %887 = load i64, i64* %886, align 8
  %888 = sub i64 %885, %887
  %889 = ashr exact i64 %888, 3
  %890 = icmp ugt i64 %889, %881
  br i1 %890, label %827, label %819

891:                                              ; preds = %819, %891
  %892 = phi %"struct.std::__1::__list_node_base"* [ %902, %891 ], [ %825, %819 ]
  %893 = phi i64 [ %899, %891 ], [ %823, %819 ]
  %894 = inttoptr i64 %893 to %"struct.std::__1::__list_node"*
  %895 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %894, i64 0, i32 1, i32 0
  %896 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %894, i64 0, i32 1, i32 1, i64 0
  call fastcc void @_ZN12_GLOBAL__N_115MicrodumpWriter10DumpModuleERKN15google_breakpad11MappingInfoEbjPKh(%"class.(anonymous namespace)::MicrodumpWriter"* nonnull %15, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %895, i1 zeroext false, i32 0, i8* %896) #7
  %897 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %892, i64 0, i32 1
  %898 = bitcast %"struct.std::__1::__list_node_base"** %897 to i64*
  %899 = load i64, i64* %898, align 8
  %900 = load %"class.std::__1::list"*, %"class.std::__1::list"** %42, align 8
  %901 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %900, i64 0, i32 0, i32 0
  %902 = inttoptr i64 %899 to %"struct.std::__1::__list_node_base"*
  %903 = icmp eq %"struct.std::__1::__list_node_base"* %901, %902
  br i1 %903, label %904, label %891

904:                                              ; preds = %891, %819
  %905 = call i64 @my_strlen(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #7
  %906 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 %905) #7
  %907 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  br label %908

908:                                              ; preds = %110, %121, %904, %186, %128
  %909 = phi i1 [ false, %128 ], [ true, %186 ], [ true, %904 ], [ false, %110 ], [ false, %121 ]
  %910 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %41, align 8
  %911 = bitcast %"class.google_breakpad::LinuxDumper"* %910 to i1 (%"class.google_breakpad::LinuxDumper"*)***
  %912 = load i1 (%"class.google_breakpad::LinuxDumper"*)**, i1 (%"class.google_breakpad::LinuxDumper"*)*** %911, align 8
  %913 = getelementptr inbounds i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %912, i64 6
  %914 = load i1 (%"class.google_breakpad::LinuxDumper"*)*, i1 (%"class.google_breakpad::LinuxDumper"*)** %913, align 8
  %915 = call zeroext i1 %914(%"class.google_breakpad::LinuxDumper"* %910) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %30) #7
  br label %916

916:                                              ; preds = %18, %908
  %917 = phi i1 [ %909, %908 ], [ false, %18 ]
  %918 = getelementptr inbounds %"class.google_breakpad::LinuxPtraceDumper", %"class.google_breakpad::LinuxPtraceDumper"* %14, i64 0, i32 0
  call void @_ZN15google_breakpad11LinuxDumperD2Ev(%"class.google_breakpad::LinuxDumper"* nonnull %918) #7
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %16) #7
  ret i1 %917
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN15google_breakpad17LinuxPtraceDumperC1Ei(%"class.google_breakpad::LinuxPtraceDumper"*, i32) unnamed_addr #2

declare void @_ZN15google_breakpad11LinuxDumper23SetCrashInfoFromSigInfoERK9siginfo_t(%"class.google_breakpad::LinuxDumper"*, %struct.siginfo_t* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN15google_breakpad11LinuxDumperD2Ev(%"class.google_breakpad::LinuxDumper"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %21, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %6, i64 %12
  %17 = add i64 %12, %1
  store i64 %17, i64* %11, align 8
  %18 = icmp eq i64 %17, %9
  br i1 %18, label %19, label %62

19:                                               ; preds = %15
  %20 = bitcast i8** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %62

21:                                               ; preds = %4, %10
  %22 = add i64 %1, 16
  %23 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 0
  %24 = add i64 %1, 15
  %25 = add i64 %24, %9
  %26 = udiv i64 %25, %9
  %27 = mul i64 %26, %9
  %28 = tail call i64 asm sideeffect "movq $5,%r10;movq $6,%r8;movq $7,%r9;syscall\0A", "={ax},0,{di},{si},{dx},r,r,r,~{r10},~{r8},~{r9},~{r11},~{rcx},~{memory},~{dirflag},~{fpsr},~{flags}"(i64 9, i64 0, i64 %27, i64 3, i64 34, i64 -1, i64 0) #7, !srcloc !2
  %29 = icmp ugt i64 %28, -4096
  br i1 %29, label %30, label %34

30:                                               ; preds = %21
  %31 = trunc i64 %28 to i32
  %32 = sub nsw i32 0, %31
  %33 = tail call i32* @__errno_location() #8
  store i32 %32, i32* %33, align 4
  br label %62

34:                                               ; preds = %21
  %35 = inttoptr i64 %28 to i8*
  %36 = icmp eq i8* %35, inttoptr (i64 -1 to i8*)
  br i1 %36, label %62, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 1
  %39 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %28 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %26, i64* %43, align 8
  %44 = bitcast %"struct.google_breakpad::PageAllocator::PageHeader"** %38 to i8**
  store i8* %35, i8** %44, align 8
  %45 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %26
  store i64 %47, i64* %45, align 8
  %48 = icmp eq i64 %28, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %37
  %50 = load i64, i64* %23, align 8
  %51 = mul i64 %50, %26
  %52 = add i64 %50, %22
  %53 = sub i64 %52, %51
  %54 = urem i64 %53, %50
  %55 = getelementptr inbounds %"class.google_breakpad::PageAllocator", %"class.google_breakpad::PageAllocator"* %0, i64 0, i32 3
  store i64 %54, i64* %55, align 8
  %56 = icmp eq i64 %54, 0
  %57 = add i64 %26, -1
  %58 = mul i64 %50, %57
  %59 = getelementptr inbounds i8, i8* %35, i64 %58
  %60 = select i1 %56, i8* null, i8* %59
  store i8* %60, i8** %5, align 8
  %61 = getelementptr inbounds i8, i8* %35, i64 16
  br label %62

62:                                               ; preds = %30, %34, %49, %37, %15, %19, %2
  %63 = phi i8* [ null, %2 ], [ %16, %19 ], [ %16, %15 ], [ %61, %49 ], [ null, %37 ], [ null, %34 ], [ null, %30 ]
  ret i8* %63
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

declare i64 @_ZN15google_breakpad14UContextReader15GetStackPointerEPK10ucontext_t(%struct.ucontext_t*) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad11LinuxDumper12GetStackInfoEPPKvPmm(%"class.google_breakpad::LinuxDumper"*, i8**, i64*, i64) local_unnamed_addr #2

declare %"struct.google_breakpad::MappingInfo"* @_ZNK15google_breakpad11LinuxDumper17FindMappingNoBiasEm(%"class.google_breakpad::LinuxDumper"*, i64) local_unnamed_addr #2

declare i64 @_ZN15google_breakpad14UContextReader21GetInstructionPointerEPK10ucontext_t(%struct.ucontext_t*) local_unnamed_addr #2

declare zeroext i1 @_ZN15google_breakpad11LinuxDumper24StackHasPointerToMappingEPKhmmRKNS_11MappingInfoE(%"class.google_breakpad::LinuxDumper"*, i8*, i64, i64, %"struct.google_breakpad::MappingInfo"* dereferenceable(296)) local_unnamed_addr #2

declare i32 @_ZN6logger5writeEPKcm(i8*, i64) local_unnamed_addr #2

declare i64 @my_strlen(i8*) local_unnamed_addr #2

declare i64 @my_strlcat(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @sysconf(i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @uname(%struct.utsname* nocapture) local_unnamed_addr #5

declare i8* @_ZNK15google_breakpad11LinuxDumper20GetCrashSignalStringEv(%"class.google_breakpad::LinuxDumper"*) local_unnamed_addr #2

declare void @_ZN15google_breakpad11LinuxDumper17SanitizeStackCopyEPhmmm(%"class.google_breakpad::LinuxDumper"*, i8*, i64, i64, i64) local_unnamed_addr #2

declare void @my_memset(i8*, i8 signext, i64) local_unnamed_addr #2

declare void @_ZN15google_breakpad14UContextReader14FillCPUContextEP17MDRawContextAMD64PK10ucontext_tPK13_libc_fpstate(%struct.MDRawContextAMD64*, %struct.ucontext_t*, %struct._libc_fpstate*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_115MicrodumpWriter10DumpModuleERKN15google_breakpad11MappingInfoEbjPKh(%"class.(anonymous namespace)::MicrodumpWriter"* readonly, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i1 zeroext, i32, i8*) unnamed_addr #0 align 2 {
  %6 = alloca [5 x i8], align 1
  %7 = alloca [9 x i8], align 1
  %8 = alloca [17 x i8], align 16
  %9 = alloca [3 x i8], align 1
  %10 = alloca %"class.google_breakpad::auto_wasteful_vector", align 8
  %11 = alloca %struct.MDGUID, align 4
  %12 = alloca [255 x i8], align 16
  %13 = alloca [255 x i8], align 16
  %14 = bitcast %"class.google_breakpad::auto_wasteful_vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %0, i64 0, i32 2
  %17 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %16, align 8
  %18 = getelementptr inbounds %"class.google_breakpad::LinuxDumper", %"class.google_breakpad::LinuxDumper"* %17, i64 0, i32 8
  %19 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 1, i64 0
  %20 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  store %"class.google_breakpad::PageAllocator"* %18, %"class.google_breakpad::PageAllocator"** %20, align 8
  %21 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 2
  store i64 20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast i8** %23 to i64*
  %25 = bitcast %"class.google_breakpad::auto_wasteful_vector"* %10 to i64*
  %26 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = ptrtoint i8* %19 to i64
  %29 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 1, i64 20
  %30 = ptrtoint i8* %29 to i64
  store i64 %28, i64* %25, align 8
  store i64 %28, i64* %27, align 8
  store i64 %30, i64* %24, align 8
  %31 = icmp eq i8* %4, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds i8, i8* %4, i64 16
  %35 = call i8* @_ZNSt3__16vectorIhN15google_breakpad16PageStdAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSD_IS7_EES9_S9_(%"class.std::__1::vector.40"* nonnull %33, i8* %19, i8* nonnull %4, i8* %34)
  br label %39

36:                                               ; preds = %5
  %37 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0
  %38 = call zeroext i1 @_ZN15google_breakpad11LinuxDumper27ElfFileIdentifierForMappingERKNS_11MappingInfoEbjRNS_15wasteful_vectorIhEE(%"class.google_breakpad::LinuxDumper"* %17, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %1, i1 zeroext %2, i32 %3, %"class.google_breakpad::wasteful_vector.39"* nonnull dereferenceable(48) %37) #7
  br label %39

39:                                               ; preds = %36, %32
  %40 = bitcast %struct.MDGUID* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 0, i64 16, i1 false)
  %41 = getelementptr inbounds %"class.google_breakpad::auto_wasteful_vector", %"class.google_breakpad::auto_wasteful_vector"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = load i64, i64* %27, align 8
  %44 = ptrtoint i8* %42 to i64
  %45 = sub i64 %43, %44
  %46 = icmp ult i64 %45, 16
  %47 = select i1 %46, i64 %45, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 1 %42, i64 %47, i1 false)
  %48 = getelementptr inbounds [255 x i8], [255 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 255, i1 false)
  %49 = getelementptr inbounds [255 x i8], [255 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %49) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 255, i1 false)
  %50 = load %"class.google_breakpad::LinuxDumper"*, %"class.google_breakpad::LinuxDumper"** %16, align 8
  call void @_ZN15google_breakpad11LinuxDumper30GetMappingEffectiveNameAndPathERKNS_11MappingInfoEPcmS4_m(%"class.google_breakpad::LinuxDumper"* %50, %"struct.google_breakpad::MappingInfo"* dereferenceable(296) %1, i8* nonnull %49, i64 255, i8* nonnull %48, i64 255) #7
  %51 = getelementptr inbounds %"class.(anonymous namespace)::MicrodumpWriter", %"class.(anonymous namespace)::MicrodumpWriter"* %0, i64 0, i32 8
  %52 = load i8*, i8** %51, align 8
  %53 = call i64 @my_strlcat(i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i64 2048) #7
  %54 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %56) #7
  %57 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 1
  %58 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 2
  %59 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 3
  %60 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 4
  %61 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 5
  %62 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 6
  %63 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 7
  %64 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 8
  %65 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 9
  %66 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 10
  %67 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 11
  %68 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 12
  %69 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 13
  %70 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 14
  %71 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 15
  %72 = getelementptr inbounds [17 x i8], [17 x i8]* %8, i64 0, i64 16
  %73 = and i64 %55, 15
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  store i8 %75, i8* %71, align 1
  %76 = lshr i64 %55, 4
  %77 = and i64 %76, 15
  %78 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %77
  %79 = load i8, i8* %78, align 1
  store i8 %79, i8* %70, align 2
  %80 = lshr i64 %55, 8
  %81 = and i64 %80, 15
  %82 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  store i8 %83, i8* %69, align 1
  %84 = lshr i64 %55, 12
  %85 = and i64 %84, 15
  %86 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  store i8 %87, i8* %68, align 4
  %88 = lshr i64 %55, 16
  %89 = and i64 %88, 15
  %90 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %89
  %91 = load i8, i8* %90, align 1
  store i8 %91, i8* %67, align 1
  %92 = lshr i64 %55, 20
  %93 = and i64 %92, 15
  %94 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %93
  %95 = load i8, i8* %94, align 1
  store i8 %95, i8* %66, align 2
  %96 = lshr i64 %55, 24
  %97 = and i64 %96, 15
  %98 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  store i8 %99, i8* %65, align 1
  %100 = lshr i64 %55, 28
  %101 = and i64 %100, 15
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  store i8 %103, i8* %64, align 8
  %104 = lshr i64 %55, 32
  %105 = and i64 %104, 15
  %106 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  store i8 %107, i8* %63, align 1
  %108 = lshr i64 %55, 36
  %109 = and i64 %108, 15
  %110 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %109
  %111 = load i8, i8* %110, align 1
  store i8 %111, i8* %62, align 2
  %112 = lshr i64 %55, 40
  %113 = and i64 %112, 15
  %114 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %61, align 1
  %116 = lshr i64 %55, 44
  %117 = and i64 %116, 15
  %118 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %117
  %119 = load i8, i8* %118, align 1
  store i8 %119, i8* %60, align 4
  %120 = lshr i64 %55, 48
  %121 = and i64 %120, 15
  %122 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  store i8 %123, i8* %59, align 1
  %124 = lshr i64 %55, 52
  %125 = and i64 %124, 15
  %126 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  store i8 %127, i8* %58, align 2
  %128 = lshr i64 %55, 56
  %129 = and i64 %128, 15
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  store i8 %131, i8* %57, align 1
  %132 = lshr i64 %55, 60
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  store i8 %134, i8* %56, align 16
  store i8 0, i8* %72, align 16
  %135 = load i8*, i8** %51, align 8
  %136 = call i64 @my_strlcat(i8* %135, i8* nonnull %56, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %56) #7
  %137 = load i8*, i8** %51, align 8
  %138 = call i64 @my_strlcat(i8* %137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %139 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 3
  %140 = load i64, i64* %139, align 8
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %56) #7
  %141 = and i64 %140, 15
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %71, align 1
  %144 = lshr i64 %140, 4
  %145 = and i64 %144, 15
  %146 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %70, align 2
  %148 = lshr i64 %140, 8
  %149 = and i64 %148, 15
  %150 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %149
  %151 = load i8, i8* %150, align 1
  store i8 %151, i8* %69, align 1
  %152 = lshr i64 %140, 12
  %153 = and i64 %152, 15
  %154 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %68, align 4
  %156 = lshr i64 %140, 16
  %157 = and i64 %156, 15
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %157
  %159 = load i8, i8* %158, align 1
  store i8 %159, i8* %67, align 1
  %160 = lshr i64 %140, 20
  %161 = and i64 %160, 15
  %162 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  store i8 %163, i8* %66, align 2
  %164 = lshr i64 %140, 24
  %165 = and i64 %164, 15
  %166 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %165
  %167 = load i8, i8* %166, align 1
  store i8 %167, i8* %65, align 1
  %168 = lshr i64 %140, 28
  %169 = and i64 %168, 15
  %170 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  store i8 %171, i8* %64, align 8
  %172 = lshr i64 %140, 32
  %173 = and i64 %172, 15
  %174 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %173
  %175 = load i8, i8* %174, align 1
  store i8 %175, i8* %63, align 1
  %176 = lshr i64 %140, 36
  %177 = and i64 %176, 15
  %178 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %177
  %179 = load i8, i8* %178, align 1
  store i8 %179, i8* %62, align 2
  %180 = lshr i64 %140, 40
  %181 = and i64 %180, 15
  %182 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %181
  %183 = load i8, i8* %182, align 1
  store i8 %183, i8* %61, align 1
  %184 = lshr i64 %140, 44
  %185 = and i64 %184, 15
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %185
  %187 = load i8, i8* %186, align 1
  store i8 %187, i8* %60, align 4
  %188 = lshr i64 %140, 48
  %189 = and i64 %188, 15
  %190 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  store i8 %191, i8* %59, align 1
  %192 = lshr i64 %140, 52
  %193 = and i64 %192, 15
  %194 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %193
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %58, align 2
  %196 = lshr i64 %140, 56
  %197 = and i64 %196, 15
  %198 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  store i8 %199, i8* %57, align 1
  %200 = lshr i64 %140, 60
  %201 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  store i8 %202, i8* %56, align 16
  store i8 0, i8* %72, align 16
  %203 = load i8*, i8** %51, align 8
  %204 = call i64 @my_strlcat(i8* %203, i8* nonnull %56, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %56) #7
  %205 = load i8*, i8** %51, align 8
  %206 = call i64 @my_strlcat(i8* %205, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %207 = getelementptr inbounds %"struct.google_breakpad::MappingInfo", %"struct.google_breakpad::MappingInfo"* %1, i64 0, i32 1
  %208 = load i64, i64* %207, align 8
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %56) #7
  %209 = and i64 %208, 15
  %210 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  store i8 %211, i8* %71, align 1
  %212 = lshr i64 %208, 4
  %213 = and i64 %212, 15
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %213
  %215 = load i8, i8* %214, align 1
  store i8 %215, i8* %70, align 2
  %216 = lshr i64 %208, 8
  %217 = and i64 %216, 15
  %218 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  store i8 %219, i8* %69, align 1
  %220 = lshr i64 %208, 12
  %221 = and i64 %220, 15
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %221
  %223 = load i8, i8* %222, align 1
  store i8 %223, i8* %68, align 4
  %224 = lshr i64 %208, 16
  %225 = and i64 %224, 15
  %226 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  store i8 %227, i8* %67, align 1
  %228 = lshr i64 %208, 20
  %229 = and i64 %228, 15
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %229
  %231 = load i8, i8* %230, align 1
  store i8 %231, i8* %66, align 2
  %232 = lshr i64 %208, 24
  %233 = and i64 %232, 15
  %234 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %233
  %235 = load i8, i8* %234, align 1
  store i8 %235, i8* %65, align 1
  %236 = lshr i64 %208, 28
  %237 = and i64 %236, 15
  %238 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %237
  %239 = load i8, i8* %238, align 1
  store i8 %239, i8* %64, align 8
  %240 = lshr i64 %208, 32
  %241 = and i64 %240, 15
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %241
  %243 = load i8, i8* %242, align 1
  store i8 %243, i8* %63, align 1
  %244 = lshr i64 %208, 36
  %245 = and i64 %244, 15
  %246 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  store i8 %247, i8* %62, align 2
  %248 = lshr i64 %208, 40
  %249 = and i64 %248, 15
  %250 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %249
  %251 = load i8, i8* %250, align 1
  store i8 %251, i8* %61, align 1
  %252 = lshr i64 %208, 44
  %253 = and i64 %252, 15
  %254 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  store i8 %255, i8* %60, align 4
  %256 = lshr i64 %208, 48
  %257 = and i64 %256, 15
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %257
  %259 = load i8, i8* %258, align 1
  store i8 %259, i8* %59, align 1
  %260 = lshr i64 %208, 52
  %261 = and i64 %260, 15
  %262 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %261
  %263 = load i8, i8* %262, align 1
  store i8 %263, i8* %58, align 2
  %264 = lshr i64 %208, 56
  %265 = and i64 %264, 15
  %266 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %265
  %267 = load i8, i8* %266, align 1
  store i8 %267, i8* %57, align 1
  %268 = lshr i64 %208, 60
  %269 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  store i8 %270, i8* %56, align 16
  store i8 0, i8* %72, align 16
  %271 = load i8*, i8** %51, align 8
  %272 = call i64 @my_strlcat(i8* %271, i8* nonnull %56, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %56) #7
  %273 = load i8*, i8** %51, align 8
  %274 = call i64 @my_strlcat(i8* %273, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 2048) #7
  %275 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %277) #7
  %278 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 1
  %279 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 2
  %280 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 3
  %281 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 4
  %282 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 5
  %283 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 6
  %284 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 7
  %285 = getelementptr inbounds [9 x i8], [9 x i8]* %7, i64 0, i64 8
  %286 = and i32 %276, 15
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %287
  %289 = load i8, i8* %288, align 1
  store i8 %289, i8* %284, align 1
  %290 = lshr i32 %276, 4
  %291 = and i32 %290, 15
  %292 = zext i32 %291 to i64
  %293 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %283, align 1
  %295 = lshr i32 %276, 8
  %296 = and i32 %295, 15
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %297
  %299 = load i8, i8* %298, align 1
  store i8 %299, i8* %282, align 1
  %300 = lshr i32 %276, 12
  %301 = and i32 %300, 15
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %302
  %304 = load i8, i8* %303, align 1
  store i8 %304, i8* %281, align 1
  %305 = lshr i32 %276, 16
  %306 = and i32 %305, 15
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %307
  %309 = load i8, i8* %308, align 1
  store i8 %309, i8* %280, align 1
  %310 = lshr i32 %276, 20
  %311 = and i32 %310, 15
  %312 = zext i32 %311 to i64
  %313 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  store i8 %314, i8* %279, align 1
  %315 = lshr i32 %276, 24
  %316 = and i32 %315, 15
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  store i8 %319, i8* %278, align 1
  %320 = lshr i32 %276, 28
  %321 = zext i32 %320 to i64
  %322 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %321
  %323 = load i8, i8* %322, align 1
  store i8 %323, i8* %277, align 1
  store i8 0, i8* %285, align 1
  %324 = load i8*, i8** %51, align 8
  %325 = call i64 @my_strlcat(i8* %324, i8* nonnull %277, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %277) #7
  %326 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 1
  %327 = load i16, i16* %326, align 4
  %328 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %328) #7
  %329 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %330 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %331 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 3
  %332 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 4
  %333 = and i16 %327, 15
  %334 = zext i16 %333 to i64
  %335 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %334
  %336 = load i8, i8* %335, align 1
  store i8 %336, i8* %331, align 1
  %337 = lshr i16 %327, 4
  %338 = and i16 %337, 15
  %339 = zext i16 %338 to i64
  %340 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %339
  %341 = load i8, i8* %340, align 1
  store i8 %341, i8* %330, align 1
  %342 = lshr i16 %327, 8
  %343 = and i16 %342, 15
  %344 = zext i16 %343 to i64
  %345 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %344
  %346 = load i8, i8* %345, align 1
  store i8 %346, i8* %329, align 1
  %347 = lshr i16 %327, 12
  %348 = zext i16 %347 to i64
  %349 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %348
  %350 = load i8, i8* %349, align 1
  store i8 %350, i8* %328, align 1
  store i8 0, i8* %332, align 1
  %351 = load i8*, i8** %51, align 8
  %352 = call i64 @my_strlcat(i8* %351, i8* nonnull %328, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %328) #7
  %353 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 2
  %354 = load i16, i16* %353, align 2
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %328) #7
  %355 = and i16 %354, 15
  %356 = zext i16 %355 to i64
  %357 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %356
  %358 = load i8, i8* %357, align 1
  store i8 %358, i8* %331, align 1
  %359 = lshr i16 %354, 4
  %360 = and i16 %359, 15
  %361 = zext i16 %360 to i64
  %362 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %361
  %363 = load i8, i8* %362, align 1
  store i8 %363, i8* %330, align 1
  %364 = lshr i16 %354, 8
  %365 = and i16 %364, 15
  %366 = zext i16 %365 to i64
  %367 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %366
  %368 = load i8, i8* %367, align 1
  store i8 %368, i8* %329, align 1
  %369 = lshr i16 %354, 12
  %370 = zext i16 %369 to i64
  %371 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %370
  %372 = load i8, i8* %371, align 1
  store i8 %372, i8* %328, align 1
  store i8 0, i8* %332, align 1
  %373 = load i8*, i8** %51, align 8
  %374 = call i64 @my_strlcat(i8* %373, i8* nonnull %328, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %328) #7
  %375 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 0
  %376 = load i8, i8* %375, align 4
  %377 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %378 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 1
  %379 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 2
  %380 = and i8 %376, 15
  %381 = zext i8 %380 to i64
  %382 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %381
  %383 = load i8, i8* %382, align 1
  store i8 %383, i8* %378, align 1
  %384 = lshr i8 %376, 4
  %385 = zext i8 %384 to i64
  %386 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %385
  %387 = load i8, i8* %386, align 1
  store i8 %387, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %388 = load i8*, i8** %51, align 8
  %389 = call i64 @my_strlcat(i8* %388, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %390 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 1
  %391 = load i8, i8* %390, align 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %392 = and i8 %391, 15
  %393 = zext i8 %392 to i64
  %394 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %393
  %395 = load i8, i8* %394, align 1
  store i8 %395, i8* %378, align 1
  %396 = lshr i8 %391, 4
  %397 = zext i8 %396 to i64
  %398 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %397
  %399 = load i8, i8* %398, align 1
  store i8 %399, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %400 = load i8*, i8** %51, align 8
  %401 = call i64 @my_strlcat(i8* %400, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %402 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 2
  %403 = load i8, i8* %402, align 2
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %404 = and i8 %403, 15
  %405 = zext i8 %404 to i64
  %406 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %405
  %407 = load i8, i8* %406, align 1
  store i8 %407, i8* %378, align 1
  %408 = lshr i8 %403, 4
  %409 = zext i8 %408 to i64
  %410 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %409
  %411 = load i8, i8* %410, align 1
  store i8 %411, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %412 = load i8*, i8** %51, align 8
  %413 = call i64 @my_strlcat(i8* %412, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %414 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 3
  %415 = load i8, i8* %414, align 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %416 = and i8 %415, 15
  %417 = zext i8 %416 to i64
  %418 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %417
  %419 = load i8, i8* %418, align 1
  store i8 %419, i8* %378, align 1
  %420 = lshr i8 %415, 4
  %421 = zext i8 %420 to i64
  %422 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %421
  %423 = load i8, i8* %422, align 1
  store i8 %423, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %424 = load i8*, i8** %51, align 8
  %425 = call i64 @my_strlcat(i8* %424, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %426 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 4
  %427 = load i8, i8* %426, align 4
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %428 = and i8 %427, 15
  %429 = zext i8 %428 to i64
  %430 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %429
  %431 = load i8, i8* %430, align 1
  store i8 %431, i8* %378, align 1
  %432 = lshr i8 %427, 4
  %433 = zext i8 %432 to i64
  %434 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %433
  %435 = load i8, i8* %434, align 1
  store i8 %435, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %436 = load i8*, i8** %51, align 8
  %437 = call i64 @my_strlcat(i8* %436, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %438 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 5
  %439 = load i8, i8* %438, align 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %440 = and i8 %439, 15
  %441 = zext i8 %440 to i64
  %442 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %441
  %443 = load i8, i8* %442, align 1
  store i8 %443, i8* %378, align 1
  %444 = lshr i8 %439, 4
  %445 = zext i8 %444 to i64
  %446 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %445
  %447 = load i8, i8* %446, align 1
  store i8 %447, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %448 = load i8*, i8** %51, align 8
  %449 = call i64 @my_strlcat(i8* %448, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %450 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 6
  %451 = load i8, i8* %450, align 2
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %452 = and i8 %451, 15
  %453 = zext i8 %452 to i64
  %454 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %453
  %455 = load i8, i8* %454, align 1
  store i8 %455, i8* %378, align 1
  %456 = lshr i8 %451, 4
  %457 = zext i8 %456 to i64
  %458 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %457
  %459 = load i8, i8* %458, align 1
  store i8 %459, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %460 = load i8*, i8** %51, align 8
  %461 = call i64 @my_strlcat(i8* %460, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %462 = getelementptr inbounds %struct.MDGUID, %struct.MDGUID* %11, i64 0, i32 3, i64 7
  %463 = load i8, i8* %462, align 1
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %377) #7
  %464 = and i8 %463, 15
  %465 = zext i8 %464 to i64
  %466 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %465
  %467 = load i8, i8* %466, align 1
  store i8 %467, i8* %378, align 1
  %468 = lshr i8 %463, 4
  %469 = zext i8 %468 to i64
  %470 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZZN12_GLOBAL__N_115MicrodumpWriter9LogAppendItEEvT_E3HEX, i64 0, i64 %469
  %471 = load i8, i8* %470, align 1
  store i8 %471, i8* %377, align 1
  store i8 0, i8* %379, align 1
  %472 = load i8*, i8** %51, align 8
  %473 = call i64 @my_strlcat(i8* %472, i8* nonnull %377, i64 2048) #7
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %377) #7
  %474 = load i8*, i8** %51, align 8
  %475 = call i64 @my_strlcat(i8* %474, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i64 2048) #7
  %476 = load i8*, i8** %51, align 8
  %477 = call i64 @my_strlcat(i8* %476, i8* nonnull %48, i64 2048) #7
  %478 = load i8*, i8** %51, align 8
  %479 = call i64 @my_strlen(i8* %478) #7
  %480 = call i32 @_ZN6logger5writeEPKcm(i8* %478, i64 %479) #7
  %481 = call i32 @_ZN6logger5writeEPKcm(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #7
  %482 = load i8*, i8** %51, align 8
  store i8 0, i8* %482, align 1
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %49) #7
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  %483 = load i8*, i8** %41, align 8
  %484 = icmp eq i8* %483, null
  br i1 %484, label %487, label %485

485:                                              ; preds = %39
  %486 = ptrtoint i8* %483 to i64
  store i64 %486, i64* %27, align 8
  br label %487

487:                                              ; preds = %39, %485
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhN15google_breakpad16PageStdAllocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS9_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSD_IS7_EES9_S9_(%"class.std::__1::vector.40"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %629

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %268, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !4
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !4
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !7, !noalias !4
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !7, !noalias !4
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !4
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !4
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !7, !noalias !4
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !7, !noalias !4
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !4
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !4
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !7, !noalias !4
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !7, !noalias !4
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !4
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !4
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !7, !noalias !4
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !7, !noalias !4
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !9

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !4
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !4
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !7, !noalias !4
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !7, !noalias !4
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !11

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !13

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %629

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !14
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !14
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !17, !noalias !14
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !17, !noalias !14
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !14
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !14
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !17, !noalias !14
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !17, !noalias !14
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !14
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !14
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !17, !noalias !14
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !17, !noalias !14
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !14
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !14
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !17, !noalias !14
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !17, !noalias !14
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !19

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !14
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !14
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !17, !noalias !14
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !17, !noalias !14
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !20

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #7
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !21

263:                                              ; preds = %250, %253
  %264 = ptrtoint i8* %144 to i64
  %265 = sub i64 %264, %6
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %629, label %267

267:                                              ; preds = %263
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %265, i1 false) #7
  br label %629

268:                                              ; preds = %11
  %269 = bitcast %"class.std::__1::vector.40"* %0 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %17, %270
  %272 = add i64 %271, %9
  %273 = icmp slt i64 %272, 0
  br i1 %273, label %274, label %276

274:                                              ; preds = %268
  %275 = bitcast %"class.std::__1::vector.40"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %275) #9
  unreachable

276:                                              ; preds = %268
  %277 = sub i64 %14, %270
  %278 = icmp ult i64 %277, 4611686018427387903
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = sub i64 %5, %270
  br label %287

281:                                              ; preds = %276
  %282 = shl i64 %277, 1
  %283 = icmp ult i64 %282, %272
  %284 = select i1 %283, i64 %272, i64 %282
  %285 = sub i64 %5, %270
  %286 = icmp eq i64 %284, 0
  br i1 %286, label %300, label %287

287:                                              ; preds = %279, %281
  %288 = phi i64 [ %280, %279 ], [ %285, %281 ]
  %289 = phi i64 [ 9223372036854775807, %279 ], [ %284, %281 ]
  %290 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 2
  %291 = load i64, i64* %290, align 8
  %292 = icmp ult i64 %291, %289
  br i1 %292, label %296, label %293

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %295 = load i8*, i8** %294, align 8
  br label %300

296:                                              ; preds = %287
  %297 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %298 = load %"class.google_breakpad::PageAllocator"*, %"class.google_breakpad::PageAllocator"** %297, align 8
  %299 = tail call i8* @_ZN15google_breakpad13PageAllocator5AllocEm(%"class.google_breakpad::PageAllocator"* %298, i64 %289) #7
  br label %300

300:                                              ; preds = %281, %293, %296
  %301 = phi i64 [ %285, %281 ], [ %288, %293 ], [ %288, %296 ]
  %302 = phi i64 [ 0, %281 ], [ %289, %293 ], [ %289, %296 ]
  %303 = phi i8* [ null, %281 ], [ %295, %293 ], [ %299, %296 ]
  %304 = getelementptr inbounds i8, i8* %303, i64 %301
  %305 = getelementptr inbounds i8, i8* %303, i64 %302
  %306 = getelementptr inbounds i8, i8* %304, i64 %9
  %307 = icmp ult i64 %9, 32
  br i1 %307, label %393, label %308

308:                                              ; preds = %300
  %309 = icmp ult i8* %304, %3
  %310 = icmp ugt i8* %306, %2
  %311 = and i1 %309, %310
  br i1 %311, label %393, label %312

312:                                              ; preds = %308
  %313 = and i64 %9, -32
  %314 = getelementptr i8, i8* %304, i64 %313
  %315 = getelementptr i8, i8* %2, i64 %313
  %316 = add i64 %313, -32
  %317 = lshr exact i64 %316, 5
  %318 = add nuw nsw i64 %317, 1
  %319 = and i64 %318, 3
  %320 = icmp ult i64 %316, 96
  br i1 %320, label %372, label %321

321:                                              ; preds = %312
  %322 = sub nsw i64 %318, %319
  br label %323

323:                                              ; preds = %323, %321
  %324 = phi i64 [ 0, %321 ], [ %369, %323 ]
  %325 = phi i64 [ %322, %321 ], [ %370, %323 ]
  %326 = getelementptr i8, i8* %304, i64 %324
  %327 = getelementptr i8, i8* %2, i64 %324
  %328 = bitcast i8* %327 to <16 x i8>*
  %329 = load <16 x i8>, <16 x i8>* %328, align 1, !alias.scope !22
  %330 = getelementptr i8, i8* %327, i64 16
  %331 = bitcast i8* %330 to <16 x i8>*
  %332 = load <16 x i8>, <16 x i8>* %331, align 1, !alias.scope !22
  %333 = bitcast i8* %326 to <16 x i8>*
  store <16 x i8> %329, <16 x i8>* %333, align 1, !alias.scope !25, !noalias !22
  %334 = getelementptr i8, i8* %326, i64 16
  %335 = bitcast i8* %334 to <16 x i8>*
  store <16 x i8> %332, <16 x i8>* %335, align 1, !alias.scope !25, !noalias !22
  %336 = or i64 %324, 32
  %337 = getelementptr i8, i8* %304, i64 %336
  %338 = getelementptr i8, i8* %2, i64 %336
  %339 = bitcast i8* %338 to <16 x i8>*
  %340 = load <16 x i8>, <16 x i8>* %339, align 1, !alias.scope !22
  %341 = getelementptr i8, i8* %338, i64 16
  %342 = bitcast i8* %341 to <16 x i8>*
  %343 = load <16 x i8>, <16 x i8>* %342, align 1, !alias.scope !22
  %344 = bitcast i8* %337 to <16 x i8>*
  store <16 x i8> %340, <16 x i8>* %344, align 1, !alias.scope !25, !noalias !22
  %345 = getelementptr i8, i8* %337, i64 16
  %346 = bitcast i8* %345 to <16 x i8>*
  store <16 x i8> %343, <16 x i8>* %346, align 1, !alias.scope !25, !noalias !22
  %347 = or i64 %324, 64
  %348 = getelementptr i8, i8* %304, i64 %347
  %349 = getelementptr i8, i8* %2, i64 %347
  %350 = bitcast i8* %349 to <16 x i8>*
  %351 = load <16 x i8>, <16 x i8>* %350, align 1, !alias.scope !22
  %352 = getelementptr i8, i8* %349, i64 16
  %353 = bitcast i8* %352 to <16 x i8>*
  %354 = load <16 x i8>, <16 x i8>* %353, align 1, !alias.scope !22
  %355 = bitcast i8* %348 to <16 x i8>*
  store <16 x i8> %351, <16 x i8>* %355, align 1, !alias.scope !25, !noalias !22
  %356 = getelementptr i8, i8* %348, i64 16
  %357 = bitcast i8* %356 to <16 x i8>*
  store <16 x i8> %354, <16 x i8>* %357, align 1, !alias.scope !25, !noalias !22
  %358 = or i64 %324, 96
  %359 = getelementptr i8, i8* %304, i64 %358
  %360 = getelementptr i8, i8* %2, i64 %358
  %361 = bitcast i8* %360 to <16 x i8>*
  %362 = load <16 x i8>, <16 x i8>* %361, align 1, !alias.scope !22
  %363 = getelementptr i8, i8* %360, i64 16
  %364 = bitcast i8* %363 to <16 x i8>*
  %365 = load <16 x i8>, <16 x i8>* %364, align 1, !alias.scope !22
  %366 = bitcast i8* %359 to <16 x i8>*
  store <16 x i8> %362, <16 x i8>* %366, align 1, !alias.scope !25, !noalias !22
  %367 = getelementptr i8, i8* %359, i64 16
  %368 = bitcast i8* %367 to <16 x i8>*
  store <16 x i8> %365, <16 x i8>* %368, align 1, !alias.scope !25, !noalias !22
  %369 = add i64 %324, 128
  %370 = add i64 %325, -4
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %323, !llvm.loop !27

372:                                              ; preds = %323, %312
  %373 = phi i64 [ 0, %312 ], [ %369, %323 ]
  %374 = icmp eq i64 %319, 0
  br i1 %374, label %391, label %375

375:                                              ; preds = %372, %375
  %376 = phi i64 [ %388, %375 ], [ %373, %372 ]
  %377 = phi i64 [ %389, %375 ], [ %319, %372 ]
  %378 = getelementptr i8, i8* %304, i64 %376
  %379 = getelementptr i8, i8* %2, i64 %376
  %380 = bitcast i8* %379 to <16 x i8>*
  %381 = load <16 x i8>, <16 x i8>* %380, align 1, !alias.scope !22
  %382 = getelementptr i8, i8* %379, i64 16
  %383 = bitcast i8* %382 to <16 x i8>*
  %384 = load <16 x i8>, <16 x i8>* %383, align 1, !alias.scope !22
  %385 = bitcast i8* %378 to <16 x i8>*
  store <16 x i8> %381, <16 x i8>* %385, align 1, !alias.scope !25, !noalias !22
  %386 = getelementptr i8, i8* %378, i64 16
  %387 = bitcast i8* %386 to <16 x i8>*
  store <16 x i8> %384, <16 x i8>* %387, align 1, !alias.scope !25, !noalias !22
  %388 = add i64 %376, 32
  %389 = add i64 %377, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %375, !llvm.loop !28

391:                                              ; preds = %375, %372
  %392 = icmp eq i64 %9, %313
  br i1 %392, label %403, label %393

393:                                              ; preds = %391, %308, %300
  %394 = phi i8* [ %304, %308 ], [ %304, %300 ], [ %314, %391 ]
  %395 = phi i8* [ %2, %308 ], [ %2, %300 ], [ %315, %391 ]
  br label %396

396:                                              ; preds = %393, %396
  %397 = phi i8* [ %400, %396 ], [ %394, %393 ]
  %398 = phi i8* [ %401, %396 ], [ %395, %393 ]
  %399 = load i8, i8* %398, align 1
  store i8 %399, i8* %397, align 1
  %400 = getelementptr inbounds i8, i8* %397, i64 1
  %401 = getelementptr inbounds i8, i8* %398, i64 1
  %402 = icmp eq i8* %306, %400
  br i1 %402, label %403, label %396, !llvm.loop !29

403:                                              ; preds = %396, %391
  %404 = ptrtoint i8* %305 to i64
  %405 = load i8*, i8** %7, align 8
  %406 = icmp eq i8* %405, %1
  br i1 %406, label %516, label %407

407:                                              ; preds = %403
  %408 = ptrtoint i8* %405 to i64
  %409 = ptrtoint i8* %1 to i64
  %410 = sub i64 %409, %408
  %411 = icmp ult i64 %410, 16
  br i1 %411, label %506, label %412

412:                                              ; preds = %407
  %413 = sub i64 %301, %5
  %414 = getelementptr i8, i8* %405, i64 %413
  %415 = ptrtoint i8* %414 to i64
  %416 = getelementptr i8, i8* %303, i64 %415
  %417 = icmp ult i8* %416, %1
  %418 = icmp ult i8* %405, %304
  %419 = and i1 %417, %418
  br i1 %419, label %506, label %420

420:                                              ; preds = %412
  %421 = and i64 %410, -16
  %422 = sub i64 0, %421
  %423 = getelementptr i8, i8* %304, i64 %422
  %424 = sub i64 0, %421
  %425 = getelementptr i8, i8* %1, i64 %424
  %426 = add i64 %421, -16
  %427 = lshr exact i64 %426, 4
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 3
  %430 = icmp ult i64 %426, 48
  br i1 %430, label %483, label %431

431:                                              ; preds = %420
  %432 = sub nsw i64 %428, %429
  %433 = getelementptr i8, i8* %304, i64 -1
  %434 = getelementptr inbounds i8, i8* %433, i64 -8
  %435 = getelementptr inbounds i8, i8* %1, i64 -16
  %436 = getelementptr inbounds i8, i8* %434, i64 -7
  %437 = getelementptr i8, i8* %304, i64 -1
  %438 = getelementptr inbounds i8, i8* %437, i64 -8
  %439 = getelementptr inbounds i8, i8* %1, i64 -16
  %440 = getelementptr inbounds i8, i8* %438, i64 -7
  %441 = getelementptr i8, i8* %304, i64 -1
  %442 = getelementptr inbounds i8, i8* %441, i64 -8
  %443 = getelementptr inbounds i8, i8* %1, i64 -16
  %444 = getelementptr inbounds i8, i8* %442, i64 -7
  %445 = getelementptr i8, i8* %304, i64 -1
  %446 = getelementptr inbounds i8, i8* %445, i64 -8
  %447 = getelementptr inbounds i8, i8* %1, i64 -16
  %448 = getelementptr inbounds i8, i8* %446, i64 -7
  br label %449

449:                                              ; preds = %449, %431
  %450 = phi i64 [ 0, %431 ], [ %480, %449 ]
  %451 = phi i64 [ %432, %431 ], [ %481, %449 ]
  %452 = sub i64 0, %450
  %453 = sub i64 0, %450
  %454 = getelementptr inbounds i8, i8* %435, i64 %453
  %455 = bitcast i8* %454 to <2 x i64>*
  %456 = load <2 x i64>, <2 x i64>* %455, align 1, !alias.scope !30
  %457 = getelementptr inbounds i8, i8* %436, i64 %452
  %458 = bitcast i8* %457 to <2 x i64>*
  store <2 x i64> %456, <2 x i64>* %458, align 1, !alias.scope !33, !noalias !30
  %459 = sub nuw nsw i64 -16, %450
  %460 = sub nuw nsw i64 -16, %450
  %461 = getelementptr inbounds i8, i8* %439, i64 %460
  %462 = bitcast i8* %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 1, !alias.scope !30
  %464 = getelementptr inbounds i8, i8* %440, i64 %459
  %465 = bitcast i8* %464 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %465, align 1, !alias.scope !33, !noalias !30
  %466 = sub nuw nsw i64 -32, %450
  %467 = sub nuw nsw i64 -32, %450
  %468 = getelementptr inbounds i8, i8* %443, i64 %467
  %469 = bitcast i8* %468 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 1, !alias.scope !30
  %471 = getelementptr inbounds i8, i8* %444, i64 %466
  %472 = bitcast i8* %471 to <2 x i64>*
  store <2 x i64> %470, <2 x i64>* %472, align 1, !alias.scope !33, !noalias !30
  %473 = sub nuw nsw i64 -48, %450
  %474 = sub nuw nsw i64 -48, %450
  %475 = getelementptr inbounds i8, i8* %447, i64 %474
  %476 = bitcast i8* %475 to <2 x i64>*
  %477 = load <2 x i64>, <2 x i64>* %476, align 1, !alias.scope !30
  %478 = getelementptr inbounds i8, i8* %448, i64 %473
  %479 = bitcast i8* %478 to <2 x i64>*
  store <2 x i64> %477, <2 x i64>* %479, align 1, !alias.scope !33, !noalias !30
  %480 = add i64 %450, 64
  %481 = add i64 %451, -4
  %482 = icmp eq i64 %481, 0
  br i1 %482, label %483, label %449, !llvm.loop !35

483:                                              ; preds = %449, %420
  %484 = phi i64 [ 0, %420 ], [ %480, %449 ]
  %485 = icmp eq i64 %429, 0
  br i1 %485, label %504, label %486

486:                                              ; preds = %483
  %487 = getelementptr i8, i8* %304, i64 -1
  %488 = getelementptr inbounds i8, i8* %487, i64 -8
  %489 = getelementptr inbounds i8, i8* %1, i64 -16
  %490 = getelementptr inbounds i8, i8* %488, i64 -7
  br label %491

491:                                              ; preds = %491, %486
  %492 = phi i64 [ %484, %486 ], [ %501, %491 ]
  %493 = phi i64 [ %429, %486 ], [ %502, %491 ]
  %494 = sub i64 0, %492
  %495 = sub i64 0, %492
  %496 = getelementptr inbounds i8, i8* %489, i64 %495
  %497 = bitcast i8* %496 to <2 x i64>*
  %498 = load <2 x i64>, <2 x i64>* %497, align 1, !alias.scope !30
  %499 = getelementptr inbounds i8, i8* %490, i64 %494
  %500 = bitcast i8* %499 to <2 x i64>*
  store <2 x i64> %498, <2 x i64>* %500, align 1, !alias.scope !33, !noalias !30
  %501 = add i64 %492, 16
  %502 = add i64 %493, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %491, !llvm.loop !36

504:                                              ; preds = %491, %483
  %505 = icmp eq i64 %410, %421
  br i1 %505, label %516, label %506

506:                                              ; preds = %504, %412, %407
  %507 = phi i8* [ %304, %412 ], [ %304, %407 ], [ %423, %504 ]
  %508 = phi i8* [ %1, %412 ], [ %1, %407 ], [ %425, %504 ]
  br label %509

509:                                              ; preds = %506, %509
  %510 = phi i8* [ %512, %509 ], [ %507, %506 ]
  %511 = phi i8* [ %513, %509 ], [ %508, %506 ]
  %512 = getelementptr inbounds i8, i8* %510, i64 -1
  %513 = getelementptr inbounds i8, i8* %511, i64 -1
  %514 = load i8, i8* %513, align 1
  store i8 %514, i8* %512, align 1
  %515 = icmp eq i8* %513, %405
  br i1 %515, label %516, label %509, !llvm.loop !37

516:                                              ; preds = %509, %504, %403
  %517 = phi i8* [ %304, %403 ], [ %423, %504 ], [ %512, %509 ]
  %518 = load i8*, i8** %15, align 8
  %519 = icmp eq i8* %518, %1
  br i1 %519, label %625, label %520

520:                                              ; preds = %516
  %521 = ptrtoint i8* %518 to i64
  %522 = sub i64 %521, %5
  %523 = icmp ult i64 %522, 32
  br i1 %523, label %615, label %524

524:                                              ; preds = %520
  %525 = add i64 %301, %8
  %526 = sub i64 %525, %5
  %527 = sub i64 %526, %6
  %528 = getelementptr i8, i8* %518, i64 %527
  %529 = ptrtoint i8* %528 to i64
  %530 = getelementptr i8, i8* %303, i64 %529
  %531 = icmp ult i8* %306, %518
  %532 = icmp ugt i8* %530, %1
  %533 = and i1 %531, %532
  br i1 %533, label %615, label %534

534:                                              ; preds = %524
  %535 = and i64 %522, -32
  %536 = getelementptr i8, i8* %306, i64 %535
  %537 = getelementptr i8, i8* %1, i64 %535
  %538 = add i64 %535, -32
  %539 = lshr exact i64 %538, 5
  %540 = add nuw nsw i64 %539, 1
  %541 = and i64 %540, 3
  %542 = icmp ult i64 %538, 96
  br i1 %542, label %594, label %543

543:                                              ; preds = %534
  %544 = sub nsw i64 %540, %541
  br label %545

545:                                              ; preds = %545, %543
  %546 = phi i64 [ 0, %543 ], [ %591, %545 ]
  %547 = phi i64 [ %544, %543 ], [ %592, %545 ]
  %548 = getelementptr i8, i8* %306, i64 %546
  %549 = getelementptr i8, i8* %1, i64 %546
  %550 = bitcast i8* %549 to <16 x i8>*
  %551 = load <16 x i8>, <16 x i8>* %550, align 1, !alias.scope !38
  %552 = getelementptr i8, i8* %549, i64 16
  %553 = bitcast i8* %552 to <16 x i8>*
  %554 = load <16 x i8>, <16 x i8>* %553, align 1, !alias.scope !38
  %555 = bitcast i8* %548 to <16 x i8>*
  store <16 x i8> %551, <16 x i8>* %555, align 1, !alias.scope !41, !noalias !38
  %556 = getelementptr i8, i8* %548, i64 16
  %557 = bitcast i8* %556 to <16 x i8>*
  store <16 x i8> %554, <16 x i8>* %557, align 1, !alias.scope !41, !noalias !38
  %558 = or i64 %546, 32
  %559 = getelementptr i8, i8* %306, i64 %558
  %560 = getelementptr i8, i8* %1, i64 %558
  %561 = bitcast i8* %560 to <16 x i8>*
  %562 = load <16 x i8>, <16 x i8>* %561, align 1, !alias.scope !38
  %563 = getelementptr i8, i8* %560, i64 16
  %564 = bitcast i8* %563 to <16 x i8>*
  %565 = load <16 x i8>, <16 x i8>* %564, align 1, !alias.scope !38
  %566 = bitcast i8* %559 to <16 x i8>*
  store <16 x i8> %562, <16 x i8>* %566, align 1, !alias.scope !41, !noalias !38
  %567 = getelementptr i8, i8* %559, i64 16
  %568 = bitcast i8* %567 to <16 x i8>*
  store <16 x i8> %565, <16 x i8>* %568, align 1, !alias.scope !41, !noalias !38
  %569 = or i64 %546, 64
  %570 = getelementptr i8, i8* %306, i64 %569
  %571 = getelementptr i8, i8* %1, i64 %569
  %572 = bitcast i8* %571 to <16 x i8>*
  %573 = load <16 x i8>, <16 x i8>* %572, align 1, !alias.scope !38
  %574 = getelementptr i8, i8* %571, i64 16
  %575 = bitcast i8* %574 to <16 x i8>*
  %576 = load <16 x i8>, <16 x i8>* %575, align 1, !alias.scope !38
  %577 = bitcast i8* %570 to <16 x i8>*
  store <16 x i8> %573, <16 x i8>* %577, align 1, !alias.scope !41, !noalias !38
  %578 = getelementptr i8, i8* %570, i64 16
  %579 = bitcast i8* %578 to <16 x i8>*
  store <16 x i8> %576, <16 x i8>* %579, align 1, !alias.scope !41, !noalias !38
  %580 = or i64 %546, 96
  %581 = getelementptr i8, i8* %306, i64 %580
  %582 = getelementptr i8, i8* %1, i64 %580
  %583 = bitcast i8* %582 to <16 x i8>*
  %584 = load <16 x i8>, <16 x i8>* %583, align 1, !alias.scope !38
  %585 = getelementptr i8, i8* %582, i64 16
  %586 = bitcast i8* %585 to <16 x i8>*
  %587 = load <16 x i8>, <16 x i8>* %586, align 1, !alias.scope !38
  %588 = bitcast i8* %581 to <16 x i8>*
  store <16 x i8> %584, <16 x i8>* %588, align 1, !alias.scope !41, !noalias !38
  %589 = getelementptr i8, i8* %581, i64 16
  %590 = bitcast i8* %589 to <16 x i8>*
  store <16 x i8> %587, <16 x i8>* %590, align 1, !alias.scope !41, !noalias !38
  %591 = add i64 %546, 128
  %592 = add i64 %547, -4
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %594, label %545, !llvm.loop !43

594:                                              ; preds = %545, %534
  %595 = phi i64 [ 0, %534 ], [ %591, %545 ]
  %596 = icmp eq i64 %541, 0
  br i1 %596, label %613, label %597

597:                                              ; preds = %594, %597
  %598 = phi i64 [ %610, %597 ], [ %595, %594 ]
  %599 = phi i64 [ %611, %597 ], [ %541, %594 ]
  %600 = getelementptr i8, i8* %306, i64 %598
  %601 = getelementptr i8, i8* %1, i64 %598
  %602 = bitcast i8* %601 to <16 x i8>*
  %603 = load <16 x i8>, <16 x i8>* %602, align 1, !alias.scope !38
  %604 = getelementptr i8, i8* %601, i64 16
  %605 = bitcast i8* %604 to <16 x i8>*
  %606 = load <16 x i8>, <16 x i8>* %605, align 1, !alias.scope !38
  %607 = bitcast i8* %600 to <16 x i8>*
  store <16 x i8> %603, <16 x i8>* %607, align 1, !alias.scope !41, !noalias !38
  %608 = getelementptr i8, i8* %600, i64 16
  %609 = bitcast i8* %608 to <16 x i8>*
  store <16 x i8> %606, <16 x i8>* %609, align 1, !alias.scope !41, !noalias !38
  %610 = add i64 %598, 32
  %611 = add i64 %599, -1
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %597, !llvm.loop !44

613:                                              ; preds = %597, %594
  %614 = icmp eq i64 %522, %535
  br i1 %614, label %625, label %615

615:                                              ; preds = %613, %524, %520
  %616 = phi i8* [ %306, %524 ], [ %306, %520 ], [ %536, %613 ]
  %617 = phi i8* [ %1, %524 ], [ %1, %520 ], [ %537, %613 ]
  br label %618

618:                                              ; preds = %615, %618
  %619 = phi i8* [ %623, %618 ], [ %616, %615 ]
  %620 = phi i8* [ %622, %618 ], [ %617, %615 ]
  %621 = load i8, i8* %620, align 1
  store i8 %621, i8* %619, align 1
  %622 = getelementptr inbounds i8, i8* %620, i64 1
  %623 = getelementptr inbounds i8, i8* %619, i64 1
  %624 = icmp eq i8* %622, %518
  br i1 %624, label %625, label %618, !llvm.loop !45

625:                                              ; preds = %618, %613, %516
  %626 = phi i8* [ %306, %516 ], [ %536, %613 ], [ %623, %618 ]
  %627 = ptrtoint i8* %517 to i64
  %628 = ptrtoint i8* %626 to i64
  store i64 %627, i64* %269, align 8
  store i64 %628, i64* %20, align 8
  store i64 %404, i64* %13, align 8
  br label %629

629:                                              ; preds = %625, %136, %263, %267, %4
  %630 = phi i8* [ %1, %4 ], [ %1, %267 ], [ %1, %263 ], [ %1, %136 ], [ %304, %625 ]
  ret i8* %630
}

declare zeroext i1 @_ZN15google_breakpad11LinuxDumper27ElfFileIdentifierForMappingERKNS_11MappingInfoEbjRNS_15wasteful_vectorIhEE(%"class.google_breakpad::LinuxDumper"*, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i1 zeroext, i32, %"class.google_breakpad::wasteful_vector.39"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN15google_breakpad11LinuxDumper30GetMappingEffectiveNameAndPathERKNS_11MappingInfoEPcmS4_m(%"class.google_breakpad::LinuxDumper"*, %"struct.google_breakpad::MappingInfo"* dereferenceable(296), i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2143760876}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !10}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !10}
!36 = distinct !{!36, !12}
!37 = distinct !{!37, !10}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !10}
!44 = distinct !{!44, !12}
!45 = distinct !{!45, !10}
