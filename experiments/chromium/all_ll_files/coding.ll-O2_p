; ModuleID = '../../third_party/leveldatabase/src/util/coding.cc'
source_filename = "../../third_party/leveldatabase/src/util/coding.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.leveldb::Slice" = type { i8*, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to [4 x i8]*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 1
  %7 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 2
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 3
  %9 = trunc i32 %1 to i8
  store i8 %9, i8* %5, align 4
  %10 = lshr i32 %1, 8
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* %6, align 1
  %12 = lshr i32 %1, 16
  %13 = trunc i32 %12 to i8
  store i8 %13, i8* %7, align 2
  %14 = lshr i32 %1, 24
  %15 = trunc i32 %14 to i8
  store i8 %15, i8* %8, align 1
  %16 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %5, i64 4) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb10PutFixed64EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to [8 x i8]*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 1
  %7 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 2
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 3
  %9 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 4
  %10 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 5
  %11 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 6
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 7
  %13 = trunc i64 %1 to i8
  store i8 %13, i8* %5, align 8
  %14 = lshr i64 %1, 8
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %6, align 1
  %16 = lshr i64 %1, 16
  %17 = trunc i64 %16 to i8
  store i8 %17, i8* %7, align 2
  %18 = lshr i64 %1, 24
  %19 = trunc i64 %18 to i8
  store i8 %19, i8* %8, align 1
  %20 = lshr i64 %1, 32
  %21 = trunc i64 %20 to i8
  store i8 %21, i8* %9, align 4
  %22 = lshr i64 %1, 40
  %23 = trunc i64 %22 to i8
  store i8 %23, i8* %10, align 1
  %24 = lshr i64 %1, 48
  %25 = trunc i64 %24 to i8
  store i8 %25, i8* %11, align 2
  %26 = lshr i64 %1, 56
  %27 = trunc i64 %26 to i8
  store i8 %27, i8* %12, align 1
  %28 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %5, i64 8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN7leveldb14EncodeVarint32EPcj(i8*, i32) local_unnamed_addr #3 {
  %3 = icmp ult i32 %1, 128
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %5, i8* %0, align 1
  br label %52

7:                                                ; preds = %2
  %8 = icmp ult i32 %1, 16384
  br i1 %8, label %9, label %16

9:                                                ; preds = %7
  %10 = trunc i32 %1 to i8
  %11 = or i8 %10, -128
  %12 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %11, i8* %0, align 1
  %13 = lshr i32 %1, 7
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %14, i8* %12, align 1
  br label %52

16:                                               ; preds = %7
  %17 = icmp ult i32 %1, 2097152
  br i1 %17, label %18, label %29

18:                                               ; preds = %16
  %19 = trunc i32 %1 to i8
  %20 = or i8 %19, -128
  %21 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %20, i8* %0, align 1
  %22 = lshr i32 %1, 7
  %23 = trunc i32 %22 to i8
  %24 = or i8 %23, -128
  %25 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %24, i8* %21, align 1
  %26 = lshr i32 %1, 14
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds i8, i8* %0, i64 3
  store i8 %27, i8* %25, align 1
  br label %52

29:                                               ; preds = %16
  %30 = icmp ult i32 %1, 268435456
  %31 = trunc i32 %1 to i8
  %32 = or i8 %31, -128
  %33 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 %32, i8* %0, align 1
  %34 = lshr i32 %1, 7
  %35 = trunc i32 %34 to i8
  %36 = or i8 %35, -128
  %37 = getelementptr inbounds i8, i8* %0, i64 2
  store i8 %36, i8* %33, align 1
  %38 = lshr i32 %1, 14
  %39 = trunc i32 %38 to i8
  %40 = or i8 %39, -128
  %41 = getelementptr inbounds i8, i8* %0, i64 3
  store i8 %40, i8* %37, align 1
  %42 = lshr i32 %1, 21
  %43 = trunc i32 %42 to i8
  br i1 %30, label %44, label %46

44:                                               ; preds = %29
  %45 = getelementptr inbounds i8, i8* %0, i64 4
  store i8 %43, i8* %41, align 1
  br label %52

46:                                               ; preds = %29
  %47 = or i8 %43, -128
  %48 = getelementptr inbounds i8, i8* %0, i64 4
  store i8 %47, i8* %41, align 1
  %49 = lshr i32 %1, 28
  %50 = trunc i32 %49 to i8
  %51 = getelementptr inbounds i8, i8* %0, i64 5
  store i8 %50, i8* %48, align 1
  br label %52

52:                                               ; preds = %9, %44, %46, %18, %4
  %53 = phi i8* [ %6, %4 ], [ %15, %9 ], [ %28, %18 ], [ %45, %44 ], [ %51, %46 ]
  ret i8* %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"*, i32) local_unnamed_addr #0 {
  %3 = alloca [5 x i8], align 1
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %4) #6
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 2
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 3
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4
  %9 = icmp ult i32 %1, 128
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 5, i1 false)
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = trunc i32 %1 to i8
  store i8 %11, i8* %4, align 1
  br label %47

12:                                               ; preds = %2
  %13 = icmp ult i32 %1, 16384
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = trunc i32 %1 to i8
  %16 = or i8 %15, -128
  store i8 %16, i8* %4, align 1
  %17 = lshr i32 %1, 7
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %5, align 1
  br label %47

19:                                               ; preds = %12
  %20 = icmp ult i32 %1, 2097152
  br i1 %20, label %21, label %29

21:                                               ; preds = %19
  %22 = trunc i32 %1 to i8
  %23 = or i8 %22, -128
  store i8 %23, i8* %4, align 1
  %24 = lshr i32 %1, 7
  %25 = trunc i32 %24 to i8
  %26 = or i8 %25, -128
  store i8 %26, i8* %5, align 1
  %27 = lshr i32 %1, 14
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %6, align 1
  br label %47

29:                                               ; preds = %19
  %30 = icmp ult i32 %1, 268435456
  %31 = trunc i32 %1 to i8
  %32 = or i8 %31, -128
  store i8 %32, i8* %4, align 1
  %33 = lshr i32 %1, 7
  %34 = trunc i32 %33 to i8
  %35 = or i8 %34, -128
  store i8 %35, i8* %5, align 1
  %36 = lshr i32 %1, 14
  %37 = trunc i32 %36 to i8
  %38 = or i8 %37, -128
  store i8 %38, i8* %6, align 1
  %39 = lshr i32 %1, 21
  %40 = trunc i32 %39 to i8
  br i1 %30, label %41, label %42

41:                                               ; preds = %29
  store i8 %40, i8* %7, align 1
  br label %47

42:                                               ; preds = %29
  %43 = or i8 %40, -128
  store i8 %43, i8* %7, align 1
  %44 = lshr i32 %1, 28
  %45 = trunc i32 %44 to i8
  %46 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 5
  store i8 %45, i8* %8, align 1
  br label %47

47:                                               ; preds = %10, %14, %21, %41, %42
  %48 = phi i8* [ %5, %10 ], [ %6, %14 ], [ %7, %21 ], [ %8, %41 ], [ %46, %42 ]
  %49 = ptrtoint i8* %48 to i64
  %50 = ptrtoint [5 x i8]* %3 to i64
  %51 = sub i64 %49, %50
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %4, i64 %51) #6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i8* @_ZN7leveldb14EncodeVarint64EPcm(i8*, i64) local_unnamed_addr #3 {
  %3 = icmp ugt i64 %1, 127
  %4 = trunc i64 %1 to i8
  br i1 %3, label %5, label %16

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %13, %5 ], [ %4, %2 ]
  %7 = phi i8* [ %10, %5 ], [ %0, %2 ]
  %8 = phi i64 [ %11, %5 ], [ %1, %2 ]
  %9 = or i8 %6, -128
  %10 = getelementptr inbounds i8, i8* %7, i64 1
  store i8 %9, i8* %7, align 1
  %11 = lshr i64 %8, 7
  %12 = icmp ugt i64 %8, 16383
  %13 = trunc i64 %11 to i8
  br i1 %12, label %5, label %14

14:                                               ; preds = %5
  %15 = trunc i64 %11 to i8
  br label %16

16:                                               ; preds = %14, %2
  %17 = phi i8* [ %0, %2 ], [ %10, %14 ]
  %18 = phi i8 [ %4, %2 ], [ %15, %14 ]
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %18, i8* %17, align 1
  ret i8* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb11PutVarint64EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 {
  %3 = alloca [10 x i8], align 1
  %4 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %4) #6
  %5 = icmp ugt i64 %1, 127
  %6 = trunc i64 %1 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 10, i1 false)
  br i1 %5, label %7, label %18

7:                                                ; preds = %2, %7
  %8 = phi i8 [ %15, %7 ], [ %6, %2 ]
  %9 = phi i8* [ %12, %7 ], [ %4, %2 ]
  %10 = phi i64 [ %13, %7 ], [ %1, %2 ]
  %11 = or i8 %8, -128
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %11, i8* %9, align 1
  %13 = lshr i64 %10, 7
  %14 = icmp ugt i64 %10, 16383
  %15 = trunc i64 %13 to i8
  br i1 %14, label %7, label %16

16:                                               ; preds = %7
  %17 = trunc i64 %13 to i8
  br label %18

18:                                               ; preds = %16, %2
  %19 = phi i8* [ %4, %2 ], [ %12, %16 ]
  %20 = phi i8 [ %6, %2 ], [ %17, %16 ]
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %20, i8* %19, align 1
  %22 = ptrtoint i8* %21 to i64
  %23 = ptrtoint [10 x i8]* %3 to i64
  %24 = sub i64 %22, %23
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %4, i64 %24) #6
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb22PutLengthPrefixedSliceEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_5SliceE(%"class.std::__1::basic_string"*, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca [5 x i8], align 1
  %4 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %7) #6
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 2
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 3
  %11 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 4
  %12 = icmp ult i32 %6, 128
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 5, i1 false) #6
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = trunc i64 %5 to i8
  store i8 %14, i8* %7, align 1
  br label %50

15:                                               ; preds = %2
  %16 = icmp ult i32 %6, 16384
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = trunc i64 %5 to i8
  %19 = or i8 %18, -128
  store i8 %19, i8* %7, align 1
  %20 = lshr i32 %6, 7
  %21 = trunc i32 %20 to i8
  store i8 %21, i8* %8, align 1
  br label %50

22:                                               ; preds = %15
  %23 = icmp ult i32 %6, 2097152
  br i1 %23, label %24, label %32

24:                                               ; preds = %22
  %25 = trunc i64 %5 to i8
  %26 = or i8 %25, -128
  store i8 %26, i8* %7, align 1
  %27 = lshr i32 %6, 7
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, -128
  store i8 %29, i8* %8, align 1
  %30 = lshr i32 %6, 14
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %9, align 1
  br label %50

32:                                               ; preds = %22
  %33 = icmp ult i32 %6, 268435456
  %34 = trunc i64 %5 to i8
  %35 = or i8 %34, -128
  store i8 %35, i8* %7, align 1
  %36 = lshr i32 %6, 7
  %37 = trunc i32 %36 to i8
  %38 = or i8 %37, -128
  store i8 %38, i8* %8, align 1
  %39 = lshr i32 %6, 14
  %40 = trunc i32 %39 to i8
  %41 = or i8 %40, -128
  store i8 %41, i8* %9, align 1
  %42 = lshr i32 %6, 21
  %43 = trunc i32 %42 to i8
  br i1 %33, label %44, label %45

44:                                               ; preds = %32
  store i8 %43, i8* %10, align 1
  br label %50

45:                                               ; preds = %32
  %46 = or i8 %43, -128
  store i8 %46, i8* %10, align 1
  %47 = lshr i32 %6, 28
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 5
  store i8 %48, i8* %11, align 1
  br label %50

50:                                               ; preds = %13, %17, %24, %44, %45
  %51 = phi i8* [ %8, %13 ], [ %9, %17 ], [ %10, %24 ], [ %11, %44 ], [ %49, %45 ]
  %52 = ptrtoint i8* %51 to i64
  %53 = ptrtoint [5 x i8]* %3 to i64
  %54 = sub i64 %52, %53
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %7, i64 %54) #6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %7) #6
  %56 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i64, i64* %4, align 8
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %57, i64 %58) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7leveldb12VarintLengthEm(i64) local_unnamed_addr #4 {
  %2 = icmp ugt i64 %0, 127
  br i1 %2, label %3, label %9

3:                                                ; preds = %1, %3
  %4 = phi i32 [ %7, %3 ], [ 1, %1 ]
  %5 = phi i64 [ %6, %3 ], [ %0, %1 ]
  %6 = lshr i64 %5, 7
  %7 = add nuw nsw i32 %4, 1
  %8 = icmp ugt i64 %5, 16383
  br i1 %8, label %3, label %9

9:                                                ; preds = %3, %1
  %10 = phi i32 [ 1, %1 ], [ %7, %3 ]
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7leveldb22GetVarint32PtrFallbackEPKcS1_Pj(i8* readonly, i8* readnone, i32* nocapture) local_unnamed_addr #5 {
  %4 = icmp ult i8* %0, %1
  br i1 %4, label %5, label %21

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = icmp slt i8 %6, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = and i8 %6, 127
  %11 = zext i8 %10 to i32
  %12 = icmp ult i8* %7, %1
  br i1 %12, label %23, label %21

13:                                               ; preds = %49, %43, %33, %23, %5
  %14 = phi i32 [ 0, %5 ], [ 7, %23 ], [ 14, %33 ], [ 21, %43 ], [ 28, %49 ]
  %15 = phi i32 [ 0, %5 ], [ %11, %23 ], [ %31, %33 ], [ %41, %43 ], [ %53, %49 ]
  %16 = phi i8 [ %6, %5 ], [ %24, %23 ], [ %34, %33 ], [ %44, %43 ], [ %54, %49 ]
  %17 = phi i8* [ %7, %5 ], [ %25, %23 ], [ %35, %33 ], [ %45, %43 ], [ %55, %49 ]
  %18 = zext i8 %16 to i32
  %19 = shl i32 %18, %14
  %20 = or i32 %19, %15
  store i32 %20, i32* %2, align 4
  br label %21

21:                                               ; preds = %49, %9, %27, %37, %47, %3, %13
  %22 = phi i8* [ %17, %13 ], [ null, %3 ], [ null, %47 ], [ null, %37 ], [ null, %27 ], [ null, %9 ], [ null, %49 ]
  ret i8* %22

23:                                               ; preds = %9
  %24 = load i8, i8* %7, align 1
  %25 = getelementptr inbounds i8, i8* %0, i64 2
  %26 = icmp slt i8 %24, 0
  br i1 %26, label %27, label %13

27:                                               ; preds = %23
  %28 = and i8 %24, 127
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 7
  %31 = or i32 %30, %11
  %32 = icmp ult i8* %25, %1
  br i1 %32, label %33, label %21

33:                                               ; preds = %27
  %34 = load i8, i8* %25, align 1
  %35 = getelementptr inbounds i8, i8* %0, i64 3
  %36 = icmp slt i8 %34, 0
  br i1 %36, label %37, label %13

37:                                               ; preds = %33
  %38 = and i8 %34, 127
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 14
  %41 = or i32 %40, %31
  %42 = icmp ult i8* %35, %1
  br i1 %42, label %43, label %21

43:                                               ; preds = %37
  %44 = load i8, i8* %35, align 1
  %45 = getelementptr inbounds i8, i8* %0, i64 4
  %46 = icmp slt i8 %44, 0
  br i1 %46, label %47, label %13

47:                                               ; preds = %43
  %48 = icmp ult i8* %45, %1
  br i1 %48, label %49, label %21

49:                                               ; preds = %47
  %50 = and i8 %44, 127
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 21
  %53 = or i32 %52, %41
  %54 = load i8, i8* %45, align 1
  %55 = getelementptr inbounds i8, i8* %0, i64 5
  %56 = icmp slt i8 %54, 0
  br i1 %56, label %21, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7leveldb11GetVarint32EPNS_5SliceEPj(%"class.leveldb::Slice"* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = icmp sgt i64 %6, 0
  br i1 %8, label %9, label %39

9:                                                ; preds = %2
  %10 = load i8, i8* %4, align 1
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %4, i64 1
  %14 = icmp sgt i64 %6, 1
  br i1 %14, label %18, label %39

15:                                               ; preds = %9
  %16 = zext i8 %10 to i32
  store i32 %16, i32* %1, align 4
  %17 = getelementptr inbounds i8, i8* %4, i64 1
  br label %32

18:                                               ; preds = %12
  %19 = and i8 %10, 127
  %20 = zext i8 %19 to i32
  %21 = load i8, i8* %13, align 1
  %22 = getelementptr inbounds i8, i8* %4, i64 2
  %23 = icmp slt i8 %21, 0
  br i1 %23, label %41, label %24

24:                                               ; preds = %63, %53, %43, %18
  %25 = phi i32 [ %20, %18 ], [ %47, %43 ], [ %57, %53 ], [ %67, %63 ]
  %26 = phi i8 [ %21, %18 ], [ %48, %43 ], [ %58, %53 ], [ %68, %63 ]
  %27 = phi i8* [ %22, %18 ], [ %49, %43 ], [ %59, %53 ], [ %69, %63 ]
  %28 = phi i32 [ 7, %18 ], [ 14, %43 ], [ 21, %53 ], [ 28, %63 ]
  %29 = zext i8 %26 to i32
  %30 = shl i32 %29, %28
  %31 = or i32 %30, %25
  store i32 %31, i32* %1, align 4
  br label %32

32:                                               ; preds = %15, %24
  %33 = phi i8* [ %17, %15 ], [ %27, %24 ]
  %34 = icmp eq i8* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %32
  %36 = ptrtoint i8* %7 to i64
  %37 = ptrtoint i8* %33 to i64
  %38 = sub i64 %36, %37
  store i8* %33, i8** %3, align 8
  store i64 %38, i64* %5, align 8
  br label %39

39:                                               ; preds = %63, %12, %41, %51, %61, %2, %32, %35
  %40 = phi i1 [ true, %35 ], [ false, %32 ], [ false, %2 ], [ false, %61 ], [ false, %51 ], [ false, %41 ], [ false, %12 ], [ false, %63 ]
  ret i1 %40

41:                                               ; preds = %18
  %42 = icmp sgt i64 %6, 2
  br i1 %42, label %43, label %39

43:                                               ; preds = %41
  %44 = and i8 %21, 127
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 7
  %47 = or i32 %46, %20
  %48 = load i8, i8* %22, align 1
  %49 = getelementptr inbounds i8, i8* %4, i64 3
  %50 = icmp slt i8 %48, 0
  br i1 %50, label %51, label %24

51:                                               ; preds = %43
  %52 = icmp sgt i64 %6, 3
  br i1 %52, label %53, label %39

53:                                               ; preds = %51
  %54 = and i8 %48, 127
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 14
  %57 = or i32 %56, %47
  %58 = load i8, i8* %49, align 1
  %59 = getelementptr inbounds i8, i8* %4, i64 4
  %60 = icmp slt i8 %58, 0
  br i1 %60, label %61, label %24

61:                                               ; preds = %53
  %62 = icmp sgt i64 %6, 4
  br i1 %62, label %63, label %39

63:                                               ; preds = %61
  %64 = and i8 %58, 127
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 21
  %67 = or i32 %66, %57
  %68 = load i8, i8* %59, align 1
  %69 = getelementptr inbounds i8, i8* %4, i64 5
  %70 = icmp slt i8 %68, 0
  br i1 %70, label %39, label %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7leveldb14GetVarint64PtrEPKcS1_Pm(i8* readonly, i8* readnone, i64* nocapture) local_unnamed_addr #5 {
  %4 = icmp ult i8* %0, %1
  br i1 %4, label %5, label %26

5:                                                ; preds = %3, %12
  %6 = phi i64 [ %17, %12 ], [ 0, %3 ]
  %7 = phi i64 [ %16, %12 ], [ 0, %3 ]
  %8 = phi i8* [ %10, %12 ], [ %0, %3 ]
  %9 = load i8, i8* %8, align 1
  %10 = getelementptr inbounds i8, i8* %8, i64 1
  %11 = icmp slt i8 %9, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %5
  %13 = and i8 %9, 127
  %14 = zext i8 %13 to i64
  %15 = shl i64 %14, %6
  %16 = or i64 %15, %7
  %17 = add nuw nsw i64 %6, 7
  %18 = icmp ult i64 %17, 64
  %19 = icmp ult i8* %10, %1
  %20 = and i1 %19, %18
  br i1 %20, label %5, label %26

21:                                               ; preds = %5
  %22 = zext i8 %9 to i64
  %23 = and i64 %6, 4294967295
  %24 = shl i64 %22, %23
  %25 = or i64 %24, %7
  store i64 %25, i64* %2, align 8
  br label %26

26:                                               ; preds = %12, %3, %21
  %27 = phi i8* [ %10, %21 ], [ null, %3 ], [ null, %12 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7leveldb11GetVarint64EPNS_5SliceEPm(%"class.leveldb::Slice"* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = icmp sgt i64 %6, 0
  br i1 %8, label %9, label %35

9:                                                ; preds = %2, %16
  %10 = phi i64 [ %21, %16 ], [ 0, %2 ]
  %11 = phi i64 [ %20, %16 ], [ 0, %2 ]
  %12 = phi i8* [ %14, %16 ], [ %4, %2 ]
  %13 = load i8, i8* %12, align 1
  %14 = getelementptr inbounds i8, i8* %12, i64 1
  %15 = icmp slt i8 %13, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %9
  %17 = and i8 %13, 127
  %18 = zext i8 %17 to i64
  %19 = shl i64 %18, %10
  %20 = or i64 %19, %11
  %21 = add nuw nsw i64 %10, 7
  %22 = icmp ult i64 %21, 64
  %23 = icmp ult i8* %14, %7
  %24 = and i1 %22, %23
  br i1 %24, label %9, label %35

25:                                               ; preds = %9
  %26 = zext i8 %13 to i64
  %27 = and i64 %10, 4294967295
  %28 = shl i64 %26, %27
  %29 = or i64 %28, %11
  store i64 %29, i64* %1, align 8
  %30 = icmp eq i8* %14, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %25
  %32 = ptrtoint i8* %7 to i64
  %33 = ptrtoint i8* %14 to i64
  %34 = sub i64 %32, %33
  store i8* %14, i8** %3, align 8
  store i64 %34, i64* %5, align 8
  br label %35

35:                                               ; preds = %16, %2, %25, %31
  %36 = phi i1 [ true, %31 ], [ false, %25 ], [ false, %2 ], [ false, %16 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7leveldb22GetLengthPrefixedSliceEPKcS1_PNS_5SliceE(i8*, i8* readnone, %"class.leveldb::Slice"* nocapture) local_unnamed_addr #0 {
  %4 = icmp ult i8* %0, %1
  br i1 %4, label %5, label %39

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = icmp sgt i8 %6, -1
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %0, i64 1
  %10 = icmp ult i8* %9, %1
  br i1 %10, label %14, label %39

11:                                               ; preds = %5
  %12 = zext i8 %6 to i32
  %13 = getelementptr inbounds i8, i8* %0, i64 1
  br label %28

14:                                               ; preds = %8
  %15 = and i8 %6, 127
  %16 = zext i8 %15 to i32
  %17 = load i8, i8* %9, align 1
  %18 = getelementptr inbounds i8, i8* %0, i64 2
  %19 = icmp slt i8 %17, 0
  br i1 %19, label %41, label %20

20:                                               ; preds = %63, %53, %43, %14
  %21 = phi i32 [ %16, %14 ], [ %47, %43 ], [ %57, %53 ], [ %67, %63 ]
  %22 = phi i8 [ %17, %14 ], [ %48, %43 ], [ %58, %53 ], [ %68, %63 ]
  %23 = phi i8* [ %18, %14 ], [ %49, %43 ], [ %59, %53 ], [ %69, %63 ]
  %24 = phi i32 [ 7, %14 ], [ 14, %43 ], [ 21, %53 ], [ 28, %63 ]
  %25 = zext i8 %22 to i32
  %26 = shl i32 %25, %24
  %27 = or i32 %26, %21
  br label %28

28:                                               ; preds = %11, %20
  %29 = phi i32 [ %12, %11 ], [ %27, %20 ]
  %30 = phi i8* [ %13, %11 ], [ %23, %20 ]
  %31 = icmp eq i8* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = zext i32 %29 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  %35 = icmp ugt i8* %34, %1
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 0
  store i8* %30, i8** %37, align 8
  %38 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 1
  store i64 %33, i64* %38, align 8
  br label %39

39:                                               ; preds = %63, %8, %41, %51, %61, %3, %32, %28, %36
  %40 = phi i8* [ %34, %36 ], [ null, %28 ], [ null, %32 ], [ null, %3 ], [ null, %61 ], [ null, %51 ], [ null, %41 ], [ null, %8 ], [ null, %63 ]
  ret i8* %40

41:                                               ; preds = %14
  %42 = icmp ult i8* %18, %1
  br i1 %42, label %43, label %39

43:                                               ; preds = %41
  %44 = and i8 %17, 127
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 7
  %47 = or i32 %46, %16
  %48 = load i8, i8* %18, align 1
  %49 = getelementptr inbounds i8, i8* %0, i64 3
  %50 = icmp slt i8 %48, 0
  br i1 %50, label %51, label %20

51:                                               ; preds = %43
  %52 = icmp ult i8* %49, %1
  br i1 %52, label %53, label %39

53:                                               ; preds = %51
  %54 = and i8 %48, 127
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 14
  %57 = or i32 %56, %47
  %58 = load i8, i8* %49, align 1
  %59 = getelementptr inbounds i8, i8* %0, i64 4
  %60 = icmp slt i8 %58, 0
  br i1 %60, label %61, label %20

61:                                               ; preds = %53
  %62 = icmp ult i8* %59, %1
  br i1 %62, label %63, label %39

63:                                               ; preds = %61
  %64 = and i8 %58, 127
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 21
  %67 = or i32 %66, %57
  %68 = load i8, i8* %59, align 1
  %69 = getelementptr inbounds i8, i8* %0, i64 5
  %70 = icmp slt i8 %68, 0
  br i1 %70, label %39, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7leveldb22GetLengthPrefixedSliceEPNS_5SliceES1_(%"class.leveldb::Slice"* nocapture, %"class.leveldb::Slice"* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = icmp sgt i64 %6, 0
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = load i8, i8* %4, align 1
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds i8, i8* %4, i64 1
  %14 = icmp sgt i64 %6, 1
  br i1 %14, label %18, label %49

15:                                               ; preds = %9
  %16 = zext i8 %10 to i32
  %17 = getelementptr inbounds i8, i8* %4, i64 1
  br label %32

18:                                               ; preds = %12
  %19 = and i8 %10, 127
  %20 = zext i8 %19 to i32
  %21 = load i8, i8* %13, align 1
  %22 = getelementptr inbounds i8, i8* %4, i64 2
  %23 = icmp slt i8 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %73, %63, %53, %18
  %25 = phi i32 [ %20, %18 ], [ %57, %53 ], [ %67, %63 ], [ %77, %73 ]
  %26 = phi i8 [ %21, %18 ], [ %58, %53 ], [ %68, %63 ], [ %78, %73 ]
  %27 = phi i8* [ %22, %18 ], [ %59, %53 ], [ %69, %63 ], [ %79, %73 ]
  %28 = phi i32 [ 7, %18 ], [ 14, %53 ], [ 21, %63 ], [ 28, %73 ]
  %29 = zext i8 %26 to i32
  %30 = shl i32 %29, %28
  %31 = or i32 %30, %25
  br label %32

32:                                               ; preds = %24, %15
  %33 = phi i32 [ %16, %15 ], [ %31, %24 ]
  %34 = phi i8* [ %17, %15 ], [ %27, %24 ]
  %35 = icmp eq i8* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = ptrtoint i8* %7 to i64
  %38 = ptrtoint i8* %34 to i64
  %39 = sub i64 %37, %38
  store i8* %34, i8** %3, align 8
  store i64 %39, i64* %5, align 8
  %40 = zext i32 %33 to i64
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.leveldb::Slice"* %1 to i64*
  store i64 %38, i64* %43, align 8
  %44 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  store i64 %40, i64* %44, align 8
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %40
  store i8* %46, i8** %3, align 8
  %47 = load i64, i64* %5, align 8
  %48 = sub i64 %47, %40
  store i64 %48, i64* %5, align 8
  br label %49

49:                                               ; preds = %73, %12, %51, %61, %71, %2, %32, %36, %42
  %50 = phi i1 [ true, %42 ], [ false, %36 ], [ false, %32 ], [ false, %2 ], [ false, %71 ], [ false, %61 ], [ false, %51 ], [ false, %12 ], [ false, %73 ]
  ret i1 %50

51:                                               ; preds = %18
  %52 = icmp sgt i64 %6, 2
  br i1 %52, label %53, label %49

53:                                               ; preds = %51
  %54 = and i8 %21, 127
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 7
  %57 = or i32 %56, %20
  %58 = load i8, i8* %22, align 1
  %59 = getelementptr inbounds i8, i8* %4, i64 3
  %60 = icmp slt i8 %58, 0
  br i1 %60, label %61, label %24

61:                                               ; preds = %53
  %62 = icmp sgt i64 %6, 3
  br i1 %62, label %63, label %49

63:                                               ; preds = %61
  %64 = and i8 %58, 127
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 14
  %67 = or i32 %66, %57
  %68 = load i8, i8* %59, align 1
  %69 = getelementptr inbounds i8, i8* %4, i64 4
  %70 = icmp slt i8 %68, 0
  br i1 %70, label %71, label %24

71:                                               ; preds = %63
  %72 = icmp sgt i64 %6, 4
  br i1 %72, label %73, label %49

73:                                               ; preds = %71
  %74 = and i8 %68, 127
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %75, 21
  %77 = or i32 %76, %67
  %78 = load i8, i8* %69, align 1
  %79 = getelementptr inbounds i8, i8* %4, i64 5
  %80 = icmp slt i8 %78, 0
  br i1 %80, label %49, label %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
