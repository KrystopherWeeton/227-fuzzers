; ModuleID = '../../extensions/browser/api/socket/mojo_data_pump.cc'
source_filename = "../../extensions/browser/api/socket/mojo_data_pump.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::MojoDataPump" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::SimpleWatcher", %"class.mojo::ScopedHandleBase.12", %"class.mojo::SimpleWatcher", %"class.base::OnceCallback", %"class.base::OnceCallback.13", %class.scoped_refptr.14, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ScopedHandleBase.12" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr, i8, %"class.mojo::ScopedHandleBase.1", %class.scoped_refptr.2, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.6", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.13" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.14 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.15", i8* }
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%struct.MojoReadDataOptions = type { i32, i32 }
%struct.MojoWriteDataOptions = type { i32, i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEFvjS8_EE3RunEPNS0_13BindStateBaseEjS8_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [13 x i8] c"MojoDataPump\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"../../extensions/browser/api/socket/mojo_data_pump.cc\00", align 1

@_ZN10extensions12MojoDataPumpC1EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEE = hidden unnamed_addr alias void (%"class.extensions::MojoDataPump"*, %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase.12"*), void (%"class.extensions::MojoDataPump"*, %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase.12"*)* @_ZN10extensions12MojoDataPumpC2EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEE
@_ZN10extensions12MojoDataPumpD1Ev = hidden unnamed_addr alias void (%"class.extensions::MojoDataPump"*), void (%"class.extensions::MojoDataPump"*)* @_ZN10extensions12MojoDataPumpD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12MojoDataPumpC2EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEE(%"class.extensions::MojoDataPump"*, %"class.mojo::ScopedHandleBase"* nocapture, %"class.mojo::ScopedHandleBase.12"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.mojo::Handle", align 4
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = alloca %"class.mojo::Handle", align 4
  %9 = alloca %"class.base::RepeatingCallback", align 8
  %10 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4, !noalias !2
  store i32 %12, i32* %10, align 4, !alias.scope !2
  store i32 0, i32* %11, align 4, !noalias !2
  %13 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 1
  %14 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 20) #6
  %15 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #6
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %16, align 8
  %18 = icmp eq %"class.base::SequencedTaskRunner"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %17, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %3, %19
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %13, %"class.base::Location"* nonnull dereferenceable(32) %4, i32 1, %"class.base::SequencedTaskRunner"* %17, i8* null) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6
  %23 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.mojo::ScopedHandleBase.12", %"class.mojo::ScopedHandleBase.12"* %2, i64 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !5
  store i32 %25, i32* %23, align 4, !alias.scope !5
  store i32 0, i32* %24, align 4, !noalias !5
  %26 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 3
  %27 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 23) #6
  %28 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #6
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %29, align 8
  %31 = icmp eq %"class.base::SequencedTaskRunner"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %30, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %22, %32
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %26, %"class.base::Location"* nonnull dereferenceable(32) %5, i32 1, %"class.base::SequencedTaskRunner"* %30, i8* null) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #6
  %36 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %6, i64 0, i32 0
  %38 = bitcast %"class.base::internal::BindStateBase"** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false)
  %39 = load i32, i32* %10, align 4
  store i32 %39, i32* %37, align 4
  %40 = ptrtoint %"class.extensions::MojoDataPump"* %0 to i64
  %41 = call i8* @_Znwm(i64 56) #7, !noalias !8
  %42 = bitcast i8* %41 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %42, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEFvjS8_EE3RunEPNS0_13BindStateBaseEjS8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !8
  %43 = getelementptr inbounds i8, i8* %41, i64 32
  %44 = bitcast i8* %43 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN10extensions12MojoDataPump11ReceiveMoreEjRKN4mojo18HandleSignalsStateE to i64), i64 0>, <2 x i64>* %44, align 8, !noalias !8
  %45 = getelementptr inbounds i8, i8* %41, i64 48
  %46 = bitcast i8* %45 to i64*
  store i64 %40, i64* %46, align 8, !noalias !8
  %47 = bitcast %"class.base::RepeatingCallback"* %7 to i8**
  store i8* %41, i8** %47, align 8, !alias.scope !8
  %48 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %13, %"class.mojo::Handle"* nonnull %6, i32 5, i32 1, %"class.base::RepeatingCallback"* nonnull %7) #6
  %49 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #6
  %50 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %8, i64 0, i32 0
  %51 = load i32, i32* %23, align 4
  store i32 %51, i32* %50, align 4
  %52 = call i8* @_Znwm(i64 56) #7, !noalias !13
  %53 = bitcast i8* %52 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %53, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEFvjS8_EE3RunEPNS0_13BindStateBaseEjS8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !13
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN10extensions12MojoDataPump8SendMoreEjRKN4mojo18HandleSignalsStateE to i64), i64 0>, <2 x i64>* %55, align 8, !noalias !13
  %56 = getelementptr inbounds i8, i8* %52, i64 48
  %57 = bitcast i8* %56 to i64*
  store i64 %40, i64* %57, align 8, !noalias !13
  %58 = bitcast %"class.base::RepeatingCallback"* %9 to i8**
  store i8* %52, i8** %58, align 8, !alias.scope !13
  %59 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %26, %"class.mojo::Handle"* nonnull %8, i32 6, i32 1, %"class.base::RepeatingCallback"* nonnull %9) #6
  %60 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare dereferenceable(8) %class.scoped_refptr* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #2

declare void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"*, %"class.base::Location"* dereferenceable(32), i32, %"class.base::SequencedTaskRunner"*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"*, %"class.mojo::Handle"*, i32, i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12MojoDataPump11ReceiveMoreEjRKN4mojo18HandleSignalsStateE(%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"* nocapture readnone dereferenceable(8)) #0 align 2 {
  %4 = alloca %class.scoped_refptr.14, align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %struct.MojoReadDataOptions, align 8
  %7 = alloca %class.scoped_refptr.14, align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %9, align 4
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %3
  %15 = zext i32 %12 to i64
  %16 = tail call i8* @_Znwm(i64 24) #7
  %17 = bitcast i8* %16 to %"class.net::IOBuffer"*
  tail call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %17, i64 %15) #6
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i32*
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  %21 = getelementptr inbounds i8, i8* %16, i64 16
  %22 = bitcast i8* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %struct.MojoReadDataOptions* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %6, i64 0, i32 0
  %26 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %6, i64 0, i32 1
  store i32 8, i32* %25, align 8
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = call i32 @MojoReadData(i32 %28, %struct.MojoReadDataOptions* nonnull %6, i8* %23, i32* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %30

30:                                               ; preds = %14, %3
  %31 = phi %"class.net::IOBuffer"* [ %17, %14 ], [ null, %3 ]
  %32 = phi i32 [ %29, %14 ], [ %1, %3 ]
  %33 = icmp eq i32 %32, 17
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 1
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %35) #6
  br label %101

36:                                               ; preds = %30
  store i32 0, i32* %11, align 4
  %37 = icmp eq i32 %32, 0
  %38 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 4
  br i1 %37, label %67, label %39

39:                                               ; preds = %36
  %40 = bitcast %class.scoped_refptr.14* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %4, i64 0, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %41, align 8
  %42 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %38, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.base::OnceCallback"* %38 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %48 = inttoptr i64 %45 to %"class.base::internal::BindStateBase"*
  %49 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %48, i64 0, i32 1
  %50 = bitcast void ()** %49 to void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)**
  %51 = load void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)*, void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)** %50, align 8
  call void %51(%"class.base::internal::BindStateBase"* %48, i32 0, %class.scoped_refptr.14* nonnull dereferenceable(8) %4) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  %52 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %41, align 8
  %53 = icmp eq %"class.net::IOBuffer"* %52, null
  br i1 %53, label %66, label %54

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %52, i64 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.15"* %60 to %"class.net::IOBuffer"*
  %62 = bitcast %"class.base::RefCountedThreadSafe.15"* %60 to void (%"class.net::IOBuffer"*)***
  %63 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %63, i64 1
  %65 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %64, align 8
  call void %65(%"class.net::IOBuffer"* nonnull %61) #6
  br label %66

66:                                               ; preds = %39, %54, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  br label %101

67:                                               ; preds = %36
  %68 = load i32, i32* %9, align 4
  %69 = icmp eq %"class.net::IOBuffer"* %31, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %31, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  br label %73

73:                                               ; preds = %67, %70
  %74 = bitcast %class.scoped_refptr.14* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  %75 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %7, i64 0, i32 0
  store %"class.net::IOBuffer"* %31, %"class.net::IOBuffer"** %75, align 8
  %76 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #6
  %77 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %38, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.base::OnceCallback"* %38 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %77, align 8
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %82 = inttoptr i64 %79 to %"class.base::internal::BindStateBase"*
  %83 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %82, i64 0, i32 1
  %84 = bitcast void ()** %83 to void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)**
  %85 = load void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)*, void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)** %84, align 8
  call void %85(%"class.base::internal::BindStateBase"* %82, i32 %68, %class.scoped_refptr.14* nonnull dereferenceable(8) %7) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %81) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #6
  %86 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %75, align 8
  %87 = icmp eq %"class.net::IOBuffer"* %86, null
  br i1 %87, label %100, label %88

88:                                               ; preds = %73
  %89 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw sub i32* %90, i32 1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %100

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %89, i64 -2
  %95 = bitcast %"class.base::RefCountedThreadSafe.15"* %94 to %"class.net::IOBuffer"*
  %96 = bitcast %"class.base::RefCountedThreadSafe.15"* %94 to void (%"class.net::IOBuffer"*)***
  %97 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %97, i64 1
  %99 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %98, align 8
  call void %99(%"class.net::IOBuffer"* nonnull %95) #6
  br label %100

100:                                              ; preds = %73, %88, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  br label %101

101:                                              ; preds = %100, %66, %34
  %102 = icmp eq %"class.net::IOBuffer"* %31, null
  br i1 %102, label %115, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %31, i64 0, i32 1
  %105 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw sub i32* %105, i32 1 acq_rel
  %107 = icmp eq i32 %106, 1
  br i1 %107, label %108, label %115

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %104, i64 -2
  %110 = bitcast %"class.base::RefCountedThreadSafe.15"* %109 to %"class.net::IOBuffer"*
  %111 = bitcast %"class.base::RefCountedThreadSafe.15"* %109 to void (%"class.net::IOBuffer"*)***
  %112 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %112, i64 1
  %114 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %113, align 8
  call void %114(%"class.net::IOBuffer"* nonnull %110) #6
  br label %115

115:                                              ; preds = %101, %103, %108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12MojoDataPump8SendMoreEjRKN4mojo18HandleSignalsStateE(%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"* nocapture readnone dereferenceable(8)) #0 align 2 {
  %4 = alloca %struct.MojoWriteDataOptions, align 8
  %5 = alloca %"class.base::OnceCallback.13", align 8
  %6 = alloca %"class.base::OnceCallback.13", align 8
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %7, align 4
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %12, label %23

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 6, i32 0
  %14 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %13, align 8
  %15 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %14, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %struct.MojoWriteDataOptions* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %4, i64 0, i32 0
  %19 = getelementptr inbounds %struct.MojoWriteDataOptions, %struct.MojoWriteDataOptions* %4, i64 0, i32 1
  store i32 8, i32* %18, align 8
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = call i32 @MojoWriteData(i32 %21, i8* %16, i32* nonnull %7, %struct.MojoWriteDataOptions* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %23

23:                                               ; preds = %12, %3
  %24 = phi i32 [ %22, %12 ], [ %1, %3 ]
  %25 = icmp eq i32 %24, 17
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 3
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %27) #6
  br label %72

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 6
  %30 = bitcast %class.scoped_refptr.14* %29 to i64*
  %31 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %29, i64 0, i32 0
  %32 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %31, align 8
  store i64 0, i64* %30, align 8
  %33 = icmp eq %"class.net::IOBuffer"* %32, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %35, i64 -2
  %41 = bitcast %"class.base::RefCountedThreadSafe.15"* %40 to %"class.net::IOBuffer"*
  %42 = bitcast %"class.base::RefCountedThreadSafe.15"* %40 to void (%"class.net::IOBuffer"*)***
  %43 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, i64 1
  %45 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %44, align 8
  call void %45(%"class.net::IOBuffer"* nonnull %41) #6
  br label %46

46:                                               ; preds = %28, %34, %39
  store i32 0, i32* %9, align 8
  %47 = icmp eq i32 %24, 0
  %48 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 5
  br i1 %47, label %60, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.base::OnceCallback.13"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #6
  %51 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.base::OnceCallback.13"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.base::OnceCallback.13"* %5 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8
  %55 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %5, i64 0, i32 0
  %56 = inttoptr i64 %53 to %"class.base::internal::BindStateBase"*
  %57 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %56, i64 0, i32 1
  %58 = bitcast void ()** %57 to void (%"class.base::internal::BindStateBase"*, i32)**
  %59 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %58, align 8
  call void %59(%"class.base::internal::BindStateBase"* %56, i32 -2) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  br label %72

60:                                               ; preds = %46
  %61 = load i32, i32* %7, align 4
  %62 = bitcast %"class.base::OnceCallback.13"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #6
  %63 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %48, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.base::OnceCallback.13"* %48 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::OnceCallback.13"* %6 to i64*
  store i64 %65, i64* %66, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %63, align 8
  %67 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %6, i64 0, i32 0
  %68 = inttoptr i64 %65 to %"class.base::internal::BindStateBase"*
  %69 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %68, i64 0, i32 1
  %70 = bitcast void ()** %69 to void (%"class.base::internal::BindStateBase"*, i32)**
  %71 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %70, align 8
  call void %71(%"class.base::internal::BindStateBase"* %68, i32 %61) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #6
  br label %72

72:                                               ; preds = %60, %49, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12MojoDataPumpD2Ev(%"class.extensions::MojoDataPump"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %2, align 8
  %4 = icmp eq %"class.net::IOBuffer"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe.15"* %11 to %"class.net::IOBuffer"*
  %13 = bitcast %"class.base::RefCountedThreadSafe.15"* %11 to void (%"class.net::IOBuffer"*)***
  %14 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %14, i64 1
  %16 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %15, align 8
  tail call void %16(%"class.net::IOBuffer"* nonnull %12) #6
  br label %17

17:                                               ; preds = %1, %5, %10
  %18 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #6
  %19 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %19) #6
  %20 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 3
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %20) #6
  %21 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  %25 = tail call i32 @MojoClose(i32 %22) #6
  br label %26

26:                                               ; preds = %17, %24
  %27 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 1
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %27) #6
  %28 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = tail call i32 @MojoClose(i32 %29) #6
  br label %33

33:                                               ; preds = %26, %31
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12MojoDataPump4ReadEiN4base12OnceCallbackIFvi13scoped_refptrIN3net8IOBufferEEEEE(%"class.extensions::MojoDataPump"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.14, align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %7, label %35

7:                                                ; preds = %3
  %8 = bitcast %class.scoped_refptr.14* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %4, i64 0, i32 0
  store %"class.net::IOBuffer"* null, %"class.net::IOBuffer"** %9, align 8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %16 = inttoptr i64 %13 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)**
  %19 = load void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)*, void (%"class.base::internal::BindStateBase"*, i32, %class.scoped_refptr.14*)** %18, align 8
  call void %19(%"class.base::internal::BindStateBase"* %16, i32 -4, %class.scoped_refptr.14* nonnull dereferenceable(8) %4) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %20 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %9, align 8
  %21 = icmp eq %"class.net::IOBuffer"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %20, i64 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.15"* %28 to %"class.net::IOBuffer"*
  %30 = bitcast %"class.base::RefCountedThreadSafe.15"* %28 to void (%"class.net::IOBuffer"*)***
  %31 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %31, i64 1
  %33 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %32, align 8
  call void %33(%"class.net::IOBuffer"* nonnull %29) #6
  br label %34

34:                                               ; preds = %7, %22, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  br label %41

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 8
  store i32 %1, i32* %36, align 4
  %37 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 4, i32 0
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %39 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %37, %"class.base::internal::CallbackBase"* dereferenceable(8) %38) #6
  %40 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 1
  tail call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %40) #6
  br label %41

41:                                               ; preds = %35, %34
  ret void
}

declare void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions12MojoDataPump5WriteEPN3net8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.extensions::MojoDataPump"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.13"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 5, i32 0
  %6 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %3, i64 0, i32 0
  %7 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %5, %"class.base::internal::CallbackBase"* dereferenceable(8) %6) #6
  %8 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 6
  %9 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %4
  %14 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %15 = bitcast %class.scoped_refptr.14* %8 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr.14, %class.scoped_refptr.14* %8, i64 0, i32 0
  %17 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.net::IOBuffer"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %17, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.15"* %25 to %"class.net::IOBuffer"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.15"* %25 to void (%"class.net::IOBuffer"*)***
  %28 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %28, i64 1
  %30 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %29, align 8
  tail call void %30(%"class.net::IOBuffer"* nonnull %26) #6
  br label %31

31:                                               ; preds = %13, %19, %24
  %32 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 7
  store i32 %2, i32* %32, align 8
  %33 = getelementptr inbounds %"class.extensions::MojoDataPump", %"class.extensions::MojoDataPump"* %0, i64 0, i32 3
  tail call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %33) #6
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare i32 @MojoReadData(i32, %struct.MojoReadDataOptions*, i8*, i32*) local_unnamed_addr #2

declare i32 @MojoWriteData(i32, i8*, i32*, %struct.MojoWriteDataOptions*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEFvjS8_EE3RunEPNS0_13BindStateBaseEjS8_(%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.extensions::MojoDataPump"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)**
  %23 = load void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)*, void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.extensions::MojoDataPump"*, i32, %"struct.mojo::HandleSignalsState"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.extensions::MojoDataPump"* %14, i32 %1, %"struct.mojo::HandleSignalsState"* dereferenceable(8) %2) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base13BindRepeatingIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!12 = distinct !{!12, !"_ZN4base13BindRepeatingIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base13BindRepeatingIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!17 = distinct !{!17, !"_ZN4base13BindRepeatingIMN10extensions12MojoDataPumpEFvjRKN4mojo18HandleSignalsStateEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
