; ModuleID = '../../third_party/blink/renderer/modules/canvas/canvas2d/canvas_style.cc'
source_filename = "../../third_party/blink/renderer/modules/canvas/canvas2d/canvas_style.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CanvasStyle" = type { i32, i32, %"class.blink::Member.1065", %"class.blink::Member.1113" }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::CanvasGradient"* }
%"class.blink::CanvasGradient" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1067, %"class.blink::IdentifiabilityStudyHelper" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr.1067 = type { %"class.blink::Gradient"* }
%"class.blink::Gradient" = type { i32 (...)**, %"class.WTF::RefCounted.1068", i32, i32, i32, i32, %"class.WTF::Vector.1070", i8, %class.sk_sp.1075, %class.sk_sp.1112 }
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.1070" = type { %"class.WTF::VectorBuffer.1071" }
%"class.WTF::VectorBuffer.1071" = type { %"class.WTF::VectorBufferBase.1072", [32 x i8] }
%"class.WTF::VectorBufferBase.1072" = type { %"struct.blink::Gradient::ColorStop"*, i32, i32 }
%"struct.blink::Gradient::ColorStop" = type <{ double, %"class.blink::Color", [4 x i8] }>
%"class.blink::Color" = type { i32 }
%class.sk_sp.1075 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1076", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.170, i32, %"class.absl::optional.1092", %"class.std::__1::vector.1097", %"class.std::__1::vector.1104", %class.sk_sp.1111, %class.sk_sp.142, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.29" }>
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i32 }
%"class.absl::optional.1076" = type { %"class.absl::optional_internal::optional_data.1077" }
%"class.absl::optional_internal::optional_data.1077" = type { %"class.absl::optional_internal::optional_data_base.1078" }
%"class.absl::optional_internal::optional_data_base.1078" = type { %"class.absl::optional_internal::optional_data_dtor_base.1079" }
%"class.absl::optional_internal::optional_data_dtor_base.1079" = type { i8, %union.anon.1080 }
%union.anon.1080 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.142, %class.sk_sp.170, %"class.gfx::Rect", i32, %class.sk_sp.1081, %class.sk_sp.1089, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.142, %class.scoped_refptr.1090 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.1081 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1082" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.63, i32, i32 }
%class.sk_sp.63 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.29" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.34" }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1082" = type { %"class.std::__1::__vector_base.1083" }
%"class.std::__1::__vector_base.1083" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1084" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1089 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1090 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1091", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1091" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.29" }
%class.sk_sp.170 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.171", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i8* }
%"class.absl::optional.1092" = type { %"class.absl::optional_internal::optional_data.1093" }
%"class.absl::optional_internal::optional_data.1093" = type { %"class.absl::optional_internal::optional_data_base.1094" }
%"class.absl::optional_internal::optional_data_base.1094" = type { %"class.absl::optional_internal::optional_data_dtor_base.1095" }
%"class.absl::optional_internal::optional_data_dtor_base.1095" = type { i8, %union.anon.1096 }
%union.anon.1096 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.1097" = type { %"class.std::__1::__vector_base.1098" }
%"class.std::__1::__vector_base.1098" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { i32* }
%"class.std::__1::vector.1104" = type { %"class.std::__1::__vector_base.1105" }
%"class.std::__1::__vector_base.1105" = type { float*, float*, %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { float* }
%class.sk_sp.1111 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.311", [7 x i8] }>
%"struct.std::__1::atomic.311" = type { %"struct.std::__1::__atomic_base.312" }
%"struct.std::__1::__atomic_base.312" = type { %"struct.std::__1::__cxx_atomic_impl.313" }
%"struct.std::__1::__cxx_atomic_impl.313" = type { %"struct.std::__1::__cxx_atomic_base_impl.314" }
%"struct.std::__1::__cxx_atomic_base_impl.314" = type { i8 }
%class.sk_sp.142 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1112 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.blink::IdentifiabilityStudyHelper" = type <{ %"class.blink::IdentifiableTokenBuilder", i32, i8, i8, [2 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::CanvasPattern"* }
%"class.blink::CanvasPattern" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.1115, %"class.blink::AffineTransform", i8, [7 x i8], %"class.blink::IdentifiabilityStudyHelper" }
%class.scoped_refptr.1115 = type { %"class.blink::Pattern"* }
%"class.blink::Pattern" = type { i32 (...)**, %"class.WTF::RefCounted.1116", i32, %class.sk_sp.1075 }
%"class.WTF::RefCounted.1116" = type { %"class.base::RefCounted.1117" }
%"class.base::RefCounted.1117" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::HTMLCanvasElement" = type { %"class.blink::HTMLElement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::PageVisibilityObserver", %"class.blink::CanvasRenderingContextHost", %"class.blink::WebSurfaceLayerBridgeObserver", %"class.blink::ImageBitmapSource", %"class.blink::OffscreenCanvasPlaceholder.base", %"class.blink::ThreadState::PrefinalizerRegistration", [3 x i8], %"class.blink::HeapHashSet.130", %"class.blink::IntSize", %"class.blink::Member.137", i8, i8, i8, %"class.blink::FloatRect", i8, i8, i8, %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.446", i8, i64, %class.scoped_refptr.452 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.664", %"class.blink::Member.666", %"class.blink::Member.1", %"class.blink::Member.668", %"class.blink::Member.668", %"class.blink::Member.688", %"class.blink::Member.690", %"class.blink::Member.692", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.697", %"class.blink::HeapVector.699" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.715", %"class.WTF::Vector.715", i8, i32, %"class.blink::Member.720", %"class.blink::Member.722", %"class.blink::Member.724", %"class.blink::Member.726", %"class.blink::Member.728", %"class.blink::Member.730", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.738", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.744", %"class.blink::Member.746", %"class.blink::Member.705", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.749", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.680", %"class.blink::Member.772", %"class.blink::Member.680", %"class.blink::Member.680", %"class.blink::Member.680", %"class.blink::UserActionElementSet", %"class.blink::Member.781", double, double, i64, i64, %"class.blink::HeapHashSet.783", %"class.blink::HeapHashSet.790", i16, i8, %"class.blink::Member.797", %"class.blink::Member.799", %"class.blink::Member.801", %"class.blink::Member.803", %"class.blink::TextLinkColors", %"class.blink::Member.805", i8, [7 x i8], %"class.blink::HeapHashMap.807", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.680", %"class.WTF::Vector.814", %"class.blink::Member.819", %"class.blink::Member.821", i8, %"class.blink::Member.680", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.823", %"class.blink::HeapVector.825", %"class.std::__1::unique_ptr.833", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.839", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.852", %"class.WTF::Vector.854", i8, i8, %"class.std::__1::unique_ptr.859", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.865", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.873", i8, i32, %"class.blink::Member.875", %"class.blink::Member.877", %"class.blink::Member.879", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.881", %"class.WTF::HashMap.883", %"class.blink::Member.888", %"class.blink::Member.890", %"class.blink::Member.892", %"class.blink::Member.894", %"class.blink::Member.666", %"class.blink::Member.666", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.896", i8, i32, %"class.blink::Member.903", %"class.blink::Member.905", i32, %"class.blink::Member.907", %"class.blink::Member.909", %"class.blink::Member.911", %"class.std::__1::unique_ptr.913", i64, %"class.std::__1::unique_ptr.919", i32, i32, %"class.blink::Member.934", %"class.blink::Member.936", %"class.blink::Member.938", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.940", %"class.WTF::Vector.942", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.947", %"class.blink::Member.954", %"class.std::__1::unique_ptr.956", %"class.blink::Member.962", i8, i8, %"class.WTF::String", %"class.blink::Member.964", i8, [7 x i8], %"class.blink::HeapHashMap.966", %"class.blink::HeapObserverSet.973", %"class.blink::Member.981", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.983", i32, i8, i8, %"class.blink::WeakMember.985", %"class.blink::Member.986" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.708" }
%"class.blink::HeapHashMap.708" = type { %"class.WTF::HashMap.711" }
%"class.WTF::HashMap.711" = type { %"class.WTF::HashTable.712" }
%"class.WTF::HashTable.712" = type <{ %"struct.WTF::KeyValuePair.714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.714" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.715" = type { %"class.WTF::VectorBuffer.716" }
%"class.WTF::VectorBuffer.716" = type { %"class.WTF::VectorBufferBase.717" }
%"class.WTF::VectorBufferBase.717" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.85", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.720" = type { %"class.blink::MemberBase.721" }
%"class.blink::MemberBase.721" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.999", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1032", i32, i8, [3 x i8], %"class.blink::HeapVector.1034", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1042", %"class.blink::Member.1044", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1053", %"class.blink::Member.1059", %"class.blink::Member.1061", i8, [7 x i8] }>
%"class.blink::Supplementable.999" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1000" }
%"class.blink::HeapHashMap.1000" = type { %"class.WTF::HashMap.1003" }
%"class.WTF::HashMap.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ %"struct.WTF::KeyValuePair.1006"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1006" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1007" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.25" = type opaque
%"class.blink::Supplementable.1007" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1008" }
%"class.blink::HeapHashMap.1008" = type { %"class.WTF::HashMap.1011" }
%"class.WTF::HashMap.1011" = type { %"class.WTF::HashTable.1012" }
%"class.WTF::HashTable.1012" = type <{ %"struct.WTF::KeyValuePair.1014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1014" = type { i8*, %"class.blink::Member.1122" }
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1124" }
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1015, %"class.std::__1::unique_ptr.1016", %"class.std::__1::unique_ptr.1016", %"class.std::__1::unique_ptr.1022", %"class.std::__1::unique_ptr.1022", %"class.blink::Member.722", i32, [4 x i8], %"class.WTF::HashSet.1028", i32, i32 }
%class.scoped_refptr.1015 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1034" = type { %"class.WTF::Vector.1037" }
%"class.WTF::Vector.1037" = type { %"class.WTF::VectorBuffer.1038" }
%"class.WTF::VectorBuffer.1038" = type { %"class.WTF::VectorBufferBase.1039" }
%"class.WTF::VectorBufferBase.1039" = type { %"class.blink::Member.1040"*, i32, i32 }
%"class.blink::Member.1040" = type opaque
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1046", i32, i32 }
%"class.blink::HeapHashMap.1046" = type { %"class.WTF::HashMap.1049" }
%"class.WTF::HashMap.1049" = type { %"class.WTF::HashTable.1050" }
%"class.WTF::HashTable.1050" = type <{ %"struct.WTF::KeyValuePair.1052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1052" = type opaque
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.732" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.blink::KURL"* }
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.748 }
%class.scoped_refptr.748 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.749" = type { %"class.WTF::VectorBuffer.750" }
%"class.WTF::VectorBuffer.750" = type { %"class.WTF::VectorBufferBase.751" }
%"class.WTF::VectorBufferBase.751" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.752 }
%class.scoped_refptr.752 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.753", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.753" = type { %"class.base::RefCounted.754" }
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.755" }
%"class.blink::PersistentBase.755" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.758" }
%"class.blink::HeapHashMap.758" = type { %"class.WTF::HashMap.761" }
%"class.WTF::HashMap.761" = type { %"class.WTF::HashTable.762" }
%"class.WTF::HashTable.762" = type <{ %"struct.WTF::KeyValuePair.764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.764" = type { %"class.blink::WeakMember.765", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.767" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.469", i32, [4 x i8], %"class.std::__1::unique_ptr.607", %"class.std::__1::unique_ptr.607", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.613", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.619", %"class.std::__1::unique_ptr.625", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.643", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.311", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.496", %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.513", %"class.std::__1::unique_ptr.520", %"class.std::__1::unique_ptr.520", %"class.std::__1::unique_ptr.527", %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.541", %"class.std::__1::unique_ptr.541", %"class.std::__1::unique_ptr.548", %"class.std::__1::unique_ptr.555", %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.587", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.505" = type { %"struct.std::__1::__atomic_base.506" }
%"struct.std::__1::__atomic_base.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { i64 }
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.blink::Worklist.516"* }
%"class.blink::Worklist.516" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::Worklist.523"* }
%"class.blink::Worklist.523" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::Worklist.530"* }
%"class.blink::Worklist.530" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.blink::Worklist.537"* }
%"class.blink::Worklist.537" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.blink::Worklist.544"* }
%"class.blink::Worklist.544" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.blink::Worklist.551"* }
%"class.blink::Worklist.551" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.blink::Worklist.558"* }
%"class.blink::Worklist.558" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.505" }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.565", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.580", [4 x i8] }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567", %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { float }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.590", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.599" }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.613" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"struct.std::__1::pair.618"*, i32, i32 }
%"struct.std::__1::pair.618" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.631" }
%"class.std::__1::unique_ptr.631" = type { %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.516"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.523"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.530"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.537"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.544"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.656", i64 }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.658" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.649 }
%class.scoped_refptr.649 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.774" }
%"class.blink::HeapHashMap.774" = type { %"class.WTF::HashMap.777" }
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.780"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.780" = type opaque
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.783" = type { %"class.WTF::HashSet.786" }
%"class.WTF::HashSet.786" = type { %"class.WTF::HashTable.787" }
%"class.WTF::HashTable.787" = type <{ %"class.blink::WeakMember.789"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.789" = type opaque
%"class.blink::HeapHashSet.790" = type { %"class.WTF::HashSet.793" }
%"class.WTF::HashSet.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"class.blink::WeakMember.796"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.796" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.803" = type { %"class.blink::MemberBase.804" }
%"class.blink::MemberBase.804" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.807" = type { %"class.WTF::HashMap.810" }
%"class.WTF::HashMap.810" = type { %"class.WTF::HashTable.811" }
%"class.WTF::HashTable.811" = type <{ %"struct.WTF::KeyValuePair.813"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.813" = type opaque
%"class.WTF::Vector.814" = type { %"class.WTF::VectorBuffer.815" }
%"class.WTF::VectorBuffer.815" = type { %"class.WTF::VectorBufferBase.816" }
%"class.WTF::VectorBufferBase.816" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.825" = type { %"class.WTF::Vector.828" }
%"class.WTF::Vector.828" = type { %"class.WTF::VectorBuffer.829" }
%"class.WTF::VectorBuffer.829" = type { %"class.WTF::VectorBufferBase.830" }
%"class.WTF::VectorBufferBase.830" = type { %"class.blink::Member.831"*, i32, i32 }
%"class.blink::Member.831" = type opaque
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.839" = type { %"class.WTF::HashSet.842" }
%"class.WTF::HashSet.842" = type { %"class.WTF::HashTable.843" }
%"class.WTF::HashTable.843" = type <{ %"class.blink::WeakMember.845"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.845" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.846", i32, [4 x i8] }>
%"class.WTF::Vector.846" = type { %"class.WTF::VectorBuffer.847" }
%"class.WTF::VectorBuffer.847" = type { %"class.WTF::VectorBufferBase.848" }
%"class.WTF::VectorBufferBase.848" = type { %"struct.std::__1::pair.849"*, i32, i32 }
%"struct.std::__1::pair.849" = type opaque
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.854" = type { %"class.WTF::VectorBuffer.855" }
%"class.WTF::VectorBuffer.855" = type { %"class.WTF::VectorBufferBase.856" }
%"class.WTF::VectorBufferBase.856" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.684" }
%"class.WTF::Vector.684" = type { %"class.WTF::VectorBuffer.685" }
%"class.WTF::VectorBuffer.685" = type { %"class.WTF::VectorBufferBase.686" }
%"class.WTF::VectorBufferBase.686" = type { %"class.blink::Member.680"*, i32, i32 }
%"class.blink::HeapVector.865" = type { %"class.WTF::Vector.868" }
%"class.WTF::Vector.868" = type { %"class.WTF::VectorBuffer.869" }
%"class.WTF::VectorBuffer.869" = type { %"class.WTF::VectorBufferBase.870" }
%"class.WTF::VectorBufferBase.870" = type { %"class.blink::Member.871"*, i32, i32 }
%"class.blink::Member.871" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.666" }
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.883" = type { %"class.WTF::HashTable.884" }
%"class.WTF::HashTable.884" = type <{ %"struct.WTF::KeyValuePair.887"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.887" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.771", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.94, %"class.base::WeakPtrFactory.770" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.94 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.95" }>
%"class.base::RefCountedThreadSafe.95" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.34" }
%"class.blink::WeakMember.771" = type { %"class.blink::MemberBase.667" }
%"class.blink::HeapHashSet.896" = type { %"class.WTF::HashSet.899" }
%"class.WTF::HashSet.899" = type { %"class.WTF::HashTable.900" }
%"class.WTF::HashTable.900" = type <{ %"class.blink::Member.902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.902" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.922", %"class.WTF::HashSet.922", %"class.WTF::HashSet.922", %"class.WTF::HashSet.922", %"class.WTF::HashSet.922", %"class.WTF::HashSet.922", i32, [4 x i8], %"class.WTF::HashMap.926", %"class.WTF::HashMap.926", %"class.WTF::HashMap.926", %"class.WTF::HashMap.926", %"class.WTF::HashMap.926", %"class.WTF::HashMap.926", %"class.WTF::HashMap.926", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.922" = type { %"class.WTF::HashTable.923" }
%"class.WTF::HashTable.923" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"struct.WTF::KeyValuePair.930"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.930" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.947" = type { %"class.WTF::HashMap.950" }
%"class.WTF::HashMap.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"struct.WTF::KeyValuePair.953"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.953" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.966" = type { %"class.WTF::HashMap.969" }
%"class.WTF::HashMap.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type opaque
%"class.blink::HeapObserverSet.973" = type { i32, [4 x i8], %"class.blink::HeapHashSet.974" }
%"class.blink::HeapHashSet.974" = type { %"class.WTF::HashSet.977" }
%"class.WTF::HashSet.977" = type { %"class.WTF::HashTable.978" }
%"class.WTF::HashTable.978" = type <{ %"class.blink::WeakMember.980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.980" = type opaque
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.983" = type { %"class.blink::MemberBase.984" }
%"class.blink::MemberBase.984" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.666", %"class.blink::HeapHashSet.990", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.997", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.990" = type { %"class.WTF::HashSet.993" }
%"class.WTF::HashSet.993" = type { %"class.WTF::HashTable.994" }
%"class.WTF::HashTable.994" = type <{ %"class.blink::Member.996"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.996" = type opaque
%"class.blink::HeapTaskRunnerTimer.997" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.998", { i64, i64 } }
%"class.blink::WeakMember.998" = type { %"class.blink::MemberBase.984" }
%"class.blink::WeakMember.985" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.676" }
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.680", i32, %"class.blink::HeapVector" }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.694" }
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::HeapHashMap.696"* }
%"class.blink::HeapHashMap.696" = type opaque
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.699" = type { %"class.WTF::Vector.702" }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { %"class.blink::Member.705"*, i32, i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.26" }
%"class.blink::WeakMember.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp, i32, %"class.base::WeakPtr", %"class.base::WeakPtr.40", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.74", i8, i32, i32, i32, %"class.WTF::Vector.89", i8, i8, i64, i64, %"class.base::RepeatingCallback.99", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.115" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr.40" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.65", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.48, [384 x i64], %class.sk_sp.49, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.50", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.56" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.48 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.49 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp.62, %class.SkPixmap, %class.sk_sp.64 }
%class.sk_sp.62 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.64 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.77, %"class.std::__1::unique_ptr.78" }
%class.scoped_refptr.77 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %class.scoped_refptr.92*, i32, i32 }
%class.scoped_refptr.92 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", %"class.base::PlatformThreadRef", %class.scoped_refptr.94, %"struct.gpu::SyncToken", %"class.base::WeakPtr.96", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.93" }
%"class.base::RefCountedThreadSafe.93" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.base::WeakPtr.96" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.99" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.63, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.115" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridgeObserver" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::OffscreenCanvasPlaceholder.base" = type <{ i32 (...)**, %class.scoped_refptr.92, %"class.base::WeakPtr.40", %class.scoped_refptr.94, %"class.util::IdType.119", i32, i32, %"class.absl::optional.121" }>
%"class.util::IdType.119" = type { %"class.base::StrongAlias.120" }
%"class.base::StrongAlias.120" = type { i32 }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { i32 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::HeapHashSet.130" = type { %"class.WTF::HashSet.133" }
%"class.WTF::HashSet.133" = type { %"class.WTF::HashTable.134" }
%"class.WTF::HashTable.134" = type <{ %"class.blink::WeakMember.136"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.136" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type opaque
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Canvas2DLayerBridge"* }
%"class.blink::Canvas2DLayerBridge" = type { %"class.cc::TextureLayerClient", %class.sk_sp.142, %class.scoped_refptr.143, %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::CanvasColorParams", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceHost"*, %"struct.viz::TransferableResource", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::bernoulli_distribution", %"class.WTF::Deque", %class.sk_sp.170, %"class.base::WeakPtrFactory.175" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%class.scoped_refptr.143 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::SharedContextRateLimiter"* }
%"class.blink::SharedContextRateLimiter" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Canvas2DLayerBridge::Logger"* }
%"class.blink::Canvas2DLayerBridge::Logger" = type { i32 (...)** }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"struct.viz::TransferableResource" = type { %"class.util::IdType.119", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.156", i8, i32, i8, [7 x i8], %"class.absl::optional.161" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.156" = type { %"class.absl::optional_internal::optional_data.157" }
%"class.absl::optional_internal::optional_data.157" = type { %"class.absl::optional_internal::optional_data_base.158" }
%"class.absl::optional_internal::optional_data_base.158" = type { %"class.absl::optional_internal::optional_data_dtor_base.159" }
%"class.absl::optional_internal::optional_data_dtor_base.159" = type { i8, %union.anon.160 }
%union.anon.160 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, [7 x i8], %union.anon.165 }
%union.anon.165 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::bernoulli_distribution" = type { %"class.std::__1::bernoulli_distribution::param_type" }
%"class.std::__1::bernoulli_distribution::param_type" = type { double }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.168" }
%"class.WTF::VectorBuffer.168" = type { %"class.WTF::VectorBufferBase.169" }
%"class.WTF::VectorBufferBase.169" = type { %"struct.blink::Canvas2DLayerBridge::RasterTimer"*, i32, i32 }
%"struct.blink::Canvas2DLayerBridge::RasterTimer" = type { i32, %"class.base::TimeDelta" }
%"class.base::WeakPtrFactory.175" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::SurfaceLayerBridge"* }
%"class.blink::SurfaceLayerBridge" = type <{ %"class.blink::mojom::blink::EmbeddedFrameSinkClient", %"class.blink::mojom::blink::SurfaceEmbedder", %"class.blink::WebSurfaceLayerBridge", %class.scoped_refptr.182, %class.scoped_refptr.278, %"class.blink::WebSurfaceLayerBridgeObserver"*, %"class.base::RepeatingCallback.267", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.mojo::Receiver", %"class.mojo::Receiver.441", %"class.viz::FrameSinkId", i32, [4 x i8], %"class.viz::SurfaceId", %"class.viz::FrameSinkId", i8, i8, [6 x i8] }>
%"class.blink::mojom::blink::EmbeddedFrameSinkClient" = type { i32 (...)** }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridge" = type { i32 (...)** }
%class.scoped_refptr.182 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.267", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.273", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.183", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.200", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.241" }>
%"class.base::RefCounted.183" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.184", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %class.scoped_refptr.186*, %class.scoped_refptr.186*, %"class.std::__1::__compressed_pair.187" }
%class.scoped_refptr.186 = type opaque
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %class.scoped_refptr.186* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.std::__1::pair.194"*, %"struct.std::__1::pair.194"*, %"class.std::__1::__compressed_pair.195" }
%"struct.std::__1::pair.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::pair.194"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.224", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.229", %"class.std::__1::vector.230" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.203" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.219" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.205, [20 x float], i32, [4 x i8], %"class.std::__1::vector.212", i32, [4 x i8] }>
%class.sk_sp.205 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.206, i32, %"class.absl::optional.207", i8, i32 }
%class.sk_sp.206 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.207" = type { %"class.absl::optional_internal::optional_data.208" }
%"class.absl::optional_internal::optional_data.208" = type { %"class.absl::optional_internal::optional_data_base.209" }
%"class.absl::optional_internal::optional_data_base.209" = type { %"class.absl::optional_internal::optional_data_dtor_base.210" }
%"class.absl::optional_internal::optional_data_dtor_base.210" = type { i8, %union.anon.211 }
%union.anon.211 = type { %struct.SkRect }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.224" = type { %"class.absl::optional_internal::optional_data.225" }
%"class.absl::optional_internal::optional_data.225" = type { %"class.absl::optional_internal::optional_data_base.226" }
%"class.absl::optional_internal::optional_data_base.226" = type { %"class.absl::optional_internal::optional_data_dtor_base.227" }
%"class.absl::optional_internal::optional_data_dtor_base.227" = type { i8, %union.anon.228 }
%union.anon.228 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.229" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"class.std::__1::unique_ptr.232"*, %"class.std::__1::unique_ptr.232"*, %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::unique_ptr.232" = type opaque
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::unique_ptr.232"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.250", %"class.std::__1::vector.250", %"class.std::__1::vector.257" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.246 }
%union.anon.246 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { i8**, i8**, %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i8** }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.259" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.268", %"class.viz::SurfaceId" }
%"class.absl::optional.268" = type { %"class.absl::optional_internal::optional_data.269" }
%"class.absl::optional_internal::optional_data.269" = type { %"class.absl::optional_internal::optional_data_base.270" }
%"class.absl::optional_internal::optional_data_base.270" = type { %"class.absl::optional_internal::optional_data_dtor_base.271" }
%"class.absl::optional_internal::optional_data_dtor_base.271" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.273" = type { %"class.absl::optional_internal::optional_data.274" }
%"class.absl::optional_internal::optional_data.274" = type { %"class.absl::optional_internal::optional_data_base.275" }
%"class.absl::optional_internal::optional_data_base.275" = type { %"class.absl::optional_internal::optional_data_dtor_base.276" }
%"class.absl::optional_internal::optional_data_dtor_base.276" = type { i8, %union.anon.277 }
%union.anon.277 = type { i32 }
%class.scoped_refptr.278 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%"class.base::RepeatingCallback.267" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.279, %"class.std::__1::unique_ptr.391", %"class.base::WeakPtrFactory.440" }
%class.scoped_refptr.279 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.281, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.357", %"class.absl::optional.362", %"class.absl::optional.315", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.382", i8, [7 x i8], %class.scoped_refptr.281, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.280" }>
%"class.base::RefCountedThreadSafe.280" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.288", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.294" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.294" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.281, %"class.std::__1::unique_ptr.295", %"class.absl::optional.305", %"struct.std::__1::atomic.311", i8, i8, i8, i8, i32, i32, %"class.absl::optional.315", %"class.std::__1::unique_ptr.320", i8, i64, %class.scoped_refptr.353, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.355", %"class.base::WeakPtrFactory.356" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.281, i8, %"class.mojo::ScopedHandleBase.298", %class.scoped_refptr.299, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.300", i8*, %"class.base::WeakPtrFactory.301" }
%"class.mojo::ScopedHandleBase.298" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.299 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.300" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.301" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.305" = type { %"class.absl::optional_internal::optional_data.306" }
%"class.absl::optional_internal::optional_data.306" = type { %"class.absl::optional_internal::optional_data_base.307" }
%"class.absl::optional_internal::optional_data_base.307" = type { %"class.absl::optional_internal::optional_data_dtor_base.308" }
%"class.absl::optional_internal::optional_data_dtor_base.308" = type { i8, %union.anon.309 }
%union.anon.309 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.310", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.310" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.323", i8, i64, %class.scoped_refptr.324, %class.scoped_refptr.349 }
%"class.base::RepeatingCallback.323" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.324 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.325", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.327", %"class.std::__1::map.338", i8, [7 x i8] }>
%"class.base::RefCounted.325" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.326 }
%class.scoped_refptr.326 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.327" = type { %"class.std::__1::__tree.328" }
%"class.std::__1::__tree.328" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.338" = type { %"class.std::__1::__tree.339" }
%"class.std::__1::__tree.339" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%class.scoped_refptr.349 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.353 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.354 }
%class.scoped_refptr.354 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.663", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.281, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.663" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr.355" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.absl::optional.357" = type { %"class.absl::optional_internal::optional_data.358" }
%"class.absl::optional_internal::optional_data.358" = type { %"class.absl::optional_internal::optional_data_base.359" }
%"class.absl::optional_internal::optional_data_base.359" = type { %"class.absl::optional_internal::optional_data_dtor_base.360" }
%"class.absl::optional_internal::optional_data_dtor_base.360" = type { i8, %union.anon.361 }
%union.anon.361 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.362" = type { %"class.absl::optional_internal::optional_data.363" }
%"class.absl::optional_internal::optional_data.363" = type { %"class.absl::optional_internal::optional_data_base.364" }
%"class.absl::optional_internal::optional_data_base.364" = type { %"class.absl::optional_internal::optional_data_dtor_base.365" }
%"class.absl::optional_internal::optional_data_dtor_base.365" = type { i8, [7 x i8], %union.anon.366 }
%union.anon.366 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.315" = type { %"class.absl::optional_internal::optional_data.316" }
%"class.absl::optional_internal::optional_data.316" = type { %"class.absl::optional_internal::optional_data_base.317" }
%"class.absl::optional_internal::optional_data_base.317" = type { %"class.absl::optional_internal::optional_data_dtor_base.318" }
%"class.absl::optional_internal::optional_data_dtor_base.318" = type { i8, %union.anon.319 }
%union.anon.319 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.367 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.367 = type { %"class.std::__1::map.370" }
%"class.std::__1::map.370" = type { %"class.std::__1::__tree.371" }
%"class.std::__1::__tree.371" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.381"*, i64 }
%"class.std::__1::unique_ptr.381" = type opaque
%"class.std::__1::map.382" = type { %"class.std::__1::__tree.383" }
%"class.std::__1::__tree.383" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%class.scoped_refptr.281 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.394", %"class.absl::optional.395", %"class.absl::optional.400", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.407", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.415", %"class.std::__1::map.426", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.435", i8, %class.scoped_refptr.281, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.436" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.394" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.395" = type { %"class.absl::optional_internal::optional_data.396" }
%"class.absl::optional_internal::optional_data.396" = type { %"class.absl::optional_internal::optional_data_base.397" }
%"class.absl::optional_internal::optional_data_base.397" = type { %"class.absl::optional_internal::optional_data_dtor_base.398" }
%"class.absl::optional_internal::optional_data_dtor_base.398" = type { i8, %union.anon.399 }
%union.anon.399 = type { %"class.base::TimeDelta" }
%"class.absl::optional.400" = type { %"class.absl::optional_internal::optional_data.401" }
%"class.absl::optional_internal::optional_data.401" = type { %"class.absl::optional_internal::optional_data_base.402" }
%"class.absl::optional_internal::optional_data_base.402" = type { %"class.absl::optional_internal::optional_data_dtor_base.403" }
%"class.absl::optional_internal::optional_data_dtor_base.403" = type { i8, %union.anon.404 }
%union.anon.404 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.281, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.405" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.405" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.406 }
%class.scoped_refptr.406 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.410", %class.scoped_refptr.411 }
%"class.base::RepeatingCallback.410" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.411 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.280", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.415" = type { %"class.std::__1::__tree.416" }
%"class.std::__1::__tree.416" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.417", %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::map.426" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.base::OnceCallback.435" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.436" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.440" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::EmbeddedFrameSinkClient"* }
%"class.mojo::Receiver.441" = type { %"class.mojo::internal::BindingState.442" }
%"class.mojo::internal::BindingState.442" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::SurfaceEmbedderStub" }
%"class.blink::mojom::blink::SurfaceEmbedderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::SurfaceEmbedder"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type opaque
%class.scoped_refptr.452 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.453", i8, %class.scoped_refptr.455, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.650" }
%"class.WTF::ThreadSafeRefCounted.453" = type { %"class.base::RefCountedThreadSafe.454" }
%"class.base::RefCountedThreadSafe.454" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.455 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.456", i64, %"class.WTF::Vector.458", %"class.WTF::Vector.463" }
%"class.WTF::RefCounted.456" = type { %"class.base::RefCounted.457" }
%"class.base::RefCounted.457" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.458" = type { %"class.WTF::VectorBuffer.459" }
%"class.WTF::VectorBuffer.459" = type { %"class.WTF::VectorBufferBase.460" }
%"class.WTF::VectorBufferBase.460" = type { i8*, i32, i32 }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.std::__1::unique_ptr.466"*, i32, i32 }
%"class.std::__1::unique_ptr.466" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageOrientation" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1606", %"class.blink::Member.1734", %"class.blink::Member.1736", %"class.blink::Member.1755", %"class.blink::Member.1757" }
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1593 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1593, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1609" }
%"class.std::__1::unique_ptr.1609" = type { %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.1611" }
%"struct.std::__1::__compressed_pair_elem.1611" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1612", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1618", %"class.std::__1::unique_ptr.1714", i8, %"class.absl::optional.1720", %class.scoped_refptr.1696, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1725" }
%"class.std::__1::unique_ptr.1612" = type { %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.1614" }
%"struct.std::__1::__compressed_pair_elem.1614" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1621, %class.scoped_refptr.1621, %class.scoped_refptr.1621, %class.scoped_refptr.1621, %class.scoped_refptr.1621, %class.scoped_refptr.1621, %class.scoped_refptr.1656, %class.scoped_refptr.1672, %class.scoped_refptr.1673, %class.scoped_refptr.1673, %class.scoped_refptr.1673, %class.scoped_refptr.1673, %class.scoped_refptr.1673, %class.scoped_refptr.1673, %class.scoped_refptr.1686, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1687, %class.scoped_refptr.1710 }
%class.scoped_refptr.1621 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1638" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1622", i8, i8, %class.scoped_refptr.1624, i32, i32 }
%"class.WTF::RefCounted.1622" = type { %"class.base::RefCounted.1623" }
%"class.base::RefCounted.1623" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1624 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1631, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1632", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1625" }
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1631 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1657", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1657" = type { %"class.WTF::RefCounted.1658", i8, i8, %class.scoped_refptr.1631, i32, i32 }
%"class.WTF::RefCounted.1658" = type { %"class.base::RefCounted.1659" }
%"class.base::RefCounted.1659" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1660" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1660" = type { %"class.absl::optional_internal::optional_data.1661" }
%"class.absl::optional_internal::optional_data.1661" = type { %"class.absl::optional_internal::optional_data_base.1662" }
%"class.absl::optional_internal::optional_data_base.1662" = type { %"class.absl::optional_internal::optional_data_dtor_base.1663" }
%"class.absl::optional_internal::optional_data_dtor_base.1663" = type { i8, %union.anon.1664 }
%union.anon.1664 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1665", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::vector.1665" = type { %"class.std::__1::__vector_base.1666" }
%"class.std::__1::__vector_base.1666" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1667" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1667" = type { %"struct.std::__1::__compressed_pair_elem.1668" }
%"struct.std::__1::__compressed_pair_elem.1668" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1632" = type { %"class.std::__1::__compressed_pair.1633" }
%"class.std::__1::__compressed_pair.1633" = type { %"struct.std::__1::__compressed_pair_elem.1634" }
%"struct.std::__1::__compressed_pair_elem.1634" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.1638" = type { %"class.std::__1::__compressed_pair.1639" }
%"class.std::__1::__compressed_pair.1639" = type { %"struct.std::__1::__compressed_pair_elem.1640" }
%"struct.std::__1::__compressed_pair_elem.1640" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1641", %"class.std::__1::unique_ptr.1647", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1641" = type { %"class.std::__1::__compressed_pair.1642" }
%"class.std::__1::__compressed_pair.1642" = type { %"struct.std::__1::__compressed_pair_elem.1643" }
%"struct.std::__1::__compressed_pair_elem.1643" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1656 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1672 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1673 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1674" }
%"class.blink::PaintPropertyNode.1674" = type { %"class.WTF::RefCounted.1675", i8, i8, %class.scoped_refptr.1677, i32, i32 }
%"class.WTF::RefCounted.1675" = type { %"class.base::RefCounted.1676" }
%"class.base::RefCounted.1676" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1677 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1624, %class.scoped_refptr.1678, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1679", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1678 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1688" }
%"class.blink::PaintPropertyNode.1688" = type { %"class.WTF::RefCounted.1689", i8, i8, %class.scoped_refptr.1678, i32, i32 }
%"class.WTF::RefCounted.1689" = type { %"class.base::RefCounted.1690" }
%"class.base::RefCounted.1690" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1685" }
%"class.base::internal::flat_tree.1685" = type { %"class.std::__1::vector.1097" }
%class.scoped_refptr.1686 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1687 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1699" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1624, %"class.absl::optional.1691", %class.scoped_refptr.1696, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1691" = type { %"class.absl::optional_internal::optional_data.1692" }
%"class.absl::optional_internal::optional_data.1692" = type { %"class.absl::optional_internal::optional_data_base.1693" }
%"class.absl::optional_internal::optional_data_base.1693" = type { %"class.absl::optional_internal::optional_data_dtor_base.1694" }
%"class.absl::optional_internal::optional_data_dtor_base.1694" = type { i8, [3 x i8], %union.anon.1695 }
%union.anon.1695 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1702", i32, [4 x i8] }>
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704" }
%"class.WTF::VectorBufferBase.1704" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1710 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1624, %class.scoped_refptr.1678, %class.scoped_refptr.1677 }
%"class.absl::optional.1720" = type { %"class.absl::optional_internal::optional_data.1721" }
%"class.absl::optional_internal::optional_data.1721" = type { %"class.absl::optional_internal::optional_data_base.1722" }
%"class.absl::optional_internal::optional_data_base.1722" = type { %"class.absl::optional_internal::optional_data_dtor_base.1723" }
%"class.absl::optional_internal::optional_data_dtor_base.1723" = type { i8, %union.anon.1724 }
%union.anon.1724 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1696 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1697", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1519, i32, %"struct.std::__1::atomic.34", %"struct.std::__1::atomic.34", i8, i8 }>
%class.sk_sp.1519 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.1520, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1521, %class.SkTDArray.1522, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.1520 = type { %"struct.std::__1::atomic.29" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1521 = type { i8*, i32, i32 }
%class.SkTDArray.1522 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1523 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.29", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1523 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.311", [3 x i8] }
%"class.WTF::RefCounted.1697" = type { %"class.base::RefCounted.1698" }
%"class.base::RefCounted.1698" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1725" = type { %"class.std::__1::__compressed_pair.1726" }
%"class.std::__1::__compressed_pair.1726" = type { %"struct.std::__1::__compressed_pair_elem.1727" }
%"struct.std::__1::__compressed_pair_elem.1727" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1593 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1582", %"class.std::__1::unique_ptr.1584" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1191", %"class.blink::DataRef.1287", %"class.blink::DataRef.1291", %"class.blink::DataRef.1497", %"class.blink::DataRef.1565", %"class.blink::DataRef.1569", %"class.blink::DataRef.1573", %"class.blink::DataRef.1577", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1126 }
%class.scoped_refptr.1126 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1127", %"class.blink::DataRef.1129", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1127" = type { %"class.base::RefCounted.1128" }
%"class.base::RefCounted.1128" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1129" = type { %class.scoped_refptr.1130 }
%class.scoped_refptr.1130 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1131", %"class.blink::Font" }
%"class.WTF::RefCounted.1131" = type { %"class.base::RefCounted.1132" }
%"class.base::RefCounted.1132" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1159 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1134, %class.scoped_refptr.1142, %class.scoped_refptr.1152, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1158 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1133 }
%class.scoped_refptr.1133 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1604", [4 x i8] }>
%"class.WTF::RefCounted.1604" = type { %"class.base::RefCounted.1605" }
%"class.base::RefCounted.1605" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1134 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1140", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1140" = type { %"class.base::RefCounted.1141" }
%"class.base::RefCounted.1141" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1142 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1143", %"class.WTF::RefCounted.1150", [4 x i8] }>
%"class.blink::FontSettings.1143" = type { %"class.WTF::Vector.1144" }
%"class.WTF::Vector.1144" = type { %"class.WTF::VectorBuffer.1145" }
%"class.WTF::VectorBuffer.1145" = type { %"class.WTF::VectorBufferBase.1146" }
%"class.WTF::VectorBufferBase.1146" = type { %"class.blink::FontTagValuePair.1147"*, i32, i32 }
%"class.blink::FontTagValuePair.1147" = type { i32, float }
%"class.WTF::RefCounted.1150" = type { %"class.base::RefCounted.1151" }
%"class.base::RefCounted.1151" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1152 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1153", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1155, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1153" = type { %"class.base::RefCounted.1154" }
%"class.base::RefCounted.1154" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1155 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1156", [4 x i8] }>
%"class.WTF::RefCounted.1156" = type { %"class.base::RefCounted.1157" }
%"class.base::RefCounted.1157" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1158 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1159 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1160", %"class.WTF::Vector.1162", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.1187", i32, i16, i8, %"class.base::WeakPtr.1189" }
%"class.WTF::RefCounted.1160" = type { %"class.base::RefCounted.1161" }
%"class.base::RefCounted.1161" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1162" = type { %"class.WTF::VectorBuffer.1163" }
%"class.WTF::VectorBuffer.1163" = type { %"class.WTF::VectorBufferBase.1164", [8 x i8] }
%"class.WTF::VectorBufferBase.1164" = type { %class.scoped_refptr.1165*, i32, i32 }
%class.scoped_refptr.1165 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1166", [4 x i8] }>
%"class.WTF::RefCounted.1166" = type { %"class.base::RefCounted.1167" }
%"class.base::RefCounted.1167" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1177", %class.scoped_refptr.1184, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1166" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1170", %"class.absl::optional.1170", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1170" = type { %"class.absl::optional_internal::optional_data.1171" }
%"class.absl::optional_internal::optional_data.1171" = type { %"class.absl::optional_internal::optional_data_base.1172" }
%"class.absl::optional_internal::optional_data_base.1172" = type { %"class.absl::optional_internal::optional_data_dtor_base.1173" }
%"class.absl::optional_internal::optional_data_dtor_base.1173" = type { i8, %union.anon.1174 }
%union.anon.1174 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.1175, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1176, i8, [7 x i8] }>
%class.sk_sp.1175 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.29" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1176 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.1175, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1180, %class.scoped_refptr.1180 }
%class.scoped_refptr.1180 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1184 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1185", [4 x i8] }>
%"class.WTF::RefCounted.1185" = type { %"class.base::RefCounted.1186" }
%"class.base::RefCounted.1186" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.1187" = type { %"class.blink::PersistentBase.1188" }
%"class.blink::PersistentBase.1188" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr.1189" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1190, i8, i8, i8, i8 }>
%union.anon.1190 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1191" = type { %class.scoped_refptr.1192 }
%class.scoped_refptr.1192 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"class.blink::DataRef.1195", %"class.blink::DataRef.1252", %"class.WTF::Vector.1256", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1260, %class.scoped_refptr.1269, %"class.blink::Persistent.1277", %"class.blink::Persistent.1279", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1195" = type { %class.scoped_refptr.1196 }
%class.scoped_refptr.1196 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1197", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1199, %class.scoped_refptr.1207, %"class.blink::Persistent.1239", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1197" = type { %"class.base::RefCounted.1198" }
%"class.base::RefCounted.1198" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1199 = type { %"class.base::RefCountedData.1200"* }
%"class.base::RefCountedData.1200" = type { %"class.base::RefCountedThreadSafe.1201", %"class.WTF::Vector.1202" }
%"class.base::RefCountedThreadSafe.1201" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1207 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1208", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1210", %"class.blink::Persistent.1230" }
%"class.WTF::HashMap.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"struct.WTF::KeyValuePair.1214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1214" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1215 }
%class.scoped_refptr.1215 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1216", %"class.WTF::Vector.1218", %"class.WTF::Vector.1223", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1216" = type { %"class.base::RefCounted.1217" }
%"class.base::RefCounted.1217" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1218" = type { %"class.WTF::VectorBuffer.1219" }
%"class.WTF::VectorBuffer.1219" = type { %"class.WTF::VectorBufferBase.1220" }
%"class.WTF::VectorBufferBase.1220" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1226 }
%union.anon.1226 = type { double }
%"class.blink::Persistent.1230" = type { %"class.blink::PersistentBase.1231" }
%"class.blink::PersistentBase.1231" = type { %"class.blink::HeapHashMap.1232"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::HeapHashMap.1232" = type { %"class.WTF::HashMap.1235" }
%"class.WTF::HashMap.1235" = type { %"class.WTF::HashTable.1236" }
%"class.WTF::HashTable.1236" = type <{ %"struct.WTF::KeyValuePair.1238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1238" = type opaque
%"class.blink::Persistent.1239" = type { %"class.blink::PersistentBase.1240" }
%"class.blink::PersistentBase.1240" = type { %"class.blink::HeapVector.1241"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::HeapVector.1241" = type { %"class.WTF::Vector.1244" }
%"class.WTF::Vector.1244" = type { %"class.WTF::VectorBuffer.1245" }
%"class.WTF::VectorBuffer.1245" = type { %"class.WTF::VectorBufferBase.1246" }
%"class.WTF::VectorBufferBase.1246" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1247", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1252" = type { %class.scoped_refptr.1253 }
%class.scoped_refptr.1253 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1254", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1254" = type { %"class.base::RefCounted.1255" }
%"class.base::RefCounted.1255" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.1257" }
%"class.WTF::VectorBuffer.1257" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1260 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1261", %"class.WTF::Vector.1263" }
%"class.WTF::RefCounted.1261" = type { %"class.base::RefCounted.1262" }
%"class.base::RefCounted.1262" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { %"struct.std::__1::pair.1266"*, i32, i32 }
%"struct.std::__1::pair.1266" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1269 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1270", [4 x i8], %"class.WTF::Vector.1272" }
%"class.WTF::RefCounted.1270" = type { %"class.base::RefCounted.1271" }
%"class.base::RefCounted.1271" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1272" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1274", [28 x i8] }>
%"class.WTF::VectorBufferBase.1274" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1277" = type { %"class.blink::PersistentBase.1278" }
%"class.blink::PersistentBase.1278" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::Persistent.1279" = type { %"class.blink::PersistentBase.1280" }
%"class.blink::PersistentBase.1280" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1283", %"class.blink::Member.1285" }
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1287" = type { %class.scoped_refptr.1288 }
%class.scoped_refptr.1288 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1289", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1289" = type { %"class.base::RefCounted.1290" }
%"class.base::RefCounted.1290" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1291" = type { %class.scoped_refptr.1292 }
%class.scoped_refptr.1292 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1293", [4 x i8], %"class.blink::DataRef.1295", %"class.blink::DataRef.1361", %"class.blink::TransformOperations", %class.scoped_refptr.1269, %"class.blink::Persistent.1491", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1293" = type { %"class.base::RefCounted.1294" }
%"class.base::RefCounted.1294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1295" = type { %class.scoped_refptr.1296 }
%class.scoped_refptr.1296 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1297", [4 x i8], %"class.blink::DataRef.1299", %"class.blink::Persistent.1337", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1297" = type { %"class.base::RefCounted.1298" }
%"class.base::RefCounted.1298" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1299" = type { %class.scoped_refptr.1300 }
%class.scoped_refptr.1300 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1301", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1319, %class.scoped_refptr.1322, %class.scoped_refptr.1325, %class.scoped_refptr.1328, %class.scoped_refptr.1329, %class.scoped_refptr.1330, %"class.blink::Persistent.1337", %"class.blink::Persistent.1352", %"class.absl::optional.1356", %"class.absl::optional.1356", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1301" = type { %"class.base::RefCounted.1302" }
%"class.base::RefCounted.1302" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1303", %"class.std::__1::unique_ptr.1308" }
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1308" = type { %"class.std::__1::__compressed_pair.1309" }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1311", %"class.WTF::Vector.1303", i32, i32 }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1319 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1320", [4 x i8] }>
%"class.WTF::RefCounted.1320" = type { %"class.base::RefCounted.1321" }
%"class.base::RefCounted.1321" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1322 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1323", [4 x i8] }>
%"class.WTF::RefCounted.1323" = type { %"class.base::RefCounted.1324" }
%"class.base::RefCounted.1324" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1325 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1326" }>
%"class.WTF::RefCounted.1326" = type { %"class.base::RefCounted.1327" }
%"class.base::RefCounted.1327" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1328 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1329 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1330 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1331", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1331" = type { %"class.base::RefCounted.1332" }
%"class.base::RefCounted.1332" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1333" }
%"class.blink::DataRef.1333" = type { %class.scoped_refptr.1334 }
%class.scoped_refptr.1334 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1277", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1335" }
%"class.WTF::RefCounted.1335" = type { %"class.base::RefCounted.1336" }
%"class.base::RefCounted.1336" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1352" = type { %"class.blink::PersistentBase.1353" }
%"class.blink::PersistentBase.1353" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1322, %"class.blink::Member.1247", i32, [4 x i8] }>
%"class.absl::optional.1356" = type { %"class.absl::optional_internal::optional_data.1357" }
%"class.absl::optional_internal::optional_data.1357" = type { %"class.absl::optional_internal::optional_data_base.1358" }
%"class.absl::optional_internal::optional_data_base.1358" = type { %"class.absl::optional_internal::optional_data_dtor_base.1359" }
%"class.absl::optional_internal::optional_data_dtor_base.1359" = type { i8, [3 x i8], %union.anon.1360 }
%union.anon.1360 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1337" = type { %"class.blink::PersistentBase.1338" }
%"class.blink::PersistentBase.1338" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1341" }
%"class.blink::HeapVector.1341" = type { %"class.WTF::Vector.1344" }
%"class.WTF::Vector.1344" = type { %"class.WTF::VectorBuffer.1345" }
%"class.WTF::VectorBuffer.1345" = type { %"class.WTF::VectorBufferBase.1346" }
%"class.WTF::VectorBufferBase.1346" = type { %"class.blink::Member.1347"*, i32, i32 }
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1361" = type { %class.scoped_refptr.1362 }
%class.scoped_refptr.1362 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1363", %"class.blink::DataRef.1365", %"class.blink::DataRef.1369", %"class.blink::DataRef.1378", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1402", %"class.std::__1::unique_ptr.1418", %"class.std::__1::unique_ptr.1457", %"class.std::__1::unique_ptr.1468", %"class.std::__1::unique_ptr.1479", %"class.WTF::Vector.1218", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1363" = type { %"class.base::RefCounted.1364" }
%"class.base::RefCounted.1364" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1365" = type { %class.scoped_refptr.1366 }
%class.scoped_refptr.1366 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1367", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1367" = type { %"class.base::RefCounted.1368" }
%"class.base::RefCounted.1368" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1369" = type { %class.scoped_refptr.1370 }
%class.scoped_refptr.1370 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1371", [4 x i8], %"class.WTF::Vector.1373", i8, [7 x i8] }>
%"class.WTF::RefCounted.1371" = type { %"class.base::RefCounted.1372" }
%"class.base::RefCounted.1372" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { i32*, i32, i32 }
%"class.blink::DataRef.1378" = type { %class.scoped_refptr.1379 }
%class.scoped_refptr.1379 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1380", [4 x i8], %"class.WTF::HashMap.1382", %"class.WTF::HashMap.1382", %"class.WTF::HashMap.1382", %"class.WTF::HashMap.1382", %"class.WTF::HashMap.1382", %"class.WTF::HashMap.1382", %"class.WTF::HashMap.1392", %"class.WTF::HashMap.1392", %"class.WTF::HashMap.1392", %"class.WTF::HashMap.1392", %"class.WTF::HashMap.1397", %"class.WTF::Vector.1303", %"class.WTF::Vector.1303", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1380" = type { %"class.base::RefCounted.1381" }
%"class.base::RefCounted.1381" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1382" = type { %"class.WTF::HashTable.1383" }
%"class.WTF::HashTable.1383" = type <{ %"struct.WTF::KeyValuePair.1386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1386" = type { %"class.WTF::String", %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1392" = type { %"class.WTF::HashTable.1393" }
%"class.WTF::HashTable.1393" = type <{ %"struct.WTF::KeyValuePair.1396"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1396" = type { i64, %"class.WTF::Vector.1218" }
%"class.WTF::HashMap.1397" = type { %"class.WTF::HashTable.1398" }
%"class.WTF::HashTable.1398" = type <{ %"struct.WTF::KeyValuePair.1401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1401" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1402" = type { %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1405" }
%"class.WTF::HashMap.1405" = type { %"class.WTF::HashTable.1406" }
%"class.WTF::HashTable.1406" = type <{ %"struct.WTF::KeyValuePair.1409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1409" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1410", %"class.absl::optional.1410", %"class.absl::optional.1410" }
%"class.absl::optional.1410" = type { %"class.absl::optional_internal::optional_data.1411" }
%"class.absl::optional_internal::optional_data.1411" = type { %"class.absl::optional_internal::optional_data_base.1412" }
%"class.absl::optional_internal::optional_data_base.1412" = type { %"class.absl::optional_internal::optional_data_dtor_base.1413" }
%"class.absl::optional_internal::optional_data_dtor_base.1413" = type { i8, %union.anon.1414 }
%union.anon.1414 = type { i32 }
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1256", %"class.WTF::Vector.1434", %"class.WTF::Vector.1421", %"class.WTF::Vector.1439", %"class.WTF::Vector.1444", %"class.WTF::Vector.1449" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1421", %"class.WTF::Vector.1421", %"class.WTF::Vector.1426" }
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %class.scoped_refptr.1429*, i32, i32 }
%class.scoped_refptr.1429 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1430", i32 }
%"class.WTF::ThreadSafeRefCounted.1430" = type { %"class.base::RefCountedThreadSafe.1431" }
%"class.base::RefCountedThreadSafe.1431" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1421" = type { %"class.WTF::VectorBuffer.1422" }
%"class.WTF::VectorBuffer.1422" = type { %"class.WTF::VectorBufferBase.1423" }
%"class.WTF::VectorBufferBase.1423" = type { double*, i32, i32 }
%"class.WTF::Vector.1439" = type { %"class.WTF::VectorBuffer.1440" }
%"class.WTF::VectorBuffer.1440" = type { %"class.WTF::VectorBufferBase.1441" }
%"class.WTF::VectorBufferBase.1441" = type { i32*, i32, i32 }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446" }
%"class.WTF::VectorBufferBase.1446" = type { i32*, i32, i32 }
%"class.WTF::Vector.1449" = type { %"class.WTF::VectorBuffer.1450" }
%"class.WTF::VectorBuffer.1450" = type { %"class.WTF::VectorBufferBase.1451" }
%"class.WTF::VectorBufferBase.1451" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1460" }
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1468" = type { %"class.std::__1::__compressed_pair.1469" }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1471" }
%"class.WTF::Vector.1471" = type { %"class.WTF::VectorBuffer.1472" }
%"class.WTF::VectorBuffer.1472" = type { %"class.WTF::VectorBufferBase.1473" }
%"class.WTF::VectorBufferBase.1473" = type { %"class.blink::Persistent.1277"*, i32, i32 }
%"class.std::__1::unique_ptr.1479" = type { %"class.std::__1::__compressed_pair.1480" }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.1481" }
%"struct.std::__1::__compressed_pair_elem.1481" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1277", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1485" }
%"class.WTF::Vector.1485" = type { %"class.WTF::VectorBuffer.1486" }
%"class.WTF::VectorBuffer.1486" = type { %"class.WTF::VectorBufferBase.1487" }
%"class.WTF::VectorBufferBase.1487" = type { %class.scoped_refptr.1488*, i32, i32 }
%class.scoped_refptr.1488 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1326", [4 x i8] }>
%"class.blink::Persistent.1491" = type { %"class.blink::PersistentBase.1492" }
%"class.blink::PersistentBase.1492" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1495" }
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1497" = type { %class.scoped_refptr.1498 }
%class.scoped_refptr.1498 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1499", [4 x i8], %"class.blink::DataRef.1501", %"class.blink::DataRef.1505", %"class.blink::DataRef.1527", %"class.blink::DataRef.1545", %"class.blink::DataRef.1557", %"class.blink::DataRef.1561", %class.scoped_refptr.1531, i32, [4 x i8] }>
%"class.WTF::RefCounted.1499" = type { %"class.base::RefCounted.1500" }
%"class.base::RefCounted.1500" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1501" = type { %class.scoped_refptr.1502 }
%class.scoped_refptr.1502 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1503", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1503" = type { %"class.base::RefCounted.1504" }
%"class.base::RefCounted.1504" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1505" = type { %class.scoped_refptr.1506 }
%class.scoped_refptr.1506 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1507", %class.scoped_refptr.1509, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1507" = type { %"class.base::RefCounted.1508" }
%"class.base::RefCounted.1508" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1509 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1510", %"class.std::__1::unique_ptr.1516", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1323" }>
%"class.std::__1::unique_ptr.1510" = type { %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.1512" }
%"struct.std::__1::__compressed_pair_elem.1512" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1527" = type { %class.scoped_refptr.1528 }
%class.scoped_refptr.1528 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1529", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1529" = type { %"class.base::RefCounted.1530" }
%"class.base::RefCounted.1530" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1531, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1545" = type { %class.scoped_refptr.1546 }
%class.scoped_refptr.1546 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1547", [4 x i8], %class.scoped_refptr.1549, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1549 = type { %"class.base::RefCountedData.1550"* }
%"class.base::RefCountedData.1550" = type { %"class.base::RefCountedThreadSafe.1551", %"class.WTF::Vector.1552" }
%"class.base::RefCountedThreadSafe.1551" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1552" = type { %"class.WTF::VectorBuffer.1553" }
%"class.WTF::VectorBuffer.1553" = type { %"class.WTF::VectorBufferBase.1554" }
%"class.WTF::VectorBufferBase.1554" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1557" = type { %class.scoped_refptr.1558 }
%class.scoped_refptr.1558 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1559", %class.scoped_refptr.1531, %class.scoped_refptr.1531, %class.scoped_refptr.1531 }
%"class.WTF::RefCounted.1559" = type { %"class.base::RefCounted.1560" }
%"class.base::RefCounted.1560" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1561" = type { %class.scoped_refptr.1562 }
%class.scoped_refptr.1562 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1563", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1563" = type { %"class.base::RefCounted.1564" }
%"class.base::RefCounted.1564" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1531 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1532", %"class.blink::Persistent.1534", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1532" = type { %"class.base::RefCounted.1533" }
%"class.base::RefCounted.1533" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1534" = type { %"class.blink::PersistentBase.1535" }
%"class.blink::PersistentBase.1535" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.767" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.680", %"class.blink::HeapHashMap.1538" }
%"class.blink::HeapHashMap.1538" = type { %"class.WTF::HashMap.1541" }
%"class.WTF::HashMap.1541" = type { %"class.WTF::HashTable.1542" }
%"class.WTF::HashTable.1542" = type <{ %"struct.WTF::KeyValuePair.1544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1544" = type opaque
%"class.blink::DataRef.1565" = type { %class.scoped_refptr.1566 }
%class.scoped_refptr.1566 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1567", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1567" = type { %"class.base::RefCounted.1568" }
%"class.base::RefCounted.1568" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1569" = type { %class.scoped_refptr.1570 }
%class.scoped_refptr.1570 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1571", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1571" = type { %"class.base::RefCounted.1572" }
%"class.base::RefCounted.1572" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1573" = type { %class.scoped_refptr.1574 }
%class.scoped_refptr.1574 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1575", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1575" = type { %"class.base::RefCounted.1576" }
%"class.base::RefCounted.1576" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1577" = type { %class.scoped_refptr.1578 }
%class.scoped_refptr.1578 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1579", %class.scoped_refptr.1581 }
%"class.WTF::RefCounted.1579" = type { %"class.base::RefCounted.1580" }
%"class.base::RefCounted.1580" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1581 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1602", %"class.blink::StyleVariables", %class.scoped_refptr.1581 }
%"class.WTF::RefCounted.1602" = type { %"class.base::RefCounted.1603" }
%"class.base::RefCounted.1603" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1582" = type { %"class.base::RefCounted.1583" }
%"class.base::RefCounted.1583" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1587" }
%"class.std::__1::unique_ptr.1587" = type { %"class.std::__1::__compressed_pair.1588" }
%"class.std::__1::__compressed_pair.1588" = type { %"struct.std::__1::__compressed_pair_elem.1589" }
%"struct.std::__1::__compressed_pair_elem.1589" = type { %"class.WTF::Vector.1590"* }
%"class.WTF::Vector.1590" = type { %"class.WTF::VectorBuffer.1591" }
%"class.WTF::VectorBuffer.1591" = type { %"class.WTF::VectorBufferBase.1592", [32 x i8] }
%"class.WTF::VectorBufferBase.1592" = type { %class.scoped_refptr.1593*, i32, i32 }
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1740", %"class.blink::HeapHashSet.1749" }
%"class.blink::HeapVector.1740" = type { %"class.WTF::Vector.1743" }
%"class.WTF::Vector.1743" = type { %"class.WTF::VectorBuffer.1744" }
%"class.WTF::VectorBuffer.1744" = type { %"class.WTF::VectorBufferBase.1745" }
%"class.WTF::VectorBufferBase.1745" = type { %"class.blink::Member.1746"*, i32, i32 }
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1749" = type { %"class.WTF::HashSet.1752" }
%"class.WTF::HashSet.1752" = type { %"class.WTF::HashTable.1753" }
%"class.WTF::HashTable.1753" = type <{ %"class.blink::Member.1746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::HeapHashSet.1759"* }
%"class.blink::HeapHashSet.1759" = type opaque
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1118, %class.sk_sp.1075, %class.sk_sp.1119, %class.sk_sp.1112, %class.sk_sp.1120, %class.sk_sp.205, i32, float, float, i32, %union.anon.1121, [4 x i8] }>
%class.sk_sp.1118 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1119 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1120 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.1121 = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.29", [4 x i8] }>

$_ZN5blink11IsHTMLSpaceIDsEEbT_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm13EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink10TraceTraitINS_14CanvasGradientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CanvasPatternEE5TraceEPNS_7VisitorEPKv = comdat any

@.str = private unnamed_addr constant [13 x i8] c"currentcolor\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

@_ZN5blink11CanvasStyleC1Ej = hidden unnamed_addr alias void (%"class.blink::CanvasStyle"*, i32), void (%"class.blink::CanvasStyle"*, i32)* @_ZN5blink11CanvasStyleC2Ej
@_ZN5blink11CanvasStyleC1EPNS_14CanvasGradientE = hidden unnamed_addr alias void (%"class.blink::CanvasStyle"*, %"class.blink::CanvasGradient"*), void (%"class.blink::CanvasStyle"*, %"class.blink::CanvasGradient"*)* @_ZN5blink11CanvasStyleC2EPNS_14CanvasGradientE
@_ZN5blink11CanvasStyleC1EPNS_13CanvasPatternE = hidden unnamed_addr alias void (%"class.blink::CanvasStyle"*, %"class.blink::CanvasPattern"*), void (%"class.blink::CanvasStyle"*, %"class.blink::CanvasPattern"*)* @_ZN5blink11CanvasStyleC2EPNS_13CanvasPatternE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24ParseColorOrCurrentColorERNS_5ColorERKN3WTF6StringEPNS_17HTMLCanvasElementE(%"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLCanvasElement"* readonly) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::Color", align 4
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEPFbDsE(%"class.WTF::String"* %1, i1 (i16)* nonnull @_ZN5blink11IsHTMLSpaceIDsEEbT_) #6
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.blink::HTMLCanvasElement"* %2, null
  br i1 %11, label %60, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %12
  %18 = and i32 %14, 12
  %19 = icmp eq i32 %18, 0
  %20 = and i32 %14, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %19, label %23, label %34

23:                                               ; preds = %17
  br i1 %21, label %30, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %28, i64 0, i32 2, i32 0
  br label %49

30:                                               ; preds = %23
  %31 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 2, i32 0
  br label %49

34:                                               ; preds = %17
  br i1 %21, label %39, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %37 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %37, i64 0, i32 1, i32 0, i32 0
  br label %41

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi %"class.blink::NodeRenderingData"** [ %38, %35 ], [ %40, %39 ]
  %43 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %43, i64 0, i32 1
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = icmp eq %"class.blink::LayoutObject"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 5, i32 0
  br label %49

49:                                               ; preds = %47, %30, %24
  %50 = phi %"class.blink::ComputedStyle"** [ %48, %47 ], [ %29, %24 ], [ %33, %30 ]
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %50, align 8
  %52 = icmp eq %"class.blink::ComputedStyle"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = lshr i160 %56, 114
  %58 = trunc i160 %57 to i32
  %59 = and i32 %58, 1
  br label %60

60:                                               ; preds = %3, %12, %41, %49, %53
  %61 = phi i32 [ %59, %53 ], [ 0, %3 ], [ 0, %12 ], [ 0, %49 ], [ 0, %41 ]
  %62 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #6
  %63 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %65, align 8
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %66, i64* %67, align 8
  br label %75

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %74 = bitcast i8** %73 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %74, align 8
  br label %75

75:                                               ; preds = %68, %64
  %76 = phi i32 [ %71, %68 ], [ 0, %64 ]
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %76, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm13EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [13 x i8]* nonnull dereferenceable(13) @.str) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #6
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* dereferenceable(4) %0, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext true) #6
  br i1 %80, label %84, label %81

81:                                               ; preds = %79
  %82 = call zeroext i1 @_ZN5blink9CSSParser16ParseSystemColorERNS_5ColorERKN3WTF6StringENS_5mojom11ColorSchemeE(%"class.blink::Color"* dereferenceable(4) %0, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 %61) #6
  %83 = select i1 %82, i32 2, i32 3
  br label %84

84:                                               ; preds = %75, %79, %81
  %85 = phi i32 [ 1, %75 ], [ 0, %79 ], [ %83, %81 ]
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #6
  br label %101

101:                                              ; preds = %84, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  switch i32 %85, label %144 [
    i32 0, label %145
    i32 2, label %145
    i32 1, label %102
    i32 3, label %143
  ]

102:                                              ; preds = %101
  br i1 %11, label %140, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 256
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %140, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::HTMLCanvasElement", %"class.blink::HTMLCanvasElement"* %2, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %110 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %109, align 8
  %111 = icmp eq %"class.blink::ElementData"* %110, null
  br i1 %111, label %140, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %110, i64 0, i32 1, i32 0, i32 0
  %114 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %113, align 8
  %115 = icmp eq %"class.blink::CSSPropertyValueSet"* %114, null
  br i1 %115, label %140, label %116

116:                                              ; preds = %112
  %117 = bitcast %"class.blink::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #6
  %118 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %5, i64 0, i32 0
  store i32 -16777216, i32* %118, align 4
  %119 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #6
  %120 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* nonnull %114, i32 2) #6
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %121, align 8
  %122 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false) #6
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #6
  br label %138

138:                                              ; preds = %137, %134, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #6
  %139 = load i32, i32* %118, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #6
  br label %140

140:                                              ; preds = %102, %103, %108, %112, %138
  %141 = phi i32 [ %139, %138 ], [ -16777216, %112 ], [ -16777216, %102 ], [ -16777216, %103 ], [ -16777216, %108 ]
  %142 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %0, i64 0, i32 0
  store i32 %141, i32* %142, align 4
  br label %145

143:                                              ; preds = %101
  br label %145

144:                                              ; preds = %101
  unreachable

145:                                              ; preds = %101, %101, %143, %140
  %146 = phi i1 [ false, %143 ], [ true, %140 ], [ true, %101 ], [ true, %101 ]
  ret i1 %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEPFbDsE(%"class.WTF::String"*, i1 (i16)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11IsHTMLSpaceIDsEEbT_(i16 zeroext) #3 comdat {
  %2 = icmp ult i16 %0, 33
  br i1 %2, label %3, label %11

3:                                                ; preds = %1
  %4 = add i16 %0, -9
  %5 = icmp ult i16 %4, 24
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = zext i16 %4 to i24
  %8 = lshr i24 -8388581, %7
  %9 = and i24 %8, 1
  %10 = icmp ne i24 %9, 0
  ret i1 %10

11:                                               ; preds = %3, %1
  ret i1 false
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11CanvasStyleC2Ej(%"class.blink::CanvasStyle"* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.blink::CanvasGradient"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11CanvasStyleC2EPNS_14CanvasGradientE(%"class.blink::CanvasStyle"* nocapture, %"class.blink::CanvasGradient"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 0
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CanvasGradient"* %1, %"class.blink::CanvasGradient"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CanvasPattern"* null, %"class.blink::CanvasPattern"** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11CanvasStyleC2EPNS_13CanvasPatternE(%"class.blink::CanvasStyle"* nocapture, %"class.blink::CanvasPattern"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 0
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CanvasGradient"* null, %"class.blink::CanvasGradient"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CanvasPattern"* %1, %"class.blink::CanvasPattern"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11CanvasStyle12ApplyToFlagsERN2cc10PaintFlagsE(%"class.blink::CanvasStyle"* nocapture readonly, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 4
  %4 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %35 [
    i32 0, label %6
    i32 1, label %22
    i32 2, label %28
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %class.sk_sp.1075, %class.sk_sp.1075* %7, i64 0, i32 0
  %9 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %8, align 8
  %10 = bitcast %class.sk_sp.1075* %7 to i64*
  store i64 0, i64* %10, align 8
  %11 = icmp eq %"class.cc::PaintShader"* %9, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.cc::PaintShader", %"class.cc::PaintShader"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %35

16:                                               ; preds = %12
  %17 = bitcast %"class.cc::PaintShader"* %9 to %class.SkRefCntBase*
  %18 = bitcast %"class.cc::PaintShader"* %9 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  tail call void %21(%class.SkRefCntBase* nonnull %17) #6
  br label %35

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::CanvasGradient"*, %"class.blink::CanvasGradient"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CanvasGradient", %"class.blink::CanvasGradient"* %24, i64 0, i32 1, i32 0
  %26 = load %"class.blink::Gradient"*, %"class.blink::Gradient"** %25, align 8
  %27 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #6
  tail call void @_ZNK5blink8Gradient12ApplyToFlagsERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Gradient"* %26, %"class.cc::PaintFlags"* dereferenceable(72) %1, %class.SkMatrix* dereferenceable(40) %27) #6
  br label %35

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::CanvasPattern"*, %"class.blink::CanvasPattern"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::CanvasPattern", %"class.blink::CanvasPattern"* %30, i64 0, i32 1, i32 0
  %32 = load %"class.blink::Pattern"*, %"class.blink::Pattern"** %31, align 8
  %33 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.blink::CanvasPattern", %"class.blink::CanvasPattern"* %30, i64 0, i32 2
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %3, %"class.blink::AffineTransform"* dereferenceable(48) %34) #6
  call void @_ZNK5blink7Pattern12ApplyToFlagsERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Pattern"* %32, %"class.cc::PaintFlags"* dereferenceable(72) %1, %class.SkMatrix* nonnull dereferenceable(40) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #6
  br label %35

35:                                               ; preds = %6, %12, %16, %2, %28, %22
  ret void
}

declare void @_ZNK5blink8Gradient12ApplyToFlagsERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Gradient"*, %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare void @_ZNK5blink7Pattern12ApplyToFlagsERN2cc10PaintFlagsERK8SkMatrix(%"class.blink::Pattern"*, %"class.cc::PaintFlags"* dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* sret, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink11CanvasStyle10PaintColorEv(%"class.blink::CanvasStyle"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ -16777216, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11CanvasStyle5TraceEPNS_7VisitorE(%"class.blink::CanvasStyle"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.1065"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14CanvasGradientEE5TraceEPNS_7VisitorEPKv) #6
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::CanvasStyle", %"class.blink::CanvasStyle"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.1113"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CanvasPatternEE5TraceEPNS_7VisitorEPKv) #6
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm13EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [13 x i8]* dereferenceable(13)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %222, label %80

62:                                               ; preds = %222, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %222 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %222, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %62 ], [ false, %45 ], [ true, %222 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [13 x i8], [13 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  ret i1 %221

222:                                              ; preds = %45
  %223 = icmp eq i64 %61, 12
  br i1 %223, label %80, label %62
}

declare zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink9CSSParser16ParseSystemColorERNS_5ColorERKN3WTF6StringENS_5mojom11ColorSchemeE(%"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14CanvasGradientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CanvasPatternEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
