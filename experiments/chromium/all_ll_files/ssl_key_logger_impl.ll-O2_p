; ModuleID = '../../net/ssl/ssl_key_logger_impl.cc'
source_filename = "../../net/ssl/ssl_key_logger_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.net::SSLKeyLoggerImpl" = type { %"class.net::SSLKeyLogger", %class.scoped_refptr }
%"class.net::SSLKeyLogger" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::SSLKeyLoggerImpl::Core"* }
%"class.net::SSLKeyLoggerImpl::Core" = type { %"class.base::RefCountedThreadSafe", %class.scoped_refptr.1, %"class.std::__1::unique_ptr", %"class.base::Lock", i8, %"class.std::__1::vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct._IO_FILE* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::basic_string"* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2", [4 x i8] }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3net16SSLKeyLoggerImpl4Core8OpenFileERKN4base8FilePathE = comdat any

$_ZN3net16SSLKeyLoggerImpl4Core9WriteLineERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = comdat any

$_ZN3net16SSLKeyLoggerImpl4Core12OpenFileImplERKN4base8FilePathE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJ13scoped_refptrIS5_ES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJ13scoped_refptrIS4_ES5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3net16SSLKeyLoggerImpl4Core5FlushEv = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvvEJ13scoped_refptrIS5_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvvEJ13scoped_refptrIS4_EEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3net16SSLKeyLoggerImpl4CoreD2Ev = comdat any

@_ZTVN3net16SSLKeyLoggerImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::SSLKeyLoggerImpl"*)* @_ZN3net16SSLKeyLoggerImplD2Ev to i8*), i8* bitcast (void (%"class.net::SSLKeyLoggerImpl"*)* @_ZN3net16SSLKeyLoggerImplD0Ev to i8*), i8* bitcast (void (%"class.net::SSLKeyLoggerImpl"*, %"class.std::__1::basic_string"*)* @_ZN3net16SSLKeyLoggerImpl9WriteLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"OpenFile\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"../../net/ssl/ssl_key_logger_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"WriteLine\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"# Some lines were dropped due to slow writes.\0A\00", align 1
@.ref.tmp = private constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 -128, i8 0, i8 1, i8 0, i8 0 }, align 1

@_ZN3net16SSLKeyLoggerImplC1ERKN4base8FilePathE = hidden unnamed_addr alias void (%"class.net::SSLKeyLoggerImpl"*, %"class.base::FilePath"*), void (%"class.net::SSLKeyLoggerImpl"*, %"class.base::FilePath"*)* @_ZN3net16SSLKeyLoggerImplC2ERKN4base8FilePathE
@_ZN3net16SSLKeyLoggerImplC1EN4base4FileE = hidden unnamed_addr alias void (%"class.net::SSLKeyLoggerImpl"*, %"class.base::File"*), void (%"class.net::SSLKeyLoggerImpl"*, %"class.base::File"*)* @_ZN3net16SSLKeyLoggerImplC2EN4base4FileE
@_ZN3net16SSLKeyLoggerImplD1Ev = hidden unnamed_addr alias void (%"class.net::SSLKeyLoggerImpl"*), void (%"class.net::SSLKeyLoggerImpl"*)* @_ZN3net16SSLKeyLoggerImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16SSLKeyLoggerImplC2ERKN4base8FilePathE(%"class.net::SSLKeyLoggerImpl"* nocapture, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net16SSLKeyLoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = tail call i8* @_Znwm(i64 96) #10
  %5 = bitcast i8* %4 to %"class.net::SSLKeyLoggerImpl::Core"*
  %6 = bitcast i8* %4 to i32*
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to %"class.base::SequencedTaskRunner"**
  %9 = getelementptr inbounds i8, i8* %4, i64 24
  %10 = bitcast i8* %9 to %"class.base::internal::LockImpl"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %10) #11
  %11 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #11
  %14 = ptrtoint %"class.base::SequencedTaskRunner"* %13 to i64
  %15 = bitcast i8* %7 to i64*
  %16 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %8, align 8
  store i64 %14, i64* %15, align 8
  %17 = icmp eq %"class.base::SequencedTaskRunner"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %16, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.2"* %24 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %25) #11
  br label %26

26:                                               ; preds = %2, %18, %23
  %27 = atomicrmw add i32* %6, i32 1 monotonic
  %28 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 1, i32 0
  %29 = bitcast %"class.net::SSLKeyLoggerImpl::Core"** %28 to i8**
  store i8* %4, i8** %29, align 8
  tail call void @_ZN3net16SSLKeyLoggerImpl4Core8OpenFileERKN4base8FilePathE(%"class.net::SSLKeyLoggerImpl::Core"* nonnull %5, %"class.base::FilePath"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16SSLKeyLoggerImpl4Core8OpenFileERKN4base8FilePathE(%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 1, i32 0
  %6 = bitcast %"class.base::SequencedTaskRunner"** %5 to %"class.base::TaskRunner"**
  %7 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %6, align 8
  %8 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 58) #11
  %9 = call i8* @_Znwm(i64 80) #10, !noalias !2
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJ13scoped_refptrIS5_ES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJ13scoped_refptrIS4_ES5_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !2
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"*)* @_ZN3net16SSLKeyLoggerImpl4Core12OpenFileImplERKN4base8FilePathE to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !2
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to %"class.net::SSLKeyLoggerImpl::Core"**
  store %"class.net::SSLKeyLoggerImpl::Core"* %0, %"class.net::SSLKeyLoggerImpl::Core"** %14, align 8, !noalias !2
  %15 = icmp eq %"class.net::SSLKeyLoggerImpl::Core"* %0, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !2
  br label %19

19:                                               ; preds = %2, %16
  %20 = getelementptr inbounds i8, i8* %9, i64 56
  %21 = bitcast i8* %20 to %"class.base::FilePath"*
  call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %21, %"class.base::FilePath"* dereferenceable(24) %1) #11, !noalias !2
  %22 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %9, i8** %22, align 8, !alias.scope !2
  %23 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %7, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16SSLKeyLoggerImplC2EN4base4FileE(%"class.net::SSLKeyLoggerImpl"* nocapture, %"class.base::File"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::File", align 8
  %4 = alloca %"class.base::File", align 8
  %5 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net16SSLKeyLoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = tail call i8* @_Znwm(i64 96) #10
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to %"class.base::SequencedTaskRunner"**
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = bitcast i8* %10 to %"class.base::internal::LockImpl"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %11) #11
  %12 = getelementptr inbounds i8, i8* %6, i64 64
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* nonnull dereferenceable(15) @.ref.tmp) #11
  %15 = ptrtoint %"class.base::SequencedTaskRunner"* %14 to i64
  %16 = bitcast i8* %8 to i64*
  %17 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %9, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.base::SequencedTaskRunner"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.2"* %25 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %26) #11
  br label %27

27:                                               ; preds = %2, %19, %24
  %28 = atomicrmw add i32* %7, i32 1 monotonic
  %29 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 1, i32 0
  %30 = bitcast %"class.net::SSLKeyLoggerImpl::Core"** %29 to i8**
  store i8* %6, i8** %30, align 8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %4, %"class.base::File"* dereferenceable(56) %1) #11
  %31 = bitcast %"class.base::File"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %31)
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %3, %"class.base::File"* nonnull dereferenceable(56) %4) #11
  %32 = call %struct._IO_FILE* @_ZN4base10FileToFILEENS_4FileEPKc(%"class.base::File"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %33 = getelementptr inbounds i8, i8* %6, i64 16
  %34 = bitcast i8* %33 to %struct._IO_FILE**
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %34, align 8
  store %struct._IO_FILE* %32, %struct._IO_FILE** %34, align 8
  %36 = icmp eq %struct._IO_FILE* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = call i32 @fclose(%struct._IO_FILE* nonnull %35) #11
  br label %39

39:                                               ; preds = %27, %37
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %31)
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #11
  ret void
}

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16SSLKeyLoggerImplD2Ev(%"class.net::SSLKeyLoggerImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net16SSLKeyLoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::SSLKeyLoggerImpl::Core"*, %"class.net::SSLKeyLoggerImpl::Core"** %3, align 8
  %5 = icmp eq %"class.net::SSLKeyLoggerImpl::Core"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN3net16SSLKeyLoggerImpl4CoreD2Ev(%"class.net::SSLKeyLoggerImpl::Core"* nonnull %4) #11
  %11 = bitcast %"class.net::SSLKeyLoggerImpl::Core"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16SSLKeyLoggerImplD0Ev(%"class.net::SSLKeyLoggerImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net16SSLKeyLoggerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::SSLKeyLoggerImpl::Core"*, %"class.net::SSLKeyLoggerImpl::Core"** %3, align 8
  %5 = icmp eq %"class.net::SSLKeyLoggerImpl::Core"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN3net16SSLKeyLoggerImpl4CoreD2Ev(%"class.net::SSLKeyLoggerImpl::Core"* nonnull %4) #11
  %11 = bitcast %"class.net::SSLKeyLoggerImpl::Core"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.net::SSLKeyLoggerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16SSLKeyLoggerImpl9WriteLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::SSLKeyLoggerImpl"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl", %"class.net::SSLKeyLoggerImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.net::SSLKeyLoggerImpl::Core"*, %"class.net::SSLKeyLoggerImpl::Core"** %3, align 8
  tail call void @_ZN3net16SSLKeyLoggerImpl4Core9WriteLineERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::SSLKeyLoggerImpl::Core"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16SSLKeyLoggerImpl4Core9WriteLineERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.net::SSLKeyLoggerImpl::Core"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !7

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #11
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %14, %16
  %18 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %19 = ptrtoint %"class.std::__1::basic_string"* %16 to i64
  %20 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ult i64 %22, 512
  br i1 %23, label %24, label %45

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = icmp eq %"class.std::__1::basic_string"* %16, %26
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #11
  br label %41

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %16, i8* %38, i64 %40) #11
  br label %41

41:                                               ; preds = %36, %33
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 1
  %43 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  store i64 %43, i64* %18, align 8
  br label %47

44:                                               ; preds = %24
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %1) #11
  br label %47

45:                                               ; preds = %11
  %46 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 4
  store i8 1, i8* %46, align 8
  br label %47

47:                                               ; preds = %44, %41, %45
  %48 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #11
  br i1 %17, label %49, label %68

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 1, i32 0
  %51 = bitcast %"class.base::SequencedTaskRunner"** %50 to %"class.base::TaskRunner"**
  %52 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %51, align 8
  %53 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 74) #11
  %54 = call i8* @_Znwm(i64 56) #10, !noalias !8
  %55 = bitcast i8* %54 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %55, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvvEJ13scoped_refptrIS5_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvvEJ13scoped_refptrIS4_EEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !8
  %56 = getelementptr inbounds i8, i8* %54, i64 32
  %57 = bitcast i8* %56 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::SSLKeyLoggerImpl::Core"*)* @_ZN3net16SSLKeyLoggerImpl4Core5FlushEv to i64), i64 0>, <2 x i64>* %57, align 8, !noalias !8
  %58 = getelementptr inbounds i8, i8* %54, i64 48
  %59 = bitcast i8* %58 to %"class.net::SSLKeyLoggerImpl::Core"**
  store %"class.net::SSLKeyLoggerImpl::Core"* %0, %"class.net::SSLKeyLoggerImpl::Core"** %59, align 8, !noalias !8
  %60 = icmp eq %"class.net::SSLKeyLoggerImpl::Core"* %0, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic, !noalias !8
  br label %64

64:                                               ; preds = %49, %61
  %65 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %54, i8** %65, align 8, !alias.scope !8
  %66 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %52, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #11
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #11
  br label %68

68:                                               ; preds = %64, %47
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16SSLKeyLoggerImpl4Core12OpenFileImplERKN4base8FilePathE(%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"* dereferenceable(24)) #0 comdat align 2 {
  %3 = tail call %struct._IO_FILE* @_ZN4base8OpenFileERKNS_8FilePathEPKc(%"class.base::FilePath"* dereferenceable(24) %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %4 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %3, %struct._IO_FILE** %4, align 8
  %6 = icmp eq %struct._IO_FILE* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @fclose(%struct._IO_FILE* nonnull %5) #11
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJ13scoped_refptrIS5_ES6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::FilePath"*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.net::SSLKeyLoggerImpl::Core"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"*)**
  %23 = load void (%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"*)*, void (%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"*)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.net::SSLKeyLoggerImpl::Core"*, %"class.base::FilePath"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.net::SSLKeyLoggerImpl::Core"* %14, %"class.base::FilePath"* dereferenceable(24) %5) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJ13scoped_refptrIS4_ES5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.base::FilePath"*
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %5) #11
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.net::SSLKeyLoggerImpl::Core"**
  %8 = load %"class.net::SSLKeyLoggerImpl::Core"*, %"class.net::SSLKeyLoggerImpl::Core"** %7, align 8
  %9 = icmp eq %"class.net::SSLKeyLoggerImpl::Core"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw sub i32* %11, i32 1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @_ZN3net16SSLKeyLoggerImpl4CoreD2Ev(%"class.net::SSLKeyLoggerImpl::Core"* nonnull %8) #11
  %15 = bitcast %"class.net::SSLKeyLoggerImpl::Core"* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %3, %10, %14
  %17 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %16, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

declare %struct._IO_FILE* @_ZN4base8OpenFileERKNS_8FilePathEPKc(%"class.base::FilePath"* dereferenceable(24), i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #6

declare %struct._IO_FILE* @_ZN4base10FileToFILEENS_4FileEPKc(%"class.base::File"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16SSLKeyLoggerImpl4Core5FlushEv(%"class.net::SSLKeyLoggerImpl::Core"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !7

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !13
  store i8 0, i8* %9, align 1
  %11 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5
  %12 = bitcast %"class.std::__1::vector"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 0, i64* %12, align 8
  %14 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  %18 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  %19 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %21 = icmp eq %struct._IO_FILE* %20, null
  %22 = inttoptr i64 %13 to %"class.std::__1::basic_string"*
  br i1 %21, label %53, label %23

23:                                               ; preds = %8
  %24 = inttoptr i64 %16 to %"class.std::__1::basic_string"*
  %25 = icmp eq %"class.std::__1::basic_string"* %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %40, %23
  %27 = icmp eq i8 %10, 0
  br i1 %27, label %50, label %47

28:                                               ; preds = %23, %45
  %29 = phi %struct._IO_FILE* [ %46, %45 ], [ %20, %23 ]
  %30 = phi %"class.std::__1::basic_string"* [ %43, %45 ], [ %22, %23 ]
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %40

38:                                               ; preds = %28
  %39 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  br label %40

40:                                               ; preds = %35, %38
  %41 = phi i8* [ %37, %35 ], [ %39, %38 ]
  %42 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* %41)
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %24
  br i1 %44, label %26, label %45

45:                                               ; preds = %40
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  br label %28

47:                                               ; preds = %26
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %49 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %48)
  br label %50

50:                                               ; preds = %26, %47
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %52 = tail call i32 @fflush(%struct._IO_FILE* %51)
  br label %53

53:                                               ; preds = %8, %50
  %54 = icmp eq i64 %13, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %53
  %56 = inttoptr i64 %16 to %"class.std::__1::basic_string"*
  %57 = icmp eq %"class.std::__1::basic_string"* %22, %56
  br i1 %57, label %70, label %58

58:                                               ; preds = %55, %68
  %59 = phi %"class.std::__1::basic_string"* [ %60, %68 ], [ %56, %55 ]
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %65, %58
  %69 = icmp eq %"class.std::__1::basic_string"* %60, %22
  br i1 %69, label %70, label %58

70:                                               ; preds = %68, %55
  %71 = inttoptr i64 %13 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %53, %70
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvvEJ13scoped_refptrIS5_EEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.net::SSLKeyLoggerImpl::Core"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::SSLKeyLoggerImpl::Core"*)**
  %21 = load void (%"class.net::SSLKeyLoggerImpl::Core"*)*, void (%"class.net::SSLKeyLoggerImpl::Core"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.net::SSLKeyLoggerImpl::Core"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::SSLKeyLoggerImpl::Core"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::SSLKeyLoggerImpl::Core"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16SSLKeyLoggerImpl4CoreEFvvEJ13scoped_refptrIS4_EEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.net::SSLKeyLoggerImpl::Core"**
  %6 = load %"class.net::SSLKeyLoggerImpl::Core"*, %"class.net::SSLKeyLoggerImpl::Core"** %5, align 8
  %7 = icmp eq %"class.net::SSLKeyLoggerImpl::Core"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN3net16SSLKeyLoggerImpl4CoreD2Ev(%"class.net::SSLKeyLoggerImpl::Core"* nonnull %6) #11
  %13 = bitcast %"class.net::SSLKeyLoggerImpl::Core"* %6 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %3, %8, %12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %14, %1
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #6

declare %"class.base::SequencedTaskRunner"* @_ZN4base10ThreadPool25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::TaskTraits"* dereferenceable(15)) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16SSLKeyLoggerImpl4CoreD2Ev(%"class.net::SSLKeyLoggerImpl::Core"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %29) #11
  %30 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** %30, align 8
  %32 = icmp eq %struct._IO_FILE* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = tail call i32 @fclose(%struct._IO_FILE* nonnull %31) #11
  br label %35

35:                                               ; preds = %28, %33
  %36 = getelementptr inbounds %"class.net::SSLKeyLoggerImpl::Core", %"class.net::SSLKeyLoggerImpl::Core"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %36, align 8
  %38 = icmp eq %"class.base::SequencedTaskRunner"* %37, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %37, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %40, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe.2"* %45 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %46) #11
  br label %47

47:                                               ; preds = %35, %39, %44
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJPS5_S8_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJPS5_S8_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJPS3_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net16SSLKeyLoggerImpl4CoreEFvRKNS_8FilePathEEJPS3_S6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16SSLKeyLoggerImpl4CoreEFvvEJPS5_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16SSLKeyLoggerImpl4CoreEFvvEJPS5_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN3net16SSLKeyLoggerImpl4CoreEFvvEJPS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN3net16SSLKeyLoggerImpl4CoreEFvvEJPS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!13 = !{i8 0, i8 2}
