; ModuleID = '../../ui/gl/gl_surface_format.cc'
source_filename = "../../ui/gl/gl_surface_format.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }

@_ZN2gl15GLSurfaceFormatC1Ev = hidden unnamed_addr alias void (%"class.gl::GLSurfaceFormat"*), void (%"class.gl::GLSurfaceFormat"*)* @_ZN2gl15GLSurfaceFormatC2Ev
@_ZN2gl15GLSurfaceFormatC1ERKS0_ = hidden unnamed_addr alias void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"*), void (%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"*)* @_ZN2gl15GLSurfaceFormatC2ERKS0_
@_ZN2gl15GLSurfaceFormatD1Ev = hidden unnamed_addr alias void (%"class.gl::GLSurfaceFormat"*), void (%"class.gl::GLSurfaceFormat"*)* @_ZN2gl15GLSurfaceFormatD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15GLSurfaceFormatC2Ev(%"class.gl::GLSurfaceFormat"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gl::GLSurfaceFormat"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15GLSurfaceFormatC2ERKS0_(%"class.gl::GLSurfaceFormat"* nocapture, %"class.gl::GLSurfaceFormat"* nocapture readonly dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gl::GLSurfaceFormat"* %0 to i8*
  %4 = bitcast %"class.gl::GLSurfaceFormat"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl15GLSurfaceFormatD2Ev(%"class.gl::GLSurfaceFormat"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15GLSurfaceFormat9SetRGB565Ev(%"class.gl::GLSurfaceFormat"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 1
  %3 = bitcast i32* %2 to <4 x i32>*
  store <4 x i32> <i32 5, i32 6, i32 5, i32 0>, <4 x i32>* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl15GLSurfaceFormat12IsCompatibleES0_(%"class.gl::GLSurfaceFormat"* nocapture readonly, %"class.gl::GLSurfaceFormat"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  %6 = select i1 %5, i32 8, i32 %4
  %7 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, -1
  %10 = select i1 %9, i32 8, i32 %8
  %11 = icmp eq i32 %6, %10
  br i1 %11, label %12, label %72

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  %16 = select i1 %15, i32 8, i32 %14
  %17 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  %20 = select i1 %19, i32 8, i32 %18
  %21 = icmp eq i32 %16, %20
  br i1 %21, label %22, label %72

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, -1
  %26 = select i1 %25, i32 8, i32 %24
  %27 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, -1
  %30 = select i1 %29, i32 8, i32 %28
  %31 = icmp eq i32 %26, %30
  br i1 %31, label %32, label %72

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  %36 = select i1 %35, i32 8, i32 %34
  %37 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, -1
  %40 = select i1 %39, i32 8, i32 %38
  %41 = icmp eq i32 %36, %40
  br i1 %41, label %42, label %72

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, -1
  %46 = select i1 %45, i32 8, i32 %44
  %47 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, -1
  %50 = select i1 %49, i32 8, i32 %48
  %51 = icmp eq i32 %46, %50
  br i1 %51, label %52, label %72

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 5
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, -1
  %56 = select i1 %55, i32 24, i32 %54
  %57 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, -1
  %60 = select i1 %59, i32 24, i32 %58
  %61 = icmp eq i32 %56, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 6
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, -1
  %66 = select i1 %65, i32 0, i32 %64
  %67 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %1, i64 0, i32 6
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, -1
  %70 = select i1 %69, i32 0, i32 %68
  %71 = icmp eq i32 %66, %70
  br i1 %71, label %73, label %72

72:                                               ; preds = %62, %52, %42, %32, %22, %12, %2
  br label %73

73:                                               ; preds = %62, %72
  %74 = phi i1 [ false, %72 ], [ true, %62 ]
  ret i1 %74
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15GLSurfaceFormat12SetDepthBitsEi(%"class.gl::GLSurfaceFormat"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 5
  store i32 %1, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15GLSurfaceFormat14SetStencilBitsEi(%"class.gl::GLSurfaceFormat"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 7
  store i32 %1, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl15GLSurfaceFormat10SetSamplesEi(%"class.gl::GLSurfaceFormat"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, -1
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 6
  store i32 %1, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl15GLSurfaceFormat13GetBufferSizeEv(%"class.gl::GLSurfaceFormat"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLSurfaceFormat", %"class.gl::GLSurfaceFormat"* %0, i64 0, i32 1
  %3 = bitcast i32* %2 to <4 x i32>*
  %4 = load <4 x i32>, <4 x i32>* %3, align 4
  %5 = icmp eq <4 x i32> %4, <i32 -1, i32 -1, i32 -1, i32 -1>
  %6 = select <4 x i1> %5, <4 x i32> <i32 8, i32 8, i32 8, i32 8>, <4 x i32> %4
  %7 = shufflevector <4 x i32> %6, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %8 = add nsw <4 x i32> %6, %7
  %9 = shufflevector <4 x i32> %8, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %10 = add nsw <4 x i32> %8, %9
  %11 = extractelement <4 x i32> %10, i32 0
  %12 = icmp slt i32 %11, 17
  %13 = icmp slt i32 %11, 33
  %14 = select i1 %13, i32 32, i32 64
  %15 = select i1 %12, i32 16, i32 %14
  ret i32 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
