; ModuleID = '../../chrome/browser/ui/user_education/feature_tutorials.cc'
source_filename = "../../chrome/browser/ui/user_education/feature_tutorials.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::BasicStringPiece"* }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"tab_groups\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_Z29GetStringIdForFeatureTutorial15FeatureTutorial(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i64 10, i64 0
  %4 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)
  %5 = insertvalue { i8*, i64 } undef, i8* %4, 0
  %6 = insertvalue { i8*, i64 } %5, i64 %3, 1
  ret { i8*, i64 } %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_Z30GetFeatureTutorialFromStringIdN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 10
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = call i32 @bcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %0, i64 %1) #3
  %6 = icmp eq i32 %5, 0
  %7 = zext i1 %6 to i64
  ret i64 %7

8:                                                ; preds = %2
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z30GetAllFeatureTutorialStringIdsv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.base::BasicStringPiece"** %2 to i64*
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = bitcast %"class.base::BasicStringPiece"** %3 to i64*
  %7 = call i8* @_Znwm(i64 16) #4
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast i8* %7 to i8**
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 10, i64* %12, align 8
  %13 = ptrtoint i8* %7 to i64
  store i64 %13, i64* %5, align 8
  store i64 %9, i64* %4, align 8
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
