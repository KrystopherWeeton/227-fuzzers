; ModuleID = '../../third_party/webrtc/modules/desktop_capture/mouse_cursor_monitor_linux.cc'
source_filename = "../../third_party/webrtc/modules/desktop_capture/mouse_cursor_monitor_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::MouseCursorMonitor" = type { i32 (...)** }
%"class.webrtc::DesktopCaptureOptions" = type <{ %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr.5", i8, i8, i8, i8, [4 x i8] }>
%"class.rtc::scoped_refptr" = type { %"class.webrtc::SharedXDisplay"* }
%"class.webrtc::SharedXDisplay" = type { %"class.rtc::RefCountedNonVirtual", %struct._XDisplay*, %"class.std::__1::map" }
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct._XDisplay = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.rtc::scoped_refptr.5" = type { %"class.webrtc::FullScreenWindowDetector"* }
%"class.webrtc::FullScreenWindowDetector" = type { %"class.rtc::RefCountedNonVirtual.6", %"class.std::__1::unique_ptr", %"class.std::__1::function", i64, i64, i64, %"class.std::__1::vector" }
%"class.rtc::RefCountedNonVirtual.6" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.webrtc::FullScreenApplicationHandler"* }
%"class.webrtc::FullScreenApplicationHandler" = type { i32 (...)**, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.webrtc::FullScreenApplicationHandler"* (%"union.std::__1::__function::__policy_storage"*, i64)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::DesktopCapturer::Source"*, %"struct.webrtc::DesktopCapturer::Source"*, %"class.std::__1::__compressed_pair.15" }
%"struct.webrtc::DesktopCapturer::Source" = type { i64, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.webrtc::DesktopCapturer::Source"* }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc18MouseCursorMonitor15CreateForWindowERKNS_21DesktopCaptureOptionsEl(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc21MouseCursorMonitorX1115CreateForWindowERKNS_21DesktopCaptureOptionsEl(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0, i64 %1) #2
  ret %"class.webrtc::MouseCursorMonitor"* %3
}

declare %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc21MouseCursorMonitorX1115CreateForWindowERKNS_21DesktopCaptureOptionsEl(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc18MouseCursorMonitor15CreateForScreenERKNS_21DesktopCaptureOptionsEl(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc21MouseCursorMonitorX1115CreateForScreenERKNS_21DesktopCaptureOptionsEl(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0, i64 %1) #2
  ret %"class.webrtc::MouseCursorMonitor"* %3
}

declare %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc21MouseCursorMonitorX1115CreateForScreenERKNS_21DesktopCaptureOptionsEl(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24), i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc18MouseCursorMonitor6CreateERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc21MouseCursorMonitorX116CreateERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24) %0) #2
  ret %"class.webrtc::MouseCursorMonitor"* %2
}

declare %"class.webrtc::MouseCursorMonitor"* @_ZN6webrtc21MouseCursorMonitorX116CreateERKNS_21DesktopCaptureOptionsE(%"class.webrtc::DesktopCaptureOptions"* dereferenceable(24)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
