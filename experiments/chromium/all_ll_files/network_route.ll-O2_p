; ModuleID = '../../third_party/webrtc/rtc_base/network_route.cc'
source_filename = "../../third_party/webrtc/rtc_base/network_route.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::RouteEndpoint" = type <{ i32, i16, i16, i8, [3 x i8] }>
%"struct.rtc::NetworkRoute" = type { i8, [3 x i8], %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint", i32, i32 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3rtc13RouteEndpointeqERKS0_(%"class.rtc::RouteEndpoint"* nocapture readonly, %"class.rtc::RouteEndpoint"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %0, i64 0, i32 1
  %10 = load i16, i16* %9, align 4
  %11 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %1, i64 0, i32 1
  %12 = load i16, i16* %11, align 4
  %13 = icmp eq i16 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %0, i64 0, i32 2
  %16 = load i16, i16* %15, align 2
  %17 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %1, i64 0, i32 2
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = getelementptr inbounds %"class.rtc::RouteEndpoint", %"class.rtc::RouteEndpoint"* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %22, %24
  br label %26

26:                                               ; preds = %20, %14, %8, %2
  %27 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %25, %20 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3rtc12NetworkRouteeqERKS0_(%"struct.rtc::NetworkRoute"* nocapture readonly, %"struct.rtc::NetworkRoute"* nocapture readonly dereferenceable(36)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %68

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %68

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 2, i32 1
  %16 = load i16, i16* %15, align 4
  %17 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 2, i32 1
  %18 = load i16, i16* %17, align 4
  %19 = icmp eq i16 %16, %18
  br i1 %19, label %20, label %68

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 2, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 2, i32 2
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %22, %24
  br i1 %25, label %26, label %68

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 2, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 2, i32 3
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %28, %30
  br i1 %31, label %32, label %68

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 3, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %68

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 3, i32 1
  %40 = load i16, i16* %39, align 4
  %41 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 3, i32 1
  %42 = load i16, i16* %41, align 4
  %43 = icmp eq i16 %40, %42
  br i1 %43, label %44, label %68

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 3, i32 2
  %46 = load i16, i16* %45, align 2
  %47 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 3, i32 2
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %46, %48
  br i1 %49, label %50, label %68

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 3, i32 3
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 3, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %52, %54
  br i1 %55, label %56, label %68

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %0, i64 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.rtc::NetworkRoute", %"struct.rtc::NetworkRoute"* %1, i64 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  br label %68

68:                                               ; preds = %32, %38, %44, %8, %14, %20, %62, %56, %50, %26, %2
  %69 = phi i1 [ false, %56 ], [ false, %50 ], [ false, %26 ], [ false, %2 ], [ %67, %62 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %44 ], [ false, %38 ], [ false, %32 ]
  ret i1 %69
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
