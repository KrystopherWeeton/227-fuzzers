; ModuleID = '../../third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_decoder.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rtc::scoped_refptr.79" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%union.anon.44 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%union.anon.21 = type { i32 }
%union.anon.90 = type { %"struct.webrtc::VideoFrame::UpdateRect" }
%"struct.webrtc::VideoFrame::UpdateRect" = type { i32, i32, i32, i32 }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr.50" }
%"class.rtc::scoped_refptr.50" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.74" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.52", i32, %"class.absl::optional.59", %"class.absl::optional.64", %"class.absl::optional.69", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { i32*, i32*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i32* }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { i8 }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.69" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.webrtc::RtpPacketInfo"* }
%union.anon.95 = type { %"struct.webrtc::VideoFrame::ProcessingTime" }
%"struct.webrtc::VideoFrame::ProcessingTime" = type { %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.webrtc::LibvpxVp8Decoder" = type <{ %"class.webrtc::VideoDecoder", i8, [7 x i8], %"class.webrtc::VideoFrameBufferPool", %"class.webrtc::DecodedImageCallback"*, i8, [7 x i8], %struct.vpx_codec_ctx*, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %"class.std::__1::unique_ptr.8", i32, [4 x i8] }>
%"class.webrtc::VideoDecoder" = type { i32 (...)** }
%"class.webrtc::VideoFrameBufferPool" = type { %"class.rtc::RaceChecker", %"class.std::__1::list", i8, i64 }
%"class.rtc::RaceChecker" = type { i32, i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.webrtc::DecodedImageCallback" = type { i32 (...)** }
%struct.vpx_codec_ctx = type { i8*, %struct.vpx_codec_iface*, i32, i8*, i64, %union.anon, %struct.vpx_codec_priv* }
%struct.vpx_codec_iface = type opaque
%union.anon = type { %struct.vpx_codec_dec_cfg* }
%struct.vpx_codec_dec_cfg = type { i32, i32, i32 }
%struct.vpx_codec_priv = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.7 }
%union.anon.7 = type { %"struct.webrtc::LibvpxVp8Decoder::DeblockParams" }
%"struct.webrtc::LibvpxVp8Decoder::DeblockParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* }
%"class.webrtc::LibvpxVp8Decoder::QpSmoother" = type <{ float, [4 x i8], i64, %"class.rtc::ExpFilter", [4 x i8] }>
%"class.rtc::ExpFilter" = type { float, float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional.17", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.webrtc::EncodedImage" = type <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::EncodedImage::Timing", %"class.rtc::scoped_refptr", i64, i32, %"class.absl::optional.17", [4 x i8], %"class.std::__1::map", %"class.absl::optional.35", %"class.absl::optional.45", [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>
%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"struct.webrtc::EncodedImage::Timing" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::EncodedImageBufferInterface"* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.40" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { i16 }
%struct.vp8_postproc_cfg = type { i32, i32, i32 }
%struct.vpx_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8*], [4 x i32], i32, i8*, i8*, i32, i32, i8* }
%"class.rtc::scoped_refptr.80" = type { %"class.webrtc::NV12Buffer"* }
%"class.webrtc::NV12Buffer" = type { %"class.webrtc::NV12BufferInterface", i32, i32, i32, i32, %"class.std::__1::unique_ptr.81" }
%"class.webrtc::NV12BufferInterface" = type { %"class.webrtc::BiplanarYuv8Buffer" }
%"class.webrtc::BiplanarYuv8Buffer" = type { %"class.webrtc::BiplanarYuvBuffer" }
%"class.webrtc::BiplanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { i8* }
%"class.rtc::scoped_refptr.85" = type { %"class.webrtc::I420Buffer"* }
%"class.webrtc::I420Buffer" = type { %"class.webrtc::I420BufferInterface", i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.81" }
%"class.webrtc::I420BufferInterface" = type { %"class.webrtc::PlanarYuv8Buffer" }
%"class.webrtc::PlanarYuv8Buffer" = type { %"class.webrtc::PlanarYuvBuffer" }
%"class.webrtc::PlanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"class.webrtc::VideoFrame" = type { i16, %"class.rtc::scoped_refptr.79", i32, i64, i64, i32, %"class.absl::optional.35", %"class.absl::optional.17", %"class.absl::optional.86", %"class.webrtc::RtpPacketInfos", %"class.absl::optional.91" }
%"class.absl::optional.86" = type { %"class.absl::optional_internal::optional_data.87" }
%"class.absl::optional_internal::optional_data.87" = type { %"class.absl::optional_internal::optional_data_base.88" }
%"class.absl::optional_internal::optional_data_base.88" = type { %"class.absl::optional_internal::optional_data_dtor_base.89" }
%"class.absl::optional_internal::optional_data_dtor_base.89" = type { i8, %union.anon.90 }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%"class.webrtc::VideoFrame::Builder" = type { i16, %"class.rtc::scoped_refptr.79", i64, i32, i64, i32, %"class.absl::optional.35", %"class.absl::optional.86", %"class.webrtc::RtpPacketInfos" }
%"class.webrtc::metrics::Histogram" = type opaque
%"struct.webrtc::VideoDecoder::DecoderInfo" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

@_ZTVN6webrtc16LibvpxVp8DecoderE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::LibvpxVp8Decoder"*)* @_ZN6webrtc16LibvpxVp8DecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Decoder"*)* @_ZN6webrtc16LibvpxVp8DecoderD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Decoder"*, %"class.webrtc::VideoCodec"*, i32)* @_ZN6webrtc16LibvpxVp8Decoder10InitDecodeEPKNS_10VideoCodecEi to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Decoder"*, %"class.webrtc::EncodedImage"*, i1, i64)* @_ZN6webrtc16LibvpxVp8Decoder6DecodeERKNS_12EncodedImageEbl to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Decoder"*, %"class.webrtc::DecodedImageCallback"*)* @_ZN6webrtc16LibvpxVp8Decoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Decoder"*)* @_ZN6webrtc16LibvpxVp8Decoder7ReleaseEv to i8*), i8* bitcast (void (%"struct.webrtc::VideoDecoder::DecoderInfo"*, %"class.webrtc::LibvpxVp8Decoder"*)* @_ZNK6webrtc16LibvpxVp8Decoder14GetDecoderInfoEv to i8*), i8* bitcast (i8* (%"class.webrtc::LibvpxVp8Decoder"*)* @_ZNK6webrtc16LibvpxVp8Decoder18ImplementationNameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"WebRTC-NV12Decode\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"WebRTC.Video.LibvpxVp8Decoder.TooManyPendingFrames\00", align 1
@__const._ZN6webrtc16LibvpxVp8Decoder11ReturnFrameEPK9vpx_imagejiPKNS_10ColorSpaceE.decoded_image = private unnamed_addr constant { i16, [6 x i8], %"class.rtc::scoped_refptr.79", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon.21 } } } }, { { { { i8, [3 x i8], %union.anon.90 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.95 } } } } } { i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.rtc::scoped_refptr.79" { %"class.webrtc::VideoFrameBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::VideoFrameBuffer"*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } } } } } { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } } } } { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } } } { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } { i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.44 } } } } { { { { i8, [3 x i8], %union.anon.44 } } } { { { i8, [3 x i8], %union.anon.44 } } { { i8, [3 x i8], %union.anon.44 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.44 { %"struct.webrtc::HdrMetadata" { %"struct.webrtc::HdrMasteringMetadata" { %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon.21 } } } } { { { { i8, [3 x i8], %union.anon.21 } } } { { { i8, [3 x i8], %union.anon.21 } } { { i8, [3 x i8], %union.anon.21 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.21 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.90 } } } } { { { { i8, [3 x i8], %union.anon.90 } } } { { { i8, [3 x i8], %union.anon.90 } } { { i8, [3 x i8], %union.anon.90 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.90 { %"struct.webrtc::VideoFrame::UpdateRect" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } } } } } }, %"class.webrtc::RtpPacketInfos" { %"class.rtc::scoped_refptr.50" { %"class.webrtc::RtpPacketInfos::Data"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::RtpPacketInfos::Data"*) } }, { { { { i8, [7 x i8], %union.anon.95 } } } } { { { { i8, [7 x i8], %union.anon.95 } } } { { { i8, [7 x i8], %union.anon.95 } } { { i8, [7 x i8], %union.anon.95 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.95 { %"struct.webrtc::VideoFrame::ProcessingTime" { %"class.webrtc::Timestamp" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } }, %"class.webrtc::Timestamp" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } } } } } } } } }, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"libvpx\00", align 1
@_ZN6webrtc12_GLOBAL__N_122kVp8PostProcFieldTrialE = internal unnamed_addr constant [27 x i8] c"WebRTC-VP8-Postproc-Config\00", align 16
@.str.3 = private unnamed_addr constant [17 x i8] c"Enabled-%d,%d,%d\00", align 1
@_ZN3rtc9ExpFilter15kValueUndefinedE = external local_unnamed_addr constant float, align 4
@.str.4 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1

@_ZN6webrtc16LibvpxVp8DecoderC1Ev = hidden unnamed_addr alias void (%"class.webrtc::LibvpxVp8Decoder"*), void (%"class.webrtc::LibvpxVp8Decoder"*)* @_ZN6webrtc16LibvpxVp8DecoderC2Ev
@_ZN6webrtc16LibvpxVp8DecoderD1Ev = hidden unnamed_addr alias void (%"class.webrtc::LibvpxVp8Decoder"*), void (%"class.webrtc::LibvpxVp8Decoder"*)* @_ZN6webrtc16LibvpxVp8DecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoDecoder"* @_ZN6webrtc10VP8Decoder6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 144) #14
  %2 = bitcast i8* %1 to %"class.webrtc::LibvpxVp8Decoder"*
  tail call void @_ZN6webrtc16LibvpxVp8DecoderC2Ev(%"class.webrtc::LibvpxVp8Decoder"* nonnull %2) #15
  %3 = bitcast i8* %1 to %"class.webrtc::VideoDecoder"*
  ret %"class.webrtc::VideoDecoder"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8DecoderC2Ev(%"class.webrtc::LibvpxVp8Decoder"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.webrtc::LibvpxVp8Decoder::DeblockParams", align 4
  %5 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc16LibvpxVp8DecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 1
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc20VideoFrameBufferPoolC1Ebm(%"class.webrtc::VideoFrameBufferPool"* %7, i1 zeroext false, i64 300) #15
  %8 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 4
  store %"class.webrtc::DecodedImageCallback"* null, %"class.webrtc::DecodedImageCallback"** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  store %struct.vpx_codec_ctx* null, %struct.vpx_codec_ctx** %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 9
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 10
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 11
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 13
  %16 = load i8, i8* %6, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %77, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  %23 = tail call i8* @_Znwm(i64 32) #14
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %26, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 16 getelementptr inbounds ([27 x i8], [27 x i8]* @_ZN6webrtc12_GLOBAL__N_122kVp8PostProcFieldTrialE, i64 0, i64 0), i64 26, i1 false) #15
  %27 = getelementptr inbounds i8, i8* %23, i64 26
  store i8 0, i8* %27, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %18
  %33 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %32, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  %35 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i64, i64* %21, align 8
  %40 = zext i8 %37 to i64
  %41 = select i1 %38, i64 %39, i64 %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %70, label %43

43:                                               ; preds = %34
  %44 = bitcast %"struct.webrtc::LibvpxVp8Decoder::DeblockParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %44) #15
  %45 = getelementptr inbounds %"struct.webrtc::LibvpxVp8Decoder::DeblockParams", %"struct.webrtc::LibvpxVp8Decoder::DeblockParams"* %4, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.webrtc::LibvpxVp8Decoder::DeblockParams", %"struct.webrtc::LibvpxVp8Decoder::DeblockParams"* %4, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.webrtc::LibvpxVp8Decoder::DeblockParams", %"struct.webrtc::LibvpxVp8Decoder::DeblockParams"* %4, i64 0, i32 2
  store i32 6, i32* %45, align 4
  store i32 1, i32* %46, align 4
  store i32 0, i32* %47, align 4
  %48 = load i8*, i8** %20, align 8
  %49 = select i1 %38, i8* %48, i8* %19
  %50 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %45, i32* %47, i32* %46) #15
  %51 = icmp eq i32 %50, 3
  br i1 %51, label %52, label %66

52:                                               ; preds = %43
  %53 = load i32, i32* %45, align 4
  %54 = icmp ugt i32 %53, 16
  br i1 %54, label %66, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* %47, align 4
  %57 = icmp sgt i32 %56, -1
  %58 = load i32, i32* %46, align 4
  %59 = icmp sgt i32 %58, %56
  %60 = and i1 %57, %59
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = zext i32 %53 to i64
  %63 = shl nuw i64 %62, 32
  %64 = bitcast i32* %46 to i64*
  %65 = load i64, i64* %64, align 4
  br label %66

66:                                               ; preds = %61, %55, %52, %43
  %67 = phi i64 [ %63, %61 ], [ 34359738368, %43 ], [ 34359738368, %52 ], [ 34359738368, %55 ]
  %68 = phi i64 [ %65, %61 ], [ 128849018940, %43 ], [ 128849018940, %52 ], [ 128849018940, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %44) #15
  %69 = load i8, i8* %36, align 1
  br label %70

70:                                               ; preds = %66, %34
  %71 = phi i8 [ %69, %66 ], [ %37, %34 ]
  %72 = phi i64 [ %67, %66 ], [ 34359738368, %34 ]
  %73 = phi i64 [ %68, %66 ], [ 128849018940, %34 ]
  %74 = icmp slt i8 %71, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %70
  %76 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %76) #14
  br label %80

77:                                               ; preds = %1
  %78 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 14
  br label %100

80:                                               ; preds = %75, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  %81 = or i64 %72, 1
  %82 = bitcast %"class.absl::optional"* %15 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %84 = bitcast i32* %83 to i64*
  store i64 %73, i64* %84, align 8
  %85 = load i8, i8* %6, align 8
  %86 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 14
  %87 = icmp eq i8 %85, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %80
  %89 = call i8* @_Znwm(i64 32) #14
  %90 = bitcast i8* %89 to float*
  store float 0x3FEE666660000000, float* %90, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 8
  %92 = bitcast i8* %91 to i64*
  %93 = call i64 @_ZN3rtc10TimeMillisEv() #15
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds i8, i8* %89, i64 16
  %95 = bitcast i8* %94 to %"class.rtc::ExpFilter"*
  %96 = load i32, i32* bitcast (float* @_ZN3rtc9ExpFilter15kValueUndefinedE to i32*), align 4
  %97 = getelementptr inbounds i8, i8* %89, i64 24
  %98 = bitcast i8* %97 to i32*
  store i32 %96, i32* %98, align 4
  call void @_ZN3rtc9ExpFilter5ResetEf(%"class.rtc::ExpFilter"* %95, float 0x3FEE666660000000) #15
  %99 = ptrtoint i8* %89 to i64
  br label %100

100:                                              ; preds = %77, %80, %88
  %101 = phi %"class.std::__1::unique_ptr.8"* [ %86, %88 ], [ %86, %80 ], [ %79, %77 ]
  %102 = phi i64 [ %99, %88 ], [ 0, %80 ], [ 0, %77 ]
  %103 = bitcast %"class.std::__1::unique_ptr.8"* %101 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 15
  %105 = call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  %106 = select i1 %105, i32 5, i32 1
  store i32 %106, i32* %104, align 8
  ret void
}

declare void @_ZN6webrtc20VideoFrameBufferPoolC1Ebm(%"class.webrtc::VideoFrameBufferPool"*, i1 zeroext, i64) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = tail call i64 @strlen(i8* %0) #15
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #16
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #15
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #15
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #15
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #14
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8DecoderD2Ev(%"class.webrtc::LibvpxVp8Decoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc16LibvpxVp8DecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %5 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %4, align 8
  %6 = icmp eq %struct.vpx_codec_ctx* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @vpx_codec_destroy(%struct.vpx_codec_ctx* nonnull %5) #15
  %9 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %4, align 8
  %10 = icmp eq %struct.vpx_codec_ctx* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.vpx_codec_ctx* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %11, %7
  store %struct.vpx_codec_ctx* null, %struct.vpx_codec_ctx** %4, align 8
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc20VideoFrameBufferPool7ReleaseEv(%"class.webrtc::VideoFrameBufferPool"* %15) #15
  store i8 0, i8* %3, align 8
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::LibvpxVp8Decoder::QpSmoother"*, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %16, align 8
  store %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* null, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %16, align 8
  %18 = icmp eq %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %14, %19
  tail call void @_ZN6webrtc20VideoFrameBufferPoolD1Ev(%"class.webrtc::VideoFrameBufferPool"* %15) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc20VideoFrameBufferPoolD1Ev(%"class.webrtc::VideoFrameBufferPool"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8DecoderD0Ev(%"class.webrtc::LibvpxVp8Decoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc16LibvpxVp8DecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %5 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %4, align 8
  %6 = icmp eq %struct.vpx_codec_ctx* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @vpx_codec_destroy(%struct.vpx_codec_ctx* nonnull %5) #15
  %9 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %4, align 8
  %10 = icmp eq %struct.vpx_codec_ctx* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.vpx_codec_ctx* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %11, %7
  store %struct.vpx_codec_ctx* null, %struct.vpx_codec_ctx** %4, align 8
  br label %14

14:                                               ; preds = %13, %1
  %15 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc20VideoFrameBufferPool7ReleaseEv(%"class.webrtc::VideoFrameBufferPool"* %15) #15
  store i8 0, i8* %3, align 8
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::LibvpxVp8Decoder::QpSmoother"*, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %16, align 8
  store %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* null, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %16, align 8
  %18 = icmp eq %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %14, %19
  tail call void @_ZN6webrtc20VideoFrameBufferPoolD1Ev(%"class.webrtc::VideoFrameBufferPool"* %15) #15
  %22 = bitcast %"class.webrtc::LibvpxVp8Decoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Decoder10InitDecodeEPKNS_10VideoCodecEi(%"class.webrtc::LibvpxVp8Decoder"*, %"class.webrtc::VideoCodec"* readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %struct.vpx_codec_dec_cfg, align 4
  %5 = bitcast %"class.webrtc::LibvpxVp8Decoder"* %0 to i32 (%"class.webrtc::LibvpxVp8Decoder"*)***
  %6 = load i32 (%"class.webrtc::LibvpxVp8Decoder"*)**, i32 (%"class.webrtc::LibvpxVp8Decoder"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.webrtc::LibvpxVp8Decoder"*)*, i32 (%"class.webrtc::LibvpxVp8Decoder"*)** %6, i64 5
  %8 = load i32 (%"class.webrtc::LibvpxVp8Decoder"*)*, i32 (%"class.webrtc::LibvpxVp8Decoder"*)** %7, align 8
  %9 = tail call i32 %8(%"class.webrtc::LibvpxVp8Decoder"* %0) #15
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %56, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %13 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %12, align 8
  %14 = icmp eq %struct.vpx_codec_ctx* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = tail call i8* @_Znwm(i64 56) #14
  %17 = bitcast %struct.vpx_codec_ctx** %12 to i8**
  store i8* %16, i8** %17, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 56, i1 false)
  %18 = bitcast i8* %16 to %struct.vpx_codec_ctx*
  br label %19

19:                                               ; preds = %15, %11
  %20 = phi %struct.vpx_codec_ctx* [ %18, %15 ], [ %13, %11 ]
  %21 = bitcast %struct.vpx_codec_dec_cfg* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %21) #15
  %22 = getelementptr inbounds %struct.vpx_codec_dec_cfg, %struct.vpx_codec_dec_cfg* %4, i64 0, i32 0
  %23 = getelementptr inbounds %struct.vpx_codec_dec_cfg, %struct.vpx_codec_dec_cfg* %4, i64 0, i32 1
  %24 = getelementptr inbounds %struct.vpx_codec_dec_cfg, %struct.vpx_codec_dec_cfg* %4, i64 0, i32 2
  store i32 1, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i64 0, i64 65536
  %29 = tail call %struct.vpx_codec_iface* @vpx_codec_vp8_dx() #15
  %30 = call i32 @vpx_codec_dec_init_ver(%struct.vpx_codec_ctx* nonnull %20, %struct.vpx_codec_iface* %29, %struct.vpx_codec_dec_cfg* nonnull %4, i64 %28, i32 12) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %19
  %33 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %12, align 8
  %34 = icmp eq %struct.vpx_codec_ctx* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = bitcast %struct.vpx_codec_ctx* %33 to i8*
  call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %35, %32
  store %struct.vpx_codec_ctx* null, %struct.vpx_codec_ctx** %12, align 8
  br label %54

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 11
  store i8 1, i8* %41, align 4
  %42 = icmp eq %"class.webrtc::VideoCodec"* %1, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  %49 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = call zeroext i1 @_ZN6webrtc20VideoFrameBufferPool6ResizeEm(%"class.webrtc::VideoFrameBufferPool"* %48, i64 %51) #15
  br i1 %52, label %53, label %54

53:                                               ; preds = %43, %38, %47
  br label %54

54:                                               ; preds = %47, %53, %37
  %55 = phi i32 [ -3, %37 ], [ 0, %53 ], [ -7, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %21) #15
  br label %56

56:                                               ; preds = %3, %54
  %57 = phi i32 [ %55, %54 ], [ %9, %3 ]
  ret i32 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @vpx_codec_dec_init_ver(%struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_dec_cfg*, i64, i32) local_unnamed_addr #2

declare %struct.vpx_codec_iface* @vpx_codec_vp8_dx() local_unnamed_addr #2

declare zeroext i1 @_ZN6webrtc20VideoFrameBufferPool6ResizeEm(%"class.webrtc::VideoFrameBufferPool"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Decoder6DecodeERKNS_12EncodedImageEbl(%"class.webrtc::LibvpxVp8Decoder"*, %"class.webrtc::EncodedImage"* dereferenceable(272), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %5 = alloca %struct.vp8_postproc_cfg, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %187, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 4
  %13 = load %"class.webrtc::DecodedImageCallback"*, %"class.webrtc::DecodedImageCallback"** %12, align 8
  %14 = icmp eq %"class.webrtc::DecodedImageCallback"* %13, null
  br i1 %14, label %187, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 11, i32 0
  %17 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %16, align 8
  %18 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %17 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %21 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %20, align 8
  %22 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %21, i64 5
  %23 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %22, align 8
  %24 = tail call i8* %23(%"class.webrtc::EncodedImageBufferInterface"* nonnull %17) #15
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %15, %19
  %27 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 12
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %187

34:                                               ; preds = %30
  store i32 0, i32* %31, align 8
  br label %187

35:                                               ; preds = %26, %19
  %36 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %89, label %39

39:                                               ; preds = %35
  %40 = bitcast %struct.vp8_postproc_cfg* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %40) #15
  %41 = getelementptr inbounds %struct.vp8_postproc_cfg, %struct.vp8_postproc_cfg* %5, i64 0, i32 0
  %42 = getelementptr inbounds %struct.vp8_postproc_cfg, %struct.vp8_postproc_cfg* %5, i64 0, i32 1
  store i32 -1431655766, i32* %42, align 4
  %43 = getelementptr inbounds %struct.vp8_postproc_cfg, %struct.vp8_postproc_cfg* %5, i64 0, i32 2
  store i32 -1431655766, i32* %43, align 4
  store i32 8, i32* %41, align 4
  %44 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 9
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 10
  %50 = load i32, i32* %49, align 8
  %51 = mul nsw i32 %50, %48
  br i1 %46, label %82, label %52

52:                                               ; preds = %39
  %53 = add i32 %51, -1
  %54 = icmp ult i32 %53, 76800
  br i1 %54, label %55, label %85

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %57 = load %"class.webrtc::LibvpxVp8Decoder::QpSmoother"*, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %56, align 8
  %58 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder::QpSmoother", %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %57, i64 0, i32 3, i32 1
  %59 = load float, float* %58, align 4
  %60 = load float, float* @_ZN3rtc9ExpFilter15kValueUndefinedE, align 4
  %61 = fcmp oeq float %59, %60
  %62 = fptosi float %59 to i32
  %63 = select i1 %61, i32 0, i32 %62
  %64 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %63, %65
  br i1 %66, label %67, label %85

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %63, %71
  br i1 %72, label %73, label %78

73:                                               ; preds = %67
  %74 = sub nsw i32 %63, %65
  %75 = mul nsw i32 %69, %74
  %76 = sub nsw i32 %71, %65
  %77 = sdiv i32 %75, %76
  br label %78

78:                                               ; preds = %73, %67
  %79 = phi i32 [ %77, %73 ], [ %69, %67 ]
  %80 = icmp sgt i32 %79, 1
  %81 = select i1 %80, i32 %79, i32 1
  store i32 %81, i32* %42, align 4
  store i32 11, i32* %41, align 4
  br label %85

82:                                               ; preds = %39
  %83 = icmp slt i32 %51, 230401
  %84 = select i1 %83, i32 11, i32 9
  store i32 %84, i32* %41, align 4
  store i32 3, i32* %42, align 4
  br label %85

85:                                               ; preds = %52, %78, %55, %82
  %86 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %87 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %86, align 8
  %88 = call i32 (%struct.vpx_codec_ctx*, i32, ...) @vpx_codec_control_(%struct.vpx_codec_ctx* %87, i32 3, %struct.vp8_postproc_cfg* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %40) #15
  br label %89

89:                                               ; preds = %35, %85
  %90 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 11
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 4
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %187

97:                                               ; preds = %93
  store i8 0, i8* %90, align 4
  br label %98

98:                                               ; preds = %89, %97
  %99 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 4
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 3
  %102 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  br i1 %101, label %103, label %105

103:                                              ; preds = %98
  store i32 -1, i32* %102, align 8
  %104 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  br label %118

105:                                              ; preds = %98
  %106 = load i32, i32* %102, align 8
  %107 = icmp eq i32 %106, -1
  %108 = and i1 %107, %2
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  store i32 0, i32* %102, align 8
  %110 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  br label %114

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 8
  %113 = icmp sgt i32 %106, -1
  br i1 %113, label %114, label %118

114:                                              ; preds = %109, %111
  %115 = phi i32* [ %110, %109 ], [ %112, %111 ]
  %116 = phi i32 [ 0, %109 ], [ %106, %111 ]
  %117 = add nuw nsw i32 %116, 1
  store i32 %117, i32* %115, align 8
  br label %118

118:                                              ; preds = %103, %114, %111
  %119 = phi i32* [ %115, %114 ], [ %112, %111 ], [ %104, %103 ]
  %120 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #15
  store i8* null, i8** %6, align 8
  br i1 %2, label %121, label %133

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %123 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %122, align 8
  %124 = call i32 @vpx_codec_decode(%struct.vpx_codec_ctx* %123, i8* null, i32 0, i8* null, i64 1) #15
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %121
  %127 = load i32, i32* %119, align 8
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %185

129:                                              ; preds = %126
  store i32 0, i32* %119, align 8
  br label %185

130:                                              ; preds = %121
  %131 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %122, align 8
  %132 = call %struct.vpx_image* @vpx_codec_get_frame(%struct.vpx_codec_ctx* %131, i8** nonnull %6) #15
  store i8* null, i8** %6, align 8
  br label %133

133:                                              ; preds = %130, %118
  %134 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %16, align 8
  %135 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %133
  %137 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %134 to i8* (%"class.webrtc::EncodedImageBufferInterface"*)***
  %138 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)**, i8* (%"class.webrtc::EncodedImageBufferInterface"*)*** %137, align 8
  %139 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %138, i64 5
  %140 = load i8* (%"class.webrtc::EncodedImageBufferInterface"*)*, i8* (%"class.webrtc::EncodedImageBufferInterface"*)** %139, align 8
  %141 = call i8* %140(%"class.webrtc::EncodedImageBufferInterface"* nonnull %134) #15
  br label %142

142:                                              ; preds = %133, %136
  %143 = phi i8* [ %141, %136 ], [ null, %133 ]
  %144 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 12
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 0
  %147 = select i1 %146, i8* null, i8* %143
  %148 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %149 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %148, align 8
  %150 = trunc i64 %145 to i32
  %151 = call i32 @vpx_codec_decode(%struct.vpx_codec_ctx* %149, i8* %147, i32 %150, i8* null, i64 1) #15
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %142
  %154 = load i32, i32* %119, align 8
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %185

156:                                              ; preds = %153
  store i32 0, i32* %119, align 8
  br label %185

157:                                              ; preds = %142
  %158 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %148, align 8
  %159 = call %struct.vpx_image* @vpx_codec_get_frame(%struct.vpx_codec_ctx* %158, i8** nonnull %6) #15
  %160 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160) #15
  store i32 -1431655766, i32* %7, align 4
  %161 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %148, align 8
  %162 = call i32 (%struct.vpx_codec_ctx*, i32, ...) @vpx_codec_control_(%struct.vpx_codec_ctx* %161, i32 267, i32* nonnull %7) #15
  %163 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 13
  %164 = load i32, i32* %163, align 8
  %165 = load i32, i32* %7, align 4
  %166 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %167 = load i8, i8* %166, align 4, !range !2
  %168 = icmp eq i8 %167, 0
  %169 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %170 = select i1 %168, %"class.webrtc::ColorSpace"* null, %"class.webrtc::ColorSpace"* %169
  %171 = call i32 @_ZN6webrtc16LibvpxVp8Decoder11ReturnFrameEPK9vpx_imagejiPKNS_10ColorSpaceE(%"class.webrtc::LibvpxVp8Decoder"* %0, %struct.vpx_image* %159, i32 %164, i32 %165, %"class.webrtc::ColorSpace"* %170)
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %179, label %173

173:                                              ; preds = %157
  %174 = icmp slt i32 %171, 0
  br i1 %174, label %175, label %183

175:                                              ; preds = %173
  %176 = load i32, i32* %119, align 8
  %177 = icmp sgt i32 %176, 0
  br i1 %177, label %178, label %183

178:                                              ; preds = %175
  store i32 0, i32* %119, align 8
  br label %183

179:                                              ; preds = %157
  %180 = load i32, i32* %119, align 8
  %181 = icmp sgt i32 %180, 30
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  store i32 0, i32* %119, align 8
  br label %183

183:                                              ; preds = %179, %173, %175, %178, %182
  %184 = phi i32 [ -1, %182 ], [ %171, %178 ], [ %171, %175 ], [ %171, %173 ], [ 0, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160) #15
  br label %185

185:                                              ; preds = %183, %156, %153, %126, %129
  %186 = phi i32 [ -1, %129 ], [ -1, %126 ], [ %184, %183 ], [ -1, %156 ], [ -1, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #15
  br label %187

187:                                              ; preds = %93, %30, %34, %11, %4, %185
  %188 = phi i32 [ %186, %185 ], [ -7, %4 ], [ -7, %11 ], [ -4, %34 ], [ -4, %30 ], [ -1, %93 ]
  ret i32 %188
}

declare i32 @vpx_codec_decode(%struct.vpx_codec_ctx*, i8*, i32, i8*, i64) local_unnamed_addr #2

declare %struct.vpx_image* @vpx_codec_get_frame(%struct.vpx_codec_ctx*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Decoder11ReturnFrameEPK9vpx_imagejiPKNS_10ColorSpaceE(%"class.webrtc::LibvpxVp8Decoder"*, %struct.vpx_image* readonly, i32, i32, %"class.webrtc::ColorSpace"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.rtc::scoped_refptr.79", align 8
  %7 = alloca %"class.rtc::scoped_refptr.80", align 8
  %8 = alloca %"class.rtc::scoped_refptr.85", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.webrtc::VideoFrame", align 8
  %11 = alloca %"class.webrtc::VideoFrame::Builder", align 8
  %12 = icmp eq %struct.vpx_image* %1, null
  br i1 %12, label %246, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %15 = load %"class.webrtc::LibvpxVp8Decoder::QpSmoother"*, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %14, align 8
  %16 = icmp eq %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %15, null
  br i1 %16, label %44, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 9
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 6
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 10
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %25, %27
  br i1 %28, label %34, label %29

29:                                               ; preds = %23, %17
  %30 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder::QpSmoother", %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %15, i64 0, i32 3
  %31 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder::QpSmoother", %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %15, i64 0, i32 0
  %32 = load float, float* %31, align 8
  tail call void @_ZN3rtc9ExpFilter5ResetEf(%"class.rtc::ExpFilter"* %30, float %32) #15
  %33 = load %"class.webrtc::LibvpxVp8Decoder::QpSmoother"*, %"class.webrtc::LibvpxVp8Decoder::QpSmoother"** %14, align 8
  br label %34

34:                                               ; preds = %23, %29
  %35 = phi %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* [ %15, %23 ], [ %33, %29 ]
  %36 = sitofp i32 %3 to float
  %37 = tail call i64 @_ZN3rtc10TimeMillisEv() #15
  %38 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder::QpSmoother", %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %35, i64 0, i32 3
  %39 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder::QpSmoother", %"class.webrtc::LibvpxVp8Decoder::QpSmoother"* %35, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = sub nsw i64 %37, %40
  %42 = sitofp i64 %41 to float
  %43 = tail call float @_ZN3rtc9ExpFilter5ApplyEff(%"class.rtc::ExpFilter"* %38, float %42, float %36) #15
  store i64 %37, i64* %39, align 8
  br label %44

44:                                               ; preds = %13, %34
  %45 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 9
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 7
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 10
  store i32 %49, i32* %50, align 8
  %51 = bitcast %"class.rtc::scoped_refptr.79"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #15
  %52 = getelementptr inbounds %"class.rtc::scoped_refptr.79", %"class.rtc::scoped_refptr.79"* %6, i64 0, i32 0
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %53 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 15
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 5
  br i1 %55, label %56, label %123

56:                                               ; preds = %44
  %57 = bitcast %"class.rtc::scoped_refptr.80"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #15
  %58 = getelementptr inbounds %"class.rtc::scoped_refptr.80", %"class.rtc::scoped_refptr.80"* %7, i64 0, i32 0
  store %"class.webrtc::NV12Buffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::NV12Buffer"*), %"class.webrtc::NV12Buffer"** %58, align 8
  %59 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  %60 = load i32, i32* %45, align 8
  %61 = load i32, i32* %48, align 4
  call void @_ZN6webrtc20VideoFrameBufferPool16CreateNV12BufferEii(%"class.rtc::scoped_refptr.80"* nonnull sret %7, %"class.webrtc::VideoFrameBufferPool"* %59, i32 %60, i32 %61) #15
  %62 = load %"class.webrtc::NV12Buffer"*, %"class.webrtc::NV12Buffer"** %58, align 8
  %63 = getelementptr inbounds %"class.webrtc::NV12Buffer", %"class.webrtc::NV12Buffer"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = icmp eq %"class.webrtc::NV12Buffer"* %62, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.webrtc::NV12Buffer", %"class.webrtc::NV12Buffer"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.webrtc::NV12Buffer"* %62 to void (%"class.rtc::RefCountInterface"*)***
  %68 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %67, align 8
  %69 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %68, align 8
  call void %69(%"class.rtc::RefCountInterface"* %66) #15
  br label %70

70:                                               ; preds = %65, %56
  %71 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %72 = icmp eq %"class.webrtc::VideoFrameBuffer"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %71, i64 0, i32 0
  %75 = bitcast %"class.webrtc::VideoFrameBuffer"* %71 to i32 (%"class.rtc::RefCountInterface"*)***
  %76 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %75, align 8
  %77 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %76, i64 1
  %78 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %77, align 8
  %79 = call i32 %78(%"class.rtc::RefCountInterface"* %74) #15
  br label %80

80:                                               ; preds = %70, %73
  store %"class.webrtc::VideoFrameBuffer"* %63, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %81 = load %"class.webrtc::NV12Buffer"*, %"class.webrtc::NV12Buffer"** %58, align 8
  %82 = icmp eq %"class.webrtc::NV12Buffer"* %81, null
  br i1 %82, label %198, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 12, i64 0
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 13, i64 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 12, i64 1
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 13, i64 1
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 12, i64 2
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 13, i64 2
  %95 = load i32, i32* %94, align 8
  %96 = call i8* @_ZN6webrtc10NV12Buffer12MutableDataYEv(%"class.webrtc::NV12Buffer"* nonnull %81) #15
  %97 = load %"class.webrtc::NV12Buffer"*, %"class.webrtc::NV12Buffer"** %58, align 8
  %98 = bitcast %"class.webrtc::NV12Buffer"* %97 to i32 (%"class.webrtc::NV12Buffer"*)***
  %99 = load i32 (%"class.webrtc::NV12Buffer"*)**, i32 (%"class.webrtc::NV12Buffer"*)*** %98, align 8
  %100 = getelementptr inbounds i32 (%"class.webrtc::NV12Buffer"*)*, i32 (%"class.webrtc::NV12Buffer"*)** %99, i64 13
  %101 = load i32 (%"class.webrtc::NV12Buffer"*)*, i32 (%"class.webrtc::NV12Buffer"*)** %100, align 8
  %102 = call i32 %101(%"class.webrtc::NV12Buffer"* %97) #15
  %103 = load %"class.webrtc::NV12Buffer"*, %"class.webrtc::NV12Buffer"** %58, align 8
  %104 = call i8* @_ZN6webrtc10NV12Buffer13MutableDataUVEv(%"class.webrtc::NV12Buffer"* %103) #15
  %105 = load %"class.webrtc::NV12Buffer"*, %"class.webrtc::NV12Buffer"** %58, align 8
  %106 = bitcast %"class.webrtc::NV12Buffer"* %105 to i32 (%"class.webrtc::NV12Buffer"*)***
  %107 = load i32 (%"class.webrtc::NV12Buffer"*)**, i32 (%"class.webrtc::NV12Buffer"*)*** %106, align 8
  %108 = getelementptr inbounds i32 (%"class.webrtc::NV12Buffer"*)*, i32 (%"class.webrtc::NV12Buffer"*)** %107, i64 14
  %109 = load i32 (%"class.webrtc::NV12Buffer"*)*, i32 (%"class.webrtc::NV12Buffer"*)** %108, align 8
  %110 = call i32 %109(%"class.webrtc::NV12Buffer"* %105) #15
  %111 = load i32, i32* %45, align 8
  %112 = load i32, i32* %48, align 4
  %113 = call i32 @I420ToNV12(i8* %85, i32 %87, i8* %89, i32 %91, i8* %93, i32 %95, i8* %96, i32 %102, i8* %104, i32 %110, i32 %111, i32 %112) #15
  %114 = load %"class.webrtc::NV12Buffer"*, %"class.webrtc::NV12Buffer"** %58, align 8
  %115 = icmp eq %"class.webrtc::NV12Buffer"* %114, null
  br i1 %115, label %198, label %116

116:                                              ; preds = %83
  %117 = getelementptr inbounds %"class.webrtc::NV12Buffer", %"class.webrtc::NV12Buffer"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.webrtc::NV12Buffer"* %114 to i32 (%"class.rtc::RefCountInterface"*)***
  %119 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %118, align 8
  %120 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %119, i64 1
  %121 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %120, align 8
  %122 = call i32 %121(%"class.rtc::RefCountInterface"* %117) #15
  br label %198

123:                                              ; preds = %44
  %124 = bitcast %"class.rtc::scoped_refptr.85"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #15
  %125 = getelementptr inbounds %"class.rtc::scoped_refptr.85", %"class.rtc::scoped_refptr.85"* %8, i64 0, i32 0
  store %"class.webrtc::I420Buffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::I420Buffer"*), %"class.webrtc::I420Buffer"** %125, align 8
  %126 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  %127 = load i32, i32* %45, align 8
  %128 = load i32, i32* %48, align 4
  call void @_ZN6webrtc20VideoFrameBufferPool16CreateI420BufferEii(%"class.rtc::scoped_refptr.85"* nonnull sret %8, %"class.webrtc::VideoFrameBufferPool"* %126, i32 %127, i32 %128) #15
  %129 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %130 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %129, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = icmp eq %"class.webrtc::I420Buffer"* %129, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.webrtc::I420Buffer"* %129 to void (%"class.rtc::RefCountInterface"*)***
  %135 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %134, align 8
  %136 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %135, align 8
  call void %136(%"class.rtc::RefCountInterface"* %133) #15
  br label %137

137:                                              ; preds = %132, %123
  %138 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %139 = icmp eq %"class.webrtc::VideoFrameBuffer"* %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %138, i64 0, i32 0
  %142 = bitcast %"class.webrtc::VideoFrameBuffer"* %138 to i32 (%"class.rtc::RefCountInterface"*)***
  %143 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %142, align 8
  %144 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %143, i64 1
  %145 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %144, align 8
  %146 = call i32 %145(%"class.rtc::RefCountInterface"* %141) #15
  br label %147

147:                                              ; preds = %137, %140
  store %"class.webrtc::VideoFrameBuffer"* %130, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %148 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %149 = icmp eq %"class.webrtc::I420Buffer"* %148, null
  br i1 %149, label %198, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 12, i64 0
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 13, i64 0
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 12, i64 1
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 13, i64 1
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 12, i64 2
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %1, i64 0, i32 13, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = call i8* @_ZN6webrtc10I420Buffer12MutableDataYEv(%"class.webrtc::I420Buffer"* nonnull %148) #15
  %164 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %165 = bitcast %"class.webrtc::I420Buffer"* %164 to i32 (%"class.webrtc::I420Buffer"*)***
  %166 = load i32 (%"class.webrtc::I420Buffer"*)**, i32 (%"class.webrtc::I420Buffer"*)*** %165, align 8
  %167 = getelementptr inbounds i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %166, i64 13
  %168 = load i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %167, align 8
  %169 = call i32 %168(%"class.webrtc::I420Buffer"* %164) #15
  %170 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %171 = call i8* @_ZN6webrtc10I420Buffer12MutableDataUEv(%"class.webrtc::I420Buffer"* %170) #15
  %172 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %173 = bitcast %"class.webrtc::I420Buffer"* %172 to i32 (%"class.webrtc::I420Buffer"*)***
  %174 = load i32 (%"class.webrtc::I420Buffer"*)**, i32 (%"class.webrtc::I420Buffer"*)*** %173, align 8
  %175 = getelementptr inbounds i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %174, i64 14
  %176 = load i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %175, align 8
  %177 = call i32 %176(%"class.webrtc::I420Buffer"* %172) #15
  %178 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %179 = call i8* @_ZN6webrtc10I420Buffer12MutableDataVEv(%"class.webrtc::I420Buffer"* %178) #15
  %180 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %181 = bitcast %"class.webrtc::I420Buffer"* %180 to i32 (%"class.webrtc::I420Buffer"*)***
  %182 = load i32 (%"class.webrtc::I420Buffer"*)**, i32 (%"class.webrtc::I420Buffer"*)*** %181, align 8
  %183 = getelementptr inbounds i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %182, i64 15
  %184 = load i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %183, align 8
  %185 = call i32 %184(%"class.webrtc::I420Buffer"* %180) #15
  %186 = load i32, i32* %45, align 8
  %187 = load i32, i32* %48, align 4
  %188 = call i32 @I420Copy(i8* %152, i32 %154, i8* %156, i32 %158, i8* %160, i32 %162, i8* %163, i32 %169, i8* %171, i32 %177, i8* %179, i32 %185, i32 %186, i32 %187) #15
  %189 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %125, align 8
  %190 = icmp eq %"class.webrtc::I420Buffer"* %189, null
  br i1 %190, label %198, label %191

191:                                              ; preds = %150
  %192 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = bitcast %"class.webrtc::I420Buffer"* %189 to i32 (%"class.rtc::RefCountInterface"*)***
  %194 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %193, align 8
  %195 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %194, i64 1
  %196 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %195, align 8
  %197 = call i32 %196(%"class.rtc::RefCountInterface"* %192) #15
  br label %198

198:                                              ; preds = %191, %150, %147, %116, %83, %80
  %199 = phi i8* [ %57, %80 ], [ %57, %83 ], [ %57, %116 ], [ %124, %147 ], [ %124, %150 ], [ %124, %191 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #15
  %200 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %201 = icmp eq %"class.webrtc::VideoFrameBuffer"* %200, null
  br i1 %201, label %202, label %219

202:                                              ; preds = %198
  %203 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #15
  %204 = call i8* @_Znwm(i64 64) #14
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %204, i8** %205, align 8
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = bitcast i64* %206 to <2 x i64>*
  store <2 x i64> <i64 50, i64 -9223372036854775744>, <2 x i64>* %207, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i64 50, i1 false) #15
  %208 = getelementptr inbounds i8, i8* %204, i64 50
  store i8 0, i8* %208, align 1
  %209 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i32 2) #15
  %210 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %202
  %215 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %215) #14
  br label %216

216:                                              ; preds = %202, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #15
  %217 = icmp eq %"class.webrtc::metrics::Histogram"* %209, null
  br i1 %217, label %234, label %218

218:                                              ; preds = %216
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %209, i32 1) #15
  br label %234

219:                                              ; preds = %198
  %220 = bitcast %"class.webrtc::VideoFrame"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %220) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %220, i8* align 8 bitcast ({ i16, [6 x i8], %"class.rtc::scoped_refptr.79", i32, [4 x i8], i64, i64, i32, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.44 } } } } } } } } } }, { { { { i8, [3 x i8], %union.anon.21 } } } }, { { { { i8, [3 x i8], %union.anon.90 } } } }, %"class.webrtc::RtpPacketInfos", { { { { i8, [7 x i8], %union.anon.95 } } } } }* @__const._ZN6webrtc16LibvpxVp8Decoder11ReturnFrameEPK9vpx_imagejiPKNS_10ColorSpaceE.decoded_image to i8*), i64 176, i1 false)
  %221 = bitcast %"class.webrtc::VideoFrame::Builder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %221) #15
  call void @_ZN6webrtc10VideoFrame7BuilderC1Ev(%"class.webrtc::VideoFrame::Builder"* nonnull %11) #15
  %222 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder22set_video_frame_bufferERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.webrtc::VideoFrame::Builder"* nonnull %11, %"class.rtc::scoped_refptr.79"* nonnull dereferenceable(8) %6) #15
  %223 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder17set_timestamp_rtpEj(%"class.webrtc::VideoFrame::Builder"* %222, i32 %2) #15
  %224 = call dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder15set_color_spaceEPKNS_10ColorSpaceE(%"class.webrtc::VideoFrame::Builder"* %223, %"class.webrtc::ColorSpace"* %4) #15
  call void @_ZN6webrtc10VideoFrame7Builder5buildEv(%"class.webrtc::VideoFrame"* nonnull sret %10, %"class.webrtc::VideoFrame::Builder"* %224) #15
  call void @_ZN6webrtc10VideoFrame7BuilderD1Ev(%"class.webrtc::VideoFrame::Builder"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %221) #15
  %225 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 4
  %226 = load %"class.webrtc::DecodedImageCallback"*, %"class.webrtc::DecodedImageCallback"** %225, align 8
  %227 = trunc i32 %3 to i16
  %228 = shl i16 %227, 8
  %229 = or i16 %228, 1
  %230 = bitcast %"class.webrtc::DecodedImageCallback"* %226 to void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)***
  %231 = load void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)**, void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)*, void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)** %231, i64 4
  %233 = load void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)*, void (%"class.webrtc::DecodedImageCallback"*, %"class.webrtc::VideoFrame"*, i64, i16)** %232, align 8
  call void %233(%"class.webrtc::DecodedImageCallback"* %226, %"class.webrtc::VideoFrame"* nonnull dereferenceable(176) %10, i64 0, i16 %229) #15
  call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %220) #15
  br label %234

234:                                              ; preds = %218, %216, %219
  %235 = phi i32 [ 0, %219 ], [ 1, %216 ], [ 1, %218 ]
  %236 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %52, align 8
  %237 = icmp eq %"class.webrtc::VideoFrameBuffer"* %236, null
  br i1 %237, label %245, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %236, i64 0, i32 0
  %240 = bitcast %"class.webrtc::VideoFrameBuffer"* %236 to i32 (%"class.rtc::RefCountInterface"*)***
  %241 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %240, align 8
  %242 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %241, i64 1
  %243 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %242, align 8
  %244 = call i32 %243(%"class.rtc::RefCountInterface"* %239) #15
  br label %245

245:                                              ; preds = %234, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #15
  br label %246

246:                                              ; preds = %5, %245
  %247 = phi i32 [ %235, %245 ], [ 1, %5 ]
  ret i32 %247
}

declare void @_ZN6webrtc20VideoFrameBufferPool16CreateNV12BufferEii(%"class.rtc::scoped_refptr.80"* sret, %"class.webrtc::VideoFrameBufferPool"*, i32, i32) local_unnamed_addr #2

declare i32 @I420ToNV12(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

declare i8* @_ZN6webrtc10NV12Buffer12MutableDataYEv(%"class.webrtc::NV12Buffer"*) local_unnamed_addr #2

declare i8* @_ZN6webrtc10NV12Buffer13MutableDataUVEv(%"class.webrtc::NV12Buffer"*) local_unnamed_addr #2

declare void @_ZN6webrtc20VideoFrameBufferPool16CreateI420BufferEii(%"class.rtc::scoped_refptr.85"* sret, %"class.webrtc::VideoFrameBufferPool"*, i32, i32) local_unnamed_addr #2

declare i32 @I420Copy(i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

declare i8* @_ZN6webrtc10I420Buffer12MutableDataYEv(%"class.webrtc::I420Buffer"*) local_unnamed_addr #2

declare i8* @_ZN6webrtc10I420Buffer12MutableDataUEv(%"class.webrtc::I420Buffer"*) local_unnamed_addr #2

declare i8* @_ZN6webrtc10I420Buffer12MutableDataVEv(%"class.webrtc::I420Buffer"*) local_unnamed_addr #2

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6webrtc10VideoFrame7BuilderC1Ev(%"class.webrtc::VideoFrame::Builder"*) unnamed_addr #2

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder22set_video_frame_bufferERKN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.webrtc::VideoFrame::Builder"*, %"class.rtc::scoped_refptr.79"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder17set_timestamp_rtpEj(%"class.webrtc::VideoFrame::Builder"*, i32) local_unnamed_addr #2

declare dereferenceable(144) %"class.webrtc::VideoFrame::Builder"* @_ZN6webrtc10VideoFrame7Builder15set_color_spaceEPKNS_10ColorSpaceE(%"class.webrtc::VideoFrame::Builder"*, %"class.webrtc::ColorSpace"*) local_unnamed_addr #2

declare void @_ZN6webrtc10VideoFrame7Builder5buildEv(%"class.webrtc::VideoFrame"* sret, %"class.webrtc::VideoFrame::Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrame7BuilderD1Ev(%"class.webrtc::VideoFrame::Builder"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc16LibvpxVp8Decoder30RegisterDecodeCompleteCallbackEPNS_20DecodedImageCallbackE(%"class.webrtc::LibvpxVp8Decoder"* nocapture, %"class.webrtc::DecodedImageCallback"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 4
  store %"class.webrtc::DecodedImageCallback"* %1, %"class.webrtc::DecodedImageCallback"** %3, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Decoder7ReleaseEv(%"class.webrtc::LibvpxVp8Decoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 7
  %3 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %2, align 8
  %4 = icmp eq %struct.vpx_codec_ctx* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @vpx_codec_destroy(%struct.vpx_codec_ctx* nonnull %3) #15
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 0, i32 -3
  %13 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %2, align 8
  %14 = icmp eq %struct.vpx_codec_ctx* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %5, %9
  %16 = phi i32 [ %12, %9 ], [ 0, %5 ]
  %17 = phi %struct.vpx_codec_ctx* [ %13, %9 ], [ %3, %5 ]
  %18 = bitcast %struct.vpx_codec_ctx* %17 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %15, %9
  %20 = phi i32 [ %16, %15 ], [ %12, %9 ]
  store %struct.vpx_codec_ctx* null, %struct.vpx_codec_ctx** %2, align 8
  br label %21

21:                                               ; preds = %1, %19
  %22 = phi i32 [ %20, %19 ], [ 0, %1 ]
  %23 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc20VideoFrameBufferPool7ReleaseEv(%"class.webrtc::VideoFrameBufferPool"* %23) #15
  %24 = getelementptr inbounds %"class.webrtc::LibvpxVp8Decoder", %"class.webrtc::LibvpxVp8Decoder"* %0, i64 0, i32 5
  store i8 0, i8* %24, align 8
  ret i32 %22
}

declare i32 @vpx_codec_destroy(%struct.vpx_codec_ctx*) local_unnamed_addr #2

declare void @_ZN6webrtc20VideoFrameBufferPool7ReleaseEv(%"class.webrtc::VideoFrameBufferPool"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16LibvpxVp8Decoder14GetDecoderInfoEv(%"struct.webrtc::VideoDecoder::DecoderInfo"* noalias sret, %"class.webrtc::LibvpxVp8Decoder"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::VideoDecoder::DecoderInfo", %"struct.webrtc::VideoDecoder::DecoderInfo"* %0, i64 0, i32 1
  %4 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to i8*
  %5 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 25, i1 false) #15
  %6 = bitcast %"struct.webrtc::VideoDecoder::DecoderInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 6, i8* %7, align 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6, i1 false) #15
  %8 = getelementptr inbounds i8, i8* %4, i64 6
  store i8 0, i8* %8, align 1
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK6webrtc16LibvpxVp8Decoder18ImplementationNameEv(%"class.webrtc::LibvpxVp8Decoder"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #9

declare i64 @_ZN3rtc10TimeMillisEv() local_unnamed_addr #2

declare void @_ZN3rtc9ExpFilter5ResetEf(%"class.rtc::ExpFilter"*, float) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i32 @vpx_codec_control_(%struct.vpx_codec_ctx*, i32, ...) local_unnamed_addr #2

declare float @_ZN3rtc9ExpFilter5ApplyEff(%"class.rtc::ExpFilter"*, float, float) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
