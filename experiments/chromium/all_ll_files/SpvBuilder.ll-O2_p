; ModuleID = '../../third_party/vulkan-deps/glslang/src/SPIRV/SpvBuilder.cpp'
source_filename = "../../third_party/vulkan-deps/glslang/src/SPIRV/SpvBuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spv::Builder" = type { i32 (...)**, i32, i32, i32, i32, %"class.std::__1::basic_string", i32, i8*, i8, %"class.std::__1::set", %"class.std::__1::vector", %"class.std::__1::vector", i32, i32, %"class.std::__1::set.14", i32, %"class.spv::Module", %"class.spv::Block"*, i32, %"class.spv::Function"*, i8, [7 x i8], %"struct.spv::Builder::AccessChain", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::vector.77", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::vector.55", %"class.std::__1::stack", %"class.std::__1::stack.115", %"class.std::__1::unordered_map.128", %"class.std::__1::map", %"class.spv::SpvBuildLogger"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8** }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.spv::Module" = type { i32 (...)**, %"class.std::__1::vector.24", %"class.std::__1::vector.55" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.spv::Function"**, %"class.spv::Function"**, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.spv::Function"** }
%"class.spv::Block" = type <{ i32 (...)**, %"class.std::__1::vector.38", %"class.std::__1::vector.48", %"class.std::__1::vector.48", %"class.std::__1::vector.38", %"class.spv::Function"*, i8, [7 x i8] }>
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.spv::Block"**, %"class.spv::Block"**, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.spv::Block"** }
%"class.spv::Function" = type { i32 (...)**, %"class.spv::Module"*, %"class.spv::Instruction", %"class.std::__1::vector.55", %"class.std::__1::vector.48", i8, i8, %"class.std::__1::set.62" }
%"class.spv::Instruction" = type { i32 (...)**, i32, i32, i32, %"class.std::__1::vector.26", %"class.std::__1::vector.33", %"class.spv::Block"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i32*, i32*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i32* }
%"class.std::__1::vector.33" = type { i64*, i64, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.spv::Builder::AccessChain" = type <{ i32, [4 x i8], %"class.std::__1::vector.26", i32, [4 x i8], %"class.std::__1::vector.26", i32, i32, i8, [3 x i8], i32, %"struct.spv::Builder::AccessChain::CoherentFlags", [4 x i8] }>
%"struct.spv::Builder::AccessChain::CoherentFlags" = type { i16, [2 x i8] }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.spv::Instruction"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.spv::Function"* }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::unique_ptr.79"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.spv::Instruction"**, %"class.spv::Instruction"**, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.spv::Instruction"** }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.114" }
%"struct.std::__1::__split_buffer" = type { %"class.spv::Block"***, %"class.spv::Block"***, %"class.spv::Block"***, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.spv::Block"*** }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::stack.115" = type { %"class.std::__1::deque.116" }
%"class.std::__1::deque.116" = type { %"class.std::__1::__deque_base.117" }
%"class.std::__1::__deque_base.117" = type { %"struct.std::__1::__split_buffer.118", i64, %"class.std::__1::__compressed_pair.124" }
%"struct.std::__1::__split_buffer.118" = type { %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"**, %"class.std::__1::__compressed_pair.119" }
%"struct.spv::Builder::LoopBlocks" = type { %"class.spv::Block"*, %"class.spv::Block"*, %"class.spv::Block"*, %"class.spv::Block"* }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.spv::Builder::LoopBlocks"** }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unordered_map.128" = type { %"class.std::__1::__hash_table.129" }
%"class.std::__1::__hash_table.129" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.133"** }
%"struct.std::__1::__hash_node_base.133" = type { %"struct.std::__1::__hash_node_base.133"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::__bucket_list_deallocator.135" }
%"class.std::__1::__bucket_list_deallocator.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.133" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.155" }
%"class.std::__1::__tree.155" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.spv::SpvBuildLogger" = type { %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.std::__1::vector.163", %"class.std::__1::vector.163" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.std::__1::basic_string"* }
%"class.spv::Builder::If" = type { %"class.spv::Builder"*, i32, i32, %"class.spv::Function"*, %"class.spv::Block"*, %"class.spv::Block"*, %"class.spv::Block"*, %"class.spv::Block"* }
%"class.std::__1::__tree_node.281" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node.280" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::tuple.219" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.267" = type { %"struct.std::__1::__tuple_impl.268" }
%"struct.std::__1::__tuple_impl.268" = type { %"class.std::__1::__tuple_leaf.269" }
%"class.std::__1::__tuple_leaf.269" = type { i32* }
%"class.spvutils::HexFloat" = type { %"class.spvutils::FloatProxy" }
%"class.spvutils::FloatProxy" = type { i32 }
%"class.spvutils::HexFloat.172" = type { %"class.spvutils::FloatProxy.173" }
%"class.spvutils::FloatProxy.173" = type { i16 }
%"class.std::__1::tuple.282" = type { %"struct.std::__1::__tuple_impl.283" }
%"struct.std::__1::__tuple_impl.283" = type { %"class.std::__1::__tuple_leaf.284" }
%"class.std::__1::__tuple_leaf.284" = type { i32* }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.std::__1::vector.177"*, %"class.std::__1::vector.177"*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { i32*, i32*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { i32* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.std::__1::vector.177"* }
%"class.std::__1::__tree_node.240" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"*, %"class.std::__1::__compressed_pair.191" }
%"struct.spv::IdImmediate" = type { i8, i32 }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.spv::IdImmediate"* }
%"struct.spv::Builder::TextureParameters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8 }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { i32*, i32*, %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { i32* }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*)* }
%"struct.std::__1::__split_buffer.289" = type { %"class.spv::Block"***, %"class.spv::Block"***, %"class.spv::Block"***, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.110", %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::allocator.112"* }
%"class.std::__1::allocator.112" = type { i8 }
%"struct.std::__1::__split_buffer.295" = type { %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"**, %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::allocator.122"* }
%"class.std::__1::allocator.122" = type { i8 }

$_ZN3spv6ModuleD2Ev = comdat any

$_ZN3spv7Builder11getStringIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZN3spv11Instruction12addIdOperandEj = comdat any

$_ZN3spv11Instruction19addImmediateOperandEj = comdat any

$_ZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE6castToINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEEvRT_NS_15round_directionE = comdat any

$_ZN3spv8FunctionC2EjjjjRNS_6ModuleE = comdat any

$_ZN3spv8Function8addBlockEPNS_5BlockE = comdat any

$_ZNK3spv7Builder14getTypeNumRowsEj = comdat any

$_ZN3spv5Block14addPredecessorEPS0_ = comdat any

$_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE = comdat any

$_ZN3spv11InstructionD2Ev = comdat any

$_ZN3spv6ModuleD0Ev = comdat any

$_ZN3spv11InstructionD0Ev = comdat any

$_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN3spv6Module11addFunctionEPNS_8FunctionE = comdat any

$_ZN3spv8FunctionD2Ev = comdat any

$_ZN3spv8FunctionD0Ev = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZN3spv5BlockD2Ev = comdat any

$_ZN3spv5BlockD0Ev = comdat any

$_ZNK3spv8Function4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN3spv5BlockENS2_11ReachReasonES4_EE11__call_implINS0_20__default_alloc_funcIZNKS2_8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKS3_S5_S4_E_S6_EEEEvPKNS0_16__policy_storageES4_S5_S4_ = comdat any

$_ZNK3spv5Block4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPb = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN3spv8FunctionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__15dequeIPN3spv5BlockENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN3spv5BlockENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPPN3spv5BlockENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPPN3spv5BlockERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZNSt3__15dequeIN3spv7Builder10LoopBlocksENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksERNS_9allocatorIS4_EEE10push_frontERKS4_ = comdat any

$_ZTVN3spv6ModuleE = comdat any

$_ZTVN3spv11InstructionE = comdat any

$_ZTVN3spv8FunctionE = comdat any

$_ZTVN3spv5BlockE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK3spv8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKNS4_5BlockENS4_11ReachReasonEPSB_E_FvSF_SE_SF_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit = comdat any

$_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit = comdat any

$_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit = comdat any

$_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit = comdat any

@_ZTVN3spv7BuilderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spv::Builder"*)* @_ZN3spv7BuilderD2Ev to i8*), i8* bitcast (void (%"class.spv::Builder"*)* @_ZN3spv7BuilderD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"ResType\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"indexable\00", align 1
@_ZTVN3spv6ModuleE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spv::Module"*)* @_ZN3spv6ModuleD2Ev to i8*), i8* bitcast (void (%"class.spv::Module"*)* @_ZN3spv6ModuleD0Ev to i8*)] }, comdat, align 8
@_ZTVN3spv11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spv::Instruction"*)* @_ZN3spv11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spv::Instruction"*)* @_ZN3spv11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN3spv8FunctionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spv::Function"*)* @_ZN3spv8FunctionD2Ev to i8*), i8* bitcast (void (%"class.spv::Function"*)* @_ZN3spv8FunctionD0Ev to i8*)] }, comdat, align 8
@_ZTVN3spv5BlockE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spv::Block"*)* @_ZN3spv5BlockD2Ev to i8*), i8* bitcast (void (%"class.spv::Block"*)* @_ZN3spv5BlockD0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK3spv8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKNS4_5BlockENS4_11ReachReasonEPSB_E_FvSF_SE_SF_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit = linkonce_odr hidden global i32 0, comdat, align 4
@_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit = linkonce_odr hidden global i32 0, comdat, align 4
@_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit = linkonce_odr hidden global i64 0, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@switch.table._ZN3spv7Builder22createTextureQueryCallENS_2OpERKNS0_17TextureParametersEb = private unnamed_addr constant [7 x i32] [i32 1, i32 2, i32 3, i32 2, i32 2, i32 1, i32 2], align 4

@_ZN3spv7BuilderC1EjjPNS_14SpvBuildLoggerE = hidden unnamed_addr alias void (%"class.spv::Builder"*, i32, i32, %"class.spv::SpvBuildLogger"*), void (%"class.spv::Builder"*, i32, i32, %"class.spv::SpvBuildLogger"*)* @_ZN3spv7BuilderC2EjjPNS_14SpvBuildLoggerE
@_ZN3spv7BuilderD1Ev = hidden unnamed_addr alias void (%"class.spv::Builder"*), void (%"class.spv::Builder"*)* @_ZN3spv7BuilderD2Ev
@_ZN3spv7Builder2IfC1EjjRS0_ = hidden unnamed_addr alias void (%"class.spv::Builder::If"*, i32, i32, %"class.spv::Builder"*), void (%"class.spv::Builder::If"*, i32, i32, %"class.spv::Builder"*)* @_ZN3spv7Builder2IfC2EjjRS0_

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7BuilderC2EjjPNS_14SpvBuildLoggerE(%"class.spv::Builder"*, i32, i32, %"class.spv::SpvBuildLogger"*) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv7BuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 7
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 8
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #17
  %14 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 40, i1 false)
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 10
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 13
  %17 = bitcast %"class.std::__1::vector"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 52, i1 false)
  store i32 1, i32* %16, align 4
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_node_base"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %20, align 8
  %22 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 15
  store i32 %2, i32* %22, align 8
  %23 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv6ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 1
  %25 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 19
  store %"class.spv::Function"* null, %"class.spv::Function"** %25, align 8
  %26 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %28 = bitcast %"class.std::__1::vector.26"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #17
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %30 = bitcast %"class.std::__1::vector.26"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #17
  %31 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 11, i32 0
  %32 = bitcast %"class.std::__1::vector.24"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 60, i1 false)
  %33 = load i16, i16* %31, align 4
  %34 = and i16 %33, -1024
  %35 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23
  %36 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0, i32 3
  %37 = bitcast %"class.std::__1::__compressed_pair.105"* %36 to i32*
  %38 = bitcast %"class.std::__1::vector.38"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 248, i1 false)
  store i32 1065353216, i32* %37, align 4
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 33
  %40 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 33, i32 0, i32 3
  %41 = bitcast %"class.std::__1::__compressed_pair.105"* %40 to i32*
  %42 = bitcast %"class.std::__1::unordered_map"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %41, align 4
  %43 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34
  %44 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0, i32 3
  %45 = bitcast %"class.std::__1::__compressed_pair.105"* %44 to i32*
  %46 = bitcast %"class.std::__1::unordered_map"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #17
  store i32 1065353216, i32* %45, align 4
  %47 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 35
  %48 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 38, i32 0, i32 3
  %49 = bitcast %"class.std::__1::__compressed_pair.150"* %48 to i32*
  %50 = bitcast %"class.std::__1::vector.55"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 152, i1 false)
  store i32 1065353216, i32* %49, align 4
  %51 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 1, i32 0, i32 0
  %53 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 0
  %54 = bitcast %"class.std::__1::__tree_node_base"** %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %52, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 40
  store %"class.spv::SpvBuildLogger"* %3, %"class.spv::SpvBuildLogger"** %55, align 8
  %56 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 0
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 3
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %61 = bitcast i32** %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %63 = bitcast i32* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 9, i1 false) #17
  store i16 %34, i16* %31, align 4
  %64 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 10
  store i32 0, i32* %64, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16clearAccessChainEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %4 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %10 = bitcast %"class.std::__1::vector.26"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 11, i32 0
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 9, i1 false)
  %17 = load i16, i16* %15, align 4
  %18 = and i16 %17, -1024
  store i16 %18, i16* %15, align 4
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 10
  store i32 0, i32* %19, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7BuilderD2Ev(%"class.spv::Builder"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv7BuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.281"**
  %6 = load %"class.std::__1::__tree_node.281"*, %"class.std::__1::__tree_node.281"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.155"* %3, %"class.std::__1::__tree_node.281"* %6) #17
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 38, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base.133"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %1, %22
  %11 = phi %"struct.std::__1::__hash_node_base.133"* [ %13, %22 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %11, i64 2
  %15 = bitcast %"struct.std::__1::__hash_node_base.133"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %10
  %20 = bitcast %"struct.std::__1::__hash_node_base.133"* %14 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %19, %10
  %23 = bitcast %"struct.std::__1::__hash_node_base.133"* %11 to i8*
  tail call void @_ZdlPv(i8* %23) #18
  %24 = icmp eq %"struct.std::__1::__hash_node_base.133"* %13, null
  br i1 %24, label %25, label %10

25:                                               ; preds = %22, %1
  %26 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 38, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %26, align 8
  store %"struct.std::__1::__hash_node_base.133"** null, %"struct.std::__1::__hash_node_base.133"*** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.133"** %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast %"struct.std::__1::__hash_node_base.133"** %27 to i8*
  tail call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 1
  %33 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %32, align 8
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = lshr i64 %35, 7
  %37 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %33, i64 %36
  %38 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 2
  %39 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %38, align 8
  %40 = icmp eq %"struct.spv::Builder::LoopBlocks"** %39, %33
  %41 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %39 to i64
  %42 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %33 to i64
  br i1 %40, label %43, label %45

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %58

45:                                               ; preds = %31
  %46 = load %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %37, align 8
  %47 = and i64 %35, 127
  %48 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %46, i64 %47
  %49 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %35
  %52 = lshr i64 %51, 7
  %53 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %33, i64 %52
  %54 = load %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %53, align 8
  %55 = and i64 %51, 127
  %56 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %54, i64 %55
  %57 = icmp eq %"struct.spv::Builder::LoopBlocks"* %56, %48
  br i1 %57, label %58, label %64

58:                                               ; preds = %77, %45, %43
  %59 = phi i64* [ %44, %43 ], [ %49, %45 ], [ %49, %77 ]
  store i64 0, i64* %59, align 8
  %60 = bitcast %"struct.spv::Builder::LoopBlocks"*** %38 to i64*
  %61 = sub i64 %41, %42
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %82, label %95

64:                                               ; preds = %45, %77
  %65 = phi %"struct.spv::Builder::LoopBlocks"* [ %80, %77 ], [ %48, %45 ]
  %66 = phi %"struct.spv::Builder::LoopBlocks"** [ %79, %77 ], [ %37, %45 ]
  %67 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %65, i64 1
  %68 = ptrtoint %"struct.spv::Builder::LoopBlocks"* %67 to i64
  %69 = bitcast %"struct.spv::Builder::LoopBlocks"** %66 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = icmp eq i64 %71, 4096
  br i1 %72, label %73, label %77

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %66, i64 1
  %75 = bitcast %"struct.spv::Builder::LoopBlocks"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  br label %77

77:                                               ; preds = %73, %64
  %78 = phi i64 [ %76, %73 ], [ %68, %64 ]
  %79 = phi %"struct.spv::Builder::LoopBlocks"** [ %74, %73 ], [ %66, %64 ]
  %80 = inttoptr i64 %78 to %"struct.spv::Builder::LoopBlocks"*
  %81 = icmp eq %"struct.spv::Builder::LoopBlocks"* %56, %80
  br i1 %81, label %58, label %64

82:                                               ; preds = %58, %82
  %83 = phi %"struct.spv::Builder::LoopBlocks"** [ %87, %82 ], [ %33, %58 ]
  %84 = bitcast %"struct.spv::Builder::LoopBlocks"** %83 to i8**
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #18
  %86 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %32, align 8
  %87 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %86, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %87, %"struct.spv::Builder::LoopBlocks"*** %32, align 8
  %88 = load i64, i64* %60, align 8
  %89 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %87 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = icmp ugt i64 %91, 2
  br i1 %92, label %82, label %93

93:                                               ; preds = %82
  %94 = inttoptr i64 %88 to %"struct.spv::Builder::LoopBlocks"**
  br label %95

95:                                               ; preds = %93, %58
  %96 = phi %"struct.spv::Builder::LoopBlocks"** [ %39, %58 ], [ %94, %93 ]
  %97 = phi %"struct.spv::Builder::LoopBlocks"** [ %33, %58 ], [ %87, %93 ]
  %98 = phi i64 [ %62, %58 ], [ %91, %93 ]
  switch i64 %98, label %102 [
    i64 1, label %100
    i64 2, label %99
  ]

99:                                               ; preds = %95
  br label %100

100:                                              ; preds = %95, %99
  %101 = phi i64 [ 128, %99 ], [ 64, %95 ]
  store i64 %101, i64* %34, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq %"struct.spv::Builder::LoopBlocks"** %97, %96
  br i1 %103, label %122, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spv::Builder::LoopBlocks"** [ %108, %104 ], [ %97, %102 ]
  %106 = bitcast %"struct.spv::Builder::LoopBlocks"** %105 to i8**
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #18
  %108 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %105, i64 1
  %109 = icmp eq %"struct.spv::Builder::LoopBlocks"** %108, %96
  br i1 %109, label %110, label %104

110:                                              ; preds = %104
  %111 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %32, align 8
  %112 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %38, align 8
  %113 = icmp eq %"struct.spv::Builder::LoopBlocks"** %112, %111
  br i1 %113, label %122, label %114

114:                                              ; preds = %110
  %115 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %111 to i64
  %116 = getelementptr %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %112, i64 -1
  %117 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %116 to i64
  %118 = sub i64 %117, %115
  %119 = lshr i64 %118, 3
  %120 = xor i64 %119, -1
  %121 = getelementptr %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %112, i64 %120
  store %"struct.spv::Builder::LoopBlocks"** %121, %"struct.spv::Builder::LoopBlocks"*** %38, align 8
  br label %122

122:                                              ; preds = %114, %110, %102
  %123 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 0
  %124 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %123, align 8
  %125 = icmp eq %"struct.spv::Builder::LoopBlocks"** %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = bitcast %"struct.spv::Builder::LoopBlocks"** %124 to i8*
  tail call void @_ZdlPv(i8* %127) #18
  br label %128

128:                                              ; preds = %122, %126
  %129 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1
  %130 = load %"class.spv::Block"***, %"class.spv::Block"**** %129, align 8
  %131 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = lshr i64 %132, 9
  %134 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %130, i64 %133
  %135 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 2
  %136 = load %"class.spv::Block"***, %"class.spv::Block"**** %135, align 8
  %137 = icmp eq %"class.spv::Block"*** %136, %130
  %138 = ptrtoint %"class.spv::Block"*** %136 to i64
  %139 = ptrtoint %"class.spv::Block"*** %130 to i64
  br i1 %137, label %140, label %142

140:                                              ; preds = %128
  %141 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %155

142:                                              ; preds = %128
  %143 = load %"class.spv::Block"**, %"class.spv::Block"*** %134, align 8
  %144 = and i64 %132, 511
  %145 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %143, i64 %144
  %146 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 2, i32 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, %132
  %149 = lshr i64 %148, 9
  %150 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %130, i64 %149
  %151 = load %"class.spv::Block"**, %"class.spv::Block"*** %150, align 8
  %152 = and i64 %148, 511
  %153 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %151, i64 %152
  %154 = icmp eq %"class.spv::Block"** %153, %145
  br i1 %154, label %155, label %161

155:                                              ; preds = %174, %142, %140
  %156 = phi i64* [ %141, %140 ], [ %146, %142 ], [ %146, %174 ]
  store i64 0, i64* %156, align 8
  %157 = bitcast %"class.spv::Block"**** %135 to i64*
  %158 = sub i64 %138, %139
  %159 = ashr exact i64 %158, 3
  %160 = icmp ugt i64 %159, 2
  br i1 %160, label %179, label %192

161:                                              ; preds = %142, %174
  %162 = phi %"class.spv::Block"** [ %177, %174 ], [ %145, %142 ]
  %163 = phi %"class.spv::Block"*** [ %176, %174 ], [ %134, %142 ]
  %164 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %162, i64 1
  %165 = ptrtoint %"class.spv::Block"** %164 to i64
  %166 = bitcast %"class.spv::Block"*** %163 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %165, %167
  %169 = icmp eq i64 %168, 4096
  br i1 %169, label %170, label %174

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %163, i64 1
  %172 = bitcast %"class.spv::Block"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  br label %174

174:                                              ; preds = %170, %161
  %175 = phi i64 [ %173, %170 ], [ %165, %161 ]
  %176 = phi %"class.spv::Block"*** [ %171, %170 ], [ %163, %161 ]
  %177 = inttoptr i64 %175 to %"class.spv::Block"**
  %178 = icmp eq %"class.spv::Block"** %153, %177
  br i1 %178, label %155, label %161

179:                                              ; preds = %155, %179
  %180 = phi %"class.spv::Block"*** [ %184, %179 ], [ %130, %155 ]
  %181 = bitcast %"class.spv::Block"*** %180 to i8**
  %182 = load i8*, i8** %181, align 8
  tail call void @_ZdlPv(i8* %182) #18
  %183 = load %"class.spv::Block"***, %"class.spv::Block"**** %129, align 8
  %184 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %183, i64 1
  store %"class.spv::Block"*** %184, %"class.spv::Block"**** %129, align 8
  %185 = load i64, i64* %157, align 8
  %186 = ptrtoint %"class.spv::Block"*** %184 to i64
  %187 = sub i64 %185, %186
  %188 = ashr exact i64 %187, 3
  %189 = icmp ugt i64 %188, 2
  br i1 %189, label %179, label %190

190:                                              ; preds = %179
  %191 = inttoptr i64 %185 to %"class.spv::Block"***
  br label %192

192:                                              ; preds = %190, %155
  %193 = phi %"class.spv::Block"*** [ %136, %155 ], [ %191, %190 ]
  %194 = phi %"class.spv::Block"*** [ %130, %155 ], [ %184, %190 ]
  %195 = phi i64 [ %159, %155 ], [ %188, %190 ]
  switch i64 %195, label %199 [
    i64 1, label %197
    i64 2, label %196
  ]

196:                                              ; preds = %192
  br label %197

197:                                              ; preds = %192, %196
  %198 = phi i64 [ 512, %196 ], [ 256, %192 ]
  store i64 %198, i64* %131, align 8
  br label %199

199:                                              ; preds = %197, %192
  %200 = icmp eq %"class.spv::Block"*** %194, %193
  br i1 %200, label %219, label %201

201:                                              ; preds = %199, %201
  %202 = phi %"class.spv::Block"*** [ %205, %201 ], [ %194, %199 ]
  %203 = bitcast %"class.spv::Block"*** %202 to i8**
  %204 = load i8*, i8** %203, align 8
  tail call void @_ZdlPv(i8* %204) #18
  %205 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %202, i64 1
  %206 = icmp eq %"class.spv::Block"*** %205, %193
  br i1 %206, label %207, label %201

207:                                              ; preds = %201
  %208 = load %"class.spv::Block"***, %"class.spv::Block"**** %129, align 8
  %209 = load %"class.spv::Block"***, %"class.spv::Block"**** %135, align 8
  %210 = icmp eq %"class.spv::Block"*** %209, %208
  br i1 %210, label %219, label %211

211:                                              ; preds = %207
  %212 = ptrtoint %"class.spv::Block"*** %208 to i64
  %213 = getelementptr %"class.spv::Block"**, %"class.spv::Block"*** %209, i64 -1
  %214 = ptrtoint %"class.spv::Block"*** %213 to i64
  %215 = sub i64 %214, %212
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.spv::Block"**, %"class.spv::Block"*** %209, i64 %217
  store %"class.spv::Block"*** %218, %"class.spv::Block"**** %135, align 8
  br label %219

219:                                              ; preds = %211, %207, %199
  %220 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %221 = load %"class.spv::Block"***, %"class.spv::Block"**** %220, align 8
  %222 = icmp eq %"class.spv::Block"*** %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %219
  %224 = bitcast %"class.spv::Block"*** %221 to i8*
  tail call void @_ZdlPv(i8* %224) #18
  br label %225

225:                                              ; preds = %219, %223
  %226 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 35, i32 0, i32 0
  %227 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %226, align 8
  %228 = icmp eq %"class.spv::Instruction"** %227, null
  br i1 %228, label %234, label %229

229:                                              ; preds = %225
  %230 = ptrtoint %"class.spv::Instruction"** %227 to i64
  %231 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 35, i32 0, i32 1
  %232 = bitcast %"class.spv::Instruction"*** %231 to i64*
  store i64 %230, i64* %232, align 8
  %233 = bitcast %"class.spv::Instruction"** %227 to i8*
  tail call void @_ZdlPv(i8* %233) #18
  br label %234

234:                                              ; preds = %225, %229
  %235 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0, i32 1, i32 0, i32 0, i32 0
  %236 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %235, align 8
  %237 = icmp eq %"struct.std::__1::__hash_node_base"* %236, null
  br i1 %237, label %254, label %238

238:                                              ; preds = %234, %251
  %239 = phi %"struct.std::__1::__hash_node_base"* [ %241, %251 ], [ %236, %234 ]
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %239, i64 0, i32 0
  %241 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %240, align 8
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %239, i64 3
  %243 = bitcast %"struct.std::__1::__hash_node_base"* %242 to %"class.spv::Instruction"***
  %244 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %243, align 8
  %245 = icmp eq %"class.spv::Instruction"** %244, null
  br i1 %245, label %251, label %246

246:                                              ; preds = %238
  %247 = ptrtoint %"class.spv::Instruction"** %244 to i64
  %248 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %239, i64 4
  %249 = bitcast %"struct.std::__1::__hash_node_base"* %248 to i64*
  store i64 %247, i64* %249, align 8
  %250 = bitcast %"class.spv::Instruction"** %244 to i8*
  tail call void @_ZdlPv(i8* %250) #18
  br label %251

251:                                              ; preds = %246, %238
  %252 = bitcast %"struct.std::__1::__hash_node_base"* %239 to i8*
  tail call void @_ZdlPv(i8* %252) #18
  %253 = icmp eq %"struct.std::__1::__hash_node_base"* %241, null
  br i1 %253, label %254, label %238

254:                                              ; preds = %251, %234
  %255 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %255, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %255, align 8
  %257 = icmp eq %"struct.std::__1::__hash_node_base"** %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast %"struct.std::__1::__hash_node_base"** %256 to i8*
  tail call void @_ZdlPv(i8* %259) #18
  br label %260

260:                                              ; preds = %254, %258
  %261 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 33, i32 0, i32 1, i32 0, i32 0, i32 0
  %262 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %261, align 8
  %263 = icmp eq %"struct.std::__1::__hash_node_base"* %262, null
  br i1 %263, label %280, label %264

264:                                              ; preds = %260, %277
  %265 = phi %"struct.std::__1::__hash_node_base"* [ %267, %277 ], [ %262, %260 ]
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %265, i64 0, i32 0
  %267 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %266, align 8
  %268 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %265, i64 3
  %269 = bitcast %"struct.std::__1::__hash_node_base"* %268 to %"class.spv::Instruction"***
  %270 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %269, align 8
  %271 = icmp eq %"class.spv::Instruction"** %270, null
  br i1 %271, label %277, label %272

272:                                              ; preds = %264
  %273 = ptrtoint %"class.spv::Instruction"** %270 to i64
  %274 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %265, i64 4
  %275 = bitcast %"struct.std::__1::__hash_node_base"* %274 to i64*
  store i64 %273, i64* %275, align 8
  %276 = bitcast %"class.spv::Instruction"** %270 to i8*
  tail call void @_ZdlPv(i8* %276) #18
  br label %277

277:                                              ; preds = %272, %264
  %278 = bitcast %"struct.std::__1::__hash_node_base"* %265 to i8*
  tail call void @_ZdlPv(i8* %278) #18
  %279 = icmp eq %"struct.std::__1::__hash_node_base"* %267, null
  br i1 %279, label %280, label %264

280:                                              ; preds = %277, %260
  %281 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %281, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %281, align 8
  %283 = icmp eq %"struct.std::__1::__hash_node_base"** %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %280
  %285 = bitcast %"struct.std::__1::__hash_node_base"** %282 to i8*
  tail call void @_ZdlPv(i8* %285) #18
  br label %286

286:                                              ; preds = %280, %284
  %287 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0, i32 1, i32 0, i32 0, i32 0
  %288 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %287, align 8
  %289 = icmp eq %"struct.std::__1::__hash_node_base"* %288, null
  br i1 %289, label %306, label %290

290:                                              ; preds = %286, %303
  %291 = phi %"struct.std::__1::__hash_node_base"* [ %293, %303 ], [ %288, %286 ]
  %292 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %291, i64 0, i32 0
  %293 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %292, align 8
  %294 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %291, i64 3
  %295 = bitcast %"struct.std::__1::__hash_node_base"* %294 to %"class.spv::Instruction"***
  %296 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %295, align 8
  %297 = icmp eq %"class.spv::Instruction"** %296, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %290
  %299 = ptrtoint %"class.spv::Instruction"** %296 to i64
  %300 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %291, i64 4
  %301 = bitcast %"struct.std::__1::__hash_node_base"* %300 to i64*
  store i64 %299, i64* %301, align 8
  %302 = bitcast %"class.spv::Instruction"** %296 to i8*
  tail call void @_ZdlPv(i8* %302) #18
  br label %303

303:                                              ; preds = %298, %290
  %304 = bitcast %"struct.std::__1::__hash_node_base"* %291 to i8*
  tail call void @_ZdlPv(i8* %304) #18
  %305 = icmp eq %"struct.std::__1::__hash_node_base"* %293, null
  br i1 %305, label %306, label %290

306:                                              ; preds = %303, %286
  %307 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %307, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node_base"** %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast %"struct.std::__1::__hash_node_base"** %308 to i8*
  tail call void @_ZdlPv(i8* %311) #18
  br label %312

312:                                              ; preds = %306, %310
  %313 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 31
  %314 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %313, i64 0, i32 0, i32 0
  %315 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %314, align 8
  %316 = icmp eq %"class.std::__1::unique_ptr.79"* %315, null
  br i1 %316, label %340, label %317

317:                                              ; preds = %312
  %318 = bitcast %"class.std::__1::unique_ptr.79"* %315 to i8*
  %319 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 31, i32 0, i32 1
  %320 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %319, align 8
  %321 = icmp eq %"class.std::__1::unique_ptr.79"* %320, %315
  br i1 %321, label %338, label %322

322:                                              ; preds = %317, %333
  %323 = phi %"class.std::__1::unique_ptr.79"* [ %324, %333 ], [ %320, %317 ]
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %323, i64 -1
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %324, i64 0, i32 0, i32 0, i32 0
  %326 = load %"class.spv::Function"*, %"class.spv::Function"** %325, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %325, align 8
  %327 = icmp eq %"class.spv::Function"* %326, null
  br i1 %327, label %333, label %328

328:                                              ; preds = %322
  %329 = bitcast %"class.spv::Function"* %326 to void (%"class.spv::Function"*)***
  %330 = load void (%"class.spv::Function"*)**, void (%"class.spv::Function"*)*** %329, align 8
  %331 = getelementptr inbounds void (%"class.spv::Function"*)*, void (%"class.spv::Function"*)** %330, i64 1
  %332 = load void (%"class.spv::Function"*)*, void (%"class.spv::Function"*)** %331, align 8
  tail call void %332(%"class.spv::Function"* nonnull %326) #17
  br label %333

333:                                              ; preds = %328, %322
  %334 = icmp eq %"class.std::__1::unique_ptr.79"* %324, %315
  br i1 %334, label %335, label %322

335:                                              ; preds = %333
  %336 = bitcast %"class.std::__1::vector.77"* %313 to i8**
  %337 = load i8*, i8** %336, align 8
  br label %338

338:                                              ; preds = %335, %317
  %339 = phi i8* [ %337, %335 ], [ %318, %317 ]
  store %"class.std::__1::unique_ptr.79"* %315, %"class.std::__1::unique_ptr.79"** %319, align 8
  tail call void @_ZdlPv(i8* %339) #18
  br label %340

340:                                              ; preds = %312, %338
  %341 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 30
  %342 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %341, i64 0, i32 0, i32 0
  %343 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %342, align 8
  %344 = icmp eq %"class.std::__1::unique_ptr"* %343, null
  br i1 %344, label %368, label %345

345:                                              ; preds = %340
  %346 = bitcast %"class.std::__1::unique_ptr"* %343 to i8*
  %347 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 30, i32 0, i32 1
  %348 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %347, align 8
  %349 = icmp eq %"class.std::__1::unique_ptr"* %348, %343
  br i1 %349, label %366, label %350

350:                                              ; preds = %345, %361
  %351 = phi %"class.std::__1::unique_ptr"* [ %352, %361 ], [ %348, %345 ]
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %351, i64 -1
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %353, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %353, align 8
  %355 = icmp eq %"class.spv::Instruction"* %354, null
  br i1 %355, label %361, label %356

356:                                              ; preds = %350
  %357 = bitcast %"class.spv::Instruction"* %354 to void (%"class.spv::Instruction"*)***
  %358 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %357, align 8
  %359 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %358, i64 1
  %360 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %359, align 8
  tail call void %360(%"class.spv::Instruction"* nonnull %354) #17
  br label %361

361:                                              ; preds = %356, %350
  %362 = icmp eq %"class.std::__1::unique_ptr"* %352, %343
  br i1 %362, label %363, label %350

363:                                              ; preds = %361
  %364 = bitcast %"class.std::__1::vector.38"* %341 to i8**
  %365 = load i8*, i8** %364, align 8
  br label %366

366:                                              ; preds = %363, %345
  %367 = phi i8* [ %365, %363 ], [ %346, %345 ]
  store %"class.std::__1::unique_ptr"* %343, %"class.std::__1::unique_ptr"** %347, align 8
  tail call void @_ZdlPv(i8* %367) #18
  br label %368

368:                                              ; preds = %340, %366
  %369 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  %370 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %369, i64 0, i32 0, i32 0
  %371 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %370, align 8
  %372 = icmp eq %"class.std::__1::unique_ptr"* %371, null
  br i1 %372, label %396, label %373

373:                                              ; preds = %368
  %374 = bitcast %"class.std::__1::unique_ptr"* %371 to i8*
  %375 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %376 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %375, align 8
  %377 = icmp eq %"class.std::__1::unique_ptr"* %376, %371
  br i1 %377, label %394, label %378

378:                                              ; preds = %373, %389
  %379 = phi %"class.std::__1::unique_ptr"* [ %380, %389 ], [ %376, %373 ]
  %380 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %379, i64 -1
  %381 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %380, i64 0, i32 0, i32 0, i32 0
  %382 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %381, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %381, align 8
  %383 = icmp eq %"class.spv::Instruction"* %382, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %378
  %385 = bitcast %"class.spv::Instruction"* %382 to void (%"class.spv::Instruction"*)***
  %386 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %386, i64 1
  %388 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %387, align 8
  tail call void %388(%"class.spv::Instruction"* nonnull %382) #17
  br label %389

389:                                              ; preds = %384, %378
  %390 = icmp eq %"class.std::__1::unique_ptr"* %380, %371
  br i1 %390, label %391, label %378

391:                                              ; preds = %389
  %392 = bitcast %"class.std::__1::vector.38"* %369 to i8**
  %393 = load i8*, i8** %392, align 8
  br label %394

394:                                              ; preds = %391, %373
  %395 = phi i8* [ %393, %391 ], [ %374, %373 ]
  store %"class.std::__1::unique_ptr"* %371, %"class.std::__1::unique_ptr"** %375, align 8
  tail call void @_ZdlPv(i8* %395) #18
  br label %396

396:                                              ; preds = %368, %394
  %397 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  %398 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %397, i64 0, i32 0, i32 0
  %399 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %398, align 8
  %400 = icmp eq %"class.std::__1::unique_ptr"* %399, null
  br i1 %400, label %424, label %401

401:                                              ; preds = %396
  %402 = bitcast %"class.std::__1::unique_ptr"* %399 to i8*
  %403 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %404 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %403, align 8
  %405 = icmp eq %"class.std::__1::unique_ptr"* %404, %399
  br i1 %405, label %422, label %406

406:                                              ; preds = %401, %417
  %407 = phi %"class.std::__1::unique_ptr"* [ %408, %417 ], [ %404, %401 ]
  %408 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %407, i64 -1
  %409 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %408, i64 0, i32 0, i32 0, i32 0
  %410 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %409, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %409, align 8
  %411 = icmp eq %"class.spv::Instruction"* %410, null
  br i1 %411, label %417, label %412

412:                                              ; preds = %406
  %413 = bitcast %"class.spv::Instruction"* %410 to void (%"class.spv::Instruction"*)***
  %414 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %413, align 8
  %415 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %414, i64 1
  %416 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %415, align 8
  tail call void %416(%"class.spv::Instruction"* nonnull %410) #17
  br label %417

417:                                              ; preds = %412, %406
  %418 = icmp eq %"class.std::__1::unique_ptr"* %408, %399
  br i1 %418, label %419, label %406

419:                                              ; preds = %417
  %420 = bitcast %"class.std::__1::vector.38"* %397 to i8**
  %421 = load i8*, i8** %420, align 8
  br label %422

422:                                              ; preds = %419, %401
  %423 = phi i8* [ %421, %419 ], [ %402, %401 ]
  store %"class.std::__1::unique_ptr"* %399, %"class.std::__1::unique_ptr"** %403, align 8
  tail call void @_ZdlPv(i8* %423) #18
  br label %424

424:                                              ; preds = %396, %422
  %425 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27
  %426 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %425, i64 0, i32 0, i32 0
  %427 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %426, align 8
  %428 = icmp eq %"class.std::__1::unique_ptr"* %427, null
  br i1 %428, label %452, label %429

429:                                              ; preds = %424
  %430 = bitcast %"class.std::__1::unique_ptr"* %427 to i8*
  %431 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27, i32 0, i32 1
  %432 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %431, align 8
  %433 = icmp eq %"class.std::__1::unique_ptr"* %432, %427
  br i1 %433, label %450, label %434

434:                                              ; preds = %429, %445
  %435 = phi %"class.std::__1::unique_ptr"* [ %436, %445 ], [ %432, %429 ]
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %435, i64 -1
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %437, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %437, align 8
  %439 = icmp eq %"class.spv::Instruction"* %438, null
  br i1 %439, label %445, label %440

440:                                              ; preds = %434
  %441 = bitcast %"class.spv::Instruction"* %438 to void (%"class.spv::Instruction"*)***
  %442 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %441, align 8
  %443 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %442, i64 1
  %444 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %443, align 8
  tail call void %444(%"class.spv::Instruction"* nonnull %438) #17
  br label %445

445:                                              ; preds = %440, %434
  %446 = icmp eq %"class.std::__1::unique_ptr"* %436, %427
  br i1 %446, label %447, label %434

447:                                              ; preds = %445
  %448 = bitcast %"class.std::__1::vector.38"* %425 to i8**
  %449 = load i8*, i8** %448, align 8
  br label %450

450:                                              ; preds = %447, %429
  %451 = phi i8* [ %449, %447 ], [ %430, %429 ]
  store %"class.std::__1::unique_ptr"* %427, %"class.std::__1::unique_ptr"** %431, align 8
  tail call void @_ZdlPv(i8* %451) #18
  br label %452

452:                                              ; preds = %424, %450
  %453 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26
  %454 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %453, i64 0, i32 0, i32 0
  %455 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %454, align 8
  %456 = icmp eq %"class.std::__1::unique_ptr"* %455, null
  br i1 %456, label %480, label %457

457:                                              ; preds = %452
  %458 = bitcast %"class.std::__1::unique_ptr"* %455 to i8*
  %459 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 1
  %460 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %459, align 8
  %461 = icmp eq %"class.std::__1::unique_ptr"* %460, %455
  br i1 %461, label %478, label %462

462:                                              ; preds = %457, %473
  %463 = phi %"class.std::__1::unique_ptr"* [ %464, %473 ], [ %460, %457 ]
  %464 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %463, i64 -1
  %465 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %464, i64 0, i32 0, i32 0, i32 0
  %466 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %465, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %465, align 8
  %467 = icmp eq %"class.spv::Instruction"* %466, null
  br i1 %467, label %473, label %468

468:                                              ; preds = %462
  %469 = bitcast %"class.spv::Instruction"* %466 to void (%"class.spv::Instruction"*)***
  %470 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %469, align 8
  %471 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %470, i64 1
  %472 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %471, align 8
  tail call void %472(%"class.spv::Instruction"* nonnull %466) #17
  br label %473

473:                                              ; preds = %468, %462
  %474 = icmp eq %"class.std::__1::unique_ptr"* %464, %455
  br i1 %474, label %475, label %462

475:                                              ; preds = %473
  %476 = bitcast %"class.std::__1::vector.38"* %453 to i8**
  %477 = load i8*, i8** %476, align 8
  br label %478

478:                                              ; preds = %475, %457
  %479 = phi i8* [ %477, %475 ], [ %458, %457 ]
  store %"class.std::__1::unique_ptr"* %455, %"class.std::__1::unique_ptr"** %459, align 8
  tail call void @_ZdlPv(i8* %479) #18
  br label %480

480:                                              ; preds = %452, %478
  %481 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25
  %482 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %481, i64 0, i32 0, i32 0
  %483 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %482, align 8
  %484 = icmp eq %"class.std::__1::unique_ptr"* %483, null
  br i1 %484, label %508, label %485

485:                                              ; preds = %480
  %486 = bitcast %"class.std::__1::unique_ptr"* %483 to i8*
  %487 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25, i32 0, i32 1
  %488 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %487, align 8
  %489 = icmp eq %"class.std::__1::unique_ptr"* %488, %483
  br i1 %489, label %506, label %490

490:                                              ; preds = %485, %501
  %491 = phi %"class.std::__1::unique_ptr"* [ %492, %501 ], [ %488, %485 ]
  %492 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 -1
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %492, i64 0, i32 0, i32 0, i32 0
  %494 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %493, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %493, align 8
  %495 = icmp eq %"class.spv::Instruction"* %494, null
  br i1 %495, label %501, label %496

496:                                              ; preds = %490
  %497 = bitcast %"class.spv::Instruction"* %494 to void (%"class.spv::Instruction"*)***
  %498 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %497, align 8
  %499 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %498, i64 1
  %500 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %499, align 8
  tail call void %500(%"class.spv::Instruction"* nonnull %494) #17
  br label %501

501:                                              ; preds = %496, %490
  %502 = icmp eq %"class.std::__1::unique_ptr"* %492, %483
  br i1 %502, label %503, label %490

503:                                              ; preds = %501
  %504 = bitcast %"class.std::__1::vector.38"* %481 to i8**
  %505 = load i8*, i8** %504, align 8
  br label %506

506:                                              ; preds = %503, %485
  %507 = phi i8* [ %505, %503 ], [ %486, %485 ]
  store %"class.std::__1::unique_ptr"* %483, %"class.std::__1::unique_ptr"** %487, align 8
  tail call void @_ZdlPv(i8* %507) #18
  br label %508

508:                                              ; preds = %480, %506
  %509 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24
  %510 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %509, i64 0, i32 0, i32 0
  %511 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %510, align 8
  %512 = icmp eq %"class.std::__1::unique_ptr"* %511, null
  br i1 %512, label %536, label %513

513:                                              ; preds = %508
  %514 = bitcast %"class.std::__1::unique_ptr"* %511 to i8*
  %515 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24, i32 0, i32 1
  %516 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %515, align 8
  %517 = icmp eq %"class.std::__1::unique_ptr"* %516, %511
  br i1 %517, label %534, label %518

518:                                              ; preds = %513, %529
  %519 = phi %"class.std::__1::unique_ptr"* [ %520, %529 ], [ %516, %513 ]
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %519, i64 -1
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %520, i64 0, i32 0, i32 0, i32 0
  %522 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %521, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %521, align 8
  %523 = icmp eq %"class.spv::Instruction"* %522, null
  br i1 %523, label %529, label %524

524:                                              ; preds = %518
  %525 = bitcast %"class.spv::Instruction"* %522 to void (%"class.spv::Instruction"*)***
  %526 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %525, align 8
  %527 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %526, i64 1
  %528 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %527, align 8
  tail call void %528(%"class.spv::Instruction"* nonnull %522) #17
  br label %529

529:                                              ; preds = %524, %518
  %530 = icmp eq %"class.std::__1::unique_ptr"* %520, %511
  br i1 %530, label %531, label %518

531:                                              ; preds = %529
  %532 = bitcast %"class.std::__1::vector.38"* %509 to i8**
  %533 = load i8*, i8** %532, align 8
  br label %534

534:                                              ; preds = %531, %513
  %535 = phi i8* [ %533, %531 ], [ %514, %513 ]
  store %"class.std::__1::unique_ptr"* %511, %"class.std::__1::unique_ptr"** %515, align 8
  tail call void @_ZdlPv(i8* %535) #18
  br label %536

536:                                              ; preds = %508, %534
  %537 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23
  %538 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %537, i64 0, i32 0, i32 0
  %539 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %538, align 8
  %540 = icmp eq %"class.std::__1::unique_ptr"* %539, null
  br i1 %540, label %564, label %541

541:                                              ; preds = %536
  %542 = bitcast %"class.std::__1::unique_ptr"* %539 to i8*
  %543 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23, i32 0, i32 1
  %544 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %543, align 8
  %545 = icmp eq %"class.std::__1::unique_ptr"* %544, %539
  br i1 %545, label %562, label %546

546:                                              ; preds = %541, %557
  %547 = phi %"class.std::__1::unique_ptr"* [ %548, %557 ], [ %544, %541 ]
  %548 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %547, i64 -1
  %549 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %548, i64 0, i32 0, i32 0, i32 0
  %550 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %549, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %549, align 8
  %551 = icmp eq %"class.spv::Instruction"* %550, null
  br i1 %551, label %557, label %552

552:                                              ; preds = %546
  %553 = bitcast %"class.spv::Instruction"* %550 to void (%"class.spv::Instruction"*)***
  %554 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %553, align 8
  %555 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %554, i64 1
  %556 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %555, align 8
  tail call void %556(%"class.spv::Instruction"* nonnull %550) #17
  br label %557

557:                                              ; preds = %552, %546
  %558 = icmp eq %"class.std::__1::unique_ptr"* %548, %539
  br i1 %558, label %559, label %546

559:                                              ; preds = %557
  %560 = bitcast %"class.std::__1::vector.38"* %537 to i8**
  %561 = load i8*, i8** %560, align 8
  br label %562

562:                                              ; preds = %559, %541
  %563 = phi i8* [ %561, %559 ], [ %542, %541 ]
  store %"class.std::__1::unique_ptr"* %539, %"class.std::__1::unique_ptr"** %543, align 8
  tail call void @_ZdlPv(i8* %563) #18
  br label %564

564:                                              ; preds = %536, %562
  %565 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 0
  %566 = load i32*, i32** %565, align 8
  %567 = icmp eq i32* %566, null
  br i1 %567, label %573, label %568

568:                                              ; preds = %564
  %569 = ptrtoint i32* %566 to i64
  %570 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %571 = bitcast i32** %570 to i64*
  store i64 %569, i64* %571, align 8
  %572 = bitcast i32* %566 to i8*
  tail call void @_ZdlPv(i8* %572) #18
  br label %573

573:                                              ; preds = %568, %564
  %574 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 0
  %575 = load i32*, i32** %574, align 8
  %576 = icmp eq i32* %575, null
  br i1 %576, label %582, label %577

577:                                              ; preds = %573
  %578 = ptrtoint i32* %575 to i64
  %579 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %580 = bitcast i32** %579 to i64*
  store i64 %578, i64* %580, align 8
  %581 = bitcast i32* %575 to i8*
  tail call void @_ZdlPv(i8* %581) #18
  br label %582

582:                                              ; preds = %573, %577
  %583 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv6ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %583, align 8
  %584 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %585 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %584, align 8
  %586 = icmp eq %"class.spv::Instruction"** %585, null
  br i1 %586, label %592, label %587

587:                                              ; preds = %582
  %588 = ptrtoint %"class.spv::Instruction"** %585 to i64
  %589 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %590 = bitcast %"class.spv::Instruction"*** %589 to i64*
  store i64 %588, i64* %590, align 8
  %591 = bitcast %"class.spv::Instruction"** %585 to i8*
  tail call void @_ZdlPv(i8* %591) #18
  br label %592

592:                                              ; preds = %587, %582
  %593 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 1, i32 0, i32 0
  %594 = load %"class.spv::Function"**, %"class.spv::Function"*** %593, align 8
  %595 = icmp eq %"class.spv::Function"** %594, null
  br i1 %595, label %601, label %596

596:                                              ; preds = %592
  %597 = ptrtoint %"class.spv::Function"** %594 to i64
  %598 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 1, i32 0, i32 1
  %599 = bitcast %"class.spv::Function"*** %598 to i64*
  store i64 %597, i64* %599, align 8
  %600 = bitcast %"class.spv::Function"** %594 to i8*
  tail call void @_ZdlPv(i8* %600) #18
  br label %601

601:                                              ; preds = %592, %596
  %602 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0
  %603 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %604 = bitcast %"class.std::__1::__tree_end_node"* %603 to %"class.std::__1::__tree_node"**
  %605 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %604, align 8
  tail call void @_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.15"* %602, %"class.std::__1::__tree_node"* %605) #17
  %606 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 11, i32 0, i32 0
  %607 = load i8**, i8*** %606, align 8
  %608 = icmp eq i8** %607, null
  br i1 %608, label %614, label %609

609:                                              ; preds = %601
  %610 = ptrtoint i8** %607 to i64
  %611 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 11, i32 0, i32 1
  %612 = bitcast i8*** %611 to i64*
  store i64 %610, i64* %612, align 8
  %613 = bitcast i8** %607 to i8*
  tail call void @_ZdlPv(i8* %613) #18
  br label %614

614:                                              ; preds = %601, %609
  %615 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 10, i32 0, i32 0
  %616 = load i8**, i8*** %615, align 8
  %617 = icmp eq i8** %616, null
  br i1 %617, label %623, label %618

618:                                              ; preds = %614
  %619 = ptrtoint i8** %616 to i64
  %620 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 10, i32 0, i32 1
  %621 = bitcast i8*** %620 to i64*
  store i64 %619, i64* %621, align 8
  %622 = bitcast i8** %616 to i8*
  tail call void @_ZdlPv(i8* %622) #18
  br label %623

623:                                              ; preds = %614, %618
  %624 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0
  %625 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %626 = bitcast %"class.std::__1::__tree_end_node"* %625 to %"class.std::__1::__tree_node.280"**
  %627 = load %"class.std::__1::__tree_node.280"*, %"class.std::__1::__tree_node.280"** %626, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %624, %"class.std::__1::__tree_node.280"* %627) #17
  %628 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 5
  %629 = bitcast %"class.std::__1::basic_string"* %628 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %630 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %629, i64 0, i32 1, i32 0
  %631 = load i8, i8* %630, align 1
  %632 = icmp slt i8 %631, 0
  br i1 %632, label %633, label %636

633:                                              ; preds = %623
  %634 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %628, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load i8*, i8** %634, align 8
  tail call void @_ZdlPv(i8* %635) #18
  br label %636

636:                                              ; preds = %623, %633
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv6ModuleD2Ev(%"class.spv::Module"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv6ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %3, align 8
  %5 = icmp eq %"class.spv::Instruction"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.spv::Instruction"** %4 to i64
  %8 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.spv::Instruction"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.spv::Instruction"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.spv::Function"**, %"class.spv::Function"*** %12, align 8
  %14 = icmp eq %"class.spv::Function"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.spv::Function"** %13 to i64
  %17 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.spv::Function"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.spv::Function"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7BuilderD0Ev(%"class.spv::Builder"*) unnamed_addr #1 align 2 {
  tail call void @_ZN3spv7BuilderD2Ev(%"class.spv::Builder"* %0) #17
  %2 = bitcast %"class.spv::Builder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder6importEPKc(%"class.spv::Builder"*, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %5, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 11, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  %18 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #17
  store i32 -1431655766, i32* %3, align 4
  br label %19

19:                                               ; preds = %30, %2
  %20 = phi i8* [ %1, %2 ], [ %23, %30 ]
  %21 = phi i8* [ %18, %2 ], [ %31, %30 ]
  %22 = phi i32 [ 0, %2 ], [ %32, %30 ]
  %23 = getelementptr inbounds i8, i8* %20, i64 1
  %24 = load i8, i8* %20, align 1
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  store i8 %24, i8* %21, align 1
  %26 = add nsw i32 %22, 1
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = load i32, i32* %3, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %29) #17
  br label %30

30:                                               ; preds = %28, %19
  %31 = phi i8* [ %18, %28 ], [ %25, %19 ]
  %32 = phi i32 [ 0, %28 ], [ %26, %19 ]
  %33 = icmp eq i8 %24, 0
  br i1 %33, label %34, label %19

34:                                               ; preds = %30
  %35 = icmp sgt i32 %32, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = icmp slt i32 %32, 4
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = sub nuw nsw i32 3, %32
  %40 = zext i32 %39 to i64
  %41 = add nuw nsw i64 %40, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 0, i64 %41, i1 false) #17
  br label %42

42:                                               ; preds = %38, %36
  %43 = load i32, i32* %3, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %43) #17
  br label %44

44:                                               ; preds = %34, %42
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #17
  %45 = load i32, i32* %12, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %48 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %49 = bitcast %"class.spv::Instruction"*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.55"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 3
  %55 = icmp ugt i64 %54, %46
  %56 = inttoptr i64 %52 to %"class.spv::Instruction"**
  br i1 %55, label %69, label %57

57:                                               ; preds = %44
  %58 = add i32 %45, 16
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %54, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = sub nsw i64 %59, %54
  tail call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %47, i64 %62) #17
  %63 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %47, i64 0, i32 0, i32 0
  %64 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %63, align 8
  br label %69

65:                                               ; preds = %57
  %66 = icmp ugt i64 %54, %59
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %56, i64 %59
  store %"class.spv::Instruction"** %68, %"class.spv::Instruction"*** %48, align 8
  br label %69

69:                                               ; preds = %44, %61, %65, %67
  %70 = phi %"class.spv::Instruction"** [ %56, %67 ], [ %56, %65 ], [ %64, %61 ], [ %56, %44 ]
  %71 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %70, i64 %46
  %72 = bitcast %"class.spv::Instruction"** %71 to i8**
  store i8* %5, i8** %72, align 8
  %73 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #17
  %74 = ptrtoint i8* %5 to i64
  %75 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24, i32 0, i32 1
  %77 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %76, align 8
  %78 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24, i32 0, i32 2, i32 0, i32 0
  %79 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %78, align 8
  %80 = icmp ult %"class.std::__1::unique_ptr"* %77, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %82, align 8
  %83 = bitcast %"class.std::__1::unique_ptr"* %77 to i64*
  store i64 %74, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 1
  %85 = ptrtoint %"class.std::__1::unique_ptr"* %84 to i64
  %86 = bitcast %"class.std::__1::unique_ptr"** %76 to i64*
  store i64 %85, i64* %86, align 8
  br label %89

87:                                               ; preds = %69
  %88 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %88, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %89

89:                                               ; preds = %81, %87
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %90, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %90, align 8
  %92 = icmp eq %"class.spv::Instruction"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.spv::Instruction"* %91 to void (%"class.spv::Instruction"*)***
  %95 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %95, i64 1
  %97 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %96, align 8
  call void %97(%"class.spv::Instruction"* nonnull %91) #17
  br label %98

98:                                               ; preds = %89, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #17
  %99 = load i32, i32* %12, align 8
  ret i32 %99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder7setLineEi(%"class.spv::Builder"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  store i32 %1, i32* %5, align 8
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 8
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN3spv7Builder7addLineEjii(%"class.spv::Builder"* %0, i32 %14, i32 %1, i32 0)
  br label %15

15:                                               ; preds = %8, %4, %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder7addLineEjii(%"class.spv::Builder"* nocapture readonly, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 8, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %3)
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %17 = load %"class.spv::Block"*, %"class.spv::Block"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %6, i8** %20, align 8
  %21 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 1, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %4
  %27 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %19, align 8
  %28 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %33, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds i8, i8* %6, i64 72
  %36 = bitcast i8* %35 to %"class.spv::Block"**
  store %"class.spv::Block"* %17, %"class.spv::Block"** %36, align 8
  %37 = load i32, i32* %10, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %71, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 5
  %41 = load %"class.spv::Function"*, %"class.spv::Function"** %40, align 8
  %42 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %41, i64 0, i32 1
  %43 = load %"class.spv::Module"*, %"class.spv::Module"** %42, align 8
  %44 = zext i32 %37 to i64
  %45 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %43, i64 0, i32 2
  %46 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %43, i64 0, i32 2, i32 0, i32 1
  %47 = bitcast %"class.spv::Instruction"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.55"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %52, %44
  %54 = inttoptr i64 %50 to %"class.spv::Instruction"**
  br i1 %53, label %67, label %55

55:                                               ; preds = %39
  %56 = add i32 %37, 16
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = sub nsw i64 %57, %52
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %45, i64 %60) #17
  %61 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %45, i64 0, i32 0, i32 0
  %62 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %61, align 8
  br label %67

63:                                               ; preds = %55
  %64 = icmp ugt i64 %52, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %57
  store %"class.spv::Instruction"** %66, %"class.spv::Instruction"*** %46, align 8
  br label %67

67:                                               ; preds = %65, %63, %59, %39
  %68 = phi %"class.spv::Instruction"** [ %54, %65 ], [ %54, %63 ], [ %62, %59 ], [ %54, %39 ]
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, i64 %44
  %70 = bitcast %"class.spv::Instruction"** %69 to i8**
  store i8* %6, i8** %70, align 8
  br label %71

71:                                               ; preds = %67, %34
  %72 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %19, align 8
  %73 = icmp eq %"class.spv::Instruction"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.spv::Instruction"* %72 to void (%"class.spv::Instruction"*)***
  %76 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %76, i64 1
  %78 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %77, align 8
  call void %78(%"class.spv::Instruction"* nonnull %72) #17
  br label %79

79:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder7setLineEiPKc(%"class.spv::Builder"*, i32, i8*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq i8* %2, null
  %6 = icmp eq i32 %1, 0
  br i1 %5, label %7, label %19

7:                                                ; preds = %3
  br i1 %6, label %77, label %8

8:                                                ; preds = %7
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %77, label %12

12:                                               ; preds = %8
  store i32 %1, i32* %9, align 8
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 8
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  tail call void @_ZN3spv7Builder7addLineEjii(%"class.spv::Builder"* %0, i32 %18, i32 %1, i32 0) #17
  br label %77

19:                                               ; preds = %3
  br i1 %6, label %24, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 6
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %1
  br i1 %23, label %24, label %33

24:                                               ; preds = %20, %19
  %25 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 7
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = tail call i64 @strlen(i8* nonnull %26) #19
  %30 = add i64 %29, 1
  %31 = tail call i32 @strncmp(i8* nonnull %2, i8* nonnull %26, i64 %30) #19
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %77, label %33

33:                                               ; preds = %20, %28, %24
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 6
  store i32 %1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 7
  store i8* %2, i8** %35, align 8
  %36 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 8
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %77, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #17
  %41 = tail call i64 @strlen(i8* nonnull %2) #17
  %42 = icmp ugt i64 %41, -17
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %44) #20
  unreachable

45:                                               ; preds = %39
  %46 = icmp ult i64 %41, 23
  br i1 %46, label %56, label %47

47:                                               ; preds = %45
  %48 = add nuw i64 %41, 16
  %49 = and i64 %48, -16
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = or i64 %49, -9223372036854775808
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %41, i64* %54, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %61

56:                                               ; preds = %45
  %57 = trunc i64 %41 to i8
  %58 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 %57, i8* %59, align 1
  %60 = icmp eq i64 %41, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %56, %47
  %62 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %56 ], [ %55, %47 ]
  %63 = phi i8* [ %40, %56 ], [ %50, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* nonnull align 1 %2, i64 %41, i1 false) #17
  br label %64

64:                                               ; preds = %56, %61
  %65 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %58, %56 ], [ %62, %61 ]
  %66 = phi i8* [ %40, %56 ], [ %63, %61 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %41
  store i8 0, i8* %67, align 1
  %68 = call i32 @_ZN3spv7Builder11getStringIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.spv::Builder"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #18
  br label %75

75:                                               ; preds = %64, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #17
  %76 = load i32, i32* %34, align 8
  call void @_ZN3spv7Builder7addLineEjii(%"class.spv::Builder"* %0, i32 %68, i32 %76, i32 0)
  br label %77

77:                                               ; preds = %16, %12, %8, %7, %33, %28, %75
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3spv7Builder11getStringIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.spv::Builder"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 38, i32 0
  %9 = tail call %"struct.std::__1::__hash_node_base.133"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.129"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #17
  %10 = icmp eq %"struct.std::__1::__hash_node_base.133"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 5
  %13 = bitcast %"struct.std::__1::__hash_node_base.133"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  br label %160

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = tail call i8* @_Znwm(i64 80) #18
  %20 = bitcast i8* %19 to %"class.spv::Instruction"*
  %21 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %18, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 16
  %27 = bitcast i8* %26 to i32*
  store i32 7, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %19, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false) #17
  %29 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %36 = select i1 %32, i8* %34, i8* %35
  %37 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #17
  store i32 -1431655766, i32* %3, align 4
  br label %38

38:                                               ; preds = %49, %15
  %39 = phi i8* [ %36, %15 ], [ %42, %49 ]
  %40 = phi i8* [ %37, %15 ], [ %50, %49 ]
  %41 = phi i32 [ 0, %15 ], [ %51, %49 ]
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %39, align 1
  %44 = getelementptr inbounds i8, i8* %40, i64 1
  store i8 %43, i8* %40, align 1
  %45 = add nsw i32 %41, 1
  %46 = icmp eq i32 %45, 4
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = load i32, i32* %3, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %20, i32 %48) #17
  br label %49

49:                                               ; preds = %47, %38
  %50 = phi i8* [ %37, %47 ], [ %44, %38 ]
  %51 = phi i32 [ 0, %47 ], [ %45, %38 ]
  %52 = icmp eq i8 %43, 0
  br i1 %52, label %53, label %38

53:                                               ; preds = %49
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %53
  %56 = icmp slt i32 %51, 4
  br i1 %56, label %57, label %61

57:                                               ; preds = %55
  %58 = sub nuw nsw i32 3, %51
  %59 = zext i32 %58 to i64
  %60 = add nuw nsw i64 %59, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 %60, i1 false) #17
  br label %61

61:                                               ; preds = %57, %55
  %62 = load i32, i32* %3, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %20, i32 %62) #17
  br label %63

63:                                               ; preds = %53, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #17
  %64 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #17
  %65 = ptrtoint i8* %19 to i64
  %66 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23, i32 0, i32 1
  %68 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %67, align 8
  %69 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23, i32 0, i32 2, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %69, align 8
  %71 = icmp ult %"class.std::__1::unique_ptr"* %68, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %73, align 8
  %74 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  store i64 %65, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 1
  %76 = ptrtoint %"class.std::__1::unique_ptr"* %75 to i64
  %77 = bitcast %"class.std::__1::unique_ptr"** %67 to i64*
  store i64 %76, i64* %77, align 8
  br label %80

78:                                               ; preds = %63
  %79 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %79, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %80

80:                                               ; preds = %72, %78
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %81, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %81, align 8
  %83 = icmp eq %"class.spv::Instruction"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.spv::Instruction"* %82 to void (%"class.spv::Instruction"*)***
  %86 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %86, i64 1
  %88 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %87, align 8
  call void %88(%"class.spv::Instruction"* nonnull %82) #17
  br label %89

89:                                               ; preds = %80, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #17
  %90 = load i32, i32* %23, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %93 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %94 = bitcast %"class.spv::Instruction"*** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.55"* %92 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 3
  %100 = icmp ugt i64 %99, %91
  %101 = inttoptr i64 %97 to %"class.spv::Instruction"**
  br i1 %100, label %114, label %102

102:                                              ; preds = %89
  %103 = add i32 %90, 16
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %99, %104
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = sub nsw i64 %104, %99
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %92, i64 %107) #17
  %108 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %92, i64 0, i32 0, i32 0
  %109 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %108, align 8
  br label %114

110:                                              ; preds = %102
  %111 = icmp ugt i64 %99, %104
  br i1 %111, label %112, label %114

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %101, i64 %104
  store %"class.spv::Instruction"** %113, %"class.spv::Instruction"*** %93, align 8
  br label %114

114:                                              ; preds = %89, %106, %110, %112
  %115 = phi %"class.spv::Instruction"** [ %101, %112 ], [ %101, %110 ], [ %109, %106 ], [ %101, %89 ]
  %116 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %115, i64 %91
  %117 = bitcast %"class.spv::Instruction"** %116 to i8**
  store i8* %19, i8** %117, align 8
  %118 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #17
  %119 = call i64 @strlen(i8* %36) #17
  %120 = icmp ugt i64 %119, -17
  br i1 %120, label %121, label %123

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %122) #20
  unreachable

123:                                              ; preds = %114
  %124 = icmp ult i64 %119, 23
  br i1 %124, label %134, label %125

125:                                              ; preds = %123
  %126 = add nuw i64 %119, 16
  %127 = and i64 %126, -16
  %128 = call i8* @_Znwm(i64 %127) #18
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %128, i8** %129, align 8
  %130 = or i64 %127, -9223372036854775808
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %119, i64* %132, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %139

134:                                              ; preds = %123
  %135 = trunc i64 %119 to i8
  %136 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  store i8 %135, i8* %137, align 1
  %138 = icmp eq i64 %119, 0
  br i1 %138, label %142, label %139

139:                                              ; preds = %134, %125
  %140 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %136, %134 ], [ %133, %125 ]
  %141 = phi i8* [ %118, %134 ], [ %128, %125 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %141, i8* align 1 %36, i64 %119, i1 false) #17
  br label %142

142:                                              ; preds = %134, %139
  %143 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %136, %134 ], [ %140, %139 ]
  %144 = phi i8* [ %118, %134 ], [ %141, %139 ]
  %145 = getelementptr inbounds i8, i8* %144, i64 %119
  store i8 0, i8* %145, align 1
  %146 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #17
  %147 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %148) #17
  %149 = call { %"struct.std::__1::__hash_node_base.133"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.129"* %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %150 = extractvalue { %"struct.std::__1::__hash_node_base.133"*, i8 } %149, 0
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %150, i64 5
  %152 = bitcast %"struct.std::__1::__hash_node_base.133"* %151 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %148) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #17
  store i32 %18, i32* %152, align 4
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %143, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %142
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #18
  br label %159

159:                                              ; preds = %142, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #17
  br label %160

160:                                              ; preds = %159, %11
  %161 = phi i32 [ %14, %11 ], [ %18, %159 ]
  ret i32 %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i32 %1, i32* %5, align 4
  %11 = getelementptr inbounds i32, i32* %5, i64 1
  %12 = ptrtoint i32* %11 to i64
  %13 = bitcast i32** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %70

14:                                               ; preds = %2
  %15 = ptrtoint i32* %5 to i64
  %16 = bitcast i32** %4 to i64*
  %17 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::vector.26"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #20
  unreachable

25:                                               ; preds = %14
  %26 = bitcast i32** %6 to i64*
  %27 = sub i64 %9, %18
  %28 = ashr exact i64 %27, 2
  %29 = icmp ult i64 %28, 2305843009213693951
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 1
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 4611686018427387903
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #20
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 4611686018427387903, %25 ]
  %40 = shl i64 %39, 2
  %41 = tail call i8* @_Znwm(i64 %40) #18
  %42 = bitcast i8* %41 to i32*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi i32* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds i32, i32* %45, i64 %20
  %47 = getelementptr inbounds i32, i32* %45, i64 %44
  %48 = ptrtoint i32* %47 to i64
  store i32 %1, i32* %46, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i64, i64* %16, align 8
  %54 = ptrtoint i32* %52 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 2
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds i32, i32* %46, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = icmp sgt i64 %55, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %43
  %62 = bitcast i32* %58 to i8*
  %63 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 %55, i1 false) #17
  %64 = load i32*, i32** %51, align 8
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi i32* [ %52, %43 ], [ %64, %61 ]
  store i64 %59, i64* %17, align 8
  store i64 %50, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = bitcast i32* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %10, %65, %68
  %71 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5
  %72 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = shl i64 %75, 6
  %77 = icmp eq i64 %73, %76
  br i1 %77, label %78, label %94

78:                                               ; preds = %70
  %79 = add i64 %73, 1
  %80 = icmp slt i64 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = bitcast %"class.std::__1::vector.33"* %71 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #20
  unreachable

83:                                               ; preds = %78
  %84 = icmp ult i64 %73, 4611686018427387903
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = shl i64 %75, 7
  %87 = add nuw nsw i64 %73, 64
  %88 = and i64 %87, -64
  %89 = icmp ult i64 %86, %88
  %90 = select i1 %89, i64 %88, i64 %86
  br label %91

91:                                               ; preds = %85, %83
  %92 = phi i64 [ %90, %85 ], [ 9223372036854775807, %83 ]
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.33"* %71, i64 %92) #17
  %93 = load i64, i64* %72, align 8
  br label %94

94:                                               ; preds = %91, %70
  %95 = phi i64 [ %93, %91 ], [ %73, %70 ]
  %96 = add i64 %95, 1
  store i64 %96, i64* %72, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %71, i64 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = lshr i64 %95, 6
  %100 = getelementptr inbounds i64, i64* %98, i64 %99
  %101 = and i64 %95, 63
  %102 = shl i64 1, %101
  %103 = load i64, i64* %100, align 8
  %104 = or i64 %103, %102
  store i64 %104, i64* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i32 %1, i32* %5, align 4
  %11 = getelementptr inbounds i32, i32* %5, i64 1
  %12 = ptrtoint i32* %11 to i64
  %13 = bitcast i32** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %70

14:                                               ; preds = %2
  %15 = ptrtoint i32* %5 to i64
  %16 = bitcast i32** %4 to i64*
  %17 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::vector.26"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #20
  unreachable

25:                                               ; preds = %14
  %26 = bitcast i32** %6 to i64*
  %27 = sub i64 %9, %18
  %28 = ashr exact i64 %27, 2
  %29 = icmp ult i64 %28, 2305843009213693951
  br i1 %29, label %30, label %38

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 1
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %30
  %36 = icmp ugt i64 %33, 4611686018427387903
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #20
  unreachable

38:                                               ; preds = %35, %25
  %39 = phi i64 [ %33, %35 ], [ 4611686018427387903, %25 ]
  %40 = shl i64 %39, 2
  %41 = tail call i8* @_Znwm(i64 %40) #18
  %42 = bitcast i8* %41 to i32*
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %39, %38 ], [ 0, %30 ]
  %45 = phi i32* [ %42, %38 ], [ null, %30 ]
  %46 = getelementptr inbounds i32, i32* %45, i64 %20
  %47 = getelementptr inbounds i32, i32* %45, i64 %44
  %48 = ptrtoint i32* %47 to i64
  store i32 %1, i32* %46, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 1
  %50 = ptrtoint i32* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i64, i64* %16, align 8
  %54 = ptrtoint i32* %52 to i64
  %55 = sub i64 %53, %54
  %56 = ashr exact i64 %55, 2
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds i32, i32* %46, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = icmp sgt i64 %55, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %43
  %62 = bitcast i32* %58 to i8*
  %63 = bitcast i32* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 %55, i1 false) #17
  %64 = load i32*, i32** %51, align 8
  br label %65

65:                                               ; preds = %61, %43
  %66 = phi i32* [ %52, %43 ], [ %64, %61 ]
  store i64 %59, i64* %17, align 8
  store i64 %50, i64* %16, align 8
  store i64 %48, i64* %26, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = bitcast i32* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #18
  br label %70

70:                                               ; preds = %10, %65, %68
  %71 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5
  %72 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = shl i64 %75, 6
  %77 = icmp eq i64 %73, %76
  br i1 %77, label %78, label %94

78:                                               ; preds = %70
  %79 = add i64 %73, 1
  %80 = icmp slt i64 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = bitcast %"class.std::__1::vector.33"* %71 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #20
  unreachable

83:                                               ; preds = %78
  %84 = icmp ult i64 %73, 4611686018427387903
  br i1 %84, label %85, label %91

85:                                               ; preds = %83
  %86 = shl i64 %75, 7
  %87 = add nuw nsw i64 %73, 64
  %88 = and i64 %87, -64
  %89 = icmp ult i64 %86, %88
  %90 = select i1 %89, i64 %88, i64 %86
  br label %91

91:                                               ; preds = %85, %83
  %92 = phi i64 [ %90, %85 ], [ 9223372036854775807, %83 ]
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.33"* %71, i64 %92) #17
  %93 = load i64, i64* %72, align 8
  br label %94

94:                                               ; preds = %91, %70
  %95 = phi i64 [ %93, %91 ], [ %73, %70 ]
  %96 = add i64 %95, 1
  store i64 %96, i64* %72, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %71, i64 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = lshr i64 %95, 6
  %100 = getelementptr inbounds i64, i64* %98, i64 %99
  %101 = and i64 %95, 63
  %102 = shl i64 1, %101
  %103 = xor i64 %102, -1
  %104 = load i64, i64* %100, align 8
  %105 = and i64 %104, %103
  store i64 %105, i64* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder12makeVoidTypeEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::tuple.267", align 8
  %3 = alloca %"class.std::__1::tuple.219", align 1
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca i32, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 19, i32* %8, align 4
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %14 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %25, label %26, label %171

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 80) #18
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %30, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %27, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 19, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %27, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  %39 = ptrtoint i8* %27 to i64
  %40 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #17
  store i32 19, i32* %9, align 4
  %41 = bitcast %"class.std::__1::tuple.267"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #17
  %44 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %3) #17
  %45 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 4
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to %"class.spv::Instruction"***
  %49 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 5
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to %"class.spv::Instruction"***
  %52 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %51, align 8
  %53 = icmp eq %"class.spv::Instruction"** %49, %52
  %54 = ptrtoint %"class.spv::Instruction"** %52 to i64
  br i1 %53, label %60, label %55

55:                                               ; preds = %26
  %56 = bitcast %"class.spv::Instruction"** %49 to i64*
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, i64 1
  %58 = ptrtoint %"class.spv::Instruction"** %57 to i64
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  store i64 %58, i64* %59, align 8
  br label %117

60:                                               ; preds = %26
  %61 = ptrtoint %"class.spv::Instruction"** %49 to i64
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %60
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %73 = sub i64 %54, %64
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %67
  %79 = select i1 %78, i64 %67, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  call void @abort() #20
  unreachable

84:                                               ; preds = %81, %71
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %71 ]
  %86 = shl i64 %85, 3
  %87 = call i8* @_Znwm(i64 %86) #18
  %88 = bitcast i8* %87 to %"class.spv::Instruction"**
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi %"class.spv::Instruction"** [ %88, %84 ], [ null, %76 ]
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %66
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %90
  %94 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %95 = bitcast %"class.spv::Instruction"** %92 to i64*
  store i64 %39, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.spv::Instruction"***
  %99 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  %100 = load i64, i64* %62, align 8
  %101 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 %104
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %89
  %109 = bitcast %"class.spv::Instruction"** %105 to i8*
  %110 = bitcast %"class.spv::Instruction"** %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 %102, i1 false) #17
  %111 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  br label %112

112:                                              ; preds = %108, %89
  %113 = phi %"class.spv::Instruction"** [ %99, %89 ], [ %111, %108 ]
  store i64 %106, i64* %63, align 8
  store i64 %97, i64* %62, align 8
  store i64 %94, i64* %72, align 8
  %114 = icmp eq %"class.spv::Instruction"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.spv::Instruction"** %113 to i8*
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %55, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #17
  %118 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #17
  %119 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %39, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %121 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %120, align 8
  %122 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %122, align 8
  %124 = icmp ult %"class.std::__1::unique_ptr"* %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %126, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %39, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 1
  %129 = ptrtoint %"class.std::__1::unique_ptr"* %128 to i64
  %130 = bitcast %"class.std::__1::unique_ptr"** %120 to i64*
  store i64 %129, i64* %130, align 8
  br label %133

131:                                              ; preds = %117
  %132 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %132, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %134, align 8
  %136 = icmp eq %"class.spv::Instruction"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.spv::Instruction"* %135 to void (%"class.spv::Instruction"*)***
  %139 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %139, i64 1
  %141 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %140, align 8
  call void %141(%"class.spv::Instruction"* nonnull %135) #17
  br label %142

142:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #17
  %143 = load i32, i32* %33, align 8
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %146 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %147 = bitcast %"class.spv::Instruction"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector.55"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = ashr exact i64 %151, 3
  %153 = icmp ugt i64 %152, %144
  %154 = inttoptr i64 %150 to %"class.spv::Instruction"**
  br i1 %153, label %167, label %155

155:                                              ; preds = %142
  %156 = add i32 %143, 16
  %157 = zext i32 %156 to i64
  %158 = icmp ult i64 %152, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %155
  %160 = sub nsw i64 %157, %152
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %145, i64 %160) #17
  %161 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %145, i64 0, i32 0, i32 0
  %162 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %161, align 8
  br label %167

163:                                              ; preds = %155
  %164 = icmp ugt i64 %152, %157
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, i64 %157
  store %"class.spv::Instruction"** %166, %"class.spv::Instruction"*** %146, align 8
  br label %167

167:                                              ; preds = %142, %159, %163, %165
  %168 = phi %"class.spv::Instruction"** [ %154, %165 ], [ %154, %163 ], [ %162, %159 ], [ %154, %142 ]
  %169 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %168, i64 %144
  %170 = bitcast %"class.spv::Instruction"** %169 to i8**
  store i8* %27, i8** %170, align 8
  br label %184

171:                                              ; preds = %1
  %172 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #17
  store i32 19, i32* %11, align 4
  %173 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #17
  %174 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %175) #17
  %176 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %177 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %176, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %175) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #17
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 4
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to %"class.spv::Instruction"***
  %180 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %179, align 8
  %181 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %180, i64 -1
  %182 = bitcast %"class.spv::Instruction"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #17
  br label %184

184:                                              ; preds = %171, %167
  %185 = phi i64 [ %39, %167 ], [ %183, %171 ]
  %186 = inttoptr i64 %185 to %"class.spv::Instruction"*
  %187 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %186, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder12makeBoolTypeEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::tuple.267", align 8
  %3 = alloca %"class.std::__1::tuple.219", align 1
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca i32, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 20, i32* %8, align 4
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %14 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %25, label %26, label %171

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 80) #18
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %30, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %27, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 20, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %27, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  %39 = ptrtoint i8* %27 to i64
  %40 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #17
  store i32 20, i32* %9, align 4
  %41 = bitcast %"class.std::__1::tuple.267"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #17
  %44 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %3) #17
  %45 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 4
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to %"class.spv::Instruction"***
  %49 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 5
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to %"class.spv::Instruction"***
  %52 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %51, align 8
  %53 = icmp eq %"class.spv::Instruction"** %49, %52
  %54 = ptrtoint %"class.spv::Instruction"** %52 to i64
  br i1 %53, label %60, label %55

55:                                               ; preds = %26
  %56 = bitcast %"class.spv::Instruction"** %49 to i64*
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, i64 1
  %58 = ptrtoint %"class.spv::Instruction"** %57 to i64
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  store i64 %58, i64* %59, align 8
  br label %117

60:                                               ; preds = %26
  %61 = ptrtoint %"class.spv::Instruction"** %49 to i64
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %60
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %73 = sub i64 %54, %64
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %67
  %79 = select i1 %78, i64 %67, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  call void @abort() #20
  unreachable

84:                                               ; preds = %81, %71
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %71 ]
  %86 = shl i64 %85, 3
  %87 = call i8* @_Znwm(i64 %86) #18
  %88 = bitcast i8* %87 to %"class.spv::Instruction"**
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi %"class.spv::Instruction"** [ %88, %84 ], [ null, %76 ]
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %66
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %90
  %94 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %95 = bitcast %"class.spv::Instruction"** %92 to i64*
  store i64 %39, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.spv::Instruction"***
  %99 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  %100 = load i64, i64* %62, align 8
  %101 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 %104
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %89
  %109 = bitcast %"class.spv::Instruction"** %105 to i8*
  %110 = bitcast %"class.spv::Instruction"** %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 %102, i1 false) #17
  %111 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  br label %112

112:                                              ; preds = %108, %89
  %113 = phi %"class.spv::Instruction"** [ %99, %89 ], [ %111, %108 ]
  store i64 %106, i64* %63, align 8
  store i64 %97, i64* %62, align 8
  store i64 %94, i64* %72, align 8
  %114 = icmp eq %"class.spv::Instruction"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.spv::Instruction"** %113 to i8*
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %55, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #17
  %118 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #17
  %119 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %39, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %121 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %120, align 8
  %122 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %122, align 8
  %124 = icmp ult %"class.std::__1::unique_ptr"* %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %126, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %39, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 1
  %129 = ptrtoint %"class.std::__1::unique_ptr"* %128 to i64
  %130 = bitcast %"class.std::__1::unique_ptr"** %120 to i64*
  store i64 %129, i64* %130, align 8
  br label %133

131:                                              ; preds = %117
  %132 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %132, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %134, align 8
  %136 = icmp eq %"class.spv::Instruction"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.spv::Instruction"* %135 to void (%"class.spv::Instruction"*)***
  %139 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %139, i64 1
  %141 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %140, align 8
  call void %141(%"class.spv::Instruction"* nonnull %135) #17
  br label %142

142:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #17
  %143 = load i32, i32* %33, align 8
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %146 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %147 = bitcast %"class.spv::Instruction"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector.55"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = ashr exact i64 %151, 3
  %153 = icmp ugt i64 %152, %144
  %154 = inttoptr i64 %150 to %"class.spv::Instruction"**
  br i1 %153, label %167, label %155

155:                                              ; preds = %142
  %156 = add i32 %143, 16
  %157 = zext i32 %156 to i64
  %158 = icmp ult i64 %152, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %155
  %160 = sub nsw i64 %157, %152
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %145, i64 %160) #17
  %161 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %145, i64 0, i32 0, i32 0
  %162 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %161, align 8
  br label %167

163:                                              ; preds = %155
  %164 = icmp ugt i64 %152, %157
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, i64 %157
  store %"class.spv::Instruction"** %166, %"class.spv::Instruction"*** %146, align 8
  br label %167

167:                                              ; preds = %142, %159, %163, %165
  %168 = phi %"class.spv::Instruction"** [ %154, %165 ], [ %154, %163 ], [ %162, %159 ], [ %154, %142 ]
  %169 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %168, i64 %144
  %170 = bitcast %"class.spv::Instruction"** %169 to i8**
  store i8* %27, i8** %170, align 8
  br label %184

171:                                              ; preds = %1
  %172 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #17
  store i32 20, i32* %11, align 4
  %173 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #17
  %174 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %175) #17
  %176 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %177 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %176, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %175) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #17
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 4
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to %"class.spv::Instruction"***
  %180 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %179, align 8
  %181 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %180, i64 -1
  %182 = bitcast %"class.spv::Instruction"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #17
  br label %184

184:                                              ; preds = %171, %167
  %185 = phi i64 [ %39, %167 ], [ %183, %171 ]
  %186 = inttoptr i64 %185 to %"class.spv::Instruction"*
  %187 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %186, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder15makeSamplerTypeEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::tuple.267", align 8
  %3 = alloca %"class.std::__1::tuple.219", align 1
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca i32, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 26, i32* %8, align 4
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %14 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %25, label %26, label %171

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 80) #18
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %30, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %27, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 26, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %27, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  %39 = ptrtoint i8* %27 to i64
  %40 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #17
  store i32 26, i32* %9, align 4
  %41 = bitcast %"class.std::__1::tuple.267"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #17
  %44 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %3) #17
  %45 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 4
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to %"class.spv::Instruction"***
  %49 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 5
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to %"class.spv::Instruction"***
  %52 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %51, align 8
  %53 = icmp eq %"class.spv::Instruction"** %49, %52
  %54 = ptrtoint %"class.spv::Instruction"** %52 to i64
  br i1 %53, label %60, label %55

55:                                               ; preds = %26
  %56 = bitcast %"class.spv::Instruction"** %49 to i64*
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, i64 1
  %58 = ptrtoint %"class.spv::Instruction"** %57 to i64
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  store i64 %58, i64* %59, align 8
  br label %117

60:                                               ; preds = %26
  %61 = ptrtoint %"class.spv::Instruction"** %49 to i64
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %60
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %73 = sub i64 %54, %64
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %67
  %79 = select i1 %78, i64 %67, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  call void @abort() #20
  unreachable

84:                                               ; preds = %81, %71
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %71 ]
  %86 = shl i64 %85, 3
  %87 = call i8* @_Znwm(i64 %86) #18
  %88 = bitcast i8* %87 to %"class.spv::Instruction"**
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi %"class.spv::Instruction"** [ %88, %84 ], [ null, %76 ]
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %66
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %90
  %94 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %95 = bitcast %"class.spv::Instruction"** %92 to i64*
  store i64 %39, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.spv::Instruction"***
  %99 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  %100 = load i64, i64* %62, align 8
  %101 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 %104
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %89
  %109 = bitcast %"class.spv::Instruction"** %105 to i8*
  %110 = bitcast %"class.spv::Instruction"** %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 %102, i1 false) #17
  %111 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  br label %112

112:                                              ; preds = %108, %89
  %113 = phi %"class.spv::Instruction"** [ %99, %89 ], [ %111, %108 ]
  store i64 %106, i64* %63, align 8
  store i64 %97, i64* %62, align 8
  store i64 %94, i64* %72, align 8
  %114 = icmp eq %"class.spv::Instruction"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.spv::Instruction"** %113 to i8*
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %55, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #17
  %118 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #17
  %119 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %39, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %121 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %120, align 8
  %122 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %122, align 8
  %124 = icmp ult %"class.std::__1::unique_ptr"* %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %126, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %39, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 1
  %129 = ptrtoint %"class.std::__1::unique_ptr"* %128 to i64
  %130 = bitcast %"class.std::__1::unique_ptr"** %120 to i64*
  store i64 %129, i64* %130, align 8
  br label %133

131:                                              ; preds = %117
  %132 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %132, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %134, align 8
  %136 = icmp eq %"class.spv::Instruction"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.spv::Instruction"* %135 to void (%"class.spv::Instruction"*)***
  %139 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %139, i64 1
  %141 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %140, align 8
  call void %141(%"class.spv::Instruction"* nonnull %135) #17
  br label %142

142:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #17
  %143 = load i32, i32* %33, align 8
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %146 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %147 = bitcast %"class.spv::Instruction"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector.55"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = ashr exact i64 %151, 3
  %153 = icmp ugt i64 %152, %144
  %154 = inttoptr i64 %150 to %"class.spv::Instruction"**
  br i1 %153, label %167, label %155

155:                                              ; preds = %142
  %156 = add i32 %143, 16
  %157 = zext i32 %156 to i64
  %158 = icmp ult i64 %152, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %155
  %160 = sub nsw i64 %157, %152
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %145, i64 %160) #17
  %161 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %145, i64 0, i32 0, i32 0
  %162 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %161, align 8
  br label %167

163:                                              ; preds = %155
  %164 = icmp ugt i64 %152, %157
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, i64 %157
  store %"class.spv::Instruction"** %166, %"class.spv::Instruction"*** %146, align 8
  br label %167

167:                                              ; preds = %142, %159, %163, %165
  %168 = phi %"class.spv::Instruction"** [ %154, %165 ], [ %154, %163 ], [ %162, %159 ], [ %154, %142 ]
  %169 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %168, i64 %144
  %170 = bitcast %"class.spv::Instruction"** %169 to i8**
  store i8* %27, i8** %170, align 8
  br label %184

171:                                              ; preds = %1
  %172 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #17
  store i32 26, i32* %11, align 4
  %173 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #17
  %174 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %175) #17
  %176 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %177 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %176, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %175) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #17
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 4
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to %"class.spv::Instruction"***
  %180 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %179, align 8
  %181 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %180, i64 -1
  %182 = bitcast %"class.spv::Instruction"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #17
  br label %184

184:                                              ; preds = %171, %167
  %185 = phi i64 [ %39, %167 ], [ %183, %171 ]
  %186 = inttoptr i64 %185 to %"class.spv::Instruction"*
  %187 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %186, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder11makePointerENS_12StorageClassEj(%"class.spv::Builder"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 32, i32* %10, align 4
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %16 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %19 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %20 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr exact i64 %27, 3
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %30, label %31, label %69

31:                                               ; preds = %3
  %32 = bitcast i32* %11 to i8*
  %33 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  %34 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  br label %36

36:                                               ; preds = %31, %53
  %37 = phi i64 [ 0, %31 ], [ %54, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #17
  store i32 32, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  store i32* %11, i32** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #17
  %38 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %39 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %38, 0
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to %"class.spv::Instruction"***
  %42 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %41, align 8
  %43 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %42, i64 %37
  %44 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #17
  %45 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %44, i64 0, i32 4, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %1
  br i1 %48, label %49, label %53

49:                                               ; preds = %36
  %50 = getelementptr inbounds i32, i32* %46, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %2
  br i1 %52, label %67, label %53

53:                                               ; preds = %36, %49
  %54 = add nuw nsw i64 %37, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 32, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store i32* %10, i32** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %55 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %56 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %55, 0
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 4
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = shl i64 %63, 29
  %65 = ashr i64 %64, 32
  %66 = icmp slt i64 %54, %65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %66, label %36, label %69

67:                                               ; preds = %49
  %68 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %44, i64 0, i32 1
  br label %215

69:                                               ; preds = %53, %3
  %70 = call i8* @_Znwm(i64 80) #18
  %71 = bitcast i8* %70 to %"class.spv::Instruction"*
  %72 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds i8, i8* %70, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 %74, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %70, i64 12
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %70, i64 16
  %81 = bitcast i8* %80 to i32*
  store i32 32, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %70, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 56, i1 false) #17
  %83 = ptrtoint i8* %70 to i64
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %71, i32 %1)
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %71, i32 %2)
  %84 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #17
  store i32 32, i32* %12, align 4
  %85 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #17
  %88 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %89 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %88, 0
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #17
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 4
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to %"class.spv::Instruction"***
  %93 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 5
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.spv::Instruction"***
  %96 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %95, align 8
  %97 = icmp eq %"class.spv::Instruction"** %93, %96
  %98 = ptrtoint %"class.spv::Instruction"** %96 to i64
  br i1 %97, label %104, label %99

99:                                               ; preds = %69
  %100 = bitcast %"class.spv::Instruction"** %93 to i64*
  store i64 %83, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %93, i64 1
  %102 = ptrtoint %"class.spv::Instruction"** %101 to i64
  %103 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  store i64 %102, i64* %103, align 8
  br label %161

104:                                              ; preds = %69
  %105 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %105, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %90 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #20
  unreachable

115:                                              ; preds = %104
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i64*
  %117 = sub i64 %98, %108
  %118 = ashr exact i64 %117, 3
  %119 = icmp ult i64 %118, 1152921504606846975
  br i1 %119, label %120, label %128

120:                                              ; preds = %115
  %121 = ashr exact i64 %117, 2
  %122 = icmp ult i64 %121, %111
  %123 = select i1 %122, i64 %111, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %120
  %126 = icmp ugt i64 %123, 2305843009213693951
  br i1 %126, label %127, label %128

127:                                              ; preds = %125
  call void @abort() #20
  unreachable

128:                                              ; preds = %125, %115
  %129 = phi i64 [ %123, %125 ], [ 2305843009213693951, %115 ]
  %130 = shl i64 %129, 3
  %131 = call i8* @_Znwm(i64 %130) #18
  %132 = bitcast i8* %131 to %"class.spv::Instruction"**
  br label %133

133:                                              ; preds = %128, %120
  %134 = phi i64 [ %129, %128 ], [ 0, %120 ]
  %135 = phi %"class.spv::Instruction"** [ %132, %128 ], [ null, %120 ]
  %136 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %135, i64 %110
  %137 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %135, i64 %134
  %138 = ptrtoint %"class.spv::Instruction"** %137 to i64
  %139 = bitcast %"class.spv::Instruction"** %136 to i64*
  store i64 %83, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %136, i64 1
  %141 = ptrtoint %"class.spv::Instruction"** %140 to i64
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %90 to %"class.spv::Instruction"***
  %143 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %142, align 8
  %144 = load i64, i64* %106, align 8
  %145 = ptrtoint %"class.spv::Instruction"** %143 to i64
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 3
  %148 = sub nsw i64 0, %147
  %149 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %136, i64 %148
  %150 = ptrtoint %"class.spv::Instruction"** %149 to i64
  %151 = icmp sgt i64 %146, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %133
  %153 = bitcast %"class.spv::Instruction"** %149 to i8*
  %154 = bitcast %"class.spv::Instruction"** %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %146, i1 false) #17
  %155 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %142, align 8
  br label %156

156:                                              ; preds = %152, %133
  %157 = phi %"class.spv::Instruction"** [ %143, %133 ], [ %155, %152 ]
  store i64 %150, i64* %107, align 8
  store i64 %141, i64* %106, align 8
  store i64 %138, i64* %116, align 8
  %158 = icmp eq %"class.spv::Instruction"** %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.spv::Instruction"** %157 to i8*
  call void @_ZdlPv(i8* %160) #18
  br label %161

161:                                              ; preds = %99, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #17
  %162 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #17
  %163 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %83, i64* %163, align 8
  %164 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %165 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %164, align 8
  %166 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %167 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %166, align 8
  %168 = icmp ult %"class.std::__1::unique_ptr"* %165, %167
  br i1 %168, label %169, label %175

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %170, align 8
  %171 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  store i64 %83, i64* %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 1
  %173 = ptrtoint %"class.std::__1::unique_ptr"* %172 to i64
  %174 = bitcast %"class.std::__1::unique_ptr"** %164 to i64*
  store i64 %173, i64* %174, align 8
  br label %177

175:                                              ; preds = %161
  %176 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %176, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %13) #17
  br label %177

177:                                              ; preds = %169, %175
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %178, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %178, align 8
  %180 = icmp eq %"class.spv::Instruction"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = bitcast %"class.spv::Instruction"* %179 to void (%"class.spv::Instruction"*)***
  %183 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %183, i64 1
  %185 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %184, align 8
  call void %185(%"class.spv::Instruction"* nonnull %179) #17
  br label %186

186:                                              ; preds = %177, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #17
  %187 = load i32, i32* %77, align 8
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %190 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %191 = bitcast %"class.spv::Instruction"*** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector.55"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = ashr exact i64 %195, 3
  %197 = icmp ugt i64 %196, %188
  %198 = inttoptr i64 %194 to %"class.spv::Instruction"**
  br i1 %197, label %211, label %199

199:                                              ; preds = %186
  %200 = add i32 %187, 16
  %201 = zext i32 %200 to i64
  %202 = icmp ult i64 %196, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %199
  %204 = sub nsw i64 %201, %196
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %189, i64 %204) #17
  %205 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %189, i64 0, i32 0, i32 0
  %206 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %205, align 8
  br label %211

207:                                              ; preds = %199
  %208 = icmp ugt i64 %196, %201
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %198, i64 %201
  store %"class.spv::Instruction"** %210, %"class.spv::Instruction"*** %190, align 8
  br label %211

211:                                              ; preds = %186, %203, %207, %209
  %212 = phi %"class.spv::Instruction"** [ %198, %209 ], [ %198, %207 ], [ %206, %203 ], [ %198, %186 ]
  %213 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %212, i64 %188
  %214 = bitcast %"class.spv::Instruction"** %213 to i8**
  store i8* %70, i8** %214, align 8
  br label %215

215:                                              ; preds = %67, %211
  %216 = phi i32* [ %77, %211 ], [ %68, %67 ]
  %217 = load i32, i32* %216, align 8
  ret i32 %217
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder18makeForwardPointerENS_12StorageClassE(%"class.spv::Builder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #18
  %5 = bitcast i8* %4 to %"class.spv::Instruction"*
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %8, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 39, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %5, i32 %1)
  %17 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = ptrtoint i8* %4 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = icmp ult %"class.std::__1::unique_ptr"* %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %26, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %18, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %29 = ptrtoint %"class.std::__1::unique_ptr"* %28 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %33

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %32, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %33

33:                                               ; preds = %25, %31
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %34, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %34, align 8
  %36 = icmp eq %"class.spv::Instruction"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.spv::Instruction"* %35 to void (%"class.spv::Instruction"*)***
  %39 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %39, i64 1
  %41 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %40, align 8
  call void %41(%"class.spv::Instruction"* nonnull %35) #17
  br label %42

42:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %43 = load i32, i32* %11, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %46 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %47 = bitcast %"class.spv::Instruction"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.55"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %52, %44
  %54 = inttoptr i64 %50 to %"class.spv::Instruction"**
  br i1 %53, label %67, label %55

55:                                               ; preds = %42
  %56 = add i32 %43, 16
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = sub nsw i64 %57, %52
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %45, i64 %60) #17
  %61 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %45, i64 0, i32 0, i32 0
  %62 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %61, align 8
  br label %67

63:                                               ; preds = %55
  %64 = icmp ugt i64 %52, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %57
  store %"class.spv::Instruction"** %66, %"class.spv::Instruction"*** %46, align 8
  br label %67

67:                                               ; preds = %42, %59, %63, %65
  %68 = phi %"class.spv::Instruction"** [ %54, %65 ], [ %54, %63 ], [ %62, %59 ], [ %54, %42 ]
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, i64 %44
  %70 = bitcast %"class.spv::Instruction"** %69 to i8**
  store i8* %4, i8** %70, align 8
  %71 = load i32, i32* %11, align 8
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder29makePointerFromForwardPointerENS_12StorageClassEjj(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca %"class.std::__1::tuple.267", align 8
  %10 = alloca %"class.std::__1::tuple.219", align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #17
  store i32 32, i32* %11, align 4
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %17 = bitcast %"class.std::__1::tuple.267"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #17
  %20 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %21 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %20, 0
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %21, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %21, i64 4
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  %31 = icmp sgt i32 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #17
  br i1 %31, label %32, label %70

32:                                               ; preds = %4
  %33 = bitcast i32* %12 to i8*
  %34 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  %35 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  br label %37

37:                                               ; preds = %32, %54
  %38 = phi i64 [ 0, %32 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #17
  store i32 32, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  store i32* %12, i32** %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #17
  %39 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %40 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %39, 0
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to %"class.spv::Instruction"***
  %43 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %42, align 8
  %44 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %43, i64 %38
  %45 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #17
  %46 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %45, i64 0, i32 4, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %1
  br i1 %49, label %50, label %54

50:                                               ; preds = %37
  %51 = getelementptr inbounds i32, i32* %47, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %3
  br i1 %53, label %68, label %54

54:                                               ; preds = %37, %50
  %55 = add nuw nsw i64 %38, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #17
  store i32 32, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  store i32* %11, i32** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #17
  %56 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %57 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %56, 0
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %57, i64 4
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = shl i64 %64, 29
  %66 = ashr i64 %65, 32
  %67 = icmp slt i64 %55, %66
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #17
  br i1 %67, label %37, label %70

68:                                               ; preds = %50
  %69 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %45, i64 0, i32 1
  br label %213

70:                                               ; preds = %54, %4
  %71 = call i8* @_Znwm(i64 80) #18
  %72 = bitcast i8* %71 to %"class.spv::Instruction"*
  %73 = bitcast i8* %71 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds i8, i8* %71, i64 8
  %75 = bitcast i8* %74 to i32*
  store i32 %2, i32* %75, align 8
  %76 = getelementptr inbounds i8, i8* %71, i64 12
  %77 = bitcast i8* %76 to i32*
  store i32 0, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to i32*
  store i32 32, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %71, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 56, i1 false) #17
  %81 = ptrtoint i8* %71 to i64
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %72, i32 %1)
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %72, i32 %3)
  %82 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #17
  store i32 32, i32* %13, align 4
  %83 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  %84 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %13, i32** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #17
  %86 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %87 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %86, 0
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #17
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 4
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %89 to %"class.spv::Instruction"***
  %91 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %87, i64 5
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %92 to %"class.spv::Instruction"***
  %94 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %93, align 8
  %95 = icmp eq %"class.spv::Instruction"** %91, %94
  %96 = ptrtoint %"class.spv::Instruction"** %94 to i64
  br i1 %95, label %102, label %97

97:                                               ; preds = %70
  %98 = bitcast %"class.spv::Instruction"** %91 to i64*
  store i64 %81, i64* %98, align 8
  %99 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 1
  %100 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  store i64 %100, i64* %101, align 8
  br label %159

102:                                              ; preds = %70
  %103 = ptrtoint %"class.spv::Instruction"** %91 to i64
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = ashr exact i64 %107, 3
  %109 = add nsw i64 %108, 1
  %110 = icmp ugt i64 %109, 2305843009213693951
  br i1 %110, label %111, label %113

111:                                              ; preds = %102
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %88 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #20
  unreachable

113:                                              ; preds = %102
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %92 to i64*
  %115 = sub i64 %96, %106
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %113
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %109
  %121 = select i1 %120, i64 %109, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #20
  unreachable

126:                                              ; preds = %123, %113
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %113 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #18
  %130 = bitcast i8* %129 to %"class.spv::Instruction"**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi %"class.spv::Instruction"** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %133, i64 %108
  %135 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %133, i64 %132
  %136 = ptrtoint %"class.spv::Instruction"** %135 to i64
  %137 = bitcast %"class.spv::Instruction"** %134 to i64*
  store i64 %81, i64* %137, align 8
  %138 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, i64 1
  %139 = ptrtoint %"class.spv::Instruction"** %138 to i64
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %88 to %"class.spv::Instruction"***
  %141 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %140, align 8
  %142 = load i64, i64* %104, align 8
  %143 = ptrtoint %"class.spv::Instruction"** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, i64 %146
  %148 = ptrtoint %"class.spv::Instruction"** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %131
  %151 = bitcast %"class.spv::Instruction"** %147 to i8*
  %152 = bitcast %"class.spv::Instruction"** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #17
  %153 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %140, align 8
  br label %154

154:                                              ; preds = %150, %131
  %155 = phi %"class.spv::Instruction"** [ %141, %131 ], [ %153, %150 ]
  store i64 %148, i64* %105, align 8
  store i64 %139, i64* %104, align 8
  store i64 %136, i64* %114, align 8
  %156 = icmp eq %"class.spv::Instruction"** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.spv::Instruction"** %155 to i8*
  call void @_ZdlPv(i8* %158) #18
  br label %159

159:                                              ; preds = %97, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #17
  %160 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #17
  %161 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %81, i64* %161, align 8
  %162 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %163 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %162, align 8
  %164 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %165 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %164, align 8
  %166 = icmp ult %"class.std::__1::unique_ptr"* %163, %165
  br i1 %166, label %167, label %173

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %168, align 8
  %169 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  store i64 %81, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 1
  %171 = ptrtoint %"class.std::__1::unique_ptr"* %170 to i64
  %172 = bitcast %"class.std::__1::unique_ptr"** %162 to i64*
  store i64 %171, i64* %172, align 8
  br label %175

173:                                              ; preds = %159
  %174 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %174, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %14) #17
  br label %175

175:                                              ; preds = %167, %173
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %176, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %176, align 8
  %178 = icmp eq %"class.spv::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.spv::Instruction"* %177 to void (%"class.spv::Instruction"*)***
  %181 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %182, align 8
  call void %183(%"class.spv::Instruction"* nonnull %177) #17
  br label %184

184:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #17
  %185 = load i32, i32* %75, align 8
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %188 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %189 = bitcast %"class.spv::Instruction"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::vector.55"* %187 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = icmp ugt i64 %194, %186
  %196 = inttoptr i64 %192 to %"class.spv::Instruction"**
  br i1 %195, label %209, label %197

197:                                              ; preds = %184
  %198 = add i32 %185, 16
  %199 = zext i32 %198 to i64
  %200 = icmp ult i64 %194, %199
  br i1 %200, label %201, label %205

201:                                              ; preds = %197
  %202 = sub nsw i64 %199, %194
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %187, i64 %202) #17
  %203 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %187, i64 0, i32 0, i32 0
  %204 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %203, align 8
  br label %209

205:                                              ; preds = %197
  %206 = icmp ugt i64 %194, %199
  br i1 %206, label %207, label %209

207:                                              ; preds = %205
  %208 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %196, i64 %199
  store %"class.spv::Instruction"** %208, %"class.spv::Instruction"*** %188, align 8
  br label %209

209:                                              ; preds = %184, %201, %205, %207
  %210 = phi %"class.spv::Instruction"** [ %196, %207 ], [ %196, %205 ], [ %204, %201 ], [ %196, %184 ]
  %211 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %210, i64 %186
  %212 = bitcast %"class.spv::Instruction"** %211 to i8**
  store i8* %71, i8** %212, align 8
  br label %213

213:                                              ; preds = %68, %209
  %214 = phi i32* [ %75, %209 ], [ %69, %68 ]
  %215 = load i32, i32* %214, align 8
  ret i32 %215
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"*, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 21, i32* %10, align 4
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %16 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %19 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %20 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr exact i64 %27, 3
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  %32 = zext i1 %2 to i32
  br label %72

33:                                               ; preds = %3
  %34 = bitcast i32* %11 to i8*
  %35 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  %36 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  %38 = zext i1 %2 to i32
  br label %39

39:                                               ; preds = %33, %56
  %40 = phi i64 [ 0, %33 ], [ %57, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #17
  store i32 21, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store i32* %11, i32** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #17
  %41 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %42 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %41, 0
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %44 = bitcast %"struct.std::__1::__hash_node_base"* %43 to %"class.spv::Instruction"***
  %45 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, i64 %40
  %47 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #17
  %48 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %47, i64 0, i32 4, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %52, label %56

52:                                               ; preds = %39
  %53 = getelementptr inbounds i32, i32* %49, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %38
  br i1 %55, label %70, label %56

56:                                               ; preds = %39, %52
  %57 = add nuw nsw i64 %40, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 21, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store i32* %10, i32** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %58 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %59 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %58, 0
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 4
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = shl i64 %66, 29
  %68 = ashr i64 %67, 32
  %69 = icmp slt i64 %57, %68
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %69, label %39, label %72

70:                                               ; preds = %52
  %71 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %47, i64 0, i32 1
  br label %286

72:                                               ; preds = %56, %31
  %73 = phi i32 [ %32, %31 ], [ %38, %56 ]
  %74 = call i8* @_Znwm(i64 80) #18
  %75 = bitcast i8* %74 to %"class.spv::Instruction"*
  %76 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = bitcast i8* %74 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds i8, i8* %74, i64 8
  %81 = bitcast i8* %80 to i32*
  store i32 %78, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %74, i64 12
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 4
  %84 = getelementptr inbounds i8, i8* %74, i64 16
  %85 = bitcast i8* %84 to i32*
  store i32 21, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %74, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 56, i1 false) #17
  %87 = ptrtoint i8* %74 to i64
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %75, i32 %1)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %75, i32 %73)
  %88 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %88) #17
  store i32 21, i32* %12, align 4
  %89 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %91) #17
  %92 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %93 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %92, 0
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 4
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to %"class.spv::Instruction"***
  %97 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 5
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to %"class.spv::Instruction"***
  %100 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %99, align 8
  %101 = icmp eq %"class.spv::Instruction"** %97, %100
  %102 = ptrtoint %"class.spv::Instruction"** %100 to i64
  br i1 %101, label %108, label %103

103:                                              ; preds = %72
  %104 = bitcast %"class.spv::Instruction"** %97 to i64*
  store i64 %87, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %97, i64 1
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i64*
  store i64 %106, i64* %107, align 8
  br label %165

108:                                              ; preds = %72
  %109 = ptrtoint %"class.spv::Instruction"** %97 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %109, %112
  %114 = ashr exact i64 %113, 3
  %115 = add nsw i64 %114, 1
  %116 = icmp ugt i64 %115, 2305843009213693951
  br i1 %116, label %117, label %119

117:                                              ; preds = %108
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %118) #20
  unreachable

119:                                              ; preds = %108
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %121 = sub i64 %102, %112
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 1152921504606846975
  br i1 %123, label %124, label %132

124:                                              ; preds = %119
  %125 = ashr exact i64 %121, 2
  %126 = icmp ult i64 %125, %115
  %127 = select i1 %126, i64 %115, i64 %125
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %124
  %130 = icmp ugt i64 %127, 2305843009213693951
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  call void @abort() #20
  unreachable

132:                                              ; preds = %129, %119
  %133 = phi i64 [ %127, %129 ], [ 2305843009213693951, %119 ]
  %134 = shl i64 %133, 3
  %135 = call i8* @_Znwm(i64 %134) #18
  %136 = bitcast i8* %135 to %"class.spv::Instruction"**
  br label %137

137:                                              ; preds = %132, %124
  %138 = phi i64 [ %133, %132 ], [ 0, %124 ]
  %139 = phi %"class.spv::Instruction"** [ %136, %132 ], [ null, %124 ]
  %140 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %139, i64 %114
  %141 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %139, i64 %138
  %142 = ptrtoint %"class.spv::Instruction"** %141 to i64
  %143 = bitcast %"class.spv::Instruction"** %140 to i64*
  store i64 %87, i64* %143, align 8
  %144 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %140, i64 1
  %145 = ptrtoint %"class.spv::Instruction"** %144 to i64
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.spv::Instruction"***
  %147 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %146, align 8
  %148 = load i64, i64* %110, align 8
  %149 = ptrtoint %"class.spv::Instruction"** %147 to i64
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = sub nsw i64 0, %151
  %153 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %140, i64 %152
  %154 = ptrtoint %"class.spv::Instruction"** %153 to i64
  %155 = icmp sgt i64 %150, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %137
  %157 = bitcast %"class.spv::Instruction"** %153 to i8*
  %158 = bitcast %"class.spv::Instruction"** %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 %150, i1 false) #17
  %159 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %146, align 8
  br label %160

160:                                              ; preds = %156, %137
  %161 = phi %"class.spv::Instruction"** [ %147, %137 ], [ %159, %156 ]
  store i64 %154, i64* %111, align 8
  store i64 %145, i64* %110, align 8
  store i64 %142, i64* %120, align 8
  %162 = icmp eq %"class.spv::Instruction"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %160
  %164 = bitcast %"class.spv::Instruction"** %161 to i8*
  call void @_ZdlPv(i8* %164) #18
  br label %165

165:                                              ; preds = %103, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %88) #17
  %166 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #17
  %167 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %87, i64* %167, align 8
  %168 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %169 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %168, align 8
  %170 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %171 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %170, align 8
  %172 = icmp ult %"class.std::__1::unique_ptr"* %169, %171
  br i1 %172, label %173, label %179

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %174, align 8
  %175 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  store i64 %87, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 1
  %177 = ptrtoint %"class.std::__1::unique_ptr"* %176 to i64
  %178 = bitcast %"class.std::__1::unique_ptr"** %168 to i64*
  store i64 %177, i64* %178, align 8
  br label %181

179:                                              ; preds = %165
  %180 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %180, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %13) #17
  br label %181

181:                                              ; preds = %173, %179
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %182, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %182, align 8
  %184 = icmp eq %"class.spv::Instruction"* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %181
  %186 = bitcast %"class.spv::Instruction"* %183 to void (%"class.spv::Instruction"*)***
  %187 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %187, i64 1
  %189 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %188, align 8
  call void %189(%"class.spv::Instruction"* nonnull %183) #17
  br label %190

190:                                              ; preds = %181, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #17
  %191 = load i32, i32* %81, align 8
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %194 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %195 = bitcast %"class.spv::Instruction"*** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.std::__1::vector.55"* %193 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = sub i64 %196, %198
  %200 = ashr exact i64 %199, 3
  %201 = icmp ugt i64 %200, %192
  %202 = inttoptr i64 %198 to %"class.spv::Instruction"**
  br i1 %201, label %215, label %203

203:                                              ; preds = %190
  %204 = add i32 %191, 16
  %205 = zext i32 %204 to i64
  %206 = icmp ult i64 %200, %205
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = sub nsw i64 %205, %200
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %193, i64 %208) #17
  %209 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %193, i64 0, i32 0, i32 0
  %210 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %209, align 8
  br label %215

211:                                              ; preds = %203
  %212 = icmp ugt i64 %200, %205
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %202, i64 %205
  store %"class.spv::Instruction"** %214, %"class.spv::Instruction"*** %194, align 8
  br label %215

215:                                              ; preds = %190, %207, %211, %213
  %216 = phi %"class.spv::Instruction"** [ %202, %213 ], [ %202, %211 ], [ %210, %207 ], [ %202, %190 ]
  %217 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %216, i64 %192
  %218 = bitcast %"class.spv::Instruction"** %217 to i8**
  store i8* %74, i8** %218, align 8
  %219 = icmp eq i32 %1, 64
  br i1 %219, label %220, label %286

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %222 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %223 = bitcast %"class.std::__1::__tree_end_node"* %222 to %"class.std::__1::__tree_node"**
  %224 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node"* %224, null
  br i1 %225, label %254, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %228

228:                                              ; preds = %250, %226
  %229 = phi %"class.std::__1::__tree_node"* [ %253, %250 ], [ %224, %226 ]
  %230 = phi %"class.std::__1::__tree_node_base"** [ %252, %250 ], [ %227, %226 ]
  %231 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = icmp sgt i32 %232, 11
  br i1 %233, label %234, label %240

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_node_base"* %236, null
  br i1 %237, label %238, label %250

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 0, i32 0
  br label %256

240:                                              ; preds = %228
  %241 = icmp eq i32 %232, 11
  br i1 %241, label %248, label %242

242:                                              ; preds = %240
  %243 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 0, i32 1
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %243, align 8
  %245 = icmp eq %"class.std::__1::__tree_node_base"* %244, null
  br i1 %245, label %246, label %250

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 0, i32 0
  br label %256

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %229, i64 0, i32 0, i32 0
  br label %256

250:                                              ; preds = %242, %234
  %251 = phi %"class.std::__1::__tree_node_base"* [ %236, %234 ], [ %244, %242 ]
  %252 = phi %"class.std::__1::__tree_node_base"** [ %235, %234 ], [ %243, %242 ]
  %253 = bitcast %"class.std::__1::__tree_node_base"* %251 to %"class.std::__1::__tree_node"*
  br label %228

254:                                              ; preds = %220
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 0, i32 0
  br label %256

256:                                              ; preds = %254, %248, %246, %238
  %257 = phi %"class.std::__1::__tree_end_node"* [ %222, %254 ], [ %239, %238 ], [ %247, %246 ], [ %249, %248 ]
  %258 = phi %"class.std::__1::__tree_node_base"** [ %255, %254 ], [ %235, %238 ], [ %243, %246 ], [ %230, %248 ]
  %259 = bitcast %"class.std::__1::__tree_node_base"** %258 to %"class.std::__1::__tree_node"**
  %260 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %259, align 8
  %261 = icmp eq %"class.std::__1::__tree_node"* %260, null
  br i1 %261, label %262, label %286

262:                                              ; preds = %256
  %263 = call i8* @_Znwm(i64 32) #18, !noalias !3
  %264 = getelementptr inbounds i8, i8* %263, i64 28
  %265 = bitcast i8* %264 to i32*
  store i32 11, i32* %265, align 4, !noalias !3
  %266 = bitcast i8* %263 to %"class.std::__1::__tree_node_base"*
  %267 = getelementptr inbounds i8, i8* %263, i64 16
  %268 = bitcast i8* %267 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %257, %"class.std::__1::__tree_end_node"** %268, align 8
  %269 = bitcast %"class.std::__1::__tree_node_base"** %258 to i8**
  store i8* %263, i8** %269, align 8
  %270 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %221, i64 0, i32 0, i32 0
  %271 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %270, align 8
  %272 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 0, i32 0
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  %274 = icmp eq %"class.std::__1::__tree_node_base"* %273, null
  br i1 %274, label %279, label %275

275:                                              ; preds = %262
  %276 = ptrtoint %"class.std::__1::__tree_node_base"* %273 to i64
  %277 = bitcast %"class.std::__1::set.14"* %221 to i64*
  store i64 %276, i64* %277, align 8
  %278 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  br label %279

279:                                              ; preds = %275, %262
  %280 = phi %"class.std::__1::__tree_node_base"* [ %266, %262 ], [ %278, %275 ]
  %281 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %282 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %281, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %282, %"class.std::__1::__tree_node_base"* %280) #17
  %283 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %284 = load i64, i64* %283, align 8
  %285 = add i64 %284, 1
  store i64 %285, i64* %283, align 8
  br label %286

286:                                              ; preds = %215, %256, %279, %70
  %287 = phi i32* [ %71, %70 ], [ %81, %279 ], [ %81, %256 ], [ %81, %215 ]
  %288 = load i32, i32* %287, align 8
  ret i32 %288
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder13makeFloatTypeEi(%"class.spv::Builder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple.267", align 8
  %4 = alloca %"class.std::__1::tuple.219", align 1
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 22, i32* %9, align 4
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %15 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %19 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 4
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br i1 %29, label %30, label %64

30:                                               ; preds = %2
  %31 = bitcast i32* %10 to i8*
  %32 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  %33 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  br label %48

35:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 22, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store i32* %9, i32** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %36 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %37 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %36, 0
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 4
  %40 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = shl i64 %44, 29
  %46 = ashr i64 %45, 32
  %47 = icmp slt i64 %61, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br i1 %47, label %48, label %64

48:                                               ; preds = %30, %35
  %49 = phi i64 [ 0, %30 ], [ %61, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #17
  store i32 22, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  store i32* %10, i32** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #17
  %50 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %51 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %50, 0
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to %"class.spv::Instruction"***
  %54 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %53, align 8
  %55 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %49
  %56 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #17
  %57 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %56, i64 0, i32 4, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  %61 = add nuw nsw i64 %49, 1
  br i1 %60, label %62, label %35

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %56, i64 0, i32 1
  br label %277

64:                                               ; preds = %35, %2
  %65 = call i8* @_Znwm(i64 80) #18
  %66 = bitcast i8* %65 to %"class.spv::Instruction"*
  %67 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 8
  %70 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 8
  %72 = bitcast i8* %71 to i32*
  store i32 %69, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %65, i64 12
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %65, i64 16
  %76 = bitcast i8* %75 to i32*
  store i32 22, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %65, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 56, i1 false) #17
  %78 = ptrtoint i8* %65 to i64
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %66, i32 %1)
  %79 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #17
  store i32 22, i32* %11, align 4
  %80 = bitcast %"class.std::__1::tuple.267"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #17
  %81 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #17
  %83 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %4) #17
  %84 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %83, 0
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #17
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 4
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to %"class.spv::Instruction"***
  %88 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 5
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %89 to %"class.spv::Instruction"***
  %91 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %90, align 8
  %92 = icmp eq %"class.spv::Instruction"** %88, %91
  %93 = ptrtoint %"class.spv::Instruction"** %91 to i64
  br i1 %92, label %99, label %94

94:                                               ; preds = %64
  %95 = bitcast %"class.spv::Instruction"** %88 to i64*
  store i64 %78, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %88, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  store i64 %97, i64* %98, align 8
  br label %156

99:                                               ; preds = %64
  %100 = ptrtoint %"class.spv::Instruction"** %88 to i64
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %100, %103
  %105 = ashr exact i64 %104, 3
  %106 = add nsw i64 %105, 1
  %107 = icmp ugt i64 %106, 2305843009213693951
  br i1 %107, label %108, label %110

108:                                              ; preds = %99
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #20
  unreachable

110:                                              ; preds = %99
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  %112 = sub i64 %93, %103
  %113 = ashr exact i64 %112, 3
  %114 = icmp ult i64 %113, 1152921504606846975
  br i1 %114, label %115, label %123

115:                                              ; preds = %110
  %116 = ashr exact i64 %112, 2
  %117 = icmp ult i64 %116, %106
  %118 = select i1 %117, i64 %106, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %115
  %121 = icmp ugt i64 %118, 2305843009213693951
  br i1 %121, label %122, label %123

122:                                              ; preds = %120
  call void @abort() #20
  unreachable

123:                                              ; preds = %120, %110
  %124 = phi i64 [ %118, %120 ], [ 2305843009213693951, %110 ]
  %125 = shl i64 %124, 3
  %126 = call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"class.spv::Instruction"**
  br label %128

128:                                              ; preds = %123, %115
  %129 = phi i64 [ %124, %123 ], [ 0, %115 ]
  %130 = phi %"class.spv::Instruction"** [ %127, %123 ], [ null, %115 ]
  %131 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %130, i64 %105
  %132 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %130, i64 %129
  %133 = ptrtoint %"class.spv::Instruction"** %132 to i64
  %134 = bitcast %"class.spv::Instruction"** %131 to i64*
  store i64 %78, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 1
  %136 = ptrtoint %"class.spv::Instruction"** %135 to i64
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"class.spv::Instruction"***
  %138 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %137, align 8
  %139 = load i64, i64* %101, align 8
  %140 = ptrtoint %"class.spv::Instruction"** %138 to i64
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 3
  %143 = sub nsw i64 0, %142
  %144 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %143
  %145 = ptrtoint %"class.spv::Instruction"** %144 to i64
  %146 = icmp sgt i64 %141, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %128
  %148 = bitcast %"class.spv::Instruction"** %144 to i8*
  %149 = bitcast %"class.spv::Instruction"** %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %141, i1 false) #17
  %150 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %137, align 8
  br label %151

151:                                              ; preds = %147, %128
  %152 = phi %"class.spv::Instruction"** [ %138, %128 ], [ %150, %147 ]
  store i64 %145, i64* %102, align 8
  store i64 %136, i64* %101, align 8
  store i64 %133, i64* %111, align 8
  %153 = icmp eq %"class.spv::Instruction"** %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = bitcast %"class.spv::Instruction"** %152 to i8*
  call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %94, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #17
  %157 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #17
  %158 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %78, i64* %158, align 8
  %159 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %160 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %159, align 8
  %161 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %162 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %161, align 8
  %163 = icmp ult %"class.std::__1::unique_ptr"* %160, %162
  br i1 %163, label %164, label %170

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %78, i64* %166, align 8
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 1
  %168 = ptrtoint %"class.std::__1::unique_ptr"* %167 to i64
  %169 = bitcast %"class.std::__1::unique_ptr"** %159 to i64*
  store i64 %168, i64* %169, align 8
  br label %172

170:                                              ; preds = %156
  %171 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %171, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %12) #17
  br label %172

172:                                              ; preds = %164, %170
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %173, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %173, align 8
  %175 = icmp eq %"class.spv::Instruction"* %174, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %172
  %177 = bitcast %"class.spv::Instruction"* %174 to void (%"class.spv::Instruction"*)***
  %178 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %178, i64 1
  %180 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %179, align 8
  call void %180(%"class.spv::Instruction"* nonnull %174) #17
  br label %181

181:                                              ; preds = %172, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #17
  %182 = load i32, i32* %72, align 8
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %185 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %186 = bitcast %"class.spv::Instruction"*** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::vector.55"* %184 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 %187, %189
  %191 = ashr exact i64 %190, 3
  %192 = icmp ugt i64 %191, %183
  %193 = inttoptr i64 %189 to %"class.spv::Instruction"**
  br i1 %192, label %206, label %194

194:                                              ; preds = %181
  %195 = add i32 %182, 16
  %196 = zext i32 %195 to i64
  %197 = icmp ult i64 %191, %196
  br i1 %197, label %198, label %202

198:                                              ; preds = %194
  %199 = sub nsw i64 %196, %191
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %184, i64 %199) #17
  %200 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %184, i64 0, i32 0, i32 0
  %201 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %200, align 8
  br label %206

202:                                              ; preds = %194
  %203 = icmp ugt i64 %191, %196
  br i1 %203, label %204, label %206

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %193, i64 %196
  store %"class.spv::Instruction"** %205, %"class.spv::Instruction"*** %185, align 8
  br label %206

206:                                              ; preds = %181, %198, %202, %204
  %207 = phi %"class.spv::Instruction"** [ %193, %204 ], [ %193, %202 ], [ %201, %198 ], [ %193, %181 ]
  %208 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %207, i64 %183
  %209 = bitcast %"class.spv::Instruction"** %208 to i8**
  store i8* %65, i8** %209, align 8
  %210 = icmp eq i32 %1, 64
  br i1 %210, label %211, label %277

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %213 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %214 = bitcast %"class.std::__1::__tree_end_node"* %213 to %"class.std::__1::__tree_node"**
  %215 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node"* %215, null
  br i1 %216, label %245, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %219

219:                                              ; preds = %241, %217
  %220 = phi %"class.std::__1::__tree_node"* [ %244, %241 ], [ %215, %217 ]
  %221 = phi %"class.std::__1::__tree_node_base"** [ %243, %241 ], [ %218, %217 ]
  %222 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %220, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = icmp sgt i32 %223, 10
  br i1 %224, label %225, label %231

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %220, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %226, align 8
  %228 = icmp eq %"class.std::__1::__tree_node_base"* %227, null
  br i1 %228, label %229, label %241

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %220, i64 0, i32 0, i32 0
  br label %247

231:                                              ; preds = %219
  %232 = icmp eq i32 %223, 10
  br i1 %232, label %239, label %233

233:                                              ; preds = %231
  %234 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %220, i64 0, i32 0, i32 1
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node_base"* %235, null
  br i1 %236, label %237, label %241

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %220, i64 0, i32 0, i32 0
  br label %247

239:                                              ; preds = %231
  %240 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %220, i64 0, i32 0, i32 0
  br label %247

241:                                              ; preds = %233, %225
  %242 = phi %"class.std::__1::__tree_node_base"* [ %227, %225 ], [ %235, %233 ]
  %243 = phi %"class.std::__1::__tree_node_base"** [ %226, %225 ], [ %234, %233 ]
  %244 = bitcast %"class.std::__1::__tree_node_base"* %242 to %"class.std::__1::__tree_node"*
  br label %219

245:                                              ; preds = %211
  %246 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %213, i64 0, i32 0
  br label %247

247:                                              ; preds = %245, %239, %237, %229
  %248 = phi %"class.std::__1::__tree_end_node"* [ %213, %245 ], [ %230, %229 ], [ %238, %237 ], [ %240, %239 ]
  %249 = phi %"class.std::__1::__tree_node_base"** [ %246, %245 ], [ %226, %229 ], [ %234, %237 ], [ %221, %239 ]
  %250 = bitcast %"class.std::__1::__tree_node_base"** %249 to %"class.std::__1::__tree_node"**
  %251 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_node"* %251, null
  br i1 %252, label %253, label %277

253:                                              ; preds = %247
  %254 = call i8* @_Znwm(i64 32) #18, !noalias !6
  %255 = getelementptr inbounds i8, i8* %254, i64 28
  %256 = bitcast i8* %255 to i32*
  store i32 10, i32* %256, align 4, !noalias !6
  %257 = bitcast i8* %254 to %"class.std::__1::__tree_node_base"*
  %258 = getelementptr inbounds i8, i8* %254, i64 16
  %259 = bitcast i8* %258 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %248, %"class.std::__1::__tree_end_node"** %259, align 8
  %260 = bitcast %"class.std::__1::__tree_node_base"** %249 to i8**
  store i8* %254, i8** %260, align 8
  %261 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %212, i64 0, i32 0, i32 0
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %261, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %253
  %267 = ptrtoint %"class.std::__1::__tree_node_base"* %264 to i64
  %268 = bitcast %"class.std::__1::set.14"* %212 to i64*
  store i64 %267, i64* %268, align 8
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %249, align 8
  br label %270

270:                                              ; preds = %266, %253
  %271 = phi %"class.std::__1::__tree_node_base"* [ %257, %253 ], [ %269, %266 ]
  %272 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %273, %"class.std::__1::__tree_node_base"* %271) #17
  %274 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %275 = load i64, i64* %274, align 8
  %276 = add i64 %275, 1
  store i64 %276, i64* %274, align 8
  br label %277

277:                                              ; preds = %206, %247, %270, %62
  %278 = phi i32* [ %63, %62 ], [ %72, %270 ], [ %72, %247 ], [ %72, %206 ]
  %279 = load i32, i32* %278, align 8
  ret i32 %279
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder14makeStructTypeERKNSt3__16vectorIjNS1_9allocatorIjEEEEPKc(%"class.spv::Builder"*, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %8, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 30, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  %20 = ptrtoint i8* %8 to i64
  %21 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast i8* %8 to %"class.spv::Instruction"*
  br label %167

32:                                               ; preds = %167, %3
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #17
  store i32 30, i32* %6, align 4
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %35 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  %36 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %6, i32** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #17
  %38 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %34, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %39 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %38, 0
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 4
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to %"class.spv::Instruction"***
  %43 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 5
  %45 = bitcast %"struct.std::__1::__hash_node_base"* %44 to %"class.spv::Instruction"***
  %46 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %45, align 8
  %47 = icmp eq %"class.spv::Instruction"** %43, %46
  %48 = ptrtoint %"class.spv::Instruction"** %46 to i64
  br i1 %47, label %54, label %49

49:                                               ; preds = %32
  %50 = bitcast %"class.spv::Instruction"** %43 to i64*
  store i64 %20, i64* %50, align 8
  %51 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %43, i64 1
  %52 = ptrtoint %"class.spv::Instruction"** %51 to i64
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i64*
  store i64 %52, i64* %53, align 8
  br label %111

54:                                               ; preds = %32
  %55 = ptrtoint %"class.spv::Instruction"** %43 to i64
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i64*
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %55, %58
  %60 = ashr exact i64 %59, 3
  %61 = add nsw i64 %60, 1
  %62 = icmp ugt i64 %61, 2305843009213693951
  br i1 %62, label %63, label %65

63:                                               ; preds = %54
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %40 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %64) #20
  unreachable

65:                                               ; preds = %54
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %44 to i64*
  %67 = sub i64 %48, %58
  %68 = ashr exact i64 %67, 3
  %69 = icmp ult i64 %68, 1152921504606846975
  br i1 %69, label %70, label %78

70:                                               ; preds = %65
  %71 = ashr exact i64 %67, 2
  %72 = icmp ult i64 %71, %61
  %73 = select i1 %72, i64 %61, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = icmp ugt i64 %73, 2305843009213693951
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  call void @abort() #20
  unreachable

78:                                               ; preds = %75, %65
  %79 = phi i64 [ %73, %75 ], [ 2305843009213693951, %65 ]
  %80 = shl i64 %79, 3
  %81 = call i8* @_Znwm(i64 %80) #18
  %82 = bitcast i8* %81 to %"class.spv::Instruction"**
  br label %83

83:                                               ; preds = %78, %70
  %84 = phi i64 [ %79, %78 ], [ 0, %70 ]
  %85 = phi %"class.spv::Instruction"** [ %82, %78 ], [ null, %70 ]
  %86 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %85, i64 %60
  %87 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %85, i64 %84
  %88 = ptrtoint %"class.spv::Instruction"** %87 to i64
  %89 = bitcast %"class.spv::Instruction"** %86 to i64*
  store i64 %20, i64* %89, align 8
  %90 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %86, i64 1
  %91 = ptrtoint %"class.spv::Instruction"** %90 to i64
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %40 to %"class.spv::Instruction"***
  %93 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %92, align 8
  %94 = load i64, i64* %56, align 8
  %95 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 3
  %98 = sub nsw i64 0, %97
  %99 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %86, i64 %98
  %100 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %101 = icmp sgt i64 %96, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %83
  %103 = bitcast %"class.spv::Instruction"** %99 to i8*
  %104 = bitcast %"class.spv::Instruction"** %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 %96, i1 false) #17
  %105 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %92, align 8
  br label %106

106:                                              ; preds = %102, %83
  %107 = phi %"class.spv::Instruction"** [ %93, %83 ], [ %105, %102 ]
  store i64 %100, i64* %57, align 8
  store i64 %91, i64* %56, align 8
  store i64 %88, i64* %66, align 8
  %108 = icmp eq %"class.spv::Instruction"** %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.spv::Instruction"** %107 to i8*
  call void @_ZdlPv(i8* %110) #18
  br label %111

111:                                              ; preds = %49, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #17
  %112 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #17
  %113 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %20, i64* %113, align 8
  %114 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %115 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %114, align 8
  %116 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %117 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %116, align 8
  %118 = icmp ult %"class.std::__1::unique_ptr"* %115, %117
  br i1 %118, label %119, label %125

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %120, align 8
  %121 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %20, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %115, i64 1
  %123 = ptrtoint %"class.std::__1::unique_ptr"* %122 to i64
  %124 = bitcast %"class.std::__1::unique_ptr"** %114 to i64*
  store i64 %123, i64* %124, align 8
  br label %127

125:                                              ; preds = %111
  %126 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %126, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %127

127:                                              ; preds = %119, %125
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %128, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %128, align 8
  %130 = icmp eq %"class.spv::Instruction"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.spv::Instruction"* %129 to void (%"class.spv::Instruction"*)***
  %133 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %133, i64 1
  %135 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %134, align 8
  call void %135(%"class.spv::Instruction"* nonnull %129) #17
  br label %136

136:                                              ; preds = %127, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #17
  %137 = load i32, i32* %14, align 8
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %140 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %141 = bitcast %"class.spv::Instruction"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.std::__1::vector.55"* %139 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %142, %144
  %146 = ashr exact i64 %145, 3
  %147 = icmp ugt i64 %146, %138
  %148 = inttoptr i64 %144 to %"class.spv::Instruction"**
  br i1 %147, label %161, label %149

149:                                              ; preds = %136
  %150 = add i32 %137, 16
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %146, %151
  br i1 %152, label %153, label %157

153:                                              ; preds = %149
  %154 = sub nsw i64 %151, %146
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %139, i64 %154) #17
  %155 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %139, i64 0, i32 0, i32 0
  %156 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %155, align 8
  br label %161

157:                                              ; preds = %149
  %158 = icmp ugt i64 %146, %151
  br i1 %158, label %159, label %161

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %148, i64 %151
  store %"class.spv::Instruction"** %160, %"class.spv::Instruction"*** %140, align 8
  br label %161

161:                                              ; preds = %136, %153, %157, %159
  %162 = phi %"class.spv::Instruction"** [ %148, %159 ], [ %148, %157 ], [ %156, %153 ], [ %148, %136 ]
  %163 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %162, i64 %138
  %164 = bitcast %"class.spv::Instruction"** %163 to i8**
  store i8* %8, i8** %164, align 8
  %165 = load i32, i32* %14, align 8
  call void @_ZN3spv7Builder7addNameEjPKc(%"class.spv::Builder"* %0, i32 %165, i8* %2)
  %166 = load i32, i32* %14, align 8
  ret i32 %166

167:                                              ; preds = %30, %167
  %168 = phi i64 [ %25, %30 ], [ %175, %167 ]
  %169 = phi i64 [ 0, %30 ], [ %173, %167 ]
  %170 = inttoptr i64 %168 to i32*
  %171 = getelementptr inbounds i32, i32* %170, i64 %169
  %172 = load i32, i32* %171, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %31, i32 %172)
  %173 = add nuw nsw i64 %169, 1
  %174 = load i64, i64* %22, align 8
  %175 = load i64, i64* %24, align 8
  %176 = sub i64 %174, %175
  %177 = shl i64 %176, 30
  %178 = ashr i64 %177, 32
  %179 = icmp slt i64 %173, %178
  br i1 %179, label %167, label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder7addNameEjPKc(%"class.spv::Builder"*, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 5, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %1)
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  store i32 -1431655766, i32* %4, align 4
  br label %17

17:                                               ; preds = %28, %3
  %18 = phi i8* [ %2, %3 ], [ %21, %28 ]
  %19 = phi i8* [ %16, %3 ], [ %29, %28 ]
  %20 = phi i32 [ 0, %3 ], [ %30, %28 ]
  %21 = getelementptr inbounds i8, i8* %18, i64 1
  %22 = load i8, i8* %18, align 1
  %23 = getelementptr inbounds i8, i8* %19, i64 1
  store i8 %22, i8* %19, align 1
  %24 = add nsw i32 %20, 1
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = load i32, i32* %4, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %27) #17
  br label %28

28:                                               ; preds = %26, %17
  %29 = phi i8* [ %16, %26 ], [ %23, %17 ]
  %30 = phi i32 [ 0, %26 ], [ %24, %17 ]
  %31 = icmp eq i8 %22, 0
  br i1 %31, label %32, label %17

32:                                               ; preds = %28
  %33 = icmp sgt i32 %30, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %32
  %35 = icmp slt i32 %30, 4
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = sub nuw nsw i32 3, %30
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %39, i1 false) #17
  br label %40

40:                                               ; preds = %36, %34
  %41 = load i32, i32* %4, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %41) #17
  br label %42

42:                                               ; preds = %32, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  %43 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17
  %44 = ptrtoint i8* %6 to i64
  %45 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27, i32 0, i32 1
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27, i32 0, i32 2, i32 0, i32 0
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %48, align 8
  %50 = icmp ult %"class.std::__1::unique_ptr"* %47, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %52, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 %44, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 1
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %54 to i64
  %56 = bitcast %"class.std::__1::unique_ptr"** %46 to i64*
  store i64 %55, i64* %56, align 8
  br label %59

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %58, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %59

59:                                               ; preds = %51, %57
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %60, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %60, align 8
  %62 = icmp eq %"class.spv::Instruction"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.spv::Instruction"* %61 to void (%"class.spv::Instruction"*)***
  %65 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %65, i64 1
  %67 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %66, align 8
  call void %67(%"class.spv::Instruction"* nonnull %61) #17
  br label %68

68:                                               ; preds = %59, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder20makeStructResultTypeEjj(%"class.spv::Builder"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::vector.26", align 8
  %11 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17
  store i32 30, i32* %8, align 4
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %13 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #17
  %16 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %17 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %16, 0
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 4
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17
  br i1 %27, label %28, label %77

28:                                               ; preds = %3
  %29 = bitcast i32* %9 to i8*
  %30 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  %31 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  br label %33

33:                                               ; preds = %28, %60
  %34 = phi i64 [ 0, %28 ], [ %61, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #17
  store i32 30, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  store i32* %9, i32** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #17
  %35 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %36 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %35, 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to %"class.spv::Instruction"***
  %39 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %38, align 8
  %40 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %39, i64 %34
  %41 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #17
  %42 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %41, i64 0, i32 4
  %43 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %41, i64 0, i32 4, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.26"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = lshr exact i64 %48, 2
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %50, 2
  %52 = inttoptr i64 %47 to i32*
  br i1 %51, label %53, label %60

53:                                               ; preds = %33
  %54 = load i32, i32* %52, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = getelementptr inbounds i32, i32* %52, i64 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %2
  br i1 %59, label %74, label %60

60:                                               ; preds = %56, %53, %33
  %61 = add nuw nsw i64 %34, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17
  store i32 30, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  store i32* %8, i32** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #17
  %62 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %63 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %62, 0
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 4
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = shl i64 %70, 29
  %72 = ashr i64 %71, 32
  %73 = icmp slt i64 %61, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17
  br i1 %73, label %33, label %77

74:                                               ; preds = %56
  %75 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %41, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  br label %105

77:                                               ; preds = %60, %3
  %78 = bitcast %"class.std::__1::vector.26"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #17
  %79 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast i32** %79 to i64*
  %82 = bitcast %"class.std::__1::vector.26"* %10 to i64*
  %83 = bitcast i32** %80 to i64*
  %84 = call i8* @_Znwm(i64 4) #18
  %85 = bitcast i8* %84 to i32*
  %86 = getelementptr inbounds i8, i8* %84, i64 4
  %87 = ptrtoint i8* %86 to i64
  store i32 %1, i32* %85, align 4
  %88 = ptrtoint i8* %84 to i64
  store i64 %88, i64* %82, align 8
  store i64 %87, i64* %81, align 8
  store i64 %87, i64* %83, align 8
  %89 = bitcast %"class.std::__1::vector.26"* %10 to i64*
  %90 = call i8* @_Znwm(i64 8) #18
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds i8, i8* %90, i64 4
  %93 = bitcast i8* %92 to i32*
  store i32 %2, i32* %93, align 4
  %94 = insertelement <2 x i8*> undef, i8* %90, i32 0
  %95 = shufflevector <2 x i8*> %94, <2 x i8*> undef, <2 x i32> zeroinitializer
  %96 = getelementptr i8, <2 x i8*> %95, <2 x i64> <i64 8, i64 8>
  %97 = ptrtoint <2 x i8*> %96 to <2 x i64>
  %98 = ptrtoint i8* %90 to i64
  %99 = bitcast i8* %84 to i32*
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* %91, align 4
  store i64 %98, i64* %89, align 8
  %101 = bitcast i32** %79 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8
  call void @_ZdlPv(i8* nonnull %84) #18
  %102 = call i32 @_ZN3spv7Builder14makeStructTypeERKNSt3__16vectorIjNS1_9allocatorIjEEEEPKc(%"class.spv::Builder"* %0, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  %103 = ptrtoint i8* %90 to i64
  %104 = bitcast i32** %79 to i64*
  store i64 %103, i64* %104, align 8
  call void @_ZdlPv(i8* %90) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #17
  br label %105

105:                                              ; preds = %74, %77
  %106 = phi i32 [ %102, %77 ], [ %76, %74 ]
  ret i32 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 23, i32* %10, align 4
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %16 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %19 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %20 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr exact i64 %27, 3
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %30, label %31, label %69

31:                                               ; preds = %3
  %32 = bitcast i32* %11 to i8*
  %33 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  %34 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  br label %36

36:                                               ; preds = %31, %53
  %37 = phi i64 [ 0, %31 ], [ %54, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #17
  store i32 23, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  store i32* %11, i32** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #17
  %38 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %39 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %38, 0
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to %"class.spv::Instruction"***
  %42 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %41, align 8
  %43 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %42, i64 %37
  %44 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #17
  %45 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %44, i64 0, i32 4, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %1
  br i1 %48, label %49, label %53

49:                                               ; preds = %36
  %50 = getelementptr inbounds i32, i32* %46, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %2
  br i1 %52, label %67, label %53

53:                                               ; preds = %36, %49
  %54 = add nuw nsw i64 %37, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 23, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store i32* %10, i32** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %55 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %56 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %55, 0
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 4
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = shl i64 %63, 29
  %65 = ashr i64 %64, 32
  %66 = icmp slt i64 %54, %65
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %66, label %36, label %69

67:                                               ; preds = %49
  %68 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %44, i64 0, i32 1
  br label %215

69:                                               ; preds = %53, %3
  %70 = call i8* @_Znwm(i64 80) #18
  %71 = bitcast i8* %70 to %"class.spv::Instruction"*
  %72 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds i8, i8* %70, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 %74, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %70, i64 12
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %70, i64 16
  %81 = bitcast i8* %80 to i32*
  store i32 23, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %70, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 56, i1 false) #17
  %83 = ptrtoint i8* %70 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %71, i32 %1)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %71, i32 %2)
  %84 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #17
  store i32 23, i32* %12, align 4
  %85 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #17
  %88 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %89 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %88, 0
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #17
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 4
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %91 to %"class.spv::Instruction"***
  %93 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %89, i64 5
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.spv::Instruction"***
  %96 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %95, align 8
  %97 = icmp eq %"class.spv::Instruction"** %93, %96
  %98 = ptrtoint %"class.spv::Instruction"** %96 to i64
  br i1 %97, label %104, label %99

99:                                               ; preds = %69
  %100 = bitcast %"class.spv::Instruction"** %93 to i64*
  store i64 %83, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %93, i64 1
  %102 = ptrtoint %"class.spv::Instruction"** %101 to i64
  %103 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  store i64 %102, i64* %103, align 8
  br label %161

104:                                              ; preds = %69
  %105 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i64*
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %105, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %90 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #20
  unreachable

115:                                              ; preds = %104
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i64*
  %117 = sub i64 %98, %108
  %118 = ashr exact i64 %117, 3
  %119 = icmp ult i64 %118, 1152921504606846975
  br i1 %119, label %120, label %128

120:                                              ; preds = %115
  %121 = ashr exact i64 %117, 2
  %122 = icmp ult i64 %121, %111
  %123 = select i1 %122, i64 %111, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %120
  %126 = icmp ugt i64 %123, 2305843009213693951
  br i1 %126, label %127, label %128

127:                                              ; preds = %125
  call void @abort() #20
  unreachable

128:                                              ; preds = %125, %115
  %129 = phi i64 [ %123, %125 ], [ 2305843009213693951, %115 ]
  %130 = shl i64 %129, 3
  %131 = call i8* @_Znwm(i64 %130) #18
  %132 = bitcast i8* %131 to %"class.spv::Instruction"**
  br label %133

133:                                              ; preds = %128, %120
  %134 = phi i64 [ %129, %128 ], [ 0, %120 ]
  %135 = phi %"class.spv::Instruction"** [ %132, %128 ], [ null, %120 ]
  %136 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %135, i64 %110
  %137 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %135, i64 %134
  %138 = ptrtoint %"class.spv::Instruction"** %137 to i64
  %139 = bitcast %"class.spv::Instruction"** %136 to i64*
  store i64 %83, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %136, i64 1
  %141 = ptrtoint %"class.spv::Instruction"** %140 to i64
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %90 to %"class.spv::Instruction"***
  %143 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %142, align 8
  %144 = load i64, i64* %106, align 8
  %145 = ptrtoint %"class.spv::Instruction"** %143 to i64
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 3
  %148 = sub nsw i64 0, %147
  %149 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %136, i64 %148
  %150 = ptrtoint %"class.spv::Instruction"** %149 to i64
  %151 = icmp sgt i64 %146, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %133
  %153 = bitcast %"class.spv::Instruction"** %149 to i8*
  %154 = bitcast %"class.spv::Instruction"** %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %146, i1 false) #17
  %155 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %142, align 8
  br label %156

156:                                              ; preds = %152, %133
  %157 = phi %"class.spv::Instruction"** [ %143, %133 ], [ %155, %152 ]
  store i64 %150, i64* %107, align 8
  store i64 %141, i64* %106, align 8
  store i64 %138, i64* %116, align 8
  %158 = icmp eq %"class.spv::Instruction"** %157, null
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.spv::Instruction"** %157 to i8*
  call void @_ZdlPv(i8* %160) #18
  br label %161

161:                                              ; preds = %99, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #17
  %162 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #17
  %163 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %83, i64* %163, align 8
  %164 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %165 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %164, align 8
  %166 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %167 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %166, align 8
  %168 = icmp ult %"class.std::__1::unique_ptr"* %165, %167
  br i1 %168, label %169, label %175

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %170, align 8
  %171 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  store i64 %83, i64* %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 1
  %173 = ptrtoint %"class.std::__1::unique_ptr"* %172 to i64
  %174 = bitcast %"class.std::__1::unique_ptr"** %164 to i64*
  store i64 %173, i64* %174, align 8
  br label %177

175:                                              ; preds = %161
  %176 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %176, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %13) #17
  br label %177

177:                                              ; preds = %169, %175
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %179 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %178, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %178, align 8
  %180 = icmp eq %"class.spv::Instruction"* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = bitcast %"class.spv::Instruction"* %179 to void (%"class.spv::Instruction"*)***
  %183 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %183, i64 1
  %185 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %184, align 8
  call void %185(%"class.spv::Instruction"* nonnull %179) #17
  br label %186

186:                                              ; preds = %177, %181
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #17
  %187 = load i32, i32* %77, align 8
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %190 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %191 = bitcast %"class.spv::Instruction"*** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector.55"* %189 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = ashr exact i64 %195, 3
  %197 = icmp ugt i64 %196, %188
  %198 = inttoptr i64 %194 to %"class.spv::Instruction"**
  br i1 %197, label %211, label %199

199:                                              ; preds = %186
  %200 = add i32 %187, 16
  %201 = zext i32 %200 to i64
  %202 = icmp ult i64 %196, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %199
  %204 = sub nsw i64 %201, %196
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %189, i64 %204) #17
  %205 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %189, i64 0, i32 0, i32 0
  %206 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %205, align 8
  br label %211

207:                                              ; preds = %199
  %208 = icmp ugt i64 %196, %201
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %198, i64 %201
  store %"class.spv::Instruction"** %210, %"class.spv::Instruction"*** %190, align 8
  br label %211

211:                                              ; preds = %186, %203, %207, %209
  %212 = phi %"class.spv::Instruction"** [ %198, %209 ], [ %198, %207 ], [ %206, %203 ], [ %198, %186 ]
  %213 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %212, i64 %188
  %214 = bitcast %"class.spv::Instruction"** %213 to i8**
  store i8* %70, i8** %214, align 8
  br label %215

215:                                              ; preds = %67, %211
  %216 = phi i32* [ %77, %211 ], [ %68, %67 ]
  %217 = load i32, i32* %216, align 8
  ret i32 %217
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder14makeMatrixTypeEjii(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca %"class.std::__1::tuple.267", align 8
  %10 = alloca %"class.std::__1::tuple.219", align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %1, i32 %3)
  %16 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  store i32 24, i32* %11, align 4
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %18 = bitcast %"class.std::__1::tuple.267"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #17
  %21 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %22 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %21, 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 4
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = lshr exact i64 %29, 3
  %31 = trunc i64 %30 to i32
  %32 = icmp sgt i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  br i1 %32, label %33, label %71

33:                                               ; preds = %4
  %34 = bitcast i32* %12 to i8*
  %35 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  %36 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  br label %38

38:                                               ; preds = %33, %55
  %39 = phi i64 [ 0, %33 ], [ %56, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #17
  store i32 24, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store i32* %12, i32** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #17
  %40 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %41 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %40, 0
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %41, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %43 = bitcast %"struct.std::__1::__hash_node_base"* %42 to %"class.spv::Instruction"***
  %44 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, i64 %39
  %46 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #17
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %46, i64 0, i32 4, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %15
  br i1 %50, label %51, label %55

51:                                               ; preds = %38
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %69, label %55

55:                                               ; preds = %38, %51
  %56 = add nuw nsw i64 %39, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  store i32 24, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  store i32* %11, i32** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #17
  %57 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %58 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %57, 0
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 4
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = shl i64 %65, 29
  %67 = ashr i64 %66, 32
  %68 = icmp slt i64 %56, %67
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  br i1 %68, label %38, label %71

69:                                               ; preds = %51
  %70 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %46, i64 0, i32 1
  br label %217

71:                                               ; preds = %55, %4
  %72 = call i8* @_Znwm(i64 80) #18
  %73 = bitcast i8* %72 to %"class.spv::Instruction"*
  %74 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 8
  %77 = bitcast i8* %72 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds i8, i8* %72, i64 8
  %79 = bitcast i8* %78 to i32*
  store i32 %76, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %72, i64 12
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %72, i64 16
  %83 = bitcast i8* %82 to i32*
  store i32 24, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %72, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 56, i1 false) #17
  %85 = ptrtoint i8* %72 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %73, i32 %15)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %73, i32 %2)
  %86 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #17
  store i32 24, i32* %13, align 4
  %87 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #17
  %88 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %13, i32** %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %89) #17
  %90 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %91 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %90, 0
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %91, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %89) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #17
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %91, i64 4
  %94 = bitcast %"struct.std::__1::__hash_node_base"* %93 to %"class.spv::Instruction"***
  %95 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %91, i64 5
  %97 = bitcast %"struct.std::__1::__hash_node_base"* %96 to %"class.spv::Instruction"***
  %98 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %97, align 8
  %99 = icmp eq %"class.spv::Instruction"** %95, %98
  %100 = ptrtoint %"class.spv::Instruction"** %98 to i64
  br i1 %99, label %106, label %101

101:                                              ; preds = %71
  %102 = bitcast %"class.spv::Instruction"** %95 to i64*
  store i64 %85, i64* %102, align 8
  %103 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %95, i64 1
  %104 = ptrtoint %"class.spv::Instruction"** %103 to i64
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %93 to i64*
  store i64 %104, i64* %105, align 8
  br label %163

106:                                              ; preds = %71
  %107 = ptrtoint %"class.spv::Instruction"** %95 to i64
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %93 to i64*
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %107, %110
  %112 = ashr exact i64 %111, 3
  %113 = add nsw i64 %112, 1
  %114 = icmp ugt i64 %113, 2305843009213693951
  br i1 %114, label %115, label %117

115:                                              ; preds = %106
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %92 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #20
  unreachable

117:                                              ; preds = %106
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %96 to i64*
  %119 = sub i64 %100, %110
  %120 = ashr exact i64 %119, 3
  %121 = icmp ult i64 %120, 1152921504606846975
  br i1 %121, label %122, label %130

122:                                              ; preds = %117
  %123 = ashr exact i64 %119, 2
  %124 = icmp ult i64 %123, %113
  %125 = select i1 %124, i64 %113, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122
  %128 = icmp ugt i64 %125, 2305843009213693951
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  call void @abort() #20
  unreachable

130:                                              ; preds = %127, %117
  %131 = phi i64 [ %125, %127 ], [ 2305843009213693951, %117 ]
  %132 = shl i64 %131, 3
  %133 = call i8* @_Znwm(i64 %132) #18
  %134 = bitcast i8* %133 to %"class.spv::Instruction"**
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i64 [ %131, %130 ], [ 0, %122 ]
  %137 = phi %"class.spv::Instruction"** [ %134, %130 ], [ null, %122 ]
  %138 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %137, i64 %112
  %139 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %137, i64 %136
  %140 = ptrtoint %"class.spv::Instruction"** %139 to i64
  %141 = bitcast %"class.spv::Instruction"** %138 to i64*
  store i64 %85, i64* %141, align 8
  %142 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %138, i64 1
  %143 = ptrtoint %"class.spv::Instruction"** %142 to i64
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %92 to %"class.spv::Instruction"***
  %145 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %144, align 8
  %146 = load i64, i64* %108, align 8
  %147 = ptrtoint %"class.spv::Instruction"** %145 to i64
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 3
  %150 = sub nsw i64 0, %149
  %151 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %138, i64 %150
  %152 = ptrtoint %"class.spv::Instruction"** %151 to i64
  %153 = icmp sgt i64 %148, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %135
  %155 = bitcast %"class.spv::Instruction"** %151 to i8*
  %156 = bitcast %"class.spv::Instruction"** %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 %148, i1 false) #17
  %157 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %144, align 8
  br label %158

158:                                              ; preds = %154, %135
  %159 = phi %"class.spv::Instruction"** [ %145, %135 ], [ %157, %154 ]
  store i64 %152, i64* %109, align 8
  store i64 %143, i64* %108, align 8
  store i64 %140, i64* %118, align 8
  %160 = icmp eq %"class.spv::Instruction"** %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = bitcast %"class.spv::Instruction"** %159 to i8*
  call void @_ZdlPv(i8* %162) #18
  br label %163

163:                                              ; preds = %101, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #17
  %164 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #17
  %165 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %85, i64* %165, align 8
  %166 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %167 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %166, align 8
  %168 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %169 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %168, align 8
  %170 = icmp ult %"class.std::__1::unique_ptr"* %167, %169
  br i1 %170, label %171, label %177

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %172, align 8
  %173 = bitcast %"class.std::__1::unique_ptr"* %167 to i64*
  store i64 %85, i64* %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %167, i64 1
  %175 = ptrtoint %"class.std::__1::unique_ptr"* %174 to i64
  %176 = bitcast %"class.std::__1::unique_ptr"** %166 to i64*
  store i64 %175, i64* %176, align 8
  br label %179

177:                                              ; preds = %163
  %178 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %178, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %14) #17
  br label %179

179:                                              ; preds = %171, %177
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %180, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %180, align 8
  %182 = icmp eq %"class.spv::Instruction"* %181, null
  br i1 %182, label %188, label %183

183:                                              ; preds = %179
  %184 = bitcast %"class.spv::Instruction"* %181 to void (%"class.spv::Instruction"*)***
  %185 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %185, i64 1
  %187 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %186, align 8
  call void %187(%"class.spv::Instruction"* nonnull %181) #17
  br label %188

188:                                              ; preds = %179, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #17
  %189 = load i32, i32* %79, align 8
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %192 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %193 = bitcast %"class.spv::Instruction"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.std::__1::vector.55"* %191 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %194, %196
  %198 = ashr exact i64 %197, 3
  %199 = icmp ugt i64 %198, %190
  %200 = inttoptr i64 %196 to %"class.spv::Instruction"**
  br i1 %199, label %213, label %201

201:                                              ; preds = %188
  %202 = add i32 %189, 16
  %203 = zext i32 %202 to i64
  %204 = icmp ult i64 %198, %203
  br i1 %204, label %205, label %209

205:                                              ; preds = %201
  %206 = sub nsw i64 %203, %198
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %191, i64 %206) #17
  %207 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %191, i64 0, i32 0, i32 0
  %208 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %207, align 8
  br label %213

209:                                              ; preds = %201
  %210 = icmp ugt i64 %198, %203
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %200, i64 %203
  store %"class.spv::Instruction"** %212, %"class.spv::Instruction"*** %192, align 8
  br label %213

213:                                              ; preds = %188, %205, %209, %211
  %214 = phi %"class.spv::Instruction"** [ %200, %211 ], [ %200, %209 ], [ %208, %205 ], [ %200, %188 ]
  %215 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %214, i64 %190
  %216 = bitcast %"class.spv::Instruction"** %215 to i8**
  store i8* %72, i8** %216, align 8
  br label %217

217:                                              ; preds = %69, %213
  %218 = phi i32* [ %79, %213 ], [ %70, %69 ]
  %219 = load i32, i32* %218, align 8
  ret i32 %219
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder25makeCooperativeMatrixTypeEjjjj(%"class.spv::Builder"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca %"class.std::__1::tuple.267", align 8
  %11 = alloca %"class.std::__1::tuple.219", align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::__1::unique_ptr", align 8
  %16 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  store i32 5358, i32* %12, align 4
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %18 = bitcast %"class.std::__1::tuple.267"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %10, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #17
  %21 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %11) #17
  %22 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %21, 0
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 4
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = lshr exact i64 %29, 3
  %31 = trunc i64 %30 to i32
  %32 = icmp sgt i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  br i1 %32, label %33, label %79

33:                                               ; preds = %5
  %34 = bitcast i32* %13 to i8*
  %35 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  %36 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  br label %38

38:                                               ; preds = %33, %63
  %39 = phi i64 [ 0, %33 ], [ %64, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #17
  store i32 5358, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store i32* %13, i32** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #17
  %40 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %41 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %40, 0
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %41, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %43 = bitcast %"struct.std::__1::__hash_node_base"* %42 to %"class.spv::Instruction"***
  %44 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, i64 %39
  %46 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #17
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %46, i64 0, i32 4, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %51, label %63

51:                                               ; preds = %38
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %2
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = getelementptr inbounds i32, i32* %48, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %3
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds i32, i32* %48, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %4
  br i1 %62, label %77, label %63

63:                                               ; preds = %38, %51, %55, %59
  %64 = add nuw nsw i64 %39, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #17
  store i32 5358, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  store i32* %12, i32** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #17
  %65 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %11) #17
  %66 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %65, 0
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 4
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = shl i64 %73, 29
  %75 = ashr i64 %74, 32
  %76 = icmp slt i64 %64, %75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #17
  br i1 %76, label %38, label %79

77:                                               ; preds = %59
  %78 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %46, i64 0, i32 1
  br label %225

79:                                               ; preds = %63, %5
  %80 = call i8* @_Znwm(i64 80) #18
  %81 = bitcast i8* %80 to %"class.spv::Instruction"*
  %82 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 8
  %85 = bitcast i8* %80 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %80, i64 8
  %87 = bitcast i8* %86 to i32*
  store i32 %84, i32* %87, align 8
  %88 = getelementptr inbounds i8, i8* %80, i64 12
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds i8, i8* %80, i64 16
  %91 = bitcast i8* %90 to i32*
  store i32 5358, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %80, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 56, i1 false) #17
  %93 = ptrtoint i8* %80 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %81, i32 %1)
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %81, i32 %2)
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %81, i32 %3)
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %81, i32 %4)
  %94 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #17
  store i32 5358, i32* %14, align 4
  %95 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #17
  %96 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %14, i32** %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %97) #17
  %98 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %17, i32* nonnull dereferenceable(4) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %99 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %97) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #17
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 4
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.spv::Instruction"***
  %103 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %99, i64 5
  %105 = bitcast %"struct.std::__1::__hash_node_base"* %104 to %"class.spv::Instruction"***
  %106 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %105, align 8
  %107 = icmp eq %"class.spv::Instruction"** %103, %106
  %108 = ptrtoint %"class.spv::Instruction"** %106 to i64
  br i1 %107, label %114, label %109

109:                                              ; preds = %79
  %110 = bitcast %"class.spv::Instruction"** %103 to i64*
  store i64 %93, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %103, i64 1
  %112 = ptrtoint %"class.spv::Instruction"** %111 to i64
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  store i64 %112, i64* %113, align 8
  br label %171

114:                                              ; preds = %79
  %115 = ptrtoint %"class.spv::Instruction"** %103 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i64*
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %115, %118
  %120 = ashr exact i64 %119, 3
  %121 = add nsw i64 %120, 1
  %122 = icmp ugt i64 %121, 2305843009213693951
  br i1 %122, label %123, label %125

123:                                              ; preds = %114
  %124 = bitcast %"struct.std::__1::__hash_node_base"* %100 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #20
  unreachable

125:                                              ; preds = %114
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %104 to i64*
  %127 = sub i64 %108, %118
  %128 = ashr exact i64 %127, 3
  %129 = icmp ult i64 %128, 1152921504606846975
  br i1 %129, label %130, label %138

130:                                              ; preds = %125
  %131 = ashr exact i64 %127, 2
  %132 = icmp ult i64 %131, %121
  %133 = select i1 %132, i64 %121, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %130
  %136 = icmp ugt i64 %133, 2305843009213693951
  br i1 %136, label %137, label %138

137:                                              ; preds = %135
  call void @abort() #20
  unreachable

138:                                              ; preds = %135, %125
  %139 = phi i64 [ %133, %135 ], [ 2305843009213693951, %125 ]
  %140 = shl i64 %139, 3
  %141 = call i8* @_Znwm(i64 %140) #18
  %142 = bitcast i8* %141 to %"class.spv::Instruction"**
  br label %143

143:                                              ; preds = %138, %130
  %144 = phi i64 [ %139, %138 ], [ 0, %130 ]
  %145 = phi %"class.spv::Instruction"** [ %142, %138 ], [ null, %130 ]
  %146 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %145, i64 %120
  %147 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %145, i64 %144
  %148 = ptrtoint %"class.spv::Instruction"** %147 to i64
  %149 = bitcast %"class.spv::Instruction"** %146 to i64*
  store i64 %93, i64* %149, align 8
  %150 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 1
  %151 = ptrtoint %"class.spv::Instruction"** %150 to i64
  %152 = bitcast %"struct.std::__1::__hash_node_base"* %100 to %"class.spv::Instruction"***
  %153 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %152, align 8
  %154 = load i64, i64* %116, align 8
  %155 = ptrtoint %"class.spv::Instruction"** %153 to i64
  %156 = sub i64 %154, %155
  %157 = ashr exact i64 %156, 3
  %158 = sub nsw i64 0, %157
  %159 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 %158
  %160 = ptrtoint %"class.spv::Instruction"** %159 to i64
  %161 = icmp sgt i64 %156, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %143
  %163 = bitcast %"class.spv::Instruction"** %159 to i8*
  %164 = bitcast %"class.spv::Instruction"** %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 %156, i1 false) #17
  %165 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %152, align 8
  br label %166

166:                                              ; preds = %162, %143
  %167 = phi %"class.spv::Instruction"** [ %153, %143 ], [ %165, %162 ]
  store i64 %160, i64* %117, align 8
  store i64 %151, i64* %116, align 8
  store i64 %148, i64* %126, align 8
  %168 = icmp eq %"class.spv::Instruction"** %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %166
  %170 = bitcast %"class.spv::Instruction"** %167 to i8*
  call void @_ZdlPv(i8* %170) #18
  br label %171

171:                                              ; preds = %109, %166, %169
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #17
  %172 = bitcast %"class.std::__1::unique_ptr"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #17
  %173 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %93, i64* %173, align 8
  %174 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %175 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %174, align 8
  %176 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %177 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %176, align 8
  %178 = icmp ult %"class.std::__1::unique_ptr"* %175, %177
  br i1 %178, label %179, label %185

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %180, align 8
  %181 = bitcast %"class.std::__1::unique_ptr"* %175 to i64*
  store i64 %93, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %175, i64 1
  %183 = ptrtoint %"class.std::__1::unique_ptr"* %182 to i64
  %184 = bitcast %"class.std::__1::unique_ptr"** %174 to i64*
  store i64 %183, i64* %184, align 8
  br label %187

185:                                              ; preds = %171
  %186 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %186, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %15) #17
  br label %187

187:                                              ; preds = %179, %185
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %188, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %188, align 8
  %190 = icmp eq %"class.spv::Instruction"* %189, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %187
  %192 = bitcast %"class.spv::Instruction"* %189 to void (%"class.spv::Instruction"*)***
  %193 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %193, i64 1
  %195 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %194, align 8
  call void %195(%"class.spv::Instruction"* nonnull %189) #17
  br label %196

196:                                              ; preds = %187, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #17
  %197 = load i32, i32* %87, align 8
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %200 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %201 = bitcast %"class.spv::Instruction"*** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.std::__1::vector.55"* %199 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %202, %204
  %206 = ashr exact i64 %205, 3
  %207 = icmp ugt i64 %206, %198
  %208 = inttoptr i64 %204 to %"class.spv::Instruction"**
  br i1 %207, label %221, label %209

209:                                              ; preds = %196
  %210 = add i32 %197, 16
  %211 = zext i32 %210 to i64
  %212 = icmp ult i64 %206, %211
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = sub nsw i64 %211, %206
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %199, i64 %214) #17
  %215 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %199, i64 0, i32 0, i32 0
  %216 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %215, align 8
  br label %221

217:                                              ; preds = %209
  %218 = icmp ugt i64 %206, %211
  br i1 %218, label %219, label %221

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %208, i64 %211
  store %"class.spv::Instruction"** %220, %"class.spv::Instruction"*** %200, align 8
  br label %221

221:                                              ; preds = %196, %213, %217, %219
  %222 = phi %"class.spv::Instruction"** [ %208, %219 ], [ %208, %217 ], [ %216, %213 ], [ %208, %196 ]
  %223 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %222, i64 %198
  %224 = bitcast %"class.spv::Instruction"** %223 to i8**
  store i8* %80, i8** %224, align 8
  br label %225

225:                                              ; preds = %77, %221
  %226 = phi i32* [ %87, %221 ], [ %78, %77 ]
  %227 = load i32, i32* %226, align 8
  ret i32 %227
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder13makeArrayTypeEjji(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca %"class.std::__1::tuple.267", align 8
  %10 = alloca %"class.std::__1::tuple.219", align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = icmp eq i32 %3, 0
  br i1 %15, label %16, label %72

16:                                               ; preds = %4
  %17 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #17
  store i32 28, i32* %11, align 4
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %19 = bitcast %"class.std::__1::tuple.267"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #17
  %22 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %23 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %22, 0
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 4
  %26 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = lshr exact i64 %30, 3
  %32 = trunc i64 %31 to i32
  %33 = icmp sgt i32 %32, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #17
  br i1 %33, label %34, label %72

34:                                               ; preds = %16
  %35 = bitcast i32* %12 to i8*
  %36 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  %37 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  br label %39

39:                                               ; preds = %34, %56
  %40 = phi i64 [ 0, %34 ], [ %57, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #17
  store i32 28, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  store i32* %12, i32** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #17
  %41 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %42 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %41, 0
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  %44 = bitcast %"struct.std::__1::__hash_node_base"* %43 to %"class.spv::Instruction"***
  %45 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, i64 %40
  %47 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #17
  %48 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %47, i64 0, i32 4, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %52, label %56

52:                                               ; preds = %39
  %53 = getelementptr inbounds i32, i32* %49, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %2
  br i1 %55, label %70, label %56

56:                                               ; preds = %39, %52
  %57 = add nuw nsw i64 %40, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #17
  store i32 28, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  store i32* %11, i32** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #17
  %58 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %18, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %59 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %58, 0
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 4
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = shl i64 %66, 29
  %68 = ashr i64 %67, 32
  %69 = icmp slt i64 %57, %68
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #17
  br i1 %69, label %39, label %72

70:                                               ; preds = %52
  %71 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %47, i64 0, i32 1
  br label %219

72:                                               ; preds = %56, %16, %4
  %73 = call i8* @_Znwm(i64 80) #18
  %74 = bitcast i8* %73 to %"class.spv::Instruction"*
  %75 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 8
  %78 = bitcast i8* %73 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds i8, i8* %73, i64 8
  %80 = bitcast i8* %79 to i32*
  store i32 %77, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %73, i64 12
  %82 = bitcast i8* %81 to i32*
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds i8, i8* %73, i64 16
  %84 = bitcast i8* %83 to i32*
  store i32 28, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %73, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 56, i1 false) #17
  %86 = ptrtoint i8* %73 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %74, i32 %1)
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %74, i32 %2)
  %87 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #17
  store i32 28, i32* %13, align 4
  %88 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %89 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %13, i32** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %91) #17
  %92 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %88, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %93 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %92, 0
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 4
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to %"class.spv::Instruction"***
  %97 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 5
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %98 to %"class.spv::Instruction"***
  %100 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %99, align 8
  %101 = icmp eq %"class.spv::Instruction"** %97, %100
  %102 = ptrtoint %"class.spv::Instruction"** %100 to i64
  br i1 %101, label %108, label %103

103:                                              ; preds = %72
  %104 = bitcast %"class.spv::Instruction"** %97 to i64*
  store i64 %86, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %97, i64 1
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i64*
  store i64 %106, i64* %107, align 8
  br label %165

108:                                              ; preds = %72
  %109 = ptrtoint %"class.spv::Instruction"** %97 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %94 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %109, %112
  %114 = ashr exact i64 %113, 3
  %115 = add nsw i64 %114, 1
  %116 = icmp ugt i64 %115, 2305843009213693951
  br i1 %116, label %117, label %119

117:                                              ; preds = %108
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %118) #20
  unreachable

119:                                              ; preds = %108
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %121 = sub i64 %102, %112
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 1152921504606846975
  br i1 %123, label %124, label %132

124:                                              ; preds = %119
  %125 = ashr exact i64 %121, 2
  %126 = icmp ult i64 %125, %115
  %127 = select i1 %126, i64 %115, i64 %125
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %124
  %130 = icmp ugt i64 %127, 2305843009213693951
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  call void @abort() #20
  unreachable

132:                                              ; preds = %129, %119
  %133 = phi i64 [ %127, %129 ], [ 2305843009213693951, %119 ]
  %134 = shl i64 %133, 3
  %135 = call i8* @_Znwm(i64 %134) #18
  %136 = bitcast i8* %135 to %"class.spv::Instruction"**
  br label %137

137:                                              ; preds = %132, %124
  %138 = phi i64 [ %133, %132 ], [ 0, %124 ]
  %139 = phi %"class.spv::Instruction"** [ %136, %132 ], [ null, %124 ]
  %140 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %139, i64 %114
  %141 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %139, i64 %138
  %142 = ptrtoint %"class.spv::Instruction"** %141 to i64
  %143 = bitcast %"class.spv::Instruction"** %140 to i64*
  store i64 %86, i64* %143, align 8
  %144 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %140, i64 1
  %145 = ptrtoint %"class.spv::Instruction"** %144 to i64
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %94 to %"class.spv::Instruction"***
  %147 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %146, align 8
  %148 = load i64, i64* %110, align 8
  %149 = ptrtoint %"class.spv::Instruction"** %147 to i64
  %150 = sub i64 %148, %149
  %151 = ashr exact i64 %150, 3
  %152 = sub nsw i64 0, %151
  %153 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %140, i64 %152
  %154 = ptrtoint %"class.spv::Instruction"** %153 to i64
  %155 = icmp sgt i64 %150, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %137
  %157 = bitcast %"class.spv::Instruction"** %153 to i8*
  %158 = bitcast %"class.spv::Instruction"** %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 %150, i1 false) #17
  %159 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %146, align 8
  br label %160

160:                                              ; preds = %156, %137
  %161 = phi %"class.spv::Instruction"** [ %147, %137 ], [ %159, %156 ]
  store i64 %154, i64* %111, align 8
  store i64 %145, i64* %110, align 8
  store i64 %142, i64* %120, align 8
  %162 = icmp eq %"class.spv::Instruction"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %160
  %164 = bitcast %"class.spv::Instruction"** %161 to i8*
  call void @_ZdlPv(i8* %164) #18
  br label %165

165:                                              ; preds = %103, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #17
  %166 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #17
  %167 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %86, i64* %167, align 8
  %168 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %169 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %168, align 8
  %170 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %171 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %170, align 8
  %172 = icmp ult %"class.std::__1::unique_ptr"* %169, %171
  br i1 %172, label %173, label %179

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %174, align 8
  %175 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  store i64 %86, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 1
  %177 = ptrtoint %"class.std::__1::unique_ptr"* %176 to i64
  %178 = bitcast %"class.std::__1::unique_ptr"** %168 to i64*
  store i64 %177, i64* %178, align 8
  br label %181

179:                                              ; preds = %165
  %180 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %180, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %14) #17
  br label %181

181:                                              ; preds = %173, %179
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %182, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %182, align 8
  %184 = icmp eq %"class.spv::Instruction"* %183, null
  br i1 %184, label %190, label %185

185:                                              ; preds = %181
  %186 = bitcast %"class.spv::Instruction"* %183 to void (%"class.spv::Instruction"*)***
  %187 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %186, align 8
  %188 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %187, i64 1
  %189 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %188, align 8
  call void %189(%"class.spv::Instruction"* nonnull %183) #17
  br label %190

190:                                              ; preds = %181, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #17
  %191 = load i32, i32* %80, align 8
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %194 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %195 = bitcast %"class.spv::Instruction"*** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.std::__1::vector.55"* %193 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = sub i64 %196, %198
  %200 = ashr exact i64 %199, 3
  %201 = icmp ugt i64 %200, %192
  %202 = inttoptr i64 %198 to %"class.spv::Instruction"**
  br i1 %201, label %215, label %203

203:                                              ; preds = %190
  %204 = add i32 %191, 16
  %205 = zext i32 %204 to i64
  %206 = icmp ult i64 %200, %205
  br i1 %206, label %207, label %211

207:                                              ; preds = %203
  %208 = sub nsw i64 %205, %200
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %193, i64 %208) #17
  %209 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %193, i64 0, i32 0, i32 0
  %210 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %209, align 8
  br label %215

211:                                              ; preds = %203
  %212 = icmp ugt i64 %200, %205
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %202, i64 %205
  store %"class.spv::Instruction"** %214, %"class.spv::Instruction"*** %194, align 8
  br label %215

215:                                              ; preds = %190, %207, %211, %213
  %216 = phi %"class.spv::Instruction"** [ %202, %213 ], [ %202, %211 ], [ %210, %207 ], [ %202, %190 ]
  %217 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %216, i64 %192
  %218 = bitcast %"class.spv::Instruction"** %217 to i8**
  store i8* %73, i8** %218, align 8
  br label %219

219:                                              ; preds = %70, %215
  %220 = phi i32* [ %80, %215 ], [ %71, %70 ]
  %221 = load i32, i32* %220, align 8
  ret i32 %221
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder16makeRuntimeArrayEj(%"class.spv::Builder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #18
  %5 = bitcast i8* %4 to %"class.spv::Instruction"*
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %8, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 29, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %5, i32 %1)
  %17 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = ptrtoint i8* %4 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = icmp ult %"class.std::__1::unique_ptr"* %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %26, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %18, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %29 = ptrtoint %"class.std::__1::unique_ptr"* %28 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %33

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %32, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %33

33:                                               ; preds = %25, %31
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %34, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %34, align 8
  %36 = icmp eq %"class.spv::Instruction"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.spv::Instruction"* %35 to void (%"class.spv::Instruction"*)***
  %39 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %39, i64 1
  %41 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %40, align 8
  call void %41(%"class.spv::Instruction"* nonnull %35) #17
  br label %42

42:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %43 = load i32, i32* %11, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %46 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %47 = bitcast %"class.spv::Instruction"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.55"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %52, %44
  %54 = inttoptr i64 %50 to %"class.spv::Instruction"**
  br i1 %53, label %67, label %55

55:                                               ; preds = %42
  %56 = add i32 %43, 16
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = sub nsw i64 %57, %52
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %45, i64 %60) #17
  %61 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %45, i64 0, i32 0, i32 0
  %62 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %61, align 8
  br label %67

63:                                               ; preds = %55
  %64 = icmp ugt i64 %52, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %57
  store %"class.spv::Instruction"** %66, %"class.spv::Instruction"*** %46, align 8
  br label %67

67:                                               ; preds = %42, %59, %63, %65
  %68 = phi %"class.spv::Instruction"** [ %54, %65 ], [ %54, %63 ], [ %62, %59 ], [ %54, %42 ]
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, i64 %44
  %70 = bitcast %"class.spv::Instruction"** %69 to i8**
  store i8* %4, i8** %70, align 8
  %71 = load i32, i32* %11, align 8
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder16makeFunctionTypeEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"*, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 33, i32* %10, align 4
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %16 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %19 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %20 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %19, 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 4
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr exact i64 %27, 3
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %30, label %33, label %31

31:                                               ; preds = %3
  %32 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  br label %99

33:                                               ; preds = %3
  %34 = bitcast i32* %11 to i8*
  %35 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  %36 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  br label %41

41:                                               ; preds = %33, %83
  %42 = phi i64 [ 0, %33 ], [ %84, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #17
  store i32 33, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store i32* %11, i32** %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #17
  %43 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %44 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %43, 0
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %46 = bitcast %"struct.std::__1::__hash_node_base"* %45 to %"class.spv::Instruction"***
  %47 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %46, align 8
  %48 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %47, i64 %42
  %49 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #17
  %50 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %49, i64 0, i32 4, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %54, label %83

54:                                               ; preds = %41
  %55 = ptrtoint i32* %51 to i64
  %56 = load i64, i64* %39, align 8
  %57 = load i64, i64* %40, align 8
  %58 = sub i64 %56, %57
  %59 = lshr exact i64 %58, 2
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %49, i64 0, i32 4, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %55
  %65 = lshr exact i64 %64, 2
  %66 = trunc i64 %65 to i32
  %67 = add nsw i32 %66, -1
  %68 = icmp eq i32 %67, %60
  %69 = inttoptr i64 %57 to i32*
  br i1 %68, label %70, label %83

70:                                               ; preds = %54
  %71 = shl i64 %58, 30
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %70, %76
  %74 = phi i64 [ 0, %70 ], [ %79, %76 ]
  %75 = icmp slt i64 %74, %72
  br i1 %75, label %76, label %97

76:                                               ; preds = %73
  %77 = getelementptr inbounds i32, i32* %69, i64 %74
  %78 = load i32, i32* %77, align 4
  %79 = add nuw nsw i64 %74, 1
  %80 = getelementptr inbounds i32, i32* %51, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %78, %81
  br i1 %82, label %73, label %83

83:                                               ; preds = %76, %54, %41
  %84 = add nuw nsw i64 %42, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 33, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  store i32* %10, i32** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #17
  %85 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %86 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %85, 0
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 4
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %90, %92
  %94 = shl i64 %93, 29
  %95 = ashr i64 %94, 32
  %96 = icmp slt i64 %84, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br i1 %96, label %41, label %99

97:                                               ; preds = %73
  %98 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %49, i64 0, i32 1
  br label %268

99:                                               ; preds = %83, %31
  %100 = phi i64* [ %32, %31 ], [ %40, %83 ]
  %101 = call i8* @_Znwm(i64 80) #18
  %102 = bitcast i8* %101 to %"class.spv::Instruction"*
  %103 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  %106 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds i8, i8* %101, i64 8
  %108 = bitcast i8* %107 to i32*
  store i32 %105, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %101, i64 12
  %110 = bitcast i8* %109 to i32*
  store i32 0, i32* %110, align 4
  %111 = getelementptr inbounds i8, i8* %101, i64 16
  %112 = bitcast i8* %111 to i32*
  store i32 33, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %101, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 56, i1 false) #17
  %114 = ptrtoint i8* %101 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %102, i32 %1)
  %115 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = load i64, i64* %100, align 8
  %119 = sub i64 %117, %118
  %120 = lshr exact i64 %119, 2
  %121 = trunc i64 %120 to i32
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %255, label %123

123:                                              ; preds = %255, %99
  %124 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %124) #17
  store i32 33, i32* %12, align 4
  %125 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #17
  %126 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %127) #17
  %128 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %129 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %128, 0
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %127) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #17
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 4
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %131 to %"class.spv::Instruction"***
  %133 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 5
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %134 to %"class.spv::Instruction"***
  %136 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %135, align 8
  %137 = icmp eq %"class.spv::Instruction"** %133, %136
  %138 = ptrtoint %"class.spv::Instruction"** %136 to i64
  br i1 %137, label %144, label %139

139:                                              ; preds = %123
  %140 = bitcast %"class.spv::Instruction"** %133 to i64*
  store i64 %114, i64* %140, align 8
  %141 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %133, i64 1
  %142 = ptrtoint %"class.spv::Instruction"** %141 to i64
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %131 to i64*
  store i64 %142, i64* %143, align 8
  br label %201

144:                                              ; preds = %123
  %145 = ptrtoint %"class.spv::Instruction"** %133 to i64
  %146 = bitcast %"struct.std::__1::__hash_node_base"* %131 to i64*
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %145, %148
  %150 = ashr exact i64 %149, 3
  %151 = add nsw i64 %150, 1
  %152 = icmp ugt i64 %151, 2305843009213693951
  br i1 %152, label %153, label %155

153:                                              ; preds = %144
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %130 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %154) #20
  unreachable

155:                                              ; preds = %144
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  %157 = sub i64 %138, %148
  %158 = ashr exact i64 %157, 3
  %159 = icmp ult i64 %158, 1152921504606846975
  br i1 %159, label %160, label %168

160:                                              ; preds = %155
  %161 = ashr exact i64 %157, 2
  %162 = icmp ult i64 %161, %151
  %163 = select i1 %162, i64 %151, i64 %161
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %160
  %166 = icmp ugt i64 %163, 2305843009213693951
  br i1 %166, label %167, label %168

167:                                              ; preds = %165
  call void @abort() #20
  unreachable

168:                                              ; preds = %165, %155
  %169 = phi i64 [ %163, %165 ], [ 2305843009213693951, %155 ]
  %170 = shl i64 %169, 3
  %171 = call i8* @_Znwm(i64 %170) #18
  %172 = bitcast i8* %171 to %"class.spv::Instruction"**
  br label %173

173:                                              ; preds = %168, %160
  %174 = phi i64 [ %169, %168 ], [ 0, %160 ]
  %175 = phi %"class.spv::Instruction"** [ %172, %168 ], [ null, %160 ]
  %176 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %175, i64 %150
  %177 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %175, i64 %174
  %178 = ptrtoint %"class.spv::Instruction"** %177 to i64
  %179 = bitcast %"class.spv::Instruction"** %176 to i64*
  store i64 %114, i64* %179, align 8
  %180 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %176, i64 1
  %181 = ptrtoint %"class.spv::Instruction"** %180 to i64
  %182 = bitcast %"struct.std::__1::__hash_node_base"* %130 to %"class.spv::Instruction"***
  %183 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %182, align 8
  %184 = load i64, i64* %146, align 8
  %185 = ptrtoint %"class.spv::Instruction"** %183 to i64
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 3
  %188 = sub nsw i64 0, %187
  %189 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %176, i64 %188
  %190 = ptrtoint %"class.spv::Instruction"** %189 to i64
  %191 = icmp sgt i64 %186, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %173
  %193 = bitcast %"class.spv::Instruction"** %189 to i8*
  %194 = bitcast %"class.spv::Instruction"** %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 %186, i1 false) #17
  %195 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %182, align 8
  br label %196

196:                                              ; preds = %192, %173
  %197 = phi %"class.spv::Instruction"** [ %183, %173 ], [ %195, %192 ]
  store i64 %190, i64* %147, align 8
  store i64 %181, i64* %146, align 8
  store i64 %178, i64* %156, align 8
  %198 = icmp eq %"class.spv::Instruction"** %197, null
  br i1 %198, label %201, label %199

199:                                              ; preds = %196
  %200 = bitcast %"class.spv::Instruction"** %197 to i8*
  call void @_ZdlPv(i8* %200) #18
  br label %201

201:                                              ; preds = %139, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %124) #17
  %202 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #17
  %203 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %114, i64* %203, align 8
  %204 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %205 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %204, align 8
  %206 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %207 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %206, align 8
  %208 = icmp ult %"class.std::__1::unique_ptr"* %205, %207
  br i1 %208, label %209, label %215

209:                                              ; preds = %201
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %210, align 8
  %211 = bitcast %"class.std::__1::unique_ptr"* %205 to i64*
  store i64 %114, i64* %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 1
  %213 = ptrtoint %"class.std::__1::unique_ptr"* %212 to i64
  %214 = bitcast %"class.std::__1::unique_ptr"** %204 to i64*
  store i64 %213, i64* %214, align 8
  br label %217

215:                                              ; preds = %201
  %216 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %216, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %13) #17
  br label %217

217:                                              ; preds = %209, %215
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %218, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %218, align 8
  %220 = icmp eq %"class.spv::Instruction"* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = bitcast %"class.spv::Instruction"* %219 to void (%"class.spv::Instruction"*)***
  %223 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %223, i64 1
  %225 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %224, align 8
  call void %225(%"class.spv::Instruction"* nonnull %219) #17
  br label %226

226:                                              ; preds = %217, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #17
  %227 = load i32, i32* %108, align 8
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %230 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %231 = bitcast %"class.spv::Instruction"*** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.std::__1::vector.55"* %229 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %232, %234
  %236 = ashr exact i64 %235, 3
  %237 = icmp ugt i64 %236, %228
  %238 = inttoptr i64 %234 to %"class.spv::Instruction"**
  br i1 %237, label %251, label %239

239:                                              ; preds = %226
  %240 = add i32 %227, 16
  %241 = zext i32 %240 to i64
  %242 = icmp ult i64 %236, %241
  br i1 %242, label %243, label %247

243:                                              ; preds = %239
  %244 = sub nsw i64 %241, %236
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %229, i64 %244) #17
  %245 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %229, i64 0, i32 0, i32 0
  %246 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %245, align 8
  br label %251

247:                                              ; preds = %239
  %248 = icmp ugt i64 %236, %241
  br i1 %248, label %249, label %251

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %238, i64 %241
  store %"class.spv::Instruction"** %250, %"class.spv::Instruction"*** %230, align 8
  br label %251

251:                                              ; preds = %226, %243, %247, %249
  %252 = phi %"class.spv::Instruction"** [ %238, %249 ], [ %238, %247 ], [ %246, %243 ], [ %238, %226 ]
  %253 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %252, i64 %228
  %254 = bitcast %"class.spv::Instruction"** %253 to i8**
  store i8* %101, i8** %254, align 8
  br label %268

255:                                              ; preds = %99, %255
  %256 = phi i64 [ %263, %255 ], [ %118, %99 ]
  %257 = phi i64 [ %261, %255 ], [ 0, %99 ]
  %258 = inttoptr i64 %256 to i32*
  %259 = getelementptr inbounds i32, i32* %258, i64 %257
  %260 = load i32, i32* %259, align 4
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %102, i32 %260)
  %261 = add nuw nsw i64 %257, 1
  %262 = load i64, i64* %116, align 8
  %263 = load i64, i64* %100, align 8
  %264 = sub i64 %262, %263
  %265 = shl i64 %264, 30
  %266 = ashr i64 %265, 32
  %267 = icmp slt i64 %261, %266
  br i1 %267, label %255, label %123

268:                                              ; preds = %97, %251
  %269 = phi i32* [ %108, %251 ], [ %98, %97 ]
  %270 = load i32, i32* %269, align 8
  ret i32 %270
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder13makeImageTypeEjNS_3DimEbbbjNS_11ImageFormatE(%"class.spv::Builder"*, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.std::__1::tuple.267", align 8
  %10 = alloca %"class.std::__1::tuple.219", align 1
  %11 = alloca %"class.std::__1::tuple.267", align 8
  %12 = alloca %"class.std::__1::tuple.219", align 1
  %13 = alloca %"class.std::__1::tuple.267", align 8
  %14 = alloca %"class.std::__1::tuple.219", align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__1::unique_ptr", align 8
  %19 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store i32 25, i32* %15, align 4
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %21 = bitcast %"class.std::__1::tuple.267"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %13, i64 0, i32 0, i32 0, i32 0
  store i32* %15, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #17
  %24 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %14) #17
  %25 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 4
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = lshr exact i64 %32, 3
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  br i1 %35, label %40, label %36

36:                                               ; preds = %8
  %37 = zext i1 %3 to i32
  %38 = zext i1 %4 to i32
  %39 = zext i1 %5 to i32
  br label %101

40:                                               ; preds = %8
  %41 = bitcast i32* %16 to i8*
  %42 = bitcast %"class.std::__1::tuple.267"* %11 to i8*
  %43 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %11, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %12, i64 0, i32 0
  %45 = zext i1 %3 to i32
  %46 = zext i1 %4 to i32
  %47 = zext i1 %5 to i32
  br label %48

48:                                               ; preds = %40, %85
  %49 = phi i64 [ 0, %40 ], [ %86, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #17
  store i32 25, i32* %16, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #17
  store i32* %16, i32** %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #17
  %50 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %12) #17
  %51 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %50, 0
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #17
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to %"class.spv::Instruction"***
  %54 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %53, align 8
  %55 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %49
  %56 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #17
  %57 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %56, i64 0, i32 4, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %61, label %85

61:                                               ; preds = %48
  %62 = getelementptr inbounds i32, i32* %58, i64 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %2
  br i1 %64, label %65, label %85

65:                                               ; preds = %61
  %66 = getelementptr inbounds i32, i32* %58, i64 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %45
  br i1 %68, label %69, label %85

69:                                               ; preds = %65
  %70 = getelementptr inbounds i32, i32* %58, i64 3
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %46
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = getelementptr inbounds i32, i32* %58, i64 4
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %47
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = getelementptr inbounds i32, i32* %58, i64 5
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, %6
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = getelementptr inbounds i32, i32* %58, i64 6
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %7
  br i1 %84, label %99, label %85

85:                                               ; preds = %48, %61, %65, %69, %73, %77, %81
  %86 = add nuw nsw i64 %49, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store i32 25, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  store i32* %15, i32** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #17
  %87 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %14) #17
  %88 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %87, 0
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 4
  %91 = bitcast %"struct.std::__1::__hash_node_base"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = shl i64 %95, 29
  %97 = ashr i64 %96, 32
  %98 = icmp slt i64 %86, %97
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  br i1 %98, label %48, label %101

99:                                               ; preds = %81
  %100 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %56, i64 0, i32 1
  br label %971

101:                                              ; preds = %85, %36
  %102 = phi i32 [ %39, %36 ], [ %47, %85 ]
  %103 = phi i32 [ %38, %36 ], [ %46, %85 ]
  %104 = phi i32 [ %37, %36 ], [ %45, %85 ]
  %105 = call i8* @_Znwm(i64 80) #18
  %106 = bitcast i8* %105 to %"class.spv::Instruction"*
  %107 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 8
  %110 = bitcast i8* %105 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %105, i64 8
  %112 = bitcast i8* %111 to i32*
  store i32 %109, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %105, i64 12
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %105, i64 16
  %116 = bitcast i8* %115 to i32*
  store i32 25, i32* %116, align 8
  %117 = getelementptr inbounds i8, i8* %105, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 56, i1 false) #17
  %118 = ptrtoint i8* %105 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %1)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %2)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %104)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %103)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %102)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %6)
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %106, i32 %7)
  %119 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #17
  store i32 25, i32* %17, align 4
  %120 = bitcast %"class.std::__1::tuple.267"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #17
  %121 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %17, i32** %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %122) #17
  %123 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %124 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %123, 0
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %122) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #17
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 4
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to %"class.spv::Instruction"***
  %128 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 5
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to %"class.spv::Instruction"***
  %131 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %130, align 8
  %132 = icmp eq %"class.spv::Instruction"** %128, %131
  %133 = ptrtoint %"class.spv::Instruction"** %131 to i64
  br i1 %132, label %139, label %134

134:                                              ; preds = %101
  %135 = bitcast %"class.spv::Instruction"** %128 to i64*
  store i64 %118, i64* %135, align 8
  %136 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %128, i64 1
  %137 = ptrtoint %"class.spv::Instruction"** %136 to i64
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  store i64 %137, i64* %138, align 8
  br label %196

139:                                              ; preds = %101
  %140 = ptrtoint %"class.spv::Instruction"** %128 to i64
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %140, %143
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %139
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %125 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #20
  unreachable

150:                                              ; preds = %139
  %151 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i64*
  %152 = sub i64 %133, %143
  %153 = ashr exact i64 %152, 3
  %154 = icmp ult i64 %153, 1152921504606846975
  br i1 %154, label %155, label %163

155:                                              ; preds = %150
  %156 = ashr exact i64 %152, 2
  %157 = icmp ult i64 %156, %146
  %158 = select i1 %157, i64 %146, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %168, label %160

160:                                              ; preds = %155
  %161 = icmp ugt i64 %158, 2305843009213693951
  br i1 %161, label %162, label %163

162:                                              ; preds = %160
  call void @abort() #20
  unreachable

163:                                              ; preds = %160, %150
  %164 = phi i64 [ %158, %160 ], [ 2305843009213693951, %150 ]
  %165 = shl i64 %164, 3
  %166 = call i8* @_Znwm(i64 %165) #18
  %167 = bitcast i8* %166 to %"class.spv::Instruction"**
  br label %168

168:                                              ; preds = %163, %155
  %169 = phi i64 [ %164, %163 ], [ 0, %155 ]
  %170 = phi %"class.spv::Instruction"** [ %167, %163 ], [ null, %155 ]
  %171 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %170, i64 %145
  %172 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %170, i64 %169
  %173 = ptrtoint %"class.spv::Instruction"** %172 to i64
  %174 = bitcast %"class.spv::Instruction"** %171 to i64*
  store i64 %118, i64* %174, align 8
  %175 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %171, i64 1
  %176 = ptrtoint %"class.spv::Instruction"** %175 to i64
  %177 = bitcast %"struct.std::__1::__hash_node_base"* %125 to %"class.spv::Instruction"***
  %178 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %177, align 8
  %179 = load i64, i64* %141, align 8
  %180 = ptrtoint %"class.spv::Instruction"** %178 to i64
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 3
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %171, i64 %183
  %185 = ptrtoint %"class.spv::Instruction"** %184 to i64
  %186 = icmp sgt i64 %181, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %168
  %188 = bitcast %"class.spv::Instruction"** %184 to i8*
  %189 = bitcast %"class.spv::Instruction"** %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %189, i64 %181, i1 false) #17
  %190 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %177, align 8
  br label %191

191:                                              ; preds = %187, %168
  %192 = phi %"class.spv::Instruction"** [ %178, %168 ], [ %190, %187 ]
  store i64 %185, i64* %142, align 8
  store i64 %176, i64* %141, align 8
  store i64 %173, i64* %151, align 8
  %193 = icmp eq %"class.spv::Instruction"** %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = bitcast %"class.spv::Instruction"** %192 to i8*
  call void @_ZdlPv(i8* %195) #18
  br label %196

196:                                              ; preds = %134, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #17
  %197 = bitcast %"class.std::__1::unique_ptr"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #17
  %198 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %118, i64* %198, align 8
  %199 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %200 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %199, align 8
  %201 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %202 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %201, align 8
  %203 = icmp ult %"class.std::__1::unique_ptr"* %200, %202
  br i1 %203, label %204, label %210

204:                                              ; preds = %196
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %205, align 8
  %206 = bitcast %"class.std::__1::unique_ptr"* %200 to i64*
  store i64 %118, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %200, i64 1
  %208 = ptrtoint %"class.std::__1::unique_ptr"* %207 to i64
  %209 = bitcast %"class.std::__1::unique_ptr"** %199 to i64*
  store i64 %208, i64* %209, align 8
  br label %212

210:                                              ; preds = %196
  %211 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %211, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %18) #17
  br label %212

212:                                              ; preds = %204, %210
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %213, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %213, align 8
  %215 = icmp eq %"class.spv::Instruction"* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %212
  %217 = bitcast %"class.spv::Instruction"* %214 to void (%"class.spv::Instruction"*)***
  %218 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %218, i64 1
  %220 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %219, align 8
  call void %220(%"class.spv::Instruction"* nonnull %214) #17
  br label %221

221:                                              ; preds = %212, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #17
  %222 = load i32, i32* %112, align 8
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %225 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %226 = bitcast %"class.spv::Instruction"*** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.std::__1::vector.55"* %224 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = sub i64 %227, %229
  %231 = ashr exact i64 %230, 3
  %232 = icmp ugt i64 %231, %223
  %233 = inttoptr i64 %229 to %"class.spv::Instruction"**
  br i1 %232, label %246, label %234

234:                                              ; preds = %221
  %235 = add i32 %222, 16
  %236 = zext i32 %235 to i64
  %237 = icmp ult i64 %231, %236
  br i1 %237, label %238, label %242

238:                                              ; preds = %234
  %239 = sub nsw i64 %236, %231
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %224, i64 %239) #17
  %240 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %224, i64 0, i32 0, i32 0
  %241 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %240, align 8
  br label %246

242:                                              ; preds = %234
  %243 = icmp ugt i64 %231, %236
  br i1 %243, label %244, label %246

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %233, i64 %236
  store %"class.spv::Instruction"** %245, %"class.spv::Instruction"*** %225, align 8
  br label %246

246:                                              ; preds = %221, %238, %242, %244
  %247 = phi %"class.spv::Instruction"** [ %233, %244 ], [ %233, %242 ], [ %241, %238 ], [ %233, %221 ]
  %248 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %247, i64 %223
  %249 = bitcast %"class.spv::Instruction"** %248 to i8**
  store i8* %105, i8** %249, align 8
  switch i32 %2, label %833 [
    i32 5, label %250
    i32 0, label %379
    i32 3, label %508
    i32 4, label %638
    i32 6, label %767
  ]

250:                                              ; preds = %246
  %251 = icmp eq i32 %6, 1
  %252 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %253 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %254 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_node"**
  %255 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %254, align 8
  %256 = icmp eq %"class.std::__1::__tree_node"* %255, null
  br i1 %251, label %257, label %318

257:                                              ; preds = %250
  br i1 %256, label %286, label %258

258:                                              ; preds = %257
  %259 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %260

260:                                              ; preds = %282, %258
  %261 = phi %"class.std::__1::__tree_node"* [ %285, %282 ], [ %255, %258 ]
  %262 = phi %"class.std::__1::__tree_node_base"** [ %284, %282 ], [ %259, %258 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 1
  %264 = load i32, i32* %263, align 4
  %265 = icmp sgt i32 %264, 46
  br i1 %265, label %266, label %272

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 0, i32 0
  %268 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %267, align 8
  %269 = icmp eq %"class.std::__1::__tree_node_base"* %268, null
  br i1 %269, label %270, label %282

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 0
  br label %288

272:                                              ; preds = %260
  %273 = icmp eq i32 %264, 46
  br i1 %273, label %280, label %274

274:                                              ; preds = %272
  %275 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 1
  %276 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %275, align 8
  %277 = icmp eq %"class.std::__1::__tree_node_base"* %276, null
  br i1 %277, label %278, label %282

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 0
  br label %288

280:                                              ; preds = %272
  %281 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %261, i64 0, i32 0, i32 0
  br label %288

282:                                              ; preds = %274, %266
  %283 = phi %"class.std::__1::__tree_node_base"* [ %268, %266 ], [ %276, %274 ]
  %284 = phi %"class.std::__1::__tree_node_base"** [ %267, %266 ], [ %275, %274 ]
  %285 = bitcast %"class.std::__1::__tree_node_base"* %283 to %"class.std::__1::__tree_node"*
  br label %260

286:                                              ; preds = %257
  %287 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  br label %288

288:                                              ; preds = %286, %280, %278, %270
  %289 = phi %"class.std::__1::__tree_end_node"* [ %253, %286 ], [ %271, %270 ], [ %279, %278 ], [ %281, %280 ]
  %290 = phi %"class.std::__1::__tree_node_base"** [ %287, %286 ], [ %267, %270 ], [ %275, %278 ], [ %262, %280 ]
  %291 = bitcast %"class.std::__1::__tree_node_base"** %290 to %"class.std::__1::__tree_node"**
  %292 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %291, align 8
  %293 = icmp eq %"class.std::__1::__tree_node"* %292, null
  br i1 %293, label %294, label %833

294:                                              ; preds = %288
  %295 = call i8* @_Znwm(i64 32) #18, !noalias !9
  %296 = getelementptr inbounds i8, i8* %295, i64 28
  %297 = bitcast i8* %296 to i32*
  store i32 46, i32* %297, align 4, !noalias !9
  %298 = bitcast i8* %295 to %"class.std::__1::__tree_node_base"*
  %299 = getelementptr inbounds i8, i8* %295, i64 16
  %300 = bitcast i8* %299 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %295, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %289, %"class.std::__1::__tree_end_node"** %300, align 8
  %301 = bitcast %"class.std::__1::__tree_node_base"** %290 to i8**
  store i8* %295, i8** %301, align 8
  %302 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %252, i64 0, i32 0, i32 0
  %303 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %302, align 8
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %303, i64 0, i32 0
  %305 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %304, align 8
  %306 = icmp eq %"class.std::__1::__tree_node_base"* %305, null
  br i1 %306, label %311, label %307

307:                                              ; preds = %294
  %308 = ptrtoint %"class.std::__1::__tree_node_base"* %305 to i64
  %309 = bitcast %"class.std::__1::set.14"* %252 to i64*
  store i64 %308, i64* %309, align 8
  %310 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  br label %311

311:                                              ; preds = %307, %294
  %312 = phi %"class.std::__1::__tree_node_base"* [ %298, %294 ], [ %310, %307 ]
  %313 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %314, %"class.std::__1::__tree_node_base"* %312) #17
  %315 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %316 = load i64, i64* %315, align 8
  %317 = add i64 %316, 1
  store i64 %317, i64* %315, align 8
  br label %833

318:                                              ; preds = %250
  br i1 %256, label %347, label %319

319:                                              ; preds = %318
  %320 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %321

321:                                              ; preds = %343, %319
  %322 = phi %"class.std::__1::__tree_node"* [ %346, %343 ], [ %255, %319 ]
  %323 = phi %"class.std::__1::__tree_node_base"** [ %345, %343 ], [ %320, %319 ]
  %324 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %322, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp sgt i32 %325, 47
  br i1 %326, label %327, label %333

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %322, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_node_base"* %329, null
  br i1 %330, label %331, label %343

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %322, i64 0, i32 0, i32 0
  br label %349

333:                                              ; preds = %321
  %334 = icmp eq i32 %325, 47
  br i1 %334, label %341, label %335

335:                                              ; preds = %333
  %336 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %322, i64 0, i32 0, i32 1
  %337 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %336, align 8
  %338 = icmp eq %"class.std::__1::__tree_node_base"* %337, null
  br i1 %338, label %339, label %343

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %322, i64 0, i32 0, i32 0
  br label %349

341:                                              ; preds = %333
  %342 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %322, i64 0, i32 0, i32 0
  br label %349

343:                                              ; preds = %335, %327
  %344 = phi %"class.std::__1::__tree_node_base"* [ %329, %327 ], [ %337, %335 ]
  %345 = phi %"class.std::__1::__tree_node_base"** [ %328, %327 ], [ %336, %335 ]
  %346 = bitcast %"class.std::__1::__tree_node_base"* %344 to %"class.std::__1::__tree_node"*
  br label %321

347:                                              ; preds = %318
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %253, i64 0, i32 0
  br label %349

349:                                              ; preds = %347, %341, %339, %331
  %350 = phi %"class.std::__1::__tree_end_node"* [ %253, %347 ], [ %332, %331 ], [ %340, %339 ], [ %342, %341 ]
  %351 = phi %"class.std::__1::__tree_node_base"** [ %348, %347 ], [ %328, %331 ], [ %336, %339 ], [ %323, %341 ]
  %352 = bitcast %"class.std::__1::__tree_node_base"** %351 to %"class.std::__1::__tree_node"**
  %353 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %352, align 8
  %354 = icmp eq %"class.std::__1::__tree_node"* %353, null
  br i1 %354, label %355, label %833

355:                                              ; preds = %349
  %356 = call i8* @_Znwm(i64 32) #18, !noalias !12
  %357 = getelementptr inbounds i8, i8* %356, i64 28
  %358 = bitcast i8* %357 to i32*
  store i32 47, i32* %358, align 4, !noalias !12
  %359 = bitcast i8* %356 to %"class.std::__1::__tree_node_base"*
  %360 = getelementptr inbounds i8, i8* %356, i64 16
  %361 = bitcast i8* %360 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %350, %"class.std::__1::__tree_end_node"** %361, align 8
  %362 = bitcast %"class.std::__1::__tree_node_base"** %351 to i8**
  store i8* %356, i8** %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %252, i64 0, i32 0, i32 0
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %363, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, null
  br i1 %367, label %372, label %368

368:                                              ; preds = %355
  %369 = ptrtoint %"class.std::__1::__tree_node_base"* %366 to i64
  %370 = bitcast %"class.std::__1::set.14"* %252 to i64*
  store i64 %369, i64* %370, align 8
  %371 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %351, align 8
  br label %372

372:                                              ; preds = %368, %355
  %373 = phi %"class.std::__1::__tree_node_base"* [ %359, %355 ], [ %371, %368 ]
  %374 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %375 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %374, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %375, %"class.std::__1::__tree_node_base"* %373) #17
  %376 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %377 = load i64, i64* %376, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %376, align 8
  br label %833

379:                                              ; preds = %246
  %380 = icmp eq i32 %6, 1
  %381 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %382 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %383 = bitcast %"class.std::__1::__tree_end_node"* %382 to %"class.std::__1::__tree_node"**
  %384 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %383, align 8
  %385 = icmp eq %"class.std::__1::__tree_node"* %384, null
  br i1 %380, label %386, label %447

386:                                              ; preds = %379
  br i1 %385, label %415, label %387

387:                                              ; preds = %386
  %388 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %389

389:                                              ; preds = %411, %387
  %390 = phi %"class.std::__1::__tree_node"* [ %414, %411 ], [ %384, %387 ]
  %391 = phi %"class.std::__1::__tree_node_base"** [ %413, %411 ], [ %388, %387 ]
  %392 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %390, i64 0, i32 1
  %393 = load i32, i32* %392, align 4
  %394 = icmp sgt i32 %393, 43
  br i1 %394, label %395, label %401

395:                                              ; preds = %389
  %396 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %390, i64 0, i32 0, i32 0, i32 0
  %397 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %396, align 8
  %398 = icmp eq %"class.std::__1::__tree_node_base"* %397, null
  br i1 %398, label %399, label %411

399:                                              ; preds = %395
  %400 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %390, i64 0, i32 0, i32 0
  br label %417

401:                                              ; preds = %389
  %402 = icmp eq i32 %393, 43
  br i1 %402, label %409, label %403

403:                                              ; preds = %401
  %404 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %390, i64 0, i32 0, i32 1
  %405 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %404, align 8
  %406 = icmp eq %"class.std::__1::__tree_node_base"* %405, null
  br i1 %406, label %407, label %411

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %390, i64 0, i32 0, i32 0
  br label %417

409:                                              ; preds = %401
  %410 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %390, i64 0, i32 0, i32 0
  br label %417

411:                                              ; preds = %403, %395
  %412 = phi %"class.std::__1::__tree_node_base"* [ %397, %395 ], [ %405, %403 ]
  %413 = phi %"class.std::__1::__tree_node_base"** [ %396, %395 ], [ %404, %403 ]
  %414 = bitcast %"class.std::__1::__tree_node_base"* %412 to %"class.std::__1::__tree_node"*
  br label %389

415:                                              ; preds = %386
  %416 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %382, i64 0, i32 0
  br label %417

417:                                              ; preds = %415, %409, %407, %399
  %418 = phi %"class.std::__1::__tree_end_node"* [ %382, %415 ], [ %400, %399 ], [ %408, %407 ], [ %410, %409 ]
  %419 = phi %"class.std::__1::__tree_node_base"** [ %416, %415 ], [ %396, %399 ], [ %404, %407 ], [ %391, %409 ]
  %420 = bitcast %"class.std::__1::__tree_node_base"** %419 to %"class.std::__1::__tree_node"**
  %421 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %420, align 8
  %422 = icmp eq %"class.std::__1::__tree_node"* %421, null
  br i1 %422, label %423, label %833

423:                                              ; preds = %417
  %424 = call i8* @_Znwm(i64 32) #18, !noalias !15
  %425 = getelementptr inbounds i8, i8* %424, i64 28
  %426 = bitcast i8* %425 to i32*
  store i32 43, i32* %426, align 4, !noalias !15
  %427 = bitcast i8* %424 to %"class.std::__1::__tree_node_base"*
  %428 = getelementptr inbounds i8, i8* %424, i64 16
  %429 = bitcast i8* %428 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %424, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %418, %"class.std::__1::__tree_end_node"** %429, align 8
  %430 = bitcast %"class.std::__1::__tree_node_base"** %419 to i8**
  store i8* %424, i8** %430, align 8
  %431 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %381, i64 0, i32 0, i32 0
  %432 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %431, align 8
  %433 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %432, i64 0, i32 0
  %434 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %433, align 8
  %435 = icmp eq %"class.std::__1::__tree_node_base"* %434, null
  br i1 %435, label %440, label %436

436:                                              ; preds = %423
  %437 = ptrtoint %"class.std::__1::__tree_node_base"* %434 to i64
  %438 = bitcast %"class.std::__1::set.14"* %381 to i64*
  store i64 %437, i64* %438, align 8
  %439 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %419, align 8
  br label %440

440:                                              ; preds = %436, %423
  %441 = phi %"class.std::__1::__tree_node_base"* [ %427, %423 ], [ %439, %436 ]
  %442 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %443 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %442, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %443, %"class.std::__1::__tree_node_base"* %441) #17
  %444 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %445 = load i64, i64* %444, align 8
  %446 = add i64 %445, 1
  store i64 %446, i64* %444, align 8
  br label %833

447:                                              ; preds = %379
  br i1 %385, label %476, label %448

448:                                              ; preds = %447
  %449 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %450

450:                                              ; preds = %472, %448
  %451 = phi %"class.std::__1::__tree_node"* [ %475, %472 ], [ %384, %448 ]
  %452 = phi %"class.std::__1::__tree_node_base"** [ %474, %472 ], [ %449, %448 ]
  %453 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %451, i64 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = icmp sgt i32 %454, 44
  br i1 %455, label %456, label %462

456:                                              ; preds = %450
  %457 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %451, i64 0, i32 0, i32 0, i32 0
  %458 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %457, align 8
  %459 = icmp eq %"class.std::__1::__tree_node_base"* %458, null
  br i1 %459, label %460, label %472

460:                                              ; preds = %456
  %461 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %451, i64 0, i32 0, i32 0
  br label %478

462:                                              ; preds = %450
  %463 = icmp eq i32 %454, 44
  br i1 %463, label %470, label %464

464:                                              ; preds = %462
  %465 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %451, i64 0, i32 0, i32 1
  %466 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %465, align 8
  %467 = icmp eq %"class.std::__1::__tree_node_base"* %466, null
  br i1 %467, label %468, label %472

468:                                              ; preds = %464
  %469 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %451, i64 0, i32 0, i32 0
  br label %478

470:                                              ; preds = %462
  %471 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %451, i64 0, i32 0, i32 0
  br label %478

472:                                              ; preds = %464, %456
  %473 = phi %"class.std::__1::__tree_node_base"* [ %458, %456 ], [ %466, %464 ]
  %474 = phi %"class.std::__1::__tree_node_base"** [ %457, %456 ], [ %465, %464 ]
  %475 = bitcast %"class.std::__1::__tree_node_base"* %473 to %"class.std::__1::__tree_node"*
  br label %450

476:                                              ; preds = %447
  %477 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %382, i64 0, i32 0
  br label %478

478:                                              ; preds = %476, %470, %468, %460
  %479 = phi %"class.std::__1::__tree_end_node"* [ %382, %476 ], [ %461, %460 ], [ %469, %468 ], [ %471, %470 ]
  %480 = phi %"class.std::__1::__tree_node_base"** [ %477, %476 ], [ %457, %460 ], [ %465, %468 ], [ %452, %470 ]
  %481 = bitcast %"class.std::__1::__tree_node_base"** %480 to %"class.std::__1::__tree_node"**
  %482 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %481, align 8
  %483 = icmp eq %"class.std::__1::__tree_node"* %482, null
  br i1 %483, label %484, label %833

484:                                              ; preds = %478
  %485 = call i8* @_Znwm(i64 32) #18, !noalias !18
  %486 = getelementptr inbounds i8, i8* %485, i64 28
  %487 = bitcast i8* %486 to i32*
  store i32 44, i32* %487, align 4, !noalias !18
  %488 = bitcast i8* %485 to %"class.std::__1::__tree_node_base"*
  %489 = getelementptr inbounds i8, i8* %485, i64 16
  %490 = bitcast i8* %489 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %485, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %479, %"class.std::__1::__tree_end_node"** %490, align 8
  %491 = bitcast %"class.std::__1::__tree_node_base"** %480 to i8**
  store i8* %485, i8** %491, align 8
  %492 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %381, i64 0, i32 0, i32 0
  %493 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %492, align 8
  %494 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %493, i64 0, i32 0
  %495 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %494, align 8
  %496 = icmp eq %"class.std::__1::__tree_node_base"* %495, null
  br i1 %496, label %501, label %497

497:                                              ; preds = %484
  %498 = ptrtoint %"class.std::__1::__tree_node_base"* %495 to i64
  %499 = bitcast %"class.std::__1::set.14"* %381 to i64*
  store i64 %498, i64* %499, align 8
  %500 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %480, align 8
  br label %501

501:                                              ; preds = %497, %484
  %502 = phi %"class.std::__1::__tree_node_base"* [ %488, %484 ], [ %500, %497 ]
  %503 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %504 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %503, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %504, %"class.std::__1::__tree_node_base"* %502) #17
  %505 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %506 = load i64, i64* %505, align 8
  %507 = add i64 %506, 1
  store i64 %507, i64* %505, align 8
  br label %833

508:                                              ; preds = %246
  br i1 %4, label %509, label %833

509:                                              ; preds = %508
  %510 = icmp eq i32 %6, 1
  %511 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %512 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %513 = bitcast %"class.std::__1::__tree_end_node"* %512 to %"class.std::__1::__tree_node"**
  %514 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %513, align 8
  %515 = icmp eq %"class.std::__1::__tree_node"* %514, null
  br i1 %510, label %516, label %577

516:                                              ; preds = %509
  br i1 %515, label %545, label %517

517:                                              ; preds = %516
  %518 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %519

519:                                              ; preds = %541, %517
  %520 = phi %"class.std::__1::__tree_node"* [ %544, %541 ], [ %514, %517 ]
  %521 = phi %"class.std::__1::__tree_node_base"** [ %543, %541 ], [ %518, %517 ]
  %522 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %520, i64 0, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = icmp sgt i32 %523, 45
  br i1 %524, label %525, label %531

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %520, i64 0, i32 0, i32 0, i32 0
  %527 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %526, align 8
  %528 = icmp eq %"class.std::__1::__tree_node_base"* %527, null
  br i1 %528, label %529, label %541

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %520, i64 0, i32 0, i32 0
  br label %547

531:                                              ; preds = %519
  %532 = icmp eq i32 %523, 45
  br i1 %532, label %539, label %533

533:                                              ; preds = %531
  %534 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %520, i64 0, i32 0, i32 1
  %535 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %534, align 8
  %536 = icmp eq %"class.std::__1::__tree_node_base"* %535, null
  br i1 %536, label %537, label %541

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %520, i64 0, i32 0, i32 0
  br label %547

539:                                              ; preds = %531
  %540 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %520, i64 0, i32 0, i32 0
  br label %547

541:                                              ; preds = %533, %525
  %542 = phi %"class.std::__1::__tree_node_base"* [ %527, %525 ], [ %535, %533 ]
  %543 = phi %"class.std::__1::__tree_node_base"** [ %526, %525 ], [ %534, %533 ]
  %544 = bitcast %"class.std::__1::__tree_node_base"* %542 to %"class.std::__1::__tree_node"*
  br label %519

545:                                              ; preds = %516
  %546 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %512, i64 0, i32 0
  br label %547

547:                                              ; preds = %545, %539, %537, %529
  %548 = phi %"class.std::__1::__tree_end_node"* [ %512, %545 ], [ %530, %529 ], [ %538, %537 ], [ %540, %539 ]
  %549 = phi %"class.std::__1::__tree_node_base"** [ %546, %545 ], [ %526, %529 ], [ %534, %537 ], [ %521, %539 ]
  %550 = bitcast %"class.std::__1::__tree_node_base"** %549 to %"class.std::__1::__tree_node"**
  %551 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %550, align 8
  %552 = icmp eq %"class.std::__1::__tree_node"* %551, null
  br i1 %552, label %553, label %833

553:                                              ; preds = %547
  %554 = call i8* @_Znwm(i64 32) #18, !noalias !21
  %555 = getelementptr inbounds i8, i8* %554, i64 28
  %556 = bitcast i8* %555 to i32*
  store i32 45, i32* %556, align 4, !noalias !21
  %557 = bitcast i8* %554 to %"class.std::__1::__tree_node_base"*
  %558 = getelementptr inbounds i8, i8* %554, i64 16
  %559 = bitcast i8* %558 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %554, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %548, %"class.std::__1::__tree_end_node"** %559, align 8
  %560 = bitcast %"class.std::__1::__tree_node_base"** %549 to i8**
  store i8* %554, i8** %560, align 8
  %561 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %511, i64 0, i32 0, i32 0
  %562 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %561, align 8
  %563 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %562, i64 0, i32 0
  %564 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %563, align 8
  %565 = icmp eq %"class.std::__1::__tree_node_base"* %564, null
  br i1 %565, label %570, label %566

566:                                              ; preds = %553
  %567 = ptrtoint %"class.std::__1::__tree_node_base"* %564 to i64
  %568 = bitcast %"class.std::__1::set.14"* %511 to i64*
  store i64 %567, i64* %568, align 8
  %569 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %549, align 8
  br label %570

570:                                              ; preds = %566, %553
  %571 = phi %"class.std::__1::__tree_node_base"* [ %557, %553 ], [ %569, %566 ]
  %572 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %573 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %572, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %573, %"class.std::__1::__tree_node_base"* %571) #17
  %574 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %575 = load i64, i64* %574, align 8
  %576 = add i64 %575, 1
  store i64 %576, i64* %574, align 8
  br label %833

577:                                              ; preds = %509
  br i1 %515, label %606, label %578

578:                                              ; preds = %577
  %579 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %580

580:                                              ; preds = %602, %578
  %581 = phi %"class.std::__1::__tree_node"* [ %605, %602 ], [ %514, %578 ]
  %582 = phi %"class.std::__1::__tree_node_base"** [ %604, %602 ], [ %579, %578 ]
  %583 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 1
  %584 = load i32, i32* %583, align 4
  %585 = icmp sgt i32 %584, 34
  br i1 %585, label %586, label %592

586:                                              ; preds = %580
  %587 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0, i32 0
  %588 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %587, align 8
  %589 = icmp eq %"class.std::__1::__tree_node_base"* %588, null
  br i1 %589, label %590, label %602

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0
  br label %608

592:                                              ; preds = %580
  %593 = icmp eq i32 %584, 34
  br i1 %593, label %600, label %594

594:                                              ; preds = %592
  %595 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 1
  %596 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %595, align 8
  %597 = icmp eq %"class.std::__1::__tree_node_base"* %596, null
  br i1 %597, label %598, label %602

598:                                              ; preds = %594
  %599 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0
  br label %608

600:                                              ; preds = %592
  %601 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0
  br label %608

602:                                              ; preds = %594, %586
  %603 = phi %"class.std::__1::__tree_node_base"* [ %588, %586 ], [ %596, %594 ]
  %604 = phi %"class.std::__1::__tree_node_base"** [ %587, %586 ], [ %595, %594 ]
  %605 = bitcast %"class.std::__1::__tree_node_base"* %603 to %"class.std::__1::__tree_node"*
  br label %580

606:                                              ; preds = %577
  %607 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %512, i64 0, i32 0
  br label %608

608:                                              ; preds = %606, %600, %598, %590
  %609 = phi %"class.std::__1::__tree_end_node"* [ %512, %606 ], [ %591, %590 ], [ %599, %598 ], [ %601, %600 ]
  %610 = phi %"class.std::__1::__tree_node_base"** [ %607, %606 ], [ %587, %590 ], [ %595, %598 ], [ %582, %600 ]
  %611 = bitcast %"class.std::__1::__tree_node_base"** %610 to %"class.std::__1::__tree_node"**
  %612 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %611, align 8
  %613 = icmp eq %"class.std::__1::__tree_node"* %612, null
  br i1 %613, label %614, label %833

614:                                              ; preds = %608
  %615 = call i8* @_Znwm(i64 32) #18, !noalias !24
  %616 = getelementptr inbounds i8, i8* %615, i64 28
  %617 = bitcast i8* %616 to i32*
  store i32 34, i32* %617, align 4, !noalias !24
  %618 = bitcast i8* %615 to %"class.std::__1::__tree_node_base"*
  %619 = getelementptr inbounds i8, i8* %615, i64 16
  %620 = bitcast i8* %619 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %615, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %609, %"class.std::__1::__tree_end_node"** %620, align 8
  %621 = bitcast %"class.std::__1::__tree_node_base"** %610 to i8**
  store i8* %615, i8** %621, align 8
  %622 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %511, i64 0, i32 0, i32 0
  %623 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %622, align 8
  %624 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %623, i64 0, i32 0
  %625 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %624, align 8
  %626 = icmp eq %"class.std::__1::__tree_node_base"* %625, null
  br i1 %626, label %631, label %627

627:                                              ; preds = %614
  %628 = ptrtoint %"class.std::__1::__tree_node_base"* %625 to i64
  %629 = bitcast %"class.std::__1::set.14"* %511 to i64*
  store i64 %628, i64* %629, align 8
  %630 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %610, align 8
  br label %631

631:                                              ; preds = %627, %614
  %632 = phi %"class.std::__1::__tree_node_base"* [ %618, %614 ], [ %630, %627 ]
  %633 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %634 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %633, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %634, %"class.std::__1::__tree_node_base"* %632) #17
  %635 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %636 = load i64, i64* %635, align 8
  %637 = add i64 %636, 1
  store i64 %637, i64* %635, align 8
  br label %833

638:                                              ; preds = %246
  %639 = icmp eq i32 %6, 1
  %640 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %641 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %642 = bitcast %"class.std::__1::__tree_end_node"* %641 to %"class.std::__1::__tree_node"**
  %643 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %642, align 8
  %644 = icmp eq %"class.std::__1::__tree_node"* %643, null
  br i1 %639, label %645, label %706

645:                                              ; preds = %638
  br i1 %644, label %674, label %646

646:                                              ; preds = %645
  %647 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %648

648:                                              ; preds = %670, %646
  %649 = phi %"class.std::__1::__tree_node"* [ %673, %670 ], [ %643, %646 ]
  %650 = phi %"class.std::__1::__tree_node_base"** [ %672, %670 ], [ %647, %646 ]
  %651 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %649, i64 0, i32 1
  %652 = load i32, i32* %651, align 4
  %653 = icmp sgt i32 %652, 37
  br i1 %653, label %654, label %660

654:                                              ; preds = %648
  %655 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %649, i64 0, i32 0, i32 0, i32 0
  %656 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %655, align 8
  %657 = icmp eq %"class.std::__1::__tree_node_base"* %656, null
  br i1 %657, label %658, label %670

658:                                              ; preds = %654
  %659 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %649, i64 0, i32 0, i32 0
  br label %676

660:                                              ; preds = %648
  %661 = icmp eq i32 %652, 37
  br i1 %661, label %668, label %662

662:                                              ; preds = %660
  %663 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %649, i64 0, i32 0, i32 1
  %664 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %663, align 8
  %665 = icmp eq %"class.std::__1::__tree_node_base"* %664, null
  br i1 %665, label %666, label %670

666:                                              ; preds = %662
  %667 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %649, i64 0, i32 0, i32 0
  br label %676

668:                                              ; preds = %660
  %669 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %649, i64 0, i32 0, i32 0
  br label %676

670:                                              ; preds = %662, %654
  %671 = phi %"class.std::__1::__tree_node_base"* [ %656, %654 ], [ %664, %662 ]
  %672 = phi %"class.std::__1::__tree_node_base"** [ %655, %654 ], [ %663, %662 ]
  %673 = bitcast %"class.std::__1::__tree_node_base"* %671 to %"class.std::__1::__tree_node"*
  br label %648

674:                                              ; preds = %645
  %675 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %641, i64 0, i32 0
  br label %676

676:                                              ; preds = %674, %668, %666, %658
  %677 = phi %"class.std::__1::__tree_end_node"* [ %641, %674 ], [ %659, %658 ], [ %667, %666 ], [ %669, %668 ]
  %678 = phi %"class.std::__1::__tree_node_base"** [ %675, %674 ], [ %655, %658 ], [ %663, %666 ], [ %650, %668 ]
  %679 = bitcast %"class.std::__1::__tree_node_base"** %678 to %"class.std::__1::__tree_node"**
  %680 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %679, align 8
  %681 = icmp eq %"class.std::__1::__tree_node"* %680, null
  br i1 %681, label %682, label %833

682:                                              ; preds = %676
  %683 = call i8* @_Znwm(i64 32) #18, !noalias !27
  %684 = getelementptr inbounds i8, i8* %683, i64 28
  %685 = bitcast i8* %684 to i32*
  store i32 37, i32* %685, align 4, !noalias !27
  %686 = bitcast i8* %683 to %"class.std::__1::__tree_node_base"*
  %687 = getelementptr inbounds i8, i8* %683, i64 16
  %688 = bitcast i8* %687 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %683, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %677, %"class.std::__1::__tree_end_node"** %688, align 8
  %689 = bitcast %"class.std::__1::__tree_node_base"** %678 to i8**
  store i8* %683, i8** %689, align 8
  %690 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %640, i64 0, i32 0, i32 0
  %691 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %690, align 8
  %692 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %691, i64 0, i32 0
  %693 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %692, align 8
  %694 = icmp eq %"class.std::__1::__tree_node_base"* %693, null
  br i1 %694, label %699, label %695

695:                                              ; preds = %682
  %696 = ptrtoint %"class.std::__1::__tree_node_base"* %693 to i64
  %697 = bitcast %"class.std::__1::set.14"* %640 to i64*
  store i64 %696, i64* %697, align 8
  %698 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %678, align 8
  br label %699

699:                                              ; preds = %695, %682
  %700 = phi %"class.std::__1::__tree_node_base"* [ %686, %682 ], [ %698, %695 ]
  %701 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %702 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %701, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %702, %"class.std::__1::__tree_node_base"* %700) #17
  %703 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %704 = load i64, i64* %703, align 8
  %705 = add i64 %704, 1
  store i64 %705, i64* %703, align 8
  br label %833

706:                                              ; preds = %638
  br i1 %644, label %735, label %707

707:                                              ; preds = %706
  %708 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %709

709:                                              ; preds = %731, %707
  %710 = phi %"class.std::__1::__tree_node"* [ %734, %731 ], [ %643, %707 ]
  %711 = phi %"class.std::__1::__tree_node_base"** [ %733, %731 ], [ %708, %707 ]
  %712 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %710, i64 0, i32 1
  %713 = load i32, i32* %712, align 4
  %714 = icmp sgt i32 %713, 36
  br i1 %714, label %715, label %721

715:                                              ; preds = %709
  %716 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %710, i64 0, i32 0, i32 0, i32 0
  %717 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %716, align 8
  %718 = icmp eq %"class.std::__1::__tree_node_base"* %717, null
  br i1 %718, label %719, label %731

719:                                              ; preds = %715
  %720 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %710, i64 0, i32 0, i32 0
  br label %737

721:                                              ; preds = %709
  %722 = icmp eq i32 %713, 36
  br i1 %722, label %729, label %723

723:                                              ; preds = %721
  %724 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %710, i64 0, i32 0, i32 1
  %725 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %724, align 8
  %726 = icmp eq %"class.std::__1::__tree_node_base"* %725, null
  br i1 %726, label %727, label %731

727:                                              ; preds = %723
  %728 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %710, i64 0, i32 0, i32 0
  br label %737

729:                                              ; preds = %721
  %730 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %710, i64 0, i32 0, i32 0
  br label %737

731:                                              ; preds = %723, %715
  %732 = phi %"class.std::__1::__tree_node_base"* [ %717, %715 ], [ %725, %723 ]
  %733 = phi %"class.std::__1::__tree_node_base"** [ %716, %715 ], [ %724, %723 ]
  %734 = bitcast %"class.std::__1::__tree_node_base"* %732 to %"class.std::__1::__tree_node"*
  br label %709

735:                                              ; preds = %706
  %736 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %641, i64 0, i32 0
  br label %737

737:                                              ; preds = %735, %729, %727, %719
  %738 = phi %"class.std::__1::__tree_end_node"* [ %641, %735 ], [ %720, %719 ], [ %728, %727 ], [ %730, %729 ]
  %739 = phi %"class.std::__1::__tree_node_base"** [ %736, %735 ], [ %716, %719 ], [ %724, %727 ], [ %711, %729 ]
  %740 = bitcast %"class.std::__1::__tree_node_base"** %739 to %"class.std::__1::__tree_node"**
  %741 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %740, align 8
  %742 = icmp eq %"class.std::__1::__tree_node"* %741, null
  br i1 %742, label %743, label %833

743:                                              ; preds = %737
  %744 = call i8* @_Znwm(i64 32) #18, !noalias !30
  %745 = getelementptr inbounds i8, i8* %744, i64 28
  %746 = bitcast i8* %745 to i32*
  store i32 36, i32* %746, align 4, !noalias !30
  %747 = bitcast i8* %744 to %"class.std::__1::__tree_node_base"*
  %748 = getelementptr inbounds i8, i8* %744, i64 16
  %749 = bitcast i8* %748 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %744, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %738, %"class.std::__1::__tree_end_node"** %749, align 8
  %750 = bitcast %"class.std::__1::__tree_node_base"** %739 to i8**
  store i8* %744, i8** %750, align 8
  %751 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %640, i64 0, i32 0, i32 0
  %752 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %751, align 8
  %753 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %752, i64 0, i32 0
  %754 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %753, align 8
  %755 = icmp eq %"class.std::__1::__tree_node_base"* %754, null
  br i1 %755, label %760, label %756

756:                                              ; preds = %743
  %757 = ptrtoint %"class.std::__1::__tree_node_base"* %754 to i64
  %758 = bitcast %"class.std::__1::set.14"* %640 to i64*
  store i64 %757, i64* %758, align 8
  %759 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %739, align 8
  br label %760

760:                                              ; preds = %756, %743
  %761 = phi %"class.std::__1::__tree_node_base"* [ %747, %743 ], [ %759, %756 ]
  %762 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %763 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %762, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %763, %"class.std::__1::__tree_node_base"* %761) #17
  %764 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %765 = load i64, i64* %764, align 8
  %766 = add i64 %765, 1
  store i64 %766, i64* %764, align 8
  br label %833

767:                                              ; preds = %246
  %768 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %769 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %770 = bitcast %"class.std::__1::__tree_end_node"* %769 to %"class.std::__1::__tree_node"**
  %771 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %770, align 8
  %772 = icmp eq %"class.std::__1::__tree_node"* %771, null
  br i1 %772, label %801, label %773

773:                                              ; preds = %767
  %774 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %775

775:                                              ; preds = %797, %773
  %776 = phi %"class.std::__1::__tree_node"* [ %800, %797 ], [ %771, %773 ]
  %777 = phi %"class.std::__1::__tree_node_base"** [ %799, %797 ], [ %774, %773 ]
  %778 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %776, i64 0, i32 1
  %779 = load i32, i32* %778, align 4
  %780 = icmp sgt i32 %779, 40
  br i1 %780, label %781, label %787

781:                                              ; preds = %775
  %782 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %776, i64 0, i32 0, i32 0, i32 0
  %783 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %782, align 8
  %784 = icmp eq %"class.std::__1::__tree_node_base"* %783, null
  br i1 %784, label %785, label %797

785:                                              ; preds = %781
  %786 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %776, i64 0, i32 0, i32 0
  br label %803

787:                                              ; preds = %775
  %788 = icmp eq i32 %779, 40
  br i1 %788, label %795, label %789

789:                                              ; preds = %787
  %790 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %776, i64 0, i32 0, i32 1
  %791 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %790, align 8
  %792 = icmp eq %"class.std::__1::__tree_node_base"* %791, null
  br i1 %792, label %793, label %797

793:                                              ; preds = %789
  %794 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %776, i64 0, i32 0, i32 0
  br label %803

795:                                              ; preds = %787
  %796 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %776, i64 0, i32 0, i32 0
  br label %803

797:                                              ; preds = %789, %781
  %798 = phi %"class.std::__1::__tree_node_base"* [ %783, %781 ], [ %791, %789 ]
  %799 = phi %"class.std::__1::__tree_node_base"** [ %782, %781 ], [ %790, %789 ]
  %800 = bitcast %"class.std::__1::__tree_node_base"* %798 to %"class.std::__1::__tree_node"*
  br label %775

801:                                              ; preds = %767
  %802 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %769, i64 0, i32 0
  br label %803

803:                                              ; preds = %801, %795, %793, %785
  %804 = phi %"class.std::__1::__tree_end_node"* [ %769, %801 ], [ %786, %785 ], [ %794, %793 ], [ %796, %795 ]
  %805 = phi %"class.std::__1::__tree_node_base"** [ %802, %801 ], [ %782, %785 ], [ %790, %793 ], [ %777, %795 ]
  %806 = bitcast %"class.std::__1::__tree_node_base"** %805 to %"class.std::__1::__tree_node"**
  %807 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %806, align 8
  %808 = icmp eq %"class.std::__1::__tree_node"* %807, null
  br i1 %808, label %809, label %833

809:                                              ; preds = %803
  %810 = call i8* @_Znwm(i64 32) #18, !noalias !33
  %811 = getelementptr inbounds i8, i8* %810, i64 28
  %812 = bitcast i8* %811 to i32*
  store i32 40, i32* %812, align 4, !noalias !33
  %813 = bitcast i8* %810 to %"class.std::__1::__tree_node_base"*
  %814 = getelementptr inbounds i8, i8* %810, i64 16
  %815 = bitcast i8* %814 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %810, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %804, %"class.std::__1::__tree_end_node"** %815, align 8
  %816 = bitcast %"class.std::__1::__tree_node_base"** %805 to i8**
  store i8* %810, i8** %816, align 8
  %817 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %768, i64 0, i32 0, i32 0
  %818 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %817, align 8
  %819 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %818, i64 0, i32 0
  %820 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %819, align 8
  %821 = icmp eq %"class.std::__1::__tree_node_base"* %820, null
  br i1 %821, label %826, label %822

822:                                              ; preds = %809
  %823 = ptrtoint %"class.std::__1::__tree_node_base"* %820 to i64
  %824 = bitcast %"class.std::__1::set.14"* %768 to i64*
  store i64 %823, i64* %824, align 8
  %825 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %805, align 8
  br label %826

826:                                              ; preds = %822, %809
  %827 = phi %"class.std::__1::__tree_node_base"* [ %813, %809 ], [ %825, %822 ]
  %828 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %829 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %828, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %829, %"class.std::__1::__tree_node_base"* %827) #17
  %830 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %831 = load i64, i64* %830, align 8
  %832 = add i64 %831, 1
  store i64 %832, i64* %830, align 8
  br label %833

833:                                              ; preds = %826, %803, %760, %737, %699, %676, %631, %608, %570, %547, %501, %478, %440, %417, %372, %349, %311, %288, %246, %508
  %834 = icmp eq i32 %6, 2
  %835 = and i1 %834, %5
  br i1 %835, label %836, label %971

836:                                              ; preds = %833
  %837 = icmp eq i32 %2, 6
  br i1 %837, label %904, label %838

838:                                              ; preds = %836
  %839 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %840 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %841 = bitcast %"class.std::__1::__tree_end_node"* %840 to %"class.std::__1::__tree_node"**
  %842 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %841, align 8
  %843 = icmp eq %"class.std::__1::__tree_node"* %842, null
  br i1 %843, label %872, label %844

844:                                              ; preds = %838
  %845 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %846

846:                                              ; preds = %868, %844
  %847 = phi %"class.std::__1::__tree_node"* [ %871, %868 ], [ %842, %844 ]
  %848 = phi %"class.std::__1::__tree_node_base"** [ %870, %868 ], [ %845, %844 ]
  %849 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %847, i64 0, i32 1
  %850 = load i32, i32* %849, align 4
  %851 = icmp sgt i32 %850, 27
  br i1 %851, label %852, label %858

852:                                              ; preds = %846
  %853 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %847, i64 0, i32 0, i32 0, i32 0
  %854 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %853, align 8
  %855 = icmp eq %"class.std::__1::__tree_node_base"* %854, null
  br i1 %855, label %856, label %868

856:                                              ; preds = %852
  %857 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %847, i64 0, i32 0, i32 0
  br label %874

858:                                              ; preds = %846
  %859 = icmp eq i32 %850, 27
  br i1 %859, label %866, label %860

860:                                              ; preds = %858
  %861 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %847, i64 0, i32 0, i32 1
  %862 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %861, align 8
  %863 = icmp eq %"class.std::__1::__tree_node_base"* %862, null
  br i1 %863, label %864, label %868

864:                                              ; preds = %860
  %865 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %847, i64 0, i32 0, i32 0
  br label %874

866:                                              ; preds = %858
  %867 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %847, i64 0, i32 0, i32 0
  br label %874

868:                                              ; preds = %860, %852
  %869 = phi %"class.std::__1::__tree_node_base"* [ %854, %852 ], [ %862, %860 ]
  %870 = phi %"class.std::__1::__tree_node_base"** [ %853, %852 ], [ %861, %860 ]
  %871 = bitcast %"class.std::__1::__tree_node_base"* %869 to %"class.std::__1::__tree_node"*
  br label %846

872:                                              ; preds = %838
  %873 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %840, i64 0, i32 0
  br label %874

874:                                              ; preds = %872, %866, %864, %856
  %875 = phi %"class.std::__1::__tree_end_node"* [ %840, %872 ], [ %857, %856 ], [ %865, %864 ], [ %867, %866 ]
  %876 = phi %"class.std::__1::__tree_node_base"** [ %873, %872 ], [ %853, %856 ], [ %861, %864 ], [ %848, %866 ]
  %877 = bitcast %"class.std::__1::__tree_node_base"** %876 to %"class.std::__1::__tree_node"**
  %878 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %877, align 8
  %879 = icmp eq %"class.std::__1::__tree_node"* %878, null
  br i1 %879, label %880, label %904

880:                                              ; preds = %874
  %881 = call i8* @_Znwm(i64 32) #18, !noalias !36
  %882 = getelementptr inbounds i8, i8* %881, i64 28
  %883 = bitcast i8* %882 to i32*
  store i32 27, i32* %883, align 4, !noalias !36
  %884 = bitcast i8* %881 to %"class.std::__1::__tree_node_base"*
  %885 = getelementptr inbounds i8, i8* %881, i64 16
  %886 = bitcast i8* %885 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %881, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %875, %"class.std::__1::__tree_end_node"** %886, align 8
  %887 = bitcast %"class.std::__1::__tree_node_base"** %876 to i8**
  store i8* %881, i8** %887, align 8
  %888 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %839, i64 0, i32 0, i32 0
  %889 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %888, align 8
  %890 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %889, i64 0, i32 0
  %891 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %890, align 8
  %892 = icmp eq %"class.std::__1::__tree_node_base"* %891, null
  br i1 %892, label %897, label %893

893:                                              ; preds = %880
  %894 = ptrtoint %"class.std::__1::__tree_node_base"* %891 to i64
  %895 = bitcast %"class.std::__1::set.14"* %839 to i64*
  store i64 %894, i64* %895, align 8
  %896 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %876, align 8
  br label %897

897:                                              ; preds = %893, %880
  %898 = phi %"class.std::__1::__tree_node_base"* [ %884, %880 ], [ %896, %893 ]
  %899 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %900 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %899, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %900, %"class.std::__1::__tree_node_base"* %898) #17
  %901 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %902 = load i64, i64* %901, align 8
  %903 = add i64 %902, 1
  store i64 %903, i64* %901, align 8
  br label %904

904:                                              ; preds = %897, %874, %836
  br i1 %4, label %905, label %971

905:                                              ; preds = %904
  %906 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %907 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %908 = bitcast %"class.std::__1::__tree_end_node"* %907 to %"class.std::__1::__tree_node"**
  %909 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %908, align 8
  %910 = icmp eq %"class.std::__1::__tree_node"* %909, null
  br i1 %910, label %939, label %911

911:                                              ; preds = %905
  %912 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %913

913:                                              ; preds = %935, %911
  %914 = phi %"class.std::__1::__tree_node"* [ %938, %935 ], [ %909, %911 ]
  %915 = phi %"class.std::__1::__tree_node_base"** [ %937, %935 ], [ %912, %911 ]
  %916 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %914, i64 0, i32 1
  %917 = load i32, i32* %916, align 4
  %918 = icmp sgt i32 %917, 48
  br i1 %918, label %919, label %925

919:                                              ; preds = %913
  %920 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %914, i64 0, i32 0, i32 0, i32 0
  %921 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %920, align 8
  %922 = icmp eq %"class.std::__1::__tree_node_base"* %921, null
  br i1 %922, label %923, label %935

923:                                              ; preds = %919
  %924 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %914, i64 0, i32 0, i32 0
  br label %941

925:                                              ; preds = %913
  %926 = icmp eq i32 %917, 48
  br i1 %926, label %933, label %927

927:                                              ; preds = %925
  %928 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %914, i64 0, i32 0, i32 1
  %929 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %928, align 8
  %930 = icmp eq %"class.std::__1::__tree_node_base"* %929, null
  br i1 %930, label %931, label %935

931:                                              ; preds = %927
  %932 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %914, i64 0, i32 0, i32 0
  br label %941

933:                                              ; preds = %925
  %934 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %914, i64 0, i32 0, i32 0
  br label %941

935:                                              ; preds = %927, %919
  %936 = phi %"class.std::__1::__tree_node_base"* [ %921, %919 ], [ %929, %927 ]
  %937 = phi %"class.std::__1::__tree_node_base"** [ %920, %919 ], [ %928, %927 ]
  %938 = bitcast %"class.std::__1::__tree_node_base"* %936 to %"class.std::__1::__tree_node"*
  br label %913

939:                                              ; preds = %905
  %940 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %907, i64 0, i32 0
  br label %941

941:                                              ; preds = %939, %933, %931, %923
  %942 = phi %"class.std::__1::__tree_end_node"* [ %907, %939 ], [ %924, %923 ], [ %932, %931 ], [ %934, %933 ]
  %943 = phi %"class.std::__1::__tree_node_base"** [ %940, %939 ], [ %920, %923 ], [ %928, %931 ], [ %915, %933 ]
  %944 = bitcast %"class.std::__1::__tree_node_base"** %943 to %"class.std::__1::__tree_node"**
  %945 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %944, align 8
  %946 = icmp eq %"class.std::__1::__tree_node"* %945, null
  br i1 %946, label %947, label %971

947:                                              ; preds = %941
  %948 = call i8* @_Znwm(i64 32) #18, !noalias !39
  %949 = getelementptr inbounds i8, i8* %948, i64 28
  %950 = bitcast i8* %949 to i32*
  store i32 48, i32* %950, align 4, !noalias !39
  %951 = bitcast i8* %948 to %"class.std::__1::__tree_node_base"*
  %952 = getelementptr inbounds i8, i8* %948, i64 16
  %953 = bitcast i8* %952 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %948, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %942, %"class.std::__1::__tree_end_node"** %953, align 8
  %954 = bitcast %"class.std::__1::__tree_node_base"** %943 to i8**
  store i8* %948, i8** %954, align 8
  %955 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %906, i64 0, i32 0, i32 0
  %956 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %955, align 8
  %957 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %956, i64 0, i32 0
  %958 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %957, align 8
  %959 = icmp eq %"class.std::__1::__tree_node_base"* %958, null
  br i1 %959, label %964, label %960

960:                                              ; preds = %947
  %961 = ptrtoint %"class.std::__1::__tree_node_base"* %958 to i64
  %962 = bitcast %"class.std::__1::set.14"* %906 to i64*
  store i64 %961, i64* %962, align 8
  %963 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %943, align 8
  br label %964

964:                                              ; preds = %960, %947
  %965 = phi %"class.std::__1::__tree_node_base"* [ %951, %947 ], [ %963, %960 ]
  %966 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %967 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %966, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %967, %"class.std::__1::__tree_node_base"* %965) #17
  %968 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %969 = load i64, i64* %968, align 8
  %970 = add i64 %969, 1
  store i64 %970, i64* %968, align 8
  br label %971

971:                                              ; preds = %833, %904, %941, %964, %99
  %972 = phi i32* [ %100, %99 ], [ %112, %964 ], [ %112, %941 ], [ %112, %904 ], [ %112, %833 ]
  %973 = load i32, i32* %972, align 8
  ret i32 %973
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder20makeSampledImageTypeEj(%"class.spv::Builder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::tuple.267", align 8
  %4 = alloca %"class.std::__1::tuple.219", align 1
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 27, i32* %9, align 4
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %15 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %19 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 4
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br i1 %29, label %30, label %64

30:                                               ; preds = %2
  %31 = bitcast i32* %10 to i8*
  %32 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  %33 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  br label %48

35:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 27, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store i32* %9, i32** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %36 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %37 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %36, 0
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 4
  %40 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = shl i64 %44, 29
  %46 = ashr i64 %45, 32
  %47 = icmp slt i64 %61, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br i1 %47, label %48, label %64

48:                                               ; preds = %30, %35
  %49 = phi i64 [ 0, %30 ], [ %61, %35 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #17
  store i32 27, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  store i32* %10, i32** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #17
  %50 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %51 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %50, 0
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to %"class.spv::Instruction"***
  %54 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %53, align 8
  %55 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %49
  %56 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #17
  %57 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %56, i64 0, i32 4, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %1
  %61 = add nuw nsw i64 %49, 1
  br i1 %60, label %62, label %35

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %56, i64 0, i32 1
  br label %210

64:                                               ; preds = %35, %2
  %65 = call i8* @_Znwm(i64 80) #18
  %66 = bitcast i8* %65 to %"class.spv::Instruction"*
  %67 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 8
  %70 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 8
  %72 = bitcast i8* %71 to i32*
  store i32 %69, i32* %72, align 8
  %73 = getelementptr inbounds i8, i8* %65, i64 12
  %74 = bitcast i8* %73 to i32*
  store i32 0, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %65, i64 16
  %76 = bitcast i8* %75 to i32*
  store i32 27, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %65, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 56, i1 false) #17
  %78 = ptrtoint i8* %65 to i64
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %66, i32 %1)
  %79 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #17
  store i32 27, i32* %11, align 4
  %80 = bitcast %"class.std::__1::tuple.267"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #17
  %81 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #17
  %83 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %4) #17
  %84 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %83, 0
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #17
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 4
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %86 to %"class.spv::Instruction"***
  %88 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %87, align 8
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 5
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %89 to %"class.spv::Instruction"***
  %91 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %90, align 8
  %92 = icmp eq %"class.spv::Instruction"** %88, %91
  %93 = ptrtoint %"class.spv::Instruction"** %91 to i64
  br i1 %92, label %99, label %94

94:                                               ; preds = %64
  %95 = bitcast %"class.spv::Instruction"** %88 to i64*
  store i64 %78, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %88, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  store i64 %97, i64* %98, align 8
  br label %156

99:                                               ; preds = %64
  %100 = ptrtoint %"class.spv::Instruction"** %88 to i64
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %100, %103
  %105 = ashr exact i64 %104, 3
  %106 = add nsw i64 %105, 1
  %107 = icmp ugt i64 %106, 2305843009213693951
  br i1 %107, label %108, label %110

108:                                              ; preds = %99
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #20
  unreachable

110:                                              ; preds = %99
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %89 to i64*
  %112 = sub i64 %93, %103
  %113 = ashr exact i64 %112, 3
  %114 = icmp ult i64 %113, 1152921504606846975
  br i1 %114, label %115, label %123

115:                                              ; preds = %110
  %116 = ashr exact i64 %112, 2
  %117 = icmp ult i64 %116, %106
  %118 = select i1 %117, i64 %106, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %115
  %121 = icmp ugt i64 %118, 2305843009213693951
  br i1 %121, label %122, label %123

122:                                              ; preds = %120
  call void @abort() #20
  unreachable

123:                                              ; preds = %120, %110
  %124 = phi i64 [ %118, %120 ], [ 2305843009213693951, %110 ]
  %125 = shl i64 %124, 3
  %126 = call i8* @_Znwm(i64 %125) #18
  %127 = bitcast i8* %126 to %"class.spv::Instruction"**
  br label %128

128:                                              ; preds = %123, %115
  %129 = phi i64 [ %124, %123 ], [ 0, %115 ]
  %130 = phi %"class.spv::Instruction"** [ %127, %123 ], [ null, %115 ]
  %131 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %130, i64 %105
  %132 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %130, i64 %129
  %133 = ptrtoint %"class.spv::Instruction"** %132 to i64
  %134 = bitcast %"class.spv::Instruction"** %131 to i64*
  store i64 %78, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 1
  %136 = ptrtoint %"class.spv::Instruction"** %135 to i64
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"class.spv::Instruction"***
  %138 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %137, align 8
  %139 = load i64, i64* %101, align 8
  %140 = ptrtoint %"class.spv::Instruction"** %138 to i64
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 3
  %143 = sub nsw i64 0, %142
  %144 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %143
  %145 = ptrtoint %"class.spv::Instruction"** %144 to i64
  %146 = icmp sgt i64 %141, 0
  br i1 %146, label %147, label %151

147:                                              ; preds = %128
  %148 = bitcast %"class.spv::Instruction"** %144 to i8*
  %149 = bitcast %"class.spv::Instruction"** %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %141, i1 false) #17
  %150 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %137, align 8
  br label %151

151:                                              ; preds = %147, %128
  %152 = phi %"class.spv::Instruction"** [ %138, %128 ], [ %150, %147 ]
  store i64 %145, i64* %102, align 8
  store i64 %136, i64* %101, align 8
  store i64 %133, i64* %111, align 8
  %153 = icmp eq %"class.spv::Instruction"** %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %151
  %155 = bitcast %"class.spv::Instruction"** %152 to i8*
  call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %94, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #17
  %157 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #17
  %158 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %78, i64* %158, align 8
  %159 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %160 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %159, align 8
  %161 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %162 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %161, align 8
  %163 = icmp ult %"class.std::__1::unique_ptr"* %160, %162
  br i1 %163, label %164, label %170

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %78, i64* %166, align 8
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 1
  %168 = ptrtoint %"class.std::__1::unique_ptr"* %167 to i64
  %169 = bitcast %"class.std::__1::unique_ptr"** %159 to i64*
  store i64 %168, i64* %169, align 8
  br label %172

170:                                              ; preds = %156
  %171 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %171, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %12) #17
  br label %172

172:                                              ; preds = %164, %170
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %173, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %173, align 8
  %175 = icmp eq %"class.spv::Instruction"* %174, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %172
  %177 = bitcast %"class.spv::Instruction"* %174 to void (%"class.spv::Instruction"*)***
  %178 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %178, i64 1
  %180 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %179, align 8
  call void %180(%"class.spv::Instruction"* nonnull %174) #17
  br label %181

181:                                              ; preds = %172, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #17
  %182 = load i32, i32* %72, align 8
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %185 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %186 = bitcast %"class.spv::Instruction"*** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::vector.55"* %184 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 %187, %189
  %191 = ashr exact i64 %190, 3
  %192 = icmp ugt i64 %191, %183
  %193 = inttoptr i64 %189 to %"class.spv::Instruction"**
  br i1 %192, label %206, label %194

194:                                              ; preds = %181
  %195 = add i32 %182, 16
  %196 = zext i32 %195 to i64
  %197 = icmp ult i64 %191, %196
  br i1 %197, label %198, label %202

198:                                              ; preds = %194
  %199 = sub nsw i64 %196, %191
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %184, i64 %199) #17
  %200 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %184, i64 0, i32 0, i32 0
  %201 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %200, align 8
  br label %206

202:                                              ; preds = %194
  %203 = icmp ugt i64 %191, %196
  br i1 %203, label %204, label %206

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %193, i64 %196
  store %"class.spv::Instruction"** %205, %"class.spv::Instruction"*** %185, align 8
  br label %206

206:                                              ; preds = %181, %198, %202, %204
  %207 = phi %"class.spv::Instruction"** [ %193, %204 ], [ %193, %202 ], [ %201, %198 ], [ %193, %181 ]
  %208 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %207, i64 %183
  %209 = bitcast %"class.spv::Instruction"** %208 to i8**
  store i8* %65, i8** %209, align 8
  br label %210

210:                                              ; preds = %62, %206
  %211 = phi i32* [ %72, %206 ], [ %63, %62 ]
  %212 = load i32, i32* %211, align 8
  ret i32 %212
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder29makeAccelerationStructureTypeEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::tuple.267", align 8
  %3 = alloca %"class.std::__1::tuple.219", align 1
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca i32, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 5341, i32* %8, align 4
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %14 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %25, label %26, label %171

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 80) #18
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %30, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %27, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 5341, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %27, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  %39 = ptrtoint i8* %27 to i64
  %40 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #17
  store i32 5341, i32* %9, align 4
  %41 = bitcast %"class.std::__1::tuple.267"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #17
  %44 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %3) #17
  %45 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 4
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to %"class.spv::Instruction"***
  %49 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 5
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to %"class.spv::Instruction"***
  %52 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %51, align 8
  %53 = icmp eq %"class.spv::Instruction"** %49, %52
  %54 = ptrtoint %"class.spv::Instruction"** %52 to i64
  br i1 %53, label %60, label %55

55:                                               ; preds = %26
  %56 = bitcast %"class.spv::Instruction"** %49 to i64*
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, i64 1
  %58 = ptrtoint %"class.spv::Instruction"** %57 to i64
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  store i64 %58, i64* %59, align 8
  br label %117

60:                                               ; preds = %26
  %61 = ptrtoint %"class.spv::Instruction"** %49 to i64
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %60
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %73 = sub i64 %54, %64
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %67
  %79 = select i1 %78, i64 %67, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  call void @abort() #20
  unreachable

84:                                               ; preds = %81, %71
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %71 ]
  %86 = shl i64 %85, 3
  %87 = call i8* @_Znwm(i64 %86) #18
  %88 = bitcast i8* %87 to %"class.spv::Instruction"**
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi %"class.spv::Instruction"** [ %88, %84 ], [ null, %76 ]
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %66
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %90
  %94 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %95 = bitcast %"class.spv::Instruction"** %92 to i64*
  store i64 %39, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.spv::Instruction"***
  %99 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  %100 = load i64, i64* %62, align 8
  %101 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 %104
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %89
  %109 = bitcast %"class.spv::Instruction"** %105 to i8*
  %110 = bitcast %"class.spv::Instruction"** %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 %102, i1 false) #17
  %111 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  br label %112

112:                                              ; preds = %108, %89
  %113 = phi %"class.spv::Instruction"** [ %99, %89 ], [ %111, %108 ]
  store i64 %106, i64* %63, align 8
  store i64 %97, i64* %62, align 8
  store i64 %94, i64* %72, align 8
  %114 = icmp eq %"class.spv::Instruction"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.spv::Instruction"** %113 to i8*
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %55, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #17
  %118 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #17
  %119 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %39, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %121 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %120, align 8
  %122 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %122, align 8
  %124 = icmp ult %"class.std::__1::unique_ptr"* %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %126, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %39, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 1
  %129 = ptrtoint %"class.std::__1::unique_ptr"* %128 to i64
  %130 = bitcast %"class.std::__1::unique_ptr"** %120 to i64*
  store i64 %129, i64* %130, align 8
  br label %133

131:                                              ; preds = %117
  %132 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %132, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %134, align 8
  %136 = icmp eq %"class.spv::Instruction"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.spv::Instruction"* %135 to void (%"class.spv::Instruction"*)***
  %139 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %139, i64 1
  %141 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %140, align 8
  call void %141(%"class.spv::Instruction"* nonnull %135) #17
  br label %142

142:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #17
  %143 = load i32, i32* %33, align 8
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %146 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %147 = bitcast %"class.spv::Instruction"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector.55"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = ashr exact i64 %151, 3
  %153 = icmp ugt i64 %152, %144
  %154 = inttoptr i64 %150 to %"class.spv::Instruction"**
  br i1 %153, label %167, label %155

155:                                              ; preds = %142
  %156 = add i32 %143, 16
  %157 = zext i32 %156 to i64
  %158 = icmp ult i64 %152, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %155
  %160 = sub nsw i64 %157, %152
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %145, i64 %160) #17
  %161 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %145, i64 0, i32 0, i32 0
  %162 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %161, align 8
  br label %167

163:                                              ; preds = %155
  %164 = icmp ugt i64 %152, %157
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, i64 %157
  store %"class.spv::Instruction"** %166, %"class.spv::Instruction"*** %146, align 8
  br label %167

167:                                              ; preds = %142, %159, %163, %165
  %168 = phi %"class.spv::Instruction"** [ %154, %165 ], [ %154, %163 ], [ %162, %159 ], [ %154, %142 ]
  %169 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %168, i64 %144
  %170 = bitcast %"class.spv::Instruction"** %169 to i8**
  store i8* %27, i8** %170, align 8
  br label %184

171:                                              ; preds = %1
  %172 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #17
  store i32 5341, i32* %11, align 4
  %173 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #17
  %174 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %175) #17
  %176 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %177 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %176, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %175) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #17
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 4
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to %"class.spv::Instruction"***
  %180 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %179, align 8
  %181 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %180, i64 -1
  %182 = bitcast %"class.spv::Instruction"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #17
  br label %184

184:                                              ; preds = %171, %167
  %185 = phi i64 [ %39, %167 ], [ %183, %171 ]
  %186 = inttoptr i64 %185 to %"class.spv::Instruction"*
  %187 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %186, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder16makeRayQueryTypeEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::tuple.267", align 8
  %3 = alloca %"class.std::__1::tuple.219", align 1
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca i32, align 4
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 4472, i32* %8, align 4
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 34, i32 0
  %14 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %25, label %26, label %171

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 80) #18
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  %31 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %30, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %27, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 4472, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %27, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  %39 = ptrtoint i8* %27 to i64
  %40 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #17
  store i32 4472, i32* %9, align 4
  %41 = bitcast %"class.std::__1::tuple.267"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #17
  %44 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %3) #17
  %45 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %44, 0
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 4
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to %"class.spv::Instruction"***
  %49 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %45, i64 5
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to %"class.spv::Instruction"***
  %52 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %51, align 8
  %53 = icmp eq %"class.spv::Instruction"** %49, %52
  %54 = ptrtoint %"class.spv::Instruction"** %52 to i64
  br i1 %53, label %60, label %55

55:                                               ; preds = %26
  %56 = bitcast %"class.spv::Instruction"** %49 to i64*
  store i64 %39, i64* %56, align 8
  %57 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, i64 1
  %58 = ptrtoint %"class.spv::Instruction"** %57 to i64
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  store i64 %58, i64* %59, align 8
  br label %117

60:                                               ; preds = %26
  %61 = ptrtoint %"class.spv::Instruction"** %49 to i64
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = ashr exact i64 %65, 3
  %67 = add nsw i64 %66, 1
  %68 = icmp ugt i64 %67, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %60
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %73 = sub i64 %54, %64
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %71
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %67
  %79 = select i1 %78, i64 %67, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  call void @abort() #20
  unreachable

84:                                               ; preds = %81, %71
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %71 ]
  %86 = shl i64 %85, 3
  %87 = call i8* @_Znwm(i64 %86) #18
  %88 = bitcast i8* %87 to %"class.spv::Instruction"**
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi %"class.spv::Instruction"** [ %88, %84 ], [ null, %76 ]
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %66
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %90
  %94 = ptrtoint %"class.spv::Instruction"** %93 to i64
  %95 = bitcast %"class.spv::Instruction"** %92 to i64*
  store i64 %39, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 1
  %97 = ptrtoint %"class.spv::Instruction"** %96 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.spv::Instruction"***
  %99 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  %100 = load i64, i64* %62, align 8
  %101 = ptrtoint %"class.spv::Instruction"** %99 to i64
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 3
  %104 = sub nsw i64 0, %103
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, i64 %104
  %106 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %107 = icmp sgt i64 %102, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %89
  %109 = bitcast %"class.spv::Instruction"** %105 to i8*
  %110 = bitcast %"class.spv::Instruction"** %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 %102, i1 false) #17
  %111 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %98, align 8
  br label %112

112:                                              ; preds = %108, %89
  %113 = phi %"class.spv::Instruction"** [ %99, %89 ], [ %111, %108 ]
  store i64 %106, i64* %63, align 8
  store i64 %97, i64* %62, align 8
  store i64 %94, i64* %72, align 8
  %114 = icmp eq %"class.spv::Instruction"** %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.spv::Instruction"** %113 to i8*
  call void @_ZdlPv(i8* %116) #18
  br label %117

117:                                              ; preds = %55, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #17
  %118 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #17
  %119 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %39, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %121 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %120, align 8
  %122 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %123 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %122, align 8
  %124 = icmp ult %"class.std::__1::unique_ptr"* %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %126, align 8
  %127 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %39, i64* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 1
  %129 = ptrtoint %"class.std::__1::unique_ptr"* %128 to i64
  %130 = bitcast %"class.std::__1::unique_ptr"** %120 to i64*
  store i64 %129, i64* %130, align 8
  br label %133

131:                                              ; preds = %117
  %132 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %132, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %134, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %134, align 8
  %136 = icmp eq %"class.spv::Instruction"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.spv::Instruction"* %135 to void (%"class.spv::Instruction"*)***
  %139 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %139, i64 1
  %141 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %140, align 8
  call void %141(%"class.spv::Instruction"* nonnull %135) #17
  br label %142

142:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #17
  %143 = load i32, i32* %33, align 8
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %146 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %147 = bitcast %"class.spv::Instruction"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector.55"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = ashr exact i64 %151, 3
  %153 = icmp ugt i64 %152, %144
  %154 = inttoptr i64 %150 to %"class.spv::Instruction"**
  br i1 %153, label %167, label %155

155:                                              ; preds = %142
  %156 = add i32 %143, 16
  %157 = zext i32 %156 to i64
  %158 = icmp ult i64 %152, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %155
  %160 = sub nsw i64 %157, %152
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %145, i64 %160) #17
  %161 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %145, i64 0, i32 0, i32 0
  %162 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %161, align 8
  br label %167

163:                                              ; preds = %155
  %164 = icmp ugt i64 %152, %157
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, i64 %157
  store %"class.spv::Instruction"** %166, %"class.spv::Instruction"*** %146, align 8
  br label %167

167:                                              ; preds = %142, %159, %163, %165
  %168 = phi %"class.spv::Instruction"** [ %154, %165 ], [ %154, %163 ], [ %162, %159 ], [ %154, %142 ]
  %169 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %168, i64 %144
  %170 = bitcast %"class.spv::Instruction"** %169 to i8**
  store i8* %27, i8** %170, align 8
  br label %184

171:                                              ; preds = %1
  %172 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #17
  store i32 4472, i32* %11, align 4
  %173 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #17
  %174 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %175) #17
  %176 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %177 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %176, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %175) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #17
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 4
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to %"class.spv::Instruction"***
  %180 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %179, align 8
  %181 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %180, i64 -1
  %182 = bitcast %"class.spv::Instruction"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #17
  br label %184

184:                                              ; preds = %171, %167
  %185 = phi i64 [ %39, %167 ], [ %183, %171 ]
  %186 = inttoptr i64 %185 to %"class.spv::Instruction"*
  %187 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %186, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  ret i32 %188
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3spv7Builder14getDerefTypeIdEj(%"class.spv::Builder"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %5 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %3
  %7 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, align 8
  %8 = icmp eq %"class.spv::Instruction"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %12, %9 ], [ 0, %2 ]
  %15 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %14
  %16 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %15, align 8
  %17 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %16, i64 0, i32 4, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 1
  %20 = load i32, i32* %19, align 4
  ret i32 %20
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3spv7Builder21getMostBasicTypeClassEj(%"class.spv::Builder"* readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %4 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %3, align 8
  br label %5

5:                                                ; preds = %15, %2
  %6 = phi i32 [ %1, %2 ], [ %17, %15 ]
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %4, i64 %7
  %9 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %22 [
    i32 23, label %12
    i32 24, label %12
    i32 28, label %12
    i32 29, label %12
    i32 32, label %18
  ]

12:                                               ; preds = %5, %5, %5, %5
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 4, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  br label %15

15:                                               ; preds = %12, %18
  %16 = phi i32* [ %14, %12 ], [ %21, %18 ]
  %17 = load i32, i32* %16, align 4
  br label %5

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 4, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 1
  br label %15

22:                                               ; preds = %5
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3spv7Builder22getNumTypeConstituentsEj(%"class.spv::Builder"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %5 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %3
  %7 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %36 [
    i32 30, label %26
    i32 28, label %15
    i32 24, label %10
    i32 23, label %10
  ]

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 1
  %14 = load i32, i32* %13, align 4
  br label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %20
  %22 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %22, i64 0, i32 4, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = load i32, i32* %24, align 4
  br label %36

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4
  %28 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.26"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = lshr exact i64 %33, 2
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %2, %26, %15, %10
  %37 = phi i32 [ %35, %26 ], [ %25, %15 ], [ %14, %10 ], [ 1, %2 ]
  ret i32 %37
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3spv7Builder15getScalarTypeIdEj(%"class.spv::Builder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %4 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %3, align 8
  br label %5

5:                                                ; preds = %22, %2
  %6 = phi i32 [ %1, %2 ], [ %24, %22 ]
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %4, i64 %7
  %9 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %25 [
    i32 19, label %12
    i32 20, label %12
    i32 21, label %12
    i32 22, label %12
    i32 30, label %12
    i32 23, label %15
    i32 24, label %15
    i32 28, label %15
    i32 29, label %15
    i32 32, label %18
  ]

12:                                               ; preds = %5, %5, %5, %5, %5
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  br label %25

15:                                               ; preds = %5, %5, %5, %5
  %16 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 4, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  br label %22

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 4, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 1
  br label %22

22:                                               ; preds = %15, %18
  %23 = phi i32* [ %21, %18 ], [ %17, %15 ]
  %24 = load i32, i32* %23, align 4
  br label %5

25:                                               ; preds = %5, %12
  %26 = phi i32 [ %14, %12 ], [ 0, %5 ]
  ret i32 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3spv7Builder18getContainedTypeIdEj(%"class.spv::Builder"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %5 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %3
  %7 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %23 [
    i32 23, label %10
    i32 24, label %10
    i32 28, label %10
    i32 29, label %10
    i32 5358, label %10
    i32 32, label %13
    i32 30, label %17
  ]

10:                                               ; preds = %2, %2, %2, %2, %2
  %11 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  br label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 1
  br label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  br label %20

20:                                               ; preds = %17, %13, %10
  %21 = phi i32* [ %12, %10 ], [ %16, %13 ], [ %19, %17 ]
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %20, %2
  %24 = phi i32 [ 0, %2 ], [ %22, %20 ]
  ret i32 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3spv7Builder18getContainedTypeIdEji(%"class.spv::Builder"* nocapture readonly, i32, i32) local_unnamed_addr #7 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %6 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, i64 %4
  %8 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %26 [
    i32 23, label %11
    i32 24, label %11
    i32 28, label %11
    i32 29, label %11
    i32 5358, label %11
    i32 32, label %14
    i32 30, label %18
  ]

11:                                               ; preds = %3, %3, %3, %3, %3
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  br label %23

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 1
  br label %23

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 %19
  br label %23

23:                                               ; preds = %11, %14, %18
  %24 = phi i32* [ %22, %18 ], [ %17, %14 ], [ %13, %11 ]
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %23, %3
  %27 = phi i32 [ 0, %3 ], [ %25, %23 ]
  ret i32 %27
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3spv7Builder12containsTypeEjNS_2OpEj(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %6 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %5, align 8
  br label %7

7:                                                ; preds = %46, %4
  %8 = phi i32 [ %1, %4 ], [ %49, %46 ]
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, i64 %9
  %11 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %50 [
    i32 21, label %29
    i32 22, label %29
    i32 30, label %14
    i32 32, label %44
    i32 23, label %46
    i32 24, label %46
    i32 28, label %46
    i32 29, label %46
  ]

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4
  %16 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.26"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 2
  %23 = trunc i64 %22 to i32
  %24 = icmp sgt i32 %23, 0
  %25 = inttoptr i64 %20 to i32*
  br i1 %24, label %26, label %44

26:                                               ; preds = %14
  %27 = shl i64 %21, 30
  %28 = ashr exact i64 %27, 32
  br label %38

29:                                               ; preds = %7, %7
  %30 = icmp eq i32 %13, %2
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, %3
  br label %44

36:                                               ; preds = %38
  %37 = icmp slt i64 %43, %28
  br i1 %37, label %38, label %44

38:                                               ; preds = %26, %36
  %39 = phi i64 [ 0, %26 ], [ %43, %36 ]
  %40 = getelementptr inbounds i32, i32* %25, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = tail call zeroext i1 @_ZNK3spv7Builder12containsTypeEjNS_2OpEj(%"class.spv::Builder"* %0, i32 %41, i32 %2, i32 %3)
  %43 = add nuw nsw i64 %39, 1
  br i1 %42, label %44, label %36

44:                                               ; preds = %7, %38, %36, %14, %50, %31, %29
  %45 = phi i1 [ %51, %50 ], [ false, %29 ], [ %35, %31 ], [ false, %14 ], [ true, %38 ], [ false, %36 ], [ false, %7 ]
  ret i1 %45

46:                                               ; preds = %7, %7, %7, %7
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i32, i32* %48, align 4
  br label %7

50:                                               ; preds = %7
  %51 = icmp eq i32 %13, %2
  br label %44
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3spv7Builder36containsPhysicalStorageBufferOrArrayEj(%"class.spv::Builder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %4 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %3, align 8
  br label %5

5:                                                ; preds = %17, %2
  %6 = phi i32 [ %1, %2 ], [ %20, %17 ]
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %4, i64 %7
  %9 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %21 [
    i32 32, label %12
    i32 28, label %17
  ]

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 4, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 5349
  br label %21

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 4, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = load i32, i32* %19, align 4
  br label %5

21:                                               ; preds = %5, %12
  %22 = phi i1 [ %16, %12 ], [ false, %5 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jj(%"class.spv::Builder"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 %1, i32* %10, align 4
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %14 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %18 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %17, 0
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %18, i64 4
  %21 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = lshr exact i64 %25, 3
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %27, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %28, label %29, label %72

29:                                               ; preds = %5
  %30 = bitcast i32* %11 to i8*
  %31 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  %32 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  br label %34

34:                                               ; preds = %29, %55
  %35 = phi i64 [ 0, %29 ], [ %56, %55 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #17
  store i32 %1, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17
  store i32* %11, i32** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #17
  %36 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %37 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %36, 0
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to %"class.spv::Instruction"***
  %40 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %39, align 8
  %41 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %40, i64 %35
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #17
  %43 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, %2
  br i1 %45, label %46, label %55

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %3
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 4, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %4
  br i1 %54, label %69, label %55

55:                                               ; preds = %34, %46, %50
  %56 = add nuw nsw i64 %35, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  store i32 %1, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  store i32* %10, i32** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %57 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %13, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %58 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %57, 0
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %58, i64 4
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = shl i64 %65, 29
  %67 = ashr i64 %66, 32
  %68 = icmp slt i64 %56, %67
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  br i1 %68, label %34, label %72

69:                                               ; preds = %50
  %70 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  br label %72

72:                                               ; preds = %55, %5, %69
  %73 = phi i32 [ %71, %69 ], [ 0, %5 ], [ 0, %55 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jjj(%"class.spv::Builder"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca %"class.std::__1::tuple.267", align 8
  %10 = alloca %"class.std::__1::tuple.219", align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 %1, i32* %11, align 4
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %15 = bitcast %"class.std::__1::tuple.267"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %18 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %19 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %19, i64 4
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.std::__1::__hash_node_base"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = icmp sgt i32 %28, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br i1 %29, label %30, label %77

30:                                               ; preds = %6
  %31 = bitcast i32* %12 to i8*
  %32 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  %33 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  br label %35

35:                                               ; preds = %30, %60
  %36 = phi i64 [ 0, %30 ], [ %61, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #17
  store i32 %1, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  store i32* %12, i32** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #17
  %37 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %38 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %37, 0
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %40 = bitcast %"struct.std::__1::__hash_node_base"* %39 to %"class.spv::Instruction"***
  %41 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %40, align 8
  %42 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, i64 %36
  %43 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #17
  %44 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %43, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, %2
  br i1 %46, label %47, label %60

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %43, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %3
  br i1 %50, label %51, label %60

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %43, i64 0, i32 4, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %4
  br i1 %55, label %56, label %60

56:                                               ; preds = %51
  %57 = getelementptr inbounds i32, i32* %53, i64 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %5
  br i1 %59, label %74, label %60

60:                                               ; preds = %35, %47, %51, %56
  %61 = add nuw nsw i64 %36, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 %1, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store i32* %11, i32** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #17
  %62 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %14, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %10) #17
  %63 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %62, 0
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 4
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = shl i64 %70, 29
  %72 = ashr i64 %71, 32
  %73 = icmp slt i64 %61, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br i1 %73, label %35, label %77

74:                                               ; preds = %56
  %75 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %43, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  br label %77

77:                                               ; preds = %60, %6, %74
  %78 = phi i32 [ %76, %74 ], [ 0, %6 ], [ 0, %60 ]
  ret i32 %78
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3spv7Builder16isConstantOpCodeENS_2OpE(%"class.spv::Builder"* nocapture readnone, i32) local_unnamed_addr #9 align 2 {
  %3 = add i32 %1, -1
  %4 = icmp ult i32 %3, 52
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = zext i32 %3 to i52
  %7 = lshr i52 -71468255805439, %6
  %8 = and i52 %7, 1
  %9 = icmp ne i52 %8, 0
  ret i1 %9

10:                                               ; preds = %2
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3spv7Builder20isSpecConstantOpCodeENS_2OpE(%"class.spv::Builder"* nocapture readnone, i32) local_unnamed_addr #9 align 2 {
  %3 = add i32 %1, -48
  %4 = icmp ult i32 %3, 5
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder16makeNullConstantEj(%"class.spv::Builder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 35
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 35, i32 0, i32 1
  %6 = bitcast %"class.spv::Instruction"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.55"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = lshr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, 0
  %14 = inttoptr i64 %9 to %"class.spv::Instruction"**
  br i1 %13, label %15, label %35

15:                                               ; preds = %2
  %16 = shl i64 %10, 29
  %17 = ashr exact i64 %16, 32
  br label %20

18:                                               ; preds = %31
  %19 = icmp eq i32 %32, 0
  br i1 %19, label %35, label %168

20:                                               ; preds = %15, %31
  %21 = phi i64 [ 0, %15 ], [ %33, %31 ]
  %22 = phi i32 [ 0, %15 ], [ %32, %31 ]
  %23 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %14, i64 %21
  %24 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %23, align 8
  %25 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %24, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %20, %28
  %32 = phi i32 [ %30, %28 ], [ %22, %20 ]
  %33 = add nuw nsw i64 %21, 1
  %34 = icmp slt i64 %33, %17
  br i1 %34, label %20, label %18

35:                                               ; preds = %2, %18
  %36 = tail call i8* @_Znwm(i64 80) #18
  %37 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 8
  %40 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %39, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 12
  %44 = bitcast i8* %43 to i32*
  store i32 %1, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %36, i64 16
  %46 = bitcast i8* %45 to i32*
  store i32 46, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %36, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 56, i1 false) #17
  %48 = ptrtoint i8* %36 to i64
  %49 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #17
  %50 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %53, align 8
  %55 = icmp ult %"class.std::__1::unique_ptr"* %52, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %57, align 8
  %58 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %48, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 1
  %60 = ptrtoint %"class.std::__1::unique_ptr"* %59 to i64
  %61 = bitcast %"class.std::__1::unique_ptr"** %51 to i64*
  store i64 %60, i64* %61, align 8
  br label %64

62:                                               ; preds = %35
  %63 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %63, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %64

64:                                               ; preds = %56, %62
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %65, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %65, align 8
  %67 = icmp eq %"class.spv::Instruction"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.spv::Instruction"* %66 to void (%"class.spv::Instruction"*)***
  %70 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %71, align 8
  call void %72(%"class.spv::Instruction"* nonnull %66) #17
  br label %73

73:                                               ; preds = %64, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #17
  %74 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %5, align 8
  %75 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 35, i32 0, i32 2, i32 0, i32 0
  %76 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %75, align 8
  %77 = icmp eq %"class.spv::Instruction"** %74, %76
  %78 = ptrtoint %"class.spv::Instruction"** %76 to i64
  br i1 %77, label %83, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.spv::Instruction"** %74 to i64*
  store i64 %48, i64* %80, align 8
  %81 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %74, i64 1
  %82 = ptrtoint %"class.spv::Instruction"** %81 to i64
  store i64 %82, i64* %6, align 8
  br label %138

83:                                               ; preds = %73
  %84 = ptrtoint %"class.spv::Instruction"** %74 to i64
  %85 = load i64, i64* %8, align 8
  %86 = sub i64 %84, %85
  %87 = ashr exact i64 %86, 3
  %88 = add nsw i64 %87, 1
  %89 = icmp ugt i64 %88, 2305843009213693951
  br i1 %89, label %90, label %92

90:                                               ; preds = %83
  %91 = bitcast %"class.std::__1::vector.55"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #20
  unreachable

92:                                               ; preds = %83
  %93 = bitcast %"class.spv::Instruction"*** %75 to i64*
  %94 = sub i64 %78, %85
  %95 = ashr exact i64 %94, 3
  %96 = icmp ult i64 %95, 1152921504606846975
  br i1 %96, label %97, label %105

97:                                               ; preds = %92
  %98 = ashr exact i64 %94, 2
  %99 = icmp ult i64 %98, %88
  %100 = select i1 %99, i64 %88, i64 %98
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = icmp ugt i64 %100, 2305843009213693951
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  call void @abort() #20
  unreachable

105:                                              ; preds = %102, %92
  %106 = phi i64 [ %100, %102 ], [ 2305843009213693951, %92 ]
  %107 = shl i64 %106, 3
  %108 = call i8* @_Znwm(i64 %107) #18
  %109 = bitcast i8* %108 to %"class.spv::Instruction"**
  br label %110

110:                                              ; preds = %105, %97
  %111 = phi i64 [ %106, %105 ], [ 0, %97 ]
  %112 = phi %"class.spv::Instruction"** [ %109, %105 ], [ null, %97 ]
  %113 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %112, i64 %87
  %114 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %112, i64 %111
  %115 = ptrtoint %"class.spv::Instruction"** %114 to i64
  %116 = bitcast %"class.spv::Instruction"** %113 to i64*
  store i64 %48, i64* %116, align 8
  %117 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %113, i64 1
  %118 = ptrtoint %"class.spv::Instruction"** %117 to i64
  %119 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 0, i32 0
  %120 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %119, align 8
  %121 = load i64, i64* %6, align 8
  %122 = ptrtoint %"class.spv::Instruction"** %120 to i64
  %123 = sub i64 %121, %122
  %124 = ashr exact i64 %123, 3
  %125 = sub nsw i64 0, %124
  %126 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %113, i64 %125
  %127 = ptrtoint %"class.spv::Instruction"** %126 to i64
  %128 = icmp sgt i64 %123, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %110
  %130 = bitcast %"class.spv::Instruction"** %126 to i8*
  %131 = bitcast %"class.spv::Instruction"** %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 %123, i1 false) #17
  %132 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %119, align 8
  br label %133

133:                                              ; preds = %129, %110
  %134 = phi %"class.spv::Instruction"** [ %120, %110 ], [ %132, %129 ]
  store i64 %127, i64* %8, align 8
  store i64 %118, i64* %6, align 8
  store i64 %115, i64* %93, align 8
  %135 = icmp eq %"class.spv::Instruction"** %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %133
  %137 = bitcast %"class.spv::Instruction"** %134 to i8*
  call void @_ZdlPv(i8* %137) #18
  br label %138

138:                                              ; preds = %79, %133, %136
  %139 = load i32, i32* %42, align 8
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %142 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %143 = bitcast %"class.spv::Instruction"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::vector.55"* %141 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = sub i64 %144, %146
  %148 = ashr exact i64 %147, 3
  %149 = icmp ugt i64 %148, %140
  %150 = inttoptr i64 %146 to %"class.spv::Instruction"**
  br i1 %149, label %163, label %151

151:                                              ; preds = %138
  %152 = add i32 %139, 16
  %153 = zext i32 %152 to i64
  %154 = icmp ult i64 %148, %153
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = sub nsw i64 %153, %148
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %141, i64 %156) #17
  %157 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %141, i64 0, i32 0, i32 0
  %158 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %157, align 8
  br label %163

159:                                              ; preds = %151
  %160 = icmp ugt i64 %148, %153
  br i1 %160, label %161, label %163

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %150, i64 %153
  store %"class.spv::Instruction"** %162, %"class.spv::Instruction"*** %142, align 8
  br label %163

163:                                              ; preds = %138, %155, %159, %161
  %164 = phi %"class.spv::Instruction"** [ %150, %161 ], [ %150, %159 ], [ %158, %155 ], [ %150, %138 ]
  %165 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %164, i64 %140
  %166 = bitcast %"class.spv::Instruction"** %165 to i8**
  store i8* %36, i8** %166, align 8
  %167 = load i32, i32* %42, align 8
  br label %168

168:                                              ; preds = %18, %163
  %169 = phi i32 [ %167, %163 ], [ %32, %18 ]
  ret i32 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder16makeBoolConstantEbb(%"class.spv::Builder"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.267", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca %"class.std::__1::tuple.267", align 8
  %9 = alloca %"class.std::__1::tuple.219", align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = alloca i32, align 4
  %14 = tail call i32 @_ZN3spv7Builder12makeBoolTypeEv(%"class.spv::Builder"* %0)
  %15 = select i1 %1, i32 48, i32 49
  %16 = select i1 %1, i32 41, i32 42
  %17 = select i1 %2, i32 %15, i32 %16
  br i1 %2, label %78, label %18

18:                                               ; preds = %3
  %19 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store i32 20, i32* %10, align 4
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %21 = bitcast %"class.std::__1::tuple.267"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #17
  %24 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %25 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 4
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::__hash_node_base"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = lshr exact i64 %32, 3
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  br i1 %35, label %36, label %78

36:                                               ; preds = %18
  %37 = bitcast i32* %11 to i8*
  %38 = bitcast %"class.std::__1::tuple.267"* %6 to i8*
  %39 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  br label %43

41:                                               ; preds = %63
  %42 = icmp eq i32 %64, 0
  br i1 %42, label %78, label %225

43:                                               ; preds = %36, %63
  %44 = phi i64 [ 0, %36 ], [ %65, %63 ]
  %45 = phi i32 [ 0, %36 ], [ %64, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #17
  store i32 20, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  store i32* %11, i32** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #17
  %46 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %47 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %46, 0
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to %"class.spv::Instruction"***
  %50 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, i64 %44
  %52 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #17
  %53 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %14
  br i1 %55, label %56, label %63

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, %17
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %43, %56, %60
  %64 = phi i32 [ %62, %60 ], [ %45, %56 ], [ %45, %43 ]
  %65 = add nuw nsw i64 %44, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store i32 20, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  store i32* %10, i32** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #17
  %66 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %20, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %9) #17
  %67 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %66, 0
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 4
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = shl i64 %74, 29
  %76 = ashr i64 %75, 32
  %77 = icmp slt i64 %65, %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  br i1 %77, label %43, label %41

78:                                               ; preds = %18, %41, %3
  %79 = call i8* @_Znwm(i64 80) #18
  %80 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 8
  %83 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds i8, i8* %79, i64 8
  %85 = bitcast i8* %84 to i32*
  store i32 %82, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %79, i64 12
  %87 = bitcast i8* %86 to i32*
  store i32 %14, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %79, i64 16
  %89 = bitcast i8* %88 to i32*
  store i32 %17, i32* %89, align 8
  %90 = getelementptr inbounds i8, i8* %79, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 56, i1 false) #17
  %91 = ptrtoint i8* %79 to i64
  %92 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #17
  %93 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %95 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %94, align 8
  %96 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %96, align 8
  %98 = icmp ult %"class.std::__1::unique_ptr"* %95, %97
  br i1 %98, label %99, label %105

99:                                               ; preds = %78
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %100, align 8
  %101 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 %91, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 1
  %103 = ptrtoint %"class.std::__1::unique_ptr"* %102 to i64
  %104 = bitcast %"class.std::__1::unique_ptr"** %94 to i64*
  store i64 %103, i64* %104, align 8
  br label %107

105:                                              ; preds = %78
  %106 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %106, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %12) #17
  br label %107

107:                                              ; preds = %99, %105
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %108, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %108, align 8
  %110 = icmp eq %"class.spv::Instruction"* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = bitcast %"class.spv::Instruction"* %109 to void (%"class.spv::Instruction"*)***
  %113 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %113, i64 1
  %115 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %114, align 8
  call void %115(%"class.spv::Instruction"* nonnull %109) #17
  br label %116

116:                                              ; preds = %107, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #17
  %117 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #17
  store i32 20, i32* %13, align 4
  %118 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %119 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #17
  %120 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %13, i32** %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %121) #17
  %122 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %118, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %123 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %122, 0
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %121) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #17
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 4
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %125 to %"class.spv::Instruction"***
  %127 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %126, align 8
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 5
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %128 to %"class.spv::Instruction"***
  %130 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %129, align 8
  %131 = icmp eq %"class.spv::Instruction"** %127, %130
  %132 = ptrtoint %"class.spv::Instruction"** %130 to i64
  br i1 %131, label %138, label %133

133:                                              ; preds = %116
  %134 = bitcast %"class.spv::Instruction"** %127 to i64*
  store i64 %91, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %127, i64 1
  %136 = ptrtoint %"class.spv::Instruction"** %135 to i64
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i64*
  store i64 %136, i64* %137, align 8
  br label %195

138:                                              ; preds = %116
  %139 = ptrtoint %"class.spv::Instruction"** %127 to i64
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %125 to i64*
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %139, %142
  %144 = ashr exact i64 %143, 3
  %145 = add nsw i64 %144, 1
  %146 = icmp ugt i64 %145, 2305843009213693951
  br i1 %146, label %147, label %149

147:                                              ; preds = %138
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %124 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %148) #20
  unreachable

149:                                              ; preds = %138
  %150 = bitcast %"struct.std::__1::__hash_node_base"* %128 to i64*
  %151 = sub i64 %132, %142
  %152 = ashr exact i64 %151, 3
  %153 = icmp ult i64 %152, 1152921504606846975
  br i1 %153, label %154, label %162

154:                                              ; preds = %149
  %155 = ashr exact i64 %151, 2
  %156 = icmp ult i64 %155, %145
  %157 = select i1 %156, i64 %145, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 2305843009213693951
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  call void @abort() #20
  unreachable

162:                                              ; preds = %159, %149
  %163 = phi i64 [ %157, %159 ], [ 2305843009213693951, %149 ]
  %164 = shl i64 %163, 3
  %165 = call i8* @_Znwm(i64 %164) #18
  %166 = bitcast i8* %165 to %"class.spv::Instruction"**
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi %"class.spv::Instruction"** [ %166, %162 ], [ null, %154 ]
  %170 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %169, i64 %144
  %171 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %169, i64 %168
  %172 = ptrtoint %"class.spv::Instruction"** %171 to i64
  %173 = bitcast %"class.spv::Instruction"** %170 to i64*
  store i64 %91, i64* %173, align 8
  %174 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %170, i64 1
  %175 = ptrtoint %"class.spv::Instruction"** %174 to i64
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %124 to %"class.spv::Instruction"***
  %177 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %176, align 8
  %178 = load i64, i64* %140, align 8
  %179 = ptrtoint %"class.spv::Instruction"** %177 to i64
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 3
  %182 = sub nsw i64 0, %181
  %183 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %170, i64 %182
  %184 = ptrtoint %"class.spv::Instruction"** %183 to i64
  %185 = icmp sgt i64 %180, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %167
  %187 = bitcast %"class.spv::Instruction"** %183 to i8*
  %188 = bitcast %"class.spv::Instruction"** %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 %180, i1 false) #17
  %189 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %176, align 8
  br label %190

190:                                              ; preds = %186, %167
  %191 = phi %"class.spv::Instruction"** [ %177, %167 ], [ %189, %186 ]
  store i64 %184, i64* %141, align 8
  store i64 %175, i64* %140, align 8
  store i64 %172, i64* %150, align 8
  %192 = icmp eq %"class.spv::Instruction"** %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = bitcast %"class.spv::Instruction"** %191 to i8*
  call void @_ZdlPv(i8* %194) #18
  br label %195

195:                                              ; preds = %133, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #17
  %196 = load i32, i32* %85, align 8
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %199 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %200 = bitcast %"class.spv::Instruction"*** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.std::__1::vector.55"* %198 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %201, %203
  %205 = ashr exact i64 %204, 3
  %206 = icmp ugt i64 %205, %197
  %207 = inttoptr i64 %203 to %"class.spv::Instruction"**
  br i1 %206, label %220, label %208

208:                                              ; preds = %195
  %209 = add i32 %196, 16
  %210 = zext i32 %209 to i64
  %211 = icmp ult i64 %205, %210
  br i1 %211, label %212, label %216

212:                                              ; preds = %208
  %213 = sub nsw i64 %210, %205
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %198, i64 %213) #17
  %214 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %198, i64 0, i32 0, i32 0
  %215 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %214, align 8
  br label %220

216:                                              ; preds = %208
  %217 = icmp ugt i64 %205, %210
  br i1 %217, label %218, label %220

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %207, i64 %210
  store %"class.spv::Instruction"** %219, %"class.spv::Instruction"*** %199, align 8
  br label %220

220:                                              ; preds = %195, %212, %216, %218
  %221 = phi %"class.spv::Instruction"** [ %207, %218 ], [ %207, %216 ], [ %215, %212 ], [ %207, %195 ]
  %222 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %221, i64 %197
  %223 = bitcast %"class.spv::Instruction"** %222 to i8**
  store i8* %79, i8** %223, align 8
  %224 = load i32, i32* %85, align 8
  br label %225

225:                                              ; preds = %41, %220
  %226 = phi i32 [ %224, %220 ], [ %64, %41 ]
  ret i32 %226
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"*, i32, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca i32, align 4
  %9 = select i1 %3, i32 50, i32 43
  br i1 %3, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jj(%"class.spv::Builder"* %0, i32 21, i32 %9, i32 %1, i32 %2)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %161

13:                                               ; preds = %10, %4
  %14 = tail call i8* @_Znwm(i64 80) #18
  %15 = bitcast i8* %14 to %"class.spv::Instruction"*
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %14, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %14, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %1, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %14, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 %9, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %14, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 56, i1 false) #17
  %27 = ptrtoint i8* %14 to i64
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %15, i32 %2)
  %28 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %13
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %36, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %27, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"** %30 to i64*
  store i64 %39, i64* %40, align 8
  br label %43

41:                                               ; preds = %13
  %42 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %42, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %43

43:                                               ; preds = %35, %41
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %44, align 8
  %46 = icmp eq %"class.spv::Instruction"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.spv::Instruction"* %45 to void (%"class.spv::Instruction"*)***
  %49 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %49, i64 1
  %51 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %50, align 8
  call void %51(%"class.spv::Instruction"* nonnull %45) #17
  br label %52

52:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %53 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #17
  store i32 21, i32* %8, align 4
  %54 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %55 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  %56 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #17
  %58 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %54, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %59 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %58, 0
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 4
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.spv::Instruction"***
  %63 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %59, i64 5
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.spv::Instruction"***
  %66 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  %67 = icmp eq %"class.spv::Instruction"** %63, %66
  %68 = ptrtoint %"class.spv::Instruction"** %66 to i64
  br i1 %67, label %74, label %69

69:                                               ; preds = %52
  %70 = bitcast %"class.spv::Instruction"** %63 to i64*
  store i64 %27, i64* %70, align 8
  %71 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, i64 1
  %72 = ptrtoint %"class.spv::Instruction"** %71 to i64
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  store i64 %72, i64* %73, align 8
  br label %131

74:                                               ; preds = %52
  %75 = ptrtoint %"class.spv::Instruction"** %63 to i64
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %60 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %75, %78
  %80 = ashr exact i64 %79, 3
  %81 = add nsw i64 %80, 1
  %82 = icmp ugt i64 %81, 2305843009213693951
  br i1 %82, label %83, label %85

83:                                               ; preds = %74
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %84) #20
  unreachable

85:                                               ; preds = %74
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %87 = sub i64 %68, %78
  %88 = ashr exact i64 %87, 3
  %89 = icmp ult i64 %88, 1152921504606846975
  br i1 %89, label %90, label %98

90:                                               ; preds = %85
  %91 = ashr exact i64 %87, 2
  %92 = icmp ult i64 %91, %81
  %93 = select i1 %92, i64 %81, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = icmp ugt i64 %93, 2305843009213693951
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void @abort() #20
  unreachable

98:                                               ; preds = %95, %85
  %99 = phi i64 [ %93, %95 ], [ 2305843009213693951, %85 ]
  %100 = shl i64 %99, 3
  %101 = call i8* @_Znwm(i64 %100) #18
  %102 = bitcast i8* %101 to %"class.spv::Instruction"**
  br label %103

103:                                              ; preds = %98, %90
  %104 = phi i64 [ %99, %98 ], [ 0, %90 ]
  %105 = phi %"class.spv::Instruction"** [ %102, %98 ], [ null, %90 ]
  %106 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %105, i64 %80
  %107 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %105, i64 %104
  %108 = ptrtoint %"class.spv::Instruction"** %107 to i64
  %109 = bitcast %"class.spv::Instruction"** %106 to i64*
  store i64 %27, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %106, i64 1
  %111 = ptrtoint %"class.spv::Instruction"** %110 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %60 to %"class.spv::Instruction"***
  %113 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %112, align 8
  %114 = load i64, i64* %76, align 8
  %115 = ptrtoint %"class.spv::Instruction"** %113 to i64
  %116 = sub i64 %114, %115
  %117 = ashr exact i64 %116, 3
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %106, i64 %118
  %120 = ptrtoint %"class.spv::Instruction"** %119 to i64
  %121 = icmp sgt i64 %116, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %103
  %123 = bitcast %"class.spv::Instruction"** %119 to i8*
  %124 = bitcast %"class.spv::Instruction"** %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 %116, i1 false) #17
  %125 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %112, align 8
  br label %126

126:                                              ; preds = %122, %103
  %127 = phi %"class.spv::Instruction"** [ %113, %103 ], [ %125, %122 ]
  store i64 %120, i64* %77, align 8
  store i64 %111, i64* %76, align 8
  store i64 %108, i64* %86, align 8
  %128 = icmp eq %"class.spv::Instruction"** %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.spv::Instruction"** %127 to i8*
  call void @_ZdlPv(i8* %130) #18
  br label %131

131:                                              ; preds = %69, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #17
  %132 = load i32, i32* %21, align 8
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %135 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %136 = bitcast %"class.spv::Instruction"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.std::__1::vector.55"* %134 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %137, %139
  %141 = ashr exact i64 %140, 3
  %142 = icmp ugt i64 %141, %133
  %143 = inttoptr i64 %139 to %"class.spv::Instruction"**
  br i1 %142, label %156, label %144

144:                                              ; preds = %131
  %145 = add i32 %132, 16
  %146 = zext i32 %145 to i64
  %147 = icmp ult i64 %141, %146
  br i1 %147, label %148, label %152

148:                                              ; preds = %144
  %149 = sub nsw i64 %146, %141
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %134, i64 %149) #17
  %150 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %134, i64 0, i32 0, i32 0
  %151 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %150, align 8
  br label %156

152:                                              ; preds = %144
  %153 = icmp ugt i64 %141, %146
  br i1 %153, label %154, label %156

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %143, i64 %146
  store %"class.spv::Instruction"** %155, %"class.spv::Instruction"*** %135, align 8
  br label %156

156:                                              ; preds = %131, %148, %152, %154
  %157 = phi %"class.spv::Instruction"** [ %143, %154 ], [ %143, %152 ], [ %151, %148 ], [ %143, %131 ]
  %158 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %157, i64 %133
  %159 = bitcast %"class.spv::Instruction"** %158 to i8**
  store i8* %14, i8** %159, align 8
  %160 = load i32, i32* %21, align 8
  br label %161

161:                                              ; preds = %10, %156
  %162 = phi i32 [ %160, %156 ], [ %11, %10 ]
  ret i32 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17makeInt64ConstantEjyb(%"class.spv::Builder"*, i32, i64, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca i32, align 4
  %9 = select i1 %3, i32 50, i32 43
  %10 = trunc i64 %2 to i32
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  br i1 %3, label %16, label %13

13:                                               ; preds = %4
  %14 = tail call i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jjj(%"class.spv::Builder"* %0, i32 21, i32 %9, i32 %1, i32 %10, i32 %12)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %164

16:                                               ; preds = %13, %4
  %17 = tail call i8* @_Znwm(i64 80) #18
  %18 = bitcast i8* %17 to %"class.spv::Instruction"*
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  store i32 %21, i32* %19, align 8
  %22 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %21, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %1, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %17, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 %9, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %17, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 56, i1 false) #17
  %30 = ptrtoint i8* %17 to i64
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %18, i32 %10)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %18, i32 %12)
  %31 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17
  %32 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %35 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = icmp ult %"class.std::__1::unique_ptr"* %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %16
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %39, align 8
  %40 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  store i64 %30, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 1
  %42 = ptrtoint %"class.std::__1::unique_ptr"* %41 to i64
  %43 = bitcast %"class.std::__1::unique_ptr"** %33 to i64*
  store i64 %42, i64* %43, align 8
  br label %46

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %45, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %46

46:                                               ; preds = %38, %44
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %47, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %47, align 8
  %49 = icmp eq %"class.spv::Instruction"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.spv::Instruction"* %48 to void (%"class.spv::Instruction"*)***
  %52 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %52, i64 1
  %54 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %53, align 8
  call void %54(%"class.spv::Instruction"* nonnull %48) #17
  br label %55

55:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  %56 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #17
  store i32 21, i32* %8, align 4
  %57 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %58 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  %59 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #17
  %61 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %57, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %62 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %61, 0
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #17
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 4
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.spv::Instruction"***
  %66 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %62, i64 5
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to %"class.spv::Instruction"***
  %69 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %68, align 8
  %70 = icmp eq %"class.spv::Instruction"** %66, %69
  %71 = ptrtoint %"class.spv::Instruction"** %69 to i64
  br i1 %70, label %77, label %72

72:                                               ; preds = %55
  %73 = bitcast %"class.spv::Instruction"** %66 to i64*
  store i64 %30, i64* %73, align 8
  %74 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %66, i64 1
  %75 = ptrtoint %"class.spv::Instruction"** %74 to i64
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  store i64 %75, i64* %76, align 8
  br label %134

77:                                               ; preds = %55
  %78 = ptrtoint %"class.spv::Instruction"** %66 to i64
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %78, %81
  %83 = ashr exact i64 %82, 3
  %84 = add nsw i64 %83, 1
  %85 = icmp ugt i64 %84, 2305843009213693951
  br i1 %85, label %86, label %88

86:                                               ; preds = %77
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %87) #20
  unreachable

88:                                               ; preds = %77
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %90 = sub i64 %71, %81
  %91 = ashr exact i64 %90, 3
  %92 = icmp ult i64 %91, 1152921504606846975
  br i1 %92, label %93, label %101

93:                                               ; preds = %88
  %94 = ashr exact i64 %90, 2
  %95 = icmp ult i64 %94, %84
  %96 = select i1 %95, i64 %84, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %93
  %99 = icmp ugt i64 %96, 2305843009213693951
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  call void @abort() #20
  unreachable

101:                                              ; preds = %98, %88
  %102 = phi i64 [ %96, %98 ], [ 2305843009213693951, %88 ]
  %103 = shl i64 %102, 3
  %104 = call i8* @_Znwm(i64 %103) #18
  %105 = bitcast i8* %104 to %"class.spv::Instruction"**
  br label %106

106:                                              ; preds = %101, %93
  %107 = phi i64 [ %102, %101 ], [ 0, %93 ]
  %108 = phi %"class.spv::Instruction"** [ %105, %101 ], [ null, %93 ]
  %109 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %108, i64 %83
  %110 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %108, i64 %107
  %111 = ptrtoint %"class.spv::Instruction"** %110 to i64
  %112 = bitcast %"class.spv::Instruction"** %109 to i64*
  store i64 %30, i64* %112, align 8
  %113 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %109, i64 1
  %114 = ptrtoint %"class.spv::Instruction"** %113 to i64
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"class.spv::Instruction"***
  %116 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %115, align 8
  %117 = load i64, i64* %79, align 8
  %118 = ptrtoint %"class.spv::Instruction"** %116 to i64
  %119 = sub i64 %117, %118
  %120 = ashr exact i64 %119, 3
  %121 = sub nsw i64 0, %120
  %122 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %109, i64 %121
  %123 = ptrtoint %"class.spv::Instruction"** %122 to i64
  %124 = icmp sgt i64 %119, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %106
  %126 = bitcast %"class.spv::Instruction"** %122 to i8*
  %127 = bitcast %"class.spv::Instruction"** %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 %119, i1 false) #17
  %128 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %115, align 8
  br label %129

129:                                              ; preds = %125, %106
  %130 = phi %"class.spv::Instruction"** [ %116, %106 ], [ %128, %125 ]
  store i64 %123, i64* %80, align 8
  store i64 %114, i64* %79, align 8
  store i64 %111, i64* %89, align 8
  %131 = icmp eq %"class.spv::Instruction"** %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = bitcast %"class.spv::Instruction"** %130 to i8*
  call void @_ZdlPv(i8* %133) #18
  br label %134

134:                                              ; preds = %72, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #17
  %135 = load i32, i32* %24, align 8
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %138 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %139 = bitcast %"class.spv::Instruction"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.std::__1::vector.55"* %137 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %140, %142
  %144 = ashr exact i64 %143, 3
  %145 = icmp ugt i64 %144, %136
  %146 = inttoptr i64 %142 to %"class.spv::Instruction"**
  br i1 %145, label %159, label %147

147:                                              ; preds = %134
  %148 = add i32 %135, 16
  %149 = zext i32 %148 to i64
  %150 = icmp ult i64 %144, %149
  br i1 %150, label %151, label %155

151:                                              ; preds = %147
  %152 = sub nsw i64 %149, %144
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %137, i64 %152) #17
  %153 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %137, i64 0, i32 0, i32 0
  %154 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %153, align 8
  br label %159

155:                                              ; preds = %147
  %156 = icmp ugt i64 %144, %149
  br i1 %156, label %157, label %159

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 %149
  store %"class.spv::Instruction"** %158, %"class.spv::Instruction"*** %138, align 8
  br label %159

159:                                              ; preds = %134, %151, %155, %157
  %160 = phi %"class.spv::Instruction"** [ %146, %157 ], [ %146, %155 ], [ %154, %151 ], [ %146, %134 ]
  %161 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %160, i64 %136
  %162 = bitcast %"class.spv::Instruction"** %161 to i8**
  store i8* %17, i8** %162, align 8
  %163 = load i32, i32* %24, align 8
  br label %164

164:                                              ; preds = %13, %159
  %165 = phi i32 [ %163, %159 ], [ %14, %13 ]
  ret i32 %165
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17makeFloatConstantEfb(%"class.spv::Builder"*, float, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca i32, align 4
  %8 = select i1 %2, i32 50, i32 43
  %9 = tail call i32 @_ZN3spv7Builder13makeFloatTypeEi(%"class.spv::Builder"* %0, i32 32)
  %10 = bitcast float %1 to i32
  br i1 %2, label %14, label %11

11:                                               ; preds = %3
  %12 = tail call i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jj(%"class.spv::Builder"* %0, i32 22, i32 %8, i32 %9, i32 %10)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %162

14:                                               ; preds = %11, %3
  %15 = tail call i8* @_Znwm(i64 80) #18
  %16 = bitcast i8* %15 to %"class.spv::Instruction"*
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 8
  %20 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %19, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %15, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 %9, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %15, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 %8, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %15, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 56, i1 false) #17
  %28 = ptrtoint i8* %15 to i64
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %16, i32 %10)
  %29 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %30 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %32 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %33 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr"* %32, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %14
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %37, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %32 to i64*
  store i64 %28, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr"* %39 to i64
  %41 = bitcast %"class.std::__1::unique_ptr"** %31 to i64*
  store i64 %40, i64* %41, align 8
  br label %44

42:                                               ; preds = %14
  %43 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %43, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %44

44:                                               ; preds = %36, %42
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %45, align 8
  %47 = icmp eq %"class.spv::Instruction"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.spv::Instruction"* %46 to void (%"class.spv::Instruction"*)***
  %50 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %50, i64 1
  %52 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %51, align 8
  call void %52(%"class.spv::Instruction"* nonnull %46) #17
  br label %53

53:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  %54 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #17
  store i32 22, i32* %7, align 4
  %55 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %56 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  %57 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #17
  %59 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %55, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %60 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %59, 0
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 4
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.spv::Instruction"***
  %64 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %60, i64 5
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.spv::Instruction"***
  %67 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %66, align 8
  %68 = icmp eq %"class.spv::Instruction"** %64, %67
  %69 = ptrtoint %"class.spv::Instruction"** %67 to i64
  br i1 %68, label %75, label %70

70:                                               ; preds = %53
  %71 = bitcast %"class.spv::Instruction"** %64 to i64*
  store i64 %28, i64* %71, align 8
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %64, i64 1
  %73 = ptrtoint %"class.spv::Instruction"** %72 to i64
  %74 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  store i64 %73, i64* %74, align 8
  br label %132

75:                                               ; preds = %53
  %76 = ptrtoint %"class.spv::Instruction"** %64 to i64
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i64*
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %76, %79
  %81 = ashr exact i64 %80, 3
  %82 = add nsw i64 %81, 1
  %83 = icmp ugt i64 %82, 2305843009213693951
  br i1 %83, label %84, label %86

84:                                               ; preds = %75
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #20
  unreachable

86:                                               ; preds = %75
  %87 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %88 = sub i64 %69, %79
  %89 = ashr exact i64 %88, 3
  %90 = icmp ult i64 %89, 1152921504606846975
  br i1 %90, label %91, label %99

91:                                               ; preds = %86
  %92 = ashr exact i64 %88, 2
  %93 = icmp ult i64 %92, %82
  %94 = select i1 %93, i64 %82, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = icmp ugt i64 %94, 2305843009213693951
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  call void @abort() #20
  unreachable

99:                                               ; preds = %96, %86
  %100 = phi i64 [ %94, %96 ], [ 2305843009213693951, %86 ]
  %101 = shl i64 %100, 3
  %102 = call i8* @_Znwm(i64 %101) #18
  %103 = bitcast i8* %102 to %"class.spv::Instruction"**
  br label %104

104:                                              ; preds = %99, %91
  %105 = phi i64 [ %100, %99 ], [ 0, %91 ]
  %106 = phi %"class.spv::Instruction"** [ %103, %99 ], [ null, %91 ]
  %107 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %106, i64 %81
  %108 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %106, i64 %105
  %109 = ptrtoint %"class.spv::Instruction"** %108 to i64
  %110 = bitcast %"class.spv::Instruction"** %107 to i64*
  store i64 %28, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %107, i64 1
  %112 = ptrtoint %"class.spv::Instruction"** %111 to i64
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %61 to %"class.spv::Instruction"***
  %114 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %113, align 8
  %115 = load i64, i64* %77, align 8
  %116 = ptrtoint %"class.spv::Instruction"** %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 3
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %107, i64 %119
  %121 = ptrtoint %"class.spv::Instruction"** %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %104
  %124 = bitcast %"class.spv::Instruction"** %120 to i8*
  %125 = bitcast %"class.spv::Instruction"** %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 %117, i1 false) #17
  %126 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %113, align 8
  br label %127

127:                                              ; preds = %123, %104
  %128 = phi %"class.spv::Instruction"** [ %114, %104 ], [ %126, %123 ]
  store i64 %121, i64* %78, align 8
  store i64 %112, i64* %77, align 8
  store i64 %109, i64* %87, align 8
  %129 = icmp eq %"class.spv::Instruction"** %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.spv::Instruction"** %128 to i8*
  call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %70, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #17
  %133 = load i32, i32* %22, align 8
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %136 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %137 = bitcast %"class.spv::Instruction"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.std::__1::vector.55"* %135 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %138, %140
  %142 = ashr exact i64 %141, 3
  %143 = icmp ugt i64 %142, %134
  %144 = inttoptr i64 %140 to %"class.spv::Instruction"**
  br i1 %143, label %157, label %145

145:                                              ; preds = %132
  %146 = add i32 %133, 16
  %147 = zext i32 %146 to i64
  %148 = icmp ult i64 %142, %147
  br i1 %148, label %149, label %153

149:                                              ; preds = %145
  %150 = sub nsw i64 %147, %142
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %135, i64 %150) #17
  %151 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %135, i64 0, i32 0, i32 0
  %152 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %151, align 8
  br label %157

153:                                              ; preds = %145
  %154 = icmp ugt i64 %142, %147
  br i1 %154, label %155, label %157

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %144, i64 %147
  store %"class.spv::Instruction"** %156, %"class.spv::Instruction"*** %136, align 8
  br label %157

157:                                              ; preds = %132, %149, %153, %155
  %158 = phi %"class.spv::Instruction"** [ %144, %155 ], [ %144, %153 ], [ %152, %149 ], [ %144, %132 ]
  %159 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %158, i64 %134
  %160 = bitcast %"class.spv::Instruction"** %159 to i8**
  store i8* %15, i8** %160, align 8
  %161 = load i32, i32* %22, align 8
  br label %162

162:                                              ; preds = %11, %157
  %163 = phi i32 [ %161, %157 ], [ %12, %11 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder18makeDoubleConstantEdb(%"class.spv::Builder"*, double, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca i32, align 4
  %8 = select i1 %2, i32 50, i32 43
  %9 = tail call i32 @_ZN3spv7Builder13makeFloatTypeEi(%"class.spv::Builder"* %0, i32 64)
  %10 = bitcast double %1 to i64
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  br i1 %2, label %17, label %14

14:                                               ; preds = %3
  %15 = tail call i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jjj(%"class.spv::Builder"* %0, i32 22, i32 %8, i32 %9, i32 %11, i32 %13)
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %165

17:                                               ; preds = %14, %3
  %18 = tail call i8* @_Znwm(i64 80) #18
  %19 = bitcast i8* %18 to %"class.spv::Instruction"*
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 8
  %23 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %22, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %9, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %18, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 %8, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %18, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 56, i1 false) #17
  %31 = ptrtoint i8* %18 to i64
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %19, i32 %11)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %19, i32 %13)
  %32 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  %33 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %36 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %38 = icmp ult %"class.std::__1::unique_ptr"* %35, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %17
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %40, align 8
  %41 = bitcast %"class.std::__1::unique_ptr"* %35 to i64*
  store i64 %31, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 1
  %43 = ptrtoint %"class.std::__1::unique_ptr"* %42 to i64
  %44 = bitcast %"class.std::__1::unique_ptr"** %34 to i64*
  store i64 %43, i64* %44, align 8
  br label %47

45:                                               ; preds = %17
  %46 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %46, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %47

47:                                               ; preds = %39, %45
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %48, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %48, align 8
  %50 = icmp eq %"class.spv::Instruction"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.spv::Instruction"* %49 to void (%"class.spv::Instruction"*)***
  %53 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %53, i64 1
  %55 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %54, align 8
  call void %55(%"class.spv::Instruction"* nonnull %49) #17
  br label %56

56:                                               ; preds = %47, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  %57 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #17
  store i32 22, i32* %7, align 4
  %58 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %59 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #17
  %60 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %61) #17
  %62 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %58, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %63 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %62, 0
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %61) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #17
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 4
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.spv::Instruction"***
  %67 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 5
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %68 to %"class.spv::Instruction"***
  %70 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %69, align 8
  %71 = icmp eq %"class.spv::Instruction"** %67, %70
  %72 = ptrtoint %"class.spv::Instruction"** %70 to i64
  br i1 %71, label %78, label %73

73:                                               ; preds = %56
  %74 = bitcast %"class.spv::Instruction"** %67 to i64*
  store i64 %31, i64* %74, align 8
  %75 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %67, i64 1
  %76 = ptrtoint %"class.spv::Instruction"** %75 to i64
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  store i64 %76, i64* %77, align 8
  br label %135

78:                                               ; preds = %56
  %79 = ptrtoint %"class.spv::Instruction"** %67 to i64
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %79, %82
  %84 = ashr exact i64 %83, 3
  %85 = add nsw i64 %84, 1
  %86 = icmp ugt i64 %85, 2305843009213693951
  br i1 %86, label %87, label %89

87:                                               ; preds = %78
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #20
  unreachable

89:                                               ; preds = %78
  %90 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %91 = sub i64 %72, %82
  %92 = ashr exact i64 %91, 3
  %93 = icmp ult i64 %92, 1152921504606846975
  br i1 %93, label %94, label %102

94:                                               ; preds = %89
  %95 = ashr exact i64 %91, 2
  %96 = icmp ult i64 %95, %85
  %97 = select i1 %96, i64 %85, i64 %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %94
  %100 = icmp ugt i64 %97, 2305843009213693951
  br i1 %100, label %101, label %102

101:                                              ; preds = %99
  call void @abort() #20
  unreachable

102:                                              ; preds = %99, %89
  %103 = phi i64 [ %97, %99 ], [ 2305843009213693951, %89 ]
  %104 = shl i64 %103, 3
  %105 = call i8* @_Znwm(i64 %104) #18
  %106 = bitcast i8* %105 to %"class.spv::Instruction"**
  br label %107

107:                                              ; preds = %102, %94
  %108 = phi i64 [ %103, %102 ], [ 0, %94 ]
  %109 = phi %"class.spv::Instruction"** [ %106, %102 ], [ null, %94 ]
  %110 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %109, i64 %84
  %111 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %109, i64 %108
  %112 = ptrtoint %"class.spv::Instruction"** %111 to i64
  %113 = bitcast %"class.spv::Instruction"** %110 to i64*
  store i64 %31, i64* %113, align 8
  %114 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %110, i64 1
  %115 = ptrtoint %"class.spv::Instruction"** %114 to i64
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.spv::Instruction"***
  %117 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %116, align 8
  %118 = load i64, i64* %80, align 8
  %119 = ptrtoint %"class.spv::Instruction"** %117 to i64
  %120 = sub i64 %118, %119
  %121 = ashr exact i64 %120, 3
  %122 = sub nsw i64 0, %121
  %123 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %110, i64 %122
  %124 = ptrtoint %"class.spv::Instruction"** %123 to i64
  %125 = icmp sgt i64 %120, 0
  br i1 %125, label %126, label %130

126:                                              ; preds = %107
  %127 = bitcast %"class.spv::Instruction"** %123 to i8*
  %128 = bitcast %"class.spv::Instruction"** %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 %120, i1 false) #17
  %129 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %116, align 8
  br label %130

130:                                              ; preds = %126, %107
  %131 = phi %"class.spv::Instruction"** [ %117, %107 ], [ %129, %126 ]
  store i64 %124, i64* %81, align 8
  store i64 %115, i64* %80, align 8
  store i64 %112, i64* %90, align 8
  %132 = icmp eq %"class.spv::Instruction"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  %134 = bitcast %"class.spv::Instruction"** %131 to i8*
  call void @_ZdlPv(i8* %134) #18
  br label %135

135:                                              ; preds = %73, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #17
  %136 = load i32, i32* %25, align 8
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %139 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %140 = bitcast %"class.spv::Instruction"*** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector.55"* %138 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, %143
  %145 = ashr exact i64 %144, 3
  %146 = icmp ugt i64 %145, %137
  %147 = inttoptr i64 %143 to %"class.spv::Instruction"**
  br i1 %146, label %160, label %148

148:                                              ; preds = %135
  %149 = add i32 %136, 16
  %150 = zext i32 %149 to i64
  %151 = icmp ult i64 %145, %150
  br i1 %151, label %152, label %156

152:                                              ; preds = %148
  %153 = sub nsw i64 %150, %145
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %138, i64 %153) #17
  %154 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %138, i64 0, i32 0, i32 0
  %155 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %154, align 8
  br label %160

156:                                              ; preds = %148
  %157 = icmp ugt i64 %145, %150
  br i1 %157, label %158, label %160

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %147, i64 %150
  store %"class.spv::Instruction"** %159, %"class.spv::Instruction"*** %139, align 8
  br label %160

160:                                              ; preds = %135, %152, %156, %158
  %161 = phi %"class.spv::Instruction"** [ %147, %158 ], [ %147, %156 ], [ %155, %152 ], [ %147, %135 ]
  %162 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %161, i64 %137
  %163 = bitcast %"class.spv::Instruction"** %162 to i8**
  store i8* %18, i8** %163, align 8
  %164 = load i32, i32* %25, align 8
  br label %165

165:                                              ; preds = %14, %160
  %166 = phi i32 [ %164, %160 ], [ %15, %14 ]
  ret i32 %166
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder19makeFloat16ConstantEfb(%"class.spv::Builder"*, float, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.267", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.spvutils::HexFloat", align 4
  %7 = alloca %"class.spvutils::HexFloat.172", align 2
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = alloca i32, align 4
  %10 = select i1 %2, i32 50, i32 43
  %11 = tail call i32 @_ZN3spv7Builder13makeFloatTypeEi(%"class.spv::Builder"* %0, i32 16)
  %12 = bitcast %"class.spvutils::HexFloat"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #17
  %13 = bitcast %"class.spvutils::HexFloat"* %6 to float*
  store float %1, float* %13, align 4
  %14 = bitcast %"class.spvutils::HexFloat.172"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.spvutils::HexFloat.172", %"class.spvutils::HexFloat.172"* %7, i64 0, i32 0, i32 0
  store i16 0, i16* %15, align 2
  call void @_ZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE6castToINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEEvRT_NS_15round_directionE(%"class.spvutils::HexFloat"* nonnull %6, %"class.spvutils::HexFloat.172"* nonnull dereferenceable(2) %7, i32 0)
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  br i1 %2, label %21, label %18

18:                                               ; preds = %3
  %19 = call i32 @_ZN3spv7Builder18findScalarConstantENS_2OpES1_jj(%"class.spv::Builder"* %0, i32 22, i32 %10, i32 %11, i32 %17)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %169

21:                                               ; preds = %18, %3
  %22 = call i8* @_Znwm(i64 80) #18
  %23 = bitcast i8* %22 to %"class.spv::Instruction"*
  %24 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 8
  %27 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %26, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %22, i64 12
  %31 = bitcast i8* %30 to i32*
  store i32 %11, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %22, i64 16
  %33 = bitcast i8* %32 to i32*
  store i32 %10, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %22, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 56, i1 false) #17
  %35 = ptrtoint i8* %22 to i64
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %23, i32 %17)
  %36 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  %37 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %38, align 8
  %40 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = icmp ult %"class.std::__1::unique_ptr"* %39, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %21
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %44, align 8
  %45 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %35, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %47 = ptrtoint %"class.std::__1::unique_ptr"* %46 to i64
  %48 = bitcast %"class.std::__1::unique_ptr"** %38 to i64*
  store i64 %47, i64* %48, align 8
  br label %51

49:                                               ; preds = %21
  %50 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %50, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #17
  br label %51

51:                                               ; preds = %43, %49
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %52, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %52, align 8
  %54 = icmp eq %"class.spv::Instruction"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.spv::Instruction"* %53 to void (%"class.spv::Instruction"*)***
  %57 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %57, i64 1
  %59 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %58, align 8
  call void %59(%"class.spv::Instruction"* nonnull %53) #17
  br label %60

60:                                               ; preds = %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  %61 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #17
  store i32 22, i32* %9, align 4
  %62 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %63 = bitcast %"class.std::__1::tuple.267"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #17
  %64 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #17
  %66 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %62, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %67 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %66, 0
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #17
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 4
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"class.spv::Instruction"***
  %71 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 5
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to %"class.spv::Instruction"***
  %74 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %73, align 8
  %75 = icmp eq %"class.spv::Instruction"** %71, %74
  %76 = ptrtoint %"class.spv::Instruction"** %74 to i64
  br i1 %75, label %82, label %77

77:                                               ; preds = %60
  %78 = bitcast %"class.spv::Instruction"** %71 to i64*
  store i64 %35, i64* %78, align 8
  %79 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 1
  %80 = ptrtoint %"class.spv::Instruction"** %79 to i64
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  store i64 %80, i64* %81, align 8
  br label %139

82:                                               ; preds = %60
  %83 = ptrtoint %"class.spv::Instruction"** %71 to i64
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %83, %86
  %88 = ashr exact i64 %87, 3
  %89 = add nsw i64 %88, 1
  %90 = icmp ugt i64 %89, 2305843009213693951
  br i1 %90, label %91, label %93

91:                                               ; preds = %82
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %68 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %92) #20
  unreachable

93:                                               ; preds = %82
  %94 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %95 = sub i64 %76, %86
  %96 = ashr exact i64 %95, 3
  %97 = icmp ult i64 %96, 1152921504606846975
  br i1 %97, label %98, label %106

98:                                               ; preds = %93
  %99 = ashr exact i64 %95, 2
  %100 = icmp ult i64 %99, %89
  %101 = select i1 %100, i64 %89, i64 %99
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %111, label %103

103:                                              ; preds = %98
  %104 = icmp ugt i64 %101, 2305843009213693951
  br i1 %104, label %105, label %106

105:                                              ; preds = %103
  call void @abort() #20
  unreachable

106:                                              ; preds = %103, %93
  %107 = phi i64 [ %101, %103 ], [ 2305843009213693951, %93 ]
  %108 = shl i64 %107, 3
  %109 = call i8* @_Znwm(i64 %108) #18
  %110 = bitcast i8* %109 to %"class.spv::Instruction"**
  br label %111

111:                                              ; preds = %106, %98
  %112 = phi i64 [ %107, %106 ], [ 0, %98 ]
  %113 = phi %"class.spv::Instruction"** [ %110, %106 ], [ null, %98 ]
  %114 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %113, i64 %88
  %115 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %113, i64 %112
  %116 = ptrtoint %"class.spv::Instruction"** %115 to i64
  %117 = bitcast %"class.spv::Instruction"** %114 to i64*
  store i64 %35, i64* %117, align 8
  %118 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %114, i64 1
  %119 = ptrtoint %"class.spv::Instruction"** %118 to i64
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %68 to %"class.spv::Instruction"***
  %121 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %120, align 8
  %122 = load i64, i64* %84, align 8
  %123 = ptrtoint %"class.spv::Instruction"** %121 to i64
  %124 = sub i64 %122, %123
  %125 = ashr exact i64 %124, 3
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %114, i64 %126
  %128 = ptrtoint %"class.spv::Instruction"** %127 to i64
  %129 = icmp sgt i64 %124, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %111
  %131 = bitcast %"class.spv::Instruction"** %127 to i8*
  %132 = bitcast %"class.spv::Instruction"** %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 %124, i1 false) #17
  %133 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %120, align 8
  br label %134

134:                                              ; preds = %130, %111
  %135 = phi %"class.spv::Instruction"** [ %121, %111 ], [ %133, %130 ]
  store i64 %128, i64* %85, align 8
  store i64 %119, i64* %84, align 8
  store i64 %116, i64* %94, align 8
  %136 = icmp eq %"class.spv::Instruction"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = bitcast %"class.spv::Instruction"** %135 to i8*
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %77, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #17
  %140 = load i32, i32* %29, align 8
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %143 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %144 = bitcast %"class.spv::Instruction"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.std::__1::vector.55"* %142 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = ashr exact i64 %148, 3
  %150 = icmp ugt i64 %149, %141
  %151 = inttoptr i64 %147 to %"class.spv::Instruction"**
  br i1 %150, label %164, label %152

152:                                              ; preds = %139
  %153 = add i32 %140, 16
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %149, %154
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = sub nsw i64 %154, %149
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %142, i64 %157) #17
  %158 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %142, i64 0, i32 0, i32 0
  %159 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %158, align 8
  br label %164

160:                                              ; preds = %152
  %161 = icmp ugt i64 %149, %154
  br i1 %161, label %162, label %164

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %151, i64 %154
  store %"class.spv::Instruction"** %163, %"class.spv::Instruction"*** %143, align 8
  br label %164

164:                                              ; preds = %139, %156, %160, %162
  %165 = phi %"class.spv::Instruction"** [ %151, %162 ], [ %151, %160 ], [ %159, %156 ], [ %151, %139 ]
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %165, i64 %141
  %167 = bitcast %"class.spv::Instruction"** %166 to i8**
  store i8* %22, i8** %167, align 8
  %168 = load i32, i32* %29, align 8
  br label %169

169:                                              ; preds = %18, %164
  %170 = phi i32 [ %168, %164 ], [ %19, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #17
  ret i32 %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE6castToINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEEvRT_NS_15round_directionE(%"class.spvutils::HexFloat"*, %"class.spvutils::HexFloat.172"* dereferenceable(2), i32) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.spvutils::HexFloat.172", %"class.spvutils::HexFloat.172"* %1, i64 0, i32 0, i32 0
  store i16 0, i16* %5, align 2
  %6 = getelementptr inbounds %"class.spvutils::HexFloat", %"class.spvutils::HexFloat"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  %9 = and i32 %7, 2147483647
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  br i1 %8, label %12, label %111

12:                                               ; preds = %11
  store i16 -32768, i16* %5, align 2
  br label %111

13:                                               ; preds = %3
  %14 = and i32 %7, 8388607
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 0, i8* %4, align 1
  %15 = call zeroext i16 @_ZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPb(%"class.spvutils::HexFloat"* %0, i32 %2, i8* nonnull %4)
  %16 = load i32, i32* %6, align 4
  %17 = lshr i32 %16, 23
  %18 = and i32 %17, 255
  %19 = add nsw i32 %18, -127
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %21, label %30

21:                                               ; preds = %13, %21
  %22 = phi i32 [ %27, %21 ], [ 4194304, %13 ]
  %23 = phi i32 [ %24, %21 ], [ -126, %13 ]
  %24 = add nsw i32 %23, -1
  %25 = and i32 %22, %14
  %26 = icmp ne i32 %25, 0
  %27 = lshr i32 %22, 1
  %28 = icmp eq i32 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %13
  %31 = phi i32 [ %19, %13 ], [ %24, %21 ]
  %32 = and i32 %16, 2139095040
  %33 = icmp eq i32 %32, 2139095040
  %34 = icmp ne i32 %14, 0
  %35 = and i1 %34, %33
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = zext i8 %37 to i32
  %39 = add nsw i32 %31, %38
  %40 = icmp slt i32 %39, 16
  %41 = xor i1 %33, true
  %42 = or i1 %34, %41
  %43 = and i1 %40, %42
  br i1 %43, label %53, label %44

44:                                               ; preds = %36
  %45 = select i1 %8, i16 -1024, i16 31744
  br label %109

46:                                               ; preds = %30
  %47 = lshr i32 %14, 13
  %48 = select i1 %8, i32 64512, i32 31744
  %49 = icmp eq i32 %47, 0
  %50 = select i1 %49, i32 1, i32 %47
  %51 = or i32 %50, %48
  %52 = trunc i32 %51 to i16
  br label %109

53:                                               ; preds = %36
  %54 = icmp slt i32 %16, 0
  %55 = icmp eq i32 %2, 3
  %56 = icmp eq i32 %2, 2
  %57 = select i1 %54, i1 %55, i1 %56
  %58 = trunc i32 %31 to i16
  %59 = icmp eq i16 %15, 0
  %60 = icmp slt i16 %58, -14
  %61 = lshr i16 %15, 1
  %62 = or i16 %61, 512
  %63 = select i1 %60, i16 %62, i16 %15
  %64 = xor i1 %60, true
  %65 = and i1 %59, %64
  %66 = icmp slt i16 %58, -15
  br i1 %66, label %67, label %91

67:                                               ; preds = %53
  %68 = sub i16 1, %58
  %69 = sub i16 -16, %58
  %70 = and i16 %68, 7
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %67, %72
  %73 = phi i16 [ %77, %72 ], [ %58, %67 ]
  %74 = phi i16 [ %76, %72 ], [ %63, %67 ]
  %75 = phi i16 [ %78, %72 ], [ %70, %67 ]
  %76 = lshr i16 %74, 1
  %77 = add nuw nsw i16 %73, 1
  %78 = add i16 %75, -1
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %80, label %72, !llvm.loop !42

80:                                               ; preds = %72, %67
  %81 = phi i16 [ undef, %67 ], [ %76, %72 ]
  %82 = phi i16 [ %58, %67 ], [ %77, %72 ]
  %83 = phi i16 [ %63, %67 ], [ %76, %72 ]
  %84 = icmp ult i16 %69, 7
  br i1 %84, label %91, label %85

85:                                               ; preds = %80, %85
  %86 = phi i16 [ %89, %85 ], [ %82, %80 ]
  %87 = phi i16 [ %88, %85 ], [ %83, %80 ]
  %88 = lshr i16 %87, 8
  %89 = add nuw nsw i16 %86, 8
  %90 = icmp eq i16 %89, -15
  br i1 %90, label %91, label %85

91:                                               ; preds = %80, %85, %53
  %92 = phi i16 [ %63, %53 ], [ %81, %80 ], [ %88, %85 ]
  %93 = phi i16 [ %58, %53 ], [ -15, %85 ], [ -15, %80 ]
  %94 = icmp ne i16 %93, -15
  %95 = icmp ne i16 %92, 0
  %96 = or i1 %95, %94
  %97 = or i1 %65, %96
  %98 = select i1 %57, i16 1, i16 %92
  %99 = select i1 %97, i16 %92, i16 %98
  %100 = lshr i32 %7, 16
  %101 = trunc i32 %100 to i16
  %102 = and i16 %101, -32768
  %103 = shl i16 %93, 10
  %104 = add i16 %103, 15360
  %105 = and i16 %104, 31744
  %106 = and i16 %99, 1023
  %107 = or i16 %105, %102
  %108 = or i16 %107, %106
  br label %109

109:                                              ; preds = %91, %46, %44
  %110 = phi i16 [ %108, %91 ], [ %52, %46 ], [ %45, %44 ]
  store i16 %110, i16* %5, align 2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br label %111

111:                                              ; preds = %11, %12, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder14makeFpConstantEjdb(%"class.spv::Builder"*, i32, double, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %6 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %5, align 8
  br label %7

7:                                                ; preds = %25, %4
  %8 = phi i32 [ %1, %4 ], [ %27, %25 ]
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, i64 %9
  %11 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %28 [
    i32 19, label %14
    i32 20, label %14
    i32 21, label %14
    i32 22, label %14
    i32 30, label %14
    i32 23, label %18
    i32 24, label %18
    i32 28, label %18
    i32 29, label %18
    i32 32, label %21
  ]

14:                                               ; preds = %7, %7, %7, %7, %7
  %15 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  br label %28

18:                                               ; preds = %7, %7, %7, %7
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  br label %25

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 1
  br label %25

25:                                               ; preds = %21, %18
  %26 = phi i32* [ %24, %21 ], [ %20, %18 ]
  %27 = load i32, i32* %26, align 4
  br label %7

28:                                               ; preds = %7, %14
  %29 = phi i64 [ %17, %14 ], [ 0, %7 ]
  %30 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, i64 %29
  %31 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %31, i64 0, i32 4, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %43 [
    i32 16, label %35
    i32 32, label %38
    i32 64, label %41
  ]

35:                                               ; preds = %28
  %36 = fptrunc double %2 to float
  %37 = tail call i32 @_ZN3spv7Builder19makeFloat16ConstantEfb(%"class.spv::Builder"* %0, float %36, i1 zeroext %3)
  br label %43

38:                                               ; preds = %28
  %39 = fptrunc double %2 to float
  %40 = tail call i32 @_ZN3spv7Builder17makeFloatConstantEfb(%"class.spv::Builder"* %0, float %39, i1 zeroext %3)
  br label %43

41:                                               ; preds = %28
  %42 = tail call i32 @_ZN3spv7Builder18makeDoubleConstantEdb(%"class.spv::Builder"* %0, double %2, i1 zeroext %3)
  br label %43

43:                                               ; preds = %28, %41, %38, %35
  %44 = phi i32 [ %42, %41 ], [ %40, %38 ], [ %37, %35 ], [ 0, %28 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder21findCompositeConstantENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.267", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17
  store i32 %1, i32* %9, align 4
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %13 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #17
  %16 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %17 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %16, 0
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 4
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17
  br i1 %27, label %28, label %89

28:                                               ; preds = %4
  %29 = bitcast i32* %10 to i8*
  %30 = bitcast %"class.std::__1::tuple.267"* %5 to i8*
  %31 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %28, %72
  %35 = phi i64 [ 0, %28 ], [ %73, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #17
  store i32 %1, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  store i32* %10, i32** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #17
  %36 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %37 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %36, 0
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to %"class.spv::Instruction"***
  %40 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %39, align 8
  %41 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %40, i64 %35
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #17
  %43 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %2
  br i1 %45, label %46, label %72

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 4
  %48 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 4, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.26"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = lshr exact i64 %53, 2
  %55 = trunc i64 %54 to i32
  %56 = icmp sgt i32 %55, 0
  %57 = inttoptr i64 %52 to i32*
  br i1 %56, label %58, label %86

58:                                               ; preds = %46
  %59 = load i32*, i32** %33, align 8
  %60 = shl i64 %53, 30
  %61 = ashr exact i64 %60, 32
  br label %64

62:                                               ; preds = %64
  %63 = icmp slt i64 %71, %61
  br i1 %63, label %64, label %86

64:                                               ; preds = %58, %62
  %65 = phi i64 [ 0, %58 ], [ %71, %62 ]
  %66 = getelementptr inbounds i32, i32* %57, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds i32, i32* %59, i64 %65
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %67, %69
  %71 = add nuw nsw i64 %65, 1
  br i1 %70, label %62, label %72

72:                                               ; preds = %64, %34
  %73 = add nuw nsw i64 %35, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17
  store i32 %1, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  store i32* %9, i32** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #17
  %74 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %75 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %74, 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %75, i64 4
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = shl i64 %82, 29
  %84 = ashr i64 %83, 32
  %85 = icmp slt i64 %73, %84
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17
  br i1 %85, label %34, label %89

86:                                               ; preds = %46, %62
  %87 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  br label %89

89:                                               ; preds = %72, %4, %86
  %90 = phi i32 [ %88, %86 ], [ 0, %4 ], [ 0, %72 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder18findStructConstantEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"*, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::tuple.282", align 8
  %5 = alloca %"class.std::__1::tuple.219", align 1
  %6 = alloca %"class.std::__1::tuple.282", align 8
  %7 = alloca %"class.std::__1::tuple.219", align 1
  %8 = alloca i32, align 4
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 33, i32 0
  %10 = bitcast %"class.std::__1::tuple.282"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.std::__1::tuple.282", %"class.std::__1::tuple.282"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #17
  %13 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.282"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %14 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %13, 0
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %14, i64 4
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %81

25:                                               ; preds = %3
  %26 = bitcast %"class.std::__1::tuple.282"* %4 to i8*
  %27 = getelementptr inbounds %"class.std::__1::tuple.282", %"class.std::__1::tuple.282"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %25, %64
  %31 = phi i64 [ 0, %25 ], [ %65, %64 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #17
  store i32* %8, i32** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #17
  %32 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.282"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %5) #17
  %33 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to %"class.spv::Instruction"***
  %36 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %35, align 8
  %37 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %36, i64 %31
  %38 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %37, align 8
  %39 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 4
  %40 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 4, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.26"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = icmp sgt i32 %47, 0
  %49 = inttoptr i64 %44 to i32*
  br i1 %48, label %50, label %78

50:                                               ; preds = %30
  %51 = load i32*, i32** %29, align 8
  %52 = shl i64 %45, 30
  %53 = ashr exact i64 %52, 32
  br label %56

54:                                               ; preds = %56
  %55 = icmp slt i64 %63, %53
  br i1 %55, label %56, label %78

56:                                               ; preds = %50, %54
  %57 = phi i64 [ 0, %50 ], [ %63, %54 ]
  %58 = getelementptr inbounds i32, i32* %49, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds i32, i32* %51, i64 %57
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  %63 = add nuw nsw i64 %57, 1
  br i1 %62, label %54, label %64

64:                                               ; preds = %56
  %65 = add nuw nsw i64 %31, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store i32* %8, i32** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #17
  %66 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %9, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.282"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %7) #17
  %67 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %66, 0
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 4
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = shl i64 %74, 29
  %76 = ashr i64 %75, 32
  %77 = icmp slt i64 %65, %76
  br i1 %77, label %30, label %81

78:                                               ; preds = %30, %54
  %79 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  br label %81

81:                                               ; preds = %64, %3, %78
  %82 = phi i32 [ %80, %78 ], [ 0, %3 ], [ 0, %64 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder21makeCompositeConstantEjRKNSt3__16vectorIjNS1_9allocatorIjEEEEb(%"class.spv::Builder"*, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::tuple.282", align 8
  %6 = alloca %"class.std::__1::tuple.219", align 1
  %7 = alloca %"class.std::__1::tuple.267", align 8
  %8 = alloca %"class.std::__1::tuple.219", align 1
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca i32, align 4
  store i32 %1, i32* %9, align 4
  %12 = select i1 %3, i32 51, i32 44
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %15 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %14, align 8
  %16 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %15, i64 %13
  %17 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %28 [
    i32 23, label %20
    i32 28, label %20
    i32 24, label %20
    i32 5358, label %20
    i32 30, label %24
  ]

20:                                               ; preds = %4, %4, %4, %4
  br i1 %3, label %30, label %21

21:                                               ; preds = %20
  %22 = tail call i32 @_ZN3spv7Builder21findCompositeConstantENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %19, i32 %1, %"class.std::__1::vector.26"* dereferenceable(24) %2)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %283

24:                                               ; preds = %4
  br i1 %3, label %30, label %25

25:                                               ; preds = %24
  %26 = tail call i32 @_ZN3spv7Builder18findStructConstantEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %1, %"class.std::__1::vector.26"* dereferenceable(24) %2)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %283

28:                                               ; preds = %4
  %29 = tail call i32 @_ZN3spv7Builder17makeFloatConstantEfb(%"class.spv::Builder"* %0, float 0.000000e+00, i1 zeroext false)
  br label %283

30:                                               ; preds = %24, %25, %20, %21
  %31 = tail call i8* @_Znwm(i64 80) #18
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  %35 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %31, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 %34, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %31, i64 12
  %39 = bitcast i8* %38 to i32*
  store i32 %1, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %31, i64 16
  %41 = bitcast i8* %40 to i32*
  store i32 %12, i32* %41, align 8
  %42 = getelementptr inbounds i8, i8* %31, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 56, i1 false) #17
  %43 = ptrtoint i8* %31 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = lshr exact i64 %49, 2
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %30
  %54 = bitcast i8* %31 to %"class.spv::Instruction"*
  br label %82

55:                                               ; preds = %82, %30
  %56 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  %57 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %43, i64* %57, align 8
  %58 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %60 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %61 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %60, align 8
  %62 = icmp ult %"class.std::__1::unique_ptr"* %59, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %64, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  store i64 %43, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %67 = ptrtoint %"class.std::__1::unique_ptr"* %66 to i64
  %68 = bitcast %"class.std::__1::unique_ptr"** %58 to i64*
  store i64 %67, i64* %68, align 8
  br label %71

69:                                               ; preds = %55
  %70 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %70, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  br label %71

71:                                               ; preds = %63, %69
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %72, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %72, align 8
  %74 = icmp eq %"class.spv::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.spv::Instruction"* %73 to void (%"class.spv::Instruction"*)***
  %77 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %78, align 8
  call void %79(%"class.spv::Instruction"* nonnull %73) #17
  br label %80

80:                                               ; preds = %71, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  %81 = icmp eq i32 %19, 30
  br i1 %81, label %95, label %173

82:                                               ; preds = %53, %82
  %83 = phi i64 [ %48, %53 ], [ %90, %82 ]
  %84 = phi i64 [ 0, %53 ], [ %88, %82 ]
  %85 = inttoptr i64 %83 to i32*
  %86 = getelementptr inbounds i32, i32* %85, i64 %84
  %87 = load i32, i32* %86, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %54, i32 %87)
  %88 = add nuw nsw i64 %84, 1
  %89 = load i64, i64* %45, align 8
  %90 = load i64, i64* %47, align 8
  %91 = sub i64 %89, %90
  %92 = shl i64 %91, 30
  %93 = ashr i64 %92, 32
  %94 = icmp slt i64 %88, %93
  br i1 %94, label %82, label %55

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 33, i32 0
  %97 = bitcast %"class.std::__1::tuple.282"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #17
  %98 = getelementptr inbounds %"class.std::__1::tuple.282", %"class.std::__1::tuple.282"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %99) #17
  %100 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %96, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.282"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %6) #17
  %101 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %99) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #17
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 4
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to %"class.spv::Instruction"***
  %105 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 5
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %106 to %"class.spv::Instruction"***
  %108 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %107, align 8
  %109 = icmp eq %"class.spv::Instruction"** %105, %108
  %110 = ptrtoint %"class.spv::Instruction"** %108 to i64
  br i1 %109, label %116, label %111

111:                                              ; preds = %95
  %112 = bitcast %"class.spv::Instruction"** %105 to i64*
  store i64 %43, i64* %112, align 8
  %113 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %105, i64 1
  %114 = ptrtoint %"class.spv::Instruction"** %113 to i64
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  store i64 %114, i64* %115, align 8
  br label %253

116:                                              ; preds = %95
  %117 = ptrtoint %"class.spv::Instruction"** %105 to i64
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %102 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %117, %120
  %122 = ashr exact i64 %121, 3
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 2305843009213693951
  br i1 %124, label %125, label %127

125:                                              ; preds = %116
  %126 = bitcast %"struct.std::__1::__hash_node_base"* %102 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #20
  unreachable

127:                                              ; preds = %116
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %129 = sub i64 %110, %120
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %130, 1152921504606846975
  br i1 %131, label %132, label %140

132:                                              ; preds = %127
  %133 = ashr exact i64 %129, 2
  %134 = icmp ult i64 %133, %123
  %135 = select i1 %134, i64 %123, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %132
  %138 = icmp ugt i64 %135, 2305843009213693951
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  call void @abort() #20
  unreachable

140:                                              ; preds = %137, %127
  %141 = phi i64 [ %135, %137 ], [ 2305843009213693951, %127 ]
  %142 = shl i64 %141, 3
  %143 = call i8* @_Znwm(i64 %142) #18
  %144 = bitcast i8* %143 to %"class.spv::Instruction"**
  br label %145

145:                                              ; preds = %140, %132
  %146 = phi i64 [ %141, %140 ], [ 0, %132 ]
  %147 = phi %"class.spv::Instruction"** [ %144, %140 ], [ null, %132 ]
  %148 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %147, i64 %122
  %149 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %147, i64 %146
  %150 = ptrtoint %"class.spv::Instruction"** %149 to i64
  %151 = bitcast %"class.spv::Instruction"** %148 to i64*
  store i64 %43, i64* %151, align 8
  %152 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %148, i64 1
  %153 = ptrtoint %"class.spv::Instruction"** %152 to i64
  %154 = bitcast %"struct.std::__1::__hash_node_base"* %102 to %"class.spv::Instruction"***
  %155 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %154, align 8
  %156 = load i64, i64* %118, align 8
  %157 = ptrtoint %"class.spv::Instruction"** %155 to i64
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 3
  %160 = sub nsw i64 0, %159
  %161 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %148, i64 %160
  %162 = ptrtoint %"class.spv::Instruction"** %161 to i64
  %163 = icmp sgt i64 %158, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %145
  %165 = bitcast %"class.spv::Instruction"** %161 to i8*
  %166 = bitcast %"class.spv::Instruction"** %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 %158, i1 false) #17
  %167 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %154, align 8
  br label %168

168:                                              ; preds = %164, %145
  %169 = phi %"class.spv::Instruction"** [ %155, %145 ], [ %167, %164 ]
  store i64 %162, i64* %119, align 8
  store i64 %153, i64* %118, align 8
  store i64 %150, i64* %128, align 8
  %170 = icmp eq %"class.spv::Instruction"** %169, null
  br i1 %170, label %253, label %171

171:                                              ; preds = %168
  %172 = bitcast %"class.spv::Instruction"** %169 to i8*
  call void @_ZdlPv(i8* %172) #18
  br label %253

173:                                              ; preds = %80
  %174 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174) #17
  store i32 %19, i32* %11, align 4
  %175 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 32, i32 0
  %176 = bitcast %"class.std::__1::tuple.267"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #17
  %177 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %177, align 8
  %178 = getelementptr inbounds %"class.std::__1::tuple.219", %"class.std::__1::tuple.219"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %178) #17
  %179 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %175, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.267"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.219"* nonnull dereferenceable(1) %8) #17
  %180 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %179, 0
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %180, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %178) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #17
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %180, i64 4
  %183 = bitcast %"struct.std::__1::__hash_node_base"* %182 to %"class.spv::Instruction"***
  %184 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %183, align 8
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %180, i64 5
  %186 = bitcast %"struct.std::__1::__hash_node_base"* %185 to %"class.spv::Instruction"***
  %187 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %186, align 8
  %188 = icmp eq %"class.spv::Instruction"** %184, %187
  %189 = ptrtoint %"class.spv::Instruction"** %187 to i64
  br i1 %188, label %195, label %190

190:                                              ; preds = %173
  %191 = bitcast %"class.spv::Instruction"** %184 to i64*
  store i64 %43, i64* %191, align 8
  %192 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %184, i64 1
  %193 = ptrtoint %"class.spv::Instruction"** %192 to i64
  %194 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  store i64 %193, i64* %194, align 8
  br label %252

195:                                              ; preds = %173
  %196 = ptrtoint %"class.spv::Instruction"** %184 to i64
  %197 = bitcast %"struct.std::__1::__hash_node_base"* %182 to i64*
  %198 = bitcast %"struct.std::__1::__hash_node_base"* %181 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = sub i64 %196, %199
  %201 = ashr exact i64 %200, 3
  %202 = add nsw i64 %201, 1
  %203 = icmp ugt i64 %202, 2305843009213693951
  br i1 %203, label %204, label %206

204:                                              ; preds = %195
  %205 = bitcast %"struct.std::__1::__hash_node_base"* %181 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %205) #20
  unreachable

206:                                              ; preds = %195
  %207 = bitcast %"struct.std::__1::__hash_node_base"* %185 to i64*
  %208 = sub i64 %189, %199
  %209 = ashr exact i64 %208, 3
  %210 = icmp ult i64 %209, 1152921504606846975
  br i1 %210, label %211, label %219

211:                                              ; preds = %206
  %212 = ashr exact i64 %208, 2
  %213 = icmp ult i64 %212, %202
  %214 = select i1 %213, i64 %202, i64 %212
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %224, label %216

216:                                              ; preds = %211
  %217 = icmp ugt i64 %214, 2305843009213693951
  br i1 %217, label %218, label %219

218:                                              ; preds = %216
  call void @abort() #20
  unreachable

219:                                              ; preds = %216, %206
  %220 = phi i64 [ %214, %216 ], [ 2305843009213693951, %206 ]
  %221 = shl i64 %220, 3
  %222 = call i8* @_Znwm(i64 %221) #18
  %223 = bitcast i8* %222 to %"class.spv::Instruction"**
  br label %224

224:                                              ; preds = %219, %211
  %225 = phi i64 [ %220, %219 ], [ 0, %211 ]
  %226 = phi %"class.spv::Instruction"** [ %223, %219 ], [ null, %211 ]
  %227 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %226, i64 %201
  %228 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %226, i64 %225
  %229 = ptrtoint %"class.spv::Instruction"** %228 to i64
  %230 = bitcast %"class.spv::Instruction"** %227 to i64*
  store i64 %43, i64* %230, align 8
  %231 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %227, i64 1
  %232 = ptrtoint %"class.spv::Instruction"** %231 to i64
  %233 = bitcast %"struct.std::__1::__hash_node_base"* %181 to %"class.spv::Instruction"***
  %234 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %233, align 8
  %235 = load i64, i64* %197, align 8
  %236 = ptrtoint %"class.spv::Instruction"** %234 to i64
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = sub nsw i64 0, %238
  %240 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %227, i64 %239
  %241 = ptrtoint %"class.spv::Instruction"** %240 to i64
  %242 = icmp sgt i64 %237, 0
  br i1 %242, label %243, label %247

243:                                              ; preds = %224
  %244 = bitcast %"class.spv::Instruction"** %240 to i8*
  %245 = bitcast %"class.spv::Instruction"** %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %244, i8* align 8 %245, i64 %237, i1 false) #17
  %246 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %233, align 8
  br label %247

247:                                              ; preds = %243, %224
  %248 = phi %"class.spv::Instruction"** [ %234, %224 ], [ %246, %243 ]
  store i64 %241, i64* %198, align 8
  store i64 %232, i64* %197, align 8
  store i64 %229, i64* %207, align 8
  %249 = icmp eq %"class.spv::Instruction"** %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %247
  %251 = bitcast %"class.spv::Instruction"** %248 to i8*
  call void @_ZdlPv(i8* %251) #18
  br label %252

252:                                              ; preds = %190, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174) #17
  br label %253

253:                                              ; preds = %171, %168, %111, %252
  %254 = load i32, i32* %37, align 8
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %257 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %258 = bitcast %"class.spv::Instruction"*** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.std::__1::vector.55"* %256 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = sub i64 %259, %261
  %263 = ashr exact i64 %262, 3
  %264 = icmp ugt i64 %263, %255
  %265 = inttoptr i64 %261 to %"class.spv::Instruction"**
  br i1 %264, label %278, label %266

266:                                              ; preds = %253
  %267 = add i32 %254, 16
  %268 = zext i32 %267 to i64
  %269 = icmp ult i64 %263, %268
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = sub nsw i64 %268, %263
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %256, i64 %271) #17
  %272 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %256, i64 0, i32 0, i32 0
  %273 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %272, align 8
  br label %278

274:                                              ; preds = %266
  %275 = icmp ugt i64 %263, %268
  br i1 %275, label %276, label %278

276:                                              ; preds = %274
  %277 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %265, i64 %268
  store %"class.spv::Instruction"** %277, %"class.spv::Instruction"*** %257, align 8
  br label %278

278:                                              ; preds = %253, %270, %274, %276
  %279 = phi %"class.spv::Instruction"** [ %265, %276 ], [ %265, %274 ], [ %273, %270 ], [ %265, %253 ]
  %280 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %279, i64 %255
  %281 = bitcast %"class.spv::Instruction"** %280 to i8**
  store i8* %31, i8** %281, align 8
  %282 = load i32, i32* %37, align 8
  br label %283

283:                                              ; preds = %21, %25, %278, %28
  %284 = phi i32 [ %29, %28 ], [ %282, %278 ], [ %26, %25 ], [ %22, %21 ]
  ret i32 %284
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.spv::Instruction"* @_ZN3spv7Builder13addEntryPointENS_14ExecutionModelEPNS_8FunctionEPKc(%"class.spv::Builder"*, i32, %"class.spv::Function"* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 15, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %1)
  %17 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %2, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %18)
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store i32 -1431655766, i32* %5, align 4
  br label %20

20:                                               ; preds = %31, %4
  %21 = phi i8* [ %3, %4 ], [ %24, %31 ]
  %22 = phi i8* [ %19, %4 ], [ %32, %31 ]
  %23 = phi i32 [ 0, %4 ], [ %33, %31 ]
  %24 = getelementptr inbounds i8, i8* %21, i64 1
  %25 = load i8, i8* %21, align 1
  %26 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 %25, i8* %22, align 1
  %27 = add nsw i32 %23, 1
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %30) #17
  br label %31

31:                                               ; preds = %29, %20
  %32 = phi i8* [ %19, %29 ], [ %26, %20 ]
  %33 = phi i32 [ 0, %29 ], [ %27, %20 ]
  %34 = icmp eq i8 %25, 0
  br i1 %34, label %35, label %20

35:                                               ; preds = %31
  %36 = icmp sgt i32 %33, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = icmp slt i32 %33, 4
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  %40 = sub nuw nsw i32 3, %33
  %41 = zext i32 %40 to i64
  %42 = add nuw nsw i64 %41, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 %42, i1 false) #17
  br label %43

43:                                               ; preds = %39, %37
  %44 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %44) #17
  br label %45

45:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  %46 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  %47 = ptrtoint i8* %7 to i64
  %48 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25, i32 0, i32 1
  %50 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25, i32 0, i32 2, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = icmp ult %"class.std::__1::unique_ptr"* %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %55, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %47, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 1
  %58 = ptrtoint %"class.std::__1::unique_ptr"* %57 to i64
  %59 = bitcast %"class.std::__1::unique_ptr"** %49 to i64*
  store i64 %58, i64* %59, align 8
  br label %62

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %61, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %62

62:                                               ; preds = %54, %60
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %63, align 8
  %65 = icmp eq %"class.spv::Instruction"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.spv::Instruction"* %64 to void (%"class.spv::Instruction"*)***
  %68 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %68, i64 1
  %70 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %69, align 8
  call void %70(%"class.spv::Instruction"* nonnull %64) #17
  br label %71

71:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  ret %"class.spv::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16addExecutionModeEPNS_8FunctionENS_13ExecutionModeEiii(%"class.spv::Builder"*, %"class.spv::Function"* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 16, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  %18 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %1, i64 0, i32 2, i32 1
  %19 = load i32, i32* %18, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %19)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  %20 = icmp sgt i32 %3, -1
  br i1 %20, label %21, label %22

21:                                               ; preds = %6
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %3)
  br label %22

22:                                               ; preds = %21, %6
  %23 = icmp sgt i32 %4, -1
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %4)
  br label %25

25:                                               ; preds = %24, %22
  %26 = icmp sgt i32 %5, -1
  br i1 %26, label %27, label %28

27:                                               ; preds = %25
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %5)
  br label %28

28:                                               ; preds = %27, %25
  %29 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %30 = ptrtoint i8* %8 to i64
  %31 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr"* %33, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %38, align 8
  %39 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %30, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %41 = ptrtoint %"class.std::__1::unique_ptr"* %40 to i64
  %42 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %44, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %45

45:                                               ; preds = %37, %43
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %46, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %46, align 8
  %48 = icmp eq %"class.spv::Instruction"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.spv::Instruction"* %47 to void (%"class.spv::Instruction"*)***
  %51 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %51, i64 1
  %53 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %52, align 8
  call void %53(%"class.spv::Instruction"* nonnull %47) #17
  br label %54

54:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16addExecutionModeEPNS_8FunctionENS_13ExecutionModeERKNSt3__16vectorIjNS4_9allocatorIjEEEE(%"class.spv::Builder"*, %"class.spv::Function"* nocapture readonly, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 16, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  %16 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %1, i64 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %17)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %2)
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %19, %21
  br i1 %22, label %23, label %50

23:                                               ; preds = %50, %4
  %24 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = ptrtoint i8* %6 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = icmp ult %"class.std::__1::unique_ptr"* %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %25, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %37 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %36, i64* %37, align 8
  br label %40

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %39, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %40

40:                                               ; preds = %32, %38
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %41, align 8
  %43 = icmp eq %"class.spv::Instruction"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.spv::Instruction"* %42 to void (%"class.spv::Instruction"*)***
  %46 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %46, i64 1
  %48 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %47, align 8
  call void %48(%"class.spv::Instruction"* nonnull %42) #17
  br label %49

49:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  ret void

50:                                               ; preds = %4, %50
  %51 = phi i32* [ %53, %50 ], [ %19, %4 ]
  %52 = load i32, i32* %51, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %52)
  %53 = getelementptr inbounds i32, i32* %51, i64 1
  %54 = icmp eq i32* %53, %21
  br i1 %54, label %23, label %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder18addExecutionModeIdEPNS_8FunctionENS_13ExecutionModeERKNSt3__16vectorIjNS4_9allocatorIjEEEE(%"class.spv::Builder"*, %"class.spv::Function"* nocapture readonly, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 331, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  %16 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %1, i64 0, i32 2, i32 1
  %17 = load i32, i32* %16, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %17)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %2)
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %19, %21
  br i1 %22, label %23, label %50

23:                                               ; preds = %50, %4
  %24 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = ptrtoint i8* %6 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = icmp ult %"class.std::__1::unique_ptr"* %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %25, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %37 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %36, i64* %37, align 8
  br label %40

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %39, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %40

40:                                               ; preds = %32, %38
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %41, align 8
  %43 = icmp eq %"class.spv::Instruction"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.spv::Instruction"* %42 to void (%"class.spv::Instruction"*)***
  %46 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %46, i64 1
  %48 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %47, align 8
  call void %48(%"class.spv::Instruction"* nonnull %42) #17
  br label %49

49:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  ret void

50:                                               ; preds = %4, %50
  %51 = phi i32* [ %53, %50 ], [ %19, %4 ]
  %52 = load i32, i32* %51, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %52)
  %53 = getelementptr inbounds i32, i32* %51, i64 1
  %54 = icmp eq i32* %53, %21
  br i1 %54, label %23, label %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13addMemberNameEjiPKc(%"class.spv::Builder"*, i32, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 6, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %2)
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #17
  store i32 -1431655766, i32* %5, align 4
  br label %18

18:                                               ; preds = %29, %4
  %19 = phi i8* [ %3, %4 ], [ %22, %29 ]
  %20 = phi i8* [ %17, %4 ], [ %30, %29 ]
  %21 = phi i32 [ 0, %4 ], [ %31, %29 ]
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %19, align 1
  %24 = getelementptr inbounds i8, i8* %20, i64 1
  store i8 %23, i8* %20, align 1
  %25 = add nsw i32 %21, 1
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %28) #17
  br label %29

29:                                               ; preds = %27, %18
  %30 = phi i8* [ %17, %27 ], [ %24, %18 ]
  %31 = phi i32 [ 0, %27 ], [ %25, %18 ]
  %32 = icmp eq i8 %23, 0
  br i1 %32, label %33, label %18

33:                                               ; preds = %29
  %34 = icmp sgt i32 %31, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %33
  %36 = icmp slt i32 %31, 4
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = sub nuw nsw i32 3, %31
  %39 = zext i32 %38 to i64
  %40 = add nuw nsw i64 %39, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %30, i8 0, i64 %40, i1 false) #17
  br label %41

41:                                               ; preds = %37, %35
  %42 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %42) #17
  br label %43

43:                                               ; preds = %33, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #17
  %44 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  %45 = ptrtoint i8* %7 to i64
  %46 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27, i32 0, i32 1
  %48 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %47, align 8
  %49 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27, i32 0, i32 2, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %51 = icmp ult %"class.std::__1::unique_ptr"* %48, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %53, align 8
  %54 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %45, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 1
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %55 to i64
  %57 = bitcast %"class.std::__1::unique_ptr"** %47 to i64*
  store i64 %56, i64* %57, align 8
  br label %60

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %59, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %60

60:                                               ; preds = %52, %58
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %61, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %61, align 8
  %63 = icmp eq %"class.spv::Instruction"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.spv::Instruction"* %62 to void (%"class.spv::Instruction"*)***
  %66 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %66, i64 1
  %68 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %67, align 8
  call void %68(%"class.spv::Instruction"* nonnull %62) #17
  br label %69

69:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = icmp eq i32 %2, 2147483647
  br i1 %6, label %47, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 71, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  %18 = icmp sgt i32 %3, -1
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %3)
  br label %20

20:                                               ; preds = %19, %7
  %21 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp ult %"class.std::__1::unique_ptr"* %25, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %30, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %22, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %33 = ptrtoint %"class.std::__1::unique_ptr"* %32 to i64
  %34 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  store i64 %33, i64* %34, align 8
  br label %37

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %36, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %37

37:                                               ; preds = %29, %35
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %38, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %38, align 8
  %40 = icmp eq %"class.spv::Instruction"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.spv::Instruction"* %39 to void (%"class.spv::Instruction"*)***
  %43 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %43, i64 1
  %45 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %44, align 8
  call void %45(%"class.spv::Instruction"* nonnull %39) #17
  br label %46

46:                                               ; preds = %37, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  br label %47

47:                                               ; preds = %4, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEPKc(%"class.spv::Builder"*, i32, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = icmp eq i32 %2, 2147483647
  br i1 %7, label %72, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 80) #18
  %10 = bitcast i8* %9 to %"class.spv::Instruction"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 5632, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %2)
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #17
  store i32 -1431655766, i32* %5, align 4
  br label %20

20:                                               ; preds = %31, %8
  %21 = phi i8* [ %3, %8 ], [ %24, %31 ]
  %22 = phi i8* [ %19, %8 ], [ %32, %31 ]
  %23 = phi i32 [ 0, %8 ], [ %33, %31 ]
  %24 = getelementptr inbounds i8, i8* %21, i64 1
  %25 = load i8, i8* %21, align 1
  %26 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 %25, i8* %22, align 1
  %27 = add nsw i32 %23, 1
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %30) #17
  br label %31

31:                                               ; preds = %29, %20
  %32 = phi i8* [ %19, %29 ], [ %26, %20 ]
  %33 = phi i32 [ 0, %29 ], [ %27, %20 ]
  %34 = icmp eq i8 %25, 0
  br i1 %34, label %35, label %20

35:                                               ; preds = %31
  %36 = icmp sgt i32 %33, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = icmp slt i32 %33, 4
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  %40 = sub nuw nsw i32 3, %33
  %41 = zext i32 %40 to i64
  %42 = add nuw nsw i64 %41, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 %42, i1 false) #17
  br label %43

43:                                               ; preds = %39, %37
  %44 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %44) #17
  br label %45

45:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #17
  %46 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  %47 = ptrtoint i8* %9 to i64
  %48 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %50 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = icmp ult %"class.std::__1::unique_ptr"* %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %55, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %47, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 1
  %58 = ptrtoint %"class.std::__1::unique_ptr"* %57 to i64
  %59 = bitcast %"class.std::__1::unique_ptr"** %49 to i64*
  store i64 %58, i64* %59, align 8
  br label %62

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %61, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %62

62:                                               ; preds = %54, %60
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %63, align 8
  %65 = icmp eq %"class.spv::Instruction"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.spv::Instruction"* %64 to void (%"class.spv::Instruction"*)***
  %68 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %68, i64 1
  %70 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %69, align 8
  call void %70(%"class.spv::Instruction"* nonnull %64) #17
  br label %71

71:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  br label %72

72:                                               ; preds = %4, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13addDecorationEjNS_10DecorationERKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = icmp eq i32 %2, 2147483647
  br i1 %6, label %55, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 71, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %19, %21
  br i1 %22, label %23, label %50

23:                                               ; preds = %50, %7
  %24 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = ptrtoint i8* %8 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = icmp ult %"class.std::__1::unique_ptr"* %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %25, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %37 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %36, i64* %37, align 8
  br label %40

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %39, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %40

40:                                               ; preds = %32, %38
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %41, align 8
  %43 = icmp eq %"class.spv::Instruction"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.spv::Instruction"* %42 to void (%"class.spv::Instruction"*)***
  %46 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %46, i64 1
  %48 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %47, align 8
  call void %48(%"class.spv::Instruction"* nonnull %42) #17
  br label %49

49:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  br label %55

50:                                               ; preds = %7, %50
  %51 = phi i32* [ %53, %50 ], [ %19, %7 ]
  %52 = load i32, i32* %51, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %52)
  %53 = getelementptr inbounds i32, i32* %51, i64 1
  %54 = icmp eq i32* %53, %21
  br i1 %54, label %23, label %50

55:                                               ; preds = %4, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13addDecorationEjNS_10DecorationERKNSt3__16vectorIPKcNS2_9allocatorIS5_EEEE(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = icmp eq i32 %2, 2147483647
  br i1 %7, label %84, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 80) #18
  %10 = bitcast i8* %9 to %"class.spv::Instruction"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 5632, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %2)
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %20 = load i8**, i8*** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %22 = load i8**, i8*** %21, align 8
  %23 = icmp eq i8** %20, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %8
  %25 = bitcast i32* %5 to i8*
  br label %53

26:                                               ; preds = %81, %8
  %27 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  %28 = ptrtoint i8* %9 to i64
  %29 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %36, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %28, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"** %30 to i64*
  store i64 %39, i64* %40, align 8
  br label %43

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %42, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %43

43:                                               ; preds = %35, %41
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %44, align 8
  %46 = icmp eq %"class.spv::Instruction"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.spv::Instruction"* %45 to void (%"class.spv::Instruction"*)***
  %49 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %49, i64 1
  %51 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %50, align 8
  call void %51(%"class.spv::Instruction"* nonnull %45) #17
  br label %52

52:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %84

53:                                               ; preds = %24, %81
  %54 = phi i8** [ %20, %24 ], [ %82, %81 ]
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #17
  store i32 -1431655766, i32* %5, align 4
  br label %56

56:                                               ; preds = %67, %53
  %57 = phi i8* [ %55, %53 ], [ %60, %67 ]
  %58 = phi i8* [ %25, %53 ], [ %68, %67 ]
  %59 = phi i32 [ 0, %53 ], [ %69, %67 ]
  %60 = getelementptr inbounds i8, i8* %57, i64 1
  %61 = load i8, i8* %57, align 1
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  store i8 %61, i8* %58, align 1
  %63 = add nsw i32 %59, 1
  %64 = icmp eq i32 %63, 4
  br i1 %64, label %65, label %67

65:                                               ; preds = %56
  %66 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %66) #17
  br label %67

67:                                               ; preds = %65, %56
  %68 = phi i8* [ %25, %65 ], [ %62, %56 ]
  %69 = phi i32 [ 0, %65 ], [ %63, %56 ]
  %70 = icmp eq i8 %61, 0
  br i1 %70, label %71, label %56

71:                                               ; preds = %67
  %72 = icmp sgt i32 %69, 0
  br i1 %72, label %73, label %81

73:                                               ; preds = %71
  %74 = icmp slt i32 %69, 4
  br i1 %74, label %75, label %79

75:                                               ; preds = %73
  %76 = sub nuw nsw i32 3, %69
  %77 = zext i32 %76 to i64
  %78 = add nuw nsw i64 %77, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 0, i64 %78, i1 false) #17
  br label %79

79:                                               ; preds = %75, %73
  %80 = load i32, i32* %5, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %80) #17
  br label %81

81:                                               ; preds = %71, %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #17
  %82 = getelementptr inbounds i8*, i8** %54, i64 1
  %83 = icmp eq i8** %82, %22
  br i1 %83, label %26, label %53

84:                                               ; preds = %4, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder15addDecorationIdEjNS_10DecorationEj(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = icmp eq i32 %2, 2147483647
  br i1 %6, label %44, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 332, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %3)
  %18 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %27, align 8
  %28 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %19, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %7
  %33 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %33, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %34

34:                                               ; preds = %26, %32
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %35, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %35, align 8
  %37 = icmp eq %"class.spv::Instruction"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.spv::Instruction"* %36 to void (%"class.spv::Instruction"*)***
  %40 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %40, i64 1
  %42 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %41, align 8
  call void %42(%"class.spv::Instruction"* nonnull %36) #17
  br label %43

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  br label %44

44:                                               ; preds = %4, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder15addDecorationIdEjNS_10DecorationERKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = icmp eq i32 %2, 2147483647
  br i1 %6, label %55, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 332, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %19, %21
  br i1 %22, label %23, label %50

23:                                               ; preds = %50, %7
  %24 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = ptrtoint i8* %8 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = icmp ult %"class.std::__1::unique_ptr"* %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %25, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %37 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %36, i64* %37, align 8
  br label %40

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %39, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %40

40:                                               ; preds = %32, %38
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %41, align 8
  %43 = icmp eq %"class.spv::Instruction"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.spv::Instruction"* %42 to void (%"class.spv::Instruction"*)***
  %46 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %46, i64 1
  %48 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %47, align 8
  call void %48(%"class.spv::Instruction"* nonnull %42) #17
  br label %49

49:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  br label %55

50:                                               ; preds = %7, %50
  %51 = phi i32* [ %53, %50 ], [ %19, %7 ]
  %52 = load i32, i32* %51, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %52)
  %53 = getelementptr inbounds i32, i32* %51, i64 1
  %54 = icmp eq i32* %53, %21
  br i1 %54, label %23, label %50

55:                                               ; preds = %4, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder19addMemberDecorationEjjNS_10DecorationEi(%"class.spv::Builder"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = icmp eq i32 %3, 2147483647
  br i1 %7, label %48, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 80) #18
  %10 = bitcast i8* %9 to %"class.spv::Instruction"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 72, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %3)
  %19 = icmp sgt i32 %4, -1
  br i1 %19, label %20, label %21

20:                                               ; preds = %8
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %4)
  br label %21

21:                                               ; preds = %20, %8
  %22 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = ptrtoint i8* %9 to i64
  %24 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp ult %"class.std::__1::unique_ptr"* %26, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %31, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %23, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %34 = ptrtoint %"class.std::__1::unique_ptr"* %33 to i64
  %35 = bitcast %"class.std::__1::unique_ptr"** %25 to i64*
  store i64 %34, i64* %35, align 8
  br label %38

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %37, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %38

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %39, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %39, align 8
  %41 = icmp eq %"class.spv::Instruction"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.spv::Instruction"* %40 to void (%"class.spv::Instruction"*)***
  %44 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %44, i64 1
  %46 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %45, align 8
  call void %46(%"class.spv::Instruction"* nonnull %40) #17
  br label %47

47:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  br label %48

48:                                               ; preds = %5, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder19addMemberDecorationEjjNS_10DecorationEPKc(%"class.spv::Builder"*, i32, i32, i32, i8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = icmp eq i32 %3, 2147483647
  br i1 %8, label %73, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 80) #18
  %11 = bitcast i8* %10 to %"class.spv::Instruction"*
  %12 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 5633, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %3)
  %20 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #17
  store i32 -1431655766, i32* %6, align 4
  br label %21

21:                                               ; preds = %32, %9
  %22 = phi i8* [ %4, %9 ], [ %25, %32 ]
  %23 = phi i8* [ %20, %9 ], [ %33, %32 ]
  %24 = phi i32 [ 0, %9 ], [ %34, %32 ]
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  %26 = load i8, i8* %22, align 1
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  store i8 %26, i8* %23, align 1
  %28 = add nsw i32 %24, 1
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = load i32, i32* %6, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %31) #17
  br label %32

32:                                               ; preds = %30, %21
  %33 = phi i8* [ %20, %30 ], [ %27, %21 ]
  %34 = phi i32 [ 0, %30 ], [ %28, %21 ]
  %35 = icmp eq i8 %26, 0
  br i1 %35, label %36, label %21

36:                                               ; preds = %32
  %37 = icmp sgt i32 %34, 0
  br i1 %37, label %38, label %46

38:                                               ; preds = %36
  %39 = icmp slt i32 %34, 4
  br i1 %39, label %40, label %44

40:                                               ; preds = %38
  %41 = sub nuw nsw i32 3, %34
  %42 = zext i32 %41 to i64
  %43 = add nuw nsw i64 %42, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %33, i8 0, i64 %43, i1 false) #17
  br label %44

44:                                               ; preds = %40, %38
  %45 = load i32, i32* %6, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %45) #17
  br label %46

46:                                               ; preds = %36, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #17
  %47 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17
  %48 = ptrtoint i8* %10 to i64
  %49 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %51 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %50, align 8
  %52 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %52, align 8
  %54 = icmp ult %"class.std::__1::unique_ptr"* %51, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %56, align 8
  %57 = bitcast %"class.std::__1::unique_ptr"* %51 to i64*
  store i64 %48, i64* %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 1
  %59 = ptrtoint %"class.std::__1::unique_ptr"* %58 to i64
  %60 = bitcast %"class.std::__1::unique_ptr"** %50 to i64*
  store i64 %59, i64* %60, align 8
  br label %63

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %62, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %63

63:                                               ; preds = %55, %61
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %64, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %64, align 8
  %66 = icmp eq %"class.spv::Instruction"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.spv::Instruction"* %65 to void (%"class.spv::Instruction"*)***
  %69 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %69, i64 1
  %71 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %70, align 8
  call void %71(%"class.spv::Instruction"* nonnull %65) #17
  br label %72

72:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  br label %73

73:                                               ; preds = %5, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder19addMemberDecorationEjjNS_10DecorationERKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = icmp eq i32 %3, 2147483647
  br i1 %7, label %56, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 80) #18
  %10 = bitcast i8* %9 to %"class.spv::Instruction"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 72, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %3)
  %19 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %20, %22
  br i1 %23, label %24, label %51

24:                                               ; preds = %51, %8
  %25 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %26 = ptrtoint i8* %9 to i64
  %27 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = icmp ult %"class.std::__1::unique_ptr"* %29, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %34, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %26, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %37 = ptrtoint %"class.std::__1::unique_ptr"* %36 to i64
  %38 = bitcast %"class.std::__1::unique_ptr"** %28 to i64*
  store i64 %37, i64* %38, align 8
  br label %41

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %40, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %41

41:                                               ; preds = %33, %39
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %42, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %42, align 8
  %44 = icmp eq %"class.spv::Instruction"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.spv::Instruction"* %43 to void (%"class.spv::Instruction"*)***
  %47 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %47, i64 1
  %49 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %48, align 8
  call void %49(%"class.spv::Instruction"* nonnull %43) #17
  br label %50

50:                                               ; preds = %41, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  br label %56

51:                                               ; preds = %8, %51
  %52 = phi i32* [ %54, %51 ], [ %20, %8 ]
  %53 = load i32, i32* %52, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %53)
  %54 = getelementptr inbounds i32, i32* %52, i64 1
  %55 = icmp eq i32* %54, %22
  br i1 %55, label %24, label %51

56:                                               ; preds = %5, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder19addMemberDecorationEjjNS_10DecorationERKNSt3__16vectorIPKcNS2_9allocatorIS5_EEEE(%"class.spv::Builder"*, i32, i32, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = icmp eq i32 %3, 2147483647
  br i1 %8, label %85, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 80) #18
  %11 = bitcast i8* %10 to %"class.spv::Instruction"*
  %12 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 5633, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %3)
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %21 = load i8**, i8*** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %23 = load i8**, i8*** %22, align 8
  %24 = icmp eq i8** %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %9
  %26 = bitcast i32* %6 to i8*
  br label %54

27:                                               ; preds = %82, %9
  %28 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %29 = ptrtoint i8* %10 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %32 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %33 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr"* %32, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %37, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %32 to i64*
  store i64 %29, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr"* %39 to i64
  %41 = bitcast %"class.std::__1::unique_ptr"** %31 to i64*
  store i64 %40, i64* %41, align 8
  br label %44

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %43, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %44

44:                                               ; preds = %36, %42
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %45, align 8
  %47 = icmp eq %"class.spv::Instruction"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.spv::Instruction"* %46 to void (%"class.spv::Instruction"*)***
  %50 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %50, i64 1
  %52 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %51, align 8
  call void %52(%"class.spv::Instruction"* nonnull %46) #17
  br label %53

53:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %85

54:                                               ; preds = %25, %82
  %55 = phi i8** [ %21, %25 ], [ %83, %82 ]
  %56 = load i8*, i8** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #17
  store i32 -1431655766, i32* %6, align 4
  br label %57

57:                                               ; preds = %68, %54
  %58 = phi i8* [ %56, %54 ], [ %61, %68 ]
  %59 = phi i8* [ %26, %54 ], [ %69, %68 ]
  %60 = phi i32 [ 0, %54 ], [ %70, %68 ]
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = load i8, i8* %58, align 1
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 %62, i8* %59, align 1
  %64 = add nsw i32 %60, 1
  %65 = icmp eq i32 %64, 4
  br i1 %65, label %66, label %68

66:                                               ; preds = %57
  %67 = load i32, i32* %6, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %67) #17
  br label %68

68:                                               ; preds = %66, %57
  %69 = phi i8* [ %26, %66 ], [ %63, %57 ]
  %70 = phi i32 [ 0, %66 ], [ %64, %57 ]
  %71 = icmp eq i8 %62, 0
  br i1 %71, label %72, label %57

72:                                               ; preds = %68
  %73 = icmp sgt i32 %70, 0
  br i1 %73, label %74, label %82

74:                                               ; preds = %72
  %75 = icmp slt i32 %70, 4
  br i1 %75, label %76, label %80

76:                                               ; preds = %74
  %77 = sub nuw nsw i32 3, %70
  %78 = zext i32 %77 to i64
  %79 = add nuw nsw i64 %78, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 0, i64 %79, i1 false) #17
  br label %80

80:                                               ; preds = %76, %74
  %81 = load i32, i32* %6, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %81) #17
  br label %82

82:                                               ; preds = %72, %80
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #17
  %83 = getelementptr inbounds i8*, i8** %55, i64 1
  %84 = icmp eq i8** %83, %23
  br i1 %84, label %27, label %54

85:                                               ; preds = %5, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.spv::Function"* @_ZN3spv7Builder14makeEntryPointEPKc(%"class.spv::Builder"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.spv::Block"*, align 8
  %4 = alloca %"class.std::__1::vector.26", align 8
  %5 = alloca %"class.std::__1::vector.175", align 8
  %6 = bitcast %"class.spv::Block"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  store %"class.spv::Block"* inttoptr (i64 -6148914691236517206 to %"class.spv::Block"*), %"class.spv::Block"** %3, align 8
  %7 = bitcast %"class.std::__1::vector.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #17
  %8 = bitcast %"class.std::__1::vector.175"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #17
  %9 = tail call i32 @_ZN3spv7Builder12makeVoidTypeEv(%"class.spv::Builder"* %0)
  %10 = call %"class.spv::Function"* @_ZN3spv7Builder17makeFunctionEntryENS_10DecorationEjPKcRKNSt3__16vectorIjNS4_9allocatorIjEEEERKNS5_INS5_IS1_NS6_IS1_EEEENS6_ISC_EEEEPPNS_5BlockE(%"class.spv::Builder"* %0, i32 2147483647, i32 %9, i8* %1, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.175"* nonnull dereferenceable(24) %5, %"class.spv::Block"** nonnull %3)
  %11 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 19
  store %"class.spv::Function"* %10, %"class.spv::Function"** %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret %"class.spv::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.spv::Function"* @_ZN3spv7Builder17makeFunctionEntryENS_10DecorationEjPKcRKNSt3__16vectorIjNS4_9allocatorIjEEEERKNS5_INS5_IS1_NS6_IS1_EEEENS6_ISC_EEEEPPNS_5BlockE(%"class.spv::Builder"*, i32, i32, i8* readonly, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.175"* nocapture readonly dereferenceable(24), %"class.spv::Block"**) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = alloca %"class.std::__1::unique_ptr.79", align 8
  %10 = tail call i32 @_ZN3spv7Builder16makeFunctionTypeEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %2, %"class.std::__1::vector.26"* dereferenceable(24) %4)
  %11 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.26"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %7
  %19 = lshr exact i64 %16, 2
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = add i32 %22, %20
  store i32 %24, i32* %21, align 8
  br label %25

25:                                               ; preds = %7, %18
  %26 = phi i32 [ %23, %18 ], [ 0, %7 ]
  %27 = tail call i8* @_Znwm(i64 176) #18
  %28 = bitcast i8* %27 to %"class.spv::Function"*
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16
  tail call void @_ZN3spv8FunctionC2EjjjjRNS_6ModuleE(%"class.spv::Function"* nonnull %28, i32 %31, i32 %2, i32 %10, i32 %26, %"class.spv::Module"* dereferenceable(56) %32)
  %33 = getelementptr inbounds i8, i8* %27, i64 24
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = icmp ne i32 %1, 2147483647
  %37 = icmp ne i32 %35, 0
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %25
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %35, i32 %1, i32 -1) #17
  br label %40

40:                                               ; preds = %25, %39
  %41 = icmp eq i32 %1, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8, i8* %27, i64 145
  store i8 1, i8* %43, align 1
  br label %44

44:                                               ; preds = %40, %42
  %45 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %5, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::vector.177"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.175"* %5 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = sdiv exact i64 %50, 24
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %83, label %54

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.std::__1::vector.175", %"class.std::__1::vector.175"* %5, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds i8, i8* %27, i64 152
  %57 = getelementptr inbounds i8, i8* %27, i64 160
  %58 = bitcast i8* %57 to %"class.std::__1::__tree_node.240"**
  %59 = bitcast i8* %57 to %"class.std::__1::__tree_node_base"**
  %60 = bitcast i8* %57 to %"class.std::__1::__tree_end_node"*
  %61 = bitcast i8* %56 to %"class.std::__1::__tree_end_node"**
  %62 = bitcast i8* %56 to i64*
  %63 = getelementptr inbounds i8, i8* %27, i64 168
  %64 = bitcast i8* %63 to i64*
  br label %65

65:                                               ; preds = %54, %87
  %66 = phi i64 [ %49, %54 ], [ %88, %87 ]
  %67 = phi i64 [ %47, %54 ], [ %89, %87 ]
  %68 = phi i64 [ 0, %54 ], [ %90, %87 ]
  %69 = inttoptr i64 %66 to %"class.std::__1::vector.177"*
  %70 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %69, i64 %68
  %71 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %69, i64 %68, i32 0, i32 1
  %72 = bitcast i32** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.177"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = lshr exact i64 %76, 2
  %78 = trunc i64 %77 to i32
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %65
  %81 = trunc i64 %68 to i32
  %82 = add i32 %26, %81
  br label %95

83:                                               ; preds = %87, %44
  %84 = icmp eq %"class.spv::Block"** %6, null
  br i1 %84, label %258, label %180

85:                                               ; preds = %166
  %86 = load i64, i64* %46, align 8
  br label %87

87:                                               ; preds = %85, %65
  %88 = phi i64 [ %167, %85 ], [ %66, %65 ]
  %89 = phi i64 [ %86, %85 ], [ %67, %65 ]
  %90 = add nuw nsw i64 %68, 1
  %91 = sub i64 %89, %88
  %92 = sdiv exact i64 %91, 24
  %93 = and i64 %92, 4294967295
  %94 = icmp ult i64 %90, %93
  br i1 %94, label %65, label %83

95:                                               ; preds = %80, %166
  %96 = phi i64 [ 0, %80 ], [ %169, %166 ]
  %97 = phi %"class.std::__1::vector.177"* [ %69, %80 ], [ %168, %166 ]
  %98 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %97, i64 %68, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %82, i32 %101, i32 -1)
  %102 = load %"class.std::__1::vector.177"*, %"class.std::__1::vector.177"** %55, align 8
  %103 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %102, i64 %68, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 %96
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  %108 = ptrtoint %"class.std::__1::vector.177"* %102 to i64
  br i1 %107, label %109, label %166

109:                                              ; preds = %95
  %110 = load %"class.std::__1::__tree_node.240"*, %"class.std::__1::__tree_node.240"** %58, align 8
  %111 = icmp eq %"class.std::__1::__tree_node.240"* %110, null
  br i1 %111, label %138, label %112

112:                                              ; preds = %109, %134
  %113 = phi %"class.std::__1::__tree_node.240"* [ %137, %134 ], [ %110, %109 ]
  %114 = phi %"class.std::__1::__tree_node_base"** [ %136, %134 ], [ %59, %109 ]
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %113, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, %81
  br i1 %117, label %118, label %124

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %113, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %122, label %134

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %113, i64 0, i32 0, i32 0
  br label %138

124:                                              ; preds = %112
  %125 = icmp slt i32 %116, %81
  br i1 %125, label %126, label %132

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %113, i64 0, i32 0, i32 1
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %113, i64 0, i32 0, i32 0
  br label %138

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %113, i64 0, i32 0, i32 0
  br label %138

134:                                              ; preds = %126, %118
  %135 = phi %"class.std::__1::__tree_node_base"* [ %120, %118 ], [ %128, %126 ]
  %136 = phi %"class.std::__1::__tree_node_base"** [ %119, %118 ], [ %127, %126 ]
  %137 = bitcast %"class.std::__1::__tree_node_base"* %135 to %"class.std::__1::__tree_node.240"*
  br label %112

138:                                              ; preds = %109, %132, %130, %122
  %139 = phi %"class.std::__1::__tree_end_node"* [ %123, %122 ], [ %131, %130 ], [ %133, %132 ], [ %60, %109 ]
  %140 = phi %"class.std::__1::__tree_node_base"** [ %119, %122 ], [ %127, %130 ], [ %114, %132 ], [ %59, %109 ]
  %141 = bitcast %"class.std::__1::__tree_node_base"** %140 to %"class.std::__1::__tree_node.240"**
  %142 = load %"class.std::__1::__tree_node.240"*, %"class.std::__1::__tree_node.240"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node.240"* %142, null
  br i1 %143, label %144, label %166

144:                                              ; preds = %138
  %145 = tail call i8* @_Znwm(i64 32) #18, !noalias !44
  %146 = getelementptr inbounds i8, i8* %145, i64 28
  %147 = bitcast i8* %146 to i32*
  store i32 %81, i32* %147, align 4, !noalias !44
  %148 = bitcast i8* %145 to %"class.std::__1::__tree_node_base"*
  %149 = getelementptr inbounds i8, i8* %145, i64 16
  %150 = bitcast i8* %149 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %139, %"class.std::__1::__tree_end_node"** %150, align 8
  %151 = bitcast %"class.std::__1::__tree_node_base"** %140 to i8**
  store i8* %145, i8** %151, align 8
  %152 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %144
  %157 = ptrtoint %"class.std::__1::__tree_node_base"* %154 to i64
  store i64 %157, i64* %62, align 8
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  br label %159

159:                                              ; preds = %156, %144
  %160 = phi %"class.std::__1::__tree_node_base"* [ %148, %144 ], [ %158, %156 ]
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %161, %"class.std::__1::__tree_node_base"* %160) #17
  %162 = load i64, i64* %64, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %64, align 8
  %164 = load %"class.std::__1::vector.177"*, %"class.std::__1::vector.177"** %55, align 8
  %165 = ptrtoint %"class.std::__1::vector.177"* %164 to i64
  br label %166

166:                                              ; preds = %95, %138, %159
  %167 = phi i64 [ %108, %95 ], [ %108, %138 ], [ %165, %159 ]
  %168 = phi %"class.std::__1::vector.177"* [ %102, %95 ], [ %102, %138 ], [ %164, %159 ]
  %169 = add nuw nsw i64 %96, 1
  %170 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %168, i64 %68
  %171 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %168, i64 %68, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::vector.177"* %170 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = shl i64 %176, 30
  %178 = ashr i64 %177, 32
  %179 = icmp slt i64 %169, %178
  br i1 %179, label %95, label %85

180:                                              ; preds = %83
  %181 = tail call i8* @_Znwm(i64 120) #18
  %182 = bitcast i8* %181 to %"class.spv::Block"*
  %183 = load i32, i32* %29, align 8
  %184 = add i32 %183, 1
  store i32 %184, i32* %29, align 8
  %185 = bitcast i8* %181 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  %186 = getelementptr inbounds i8, i8* %181, i64 8
  %187 = bitcast i8* %186 to %"class.std::__1::vector.38"*
  %188 = getelementptr inbounds i8, i8* %181, i64 104
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 96, i1 false) #17
  %189 = bitcast i8* %188 to i8**
  store i8* %27, i8** %189, align 8
  %190 = getelementptr inbounds i8, i8* %181, i64 112
  store i8 0, i8* %190, align 8
  %191 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #17
  %192 = tail call i8* @_Znwm(i64 80) #18
  %193 = bitcast i8* %192 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds i8, i8* %192, i64 8
  %195 = bitcast i8* %194 to i32*
  store i32 %184, i32* %195, align 8
  %196 = getelementptr inbounds i8, i8* %192, i64 12
  %197 = bitcast i8* %196 to i32*
  store i32 0, i32* %197, align 4
  %198 = getelementptr inbounds i8, i8* %192, i64 16
  %199 = bitcast i8* %198 to i32*
  store i32 248, i32* %199, align 8
  %200 = getelementptr inbounds i8, i8* %192, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 56, i1 false) #17
  %201 = ptrtoint i8* %192 to i64
  %202 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds i8, i8* %181, i64 16
  %204 = bitcast i8* %203 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %187, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #17
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %206 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %205, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %205, align 8
  %207 = icmp eq %"class.spv::Instruction"* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %180
  %209 = bitcast %"class.spv::Instruction"* %206 to void (%"class.spv::Instruction"*)***
  %210 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %210, i64 1
  %212 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %211, align 8
  call void %212(%"class.spv::Instruction"* nonnull %206) #17
  br label %213

213:                                              ; preds = %208, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #17
  %214 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %204, align 8
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %214, i64 -1, i32 0, i32 0, i32 0
  %216 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %215, align 8
  %217 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %216, i64 0, i32 6
  %218 = bitcast %"class.spv::Block"** %217 to i8**
  store i8* %181, i8** %218, align 8
  %219 = getelementptr inbounds i8, i8* %27, i64 8
  %220 = bitcast i8* %219 to %"class.spv::Module"**
  %221 = load %"class.spv::Module"*, %"class.spv::Module"** %220, align 8
  %222 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %204, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 -1, i32 0, i32 0, i32 0
  %224 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %223, align 8
  %225 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %224, i64 0, i32 1
  %226 = load i32, i32* %225, align 8
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %221, i64 0, i32 2
  %229 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %221, i64 0, i32 2, i32 0, i32 1
  %230 = bitcast %"class.spv::Instruction"*** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.std::__1::vector.55"* %228 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = sub i64 %231, %233
  %235 = ashr exact i64 %234, 3
  %236 = icmp ugt i64 %235, %227
  %237 = inttoptr i64 %233 to %"class.spv::Instruction"**
  br i1 %236, label %250, label %238

238:                                              ; preds = %213
  %239 = add i32 %226, 16
  %240 = zext i32 %239 to i64
  %241 = icmp ult i64 %235, %240
  br i1 %241, label %242, label %246

242:                                              ; preds = %238
  %243 = sub nsw i64 %240, %235
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %228, i64 %243) #17
  %244 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %228, i64 0, i32 0, i32 0
  %245 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %244, align 8
  br label %250

246:                                              ; preds = %238
  %247 = icmp ugt i64 %235, %240
  br i1 %247, label %248, label %250

248:                                              ; preds = %246
  %249 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %237, i64 %240
  store %"class.spv::Instruction"** %249, %"class.spv::Instruction"*** %229, align 8
  br label %250

250:                                              ; preds = %213, %242, %246, %248
  %251 = phi %"class.spv::Instruction"** [ %237, %248 ], [ %237, %246 ], [ %245, %242 ], [ %237, %213 ]
  %252 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %251, i64 %227
  store %"class.spv::Instruction"* %224, %"class.spv::Instruction"** %252, align 8
  %253 = bitcast %"class.spv::Block"** %6 to i8**
  store i8* %181, i8** %253, align 8
  call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* nonnull %28, %"class.spv::Block"* nonnull %182)
  %254 = bitcast %"class.spv::Block"** %6 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %257 = bitcast %"class.spv::Block"** %256 to i64*
  store i64 %255, i64* %257, align 8
  br label %258

258:                                              ; preds = %83, %250
  %259 = icmp eq i8* %3, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = load i32, i32* %34, align 8
  call void @_ZN3spv7Builder7addNameEjPKc(%"class.spv::Builder"* %0, i32 %261, i8* nonnull %3)
  br label %262

262:                                              ; preds = %258, %260
  %263 = bitcast %"class.std::__1::unique_ptr.79"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #17
  %264 = ptrtoint i8* %27 to i64
  %265 = bitcast %"class.std::__1::unique_ptr.79"* %9 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 31, i32 0, i32 1
  %267 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %266, align 8
  %268 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 31, i32 0, i32 2, i32 0, i32 0
  %269 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %268, align 8
  %270 = icmp ult %"class.std::__1::unique_ptr.79"* %267, %269
  br i1 %270, label %271, label %277

271:                                              ; preds = %262
  %272 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Function"* null, %"class.spv::Function"** %272, align 8
  %273 = bitcast %"class.std::__1::unique_ptr.79"* %267 to i64*
  store i64 %264, i64* %273, align 8
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %267, i64 1
  %275 = ptrtoint %"class.std::__1::unique_ptr.79"* %274 to i64
  %276 = bitcast %"class.std::__1::unique_ptr.79"** %266 to i64*
  store i64 %275, i64* %276, align 8
  br label %279

277:                                              ; preds = %262
  %278 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 31
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv8FunctionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.77"* %278, %"class.std::__1::unique_ptr.79"* nonnull dereferenceable(8) %9) #17
  br label %279

279:                                              ; preds = %271, %277
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %9, i64 0, i32 0, i32 0, i32 0
  %281 = load %"class.spv::Function"*, %"class.spv::Function"** %280, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %280, align 8
  %282 = icmp eq %"class.spv::Function"* %281, null
  br i1 %282, label %288, label %283

283:                                              ; preds = %279
  %284 = bitcast %"class.spv::Function"* %281 to void (%"class.spv::Function"*)***
  %285 = load void (%"class.spv::Function"*)**, void (%"class.spv::Function"*)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.spv::Function"*)*, void (%"class.spv::Function"*)** %285, i64 1
  %287 = load void (%"class.spv::Function"*)*, void (%"class.spv::Function"*)** %286, align 8
  call void %287(%"class.spv::Function"* nonnull %281) #17
  br label %288

288:                                              ; preds = %279, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #17
  ret %"class.spv::Function"* %28
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv8FunctionC2EjjjjRNS_6ModuleE(%"class.spv::Function"*, i32, i32, i32, i32, %"class.spv::Module"* dereferenceable(56)) unnamed_addr #10 comdat align 2 {
  %7 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 1
  store %"class.spv::Module"* %5, %"class.spv::Module"** %8, align 8
  %9 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 1
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 2
  store i32 %2, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 3
  store i32 54, i32* %13, align 8
  %14 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 4
  %15 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 7, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #17
  %20 = bitcast %"class.std::__1::vector.26"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 106, i1 false)
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %18, align 8
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* %9, i32 0)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* %9, i32 %3)
  %21 = load i32, i32* %11, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %5, i64 0, i32 2
  %24 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %5, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast %"class.spv::Instruction"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.55"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  %31 = icmp ugt i64 %30, %22
  %32 = inttoptr i64 %28 to %"class.spv::Instruction"**
  br i1 %31, label %45, label %33

33:                                               ; preds = %6
  %34 = add i32 %21, 16
  %35 = zext i32 %34 to i64
  %36 = icmp ult i64 %30, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = sub nsw i64 %35, %30
  tail call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %23, i64 %38) #17
  %39 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %23, i64 0, i32 0, i32 0
  %40 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %39, align 8
  br label %45

41:                                               ; preds = %33
  %42 = icmp ugt i64 %30, %35
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %32, i64 %35
  store %"class.spv::Instruction"** %44, %"class.spv::Instruction"*** %24, align 8
  br label %45

45:                                               ; preds = %6, %37, %41, %43
  %46 = phi %"class.spv::Instruction"** [ %32, %43 ], [ %32, %41 ], [ %40, %37 ], [ %32, %6 ]
  %47 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %46, i64 %22
  store %"class.spv::Instruction"* %9, %"class.spv::Instruction"** %47, align 8
  tail call void @_ZN3spv6Module11addFunctionEPNS_8FunctionE(%"class.spv::Module"* %5, %"class.spv::Function"* %0)
  %48 = zext i32 %3 to i64
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %5, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, i64 %48
  %52 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 4
  %54 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 4, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.26"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = lshr exact i64 %59, 2
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, -1
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %45
  %65 = ptrtoint %"class.spv::Instruction"** %50 to i64
  %66 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 4, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %23, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %69 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast %"class.spv::Instruction"*** %68 to i64*
  %71 = bitcast %"class.std::__1::vector.55"* %15 to i64*
  %72 = bitcast %"class.spv::Instruction"*** %69 to i64*
  %73 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %15, i64 0, i32 0, i32 0
  %74 = zext i32 %62 to i64
  br label %76

75:                                               ; preds = %177, %45
  ret void

76:                                               ; preds = %179, %64
  %77 = phi i64 [ %65, %64 ], [ %180, %179 ]
  %78 = phi i64 [ 0, %64 ], [ %82, %179 ]
  %79 = tail call i8* @_Znwm(i64 80) #18
  %80 = trunc i64 %78 to i32
  %81 = add i32 %80, %4
  %82 = add nuw nsw i64 %78, 1
  %83 = load i32*, i32** %66, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %82
  %85 = load i32, i32* %84, align 4
  %86 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %87 = getelementptr inbounds i8, i8* %79, i64 8
  %88 = bitcast i8* %87 to i32*
  store i32 %81, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %79, i64 12
  %90 = bitcast i8* %89 to i32*
  store i32 %85, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %79, i64 16
  %92 = bitcast i8* %91 to i32*
  store i32 55, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %79, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 56, i1 false) #17
  %94 = ptrtoint i8* %79 to i64
  %95 = zext i32 %81 to i64
  %96 = load i64, i64* %25, align 8
  %97 = sub i64 %96, %77
  %98 = ashr exact i64 %97, 3
  %99 = icmp ugt i64 %98, %95
  %100 = inttoptr i64 %77 to %"class.spv::Instruction"**
  br i1 %99, label %112, label %101

101:                                              ; preds = %76
  %102 = add i32 %81, 16
  %103 = zext i32 %102 to i64
  %104 = icmp ult i64 %98, %103
  br i1 %104, label %105, label %108

105:                                              ; preds = %101
  %106 = sub nsw i64 %103, %98
  tail call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %23, i64 %106) #17
  %107 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %67, align 8
  br label %112

108:                                              ; preds = %101
  %109 = icmp ugt i64 %98, %103
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %100, i64 %103
  store %"class.spv::Instruction"** %111, %"class.spv::Instruction"*** %24, align 8
  br label %112

112:                                              ; preds = %76, %105, %108, %110
  %113 = phi %"class.spv::Instruction"** [ %100, %110 ], [ %100, %108 ], [ %107, %105 ], [ %100, %76 ]
  %114 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %113, i64 %95
  %115 = bitcast %"class.spv::Instruction"** %114 to i8**
  store i8* %79, i8** %115, align 8
  %116 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %68, align 8
  %117 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %69, align 8
  %118 = icmp eq %"class.spv::Instruction"** %116, %117
  %119 = ptrtoint %"class.spv::Instruction"** %117 to i64
  br i1 %118, label %124, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.spv::Instruction"** %116 to i64*
  store i64 %94, i64* %121, align 8
  %122 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %116, i64 1
  %123 = ptrtoint %"class.spv::Instruction"** %122 to i64
  store i64 %123, i64* %70, align 8
  br label %177

124:                                              ; preds = %112
  %125 = ptrtoint %"class.spv::Instruction"** %116 to i64
  %126 = load i64, i64* %71, align 8
  %127 = sub i64 %125, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %124
  %132 = bitcast %"class.std::__1::vector.55"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #20
  unreachable

133:                                              ; preds = %124
  %134 = sub i64 %119, %126
  %135 = ashr exact i64 %134, 3
  %136 = icmp ult i64 %135, 1152921504606846975
  br i1 %136, label %137, label %145

137:                                              ; preds = %133
  %138 = ashr exact i64 %134, 2
  %139 = icmp ult i64 %138, %129
  %140 = select i1 %139, i64 %129, i64 %138
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %137
  %143 = icmp ugt i64 %140, 2305843009213693951
  br i1 %143, label %144, label %145

144:                                              ; preds = %142
  tail call void @abort() #20
  unreachable

145:                                              ; preds = %142, %133
  %146 = phi i64 [ %140, %142 ], [ 2305843009213693951, %133 ]
  %147 = shl i64 %146, 3
  %148 = tail call i8* @_Znwm(i64 %147) #18
  %149 = bitcast i8* %148 to %"class.spv::Instruction"**
  br label %150

150:                                              ; preds = %145, %137
  %151 = phi i64 [ %146, %145 ], [ 0, %137 ]
  %152 = phi %"class.spv::Instruction"** [ %149, %145 ], [ null, %137 ]
  %153 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %152, i64 %128
  %154 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %152, i64 %151
  %155 = ptrtoint %"class.spv::Instruction"** %154 to i64
  %156 = bitcast %"class.spv::Instruction"** %153 to i64*
  store i64 %94, i64* %156, align 8
  %157 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %153, i64 1
  %158 = ptrtoint %"class.spv::Instruction"** %157 to i64
  %159 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %73, align 8
  %160 = load i64, i64* %70, align 8
  %161 = ptrtoint %"class.spv::Instruction"** %159 to i64
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 3
  %164 = sub nsw i64 0, %163
  %165 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %153, i64 %164
  %166 = ptrtoint %"class.spv::Instruction"** %165 to i64
  %167 = icmp sgt i64 %162, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %150
  %169 = bitcast %"class.spv::Instruction"** %165 to i8*
  %170 = bitcast %"class.spv::Instruction"** %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 %162, i1 false) #17
  %171 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %73, align 8
  br label %172

172:                                              ; preds = %168, %150
  %173 = phi %"class.spv::Instruction"** [ %159, %150 ], [ %171, %168 ]
  store i64 %166, i64* %71, align 8
  store i64 %158, i64* %70, align 8
  store i64 %155, i64* %72, align 8
  %174 = icmp eq %"class.spv::Instruction"** %173, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = bitcast %"class.spv::Instruction"** %173 to i8*
  tail call void @_ZdlPv(i8* %176) #18
  br label %177

177:                                              ; preds = %120, %172, %175
  %178 = icmp eq i64 %82, %74
  br i1 %178, label %75, label %179

179:                                              ; preds = %177
  %180 = load i64, i64* %27, align 8
  br label %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"*, %"class.spv::Block"*) local_unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.spv::Block"* %1 to i64
  %4 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 4, i32 0, i32 1
  %6 = load %"class.spv::Block"**, %"class.spv::Block"*** %5, align 8
  %7 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.spv::Block"**, %"class.spv::Block"*** %7, align 8
  %9 = icmp eq %"class.spv::Block"** %6, %8
  %10 = ptrtoint %"class.spv::Block"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.spv::Block"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %6, i64 1
  %14 = ptrtoint %"class.spv::Block"** %13 to i64
  %15 = bitcast %"class.spv::Block"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.spv::Block"** %6 to i64
  %18 = bitcast %"class.spv::Block"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.48"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.48"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #20
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.spv::Block"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #18
  %44 = bitcast i8* %43 to %"class.spv::Block"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.spv::Block"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %47, i64 %22
  %49 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %47, i64 %46
  %50 = ptrtoint %"class.spv::Block"** %49 to i64
  %51 = bitcast %"class.spv::Block"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %48, i64 1
  %53 = ptrtoint %"class.spv::Block"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.spv::Block"**, %"class.spv::Block"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.spv::Block"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %48, i64 %60
  %62 = ptrtoint %"class.spv::Block"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.spv::Block"** %61 to i8*
  %66 = bitcast %"class.spv::Block"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #17
  %67 = load %"class.spv::Block"**, %"class.spv::Block"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.spv::Block"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.spv::Block"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.spv::Block"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #18
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder10makeReturnEbj(%"class.spv::Builder"* nocapture, i1 zeroext, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %81, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 254, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %19 = load %"class.spv::Block"*, %"class.spv::Block"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %8, i8** %22, align 8
  %23 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %19, i64 0, i32 1, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %19, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = icmp ult %"class.std::__1::unique_ptr"* %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %7
  %29 = ptrtoint i8* %8 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %21, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 1
  %32 = ptrtoint %"class.std::__1::unique_ptr"* %31 to i64
  %33 = bitcast %"class.std::__1::unique_ptr"** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %36

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %19, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %35, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %36

36:                                               ; preds = %34, %28
  %37 = getelementptr inbounds i8, i8* %8, i64 72
  %38 = bitcast i8* %37 to %"class.spv::Block"**
  store %"class.spv::Block"* %19, %"class.spv::Block"** %38, align 8
  %39 = load i32, i32* %12, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %73, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %19, i64 0, i32 5
  %43 = load %"class.spv::Function"*, %"class.spv::Function"** %42, align 8
  %44 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %43, i64 0, i32 1
  %45 = load %"class.spv::Module"*, %"class.spv::Module"** %44, align 8
  %46 = zext i32 %39 to i64
  %47 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %45, i64 0, i32 2
  %48 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %45, i64 0, i32 2, i32 0, i32 1
  %49 = bitcast %"class.spv::Instruction"*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.55"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 3
  %55 = icmp ugt i64 %54, %46
  %56 = inttoptr i64 %52 to %"class.spv::Instruction"**
  br i1 %55, label %69, label %57

57:                                               ; preds = %41
  %58 = add i32 %39, 16
  %59 = zext i32 %58 to i64
  %60 = icmp ult i64 %54, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = sub nsw i64 %59, %54
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %47, i64 %62) #17
  %63 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %47, i64 0, i32 0, i32 0
  %64 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %63, align 8
  br label %69

65:                                               ; preds = %57
  %66 = icmp ugt i64 %54, %59
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %56, i64 %59
  store %"class.spv::Instruction"** %68, %"class.spv::Instruction"*** %48, align 8
  br label %69

69:                                               ; preds = %67, %65, %61, %41
  %70 = phi %"class.spv::Instruction"** [ %56, %67 ], [ %56, %65 ], [ %64, %61 ], [ %56, %41 ]
  %71 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %70, i64 %46
  %72 = bitcast %"class.spv::Instruction"** %71 to i8**
  store i8* %8, i8** %72, align 8
  br label %73

73:                                               ; preds = %69, %36
  %74 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %21, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %21, align 8
  %75 = icmp eq %"class.spv::Instruction"* %74, null
  br i1 %75, label %154, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.spv::Instruction"* %74 to void (%"class.spv::Instruction"*)***
  %78 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %78, i64 1
  %80 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %79, align 8
  call void %80(%"class.spv::Instruction"* nonnull %74) #17
  br label %154

81:                                               ; preds = %3
  %82 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %83 = load %"class.spv::Block"*, %"class.spv::Block"** %82, align 8
  %84 = tail call i8* @_Znwm(i64 80) #18
  %85 = bitcast i8* %84 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %84, i64 8
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds i8, i8* %84, i64 12
  %89 = bitcast i8* %88 to i32*
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds i8, i8* %84, i64 16
  %91 = bitcast i8* %90 to i32*
  store i32 253, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %84, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 56, i1 false) #17
  %93 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %84, i8** %95, align 8
  %96 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %83, i64 0, i32 1, i32 0, i32 1
  %97 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %96, align 8
  %98 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %83, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %99 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %98, align 8
  %100 = icmp ult %"class.std::__1::unique_ptr"* %97, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %81
  %102 = ptrtoint i8* %84 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %94, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 1
  %105 = ptrtoint %"class.std::__1::unique_ptr"* %104 to i64
  %106 = bitcast %"class.std::__1::unique_ptr"** %96 to i64*
  store i64 %105, i64* %106, align 8
  br label %109

107:                                              ; preds = %81
  %108 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %83, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %108, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %109

109:                                              ; preds = %107, %101
  %110 = getelementptr inbounds i8, i8* %84, i64 72
  %111 = bitcast i8* %110 to %"class.spv::Block"**
  store %"class.spv::Block"* %83, %"class.spv::Block"** %111, align 8
  %112 = load i32, i32* %87, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %146, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %83, i64 0, i32 5
  %116 = load %"class.spv::Function"*, %"class.spv::Function"** %115, align 8
  %117 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %116, i64 0, i32 1
  %118 = load %"class.spv::Module"*, %"class.spv::Module"** %117, align 8
  %119 = zext i32 %112 to i64
  %120 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %118, i64 0, i32 2
  %121 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %118, i64 0, i32 2, i32 0, i32 1
  %122 = bitcast %"class.spv::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::vector.55"* %120 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %123, %125
  %127 = ashr exact i64 %126, 3
  %128 = icmp ugt i64 %127, %119
  %129 = inttoptr i64 %125 to %"class.spv::Instruction"**
  br i1 %128, label %142, label %130

130:                                              ; preds = %114
  %131 = add i32 %112, 16
  %132 = zext i32 %131 to i64
  %133 = icmp ult i64 %127, %132
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = sub nsw i64 %132, %127
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %120, i64 %135) #17
  %136 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %120, i64 0, i32 0, i32 0
  %137 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %136, align 8
  br label %142

138:                                              ; preds = %130
  %139 = icmp ugt i64 %127, %132
  br i1 %139, label %140, label %142

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %129, i64 %132
  store %"class.spv::Instruction"** %141, %"class.spv::Instruction"*** %121, align 8
  br label %142

142:                                              ; preds = %140, %138, %134, %114
  %143 = phi %"class.spv::Instruction"** [ %129, %140 ], [ %129, %138 ], [ %137, %134 ], [ %129, %114 ]
  %144 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %143, i64 %119
  %145 = bitcast %"class.spv::Instruction"** %144 to i8**
  store i8* %84, i8** %145, align 8
  br label %146

146:                                              ; preds = %142, %109
  %147 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %94, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %94, align 8
  %148 = icmp eq %"class.spv::Instruction"* %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %146
  %150 = bitcast %"class.spv::Instruction"* %147 to void (%"class.spv::Instruction"*)***
  %151 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %151, i64 1
  %153 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %152, align 8
  call void %153(%"class.spv::Instruction"* nonnull %147) #17
  br label %154

154:                                              ; preds = %149, %146, %76, %73
  %155 = phi i8* [ %20, %73 ], [ %20, %76 ], [ %93, %146 ], [ %93, %149 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155)
  br i1 %1, label %157, label %156

156:                                              ; preds = %154
  call void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* %0, i8* undef)
  br label %157

157:                                              ; preds = %156, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* nocapture, i8* nocapture readnone) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 120) #18
  %5 = bitcast i8* %4 to %"class.spv::Block"*
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %10 = load %"class.spv::Block"*, %"class.spv::Block"** %9, align 8
  %11 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %10, i64 0, i32 5
  %12 = load %"class.spv::Function"*, %"class.spv::Function"** %11, align 8
  %13 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 8
  %15 = bitcast i8* %14 to %"class.std::__1::vector.38"*
  %16 = getelementptr inbounds i8, i8* %4, i64 104
  %17 = bitcast i8* %16 to %"class.spv::Function"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %12, %"class.spv::Function"** %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 112
  store i8 0, i8* %18, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = tail call i8* @_Znwm(i64 80) #18
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %8, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %20, i64 16
  %27 = bitcast i8* %26 to i32*
  store i32 248, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %20, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 56, i1 false) #17
  %29 = ptrtoint i8* %20 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %4, i64 16
  %32 = bitcast i8* %31 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %15, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %33, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %35 = icmp eq %"class.spv::Instruction"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %2
  %37 = bitcast %"class.spv::Instruction"* %34 to void (%"class.spv::Instruction"*)***
  %38 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %38, i64 1
  %40 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %39, align 8
  call void %40(%"class.spv::Instruction"* nonnull %34) #17
  br label %41

41:                                               ; preds = %36, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 -1, i32 0, i32 0, i32 0
  %44 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %44, i64 0, i32 6
  %46 = bitcast %"class.spv::Block"** %45 to i8**
  store i8* %4, i8** %46, align 8
  %47 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %12, i64 0, i32 1
  %48 = load %"class.spv::Module"*, %"class.spv::Module"** %47, align 8
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %51 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, align 8
  %52 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2
  %56 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2, i32 0, i32 1
  %57 = bitcast %"class.spv::Instruction"*** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.55"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %58, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, %54
  %64 = inttoptr i64 %60 to %"class.spv::Instruction"**
  br i1 %63, label %77, label %65

65:                                               ; preds = %41
  %66 = add i32 %53, 16
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %62, %67
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = sub nsw i64 %67, %62
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %55, i64 %70) #17
  %71 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %55, i64 0, i32 0, i32 0
  %72 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %71, align 8
  br label %77

73:                                               ; preds = %65
  %74 = icmp ugt i64 %62, %67
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %64, i64 %67
  store %"class.spv::Instruction"** %76, %"class.spv::Instruction"*** %56, align 8
  br label %77

77:                                               ; preds = %41, %69, %73, %75
  %78 = phi %"class.spv::Instruction"** [ %64, %75 ], [ %64, %73 ], [ %72, %69 ], [ %64, %41 ]
  %79 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %78, i64 %54
  store %"class.spv::Instruction"* %51, %"class.spv::Instruction"** %79, align 8
  store i8 1, i8* %18, align 8
  %80 = load %"class.spv::Block"*, %"class.spv::Block"** %9, align 8
  %81 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %80, i64 0, i32 5
  %82 = load %"class.spv::Function"*, %"class.spv::Function"** %81, align 8
  call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %82, %"class.spv::Block"* nonnull %5)
  %83 = bitcast %"class.spv::Block"** %9 to i8**
  store i8* %4, i8** %83, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13leaveFunctionEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %3 = load %"class.spv::Block"*, %"class.spv::Block"** %2, align 8
  %4 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %3, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 -1, i32 0, i32 0, i32 0
  %7 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %10 [
    i32 249, label %21
    i32 250, label %21
    i32 251, label %21
    i32 252, label %21
    i32 4416, label %21
    i32 253, label %21
    i32 254, label %21
    i32 255, label %21
  ]

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %3, i64 0, i32 5
  %12 = load %"class.spv::Function"*, %"class.spv::Function"** %11, align 8
  %13 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %12, i64 0, i32 2, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = tail call i32 @_ZN3spv7Builder12makeVoidTypeEv(%"class.spv::Builder"* %0)
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  tail call void @_ZN3spv7Builder10makeReturnEbj(%"class.spv::Builder"* %0, i1 zeroext true, i32 0)
  br label %21

18:                                               ; preds = %10
  %19 = load i32, i32* %13, align 4
  %20 = tail call i32 @_ZN3spv7Builder15createUndefinedEj(%"class.spv::Builder"* %0, i32 %19)
  tail call void @_ZN3spv7Builder10makeReturnEbj(%"class.spv::Builder"* %0, i1 zeroext true, i32 %20)
  br label %21

21:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %17, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder15createUndefinedEj(%"class.spv::Builder"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #18
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %7, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 %1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %4, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %17 = load %"class.spv::Block"*, %"class.spv::Block"** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %4, i8** %20, align 8
  %21 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 1, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %2
  %27 = ptrtoint i8* %4 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %19, align 8
  %28 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %33, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds i8, i8* %4, i64 72
  %36 = bitcast i8* %35 to %"class.spv::Block"**
  store %"class.spv::Block"* %17, %"class.spv::Block"** %36, align 8
  %37 = load i32, i32* %10, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %71, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %17, i64 0, i32 5
  %41 = load %"class.spv::Function"*, %"class.spv::Function"** %40, align 8
  %42 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %41, i64 0, i32 1
  %43 = load %"class.spv::Module"*, %"class.spv::Module"** %42, align 8
  %44 = zext i32 %37 to i64
  %45 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %43, i64 0, i32 2
  %46 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %43, i64 0, i32 2, i32 0, i32 1
  %47 = bitcast %"class.spv::Instruction"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.55"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %52, %44
  %54 = inttoptr i64 %50 to %"class.spv::Instruction"**
  br i1 %53, label %67, label %55

55:                                               ; preds = %39
  %56 = add i32 %37, 16
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = sub nsw i64 %57, %52
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %45, i64 %60) #17
  %61 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %45, i64 0, i32 0, i32 0
  %62 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %61, align 8
  br label %67

63:                                               ; preds = %55
  %64 = icmp ugt i64 %52, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, i64 %57
  store %"class.spv::Instruction"** %66, %"class.spv::Instruction"*** %46, align 8
  br label %67

67:                                               ; preds = %65, %63, %59, %39
  %68 = phi %"class.spv::Instruction"** [ %54, %65 ], [ %54, %63 ], [ %62, %59 ], [ %54, %39 ]
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, i64 %44
  %70 = bitcast %"class.spv::Instruction"** %69 to i8**
  store i8* %4, i8** %70, align 8
  br label %71

71:                                               ; preds = %67, %34
  %72 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %19, align 8
  %73 = icmp eq %"class.spv::Instruction"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.spv::Instruction"* %72 to void (%"class.spv::Instruction"*)***
  %76 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %76, i64 1
  %78 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %77, align 8
  call void %78(%"class.spv::Instruction"* nonnull %72) #17
  br label %79

79:                                               ; preds = %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %80 = load i32, i32* %10, align 8
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder23makeStatementTerminatorENS_2OpEPKc(%"class.spv::Builder"* nocapture, i32, i8* nocapture readnone) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %6 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 %1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  %16 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %6, i64 0, i32 1, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %21 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %6, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = icmp ult %"class.std::__1::unique_ptr"* %20, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %3
  %25 = ptrtoint i8* %7 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %17, align 8
  %26 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %28 = ptrtoint %"class.std::__1::unique_ptr"* %27 to i64
  %29 = bitcast %"class.std::__1::unique_ptr"** %19 to i64*
  store i64 %28, i64* %29, align 8
  br label %32

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %6, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %31, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %32

32:                                               ; preds = %30, %24
  %33 = getelementptr inbounds i8, i8* %7, i64 72
  %34 = bitcast i8* %33 to %"class.spv::Block"**
  store %"class.spv::Block"* %6, %"class.spv::Block"** %34, align 8
  %35 = load i32, i32* %10, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %69, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %6, i64 0, i32 5
  %39 = load %"class.spv::Function"*, %"class.spv::Function"** %38, align 8
  %40 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %39, i64 0, i32 1
  %41 = load %"class.spv::Module"*, %"class.spv::Module"** %40, align 8
  %42 = zext i32 %35 to i64
  %43 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %41, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %41, i64 0, i32 2, i32 0, i32 1
  %45 = bitcast %"class.spv::Instruction"*** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.55"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ugt i64 %50, %42
  %52 = inttoptr i64 %48 to %"class.spv::Instruction"**
  br i1 %51, label %65, label %53

53:                                               ; preds = %37
  %54 = add i32 %35, 16
  %55 = zext i32 %54 to i64
  %56 = icmp ult i64 %50, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = sub nsw i64 %55, %50
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %43, i64 %58) #17
  %59 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %43, i64 0, i32 0, i32 0
  %60 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %59, align 8
  br label %65

61:                                               ; preds = %53
  %62 = icmp ugt i64 %50, %55
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %52, i64 %55
  store %"class.spv::Instruction"** %64, %"class.spv::Instruction"*** %44, align 8
  br label %65

65:                                               ; preds = %63, %61, %57, %37
  %66 = phi %"class.spv::Instruction"** [ %52, %63 ], [ %52, %61 ], [ %60, %57 ], [ %52, %37 ]
  %67 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %66, i64 %42
  %68 = bitcast %"class.spv::Instruction"** %67 to i8**
  store i8* %7, i8** %68, align 8
  br label %69

69:                                               ; preds = %65, %32
  %70 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %17, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %17, align 8
  %71 = icmp eq %"class.spv::Instruction"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.spv::Instruction"* %70 to void (%"class.spv::Instruction"*)***
  %74 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %74, i64 1
  %76 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %75, align 8
  call void %76(%"class.spv::Instruction"* nonnull %70) #17
  br label %77

77:                                               ; preds = %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* %0, i8* undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder14createVariableENS_10DecorationENS_12StorageClassEjPKcj(%"class.spv::Builder"*, i32, i32, i32, i8* readonly, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = tail call i32 @_ZN3spv7Builder11makePointerENS_12StorageClassEj(%"class.spv::Builder"* %0, i32 %2, i32 %3)
  %10 = tail call i8* @_Znwm(i64 80) #18
  %11 = bitcast i8* %10 to %"class.spv::Instruction"*
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %14, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 %9, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %10, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 59, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %2)
  %23 = icmp eq i32 %5, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %6
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %11, i32 %5)
  br label %25

25:                                               ; preds = %6, %24
  %26 = icmp eq i32 %2, 7
  br i1 %26, label %27, label %89

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %29 = load %"class.spv::Block"*, %"class.spv::Block"** %28, align 8
  %30 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %29, i64 0, i32 5
  %31 = load %"class.spv::Function"*, %"class.spv::Function"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %31, i64 0, i32 4, i32 0, i32 0
  %33 = load %"class.spv::Block"**, %"class.spv::Block"*** %32, align 8
  %34 = load %"class.spv::Block"*, %"class.spv::Block"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::unique_ptr"* %7 to i8**
  store i8* %10, i8** %37, align 8
  %38 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %34, i64 0, i32 4, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %38, align 8
  %40 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %34, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %40, align 8
  %42 = icmp ult %"class.std::__1::unique_ptr"* %39, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %27
  %44 = ptrtoint i8* %10 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %36, align 8
  %45 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %47 = ptrtoint %"class.std::__1::unique_ptr"* %46 to i64
  %48 = bitcast %"class.std::__1::unique_ptr"** %38 to i64*
  store i64 %47, i64* %48, align 8
  br label %51

49:                                               ; preds = %27
  %50 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %34, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %50, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %51

51:                                               ; preds = %49, %43
  %52 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %36, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %36, align 8
  %53 = icmp eq %"class.spv::Instruction"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  %55 = bitcast %"class.spv::Instruction"* %52 to void (%"class.spv::Instruction"*)***
  %56 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %56, i64 1
  %58 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %57, align 8
  call void %58(%"class.spv::Instruction"* nonnull %52) #17
  br label %59

59:                                               ; preds = %54, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  %60 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %31, i64 0, i32 1
  %61 = load %"class.spv::Module"*, %"class.spv::Module"** %60, align 8
  %62 = load i32, i32* %17, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %61, i64 0, i32 2
  %65 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %61, i64 0, i32 2, i32 0, i32 1
  %66 = bitcast %"class.spv::Instruction"*** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.55"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 3
  %72 = icmp ugt i64 %71, %63
  %73 = inttoptr i64 %69 to %"class.spv::Instruction"**
  br i1 %72, label %86, label %74

74:                                               ; preds = %59
  %75 = add i32 %62, 16
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %71, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %74
  %79 = sub nsw i64 %76, %71
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %64, i64 %79) #17
  %80 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %64, i64 0, i32 0, i32 0
  %81 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %80, align 8
  br label %86

82:                                               ; preds = %74
  %83 = icmp ugt i64 %71, %76
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %73, i64 %76
  store %"class.spv::Instruction"** %85, %"class.spv::Instruction"*** %65, align 8
  br label %86

86:                                               ; preds = %59, %78, %82, %84
  %87 = phi %"class.spv::Instruction"** [ %73, %84 ], [ %73, %82 ], [ %81, %78 ], [ %73, %59 ]
  %88 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %87, i64 %63
  br label %143

89:                                               ; preds = %25
  %90 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #17
  %91 = ptrtoint i8* %10 to i64
  %92 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %94 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %93, align 8
  %95 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %96 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %95, align 8
  %97 = icmp ult %"class.std::__1::unique_ptr"* %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %99, align 8
  %100 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  store i64 %91, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 1
  %102 = ptrtoint %"class.std::__1::unique_ptr"* %101 to i64
  %103 = bitcast %"class.std::__1::unique_ptr"** %93 to i64*
  store i64 %102, i64* %103, align 8
  br label %106

104:                                              ; preds = %89
  %105 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %105, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #17
  br label %106

106:                                              ; preds = %98, %104
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %107, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %107, align 8
  %109 = icmp eq %"class.spv::Instruction"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.spv::Instruction"* %108 to void (%"class.spv::Instruction"*)***
  %112 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %112, i64 1
  %114 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %113, align 8
  call void %114(%"class.spv::Instruction"* nonnull %108) #17
  br label %115

115:                                              ; preds = %106, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #17
  %116 = load i32, i32* %17, align 8
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %119 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %120 = bitcast %"class.spv::Instruction"*** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector.55"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = ashr exact i64 %124, 3
  %126 = icmp ugt i64 %125, %117
  %127 = inttoptr i64 %123 to %"class.spv::Instruction"**
  br i1 %126, label %140, label %128

128:                                              ; preds = %115
  %129 = add i32 %116, 16
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %125, %130
  br i1 %131, label %132, label %136

132:                                              ; preds = %128
  %133 = sub nsw i64 %130, %125
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %118, i64 %133) #17
  %134 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %118, i64 0, i32 0, i32 0
  %135 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %134, align 8
  br label %140

136:                                              ; preds = %128
  %137 = icmp ugt i64 %125, %130
  br i1 %137, label %138, label %140

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %127, i64 %130
  store %"class.spv::Instruction"** %139, %"class.spv::Instruction"*** %119, align 8
  br label %140

140:                                              ; preds = %115, %132, %136, %138
  %141 = phi %"class.spv::Instruction"** [ %127, %138 ], [ %127, %136 ], [ %135, %132 ], [ %127, %115 ]
  %142 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %141, i64 %117
  br label %143

143:                                              ; preds = %140, %86
  %144 = phi %"class.spv::Instruction"** [ %142, %140 ], [ %88, %86 ]
  %145 = bitcast %"class.spv::Instruction"** %144 to i8**
  store i8* %10, i8** %145, align 8
  %146 = icmp eq i8* %4, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = load i32, i32* %17, align 8
  call void @_ZN3spv7Builder7addNameEjPKc(%"class.spv::Builder"* %0, i32 %148, i8* nonnull %4)
  br label %149

149:                                              ; preds = %143, %147
  %150 = load i32, i32* %17, align 8
  %151 = icmp ne i32 %1, 2147483647
  %152 = icmp ne i32 %150, 0
  %153 = and i1 %151, %152
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %150, i32 %1, i32 -1) #17
  %155 = load i32, i32* %17, align 8
  br label %156

156:                                              ; preds = %149, %154
  %157 = phi i32 [ %150, %149 ], [ %155, %154 ]
  ret i32 %157
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3spv7Builder35sanitizeMemoryAccessForStorageClassENS_16MemoryAccessMaskENS_12StorageClassE(%"class.spv::Builder"* nocapture readnone, i32, i32) local_unnamed_addr #9 align 2 {
  switch i32 %2, label %4 [
    i32 2, label %6
    i32 4, label %6
    i32 12, label %6
    i32 5349, label %6
  ]

4:                                                ; preds = %3
  %5 = and i32 %1, -57
  br label %6

6:                                                ; preds = %3, %3, %3, %3, %4
  %7 = phi i32 [ %5, %4 ], [ %1, %3 ], [ %1, %3 ], [ %1, %3 ], [ %1, %3 ]
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder11createStoreEjjNS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 62, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %2)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %1)
  %18 = zext i32 %2 to i64
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %20 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %19, align 8
  %21 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %20, i64 %18
  %22 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %21, align 8
  %23 = icmp eq %"class.spv::Instruction"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %22, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %6, %24
  %29 = phi i64 [ %27, %24 ], [ 0, %6 ]
  %30 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %20, i64 %29
  %31 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %31, i64 0, i32 4, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %35 [
    i32 2, label %37
    i32 4, label %37
    i32 12, label %37
    i32 5349, label %37
  ]

35:                                               ; preds = %28
  %36 = and i32 %3, -57
  br label %37

37:                                               ; preds = %28, %28, %28, %28, %35
  %38 = phi i32 [ %36, %35 ], [ %3, %28 ], [ %3, %28 ], [ %3, %28 ], [ %3, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %38)
  %41 = and i32 %38, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %5)
  br label %44

44:                                               ; preds = %40, %43
  %45 = and i32 %38, 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %49 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %48, i32 %4, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %49)
  br label %50

50:                                               ; preds = %44, %37, %47
  %51 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %52 = load %"class.spv::Block"*, %"class.spv::Block"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::unique_ptr"* %7 to i8**
  store i8* %8, i8** %55, align 8
  %56 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %52, i64 0, i32 1, i32 0, i32 1
  %57 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %56, align 8
  %58 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %52, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %60 = icmp ult %"class.std::__1::unique_ptr"* %57, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %50
  %62 = ptrtoint i8* %8 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %54, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %57 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 1
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  %66 = bitcast %"class.std::__1::unique_ptr"** %56 to i64*
  store i64 %65, i64* %66, align 8
  br label %69

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %52, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %68, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %69

69:                                               ; preds = %67, %61
  %70 = getelementptr inbounds i8, i8* %8, i64 72
  %71 = bitcast i8* %70 to %"class.spv::Block"**
  store %"class.spv::Block"* %52, %"class.spv::Block"** %71, align 8
  %72 = load i32, i32* %12, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %106, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %52, i64 0, i32 5
  %76 = load %"class.spv::Function"*, %"class.spv::Function"** %75, align 8
  %77 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %76, i64 0, i32 1
  %78 = load %"class.spv::Module"*, %"class.spv::Module"** %77, align 8
  %79 = zext i32 %72 to i64
  %80 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %78, i64 0, i32 2
  %81 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %78, i64 0, i32 2, i32 0, i32 1
  %82 = bitcast %"class.spv::Instruction"*** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.55"* %80 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, %79
  %89 = inttoptr i64 %85 to %"class.spv::Instruction"**
  br i1 %88, label %102, label %90

90:                                               ; preds = %74
  %91 = add i32 %72, 16
  %92 = zext i32 %91 to i64
  %93 = icmp ult i64 %87, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = sub nsw i64 %92, %87
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %80, i64 %95) #17
  %96 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %80, i64 0, i32 0, i32 0
  %97 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %96, align 8
  br label %102

98:                                               ; preds = %90
  %99 = icmp ugt i64 %87, %92
  br i1 %99, label %100, label %102

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %89, i64 %92
  store %"class.spv::Instruction"** %101, %"class.spv::Instruction"*** %81, align 8
  br label %102

102:                                              ; preds = %100, %98, %94, %74
  %103 = phi %"class.spv::Instruction"** [ %89, %100 ], [ %89, %98 ], [ %97, %94 ], [ %89, %74 ]
  %104 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %103, i64 %79
  %105 = bitcast %"class.spv::Instruction"** %104 to i8**
  store i8* %8, i8** %105, align 8
  br label %106

106:                                              ; preds = %102, %69
  %107 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %54, align 8
  %108 = icmp eq %"class.spv::Instruction"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.spv::Instruction"* %107 to void (%"class.spv::Instruction"*)***
  %111 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %111, i64 1
  %113 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %112, align 8
  call void %113(%"class.spv::Instruction"* nonnull %107) #17
  br label %114

114:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder10createLoadEjNS_10DecorationENS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = tail call i8* @_Znwm(i64 80) #18
  %9 = bitcast i8* %8 to %"class.spv::Instruction"*
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %15 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %14, align 8
  %16 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %15, i64 %13
  %17 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %16, align 8
  %18 = icmp eq %"class.spv::Instruction"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  br label %23

23:                                               ; preds = %6, %19
  %24 = phi i64 [ %22, %19 ], [ 0, %6 ]
  %25 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %15, i64 %24
  %26 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %26, i64 0, i32 4, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 1
  %30 = load i32, i32* %29, align 4
  %31 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %8, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %12, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %8, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 %30, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %8, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 61, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %8, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %1)
  %39 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %14, align 8
  %40 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %39, i64 %13
  %41 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %40, align 8
  %42 = icmp eq %"class.spv::Instruction"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %23
  %44 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %41, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %23, %43
  %48 = phi i64 [ %46, %43 ], [ 0, %23 ]
  %49 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %39, i64 %48
  %50 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %50, i64 0, i32 4, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i32, i32* %52, align 4
  switch i32 %53, label %54 [
    i32 2, label %56
    i32 4, label %56
    i32 12, label %56
    i32 5349, label %56
  ]

54:                                               ; preds = %47
  %55 = and i32 %3, -57
  br label %56

56:                                               ; preds = %47, %47, %47, %47, %54
  %57 = phi i32 [ %55, %54 ], [ %3, %47 ], [ %3, %47 ], [ %3, %47 ], [ %3, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %56
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %57)
  %60 = and i32 %57, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %5)
  br label %63

63:                                               ; preds = %59, %62
  %64 = and i32 %57, 16
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %68 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %67, i32 %4, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %9, i32 %68)
  br label %69

69:                                               ; preds = %63, %56, %66
  %70 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %71 = load %"class.spv::Block"*, %"class.spv::Block"** %70, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72)
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.std::__1::unique_ptr"* %7 to i8**
  store i8* %8, i8** %74, align 8
  %75 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %71, i64 0, i32 1, i32 0, i32 1
  %76 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %75, align 8
  %77 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %71, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %77, align 8
  %79 = icmp ult %"class.std::__1::unique_ptr"* %76, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %69
  %81 = ptrtoint i8* %8 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %73, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %76, i64 1
  %84 = ptrtoint %"class.std::__1::unique_ptr"* %83 to i64
  %85 = bitcast %"class.std::__1::unique_ptr"** %75 to i64*
  store i64 %84, i64* %85, align 8
  br label %88

86:                                               ; preds = %69
  %87 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %71, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %87, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %88

88:                                               ; preds = %86, %80
  %89 = getelementptr inbounds i8, i8* %8, i64 72
  %90 = bitcast i8* %89 to %"class.spv::Block"**
  store %"class.spv::Block"* %71, %"class.spv::Block"** %90, align 8
  %91 = load i32, i32* %33, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %125, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %71, i64 0, i32 5
  %95 = load %"class.spv::Function"*, %"class.spv::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %95, i64 0, i32 1
  %97 = load %"class.spv::Module"*, %"class.spv::Module"** %96, align 8
  %98 = zext i32 %91 to i64
  %99 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %97, i64 0, i32 2
  %100 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %97, i64 0, i32 2, i32 0, i32 1
  %101 = bitcast %"class.spv::Instruction"*** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.std::__1::vector.55"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = ashr exact i64 %105, 3
  %107 = icmp ugt i64 %106, %98
  %108 = inttoptr i64 %104 to %"class.spv::Instruction"**
  br i1 %107, label %121, label %109

109:                                              ; preds = %93
  %110 = add i32 %91, 16
  %111 = zext i32 %110 to i64
  %112 = icmp ult i64 %106, %111
  br i1 %112, label %113, label %117

113:                                              ; preds = %109
  %114 = sub nsw i64 %111, %106
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %99, i64 %114) #17
  %115 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %99, i64 0, i32 0, i32 0
  %116 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %115, align 8
  br label %121

117:                                              ; preds = %109
  %118 = icmp ugt i64 %106, %111
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %108, i64 %111
  store %"class.spv::Instruction"** %120, %"class.spv::Instruction"*** %100, align 8
  br label %121

121:                                              ; preds = %119, %117, %113, %93
  %122 = phi %"class.spv::Instruction"** [ %108, %119 ], [ %108, %117 ], [ %116, %113 ], [ %108, %93 ]
  %123 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %122, i64 %98
  %124 = bitcast %"class.spv::Instruction"** %123 to i8**
  store i8* %8, i8** %124, align 8
  br label %125

125:                                              ; preds = %121, %88
  %126 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %73, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %73, align 8
  %127 = icmp eq %"class.spv::Instruction"* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %125
  %129 = bitcast %"class.spv::Instruction"* %126 to void (%"class.spv::Instruction"*)***
  %130 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %130, i64 1
  %132 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %131, align 8
  call void %132(%"class.spv::Instruction"* nonnull %126) #17
  br label %133

133:                                              ; preds = %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72)
  %134 = load i32, i32* %33, align 8
  %135 = icmp ne i32 %2, 2147483647
  %136 = icmp ne i32 %134, 0
  %137 = and i1 %135, %136
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %134, i32 %2, i32 -1) #17
  %139 = load i32, i32* %33, align 8
  br label %140

140:                                              ; preds = %133, %138
  %141 = phi i32 [ %134, %133 ], [ %139, %138 ]
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17createAccessChainENS_12StorageClassEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %8 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %7, align 8
  %9 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %6
  %10 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %9, align 8
  %11 = icmp eq %"class.spv::Instruction"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi i64 [ %15, %12 ], [ 0, %4 ]
  %18 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %17
  %19 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %35 [
    i32 23, label %22
    i32 24, label %22
    i32 28, label %22
    i32 29, label %22
    i32 5358, label %22
    i32 32, label %25
    i32 30, label %29
  ]

22:                                               ; preds = %16, %16, %16, %16, %16
  %23 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  br label %32

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 1
  br label %32

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  br label %32

32:                                               ; preds = %29, %25, %22
  %33 = phi i32* [ %24, %22 ], [ %28, %25 ], [ %31, %29 ]
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %32, %16
  %36 = phi i32 [ 0, %16 ], [ %34, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = lshr exact i64 %42, 2
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %44, 0
  %46 = inttoptr i64 %41 to i32*
  br i1 %45, label %47, label %50

47:                                               ; preds = %35
  %48 = shl i64 %42, 30
  %49 = ashr exact i64 %48, 32
  br label %72

50:                                               ; preds = %103, %35
  %51 = phi i32 [ %36, %35 ], [ %104, %103 ]
  %52 = tail call i32 @_ZN3spv7Builder11makePointerENS_12StorageClassEj(%"class.spv::Builder"* %0, i32 %1, i32 %51)
  %53 = tail call i8* @_Znwm(i64 80) #18
  %54 = bitcast i8* %53 to %"class.spv::Instruction"*
  %55 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %56 = load i32, i32* %55, align 8
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 8
  %58 = bitcast i8* %53 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds i8, i8* %53, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 %57, i32* %60, align 8
  %61 = getelementptr inbounds i8, i8* %53, i64 12
  %62 = bitcast i8* %61 to i32*
  store i32 %52, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %53, i64 16
  %64 = bitcast i8* %63 to i32*
  store i32 65, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %53, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %54, i32 %2)
  %66 = load i64, i64* %38, align 8
  %67 = load i64, i64* %40, align 8
  %68 = sub i64 %66, %67
  %69 = lshr exact i64 %68, 2
  %70 = trunc i64 %69 to i32
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %173, label %107

72:                                               ; preds = %47, %103
  %73 = phi i64 [ 0, %47 ], [ %105, %103 ]
  %74 = phi i32 [ %36, %47 ], [ %104, %103 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %75
  %77 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %76, align 8
  %78 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %77, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  switch i32 %79, label %103 [
    i32 30, label %80
    i32 23, label %93
    i32 24, label %93
    i32 28, label %93
    i32 29, label %93
    i32 5358, label %93
    i32 32, label %96
  ]

80:                                               ; preds = %72
  %81 = getelementptr inbounds i32, i32* %46, i64 %73
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %83
  %85 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %84, align 8
  %86 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %85, i64 0, i32 4, i32 0, i32 0
  %87 = load i32*, i32** %86, align 8
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %77, i64 0, i32 4, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 %89
  br label %100

93:                                               ; preds = %72, %72, %72, %72, %72
  %94 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %77, i64 0, i32 4, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  br label %100

96:                                               ; preds = %72
  %97 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %77, i64 0, i32 4, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 1
  br label %100

100:                                              ; preds = %80, %93, %96
  %101 = phi i32* [ %99, %96 ], [ %95, %93 ], [ %92, %80 ]
  %102 = load i32, i32* %101, align 4
  br label %103

103:                                              ; preds = %100, %72
  %104 = phi i32 [ 0, %72 ], [ %102, %100 ]
  %105 = add nuw nsw i64 %73, 1
  %106 = icmp slt i64 %105, %49
  br i1 %106, label %72, label %50

107:                                              ; preds = %173, %50
  %108 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %109 = load %"class.spv::Block"*, %"class.spv::Block"** %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %53, i8** %112, align 8
  %113 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %109, i64 0, i32 1, i32 0, i32 1
  %114 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %113, align 8
  %115 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %109, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %116 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %115, align 8
  %117 = icmp ult %"class.std::__1::unique_ptr"* %114, %116
  br i1 %117, label %118, label %124

118:                                              ; preds = %107
  %119 = ptrtoint i8* %53 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %111, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %114 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %114, i64 1
  %122 = ptrtoint %"class.std::__1::unique_ptr"* %121 to i64
  %123 = bitcast %"class.std::__1::unique_ptr"** %113 to i64*
  store i64 %122, i64* %123, align 8
  br label %126

124:                                              ; preds = %107
  %125 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %109, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %125, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %126

126:                                              ; preds = %124, %118
  %127 = getelementptr inbounds i8, i8* %53, i64 72
  %128 = bitcast i8* %127 to %"class.spv::Block"**
  store %"class.spv::Block"* %109, %"class.spv::Block"** %128, align 8
  %129 = load i32, i32* %60, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %163, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %109, i64 0, i32 5
  %133 = load %"class.spv::Function"*, %"class.spv::Function"** %132, align 8
  %134 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %133, i64 0, i32 1
  %135 = load %"class.spv::Module"*, %"class.spv::Module"** %134, align 8
  %136 = zext i32 %129 to i64
  %137 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %135, i64 0, i32 2
  %138 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %135, i64 0, i32 2, i32 0, i32 1
  %139 = bitcast %"class.spv::Instruction"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.std::__1::vector.55"* %137 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %140, %142
  %144 = ashr exact i64 %143, 3
  %145 = icmp ugt i64 %144, %136
  %146 = inttoptr i64 %142 to %"class.spv::Instruction"**
  br i1 %145, label %159, label %147

147:                                              ; preds = %131
  %148 = add i32 %129, 16
  %149 = zext i32 %148 to i64
  %150 = icmp ult i64 %144, %149
  br i1 %150, label %151, label %155

151:                                              ; preds = %147
  %152 = sub nsw i64 %149, %144
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %137, i64 %152) #17
  %153 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %137, i64 0, i32 0, i32 0
  %154 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %153, align 8
  br label %159

155:                                              ; preds = %147
  %156 = icmp ugt i64 %144, %149
  br i1 %156, label %157, label %159

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 %149
  store %"class.spv::Instruction"** %158, %"class.spv::Instruction"*** %138, align 8
  br label %159

159:                                              ; preds = %157, %155, %151, %131
  %160 = phi %"class.spv::Instruction"** [ %146, %157 ], [ %146, %155 ], [ %154, %151 ], [ %146, %131 ]
  %161 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %160, i64 %136
  %162 = bitcast %"class.spv::Instruction"** %161 to i8**
  store i8* %53, i8** %162, align 8
  br label %163

163:                                              ; preds = %159, %126
  %164 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %111, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %111, align 8
  %165 = icmp eq %"class.spv::Instruction"* %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.spv::Instruction"* %164 to void (%"class.spv::Instruction"*)***
  %168 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %168, i64 1
  %170 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %169, align 8
  call void %170(%"class.spv::Instruction"* nonnull %164) #17
  br label %171

171:                                              ; preds = %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %172 = load i32, i32* %60, align 8
  ret i32 %172

173:                                              ; preds = %50, %173
  %174 = phi i64 [ %181, %173 ], [ %67, %50 ]
  %175 = phi i64 [ %179, %173 ], [ 0, %50 ]
  %176 = inttoptr i64 %174 to i32*
  %177 = getelementptr inbounds i32, i32* %176, i64 %175
  %178 = load i32, i32* %177, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %54, i32 %178)
  %179 = add nuw nsw i64 %175, 1
  %180 = load i64, i64* %38, align 8
  %181 = load i64, i64* %40, align 8
  %182 = sub i64 %180, %181
  %183 = shl i64 %182, 30
  %184 = ashr i64 %183, 32
  %185 = icmp slt i64 %179, %184
  br i1 %185, label %173, label %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17createArrayLengthEjj(%"class.spv::Builder"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %5, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 68, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %2)
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %20 = load %"class.spv::Block"*, %"class.spv::Block"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %6, i8** %23, align 8
  %24 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp ult %"class.std::__1::unique_ptr"* %25, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %3
  %30 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %22, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %33 = ptrtoint %"class.std::__1::unique_ptr"* %32 to i64
  %34 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  store i64 %33, i64* %34, align 8
  br label %37

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %36, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %37

37:                                               ; preds = %35, %29
  %38 = getelementptr inbounds i8, i8* %6, i64 72
  %39 = bitcast i8* %38 to %"class.spv::Block"**
  store %"class.spv::Block"* %20, %"class.spv::Block"** %39, align 8
  %40 = load i32, i32* %13, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %74, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 5
  %44 = load %"class.spv::Function"*, %"class.spv::Function"** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %44, i64 0, i32 1
  %46 = load %"class.spv::Module"*, %"class.spv::Module"** %45, align 8
  %47 = zext i32 %40 to i64
  %48 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %46, i64 0, i32 2
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %46, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"class.spv::Instruction"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.55"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp ugt i64 %55, %47
  %57 = inttoptr i64 %53 to %"class.spv::Instruction"**
  br i1 %56, label %70, label %58

58:                                               ; preds = %42
  %59 = add i32 %40, 16
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %55, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = sub nsw i64 %60, %55
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %48, i64 %63) #17
  %64 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %48, i64 0, i32 0, i32 0
  %65 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %64, align 8
  br label %70

66:                                               ; preds = %58
  %67 = icmp ugt i64 %55, %60
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %57, i64 %60
  store %"class.spv::Instruction"** %69, %"class.spv::Instruction"*** %49, align 8
  br label %70

70:                                               ; preds = %68, %66, %62, %42
  %71 = phi %"class.spv::Instruction"** [ %57, %68 ], [ %57, %66 ], [ %65, %62 ], [ %57, %42 ]
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %47
  %73 = bitcast %"class.spv::Instruction"** %72 to i8**
  store i8* %6, i8** %73, align 8
  br label %74

74:                                               ; preds = %70, %37
  %75 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %22, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %22, align 8
  %76 = icmp eq %"class.spv::Instruction"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.spv::Instruction"* %75 to void (%"class.spv::Instruction"*)***
  %79 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %79, i64 1
  %81 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %80, align 8
  call void %81(%"class.spv::Instruction"* nonnull %75) #17
  br label %82

82:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %83 = load i32, i32* %13, align 8
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder29createCooperativeMatrixLengthEj(%"class.spv::Builder"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::vector.26", align 8
  %5 = alloca %"class.std::__1::vector.26", align 8
  %6 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = tail call i8* @_Znwm(i64 4) #18
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.26"* %4 to i8**
  store i8* %12, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 4
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i32** %17 to i8**
  store i8* %16, i8** %18, align 8
  store i32 %1, i32* %13, align 4
  %19 = bitcast i32** %14 to i64*
  %20 = ptrtoint i8* %16 to i64
  store i64 %20, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #17
  %22 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 5362, i32 %6, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %4, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  tail call void @_ZdlPv(i8* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br label %102

23:                                               ; preds = %2
  %24 = tail call i8* @_Znwm(i64 80) #18
  %25 = bitcast i8* %24 to %"class.spv::Instruction"*
  %26 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 %28, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %24, i64 12
  %33 = bitcast i8* %32 to i32*
  store i32 %6, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %24, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 5362, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %24, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %25, i32 %1)
  %37 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %38 = load %"class.spv::Block"*, %"class.spv::Block"** %37, align 8
  %39 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %24, i8** %41, align 8
  %42 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %38, i64 0, i32 1, i32 0, i32 1
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %44 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %38, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %44, align 8
  %46 = icmp ult %"class.std::__1::unique_ptr"* %43, %45
  br i1 %46, label %47, label %53

47:                                               ; preds = %23
  %48 = ptrtoint i8* %24 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %40, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 1
  %51 = ptrtoint %"class.std::__1::unique_ptr"* %50 to i64
  %52 = bitcast %"class.std::__1::unique_ptr"** %42 to i64*
  store i64 %51, i64* %52, align 8
  br label %55

53:                                               ; preds = %23
  %54 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %38, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %54, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %55

55:                                               ; preds = %53, %47
  %56 = getelementptr inbounds i8, i8* %24, i64 72
  %57 = bitcast i8* %56 to %"class.spv::Block"**
  store %"class.spv::Block"* %38, %"class.spv::Block"** %57, align 8
  %58 = load i32, i32* %31, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %92, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %38, i64 0, i32 5
  %62 = load %"class.spv::Function"*, %"class.spv::Function"** %61, align 8
  %63 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %62, i64 0, i32 1
  %64 = load %"class.spv::Module"*, %"class.spv::Module"** %63, align 8
  %65 = zext i32 %58 to i64
  %66 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %64, i64 0, i32 2
  %67 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %64, i64 0, i32 2, i32 0, i32 1
  %68 = bitcast %"class.spv::Instruction"*** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector.55"* %66 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ugt i64 %73, %65
  %75 = inttoptr i64 %71 to %"class.spv::Instruction"**
  br i1 %74, label %88, label %76

76:                                               ; preds = %60
  %77 = add i32 %58, 16
  %78 = zext i32 %77 to i64
  %79 = icmp ult i64 %73, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = sub nsw i64 %78, %73
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %66, i64 %81) #17
  %82 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %66, i64 0, i32 0, i32 0
  %83 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %82, align 8
  br label %88

84:                                               ; preds = %76
  %85 = icmp ugt i64 %73, %78
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %75, i64 %78
  store %"class.spv::Instruction"** %87, %"class.spv::Instruction"*** %67, align 8
  br label %88

88:                                               ; preds = %86, %84, %80, %60
  %89 = phi %"class.spv::Instruction"** [ %75, %86 ], [ %75, %84 ], [ %83, %80 ], [ %75, %60 ]
  %90 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %89, i64 %65
  %91 = bitcast %"class.spv::Instruction"** %90 to i8**
  store i8* %24, i8** %91, align 8
  br label %92

92:                                               ; preds = %88, %55
  %93 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %40, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %40, align 8
  %94 = icmp eq %"class.spv::Instruction"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %92
  %96 = bitcast %"class.spv::Instruction"* %93 to void (%"class.spv::Instruction"*)***
  %97 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %97, i64 1
  %99 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %98, align 8
  call void %99(%"class.spv::Instruction"* nonnull %93) #17
  br label %100

100:                                              ; preds = %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %101 = load i32, i32* %31, align 8
  br label %102

102:                                              ; preds = %100, %10
  %103 = phi i32 [ %22, %10 ], [ %101, %100 ]
  ret i32 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 52, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %1)
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %31, %5
  %26 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = icmp eq i32* %27, %29
  br i1 %30, label %37, label %93

31:                                               ; preds = %5, %31
  %32 = phi i32* [ %34, %31 ], [ %21, %5 ]
  %33 = load i32, i32* %32, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %33)
  %34 = getelementptr inbounds i32, i32* %32, i64 1
  %35 = load i32*, i32** %22, align 8
  %36 = icmp eq i32* %34, %35
  br i1 %36, label %25, label %31

37:                                               ; preds = %93, %25
  %38 = load i32, i32* %14, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2
  %41 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 1
  %42 = bitcast %"class.spv::Instruction"*** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.55"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  %48 = icmp ugt i64 %47, %39
  %49 = inttoptr i64 %45 to %"class.spv::Instruction"**
  br i1 %48, label %62, label %50

50:                                               ; preds = %37
  %51 = add i32 %38, 16
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %47, %52
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = sub nsw i64 %52, %47
  tail call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %40, i64 %55) #17
  %56 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %40, i64 0, i32 0, i32 0
  %57 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %56, align 8
  br label %62

58:                                               ; preds = %50
  %59 = icmp ugt i64 %47, %52
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, i64 %52
  store %"class.spv::Instruction"** %61, %"class.spv::Instruction"*** %41, align 8
  br label %62

62:                                               ; preds = %37, %54, %58, %60
  %63 = phi %"class.spv::Instruction"** [ %49, %60 ], [ %49, %58 ], [ %57, %54 ], [ %49, %37 ]
  %64 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, i64 %39
  %65 = bitcast %"class.spv::Instruction"** %64 to i8**
  store i8* %7, i8** %65, align 8
  %66 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #17
  %67 = ptrtoint i8* %7 to i64
  %68 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %70 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %69, align 8
  %71 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 2, i32 0, i32 0
  %72 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %71, align 8
  %73 = icmp ult %"class.std::__1::unique_ptr"* %70, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %75, align 8
  %76 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  store i64 %67, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr"* %77 to i64
  %79 = bitcast %"class.std::__1::unique_ptr"** %69 to i64*
  store i64 %78, i64* %79, align 8
  br label %82

80:                                               ; preds = %62
  %81 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %81, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %82

82:                                               ; preds = %74, %80
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %83, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %83, align 8
  %85 = icmp eq %"class.spv::Instruction"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.spv::Instruction"* %84 to void (%"class.spv::Instruction"*)***
  %88 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %88, i64 1
  %90 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %89, align 8
  call void %90(%"class.spv::Instruction"* nonnull %84) #17
  br label %91

91:                                               ; preds = %82, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #17
  %92 = load i32, i32* %14, align 8
  ret i32 %92

93:                                               ; preds = %25, %93
  %94 = phi i32* [ %96, %93 ], [ %27, %25 ]
  %95 = load i32, i32* %94, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %95)
  %96 = getelementptr inbounds i32, i32* %94, i64 1
  %97 = load i32*, i32** %28, align 8
  %98 = icmp eq i32* %96, %97
  br i1 %98, label %37, label %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder22createCompositeExtractEjjj(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = alloca %"class.std::__1::vector.26", align 8
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = tail call i8* @_Znwm(i64 4) #18
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i32** %18 to i8**
  store i8* %17, i8** %19, align 8
  store i32 %1, i32* %14, align 4
  %20 = bitcast i32** %15 to i64*
  %21 = ptrtoint i8* %17 to i64
  store i64 %21, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  %23 = tail call i8* @_Znwm(i64 4) #18
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::vector.26"* %7 to i8**
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 4
  %28 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i32** %28 to i8**
  store i8* %27, i8** %29, align 8
  store i32 %3, i32* %24, align 4
  %30 = bitcast i32** %25 to i64*
  %31 = ptrtoint i8* %27 to i64
  store i64 %31, i64* %30, align 8
  %32 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 81, i32 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %7)
  tail call void @_ZdlPv(i8* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  tail call void @_ZdlPv(i8* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  br label %112

33:                                               ; preds = %4
  %34 = tail call i8* @_Znwm(i64 80) #18
  %35 = bitcast i8* %34 to %"class.spv::Instruction"*
  %36 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, 1
  store i32 %38, i32* %36, align 8
  %39 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 %38, i32* %41, align 8
  %42 = getelementptr inbounds i8, i8* %34, i64 12
  %43 = bitcast i8* %42 to i32*
  store i32 %2, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %34, i64 16
  %45 = bitcast i8* %44 to i32*
  store i32 81, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %34, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %35, i32 %1)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %35, i32 %3)
  %47 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %48 = load %"class.spv::Block"*, %"class.spv::Block"** %47, align 8
  %49 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %34, i8** %51, align 8
  %52 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %48, i64 0, i32 1, i32 0, i32 1
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %52, align 8
  %54 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %48, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %55 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %54, align 8
  %56 = icmp ult %"class.std::__1::unique_ptr"* %53, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %33
  %58 = ptrtoint i8* %34 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %50, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 1
  %61 = ptrtoint %"class.std::__1::unique_ptr"* %60 to i64
  %62 = bitcast %"class.std::__1::unique_ptr"** %52 to i64*
  store i64 %61, i64* %62, align 8
  br label %65

63:                                               ; preds = %33
  %64 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %48, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %64, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %65

65:                                               ; preds = %63, %57
  %66 = getelementptr inbounds i8, i8* %34, i64 72
  %67 = bitcast i8* %66 to %"class.spv::Block"**
  store %"class.spv::Block"* %48, %"class.spv::Block"** %67, align 8
  %68 = load i32, i32* %41, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %102, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %48, i64 0, i32 5
  %72 = load %"class.spv::Function"*, %"class.spv::Function"** %71, align 8
  %73 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %72, i64 0, i32 1
  %74 = load %"class.spv::Module"*, %"class.spv::Module"** %73, align 8
  %75 = zext i32 %68 to i64
  %76 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %74, i64 0, i32 2
  %77 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %74, i64 0, i32 2, i32 0, i32 1
  %78 = bitcast %"class.spv::Instruction"*** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.55"* %76 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = icmp ugt i64 %83, %75
  %85 = inttoptr i64 %81 to %"class.spv::Instruction"**
  br i1 %84, label %98, label %86

86:                                               ; preds = %70
  %87 = add i32 %68, 16
  %88 = zext i32 %87 to i64
  %89 = icmp ult i64 %83, %88
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = sub nsw i64 %88, %83
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %76, i64 %91) #17
  %92 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %76, i64 0, i32 0, i32 0
  %93 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %92, align 8
  br label %98

94:                                               ; preds = %86
  %95 = icmp ugt i64 %83, %88
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %85, i64 %88
  store %"class.spv::Instruction"** %97, %"class.spv::Instruction"*** %77, align 8
  br label %98

98:                                               ; preds = %96, %94, %90, %70
  %99 = phi %"class.spv::Instruction"** [ %85, %96 ], [ %85, %94 ], [ %93, %90 ], [ %85, %70 ]
  %100 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %99, i64 %75
  %101 = bitcast %"class.spv::Instruction"** %100 to i8**
  store i8* %34, i8** %101, align 8
  br label %102

102:                                              ; preds = %98, %65
  %103 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %50, align 8
  %104 = icmp eq %"class.spv::Instruction"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.spv::Instruction"* %103 to void (%"class.spv::Instruction"*)***
  %107 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %107, i64 1
  %109 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %108, align 8
  call void %109(%"class.spv::Instruction"* nonnull %103) #17
  br label %110

110:                                              ; preds = %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  %111 = load i32, i32* %41, align 8
  br label %112

112:                                              ; preds = %110, %11
  %113 = phi i32 [ %32, %11 ], [ %111, %110 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = tail call i8* @_Znwm(i64 4) #18
  %13 = bitcast i8* %12 to i32*
  %14 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  store i8* %12, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 4
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i32** %17 to i8**
  store i8* %16, i8** %18, align 8
  store i32 %1, i32* %13, align 4
  %19 = bitcast i32** %14 to i64*
  %20 = ptrtoint i8* %16 to i64
  store i64 %20, i64* %19, align 8
  %21 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 81, i32 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.26"* dereferenceable(24) %3)
  tail call void @_ZdlPv(i8* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br label %124

22:                                               ; preds = %4
  %23 = tail call i8* @_Znwm(i64 80) #18
  %24 = bitcast i8* %23 to %"class.spv::Instruction"*
  %25 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 %27, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %23, i64 12
  %32 = bitcast i8* %31 to i32*
  store i32 %2, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %23, i64 16
  %34 = bitcast i8* %33 to i32*
  store i32 81, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %23, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %24, i32 %1)
  %36 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = lshr exact i64 %41, 2
  %43 = trunc i64 %42 to i32
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %111, label %45

45:                                               ; preds = %111, %22
  %46 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %47 = load %"class.spv::Block"*, %"class.spv::Block"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %23, i8** %50, align 8
  %51 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %47, i64 0, i32 1, i32 0, i32 1
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %47, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %53, align 8
  %55 = icmp ult %"class.std::__1::unique_ptr"* %52, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %45
  %57 = ptrtoint i8* %23 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %49, align 8
  %58 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 1
  %60 = ptrtoint %"class.std::__1::unique_ptr"* %59 to i64
  %61 = bitcast %"class.std::__1::unique_ptr"** %51 to i64*
  store i64 %60, i64* %61, align 8
  br label %64

62:                                               ; preds = %45
  %63 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %47, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %63, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %64

64:                                               ; preds = %62, %56
  %65 = getelementptr inbounds i8, i8* %23, i64 72
  %66 = bitcast i8* %65 to %"class.spv::Block"**
  store %"class.spv::Block"* %47, %"class.spv::Block"** %66, align 8
  %67 = load i32, i32* %30, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %101, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %47, i64 0, i32 5
  %71 = load %"class.spv::Function"*, %"class.spv::Function"** %70, align 8
  %72 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %71, i64 0, i32 1
  %73 = load %"class.spv::Module"*, %"class.spv::Module"** %72, align 8
  %74 = zext i32 %67 to i64
  %75 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %73, i64 0, i32 2
  %76 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %73, i64 0, i32 2, i32 0, i32 1
  %77 = bitcast %"class.spv::Instruction"*** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::vector.55"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = ashr exact i64 %81, 3
  %83 = icmp ugt i64 %82, %74
  %84 = inttoptr i64 %80 to %"class.spv::Instruction"**
  br i1 %83, label %97, label %85

85:                                               ; preds = %69
  %86 = add i32 %67, 16
  %87 = zext i32 %86 to i64
  %88 = icmp ult i64 %82, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = sub nsw i64 %87, %82
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %75, i64 %90) #17
  %91 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %75, i64 0, i32 0, i32 0
  %92 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %91, align 8
  br label %97

93:                                               ; preds = %85
  %94 = icmp ugt i64 %82, %87
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %84, i64 %87
  store %"class.spv::Instruction"** %96, %"class.spv::Instruction"*** %76, align 8
  br label %97

97:                                               ; preds = %95, %93, %89, %69
  %98 = phi %"class.spv::Instruction"** [ %84, %95 ], [ %84, %93 ], [ %92, %89 ], [ %84, %69 ]
  %99 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %98, i64 %74
  %100 = bitcast %"class.spv::Instruction"** %99 to i8**
  store i8* %23, i8** %100, align 8
  br label %101

101:                                              ; preds = %97, %64
  %102 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %49, align 8
  %103 = icmp eq %"class.spv::Instruction"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.spv::Instruction"* %102 to void (%"class.spv::Instruction"*)***
  %106 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %106, i64 1
  %108 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %107, align 8
  call void %108(%"class.spv::Instruction"* nonnull %102) #17
  br label %109

109:                                              ; preds = %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  %110 = load i32, i32* %30, align 8
  br label %124

111:                                              ; preds = %22, %111
  %112 = phi i64 [ %119, %111 ], [ %40, %22 ]
  %113 = phi i64 [ %117, %111 ], [ 0, %22 ]
  %114 = inttoptr i64 %112 to i32*
  %115 = getelementptr inbounds i32, i32* %114, i64 %113
  %116 = load i32, i32* %115, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %24, i32 %116)
  %117 = add nuw nsw i64 %113, 1
  %118 = load i64, i64* %37, align 8
  %119 = load i64, i64* %39, align 8
  %120 = sub i64 %118, %119
  %121 = shl i64 %120, 30
  %122 = ashr i64 %121, 32
  %123 = icmp slt i64 %117, %122
  br i1 %123, label %111, label %45

124:                                              ; preds = %109, %10
  %125 = phi i32 [ %21, %10 ], [ %110, %109 ]
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder21createCompositeInsertEjjjj(%"class.spv::Builder"* nocapture, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %3, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 82, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %1)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %4)
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %21 = load %"class.spv::Block"*, %"class.spv::Block"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %7, i8** %24, align 8
  %25 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp ult %"class.std::__1::unique_ptr"* %26, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %5
  %31 = ptrtoint i8* %7 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %23, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %34 = ptrtoint %"class.std::__1::unique_ptr"* %33 to i64
  %35 = bitcast %"class.std::__1::unique_ptr"** %25 to i64*
  store i64 %34, i64* %35, align 8
  br label %38

36:                                               ; preds = %5
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %37, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %38

38:                                               ; preds = %36, %30
  %39 = getelementptr inbounds i8, i8* %7, i64 72
  %40 = bitcast i8* %39 to %"class.spv::Block"**
  store %"class.spv::Block"* %21, %"class.spv::Block"** %40, align 8
  %41 = load i32, i32* %14, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %75, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 5
  %45 = load %"class.spv::Function"*, %"class.spv::Function"** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %45, i64 0, i32 1
  %47 = load %"class.spv::Module"*, %"class.spv::Module"** %46, align 8
  %48 = zext i32 %41 to i64
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2
  %50 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast %"class.spv::Instruction"*** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.55"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp ugt i64 %56, %48
  %58 = inttoptr i64 %54 to %"class.spv::Instruction"**
  br i1 %57, label %71, label %59

59:                                               ; preds = %43
  %60 = add i32 %41, 16
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %56, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = sub nsw i64 %61, %56
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %49, i64 %64) #17
  %65 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %49, i64 0, i32 0, i32 0
  %66 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  br label %71

67:                                               ; preds = %59
  %68 = icmp ugt i64 %56, %61
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %58, i64 %61
  store %"class.spv::Instruction"** %70, %"class.spv::Instruction"*** %50, align 8
  br label %71

71:                                               ; preds = %69, %67, %63, %43
  %72 = phi %"class.spv::Instruction"** [ %58, %69 ], [ %58, %67 ], [ %66, %63 ], [ %58, %43 ]
  %73 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %72, i64 %48
  %74 = bitcast %"class.spv::Instruction"** %73 to i8**
  store i8* %7, i8** %74, align 8
  br label %75

75:                                               ; preds = %71, %38
  %76 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %23, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %23, align 8
  %77 = icmp eq %"class.spv::Instruction"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.spv::Instruction"* %76 to void (%"class.spv::Instruction"*)***
  %80 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %80, i64 1
  %82 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %81, align 8
  call void %82(%"class.spv::Instruction"* nonnull %76) #17
  br label %83

83:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %84 = load i32, i32* %14, align 8
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder21createCompositeInsertEjjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* nocapture, i32, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %3, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 82, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %1)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %2)
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.26"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = lshr exact i64 %25, 2
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %95, %5
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %31 = load %"class.spv::Block"*, %"class.spv::Block"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %7, i8** %34, align 8
  %35 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 1, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr"* %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %29
  %41 = ptrtoint i8* %7 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %42 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 1
  %44 = ptrtoint %"class.std::__1::unique_ptr"* %43 to i64
  %45 = bitcast %"class.std::__1::unique_ptr"** %35 to i64*
  store i64 %44, i64* %45, align 8
  br label %48

46:                                               ; preds = %29
  %47 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %47, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %48

48:                                               ; preds = %46, %40
  %49 = getelementptr inbounds i8, i8* %7, i64 72
  %50 = bitcast i8* %49 to %"class.spv::Block"**
  store %"class.spv::Block"* %31, %"class.spv::Block"** %50, align 8
  %51 = load i32, i32* %14, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %85, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 5
  %55 = load %"class.spv::Function"*, %"class.spv::Function"** %54, align 8
  %56 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %55, i64 0, i32 1
  %57 = load %"class.spv::Module"*, %"class.spv::Module"** %56, align 8
  %58 = zext i32 %51 to i64
  %59 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %57, i64 0, i32 2
  %60 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %57, i64 0, i32 2, i32 0, i32 1
  %61 = bitcast %"class.spv::Instruction"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.55"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ugt i64 %66, %58
  %68 = inttoptr i64 %64 to %"class.spv::Instruction"**
  br i1 %67, label %81, label %69

69:                                               ; preds = %53
  %70 = add i32 %51, 16
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %66, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = sub nsw i64 %71, %66
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %59, i64 %74) #17
  %75 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %59, i64 0, i32 0, i32 0
  %76 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %75, align 8
  br label %81

77:                                               ; preds = %69
  %78 = icmp ugt i64 %66, %71
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, i64 %71
  store %"class.spv::Instruction"** %80, %"class.spv::Instruction"*** %60, align 8
  br label %81

81:                                               ; preds = %79, %77, %73, %53
  %82 = phi %"class.spv::Instruction"** [ %68, %79 ], [ %68, %77 ], [ %76, %73 ], [ %68, %53 ]
  %83 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %82, i64 %58
  %84 = bitcast %"class.spv::Instruction"** %83 to i8**
  store i8* %7, i8** %84, align 8
  br label %85

85:                                               ; preds = %81, %48
  %86 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %33, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %87 = icmp eq %"class.spv::Instruction"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.spv::Instruction"* %86 to void (%"class.spv::Instruction"*)***
  %90 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %90, i64 1
  %92 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %91, align 8
  call void %92(%"class.spv::Instruction"* nonnull %86) #17
  br label %93

93:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %94 = load i32, i32* %14, align 8
  ret i32 %94

95:                                               ; preds = %5, %95
  %96 = phi i64 [ %103, %95 ], [ %24, %5 ]
  %97 = phi i64 [ %101, %95 ], [ 0, %5 ]
  %98 = inttoptr i64 %96 to i32*
  %99 = getelementptr inbounds i32, i32* %98, i64 %97
  %100 = load i32, i32* %99, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %100)
  %101 = add nuw nsw i64 %97, 1
  %102 = load i64, i64* %21, align 8
  %103 = load i64, i64* %23, align 8
  %104 = sub i64 %102, %103
  %105 = shl i64 %104, 30
  %106 = ashr i64 %105, 32
  %107 = icmp slt i64 %101, %106
  br i1 %107, label %95, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder26createVectorExtractDynamicEjjj(%"class.spv::Builder"* nocapture, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 77, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %1)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %3)
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %20 = load %"class.spv::Block"*, %"class.spv::Block"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %6, i8** %23, align 8
  %24 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp ult %"class.std::__1::unique_ptr"* %25, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %4
  %30 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %22, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %33 = ptrtoint %"class.std::__1::unique_ptr"* %32 to i64
  %34 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  store i64 %33, i64* %34, align 8
  br label %37

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %36, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %37

37:                                               ; preds = %35, %29
  %38 = getelementptr inbounds i8, i8* %6, i64 72
  %39 = bitcast i8* %38 to %"class.spv::Block"**
  store %"class.spv::Block"* %20, %"class.spv::Block"** %39, align 8
  %40 = load i32, i32* %13, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %74, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 5
  %44 = load %"class.spv::Function"*, %"class.spv::Function"** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %44, i64 0, i32 1
  %46 = load %"class.spv::Module"*, %"class.spv::Module"** %45, align 8
  %47 = zext i32 %40 to i64
  %48 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %46, i64 0, i32 2
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %46, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"class.spv::Instruction"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.55"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp ugt i64 %55, %47
  %57 = inttoptr i64 %53 to %"class.spv::Instruction"**
  br i1 %56, label %70, label %58

58:                                               ; preds = %42
  %59 = add i32 %40, 16
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %55, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = sub nsw i64 %60, %55
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %48, i64 %63) #17
  %64 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %48, i64 0, i32 0, i32 0
  %65 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %64, align 8
  br label %70

66:                                               ; preds = %58
  %67 = icmp ugt i64 %55, %60
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %57, i64 %60
  store %"class.spv::Instruction"** %69, %"class.spv::Instruction"*** %49, align 8
  br label %70

70:                                               ; preds = %68, %66, %62, %42
  %71 = phi %"class.spv::Instruction"** [ %57, %68 ], [ %57, %66 ], [ %65, %62 ], [ %57, %42 ]
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %47
  %73 = bitcast %"class.spv::Instruction"** %72 to i8**
  store i8* %6, i8** %73, align 8
  br label %74

74:                                               ; preds = %70, %37
  %75 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %22, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %22, align 8
  %76 = icmp eq %"class.spv::Instruction"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.spv::Instruction"* %75 to void (%"class.spv::Instruction"*)***
  %79 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %79, i64 1
  %81 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %80, align 8
  call void %81(%"class.spv::Instruction"* nonnull %75) #17
  br label %82

82:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %83 = load i32, i32* %13, align 8
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder25createVectorInsertDynamicEjjjj(%"class.spv::Builder"* nocapture, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %2, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 78, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %1)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %3)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %4)
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %21 = load %"class.spv::Block"*, %"class.spv::Block"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %7, i8** %24, align 8
  %25 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp ult %"class.std::__1::unique_ptr"* %26, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %5
  %31 = ptrtoint i8* %7 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %23, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %34 = ptrtoint %"class.std::__1::unique_ptr"* %33 to i64
  %35 = bitcast %"class.std::__1::unique_ptr"** %25 to i64*
  store i64 %34, i64* %35, align 8
  br label %38

36:                                               ; preds = %5
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %37, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %38

38:                                               ; preds = %36, %30
  %39 = getelementptr inbounds i8, i8* %7, i64 72
  %40 = bitcast i8* %39 to %"class.spv::Block"**
  store %"class.spv::Block"* %21, %"class.spv::Block"** %40, align 8
  %41 = load i32, i32* %14, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %75, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 5
  %45 = load %"class.spv::Function"*, %"class.spv::Function"** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %45, i64 0, i32 1
  %47 = load %"class.spv::Module"*, %"class.spv::Module"** %46, align 8
  %48 = zext i32 %41 to i64
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2
  %50 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast %"class.spv::Instruction"*** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.55"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp ugt i64 %56, %48
  %58 = inttoptr i64 %54 to %"class.spv::Instruction"**
  br i1 %57, label %71, label %59

59:                                               ; preds = %43
  %60 = add i32 %41, 16
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %56, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = sub nsw i64 %61, %56
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %49, i64 %64) #17
  %65 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %49, i64 0, i32 0, i32 0
  %66 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  br label %71

67:                                               ; preds = %59
  %68 = icmp ugt i64 %56, %61
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %58, i64 %61
  store %"class.spv::Instruction"** %70, %"class.spv::Instruction"*** %50, align 8
  br label %71

71:                                               ; preds = %69, %67, %63, %43
  %72 = phi %"class.spv::Instruction"** [ %58, %69 ], [ %58, %67 ], [ %66, %63 ], [ %58, %43 ]
  %73 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %72, i64 %48
  %74 = bitcast %"class.spv::Instruction"** %73 to i8**
  store i8* %7, i8** %74, align 8
  br label %75

75:                                               ; preds = %71, %38
  %76 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %23, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %23, align 8
  %77 = icmp eq %"class.spv::Instruction"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.spv::Instruction"* %76 to void (%"class.spv::Instruction"*)***
  %80 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %80, i64 1
  %82 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %81, align 8
  call void %82(%"class.spv::Instruction"* nonnull %76) #17
  br label %83

83:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %84 = load i32, i32* %14, align 8
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16createNoResultOpENS_2OpE(%"class.spv::Builder"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #18
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 56, i1 false) #17
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %14 = load %"class.spv::Block"*, %"class.spv::Block"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %4, i8** %17, align 8
  %18 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %14, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %20 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %14, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = icmp ult %"class.std::__1::unique_ptr"* %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %2
  %24 = ptrtoint i8* %4 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %16, align 8
  %25 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 1
  %27 = ptrtoint %"class.std::__1::unique_ptr"* %26 to i64
  %28 = bitcast %"class.std::__1::unique_ptr"** %18 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %14, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %30, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds i8, i8* %4, i64 72
  %33 = bitcast i8* %32 to %"class.spv::Block"**
  store %"class.spv::Block"* %14, %"class.spv::Block"** %33, align 8
  %34 = load i32, i32* %7, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %68, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %14, i64 0, i32 5
  %38 = load %"class.spv::Function"*, %"class.spv::Function"** %37, align 8
  %39 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %38, i64 0, i32 1
  %40 = load %"class.spv::Module"*, %"class.spv::Module"** %39, align 8
  %41 = zext i32 %34 to i64
  %42 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %40, i64 0, i32 2
  %43 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %40, i64 0, i32 2, i32 0, i32 1
  %44 = bitcast %"class.spv::Instruction"*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.55"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ugt i64 %49, %41
  %51 = inttoptr i64 %47 to %"class.spv::Instruction"**
  br i1 %50, label %64, label %52

52:                                               ; preds = %36
  %53 = add i32 %34, 16
  %54 = zext i32 %53 to i64
  %55 = icmp ult i64 %49, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %52
  %57 = sub nsw i64 %54, %49
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %42, i64 %57) #17
  %58 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %42, i64 0, i32 0, i32 0
  %59 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %58, align 8
  br label %64

60:                                               ; preds = %52
  %61 = icmp ugt i64 %49, %54
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %51, i64 %54
  store %"class.spv::Instruction"** %63, %"class.spv::Instruction"*** %43, align 8
  br label %64

64:                                               ; preds = %62, %60, %56, %36
  %65 = phi %"class.spv::Instruction"** [ %51, %62 ], [ %51, %60 ], [ %59, %56 ], [ %51, %36 ]
  %66 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %65, i64 %41
  %67 = bitcast %"class.spv::Instruction"** %66 to i8**
  store i8* %4, i8** %67, align 8
  br label %68

68:                                               ; preds = %64, %31
  %69 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %16, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %16, align 8
  %70 = icmp eq %"class.spv::Instruction"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.spv::Instruction"* %69 to void (%"class.spv::Instruction"*)***
  %73 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %73, i64 1
  %75 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %74, align 8
  call void %75(%"class.spv::Instruction"* nonnull %69) #17
  br label %76

76:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16createNoResultOpENS_2OpEj(%"class.spv::Builder"* nocapture readonly, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %2)
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %16 = load %"class.spv::Block"*, %"class.spv::Block"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %19, align 8
  %20 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %16, i64 0, i32 1, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %16, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = icmp ult %"class.std::__1::unique_ptr"* %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %3
  %26 = ptrtoint i8* %5 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %18, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %29 = ptrtoint %"class.std::__1::unique_ptr"* %28 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %33

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %16, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %32, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %33

33:                                               ; preds = %31, %25
  %34 = getelementptr inbounds i8, i8* %5, i64 72
  %35 = bitcast i8* %34 to %"class.spv::Block"**
  store %"class.spv::Block"* %16, %"class.spv::Block"** %35, align 8
  %36 = load i32, i32* %9, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %70, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %16, i64 0, i32 5
  %40 = load %"class.spv::Function"*, %"class.spv::Function"** %39, align 8
  %41 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %40, i64 0, i32 1
  %42 = load %"class.spv::Module"*, %"class.spv::Module"** %41, align 8
  %43 = zext i32 %36 to i64
  %44 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %42, i64 0, i32 2
  %45 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %42, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.spv::Instruction"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.55"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ugt i64 %51, %43
  %53 = inttoptr i64 %49 to %"class.spv::Instruction"**
  br i1 %52, label %66, label %54

54:                                               ; preds = %38
  %55 = add i32 %36, 16
  %56 = zext i32 %55 to i64
  %57 = icmp ult i64 %51, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = sub nsw i64 %56, %51
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %44, i64 %59) #17
  %60 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %44, i64 0, i32 0, i32 0
  %61 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %60, align 8
  br label %66

62:                                               ; preds = %54
  %63 = icmp ugt i64 %51, %56
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %53, i64 %56
  store %"class.spv::Instruction"** %65, %"class.spv::Instruction"*** %45, align 8
  br label %66

66:                                               ; preds = %64, %62, %58, %38
  %67 = phi %"class.spv::Instruction"** [ %53, %64 ], [ %53, %62 ], [ %61, %58 ], [ %53, %38 ]
  %68 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %67, i64 %43
  %69 = bitcast %"class.spv::Instruction"** %68 to i8**
  store i8* %5, i8** %69, align 8
  br label %70

70:                                               ; preds = %66, %33
  %71 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %18, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %18, align 8
  %72 = icmp eq %"class.spv::Instruction"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.spv::Instruction"* %71 to void (%"class.spv::Instruction"*)***
  %75 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %75, i64 1
  %77 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %76, align 8
  call void %77(%"class.spv::Instruction"* nonnull %71) #17
  br label %78

78:                                               ; preds = %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16createNoResultOpENS_2OpERKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* nocapture readonly, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false) #17
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %20, label %85

20:                                               ; preds = %85, %3
  %21 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %22 = load %"class.spv::Block"*, %"class.spv::Block"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %25, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %30 = icmp ult %"class.std::__1::unique_ptr"* %27, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = ptrtoint i8* %5 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %24, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %35 = ptrtoint %"class.std::__1::unique_ptr"* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr"** %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %39

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %38, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %39

39:                                               ; preds = %37, %31
  %40 = getelementptr inbounds i8, i8* %5, i64 72
  %41 = bitcast i8* %40 to %"class.spv::Block"**
  store %"class.spv::Block"* %22, %"class.spv::Block"** %41, align 8
  %42 = load i32, i32* %9, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %76, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 5
  %46 = load %"class.spv::Function"*, %"class.spv::Function"** %45, align 8
  %47 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %46, i64 0, i32 1
  %48 = load %"class.spv::Module"*, %"class.spv::Module"** %47, align 8
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2
  %51 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2, i32 0, i32 1
  %52 = bitcast %"class.spv::Instruction"*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.55"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ugt i64 %57, %49
  %59 = inttoptr i64 %55 to %"class.spv::Instruction"**
  br i1 %58, label %72, label %60

60:                                               ; preds = %44
  %61 = add i32 %42, 16
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %57, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = sub nsw i64 %62, %57
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %50, i64 %65) #17
  %66 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %50, i64 0, i32 0, i32 0
  %67 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %66, align 8
  br label %72

68:                                               ; preds = %60
  %69 = icmp ugt i64 %57, %62
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %59, i64 %62
  store %"class.spv::Instruction"** %71, %"class.spv::Instruction"*** %51, align 8
  br label %72

72:                                               ; preds = %70, %68, %64, %44
  %73 = phi %"class.spv::Instruction"** [ %59, %70 ], [ %59, %68 ], [ %67, %64 ], [ %59, %44 ]
  %74 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %73, i64 %49
  %75 = bitcast %"class.spv::Instruction"** %74 to i8**
  store i8* %5, i8** %75, align 8
  br label %76

76:                                               ; preds = %72, %39
  %77 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %24, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %24, align 8
  %78 = icmp eq %"class.spv::Instruction"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.spv::Instruction"* %77 to void (%"class.spv::Instruction"*)***
  %81 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %81, i64 1
  %83 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %82, align 8
  call void %83(%"class.spv::Instruction"* nonnull %77) #17
  br label %84

84:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  ret void

85:                                               ; preds = %3, %85
  %86 = phi i32* [ %88, %85 ], [ %16, %3 ]
  %87 = load i32, i32* %86, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %87)
  %88 = getelementptr inbounds i32, i32* %86, i64 1
  %89 = load i32*, i32** %17, align 8
  %90 = icmp eq i32* %88, %89
  br i1 %90, label %20, label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16createNoResultOpENS_2OpERKNSt3__16vectorINS_11IdImmediateENS2_9allocatorIS4_EEEE(%"class.spv::Builder"* nocapture readonly, i32, %"class.std::__1::vector.189"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false) #17
  %15 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %2, i64 0, i32 0, i32 0
  %16 = load %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %2, i64 0, i32 0, i32 1
  %18 = load %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"** %17, align 8
  %19 = icmp eq %"struct.spv::IdImmediate"* %16, %18
  br i1 %19, label %20, label %85

20:                                               ; preds = %94, %3
  %21 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %22 = load %"class.spv::Block"*, %"class.spv::Block"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %25, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %30 = icmp ult %"class.std::__1::unique_ptr"* %27, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = ptrtoint i8* %5 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %24, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %35 = ptrtoint %"class.std::__1::unique_ptr"* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr"** %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %39

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %38, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %39

39:                                               ; preds = %37, %31
  %40 = getelementptr inbounds i8, i8* %5, i64 72
  %41 = bitcast i8* %40 to %"class.spv::Block"**
  store %"class.spv::Block"* %22, %"class.spv::Block"** %41, align 8
  %42 = load i32, i32* %9, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %76, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 5
  %46 = load %"class.spv::Function"*, %"class.spv::Function"** %45, align 8
  %47 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %46, i64 0, i32 1
  %48 = load %"class.spv::Module"*, %"class.spv::Module"** %47, align 8
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2
  %51 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2, i32 0, i32 1
  %52 = bitcast %"class.spv::Instruction"*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.55"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ugt i64 %57, %49
  %59 = inttoptr i64 %55 to %"class.spv::Instruction"**
  br i1 %58, label %72, label %60

60:                                               ; preds = %44
  %61 = add i32 %42, 16
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %57, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = sub nsw i64 %62, %57
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %50, i64 %65) #17
  %66 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %50, i64 0, i32 0, i32 0
  %67 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %66, align 8
  br label %72

68:                                               ; preds = %60
  %69 = icmp ugt i64 %57, %62
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %59, i64 %62
  store %"class.spv::Instruction"** %71, %"class.spv::Instruction"*** %51, align 8
  br label %72

72:                                               ; preds = %70, %68, %64, %44
  %73 = phi %"class.spv::Instruction"** [ %59, %70 ], [ %59, %68 ], [ %67, %64 ], [ %59, %44 ]
  %74 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %73, i64 %49
  %75 = bitcast %"class.spv::Instruction"** %74 to i8**
  store i8* %5, i8** %75, align 8
  br label %76

76:                                               ; preds = %72, %39
  %77 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %24, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %24, align 8
  %78 = icmp eq %"class.spv::Instruction"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.spv::Instruction"* %77 to void (%"class.spv::Instruction"*)***
  %81 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %81, i64 1
  %83 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %82, align 8
  call void %83(%"class.spv::Instruction"* nonnull %77) #17
  br label %84

84:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  ret void

85:                                               ; preds = %3, %94
  %86 = phi %"struct.spv::IdImmediate"* [ %95, %94 ], [ %16, %3 ]
  %87 = getelementptr inbounds %"struct.spv::IdImmediate", %"struct.spv::IdImmediate"* %86, i64 0, i32 0
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = icmp eq i8 %88, 0
  %90 = getelementptr inbounds %"struct.spv::IdImmediate", %"struct.spv::IdImmediate"* %86, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %93, label %92

92:                                               ; preds = %85
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %91)
  br label %94

93:                                               ; preds = %85
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %91)
  br label %94

94:                                               ; preds = %92, %93
  %95 = getelementptr inbounds %"struct.spv::IdImmediate", %"struct.spv::IdImmediate"* %86, i64 1
  %96 = load %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"** %17, align 8
  %97 = icmp eq %"struct.spv::IdImmediate"* %95, %96
  br i1 %97, label %20, label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder20createControlBarrierENS_5ScopeES1_NS_19MemorySemanticsMaskE(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 224, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  %16 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %17 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %16, i32 %1, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %17)
  %18 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %19 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %18, i32 %2, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %19)
  %20 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %21 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %20, i32 %3, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %21)
  %22 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %23 = load %"class.spv::Block"*, %"class.spv::Block"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %6, i8** %26, align 8
  %27 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %23, i64 0, i32 1, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %23, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = icmp ult %"class.std::__1::unique_ptr"* %28, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %4
  %33 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %25, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %37 = bitcast %"class.std::__1::unique_ptr"** %27 to i64*
  store i64 %36, i64* %37, align 8
  br label %40

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %23, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %39, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %40

40:                                               ; preds = %38, %32
  %41 = getelementptr inbounds i8, i8* %6, i64 72
  %42 = bitcast i8* %41 to %"class.spv::Block"**
  store %"class.spv::Block"* %23, %"class.spv::Block"** %42, align 8
  %43 = load i32, i32* %10, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %77, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %23, i64 0, i32 5
  %47 = load %"class.spv::Function"*, %"class.spv::Function"** %46, align 8
  %48 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %47, i64 0, i32 1
  %49 = load %"class.spv::Module"*, %"class.spv::Module"** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %49, i64 0, i32 2
  %52 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %49, i64 0, i32 2, i32 0, i32 1
  %53 = bitcast %"class.spv::Instruction"*** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.55"* %51 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = ashr exact i64 %57, 3
  %59 = icmp ugt i64 %58, %50
  %60 = inttoptr i64 %56 to %"class.spv::Instruction"**
  br i1 %59, label %73, label %61

61:                                               ; preds = %45
  %62 = add i32 %43, 16
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %58, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = sub nsw i64 %63, %58
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %51, i64 %66) #17
  %67 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %51, i64 0, i32 0, i32 0
  %68 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %67, align 8
  br label %73

69:                                               ; preds = %61
  %70 = icmp ugt i64 %58, %63
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %60, i64 %63
  store %"class.spv::Instruction"** %72, %"class.spv::Instruction"*** %52, align 8
  br label %73

73:                                               ; preds = %71, %69, %65, %45
  %74 = phi %"class.spv::Instruction"** [ %60, %71 ], [ %60, %69 ], [ %68, %65 ], [ %60, %45 ]
  %75 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %74, i64 %50
  %76 = bitcast %"class.spv::Instruction"** %75 to i8**
  store i8* %6, i8** %76, align 8
  br label %77

77:                                               ; preds = %73, %40
  %78 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %25, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %25, align 8
  %79 = icmp eq %"class.spv::Instruction"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.spv::Instruction"* %78 to void (%"class.spv::Instruction"*)***
  %82 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %82, i64 1
  %84 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %83, align 8
  call void %84(%"class.spv::Instruction"* nonnull %78) #17
  br label %85

85:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder19createMemoryBarrierEjj(%"class.spv::Builder"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 225, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false) #17
  %15 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %16 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %15, i32 %1, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %16)
  %17 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %18 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %17, i32 %2, i1 zeroext false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %18)
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %20 = load %"class.spv::Block"*, %"class.spv::Block"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %23, align 8
  %24 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp ult %"class.std::__1::unique_ptr"* %25, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %3
  %30 = ptrtoint i8* %5 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %22, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %33 = ptrtoint %"class.std::__1::unique_ptr"* %32 to i64
  %34 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  store i64 %33, i64* %34, align 8
  br label %37

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %36, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %37

37:                                               ; preds = %35, %29
  %38 = getelementptr inbounds i8, i8* %5, i64 72
  %39 = bitcast i8* %38 to %"class.spv::Block"**
  store %"class.spv::Block"* %20, %"class.spv::Block"** %39, align 8
  %40 = load i32, i32* %9, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %74, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %20, i64 0, i32 5
  %44 = load %"class.spv::Function"*, %"class.spv::Function"** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %44, i64 0, i32 1
  %46 = load %"class.spv::Module"*, %"class.spv::Module"** %45, align 8
  %47 = zext i32 %40 to i64
  %48 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %46, i64 0, i32 2
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %46, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %"class.spv::Instruction"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.55"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 3
  %56 = icmp ugt i64 %55, %47
  %57 = inttoptr i64 %53 to %"class.spv::Instruction"**
  br i1 %56, label %70, label %58

58:                                               ; preds = %42
  %59 = add i32 %40, 16
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %55, %60
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = sub nsw i64 %60, %55
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %48, i64 %63) #17
  %64 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %48, i64 0, i32 0, i32 0
  %65 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %64, align 8
  br label %70

66:                                               ; preds = %58
  %67 = icmp ugt i64 %55, %60
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %57, i64 %60
  store %"class.spv::Instruction"** %69, %"class.spv::Instruction"*** %49, align 8
  br label %70

70:                                               ; preds = %68, %66, %62, %42
  %71 = phi %"class.spv::Instruction"** [ %57, %68 ], [ %57, %66 ], [ %65, %62 ], [ %57, %42 ]
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %47
  %73 = bitcast %"class.spv::Instruction"** %72 to i8**
  store i8* %5, i8** %73, align 8
  br label %74

74:                                               ; preds = %70, %37
  %75 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %22, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %22, align 8
  %76 = icmp eq %"class.spv::Instruction"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.spv::Instruction"* %75 to void (%"class.spv::Instruction"*)***
  %79 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %79, i64 1
  %81 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %80, align 8
  call void %81(%"class.spv::Instruction"* nonnull %75) #17
  br label %82

82:                                               ; preds = %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder13createUnaryOpENS_2OpEjj(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = alloca %"class.std::__1::vector.26", align 8
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = tail call i8* @_Znwm(i64 4) #18
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  store i8* %13, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast i32** %18 to i8**
  store i8* %17, i8** %19, align 8
  store i32 %3, i32* %14, align 4
  %20 = bitcast i32** %15 to i64*
  %21 = ptrtoint i8* %17 to i64
  store i64 %21, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #17
  %23 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 %1, i32 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  tail call void @_ZdlPv(i8* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  br label %103

24:                                               ; preds = %4
  %25 = tail call i8* @_Znwm(i64 80) #18
  %26 = bitcast i8* %25 to %"class.spv::Instruction"*
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 8
  %32 = bitcast i8* %31 to i32*
  store i32 %29, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 12
  %34 = bitcast i8* %33 to i32*
  store i32 %2, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %25, i64 16
  %36 = bitcast i8* %35 to i32*
  store i32 %1, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %25, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %26, i32 %3)
  %38 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %39 = load %"class.spv::Block"*, %"class.spv::Block"** %38, align 8
  %40 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %25, i8** %42, align 8
  %43 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %39, i64 0, i32 1, i32 0, i32 1
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %43, align 8
  %45 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %39, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %45, align 8
  %47 = icmp ult %"class.std::__1::unique_ptr"* %44, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %24
  %49 = ptrtoint i8* %25 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %41, align 8
  %50 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 1
  %52 = ptrtoint %"class.std::__1::unique_ptr"* %51 to i64
  %53 = bitcast %"class.std::__1::unique_ptr"** %43 to i64*
  store i64 %52, i64* %53, align 8
  br label %56

54:                                               ; preds = %24
  %55 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %39, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %55, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %56

56:                                               ; preds = %54, %48
  %57 = getelementptr inbounds i8, i8* %25, i64 72
  %58 = bitcast i8* %57 to %"class.spv::Block"**
  store %"class.spv::Block"* %39, %"class.spv::Block"** %58, align 8
  %59 = load i32, i32* %32, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %93, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %39, i64 0, i32 5
  %63 = load %"class.spv::Function"*, %"class.spv::Function"** %62, align 8
  %64 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %63, i64 0, i32 1
  %65 = load %"class.spv::Module"*, %"class.spv::Module"** %64, align 8
  %66 = zext i32 %59 to i64
  %67 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %65, i64 0, i32 2
  %68 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %65, i64 0, i32 2, i32 0, i32 1
  %69 = bitcast %"class.spv::Instruction"*** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.55"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 3
  %75 = icmp ugt i64 %74, %66
  %76 = inttoptr i64 %72 to %"class.spv::Instruction"**
  br i1 %75, label %89, label %77

77:                                               ; preds = %61
  %78 = add i32 %59, 16
  %79 = zext i32 %78 to i64
  %80 = icmp ult i64 %74, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = sub nsw i64 %79, %74
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %67, i64 %82) #17
  %83 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %67, i64 0, i32 0, i32 0
  %84 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %83, align 8
  br label %89

85:                                               ; preds = %77
  %86 = icmp ugt i64 %74, %79
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %76, i64 %79
  store %"class.spv::Instruction"** %88, %"class.spv::Instruction"*** %68, align 8
  br label %89

89:                                               ; preds = %87, %85, %81, %61
  %90 = phi %"class.spv::Instruction"** [ %76, %87 ], [ %76, %85 ], [ %84, %81 ], [ %76, %61 ]
  %91 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %90, i64 %66
  %92 = bitcast %"class.spv::Instruction"** %91 to i8**
  store i8* %25, i8** %92, align 8
  br label %93

93:                                               ; preds = %89, %56
  %94 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %41, align 8
  %95 = icmp eq %"class.spv::Instruction"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %93
  %97 = bitcast %"class.spv::Instruction"* %94 to void (%"class.spv::Instruction"*)***
  %98 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %98, i64 1
  %100 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %99, align 8
  call void %100(%"class.spv::Instruction"* nonnull %94) #17
  br label %101

101:                                              ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  %102 = load i32, i32* %32, align 8
  br label %103

103:                                              ; preds = %101, %11
  %104 = phi i32 [ %23, %11 ], [ %102, %101 ]
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder11createBinOpENS_2OpEjjj(%"class.spv::Builder"*, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::vector.26", align 8
  %8 = alloca %"class.std::__1::vector.26", align 8
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = tail call i8* @_Znwm(i64 8) #18
  %17 = bitcast %"class.std::__1::vector.26"* %7 to i8**
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i32** %15 to i8**
  store i8* %18, i8** %19, align 8
  %20 = bitcast i32** %14 to i64*
  %21 = ptrtoint i8* %18 to i64
  store i64 %21, i64* %20, align 8
  %22 = bitcast i8* %16 to i32*
  store i32 %3, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %16, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 %4, i32* %24, align 4
  %25 = bitcast %"class.std::__1::vector.26"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #17
  %26 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 %1, i32 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  tail call void @_ZdlPv(i8* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  br label %106

27:                                               ; preds = %5
  %28 = tail call i8* @_Znwm(i64 80) #18
  %29 = bitcast i8* %28 to %"class.spv::Instruction"*
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 8
  %33 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds i8, i8* %28, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %32, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %28, i64 12
  %37 = bitcast i8* %36 to i32*
  store i32 %2, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %28, i64 16
  %39 = bitcast i8* %38 to i32*
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %28, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %29, i32 %3)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %29, i32 %4)
  %41 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %42 = load %"class.spv::Block"*, %"class.spv::Block"** %41, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %28, i8** %45, align 8
  %46 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %42, i64 0, i32 1, i32 0, i32 1
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %42, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %48, align 8
  %50 = icmp ult %"class.std::__1::unique_ptr"* %47, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %27
  %52 = ptrtoint i8* %28 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %44, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 1
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %54 to i64
  %56 = bitcast %"class.std::__1::unique_ptr"** %46 to i64*
  store i64 %55, i64* %56, align 8
  br label %59

57:                                               ; preds = %27
  %58 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %42, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %58, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %59

59:                                               ; preds = %57, %51
  %60 = getelementptr inbounds i8, i8* %28, i64 72
  %61 = bitcast i8* %60 to %"class.spv::Block"**
  store %"class.spv::Block"* %42, %"class.spv::Block"** %61, align 8
  %62 = load i32, i32* %35, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %96, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %42, i64 0, i32 5
  %66 = load %"class.spv::Function"*, %"class.spv::Function"** %65, align 8
  %67 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %66, i64 0, i32 1
  %68 = load %"class.spv::Module"*, %"class.spv::Module"** %67, align 8
  %69 = zext i32 %62 to i64
  %70 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %68, i64 0, i32 2
  %71 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %68, i64 0, i32 2, i32 0, i32 1
  %72 = bitcast %"class.spv::Instruction"*** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.55"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 3
  %78 = icmp ugt i64 %77, %69
  %79 = inttoptr i64 %75 to %"class.spv::Instruction"**
  br i1 %78, label %92, label %80

80:                                               ; preds = %64
  %81 = add i32 %62, 16
  %82 = zext i32 %81 to i64
  %83 = icmp ult i64 %77, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = sub nsw i64 %82, %77
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %70, i64 %85) #17
  %86 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %70, i64 0, i32 0, i32 0
  %87 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %86, align 8
  br label %92

88:                                               ; preds = %80
  %89 = icmp ugt i64 %77, %82
  br i1 %89, label %90, label %92

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %79, i64 %82
  store %"class.spv::Instruction"** %91, %"class.spv::Instruction"*** %71, align 8
  br label %92

92:                                               ; preds = %90, %88, %84, %64
  %93 = phi %"class.spv::Instruction"** [ %79, %90 ], [ %79, %88 ], [ %87, %84 ], [ %79, %64 ]
  %94 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %93, i64 %69
  %95 = bitcast %"class.spv::Instruction"** %94 to i8**
  store i8* %28, i8** %95, align 8
  br label %96

96:                                               ; preds = %92, %59
  %97 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %44, align 8
  %98 = icmp eq %"class.spv::Instruction"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.spv::Instruction"* %97 to void (%"class.spv::Instruction"*)***
  %101 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %101, i64 1
  %103 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %102, align 8
  call void %103(%"class.spv::Instruction"* nonnull %97) #17
  br label %104

104:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  %105 = load i32, i32* %35, align 8
  br label %106

106:                                              ; preds = %104, %12
  %107 = phi i32 [ %26, %12 ], [ %105, %104 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder11createTriOpENS_2OpEjjjj(%"class.spv::Builder"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.std::__1::vector.26", align 8
  %9 = alloca %"class.std::__1::vector.26", align 8
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::vector.26"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %8, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = tail call i8* @_Znwm(i64 12) #18
  %18 = bitcast %"class.std::__1::vector.26"* %8 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 12
  %20 = bitcast i32** %16 to i8**
  store i8* %19, i8** %20, align 8
  %21 = bitcast i32** %15 to i64*
  %22 = ptrtoint i8* %19 to i64
  store i64 %22, i64* %21, align 8
  %23 = bitcast i8* %17 to i32*
  store i32 %3, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %17, i64 4
  %25 = bitcast i8* %24 to i32*
  store i32 %4, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %17, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 %5, i32* %27, align 4
  %28 = bitcast %"class.std::__1::vector.26"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #17
  %29 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 %1, i32 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  tail call void @_ZdlPv(i8* nonnull %17) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  br label %109

30:                                               ; preds = %6
  %31 = tail call i8* @_Znwm(i64 80) #18
  %32 = bitcast i8* %31 to %"class.spv::Instruction"*
  %33 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 8
  %36 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds i8, i8* %31, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 %35, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %31, i64 12
  %40 = bitcast i8* %39 to i32*
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %31, i64 16
  %42 = bitcast i8* %41 to i32*
  store i32 %1, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %31, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %32, i32 %3)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %32, i32 %4)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %32, i32 %5)
  %44 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %45 = load %"class.spv::Block"*, %"class.spv::Block"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr"* %7 to i8**
  store i8* %31, i8** %48, align 8
  %49 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %45, i64 0, i32 1, i32 0, i32 1
  %50 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %45, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = icmp ult %"class.std::__1::unique_ptr"* %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %30
  %55 = ptrtoint i8* %31 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %47, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 1
  %58 = ptrtoint %"class.std::__1::unique_ptr"* %57 to i64
  %59 = bitcast %"class.std::__1::unique_ptr"** %49 to i64*
  store i64 %58, i64* %59, align 8
  br label %62

60:                                               ; preds = %30
  %61 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %45, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %61, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7) #17
  br label %62

62:                                               ; preds = %60, %54
  %63 = getelementptr inbounds i8, i8* %31, i64 72
  %64 = bitcast i8* %63 to %"class.spv::Block"**
  store %"class.spv::Block"* %45, %"class.spv::Block"** %64, align 8
  %65 = load i32, i32* %38, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %99, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %45, i64 0, i32 5
  %69 = load %"class.spv::Function"*, %"class.spv::Function"** %68, align 8
  %70 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %69, i64 0, i32 1
  %71 = load %"class.spv::Module"*, %"class.spv::Module"** %70, align 8
  %72 = zext i32 %65 to i64
  %73 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %71, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %71, i64 0, i32 2, i32 0, i32 1
  %75 = bitcast %"class.spv::Instruction"*** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.std::__1::vector.55"* %73 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = icmp ugt i64 %80, %72
  %82 = inttoptr i64 %78 to %"class.spv::Instruction"**
  br i1 %81, label %95, label %83

83:                                               ; preds = %67
  %84 = add i32 %65, 16
  %85 = zext i32 %84 to i64
  %86 = icmp ult i64 %80, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = sub nsw i64 %85, %80
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %73, i64 %88) #17
  %89 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %73, i64 0, i32 0, i32 0
  %90 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %89, align 8
  br label %95

91:                                               ; preds = %83
  %92 = icmp ugt i64 %80, %85
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %82, i64 %85
  store %"class.spv::Instruction"** %94, %"class.spv::Instruction"*** %74, align 8
  br label %95

95:                                               ; preds = %93, %91, %87, %67
  %96 = phi %"class.spv::Instruction"** [ %82, %93 ], [ %82, %91 ], [ %90, %87 ], [ %82, %67 ]
  %97 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %96, i64 %72
  %98 = bitcast %"class.spv::Instruction"** %97 to i8**
  store i8* %31, i8** %98, align 8
  br label %99

99:                                               ; preds = %95, %62
  %100 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %47, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %47, align 8
  %101 = icmp eq %"class.spv::Instruction"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %99
  %103 = bitcast %"class.spv::Instruction"* %100 to void (%"class.spv::Instruction"*)***
  %104 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %104, i64 1
  %106 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %105, align 8
  call void %106(%"class.spv::Instruction"* nonnull %100) #17
  br label %107

107:                                              ; preds = %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  %108 = load i32, i32* %38, align 8
  br label %109

109:                                              ; preds = %107, %13
  %110 = phi i32 [ %29, %13 ], [ %108, %107 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder8createOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* nocapture, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  %19 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %20, %22
  br i1 %23, label %24, label %90

24:                                               ; preds = %90, %4
  %25 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %26 = load %"class.spv::Block"*, %"class.spv::Block"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %6, i8** %29, align 8
  %30 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 1, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %24
  %36 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %28, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"** %30 to i64*
  store i64 %39, i64* %40, align 8
  br label %43

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %42, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %43

43:                                               ; preds = %41, %35
  %44 = getelementptr inbounds i8, i8* %6, i64 72
  %45 = bitcast i8* %44 to %"class.spv::Block"**
  store %"class.spv::Block"* %26, %"class.spv::Block"** %45, align 8
  %46 = load i32, i32* %13, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 5
  %50 = load %"class.spv::Function"*, %"class.spv::Function"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %50, i64 0, i32 1
  %52 = load %"class.spv::Module"*, %"class.spv::Module"** %51, align 8
  %53 = zext i32 %46 to i64
  %54 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %52, i64 0, i32 2
  %55 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %52, i64 0, i32 2, i32 0, i32 1
  %56 = bitcast %"class.spv::Instruction"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.55"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, %53
  %63 = inttoptr i64 %59 to %"class.spv::Instruction"**
  br i1 %62, label %76, label %64

64:                                               ; preds = %48
  %65 = add i32 %46, 16
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %61, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = sub nsw i64 %66, %61
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %54, i64 %69) #17
  %70 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %54, i64 0, i32 0, i32 0
  %71 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %70, align 8
  br label %76

72:                                               ; preds = %64
  %73 = icmp ugt i64 %61, %66
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, i64 %66
  store %"class.spv::Instruction"** %75, %"class.spv::Instruction"*** %55, align 8
  br label %76

76:                                               ; preds = %74, %72, %68, %48
  %77 = phi %"class.spv::Instruction"** [ %63, %74 ], [ %63, %72 ], [ %71, %68 ], [ %63, %48 ]
  %78 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %77, i64 %53
  %79 = bitcast %"class.spv::Instruction"** %78 to i8**
  store i8* %6, i8** %79, align 8
  br label %80

80:                                               ; preds = %76, %43
  %81 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %28, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %28, align 8
  %82 = icmp eq %"class.spv::Instruction"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.spv::Instruction"* %81 to void (%"class.spv::Instruction"*)***
  %85 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %85, i64 1
  %87 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %86, align 8
  call void %87(%"class.spv::Instruction"* nonnull %81) #17
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %89 = load i32, i32* %13, align 8
  ret i32 %89

90:                                               ; preds = %4, %90
  %91 = phi i32* [ %93, %90 ], [ %20, %4 ]
  %92 = load i32, i32* %91, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %92)
  %93 = getelementptr inbounds i32, i32* %91, i64 1
  %94 = load i32*, i32** %21, align 8
  %95 = icmp eq i32* %93, %94
  br i1 %95, label %24, label %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder8createOpENS_2OpEjRKNSt3__16vectorINS_11IdImmediateENS2_9allocatorIS4_EEEE(%"class.spv::Builder"* nocapture, i32, i32, %"class.std::__1::vector.189"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 56, i1 false) #17
  %19 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %3, i64 0, i32 0, i32 0
  %20 = load %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.189", %"class.std::__1::vector.189"* %3, i64 0, i32 0, i32 1
  %22 = load %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"** %21, align 8
  %23 = icmp eq %"struct.spv::IdImmediate"* %20, %22
  br i1 %23, label %24, label %90

24:                                               ; preds = %99, %4
  %25 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %26 = load %"class.spv::Block"*, %"class.spv::Block"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %6, i8** %29, align 8
  %30 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 1, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %24
  %36 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %28, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"** %30 to i64*
  store i64 %39, i64* %40, align 8
  br label %43

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %42, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %43

43:                                               ; preds = %41, %35
  %44 = getelementptr inbounds i8, i8* %6, i64 72
  %45 = bitcast i8* %44 to %"class.spv::Block"**
  store %"class.spv::Block"* %26, %"class.spv::Block"** %45, align 8
  %46 = load i32, i32* %13, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %80, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %26, i64 0, i32 5
  %50 = load %"class.spv::Function"*, %"class.spv::Function"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %50, i64 0, i32 1
  %52 = load %"class.spv::Module"*, %"class.spv::Module"** %51, align 8
  %53 = zext i32 %46 to i64
  %54 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %52, i64 0, i32 2
  %55 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %52, i64 0, i32 2, i32 0, i32 1
  %56 = bitcast %"class.spv::Instruction"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.55"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, %53
  %63 = inttoptr i64 %59 to %"class.spv::Instruction"**
  br i1 %62, label %76, label %64

64:                                               ; preds = %48
  %65 = add i32 %46, 16
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %61, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = sub nsw i64 %66, %61
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %54, i64 %69) #17
  %70 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %54, i64 0, i32 0, i32 0
  %71 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %70, align 8
  br label %76

72:                                               ; preds = %64
  %73 = icmp ugt i64 %61, %66
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, i64 %66
  store %"class.spv::Instruction"** %75, %"class.spv::Instruction"*** %55, align 8
  br label %76

76:                                               ; preds = %74, %72, %68, %48
  %77 = phi %"class.spv::Instruction"** [ %63, %74 ], [ %63, %72 ], [ %71, %68 ], [ %63, %48 ]
  %78 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %77, i64 %53
  %79 = bitcast %"class.spv::Instruction"** %78 to i8**
  store i8* %6, i8** %79, align 8
  br label %80

80:                                               ; preds = %76, %43
  %81 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %28, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %28, align 8
  %82 = icmp eq %"class.spv::Instruction"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.spv::Instruction"* %81 to void (%"class.spv::Instruction"*)***
  %85 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %85, i64 1
  %87 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %86, align 8
  call void %87(%"class.spv::Instruction"* nonnull %81) #17
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %89 = load i32, i32* %13, align 8
  ret i32 %89

90:                                               ; preds = %4, %99
  %91 = phi %"struct.spv::IdImmediate"* [ %100, %99 ], [ %20, %4 ]
  %92 = getelementptr inbounds %"struct.spv::IdImmediate", %"struct.spv::IdImmediate"* %91, i64 0, i32 0
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = getelementptr inbounds %"struct.spv::IdImmediate", %"struct.spv::IdImmediate"* %91, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %98, label %97

97:                                               ; preds = %90
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %96)
  br label %99

98:                                               ; preds = %90
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %96)
  br label %99

99:                                               ; preds = %97, %98
  %100 = getelementptr inbounds %"struct.spv::IdImmediate", %"struct.spv::IdImmediate"* %91, i64 1
  %101 = load %"struct.spv::IdImmediate"*, %"struct.spv::IdImmediate"** %21, align 8
  %102 = icmp eq %"struct.spv::IdImmediate"* %100, %101
  br i1 %102, label %24, label %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder18createFunctionCallEPNS_8FunctionERKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.spv::Builder"* nocapture, %"class.spv::Function"* nocapture readonly, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %1, i64 0, i32 2, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %9, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %5, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %11, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %5, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 57, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  %20 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %1, i64 0, i32 2, i32 1
  %21 = load i32, i32* %20, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %21)
  %22 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %23 = bitcast i32** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = lshr exact i64 %27, 2
  %29 = trunc i64 %28 to i32
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %97, label %31

31:                                               ; preds = %97, %3
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %33 = load %"class.spv::Block"*, %"class.spv::Block"** %32, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %36, align 8
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %33, i64 0, i32 1, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %33, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %39, align 8
  %41 = icmp ult %"class.std::__1::unique_ptr"* %38, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %31
  %43 = ptrtoint i8* %5 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %35, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  %46 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  %47 = bitcast %"class.std::__1::unique_ptr"** %37 to i64*
  store i64 %46, i64* %47, align 8
  br label %50

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %33, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %49, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %50

50:                                               ; preds = %48, %42
  %51 = getelementptr inbounds i8, i8* %5, i64 72
  %52 = bitcast i8* %51 to %"class.spv::Block"**
  store %"class.spv::Block"* %33, %"class.spv::Block"** %52, align 8
  %53 = load i32, i32* %14, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %87, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %33, i64 0, i32 5
  %57 = load %"class.spv::Function"*, %"class.spv::Function"** %56, align 8
  %58 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %57, i64 0, i32 1
  %59 = load %"class.spv::Module"*, %"class.spv::Module"** %58, align 8
  %60 = zext i32 %53 to i64
  %61 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %59, i64 0, i32 2
  %62 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %59, i64 0, i32 2, i32 0, i32 1
  %63 = bitcast %"class.spv::Instruction"*** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::vector.55"* %61 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 3
  %69 = icmp ugt i64 %68, %60
  %70 = inttoptr i64 %66 to %"class.spv::Instruction"**
  br i1 %69, label %83, label %71

71:                                               ; preds = %55
  %72 = add i32 %53, 16
  %73 = zext i32 %72 to i64
  %74 = icmp ult i64 %68, %73
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = sub nsw i64 %73, %68
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %61, i64 %76) #17
  %77 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %61, i64 0, i32 0, i32 0
  %78 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %77, align 8
  br label %83

79:                                               ; preds = %71
  %80 = icmp ugt i64 %68, %73
  br i1 %80, label %81, label %83

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %70, i64 %73
  store %"class.spv::Instruction"** %82, %"class.spv::Instruction"*** %62, align 8
  br label %83

83:                                               ; preds = %81, %79, %75, %55
  %84 = phi %"class.spv::Instruction"** [ %70, %81 ], [ %70, %79 ], [ %78, %75 ], [ %70, %55 ]
  %85 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %84, i64 %60
  %86 = bitcast %"class.spv::Instruction"** %85 to i8**
  store i8* %5, i8** %86, align 8
  br label %87

87:                                               ; preds = %83, %50
  %88 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %35, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %35, align 8
  %89 = icmp eq %"class.spv::Instruction"* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.spv::Instruction"* %88 to void (%"class.spv::Instruction"*)***
  %92 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %92, i64 1
  %94 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %93, align 8
  call void %94(%"class.spv::Instruction"* nonnull %88) #17
  br label %95

95:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %96 = load i32, i32* %14, align 8
  ret i32 %96

97:                                               ; preds = %3, %97
  %98 = phi i64 [ %105, %97 ], [ %26, %3 ]
  %99 = phi i64 [ %103, %97 ], [ 0, %3 ]
  %100 = inttoptr i64 %98 to i32*
  %101 = getelementptr inbounds i32, i32* %100, i64 %99
  %102 = load i32, i32* %101, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %102)
  %103 = add nuw nsw i64 %99, 1
  %104 = load i64, i64* %23, align 8
  %105 = load i64, i64* %25, align 8
  %106 = sub i64 %104, %105
  %107 = shl i64 %106, 30
  %108 = ashr i64 %107, 32
  %109 = icmp slt i64 %103, %108
  br i1 %109, label %97, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder19createRvalueSwizzleENS_10DecorationEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"*, i32, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::vector.26", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.26"* %4 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp eq i64 %13, 4
  br i1 %14, label %15, label %23

15:                                               ; preds = %5
  %16 = inttoptr i64 %12 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @_ZN3spv7Builder22createCompositeExtractEjjj(%"class.spv::Builder"* %0, i32 %3, i32 %2, i32 %17)
  %19 = icmp ne i32 %1, 2147483647
  %20 = icmp ne i32 %18, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %149

22:                                               ; preds = %15
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %18, i32 %1, i32 -1) #17
  br label %149

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %46, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = tail call i8* @_Znwm(i64 8) #18
  %32 = bitcast %"class.std::__1::vector.26"* %7 to i8**
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  %34 = bitcast i32** %30 to i8**
  store i8* %33, i8** %34, align 8
  %35 = bitcast i32** %29 to i64*
  %36 = ptrtoint i8* %33 to i64
  store i64 %36, i64* %35, align 8
  %37 = bitcast i8* %31 to i32*
  %38 = getelementptr inbounds i8, i8* %31, i64 4
  %39 = bitcast i8* %38 to i32*
  store i32 %3, i32* %39, align 4
  store i32 %3, i32* %37, align 4
  %40 = call i32 @_ZN3spv7Builder20createSpecConstantOpENS_2OpEjRKNSt3__16vectorIjNS2_9allocatorIjEEEES8_(%"class.spv::Builder"* %0, i32 79, i32 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.26"* dereferenceable(24) %4)
  %41 = icmp ne i32 %1, 2147483647
  %42 = icmp ne i32 %40, 0
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %27
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %40, i32 %1, i32 -1) #17
  br label %45

45:                                               ; preds = %27, %44
  tail call void @_ZdlPv(i8* nonnull %31) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br label %149

46:                                               ; preds = %23
  %47 = tail call i8* @_Znwm(i64 80) #18
  %48 = bitcast i8* %47 to %"class.spv::Instruction"*
  %49 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  %52 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = getelementptr inbounds i8, i8* %47, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 %51, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %47, i64 12
  %56 = bitcast i8* %55 to i32*
  store i32 %2, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %47, i64 16
  %58 = bitcast i8* %57 to i32*
  store i32 79, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %47, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %48, i32 %3)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %48, i32 %3)
  %60 = load i64, i64* %9, align 8
  %61 = load i64, i64* %11, align 8
  %62 = sub i64 %60, %61
  %63 = lshr exact i64 %62, 2
  %64 = trunc i64 %63 to i32
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %136, label %66

66:                                               ; preds = %136, %46
  %67 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %68 = load %"class.spv::Block"*, %"class.spv::Block"** %67, align 8
  %69 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %47, i8** %71, align 8
  %72 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %68, i64 0, i32 1, i32 0, i32 1
  %73 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %72, align 8
  %74 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %68, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %75 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %74, align 8
  %76 = icmp ult %"class.std::__1::unique_ptr"* %73, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %66
  %78 = ptrtoint i8* %47 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %70, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 1
  %81 = ptrtoint %"class.std::__1::unique_ptr"* %80 to i64
  %82 = bitcast %"class.std::__1::unique_ptr"** %72 to i64*
  store i64 %81, i64* %82, align 8
  br label %85

83:                                               ; preds = %66
  %84 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %68, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %84, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %85

85:                                               ; preds = %83, %77
  %86 = getelementptr inbounds i8, i8* %47, i64 72
  %87 = bitcast i8* %86 to %"class.spv::Block"**
  store %"class.spv::Block"* %68, %"class.spv::Block"** %87, align 8
  %88 = load i32, i32* %54, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %122, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %68, i64 0, i32 5
  %92 = load %"class.spv::Function"*, %"class.spv::Function"** %91, align 8
  %93 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %92, i64 0, i32 1
  %94 = load %"class.spv::Module"*, %"class.spv::Module"** %93, align 8
  %95 = zext i32 %88 to i64
  %96 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %94, i64 0, i32 2
  %97 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %94, i64 0, i32 2, i32 0, i32 1
  %98 = bitcast %"class.spv::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector.55"* %96 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = ashr exact i64 %102, 3
  %104 = icmp ugt i64 %103, %95
  %105 = inttoptr i64 %101 to %"class.spv::Instruction"**
  br i1 %104, label %118, label %106

106:                                              ; preds = %90
  %107 = add i32 %88, 16
  %108 = zext i32 %107 to i64
  %109 = icmp ult i64 %103, %108
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = sub nsw i64 %108, %103
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %96, i64 %111) #17
  %112 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %96, i64 0, i32 0, i32 0
  %113 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %112, align 8
  br label %118

114:                                              ; preds = %106
  %115 = icmp ugt i64 %103, %108
  br i1 %115, label %116, label %118

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %105, i64 %108
  store %"class.spv::Instruction"** %117, %"class.spv::Instruction"*** %97, align 8
  br label %118

118:                                              ; preds = %116, %114, %110, %90
  %119 = phi %"class.spv::Instruction"** [ %105, %116 ], [ %105, %114 ], [ %113, %110 ], [ %105, %90 ]
  %120 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %119, i64 %95
  %121 = bitcast %"class.spv::Instruction"** %120 to i8**
  store i8* %47, i8** %121, align 8
  br label %122

122:                                              ; preds = %118, %85
  %123 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %70, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %70, align 8
  %124 = icmp eq %"class.spv::Instruction"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.spv::Instruction"* %123 to void (%"class.spv::Instruction"*)***
  %127 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %127, i64 1
  %129 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %128, align 8
  call void %129(%"class.spv::Instruction"* nonnull %123) #17
  br label %130

130:                                              ; preds = %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  %131 = load i32, i32* %54, align 8
  %132 = icmp ne i32 %1, 2147483647
  %133 = icmp ne i32 %131, 0
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %149

135:                                              ; preds = %130
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %131, i32 %1, i32 -1) #17
  br label %149

136:                                              ; preds = %46, %136
  %137 = phi i64 [ %144, %136 ], [ %61, %46 ]
  %138 = phi i64 [ %142, %136 ], [ 0, %46 ]
  %139 = inttoptr i64 %137 to i32*
  %140 = getelementptr inbounds i32, i32* %139, i64 %138
  %141 = load i32, i32* %140, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %48, i32 %141)
  %142 = add nuw nsw i64 %138, 1
  %143 = load i64, i64* %9, align 8
  %144 = load i64, i64* %11, align 8
  %145 = sub i64 %143, %144
  %146 = shl i64 %145, 30
  %147 = ashr i64 %146, 32
  %148 = icmp slt i64 %142, %147
  br i1 %148, label %136, label %66

149:                                              ; preds = %135, %130, %22, %15, %45
  %150 = phi i32 [ %40, %45 ], [ %18, %15 ], [ %18, %22 ], [ %131, %130 ], [ %131, %135 ]
  ret i32 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder19createLvalueSwizzleEjjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* nocapture, i32, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca [4 x i32], align 16
  %8 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.26"* %4 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp eq i64 %13, 4
  %15 = inttoptr i64 %12 to i32*
  br i1 %14, label %16, label %65

16:                                               ; preds = %5
  %17 = zext i32 %3 to i64
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %19 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %18, align 8
  %20 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, i64 %17
  %21 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %20, align 8
  %22 = icmp eq %"class.spv::Instruction"* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  br label %27

27:                                               ; preds = %23, %16
  %28 = phi i64 [ %26, %23 ], [ 0, %16 ]
  %29 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, i64 %28
  %30 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %29, align 8
  %31 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %62 [
    i32 30, label %49
    i32 28, label %38
    i32 24, label %33
    i32 23, label %33
  ]

33:                                               ; preds = %27, %27
  %34 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %30, i64 0, i32 4, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 1
  %37 = load i32, i32* %36, align 4
  br label %59

38:                                               ; preds = %27
  %39 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %30, i64 0, i32 4, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, i64 %43
  %45 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %45, i64 0, i32 4, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = load i32, i32* %47, align 4
  br label %59

49:                                               ; preds = %27
  %50 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %30, i64 0, i32 4
  %51 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %30, i64 0, i32 4, i32 0, i32 1
  %52 = bitcast i32** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.26"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = lshr exact i64 %56, 2
  %58 = trunc i64 %57 to i32
  br label %59

59:                                               ; preds = %33, %38, %49
  %60 = phi i32 [ %58, %49 ], [ %48, %38 ], [ %37, %33 ]
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %65

62:                                               ; preds = %27, %59
  %63 = load i32, i32* %15, align 4
  %64 = tail call i32 @_ZN3spv7Builder21createCompositeInsertEjjjj(%"class.spv::Builder"* %0, i32 %3, i32 %2, i32 %1, i32 %63)
  br label %298

65:                                               ; preds = %59, %5
  %66 = tail call i8* @_Znwm(i64 80) #18
  %67 = bitcast i8* %66 to %"class.spv::Instruction"*
  %68 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 8
  %71 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds i8, i8* %66, i64 8
  %73 = bitcast i8* %72 to i32*
  store i32 %70, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %66, i64 12
  %75 = bitcast i8* %74 to i32*
  store i32 %1, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %66, i64 16
  %77 = bitcast i8* %76 to i32*
  store i32 79, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %66, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %67, i32 %2)
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %67, i32 %3)
  %79 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #17
  %80 = zext i32 %2 to i64
  %81 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %82 = bitcast [4 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %82, i8 -86, i64 16, i1 false)
  %83 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %81, align 8
  %84 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %83, i64 %80
  %85 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %84, align 8
  %86 = icmp eq %"class.spv::Instruction"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %65
  %88 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %85, i64 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  br label %91

91:                                               ; preds = %87, %65
  %92 = phi i64 [ %90, %87 ], [ 0, %65 ]
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %83, i64 %92
  %94 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %93, align 8
  %95 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  switch i32 %96, label %126 [
    i32 30, label %113
    i32 28, label %102
    i32 24, label %97
    i32 23, label %97
  ]

97:                                               ; preds = %91, %91
  %98 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 1
  %101 = load i32, i32* %100, align 4
  br label %123

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 1
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %83, i64 %107
  %109 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %108, align 8
  %110 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %109, i64 0, i32 4, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = load i32, i32* %111, align 4
  br label %123

113:                                              ; preds = %91
  %114 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4
  %115 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::vector.26"* %114 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = lshr exact i64 %120, 2
  %122 = trunc i64 %121 to i32
  br label %123

123:                                              ; preds = %97, %102, %113
  %124 = phi i32 [ %122, %113 ], [ %112, %102 ], [ %101, %97 ]
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %194

126:                                              ; preds = %91, %123
  %127 = phi i32 [ %124, %123 ], [ 1, %91 ]
  %128 = zext i32 %127 to i64
  %129 = icmp ult i32 %127, 8
  br i1 %129, label %130, label %132

130:                                              ; preds = %192, %126
  %131 = phi i64 [ 0, %126 ], [ %133, %192 ]
  br label %207

132:                                              ; preds = %126
  %133 = and i64 %128, 4294967288
  %134 = add nsw i64 %133, -8
  %135 = lshr exact i64 %134, 3
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 3
  %138 = icmp ult i64 %134, 24
  br i1 %138, label %175, label %139

139:                                              ; preds = %132
  %140 = sub nsw i64 %136, %137
  br label %141

141:                                              ; preds = %141, %139
  %142 = phi i64 [ 0, %139 ], [ %171, %141 ]
  %143 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %139 ], [ %172, %141 ]
  %144 = phi i64 [ %140, %139 ], [ %173, %141 ]
  %145 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %142
  %146 = add <4 x i32> %143, <i32 4, i32 4, i32 4, i32 4>
  %147 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %143, <4 x i32>* %147, align 16
  %148 = getelementptr inbounds i32, i32* %145, i64 4
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %149, align 16
  %150 = or i64 %142, 8
  %151 = add <4 x i32> %143, <i32 8, i32 8, i32 8, i32 8>
  %152 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %150
  %153 = add <4 x i32> %143, <i32 12, i32 12, i32 12, i32 12>
  %154 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> %151, <4 x i32>* %154, align 16
  %155 = getelementptr inbounds i32, i32* %152, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %156, align 16
  %157 = or i64 %142, 16
  %158 = add <4 x i32> %143, <i32 16, i32 16, i32 16, i32 16>
  %159 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %157
  %160 = add <4 x i32> %143, <i32 20, i32 20, i32 20, i32 20>
  %161 = bitcast i32* %159 to <4 x i32>*
  store <4 x i32> %158, <4 x i32>* %161, align 16
  %162 = getelementptr inbounds i32, i32* %159, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> %160, <4 x i32>* %163, align 16
  %164 = or i64 %142, 24
  %165 = add <4 x i32> %143, <i32 24, i32 24, i32 24, i32 24>
  %166 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %164
  %167 = add <4 x i32> %143, <i32 28, i32 28, i32 28, i32 28>
  %168 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %168, align 16
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %167, <4 x i32>* %170, align 16
  %171 = add i64 %142, 32
  %172 = add <4 x i32> %143, <i32 32, i32 32, i32 32, i32 32>
  %173 = add i64 %144, -4
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %141, !llvm.loop !47

175:                                              ; preds = %141, %132
  %176 = phi i64 [ 0, %132 ], [ %171, %141 ]
  %177 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %132 ], [ %172, %141 ]
  %178 = icmp eq i64 %137, 0
  br i1 %178, label %192, label %179

179:                                              ; preds = %175, %179
  %180 = phi i64 [ %188, %179 ], [ %176, %175 ]
  %181 = phi <4 x i32> [ %189, %179 ], [ %177, %175 ]
  %182 = phi i64 [ %190, %179 ], [ %137, %175 ]
  %183 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %180
  %184 = add <4 x i32> %181, <i32 4, i32 4, i32 4, i32 4>
  %185 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> %181, <4 x i32>* %185, align 16
  %186 = getelementptr inbounds i32, i32* %183, i64 4
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> %184, <4 x i32>* %187, align 16
  %188 = add i64 %180, 8
  %189 = add <4 x i32> %181, <i32 8, i32 8, i32 8, i32 8>
  %190 = add i64 %182, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %179, !llvm.loop !49

192:                                              ; preds = %179, %175
  %193 = icmp eq i64 %133, %128
  br i1 %193, label %194, label %130

194:                                              ; preds = %207, %192, %123
  %195 = phi i1 [ false, %123 ], [ true, %192 ], [ true, %207 ]
  %196 = phi i32 [ %124, %123 ], [ %127, %192 ], [ %127, %207 ]
  %197 = load i64, i64* %9, align 8
  %198 = load i64, i64* %11, align 8
  %199 = sub i64 %197, %198
  %200 = lshr exact i64 %199, 2
  %201 = trunc i64 %200 to i32
  %202 = icmp sgt i32 %201, 0
  %203 = inttoptr i64 %198 to i32*
  br i1 %202, label %204, label %213

204:                                              ; preds = %194
  %205 = shl i64 %199, 30
  %206 = ashr exact i64 %205, 32
  br label %216

207:                                              ; preds = %130, %207
  %208 = phi i64 [ %211, %207 ], [ %131, %130 ]
  %209 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %208
  %210 = trunc i64 %208 to i32
  store i32 %210, i32* %209, align 4
  %211 = add nuw nsw i64 %208, 1
  %212 = icmp eq i64 %211, %128
  br i1 %212, label %194, label %207, !llvm.loop !50

213:                                              ; preds = %216, %194
  br i1 %195, label %214, label %226

214:                                              ; preds = %213
  %215 = zext i32 %196 to i64
  br label %292

216:                                              ; preds = %204, %216
  %217 = phi i64 [ 0, %204 ], [ %224, %216 ]
  %218 = trunc i64 %217 to i32
  %219 = add nsw i32 %196, %218
  %220 = getelementptr inbounds i32, i32* %203, i64 %217
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %222
  store i32 %219, i32* %223, align 4
  %224 = add nuw nsw i64 %217, 1
  %225 = icmp slt i64 %224, %206
  br i1 %225, label %216, label %213

226:                                              ; preds = %292, %213
  %227 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %228 = load %"class.spv::Block"*, %"class.spv::Block"** %227, align 8
  %229 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229)
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %66, i8** %231, align 8
  %232 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %228, i64 0, i32 1, i32 0, i32 1
  %233 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %232, align 8
  %234 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %228, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %235 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %234, align 8
  %236 = icmp ult %"class.std::__1::unique_ptr"* %233, %235
  br i1 %236, label %237, label %243

237:                                              ; preds = %226
  %238 = ptrtoint i8* %66 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %230, align 8
  %239 = bitcast %"class.std::__1::unique_ptr"* %233 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 1
  %241 = ptrtoint %"class.std::__1::unique_ptr"* %240 to i64
  %242 = bitcast %"class.std::__1::unique_ptr"** %232 to i64*
  store i64 %241, i64* %242, align 8
  br label %245

243:                                              ; preds = %226
  %244 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %228, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %244, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %245

245:                                              ; preds = %243, %237
  %246 = getelementptr inbounds i8, i8* %66, i64 72
  %247 = bitcast i8* %246 to %"class.spv::Block"**
  store %"class.spv::Block"* %228, %"class.spv::Block"** %247, align 8
  %248 = load i32, i32* %73, align 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %282, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %228, i64 0, i32 5
  %252 = load %"class.spv::Function"*, %"class.spv::Function"** %251, align 8
  %253 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %252, i64 0, i32 1
  %254 = load %"class.spv::Module"*, %"class.spv::Module"** %253, align 8
  %255 = zext i32 %248 to i64
  %256 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %254, i64 0, i32 2
  %257 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %254, i64 0, i32 2, i32 0, i32 1
  %258 = bitcast %"class.spv::Instruction"*** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.std::__1::vector.55"* %256 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = sub i64 %259, %261
  %263 = ashr exact i64 %262, 3
  %264 = icmp ugt i64 %263, %255
  %265 = inttoptr i64 %261 to %"class.spv::Instruction"**
  br i1 %264, label %278, label %266

266:                                              ; preds = %250
  %267 = add i32 %248, 16
  %268 = zext i32 %267 to i64
  %269 = icmp ult i64 %263, %268
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = sub nsw i64 %268, %263
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %256, i64 %271) #17
  %272 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %256, i64 0, i32 0, i32 0
  %273 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %272, align 8
  br label %278

274:                                              ; preds = %266
  %275 = icmp ugt i64 %263, %268
  br i1 %275, label %276, label %278

276:                                              ; preds = %274
  %277 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %265, i64 %268
  store %"class.spv::Instruction"** %277, %"class.spv::Instruction"*** %257, align 8
  br label %278

278:                                              ; preds = %276, %274, %270, %250
  %279 = phi %"class.spv::Instruction"** [ %265, %276 ], [ %265, %274 ], [ %273, %270 ], [ %265, %250 ]
  %280 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %279, i64 %255
  %281 = bitcast %"class.spv::Instruction"** %280 to i8**
  store i8* %66, i8** %281, align 8
  br label %282

282:                                              ; preds = %278, %245
  %283 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %230, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %230, align 8
  %284 = icmp eq %"class.spv::Instruction"* %283, null
  br i1 %284, label %290, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.spv::Instruction"* %283 to void (%"class.spv::Instruction"*)***
  %287 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %287, i64 1
  %289 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %288, align 8
  call void %289(%"class.spv::Instruction"* nonnull %283) #17
  br label %290

290:                                              ; preds = %282, %285
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229)
  %291 = load i32, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #17
  br label %298

292:                                              ; preds = %292, %214
  %293 = phi i64 [ 0, %214 ], [ %296, %292 ]
  %294 = getelementptr inbounds [4 x i32], [4 x i32]* %7, i64 0, i64 %293
  %295 = load i32, i32* %294, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %67, i32 %295)
  %296 = add nuw nsw i64 %293, 1
  %297 = icmp eq i64 %296, %215
  br i1 %297, label %226, label %292

298:                                              ; preds = %290, %62
  %299 = phi i32 [ %64, %62 ], [ %291, %290 ]
  ret i32 %299
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder13promoteScalarENS_10DecorationERjS2_(%"class.spv::Builder"*, i32, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %8 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %7, align 8
  %9 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %6
  %10 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %9, align 8
  %11 = icmp eq %"class.spv::Instruction"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  br label %16

16:                                               ; preds = %12, %4
  %17 = phi i64 [ %15, %12 ], [ 0, %4 ]
  %18 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %17
  %19 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %48 [
    i32 30, label %38
    i32 28, label %27
    i32 24, label %22
    i32 23, label %22
  ]

22:                                               ; preds = %16, %16
  %23 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 1
  %26 = load i32, i32* %25, align 4
  br label %48

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %32
  %34 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %33, align 8
  %35 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %34, i64 0, i32 4, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %36, align 4
  br label %48

38:                                               ; preds = %16
  %39 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4
  %40 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 4, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.26"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %16, %22, %27, %38
  %49 = phi i32 [ %47, %38 ], [ %37, %27 ], [ %26, %22 ], [ 1, %16 ]
  %50 = load i32, i32* %2, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %51
  %53 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %52, align 8
  %54 = icmp eq %"class.spv::Instruction"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %55, %48
  %60 = phi i64 [ %58, %55 ], [ 0, %48 ]
  %61 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %60
  %62 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %61, align 8
  %63 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %91 [
    i32 30, label %81
    i32 28, label %70
    i32 24, label %65
    i32 23, label %65
  ]

65:                                               ; preds = %59, %59
  %66 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 1
  %69 = load i32, i32* %68, align 4
  br label %91

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %75
  %77 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %76, align 8
  %78 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %77, i64 0, i32 4, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = load i32, i32* %79, align 4
  br label %91

81:                                               ; preds = %59
  %82 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4
  %83 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4, i32 0, i32 1
  %84 = bitcast i32** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.26"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = lshr exact i64 %88, 2
  %90 = trunc i64 %89 to i32
  br label %91

91:                                               ; preds = %59, %65, %70, %81
  %92 = phi i32 [ %90, %81 ], [ %80, %70 ], [ %69, %65 ], [ 1, %59 ]
  %93 = sub nsw i32 %49, %92
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %140

95:                                               ; preds = %91
  br i1 %54, label %99, label %96

96:                                               ; preds = %95
  %97 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %95, %96
  %100 = phi i32 [ %98, %96 ], [ 0, %95 ]
  br i1 %11, label %105, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i64
  br label %105

105:                                              ; preds = %101, %99
  %106 = phi i64 [ %104, %101 ], [ 0, %99 ]
  %107 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %106
  %108 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %107, align 8
  %109 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %108, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  switch i32 %110, label %137 [
    i32 30, label %127
    i32 28, label %116
    i32 24, label %111
    i32 23, label %111
  ]

111:                                              ; preds = %105, %105
  %112 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %108, i64 0, i32 4, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 1
  %115 = load i32, i32* %114, align 4
  br label %137

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %108, i64 0, i32 4, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 1
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %121
  %123 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %122, align 8
  %124 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %123, i64 0, i32 4, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = load i32, i32* %125, align 4
  br label %137

127:                                              ; preds = %105
  %128 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %108, i64 0, i32 4
  %129 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %108, i64 0, i32 4, i32 0, i32 1
  %130 = bitcast i32** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector.26"* %128 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = lshr exact i64 %134, 2
  %136 = trunc i64 %135 to i32
  br label %137

137:                                              ; preds = %105, %111, %116, %127
  %138 = phi i32 [ %136, %127 ], [ %126, %116 ], [ %115, %111 ], [ 1, %105 ]
  %139 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %100, i32 %138)
  br label %187

140:                                              ; preds = %91
  %141 = icmp slt i32 %93, 0
  br i1 %141, label %142, label %192

142:                                              ; preds = %140
  br i1 %11, label %146, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 2
  %145 = load i32, i32* %144, align 4
  br label %146

146:                                              ; preds = %142, %143
  %147 = phi i32 [ %145, %143 ], [ 0, %142 ]
  br i1 %54, label %152, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  br label %152

152:                                              ; preds = %148, %146
  %153 = phi i64 [ %151, %148 ], [ 0, %146 ]
  %154 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %153
  %155 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %154, align 8
  %156 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 3
  %157 = load i32, i32* %156, align 8
  switch i32 %157, label %184 [
    i32 30, label %174
    i32 28, label %163
    i32 24, label %158
    i32 23, label %158
  ]

158:                                              ; preds = %152, %152
  %159 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 4, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 1
  %162 = load i32, i32* %161, align 4
  br label %184

163:                                              ; preds = %152
  %164 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 4, i32 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 1
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %168
  %170 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %169, align 8
  %171 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %170, i64 0, i32 4, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  %173 = load i32, i32* %172, align 4
  br label %184

174:                                              ; preds = %152
  %175 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 4
  %176 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %155, i64 0, i32 4, i32 0, i32 1
  %177 = bitcast i32** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::vector.26"* %175 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %178, %180
  %182 = lshr exact i64 %181, 2
  %183 = trunc i64 %182 to i32
  br label %184

184:                                              ; preds = %152, %158, %163, %174
  %185 = phi i32 [ %183, %174 ], [ %173, %163 ], [ %162, %158 ], [ 1, %152 ]
  %186 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %147, i32 %185)
  br label %187

187:                                              ; preds = %137, %184
  %188 = phi i32 [ %186, %184 ], [ %139, %137 ]
  %189 = phi i32 [ %5, %184 ], [ %50, %137 ]
  %190 = phi i32* [ %3, %184 ], [ %2, %137 ]
  %191 = tail call i32 @_ZN3spv7Builder11smearScalarENS_10DecorationEjj(%"class.spv::Builder"* %0, i32 %1, i32 %189, i32 %188)
  store i32 %191, i32* %190, align 4
  br label %192

192:                                              ; preds = %187, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder11smearScalarENS_10DecorationEjj(%"class.spv::Builder"*, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = zext i32 %3 to i64
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %9 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %8, align 8
  %10 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %9, i64 %7
  %11 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %267 [
    i32 30, label %30
    i32 28, label %19
    i32 24, label %14
    i32 23, label %14
  ]

14:                                               ; preds = %4, %4
  %15 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 1
  %18 = load i32, i32* %17, align 4
  br label %40

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %9, i64 %24
  %26 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %26, i64 0, i32 4, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %28, align 4
  br label %40

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4
  %32 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 4, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.26"* %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = lshr exact i64 %37, 2
  %39 = trunc i64 %38 to i32
  br label %40

40:                                               ; preds = %14, %19, %30
  %41 = phi i32 [ %39, %30 ], [ %29, %19 ], [ %18, %14 ]
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %267, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %175, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #17
  %49 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = sext i32 %41 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #17
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %154, label %54

54:                                               ; preds = %47
  %55 = icmp slt i32 %41, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.26"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #20
  unreachable

58:                                               ; preds = %54
  %59 = shl nsw i64 %52, 2
  %60 = tail call i8* @_Znwm(i64 %59) #18
  %61 = bitcast i8* %60 to i32*
  %62 = bitcast i32** %50 to i8**
  store i8* %60, i8** %62, align 8
  %63 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  store i8* %60, i8** %63, align 8
  %64 = getelementptr inbounds i32, i32* %61, i64 %52
  store i32* %64, i32** %51, align 8
  %65 = shl nsw i64 %52, 2
  %66 = add nsw i64 %65, -4
  %67 = lshr exact i64 %66, 2
  %68 = add nuw nsw i64 %67, 1
  %69 = icmp ult i64 %68, 8
  br i1 %69, label %144, label %70

70:                                               ; preds = %58
  %71 = and i64 %68, 9223372036854775800
  %72 = getelementptr i32, i32* %61, i64 %71
  %73 = insertelement <4 x i32> undef, i32 %2, i32 0
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> zeroinitializer
  %75 = insertelement <4 x i32> undef, i32 %2, i32 0
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> zeroinitializer
  %77 = add nsw i64 %71, -8
  %78 = lshr exact i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 7
  %81 = icmp ult i64 %77, 56
  br i1 %81, label %129, label %82

82:                                               ; preds = %70
  %83 = sub nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %126, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %127, %84 ]
  %87 = getelementptr i32, i32* %61, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %88, align 4
  %89 = getelementptr i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %90, align 4
  %91 = or i64 %85, 8
  %92 = getelementptr i32, i32* %61, i64 %91
  %93 = bitcast i32* %92 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %93, align 4
  %94 = getelementptr i32, i32* %92, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %95, align 4
  %96 = or i64 %85, 16
  %97 = getelementptr i32, i32* %61, i64 %96
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %98, align 4
  %99 = getelementptr i32, i32* %97, i64 4
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %100, align 4
  %101 = or i64 %85, 24
  %102 = getelementptr i32, i32* %61, i64 %101
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %103, align 4
  %104 = getelementptr i32, i32* %102, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %105, align 4
  %106 = or i64 %85, 32
  %107 = getelementptr i32, i32* %61, i64 %106
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %108, align 4
  %109 = getelementptr i32, i32* %107, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %110, align 4
  %111 = or i64 %85, 40
  %112 = getelementptr i32, i32* %61, i64 %111
  %113 = bitcast i32* %112 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %113, align 4
  %114 = getelementptr i32, i32* %112, i64 4
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %115, align 4
  %116 = or i64 %85, 48
  %117 = getelementptr i32, i32* %61, i64 %116
  %118 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %118, align 4
  %119 = getelementptr i32, i32* %117, i64 4
  %120 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %120, align 4
  %121 = or i64 %85, 56
  %122 = getelementptr i32, i32* %61, i64 %121
  %123 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %123, align 4
  %124 = getelementptr i32, i32* %122, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %125, align 4
  %126 = add i64 %85, 64
  %127 = add i64 %86, -8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %84, !llvm.loop !52

129:                                              ; preds = %84, %70
  %130 = phi i64 [ 0, %70 ], [ %126, %84 ]
  %131 = icmp eq i64 %80, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %129, %132
  %133 = phi i64 [ %139, %132 ], [ %130, %129 ]
  %134 = phi i64 [ %140, %132 ], [ %80, %129 ]
  %135 = getelementptr i32, i32* %61, i64 %133
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %136, align 4
  %137 = getelementptr i32, i32* %135, i64 4
  %138 = bitcast i32* %137 to <4 x i32>*
  store <4 x i32> %76, <4 x i32>* %138, align 4
  %139 = add i64 %133, 8
  %140 = add i64 %134, -1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %132, !llvm.loop !53

142:                                              ; preds = %132, %129
  %143 = icmp eq i64 %68, %71
  br i1 %143, label %150, label %144

144:                                              ; preds = %142, %58
  %145 = phi i32* [ %61, %58 ], [ %72, %142 ]
  br label %146

146:                                              ; preds = %144, %146
  %147 = phi i32* [ %148, %146 ], [ %145, %144 ]
  store i32 %2, i32* %147, align 4
  %148 = getelementptr inbounds i32, i32* %147, i64 1
  %149 = icmp eq i32* %148, %64
  br i1 %149, label %150, label %146, !llvm.loop !54

150:                                              ; preds = %146, %142
  %151 = bitcast i32** %50 to i64*
  %152 = ptrtoint i32* %64 to i64
  store i64 %152, i64* %151, align 8
  %153 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %8, align 8
  br label %154

154:                                              ; preds = %47, %150
  %155 = phi %"class.spv::Instruction"** [ %9, %47 ], [ %153, %150 ]
  %156 = zext i32 %2 to i64
  %157 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %155, i64 %156
  %158 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %157, align 8
  %159 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %158, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = add i32 %160, -48
  %162 = icmp ult i32 %161, 5
  %163 = call i32 @_ZN3spv7Builder21makeCompositeConstantEjRKNSt3__16vectorIjNS1_9allocatorIjEEEEb(%"class.spv::Builder"* %0, i32 %3, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6, i1 zeroext %162)
  %164 = zext i32 %163 to i64
  %165 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %8, align 8
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %165, i64 %164
  %167 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %166, align 8
  %168 = load i32*, i32** %49, align 8
  %169 = icmp eq i32* %168, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %154
  %171 = ptrtoint i32* %168 to i64
  %172 = bitcast i32** %50 to i64*
  store i64 %171, i64* %172, align 8
  %173 = bitcast i32* %168 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  br label %174

174:                                              ; preds = %154, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #17
  br label %259

175:                                              ; preds = %43
  %176 = tail call i8* @_Znwm(i64 80) #18
  %177 = bitcast i8* %176 to %"class.spv::Instruction"*
  %178 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %179 = load i32, i32* %178, align 8
  %180 = add i32 %179, 1
  store i32 %180, i32* %178, align 8
  %181 = bitcast i8* %176 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %181, align 8
  %182 = getelementptr inbounds i8, i8* %176, i64 8
  %183 = bitcast i8* %182 to i32*
  store i32 %180, i32* %183, align 8
  %184 = getelementptr inbounds i8, i8* %176, i64 12
  %185 = bitcast i8* %184 to i32*
  store i32 %3, i32* %185, align 4
  %186 = getelementptr inbounds i8, i8* %176, i64 16
  %187 = bitcast i8* %186 to i32*
  store i32 80, i32* %187, align 8
  %188 = getelementptr inbounds i8, i8* %176, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 56, i1 false) #17
  %189 = icmp sgt i32 %41, 0
  br i1 %189, label %255, label %190

190:                                              ; preds = %255, %175
  %191 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %192 = load %"class.spv::Block"*, %"class.spv::Block"** %191, align 8
  %193 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193)
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %176, i8** %195, align 8
  %196 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %192, i64 0, i32 1, i32 0, i32 1
  %197 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %196, align 8
  %198 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %192, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %199 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %198, align 8
  %200 = icmp ult %"class.std::__1::unique_ptr"* %197, %199
  br i1 %200, label %201, label %207

201:                                              ; preds = %190
  %202 = ptrtoint i8* %176 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %194, align 8
  %203 = bitcast %"class.std::__1::unique_ptr"* %197 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 1
  %205 = ptrtoint %"class.std::__1::unique_ptr"* %204 to i64
  %206 = bitcast %"class.std::__1::unique_ptr"** %196 to i64*
  store i64 %205, i64* %206, align 8
  br label %209

207:                                              ; preds = %190
  %208 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %192, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %208, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %209

209:                                              ; preds = %207, %201
  %210 = getelementptr inbounds i8, i8* %176, i64 72
  %211 = bitcast i8* %210 to %"class.spv::Block"**
  store %"class.spv::Block"* %192, %"class.spv::Block"** %211, align 8
  %212 = load i32, i32* %183, align 8
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %246, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %192, i64 0, i32 5
  %216 = load %"class.spv::Function"*, %"class.spv::Function"** %215, align 8
  %217 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %216, i64 0, i32 1
  %218 = load %"class.spv::Module"*, %"class.spv::Module"** %217, align 8
  %219 = zext i32 %212 to i64
  %220 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %218, i64 0, i32 2
  %221 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %218, i64 0, i32 2, i32 0, i32 1
  %222 = bitcast %"class.spv::Instruction"*** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.std::__1::vector.55"* %220 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = sub i64 %223, %225
  %227 = ashr exact i64 %226, 3
  %228 = icmp ugt i64 %227, %219
  %229 = inttoptr i64 %225 to %"class.spv::Instruction"**
  br i1 %228, label %242, label %230

230:                                              ; preds = %214
  %231 = add i32 %212, 16
  %232 = zext i32 %231 to i64
  %233 = icmp ult i64 %227, %232
  br i1 %233, label %234, label %238

234:                                              ; preds = %230
  %235 = sub nsw i64 %232, %227
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %220, i64 %235) #17
  %236 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %220, i64 0, i32 0, i32 0
  %237 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %236, align 8
  br label %242

238:                                              ; preds = %230
  %239 = icmp ugt i64 %227, %232
  br i1 %239, label %240, label %242

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %229, i64 %232
  store %"class.spv::Instruction"** %241, %"class.spv::Instruction"*** %221, align 8
  br label %242

242:                                              ; preds = %240, %238, %234, %214
  %243 = phi %"class.spv::Instruction"** [ %229, %240 ], [ %229, %238 ], [ %237, %234 ], [ %229, %214 ]
  %244 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %243, i64 %219
  %245 = bitcast %"class.spv::Instruction"** %244 to i8**
  store i8* %176, i8** %245, align 8
  br label %246

246:                                              ; preds = %242, %209
  %247 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %194, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %194, align 8
  %248 = icmp eq %"class.spv::Instruction"* %247, null
  br i1 %248, label %254, label %249

249:                                              ; preds = %246
  %250 = bitcast %"class.spv::Instruction"* %247 to void (%"class.spv::Instruction"*)***
  %251 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %250, align 8
  %252 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %251, i64 1
  %253 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %252, align 8
  call void %253(%"class.spv::Instruction"* nonnull %247) #17
  br label %254

254:                                              ; preds = %246, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193)
  br label %259

255:                                              ; preds = %175, %255
  %256 = phi i32 [ %257, %255 ], [ 0, %175 ]
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %177, i32 %2)
  %257 = add nuw nsw i32 %256, 1
  %258 = icmp eq i32 %257, %41
  br i1 %258, label %190, label %255

259:                                              ; preds = %254, %174
  %260 = phi %"class.spv::Instruction"* [ %167, %174 ], [ %177, %254 ]
  %261 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %260, i64 0, i32 1
  %262 = load i32, i32* %261, align 8
  %263 = icmp ne i32 %1, 2147483647
  %264 = icmp ne i32 %262, 0
  %265 = and i1 %263, %264
  br i1 %265, label %266, label %267

266:                                              ; preds = %259
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %262, i32 %1, i32 -1) #17
  br label %267

267:                                              ; preds = %4, %266, %259, %40
  %268 = phi i32 [ %2, %40 ], [ %262, %259 ], [ %262, %266 ], [ %2, %4 ]
  ret i32 %268
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17createBuiltinCallEjjiRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* nocapture, i32, i32, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %1, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 12, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %2)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %3)
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.26"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = lshr exact i64 %25, 2
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %95, %5
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %31 = load %"class.spv::Block"*, %"class.spv::Block"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %7, i8** %34, align 8
  %35 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 1, i32 0, i32 1
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %37, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr"* %36, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %29
  %41 = ptrtoint i8* %7 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %42 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 1
  %44 = ptrtoint %"class.std::__1::unique_ptr"* %43 to i64
  %45 = bitcast %"class.std::__1::unique_ptr"** %35 to i64*
  store i64 %44, i64* %45, align 8
  br label %48

46:                                               ; preds = %29
  %47 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %47, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %48

48:                                               ; preds = %46, %40
  %49 = getelementptr inbounds i8, i8* %7, i64 72
  %50 = bitcast i8* %49 to %"class.spv::Block"**
  store %"class.spv::Block"* %31, %"class.spv::Block"** %50, align 8
  %51 = load i32, i32* %14, align 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %85, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %31, i64 0, i32 5
  %55 = load %"class.spv::Function"*, %"class.spv::Function"** %54, align 8
  %56 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %55, i64 0, i32 1
  %57 = load %"class.spv::Module"*, %"class.spv::Module"** %56, align 8
  %58 = zext i32 %51 to i64
  %59 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %57, i64 0, i32 2
  %60 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %57, i64 0, i32 2, i32 0, i32 1
  %61 = bitcast %"class.spv::Instruction"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.55"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ugt i64 %66, %58
  %68 = inttoptr i64 %64 to %"class.spv::Instruction"**
  br i1 %67, label %81, label %69

69:                                               ; preds = %53
  %70 = add i32 %51, 16
  %71 = zext i32 %70 to i64
  %72 = icmp ult i64 %66, %71
  br i1 %72, label %73, label %77

73:                                               ; preds = %69
  %74 = sub nsw i64 %71, %66
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %59, i64 %74) #17
  %75 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %59, i64 0, i32 0, i32 0
  %76 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %75, align 8
  br label %81

77:                                               ; preds = %69
  %78 = icmp ugt i64 %66, %71
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, i64 %71
  store %"class.spv::Instruction"** %80, %"class.spv::Instruction"*** %60, align 8
  br label %81

81:                                               ; preds = %79, %77, %73, %53
  %82 = phi %"class.spv::Instruction"** [ %68, %79 ], [ %68, %77 ], [ %76, %73 ], [ %68, %53 ]
  %83 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %82, i64 %58
  %84 = bitcast %"class.spv::Instruction"** %83 to i8**
  store i8* %7, i8** %84, align 8
  br label %85

85:                                               ; preds = %81, %48
  %86 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %33, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %33, align 8
  %87 = icmp eq %"class.spv::Instruction"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.spv::Instruction"* %86 to void (%"class.spv::Instruction"*)***
  %90 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %90, i64 1
  %92 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %91, align 8
  call void %92(%"class.spv::Instruction"* nonnull %86) #17
  br label %93

93:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %94 = load i32, i32* %14, align 8
  ret i32 %94

95:                                               ; preds = %5, %95
  %96 = phi i64 [ %103, %95 ], [ %24, %5 ]
  %97 = phi i64 [ %101, %95 ], [ 0, %5 ]
  %98 = inttoptr i64 %96 to i32*
  %99 = getelementptr inbounds i32, i32* %98, i64 %97
  %100 = load i32, i32* %99, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %100)
  %101 = add nuw nsw i64 %97, 1
  %102 = load i64, i64* %21, align 8
  %103 = load i64, i64* %23, align 8
  %104 = sub i64 %102, %103
  %105 = shl i64 %104, 30
  %106 = ashr i64 %105, 32
  %107 = icmp slt i64 %101, %106
  br i1 %107, label %95, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17createTextureCallENS_10DecorationEjbbbbbRKNS0_17TextureParametersENS_17ImageOperandsMaskE(%"class.spv::Builder"*, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %"struct.spv::Builder::TextureParameters"* nocapture readonly dereferenceable(64), i32) local_unnamed_addr #1 align 2 {
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca [10 x i32], align 16
  %13 = bitcast [10 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 40, i1 false)
  %14 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 0
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 1
  store i32 %18, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 2
  store i32 %21, i32* %24, align 8
  br label %25

25:                                               ; preds = %10, %23
  %26 = phi i32 [ 3, %23 ], [ 2, %10 ]
  %27 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 10
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = add nuw nsw i32 %26, 1
  %32 = zext i32 %26 to i64
  %33 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %32
  store i32 %28, i32* %33, align 4
  br label %34

34:                                               ; preds = %25, %30
  %35 = phi i32 [ %31, %30 ], [ %26, %25 ]
  %36 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 13
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = add nuw nsw i32 %35, 1
  %41 = sext i32 %35 to i64
  %42 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %41
  store i32 %37, i32* %42, align 4
  br label %43

43:                                               ; preds = %34, %39
  %44 = phi i32 [ %40, %39 ], [ %35, %34 ]
  %45 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 14
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %43
  %49 = add nuw nsw i32 %44, 1
  %50 = sext i32 %44 to i64
  %51 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %50
  store i32 %46, i32* %51, align 4
  br label %52

52:                                               ; preds = %43, %48
  %53 = phi i32 [ %49, %48 ], [ %44, %43 ]
  %54 = add nuw nsw i32 %53, 1
  %55 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = add nuw nsw i32 %53, 2
  %60 = sext i32 %54 to i64
  %61 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %60
  store i32 %56, i32* %61, align 4
  br label %62

62:                                               ; preds = %52, %58
  %63 = phi i32 [ %59, %58 ], [ %54, %52 ]
  %64 = phi i32 [ 1, %58 ], [ 0, %52 ]
  %65 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  %69 = or i32 %64, 2
  br label %88

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 7
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %70
  %75 = or i32 %64, 4
  %76 = add nuw nsw i32 %63, 1
  %77 = sext i32 %63 to i64
  %78 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %77
  store i32 %72, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 8
  %80 = load i32, i32* %79, align 4
  br label %88

81:                                               ; preds = %70
  %82 = xor i1 %7, true
  %83 = or i1 %82, %4
  %84 = or i1 %83, %6
  br i1 %84, label %96, label %85

85:                                               ; preds = %81
  %86 = or i32 %64, 2
  %87 = tail call i32 @_ZN3spv7Builder17makeFloatConstantEfb(%"class.spv::Builder"* %0, float 0.000000e+00, i1 zeroext false)
  br label %88

88:                                               ; preds = %68, %85, %74
  %89 = phi i32 [ 2, %74 ], [ 1, %85 ], [ 1, %68 ]
  %90 = phi i32 [ %76, %74 ], [ %63, %85 ], [ %63, %68 ]
  %91 = phi i32 [ %80, %74 ], [ %87, %85 ], [ %66, %68 ]
  %92 = phi i32 [ %75, %74 ], [ %86, %85 ], [ %69, %68 ]
  %93 = add nuw nsw i32 %63, %89
  %94 = sext i32 %90 to i64
  %95 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %94
  store i32 %91, i32* %95, align 4
  br label %96

96:                                               ; preds = %88, %81
  %97 = phi i32 [ %63, %81 ], [ %93, %88 ]
  %98 = phi i1 [ false, %81 ], [ true, %88 ]
  %99 = phi i32 [ %64, %81 ], [ %92, %88 ]
  %100 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 5
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %185, label %103

103:                                              ; preds = %96
  %104 = zext i32 %101 to i64
  %105 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %106 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %105, align 8
  %107 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %106, i64 %104
  %108 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %107, align 8
  %109 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %108, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  switch i32 %110, label %111 [
    i32 1, label %178
    i32 41, label %178
    i32 42, label %178
    i32 43, label %178
    i32 44, label %178
    i32 45, label %178
    i32 46, label %178
    i32 48, label %178
    i32 49, label %178
    i32 50, label %178
    i32 51, label %178
    i32 52, label %178
  ]

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %113 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %114 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::__tree_node"**
  %115 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node"* %115, null
  br i1 %116, label %145, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %119

119:                                              ; preds = %141, %117
  %120 = phi %"class.std::__1::__tree_node"* [ %144, %141 ], [ %115, %117 ]
  %121 = phi %"class.std::__1::__tree_node_base"** [ %143, %141 ], [ %118, %117 ]
  %122 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp sgt i32 %123, 25
  br i1 %124, label %125, label %131

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %129, label %141

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 0, i32 0
  br label %147

131:                                              ; preds = %119
  %132 = icmp eq i32 %123, 25
  br i1 %132, label %139, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 0, i32 1
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %137, label %141

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 0, i32 0
  br label %147

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %120, i64 0, i32 0, i32 0
  br label %147

141:                                              ; preds = %133, %125
  %142 = phi %"class.std::__1::__tree_node_base"* [ %127, %125 ], [ %135, %133 ]
  %143 = phi %"class.std::__1::__tree_node_base"** [ %126, %125 ], [ %134, %133 ]
  %144 = bitcast %"class.std::__1::__tree_node_base"* %142 to %"class.std::__1::__tree_node"*
  br label %119

145:                                              ; preds = %111
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  br label %147

147:                                              ; preds = %145, %139, %137, %129
  %148 = phi %"class.std::__1::__tree_end_node"* [ %113, %145 ], [ %130, %129 ], [ %138, %137 ], [ %140, %139 ]
  %149 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %126, %129 ], [ %134, %137 ], [ %121, %139 ]
  %150 = bitcast %"class.std::__1::__tree_node_base"** %149 to %"class.std::__1::__tree_node"**
  %151 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node"* %151, null
  br i1 %152, label %153, label %178

153:                                              ; preds = %147
  %154 = tail call i8* @_Znwm(i64 32) #18, !noalias !55
  %155 = getelementptr inbounds i8, i8* %154, i64 28
  %156 = bitcast i8* %155 to i32*
  store i32 25, i32* %156, align 4, !noalias !55
  %157 = bitcast i8* %154 to %"class.std::__1::__tree_node_base"*
  %158 = getelementptr inbounds i8, i8* %154, i64 16
  %159 = bitcast i8* %158 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %159, align 8
  %160 = bitcast %"class.std::__1::__tree_node_base"** %149 to i8**
  store i8* %154, i8** %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %112, i64 0, i32 0, i32 0
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, null
  br i1 %165, label %170, label %166

166:                                              ; preds = %153
  %167 = ptrtoint %"class.std::__1::__tree_node_base"* %164 to i64
  %168 = bitcast %"class.std::__1::set.14"* %112 to i64*
  store i64 %167, i64* %168, align 8
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  br label %170

170:                                              ; preds = %166, %153
  %171 = phi %"class.std::__1::__tree_node_base"* [ %157, %153 ], [ %169, %166 ]
  %172 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %172, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %173, %"class.std::__1::__tree_node_base"* %171) #17
  %174 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = add i64 %175, 1
  store i64 %176, i64* %174, align 8
  %177 = load i32, i32* %100, align 4
  br label %178

178:                                              ; preds = %170, %147, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103, %103
  %179 = phi i32 [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 8, %103 ], [ 16, %147 ], [ 16, %170 ]
  %180 = phi i32 [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %103 ], [ %101, %147 ], [ %177, %170 ]
  %181 = or i32 %99, %179
  %182 = add nsw i32 %97, 1
  %183 = sext i32 %97 to i64
  %184 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %183
  store i32 %180, i32* %184, align 4
  br label %185

185:                                              ; preds = %96, %178
  %186 = phi i32 [ %182, %178 ], [ %97, %96 ]
  %187 = phi i32 [ %181, %178 ], [ %99, %96 ]
  %188 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 6
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %264, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %193 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %194 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.std::__1::__tree_node"**
  %195 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %194, align 8
  %196 = icmp eq %"class.std::__1::__tree_node"* %195, null
  br i1 %196, label %225, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %199

199:                                              ; preds = %221, %197
  %200 = phi %"class.std::__1::__tree_node"* [ %224, %221 ], [ %195, %197 ]
  %201 = phi %"class.std::__1::__tree_node_base"** [ %223, %221 ], [ %198, %197 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %200, i64 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, 25
  br i1 %204, label %205, label %211

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %200, i64 0, i32 0, i32 0, i32 0
  %207 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  %208 = icmp eq %"class.std::__1::__tree_node_base"* %207, null
  br i1 %208, label %209, label %221

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %200, i64 0, i32 0, i32 0
  br label %227

211:                                              ; preds = %199
  %212 = icmp eq i32 %203, 25
  br i1 %212, label %219, label %213

213:                                              ; preds = %211
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %200, i64 0, i32 0, i32 1
  %215 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %214, align 8
  %216 = icmp eq %"class.std::__1::__tree_node_base"* %215, null
  br i1 %216, label %217, label %221

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %200, i64 0, i32 0, i32 0
  br label %227

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %200, i64 0, i32 0, i32 0
  br label %227

221:                                              ; preds = %213, %205
  %222 = phi %"class.std::__1::__tree_node_base"* [ %207, %205 ], [ %215, %213 ]
  %223 = phi %"class.std::__1::__tree_node_base"** [ %206, %205 ], [ %214, %213 ]
  %224 = bitcast %"class.std::__1::__tree_node_base"* %222 to %"class.std::__1::__tree_node"*
  br label %199

225:                                              ; preds = %191
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 0, i32 0
  br label %227

227:                                              ; preds = %225, %219, %217, %209
  %228 = phi %"class.std::__1::__tree_end_node"* [ %193, %225 ], [ %210, %209 ], [ %218, %217 ], [ %220, %219 ]
  %229 = phi %"class.std::__1::__tree_node_base"** [ %226, %225 ], [ %206, %209 ], [ %214, %217 ], [ %201, %219 ]
  %230 = bitcast %"class.std::__1::__tree_node_base"** %229 to %"class.std::__1::__tree_node"**
  %231 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %230, align 8
  %232 = icmp eq %"class.std::__1::__tree_node"* %231, null
  br i1 %232, label %233, label %258

233:                                              ; preds = %227
  %234 = tail call i8* @_Znwm(i64 32) #18, !noalias !58
  %235 = getelementptr inbounds i8, i8* %234, i64 28
  %236 = bitcast i8* %235 to i32*
  store i32 25, i32* %236, align 4, !noalias !58
  %237 = bitcast i8* %234 to %"class.std::__1::__tree_node_base"*
  %238 = getelementptr inbounds i8, i8* %234, i64 16
  %239 = bitcast i8* %238 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %228, %"class.std::__1::__tree_end_node"** %239, align 8
  %240 = bitcast %"class.std::__1::__tree_node_base"** %229 to i8**
  store i8* %234, i8** %240, align 8
  %241 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %192, i64 0, i32 0, i32 0
  %242 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %241, align 8
  %243 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %242, i64 0, i32 0
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %243, align 8
  %245 = icmp eq %"class.std::__1::__tree_node_base"* %244, null
  br i1 %245, label %250, label %246

246:                                              ; preds = %233
  %247 = ptrtoint %"class.std::__1::__tree_node_base"* %244 to i64
  %248 = bitcast %"class.std::__1::set.14"* %192 to i64*
  store i64 %247, i64* %248, align 8
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %229, align 8
  br label %250

250:                                              ; preds = %246, %233
  %251 = phi %"class.std::__1::__tree_node_base"* [ %237, %233 ], [ %249, %246 ]
  %252 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %253, %"class.std::__1::__tree_node_base"* %251) #17
  %254 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %255 = load i64, i64* %254, align 8
  %256 = add i64 %255, 1
  store i64 %256, i64* %254, align 8
  %257 = load i32, i32* %188, align 4
  br label %258

258:                                              ; preds = %227, %250
  %259 = phi i32 [ %189, %227 ], [ %257, %250 ]
  %260 = or i32 %187, 32
  %261 = add nsw i32 %186, 1
  %262 = sext i32 %186 to i64
  %263 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %262
  store i32 %259, i32* %263, align 4
  br label %264

264:                                              ; preds = %185, %258
  %265 = phi i32 [ %261, %258 ], [ %186, %185 ]
  %266 = phi i32 [ %260, %258 ], [ %187, %185 ]
  %267 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 9
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %264
  %271 = or i32 %266, 64
  %272 = add nsw i32 %265, 1
  %273 = sext i32 %265 to i64
  %274 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %273
  store i32 %268, i32* %274, align 4
  br label %275

275:                                              ; preds = %264, %270
  %276 = phi i32 [ %272, %270 ], [ %265, %264 ]
  %277 = phi i32 [ %271, %270 ], [ %266, %264 ]
  %278 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 12
  %279 = load i32, i32* %278, align 4
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %354, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %283 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %284 = bitcast %"class.std::__1::__tree_end_node"* %283 to %"class.std::__1::__tree_node"**
  %285 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node"* %285, null
  br i1 %286, label %315, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %289

289:                                              ; preds = %311, %287
  %290 = phi %"class.std::__1::__tree_node"* [ %314, %311 ], [ %285, %287 ]
  %291 = phi %"class.std::__1::__tree_node_base"** [ %313, %311 ], [ %288, %287 ]
  %292 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %290, i64 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = icmp sgt i32 %293, 42
  br i1 %294, label %295, label %301

295:                                              ; preds = %289
  %296 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %290, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = icmp eq %"class.std::__1::__tree_node_base"* %297, null
  br i1 %298, label %299, label %311

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %290, i64 0, i32 0, i32 0
  br label %317

301:                                              ; preds = %289
  %302 = icmp eq i32 %293, 42
  br i1 %302, label %309, label %303

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %290, i64 0, i32 0, i32 1
  %305 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %304, align 8
  %306 = icmp eq %"class.std::__1::__tree_node_base"* %305, null
  br i1 %306, label %307, label %311

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %290, i64 0, i32 0, i32 0
  br label %317

309:                                              ; preds = %301
  %310 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %290, i64 0, i32 0, i32 0
  br label %317

311:                                              ; preds = %303, %295
  %312 = phi %"class.std::__1::__tree_node_base"* [ %297, %295 ], [ %305, %303 ]
  %313 = phi %"class.std::__1::__tree_node_base"** [ %296, %295 ], [ %304, %303 ]
  %314 = bitcast %"class.std::__1::__tree_node_base"* %312 to %"class.std::__1::__tree_node"*
  br label %289

315:                                              ; preds = %281
  %316 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 0, i32 0
  br label %317

317:                                              ; preds = %315, %309, %307, %299
  %318 = phi %"class.std::__1::__tree_end_node"* [ %283, %315 ], [ %300, %299 ], [ %308, %307 ], [ %310, %309 ]
  %319 = phi %"class.std::__1::__tree_node_base"** [ %316, %315 ], [ %296, %299 ], [ %304, %307 ], [ %291, %309 ]
  %320 = bitcast %"class.std::__1::__tree_node_base"** %319 to %"class.std::__1::__tree_node"**
  %321 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %320, align 8
  %322 = icmp eq %"class.std::__1::__tree_node"* %321, null
  br i1 %322, label %323, label %348

323:                                              ; preds = %317
  %324 = tail call i8* @_Znwm(i64 32) #18, !noalias !61
  %325 = getelementptr inbounds i8, i8* %324, i64 28
  %326 = bitcast i8* %325 to i32*
  store i32 42, i32* %326, align 4, !noalias !61
  %327 = bitcast i8* %324 to %"class.std::__1::__tree_node_base"*
  %328 = getelementptr inbounds i8, i8* %324, i64 16
  %329 = bitcast i8* %328 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %324, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %318, %"class.std::__1::__tree_end_node"** %329, align 8
  %330 = bitcast %"class.std::__1::__tree_node_base"** %319 to i8**
  store i8* %324, i8** %330, align 8
  %331 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %282, i64 0, i32 0, i32 0
  %332 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %332, i64 0, i32 0
  %334 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %333, align 8
  %335 = icmp eq %"class.std::__1::__tree_node_base"* %334, null
  br i1 %335, label %340, label %336

336:                                              ; preds = %323
  %337 = ptrtoint %"class.std::__1::__tree_node_base"* %334 to i64
  %338 = bitcast %"class.std::__1::set.14"* %282 to i64*
  store i64 %337, i64* %338, align 8
  %339 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  br label %340

340:                                              ; preds = %336, %323
  %341 = phi %"class.std::__1::__tree_node_base"* [ %327, %323 ], [ %339, %336 ]
  %342 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %343 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %342, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %343, %"class.std::__1::__tree_node_base"* %341) #17
  %344 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = add i64 %345, 1
  store i64 %346, i64* %344, align 8
  %347 = load i32, i32* %278, align 4
  br label %348

348:                                              ; preds = %317, %340
  %349 = phi i32 [ %279, %317 ], [ %347, %340 ]
  %350 = or i32 %277, 128
  %351 = add nsw i32 %276, 1
  %352 = sext i32 %276 to i64
  %353 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %352
  store i32 %349, i32* %353, align 4
  br label %354

354:                                              ; preds = %275, %348
  %355 = phi i32 [ %351, %348 ], [ %276, %275 ]
  %356 = phi i32 [ %350, %348 ], [ %277, %275 ]
  %357 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 15
  %358 = load i8, i8* %357, align 4, !range !2
  %359 = icmp eq i8 %358, 0
  %360 = or i32 %356, 1024
  %361 = select i1 %359, i32 %356, i32 %360
  %362 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 16
  %363 = load i8, i8* %362, align 1, !range !2
  %364 = icmp eq i8 %363, 0
  %365 = or i32 %361, 2048
  %366 = select i1 %364, i32 %361, i32 %365
  %367 = or i32 %366, %9
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %354
  %370 = add nsw i32 %355, -1
  br label %374

371:                                              ; preds = %354
  %372 = sext i32 %53 to i64
  %373 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %372
  store i32 %367, i32* %373, align 4
  br label %374

374:                                              ; preds = %371, %369
  %375 = phi i32 [ %370, %369 ], [ %355, %371 ]
  br i1 %4, label %376, label %378

376:                                              ; preds = %374
  %377 = select i1 %3, i32 313, i32 95
  br label %416

378:                                              ; preds = %374
  %379 = load i32, i32* %36, align 4
  %380 = icmp eq i32 %379, 0
  %381 = load i32, i32* %45, align 4
  %382 = icmp eq i32 %381, 0
  %383 = or i1 %380, %382
  br i1 %383, label %384, label %416

384:                                              ; preds = %378
  %385 = load i32, i32* %20, align 4
  br i1 %6, label %386, label %392

386:                                              ; preds = %384
  %387 = icmp eq i32 %385, 0
  br i1 %387, label %390, label %388

388:                                              ; preds = %386
  %389 = select i1 %3, i32 315, i32 97
  br label %416

390:                                              ; preds = %386
  %391 = select i1 %3, i32 314, i32 96
  br label %416

392:                                              ; preds = %384
  %393 = icmp ne i32 %385, 0
  br i1 %98, label %394, label %405

394:                                              ; preds = %392
  br i1 %393, label %395, label %400

395:                                              ; preds = %394
  br i1 %5, label %396, label %398

396:                                              ; preds = %395
  %397 = select i1 %3, i32 312, i32 94
  br label %416

398:                                              ; preds = %395
  %399 = select i1 %3, i32 308, i32 90
  br label %416

400:                                              ; preds = %394
  br i1 %5, label %401, label %403

401:                                              ; preds = %400
  %402 = select i1 %3, i32 310, i32 92
  br label %416

403:                                              ; preds = %400
  %404 = select i1 %3, i32 306, i32 88
  br label %416

405:                                              ; preds = %392
  br i1 %393, label %406, label %411

406:                                              ; preds = %405
  br i1 %5, label %407, label %409

407:                                              ; preds = %406
  %408 = select i1 %3, i32 311, i32 93
  br label %416

409:                                              ; preds = %406
  %410 = select i1 %3, i32 307, i32 89
  br label %416

411:                                              ; preds = %405
  br i1 %5, label %412, label %414

412:                                              ; preds = %411
  %413 = select i1 %3, i32 309, i32 91
  br label %416

414:                                              ; preds = %411
  %415 = select i1 %3, i32 305, i32 87
  br label %416

416:                                              ; preds = %414, %412, %409, %407, %403, %401, %398, %396, %390, %388, %378, %376
  %417 = phi i32 [ %377, %376 ], [ 5283, %378 ], [ %389, %388 ], [ %391, %390 ], [ %397, %396 ], [ %399, %398 ], [ %402, %401 ], [ %404, %403 ], [ %408, %407 ], [ %410, %409 ], [ %413, %412 ], [ %415, %414 ]
  %418 = zext i32 %2 to i64
  %419 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %420 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %419, align 8
  %421 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %420, i64 %418
  %422 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %421, align 8
  %423 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %422, i64 0, i32 3
  %424 = load i32, i32* %423, align 8
  %425 = add i32 %424, -20
  %426 = icmp ult i32 %425, 3
  br i1 %426, label %450, label %427

427:                                              ; preds = %416
  switch i32 %417, label %450 [
    i32 89, label %428
    i32 90, label %428
    i32 93, label %428
    i32 94, label %428
  ]

428:                                              ; preds = %427, %427, %427, %427
  br label %429

429:                                              ; preds = %428, %442
  %430 = phi i32 [ %449, %442 ], [ %424, %428 ]
  %431 = phi %"class.spv::Instruction"* [ %447, %442 ], [ %422, %428 ]
  switch i32 %430, label %450 [
    i32 19, label %432
    i32 20, label %432
    i32 21, label %432
    i32 22, label %432
    i32 30, label %432
    i32 23, label %435
    i32 24, label %435
    i32 28, label %435
    i32 29, label %435
    i32 32, label %438
  ]

432:                                              ; preds = %429, %429, %429, %429, %429
  %433 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %431, i64 0, i32 1
  %434 = load i32, i32* %433, align 8
  br label %450

435:                                              ; preds = %429, %429, %429, %429
  %436 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %431, i64 0, i32 4, i32 0, i32 0
  %437 = load i32*, i32** %436, align 8
  br label %442

438:                                              ; preds = %429
  %439 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %431, i64 0, i32 4, i32 0, i32 0
  %440 = load i32*, i32** %439, align 8
  %441 = getelementptr inbounds i32, i32* %440, i64 1
  br label %442

442:                                              ; preds = %438, %435
  %443 = phi i32* [ %441, %438 ], [ %437, %435 ]
  %444 = load i32, i32* %443, align 4
  %445 = zext i32 %444 to i64
  %446 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %420, i64 %445
  %447 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %446, align 8
  %448 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %447, i64 0, i32 3
  %449 = load i32, i32* %448, align 8
  br label %429

450:                                              ; preds = %429, %432, %427, %416
  %451 = phi i32 [ %2, %416 ], [ %2, %427 ], [ %434, %432 ], [ 0, %429 ]
  br i1 %3, label %452, label %472

452:                                              ; preds = %450
  %453 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 11
  %454 = load i32, i32* %453, align 4
  %455 = zext i32 %454 to i64
  %456 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %420, i64 %455
  %457 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %456, align 8
  %458 = icmp eq %"class.spv::Instruction"* %457, null
  br i1 %458, label %463, label %459

459:                                              ; preds = %452
  %460 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %457, i64 0, i32 2
  %461 = load i32, i32* %460, align 4
  %462 = zext i32 %461 to i64
  br label %463

463:                                              ; preds = %452, %459
  %464 = phi i64 [ %462, %459 ], [ 0, %452 ]
  %465 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %420, i64 %464
  %466 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %465, align 8
  %467 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %466, i64 0, i32 4, i32 0, i32 0
  %468 = load i32*, i32** %467, align 8
  %469 = getelementptr inbounds i32, i32* %468, i64 1
  %470 = load i32, i32* %469, align 4
  %471 = tail call i32 @_ZN3spv7Builder20makeStructResultTypeEjj(%"class.spv::Builder"* %0, i32 %451, i32 %470)
  br label %472

472:                                              ; preds = %463, %450
  %473 = phi i32 [ %471, %463 ], [ %451, %450 ]
  %474 = phi i32 [ %451, %463 ], [ 0, %450 ]
  %475 = phi i32 [ %470, %463 ], [ 0, %450 ]
  %476 = tail call i8* @_Znwm(i64 80) #18
  %477 = bitcast i8* %476 to %"class.spv::Instruction"*
  %478 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %479 = load i32, i32* %478, align 8
  %480 = add i32 %479, 1
  store i32 %480, i32* %478, align 8
  %481 = bitcast i8* %476 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %481, align 8
  %482 = getelementptr inbounds i8, i8* %476, i64 8
  %483 = bitcast i8* %482 to i32*
  store i32 %480, i32* %483, align 8
  %484 = getelementptr inbounds i8, i8* %476, i64 12
  %485 = bitcast i8* %484 to i32*
  store i32 %473, i32* %485, align 4
  %486 = getelementptr inbounds i8, i8* %476, i64 16
  %487 = bitcast i8* %486 to i32*
  store i32 %417, i32* %487, align 8
  %488 = getelementptr inbounds i8, i8* %476, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %488, i8 0, i64 56, i1 false) #17
  %489 = icmp sgt i32 %53, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %472
  %491 = zext i32 %53 to i64
  br label %494

492:                                              ; preds = %494, %472
  %493 = icmp slt i32 %53, %375
  br i1 %493, label %500, label %504

494:                                              ; preds = %494, %490
  %495 = phi i64 [ 0, %490 ], [ %498, %494 ]
  %496 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %495
  %497 = load i32, i32* %496, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %477, i32 %497)
  %498 = add nuw nsw i64 %495, 1
  %499 = icmp eq i64 %498, %491
  br i1 %499, label %492, label %494

500:                                              ; preds = %492
  %501 = sext i32 %53 to i64
  %502 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %501
  %503 = load i32, i32* %502, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %477, i32 %503)
  br label %504

504:                                              ; preds = %500, %492
  %505 = icmp slt i32 %54, %375
  br i1 %505, label %506, label %510

506:                                              ; preds = %504
  %507 = zext i32 %53 to i64
  %508 = add nuw nsw i64 %507, 1
  %509 = zext i32 %375 to i64
  br label %582

510:                                              ; preds = %582, %504
  %511 = load i32, i32* %483, align 8
  %512 = icmp ne i32 %1, 2147483647
  %513 = icmp ne i32 %511, 0
  %514 = and i1 %512, %513
  br i1 %514, label %515, label %516

515:                                              ; preds = %510
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %511, i32 %1, i32 -1) #17
  br label %516

516:                                              ; preds = %510, %515
  %517 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %518 = load %"class.spv::Block"*, %"class.spv::Block"** %517, align 8
  %519 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %519)
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %521 = bitcast %"class.std::__1::unique_ptr"* %11 to i8**
  store i8* %476, i8** %521, align 8
  %522 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %518, i64 0, i32 1, i32 0, i32 1
  %523 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %522, align 8
  %524 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %518, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %525 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %524, align 8
  %526 = icmp ult %"class.std::__1::unique_ptr"* %523, %525
  br i1 %526, label %527, label %533

527:                                              ; preds = %516
  %528 = ptrtoint i8* %476 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %520, align 8
  %529 = bitcast %"class.std::__1::unique_ptr"* %523 to i64*
  store i64 %528, i64* %529, align 8
  %530 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %523, i64 1
  %531 = ptrtoint %"class.std::__1::unique_ptr"* %530 to i64
  %532 = bitcast %"class.std::__1::unique_ptr"** %522 to i64*
  store i64 %531, i64* %532, align 8
  br label %535

533:                                              ; preds = %516
  %534 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %518, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %534, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11) #17
  br label %535

535:                                              ; preds = %533, %527
  %536 = getelementptr inbounds i8, i8* %476, i64 72
  %537 = bitcast i8* %536 to %"class.spv::Block"**
  store %"class.spv::Block"* %518, %"class.spv::Block"** %537, align 8
  %538 = load i32, i32* %483, align 8
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %572, label %540

540:                                              ; preds = %535
  %541 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %518, i64 0, i32 5
  %542 = load %"class.spv::Function"*, %"class.spv::Function"** %541, align 8
  %543 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %542, i64 0, i32 1
  %544 = load %"class.spv::Module"*, %"class.spv::Module"** %543, align 8
  %545 = zext i32 %538 to i64
  %546 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %544, i64 0, i32 2
  %547 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %544, i64 0, i32 2, i32 0, i32 1
  %548 = bitcast %"class.spv::Instruction"*** %547 to i64*
  %549 = load i64, i64* %548, align 8
  %550 = bitcast %"class.std::__1::vector.55"* %546 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = sub i64 %549, %551
  %553 = ashr exact i64 %552, 3
  %554 = icmp ugt i64 %553, %545
  %555 = inttoptr i64 %551 to %"class.spv::Instruction"**
  br i1 %554, label %568, label %556

556:                                              ; preds = %540
  %557 = add i32 %538, 16
  %558 = zext i32 %557 to i64
  %559 = icmp ult i64 %553, %558
  br i1 %559, label %560, label %564

560:                                              ; preds = %556
  %561 = sub nsw i64 %558, %553
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %546, i64 %561) #17
  %562 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %546, i64 0, i32 0, i32 0
  %563 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %562, align 8
  br label %568

564:                                              ; preds = %556
  %565 = icmp ugt i64 %553, %558
  br i1 %565, label %566, label %568

566:                                              ; preds = %564
  %567 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %555, i64 %558
  store %"class.spv::Instruction"** %567, %"class.spv::Instruction"*** %547, align 8
  br label %568

568:                                              ; preds = %566, %564, %560, %540
  %569 = phi %"class.spv::Instruction"** [ %555, %566 ], [ %555, %564 ], [ %563, %560 ], [ %555, %540 ]
  %570 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %569, i64 %545
  %571 = bitcast %"class.spv::Instruction"** %570 to i8**
  store i8* %476, i8** %571, align 8
  br label %572

572:                                              ; preds = %568, %535
  %573 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %520, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %520, align 8
  %574 = icmp eq %"class.spv::Instruction"* %573, null
  br i1 %574, label %580, label %575

575:                                              ; preds = %572
  %576 = bitcast %"class.spv::Instruction"* %573 to void (%"class.spv::Instruction"*)***
  %577 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %576, align 8
  %578 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %577, i64 1
  %579 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %578, align 8
  call void %579(%"class.spv::Instruction"* nonnull %573) #17
  br label %580

580:                                              ; preds = %572, %575
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %519)
  %581 = load i32, i32* %483, align 8
  br i1 %3, label %588, label %662

582:                                              ; preds = %582, %506
  %583 = phi i64 [ %508, %506 ], [ %586, %582 ]
  %584 = getelementptr inbounds [10 x i32], [10 x i32]* %12, i64 0, i64 %583
  %585 = load i32, i32* %584, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %477, i32 %585)
  %586 = add nuw nsw i64 %583, 1
  %587 = icmp eq i64 %586, %509
  br i1 %587, label %510, label %582

588:                                              ; preds = %580
  %589 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %590 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %591 = bitcast %"class.std::__1::__tree_end_node"* %590 to %"class.std::__1::__tree_node"**
  %592 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %591, align 8
  %593 = icmp eq %"class.std::__1::__tree_node"* %592, null
  br i1 %593, label %622, label %594

594:                                              ; preds = %588
  %595 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %596

596:                                              ; preds = %618, %594
  %597 = phi %"class.std::__1::__tree_node"* [ %621, %618 ], [ %592, %594 ]
  %598 = phi %"class.std::__1::__tree_node_base"** [ %620, %618 ], [ %595, %594 ]
  %599 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %597, i64 0, i32 1
  %600 = load i32, i32* %599, align 4
  %601 = icmp sgt i32 %600, 41
  br i1 %601, label %602, label %608

602:                                              ; preds = %596
  %603 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %597, i64 0, i32 0, i32 0, i32 0
  %604 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %603, align 8
  %605 = icmp eq %"class.std::__1::__tree_node_base"* %604, null
  br i1 %605, label %606, label %618

606:                                              ; preds = %602
  %607 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %597, i64 0, i32 0, i32 0
  br label %624

608:                                              ; preds = %596
  %609 = icmp eq i32 %600, 41
  br i1 %609, label %616, label %610

610:                                              ; preds = %608
  %611 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %597, i64 0, i32 0, i32 1
  %612 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %611, align 8
  %613 = icmp eq %"class.std::__1::__tree_node_base"* %612, null
  br i1 %613, label %614, label %618

614:                                              ; preds = %610
  %615 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %597, i64 0, i32 0, i32 0
  br label %624

616:                                              ; preds = %608
  %617 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %597, i64 0, i32 0, i32 0
  br label %624

618:                                              ; preds = %610, %602
  %619 = phi %"class.std::__1::__tree_node_base"* [ %604, %602 ], [ %612, %610 ]
  %620 = phi %"class.std::__1::__tree_node_base"** [ %603, %602 ], [ %611, %610 ]
  %621 = bitcast %"class.std::__1::__tree_node_base"* %619 to %"class.std::__1::__tree_node"*
  br label %596

622:                                              ; preds = %588
  %623 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %590, i64 0, i32 0
  br label %624

624:                                              ; preds = %622, %616, %614, %606
  %625 = phi %"class.std::__1::__tree_end_node"* [ %590, %622 ], [ %607, %606 ], [ %615, %614 ], [ %617, %616 ]
  %626 = phi %"class.std::__1::__tree_node_base"** [ %623, %622 ], [ %603, %606 ], [ %611, %614 ], [ %598, %616 ]
  %627 = bitcast %"class.std::__1::__tree_node_base"** %626 to %"class.std::__1::__tree_node"**
  %628 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %627, align 8
  %629 = icmp eq %"class.std::__1::__tree_node"* %628, null
  br i1 %629, label %630, label %654

630:                                              ; preds = %624
  %631 = call i8* @_Znwm(i64 32) #18, !noalias !64
  %632 = getelementptr inbounds i8, i8* %631, i64 28
  %633 = bitcast i8* %632 to i32*
  store i32 41, i32* %633, align 4, !noalias !64
  %634 = bitcast i8* %631 to %"class.std::__1::__tree_node_base"*
  %635 = getelementptr inbounds i8, i8* %631, i64 16
  %636 = bitcast i8* %635 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %631, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %625, %"class.std::__1::__tree_end_node"** %636, align 8
  %637 = bitcast %"class.std::__1::__tree_node_base"** %626 to i8**
  store i8* %631, i8** %637, align 8
  %638 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %589, i64 0, i32 0, i32 0
  %639 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %638, align 8
  %640 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %639, i64 0, i32 0
  %641 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %640, align 8
  %642 = icmp eq %"class.std::__1::__tree_node_base"* %641, null
  br i1 %642, label %647, label %643

643:                                              ; preds = %630
  %644 = ptrtoint %"class.std::__1::__tree_node_base"* %641 to i64
  %645 = bitcast %"class.std::__1::set.14"* %589 to i64*
  store i64 %644, i64* %645, align 8
  %646 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %626, align 8
  br label %647

647:                                              ; preds = %643, %630
  %648 = phi %"class.std::__1::__tree_node_base"* [ %634, %630 ], [ %646, %643 ]
  %649 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %650 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %649, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %650, %"class.std::__1::__tree_node_base"* %648) #17
  %651 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %652 = load i64, i64* %651, align 8
  %653 = add i64 %652, 1
  store i64 %653, i64* %651, align 8
  br label %654

654:                                              ; preds = %624, %647
  %655 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjj(%"class.spv::Builder"* %0, i32 %581, i32 %475, i32 1)
  %656 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %8, i64 0, i32 11
  %657 = load i32, i32* %656, align 4
  call void @_ZN3spv7Builder11createStoreEjjNS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"* %0, i32 %655, i32 %657, i32 0, i32 2147483647, i32 0)
  %658 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjj(%"class.spv::Builder"* %0, i32 %581, i32 %474, i32 0)
  %659 = icmp ne i32 %658, 0
  %660 = and i1 %512, %659
  br i1 %660, label %661, label %666

661:                                              ; preds = %654
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %658, i32 %1, i32 -1) #17
  br label %666

662:                                              ; preds = %580
  %663 = icmp eq i32 %473, %2
  br i1 %663, label %666, label %664

664:                                              ; preds = %662
  %665 = call i32 @_ZN3spv7Builder11smearScalarENS_10DecorationEjj(%"class.spv::Builder"* %0, i32 %1, i32 %581, i32 %2)
  br label %666

666:                                              ; preds = %661, %654, %662, %664
  %667 = phi i32 [ %665, %664 ], [ %581, %662 ], [ %658, %654 ], [ %658, %661 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #17
  ret i32 %667
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #0

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder22createTextureQueryCallENS_2OpERKNS0_17TextureParametersEb(%"class.spv::Builder"*, i32, %"struct.spv::Builder::TextureParameters"* nocapture readonly dereferenceable(64), i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  switch i32 %1, label %117 [
    i32 104, label %6
    i32 103, label %6
    i32 105, label %78
    i32 106, label %112
    i32 107, label %112
  ]

6:                                                ; preds = %4, %4
  %7 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %11 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %10, align 8
  %12 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, i64 %9
  %13 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %12, align 8
  %14 = icmp eq %"class.spv::Instruction"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i32 [ %17, %15 ], [ 0, %6 ]
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, i64 %20
  %22 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %22, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 27
  br i1 %25, label %26, label %33

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %22, i64 0, i32 4, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, i64 %30
  %32 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %31, align 8
  br label %33

33:                                               ; preds = %18, %26
  %34 = phi %"class.spv::Instruction"* [ %22, %18 ], [ %32, %26 ]
  %35 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %34, i64 0, i32 4, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %38, 7
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = sext i32 %38 to i64
  %42 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN3spv7Builder22createTextureQueryCallENS_2OpERKNS0_17TextureParametersEb, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %40, %33
  %45 = phi i32 [ 0, %33 ], [ %43, %40 ]
  br i1 %14, label %49, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %13, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %46, %44
  %50 = phi i32 [ %48, %46 ], [ 0, %44 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, i64 %51
  %53 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %52, align 8
  %54 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 27
  br i1 %56, label %57, label %64

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 4, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, i64 %61
  %63 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %62, align 8
  br label %64

64:                                               ; preds = %49, %57
  %65 = phi %"class.spv::Instruction"* [ %53, %49 ], [ %63, %57 ]
  %66 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %65, i64 0, i32 4, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp ne i32 %69, 0
  %71 = zext i1 %70 to i32
  %72 = add nuw nsw i32 %45, %71
  %73 = xor i1 %3, true
  %74 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext %73) #17
  %75 = icmp eq i32 %72, 1
  br i1 %75, label %117, label %76

76:                                               ; preds = %64
  %77 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %74, i32 %72)
  br label %117

78:                                               ; preds = %4
  %79 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %2, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %83 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %82, align 8
  %84 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %83, i64 %81
  %85 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %84, align 8
  %86 = icmp eq %"class.spv::Instruction"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %85, i64 0, i32 2
  br label %89

89:                                               ; preds = %102, %105, %87
  %90 = phi i32* [ %88, %87 ], [ %108, %105 ], [ %104, %102 ]
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %89, %78
  %93 = phi i32 [ 0, %78 ], [ %91, %89 ]
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %83, i64 %94
  %96 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %95, align 8
  %97 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %96, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  switch i32 %98, label %109 [
    i32 19, label %99
    i32 20, label %99
    i32 21, label %99
    i32 22, label %99
    i32 30, label %99
    i32 23, label %102
    i32 24, label %102
    i32 28, label %102
    i32 29, label %102
    i32 32, label %105
  ]

99:                                               ; preds = %92, %92, %92, %92, %92
  %100 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %96, i64 0, i32 1
  %101 = load i32, i32* %100, align 8
  br label %109

102:                                              ; preds = %92, %92, %92, %92
  %103 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %96, i64 0, i32 4, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  br label %89

105:                                              ; preds = %92
  %106 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %96, i64 0, i32 4, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 1
  br label %89

109:                                              ; preds = %92, %99
  %110 = phi i32 [ %101, %99 ], [ 0, %92 ]
  %111 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %110, i32 2)
  br label %117

112:                                              ; preds = %4, %4
  br i1 %3, label %113, label %115

113:                                              ; preds = %112
  %114 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  br label %117

115:                                              ; preds = %112
  %116 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext true) #17
  br label %117

117:                                              ; preds = %113, %115, %76, %64, %4, %109
  %118 = phi i32 [ 0, %4 ], [ %111, %109 ], [ %77, %76 ], [ %74, %64 ], [ %114, %113 ], [ %116, %115 ]
  %119 = tail call i8* @_Znwm(i64 80) #18
  %120 = bitcast i8* %119 to %"class.spv::Instruction"*
  %121 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 8
  %124 = bitcast i8* %119 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds i8, i8* %119, i64 8
  %126 = bitcast i8* %125 to i32*
  store i32 %123, i32* %126, align 8
  %127 = getelementptr inbounds i8, i8* %119, i64 12
  %128 = bitcast i8* %127 to i32*
  store i32 %118, i32* %128, align 4
  %129 = getelementptr inbounds i8, i8* %119, i64 16
  %130 = bitcast i8* %129 to i32*
  store i32 %1, i32* %130, align 8
  %131 = getelementptr inbounds i8, i8* %119, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 56, i1 false) #17
  %132 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %2, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %120, i32 %133)
  %134 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %2, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137

137:                                              ; preds = %117
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %120, i32 %135)
  br label %138

138:                                              ; preds = %117, %137
  %139 = getelementptr inbounds %"struct.spv::Builder::TextureParameters", %"struct.spv::Builder::TextureParameters"* %2, i64 0, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %120, i32 %140)
  br label %143

143:                                              ; preds = %138, %142
  %144 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %145 = load %"class.spv::Block"*, %"class.spv::Block"** %144, align 8
  %146 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146)
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %119, i8** %148, align 8
  %149 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %145, i64 0, i32 1, i32 0, i32 1
  %150 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %149, align 8
  %151 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %145, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %152 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %151, align 8
  %153 = icmp ult %"class.std::__1::unique_ptr"* %150, %152
  br i1 %153, label %154, label %160

154:                                              ; preds = %143
  %155 = ptrtoint i8* %119 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %147, align 8
  %156 = bitcast %"class.std::__1::unique_ptr"* %150 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %150, i64 1
  %158 = ptrtoint %"class.std::__1::unique_ptr"* %157 to i64
  %159 = bitcast %"class.std::__1::unique_ptr"** %149 to i64*
  store i64 %158, i64* %159, align 8
  br label %162

160:                                              ; preds = %143
  %161 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %145, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %161, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %162

162:                                              ; preds = %160, %154
  %163 = getelementptr inbounds i8, i8* %119, i64 72
  %164 = bitcast i8* %163 to %"class.spv::Block"**
  store %"class.spv::Block"* %145, %"class.spv::Block"** %164, align 8
  %165 = load i32, i32* %126, align 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %199, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %145, i64 0, i32 5
  %169 = load %"class.spv::Function"*, %"class.spv::Function"** %168, align 8
  %170 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %169, i64 0, i32 1
  %171 = load %"class.spv::Module"*, %"class.spv::Module"** %170, align 8
  %172 = zext i32 %165 to i64
  %173 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %171, i64 0, i32 2
  %174 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %171, i64 0, i32 2, i32 0, i32 1
  %175 = bitcast %"class.spv::Instruction"*** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.std::__1::vector.55"* %173 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = sub i64 %176, %178
  %180 = ashr exact i64 %179, 3
  %181 = icmp ugt i64 %180, %172
  %182 = inttoptr i64 %178 to %"class.spv::Instruction"**
  br i1 %181, label %195, label %183

183:                                              ; preds = %167
  %184 = add i32 %165, 16
  %185 = zext i32 %184 to i64
  %186 = icmp ult i64 %180, %185
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = sub nsw i64 %185, %180
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %173, i64 %188) #17
  %189 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %173, i64 0, i32 0, i32 0
  %190 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %189, align 8
  br label %195

191:                                              ; preds = %183
  %192 = icmp ugt i64 %180, %185
  br i1 %192, label %193, label %195

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %182, i64 %185
  store %"class.spv::Instruction"** %194, %"class.spv::Instruction"*** %174, align 8
  br label %195

195:                                              ; preds = %193, %191, %187, %167
  %196 = phi %"class.spv::Instruction"** [ %182, %193 ], [ %182, %191 ], [ %190, %187 ], [ %182, %167 ]
  %197 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %196, i64 %172
  %198 = bitcast %"class.spv::Instruction"** %197 to i8**
  store i8* %119, i8** %198, align 8
  br label %199

199:                                              ; preds = %195, %162
  %200 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %147, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %147, align 8
  %201 = icmp eq %"class.spv::Instruction"* %200, null
  br i1 %201, label %207, label %202

202:                                              ; preds = %199
  %203 = bitcast %"class.spv::Instruction"* %200 to void (%"class.spv::Instruction"*)***
  %204 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %204, i64 1
  %206 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %205, align 8
  call void %206(%"class.spv::Instruction"* nonnull %200) #17
  br label %207

207:                                              ; preds = %199, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146)
  %208 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14
  %209 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %210 = bitcast %"class.std::__1::__tree_end_node"* %209 to %"class.std::__1::__tree_node"**
  %211 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node"* %211, null
  br i1 %212, label %241, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %215

215:                                              ; preds = %237, %213
  %216 = phi %"class.std::__1::__tree_node"* [ %240, %237 ], [ %211, %213 ]
  %217 = phi %"class.std::__1::__tree_node_base"** [ %239, %237 ], [ %214, %213 ]
  %218 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp sgt i32 %219, 50
  br i1 %220, label %221, label %227

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = icmp eq %"class.std::__1::__tree_node_base"* %223, null
  br i1 %224, label %225, label %237

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0
  br label %243

227:                                              ; preds = %215
  %228 = icmp eq i32 %219, 50
  br i1 %228, label %235, label %229

229:                                              ; preds = %227
  %230 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 1
  %231 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %230, align 8
  %232 = icmp eq %"class.std::__1::__tree_node_base"* %231, null
  br i1 %232, label %233, label %237

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0
  br label %243

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %216, i64 0, i32 0, i32 0
  br label %243

237:                                              ; preds = %229, %221
  %238 = phi %"class.std::__1::__tree_node_base"* [ %223, %221 ], [ %231, %229 ]
  %239 = phi %"class.std::__1::__tree_node_base"** [ %222, %221 ], [ %230, %229 ]
  %240 = bitcast %"class.std::__1::__tree_node_base"* %238 to %"class.std::__1::__tree_node"*
  br label %215

241:                                              ; preds = %207
  %242 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %209, i64 0, i32 0
  br label %243

243:                                              ; preds = %241, %235, %233, %225
  %244 = phi %"class.std::__1::__tree_end_node"* [ %209, %241 ], [ %226, %225 ], [ %234, %233 ], [ %236, %235 ]
  %245 = phi %"class.std::__1::__tree_node_base"** [ %242, %241 ], [ %222, %225 ], [ %230, %233 ], [ %217, %235 ]
  %246 = bitcast %"class.std::__1::__tree_node_base"** %245 to %"class.std::__1::__tree_node"**
  %247 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node"* %247, null
  br i1 %248, label %249, label %273

249:                                              ; preds = %243
  %250 = call i8* @_Znwm(i64 32) #18, !noalias !67
  %251 = getelementptr inbounds i8, i8* %250, i64 28
  %252 = bitcast i8* %251 to i32*
  store i32 50, i32* %252, align 4, !noalias !67
  %253 = bitcast i8* %250 to %"class.std::__1::__tree_node_base"*
  %254 = getelementptr inbounds i8, i8* %250, i64 16
  %255 = bitcast i8* %254 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %244, %"class.std::__1::__tree_end_node"** %255, align 8
  %256 = bitcast %"class.std::__1::__tree_node_base"** %245 to i8**
  store i8* %250, i8** %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::set.14", %"class.std::__1::set.14"* %208, i64 0, i32 0, i32 0
  %258 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %259 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %258, i64 0, i32 0
  %260 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %259, align 8
  %261 = icmp eq %"class.std::__1::__tree_node_base"* %260, null
  br i1 %261, label %266, label %262

262:                                              ; preds = %249
  %263 = ptrtoint %"class.std::__1::__tree_node_base"* %260 to i64
  %264 = bitcast %"class.std::__1::set.14"* %208 to i64*
  store i64 %263, i64* %264, align 8
  %265 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %245, align 8
  br label %266

266:                                              ; preds = %262, %249
  %267 = phi %"class.std::__1::__tree_node_base"* [ %253, %249 ], [ %265, %262 ]
  %268 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %269, %"class.std::__1::__tree_node_base"* %267) #17
  %270 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %271 = load i64, i64* %270, align 8
  %272 = add i64 %271, 1
  store i64 %272, i64* %270, align 8
  br label %273

273:                                              ; preds = %243, %266
  %274 = load i32, i32* %126, align 8
  ret i32 %274
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder22createCompositeCompareENS_10DecorationEjjb(%"class.spv::Builder"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = tail call i32 @_ZN3spv7Builder12makeBoolTypeEv(%"class.spv::Builder"* %0)
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %10 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %9, align 8
  %11 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %8
  %12 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, align 8
  %13 = icmp eq %"class.spv::Instruction"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %12, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  br label %18

18:                                               ; preds = %5, %14
  %19 = phi i64 [ %17, %14 ], [ 0, %5 ]
  %20 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %19
  %21 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %20, align 8
  %22 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %45 [
    i32 30, label %35
    i32 28, label %24
    i32 24, label %48
    i32 23, label %48
  ]

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 4, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %29
  %31 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %30, align 8
  %32 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %31, i64 0, i32 4, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  br label %56

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 4
  %37 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 4, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.26"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = lshr exact i64 %42, 2
  %44 = trunc i64 %43 to i32
  br label %56

45:                                               ; preds = %18
  %46 = add i32 %23, -20
  %47 = icmp ult i32 %46, 3
  br i1 %47, label %71, label %59

48:                                               ; preds = %18, %18
  %49 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 4, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %23, -20
  %54 = icmp ult i32 %53, 3
  %55 = icmp eq i32 %23, 23
  br i1 %55, label %71, label %56

56:                                               ; preds = %24, %35, %48
  %57 = phi i32 [ %52, %48 ], [ %44, %35 ], [ %34, %24 ]
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %199

59:                                               ; preds = %45, %56
  %60 = phi i32 [ %57, %56 ], [ 1, %45 ]
  %61 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  %62 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  %65 = bitcast i32** %63 to i8**
  %66 = bitcast i32** %62 to i64*
  %67 = zext i32 %3 to i64
  %68 = select i1 %4, i32 167, i32 166
  %69 = icmp ne i32 %1, 2147483647
  %70 = zext i32 %60 to i64
  br label %119

71:                                               ; preds = %48, %45
  %72 = phi i1 [ %54, %48 ], [ true, %45 ]
  %73 = phi i32 [ %52, %48 ], [ 1, %45 ]
  br label %74

74:                                               ; preds = %80, %71
  %75 = phi i32 [ %23, %71 ], [ %87, %80 ]
  %76 = phi %"class.spv::Instruction"* [ %21, %71 ], [ %85, %80 ]
  switch i32 %75, label %94 [
    i32 23, label %77
    i32 24, label %77
    i32 28, label %77
    i32 29, label %77
    i32 32, label %88
    i32 22, label %92
    i32 20, label %96
  ]

77:                                               ; preds = %74, %74, %74, %74
  %78 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %76, i64 0, i32 4, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  br label %80

80:                                               ; preds = %88, %77
  %81 = phi i32* [ %79, %77 ], [ %91, %88 ]
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %83
  %85 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %84, align 8
  %86 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %85, i64 0, i32 3
  %87 = load i32, i32* %86, align 8
  br label %74

88:                                               ; preds = %74
  %89 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %76, i64 0, i32 4, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 1
  br label %80

92:                                               ; preds = %74
  %93 = select i1 %4, i32 180, i32 183
  br label %98

94:                                               ; preds = %74
  %95 = select i1 %4, i32 170, i32 171
  br label %98

96:                                               ; preds = %74
  %97 = select i1 %4, i32 164, i32 165
  br label %98

98:                                               ; preds = %96, %94, %92
  %99 = phi i32 [ %95, %94 ], [ %97, %96 ], [ %93, %92 ]
  %100 = phi i32 [ %1, %94 ], [ 2147483647, %96 ], [ %1, %92 ]
  br i1 %72, label %101, label %103

101:                                              ; preds = %98
  %102 = tail call i32 @_ZN3spv7Builder11createBinOpENS_2OpEjjj(%"class.spv::Builder"* %0, i32 %99, i32 %7, i32 %2, i32 %3)
  br label %113

103:                                              ; preds = %98
  %104 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %7, i32 %73)
  %105 = tail call i32 @_ZN3spv7Builder11createBinOpENS_2OpEjjj(%"class.spv::Builder"* %0, i32 %99, i32 %104, i32 %2, i32 %3)
  %106 = icmp ne i32 %100, 2147483647
  %107 = icmp ne i32 %105, 0
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %103
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %105, i32 %100, i32 -1) #17
  br label %110

110:                                              ; preds = %103, %109
  %111 = select i1 %4, i32 155, i32 154
  %112 = tail call i32 @_ZN3spv7Builder13createUnaryOpENS_2OpEjj(%"class.spv::Builder"* %0, i32 %111, i32 %7, i32 %105)
  br label %113

113:                                              ; preds = %110, %101
  %114 = phi i32 [ %102, %101 ], [ %112, %110 ]
  %115 = icmp ne i32 %100, 2147483647
  %116 = icmp ne i32 %114, 0
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %199

118:                                              ; preds = %113
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %114, i32 %100, i32 -1) #17
  br label %199

119:                                              ; preds = %195, %59
  %120 = phi i64 [ 0, %59 ], [ %197, %195 ]
  %121 = phi i32 [ 0, %59 ], [ %196, %195 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #17
  %122 = tail call i8* @_Znwm(i64 4) #18
  %123 = bitcast i8* %122 to i32*
  store i8* %122, i8** %64, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 4
  store i8* %124, i8** %65, align 8
  %125 = trunc i64 %120 to i32
  store i32 %125, i32* %123, align 4
  %126 = ptrtoint i8* %124 to i64
  store i64 %126, i64* %66, align 8
  %127 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %9, align 8
  %128 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %127, i64 %8
  %129 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %128, align 8
  %130 = icmp eq %"class.spv::Instruction"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %119
  %132 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %129, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  br label %134

134:                                              ; preds = %119, %131
  %135 = phi i32 [ %133, %131 ], [ 0, %119 ]
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %127, i64 %136
  %138 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %137, align 8
  %139 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %138, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %155 [
    i32 23, label %141
    i32 24, label %141
    i32 28, label %141
    i32 29, label %141
    i32 5358, label %141
    i32 32, label %144
    i32 30, label %148
  ]

141:                                              ; preds = %134, %134, %134, %134, %134
  %142 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %138, i64 0, i32 4, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  br label %152

144:                                              ; preds = %134
  %145 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %138, i64 0, i32 4, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 1
  br label %152

148:                                              ; preds = %134
  %149 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %138, i64 0, i32 4, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = getelementptr inbounds i32, i32* %150, i64 %120
  br label %152

152:                                              ; preds = %148, %144, %141
  %153 = phi i32* [ %143, %141 ], [ %147, %144 ], [ %151, %148 ]
  %154 = load i32, i32* %153, align 4
  br label %155

155:                                              ; preds = %152, %134
  %156 = phi i32 [ 0, %134 ], [ %154, %152 ]
  %157 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %127, i64 %67
  %158 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %157, align 8
  %159 = icmp eq %"class.spv::Instruction"* %158, null
  br i1 %159, label %163, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %158, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  br label %163

163:                                              ; preds = %155, %160
  %164 = phi i32 [ %162, %160 ], [ 0, %155 ]
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %127, i64 %165
  %167 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %166, align 8
  %168 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %167, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  switch i32 %169, label %184 [
    i32 23, label %170
    i32 24, label %170
    i32 28, label %170
    i32 29, label %170
    i32 5358, label %170
    i32 32, label %173
    i32 30, label %177
  ]

170:                                              ; preds = %163, %163, %163, %163, %163
  %171 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %167, i64 0, i32 4, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  br label %181

173:                                              ; preds = %163
  %174 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %167, i64 0, i32 4, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = getelementptr inbounds i32, i32* %175, i64 1
  br label %181

177:                                              ; preds = %163
  %178 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %167, i64 0, i32 4, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %120
  br label %181

181:                                              ; preds = %177, %173, %170
  %182 = phi i32* [ %172, %170 ], [ %176, %173 ], [ %180, %177 ]
  %183 = load i32, i32* %182, align 4
  br label %184

184:                                              ; preds = %181, %163
  %185 = phi i32 [ 0, %163 ], [ %183, %181 ]
  %186 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %2, i32 %156, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6)
  %187 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %3, i32 %185, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6)
  %188 = tail call i32 @_ZN3spv7Builder22createCompositeCompareENS_10DecorationEjjb(%"class.spv::Builder"* %0, i32 %1, i32 %186, i32 %187, i1 zeroext %4)
  %189 = icmp eq i64 %120, 0
  br i1 %189, label %195, label %190

190:                                              ; preds = %184
  %191 = tail call i32 @_ZN3spv7Builder11createBinOpENS_2OpEjjj(%"class.spv::Builder"* %0, i32 %68, i32 %7, i32 %121, i32 %188)
  %192 = icmp ne i32 %191, 0
  %193 = and i1 %69, %192
  br i1 %193, label %194, label %195

194:                                              ; preds = %190
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %191, i32 %1, i32 -1) #17
  br label %195

195:                                              ; preds = %194, %190, %184
  %196 = phi i32 [ %188, %184 ], [ %191, %190 ], [ %191, %194 ]
  tail call void @_ZdlPv(i8* nonnull %122) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #17
  %197 = add nuw nsw i64 %120, 1
  %198 = icmp eq i64 %197, %70
  br i1 %198, label %199, label %119

199:                                              ; preds = %195, %56, %118, %113
  %200 = phi i32 [ %114, %113 ], [ %114, %118 ], [ 0, %56 ], [ %196, %195 ]
  ret i32 %200
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder24createCompositeConstructEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"*, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 20
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %30, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %16 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %15, align 8
  br label %19

17:                                               ; preds = %19
  %18 = icmp eq i32* %29, %12
  br i1 %18, label %30, label %19

19:                                               ; preds = %17, %14
  %20 = phi i32* [ %10, %14 ], [ %29, %17 ]
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %16, i64 %22
  %24 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %23, align 8
  %25 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %24, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -48
  %28 = icmp ult i32 %27, 5
  %29 = getelementptr inbounds i32, i32* %20, i64 1
  br i1 %28, label %30, label %17

30:                                               ; preds = %17, %19, %8
  %31 = phi i1 [ false, %8 ], [ true, %19 ], [ false, %17 ]
  %32 = tail call i32 @_ZN3spv7Builder21makeCompositeConstantEjRKNSt3__16vectorIjNS1_9allocatorIjEEEEb(%"class.spv::Builder"* %0, i32 %1, %"class.std::__1::vector.26"* dereferenceable(24) %2, i1 zeroext %31)
  br label %135

33:                                               ; preds = %3
  %34 = tail call i8* @_Znwm(i64 80) #18
  %35 = bitcast i8* %34 to %"class.spv::Instruction"*
  %36 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, 1
  store i32 %38, i32* %36, align 8
  %39 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 %38, i32* %41, align 8
  %42 = getelementptr inbounds i8, i8* %34, i64 12
  %43 = bitcast i8* %42 to i32*
  store i32 %1, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %34, i64 16
  %45 = bitcast i8* %44 to i32*
  store i32 80, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %34, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 56, i1 false) #17
  %47 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = lshr exact i64 %52, 2
  %54 = trunc i64 %53 to i32
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %122, label %56

56:                                               ; preds = %122, %33
  %57 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %58 = load %"class.spv::Block"*, %"class.spv::Block"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %34, i8** %61, align 8
  %62 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %58, i64 0, i32 1, i32 0, i32 1
  %63 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %62, align 8
  %64 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %58, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %64, align 8
  %66 = icmp ult %"class.std::__1::unique_ptr"* %63, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %56
  %68 = ptrtoint i8* %34 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %60, align 8
  %69 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 1
  %71 = ptrtoint %"class.std::__1::unique_ptr"* %70 to i64
  %72 = bitcast %"class.std::__1::unique_ptr"** %62 to i64*
  store i64 %71, i64* %72, align 8
  br label %75

73:                                               ; preds = %56
  %74 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %58, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %74, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %75

75:                                               ; preds = %73, %67
  %76 = getelementptr inbounds i8, i8* %34, i64 72
  %77 = bitcast i8* %76 to %"class.spv::Block"**
  store %"class.spv::Block"* %58, %"class.spv::Block"** %77, align 8
  %78 = load i32, i32* %41, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %112, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %58, i64 0, i32 5
  %82 = load %"class.spv::Function"*, %"class.spv::Function"** %81, align 8
  %83 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %82, i64 0, i32 1
  %84 = load %"class.spv::Module"*, %"class.spv::Module"** %83, align 8
  %85 = zext i32 %78 to i64
  %86 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %84, i64 0, i32 2
  %87 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %84, i64 0, i32 2, i32 0, i32 1
  %88 = bitcast %"class.spv::Instruction"*** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.55"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 3
  %94 = icmp ugt i64 %93, %85
  %95 = inttoptr i64 %91 to %"class.spv::Instruction"**
  br i1 %94, label %108, label %96

96:                                               ; preds = %80
  %97 = add i32 %78, 16
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %93, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %96
  %101 = sub nsw i64 %98, %93
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %86, i64 %101) #17
  %102 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %86, i64 0, i32 0, i32 0
  %103 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %102, align 8
  br label %108

104:                                              ; preds = %96
  %105 = icmp ugt i64 %93, %98
  br i1 %105, label %106, label %108

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %95, i64 %98
  store %"class.spv::Instruction"** %107, %"class.spv::Instruction"*** %87, align 8
  br label %108

108:                                              ; preds = %106, %104, %100, %80
  %109 = phi %"class.spv::Instruction"** [ %95, %106 ], [ %95, %104 ], [ %103, %100 ], [ %95, %80 ]
  %110 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %109, i64 %85
  %111 = bitcast %"class.spv::Instruction"** %110 to i8**
  store i8* %34, i8** %111, align 8
  br label %112

112:                                              ; preds = %108, %75
  %113 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %60, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %60, align 8
  %114 = icmp eq %"class.spv::Instruction"* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %112
  %116 = bitcast %"class.spv::Instruction"* %113 to void (%"class.spv::Instruction"*)***
  %117 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %117, i64 1
  %119 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %118, align 8
  call void %119(%"class.spv::Instruction"* nonnull %113) #17
  br label %120

120:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  %121 = load i32, i32* %41, align 8
  br label %135

122:                                              ; preds = %33, %122
  %123 = phi i64 [ %130, %122 ], [ %51, %33 ]
  %124 = phi i64 [ %128, %122 ], [ 0, %33 ]
  %125 = inttoptr i64 %123 to i32*
  %126 = getelementptr inbounds i32, i32* %125, i64 %124
  %127 = load i32, i32* %126, align 4
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %35, i32 %127)
  %128 = add nuw nsw i64 %124, 1
  %129 = load i64, i64* %48, align 8
  %130 = load i64, i64* %50, align 8
  %131 = sub i64 %129, %130
  %132 = shl i64 %131, 30
  %133 = ashr i64 %132, 32
  %134 = icmp slt i64 %128, %133
  br i1 %134, label %122, label %56

135:                                              ; preds = %120, %30
  %136 = phi i32 [ %32, %30 ], [ %121, %120 ]
  ret i32 %136
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder17createConstructorENS_10DecorationERKNSt3__16vectorIjNS2_9allocatorIjEEEEj(%"class.spv::Builder"*, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::vector.26", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = alloca %"class.std::__1::vector.26", align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %10 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %9, align 8
  %11 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %8
  %12 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %11, align 8
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %12, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %41 [
    i32 30, label %31
    i32 28, label %20
    i32 24, label %15
    i32 23, label %15
  ]

15:                                               ; preds = %4, %4
  %16 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %12, i64 0, i32 4, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 1
  %19 = load i32, i32* %18, align 4
  br label %41

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %12, i64 0, i32 4, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %25
  %27 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %26, align 8
  %28 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %27, i64 0, i32 4, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %29, align 4
  br label %41

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %12, i64 0, i32 4
  %33 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %12, i64 0, i32 4, i32 0, i32 1
  %34 = bitcast i32** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.26"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = lshr exact i64 %38, 2
  %40 = trunc i64 %39 to i32
  br label %41

41:                                               ; preds = %4, %15, %20, %31
  %42 = phi i32 [ %40, %31 ], [ %30, %20 ], [ %19, %15 ], [ 1, %4 ]
  %43 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = icmp eq i64 %48, 4
  %50 = inttoptr i64 %47 to i32*
  br i1 %49, label %51, label %73

51:                                               ; preds = %41
  %52 = load i32, i32* %50, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %53
  %55 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %54, align 8
  %56 = icmp eq %"class.spv::Instruction"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %55, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  br label %61

61:                                               ; preds = %51, %57
  %62 = phi i64 [ %60, %57 ], [ 0, %51 ]
  %63 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %62
  %64 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, align 8
  %65 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, -20
  %68 = icmp ult i32 %67, 3
  %69 = icmp ugt i32 %42, 1
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %61
  %72 = tail call i32 @_ZN3spv7Builder11smearScalarENS_10DecorationEjj(%"class.spv::Builder"* %0, i32 %1, i32 %52, i32 %3)
  br label %519

73:                                               ; preds = %61, %41
  %74 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #17
  %75 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #17
  br label %78

78:                                               ; preds = %95, %73
  %79 = phi i32 [ %3, %73 ], [ %97, %95 ]
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, i64 %80
  %82 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %81, align 8
  %83 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  switch i32 %84, label %98 [
    i32 19, label %85
    i32 20, label %85
    i32 21, label %85
    i32 22, label %85
    i32 30, label %85
    i32 23, label %88
    i32 24, label %88
    i32 28, label %88
    i32 29, label %88
    i32 32, label %91
  ]

85:                                               ; preds = %78, %78, %78, %78, %78
  %86 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  br label %98

88:                                               ; preds = %78, %78, %78, %78
  %89 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 4, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  br label %95

91:                                               ; preds = %78
  %92 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 4, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 1
  br label %95

95:                                               ; preds = %91, %88
  %96 = phi i32* [ %94, %91 ], [ %90, %88 ]
  %97 = load i32, i32* %96, align 4
  br label %78

98:                                               ; preds = %78, %85
  %99 = phi i32 [ %87, %85 ], [ 0, %78 ]
  %100 = icmp eq i64 %45, %47
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = bitcast i32** %76 to i64*
  br label %510

103:                                              ; preds = %98
  %104 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  %105 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %107 = bitcast i32** %105 to i64*
  %108 = bitcast %"class.std::__1::vector.26"* %6 to i64*
  %109 = bitcast i32** %106 to i64*
  %110 = icmp ugt i32 %42, 1
  %111 = bitcast i32** %76 to i64*
  %112 = bitcast %"class.std::__1::vector.26"* %7 to i64*
  %113 = bitcast i32** %77 to i64*
  %114 = bitcast %"class.std::__1::vector.26"* %5 to i8*
  %115 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast i32** %115 to i64*
  %118 = bitcast %"class.std::__1::vector.26"* %5 to i64*
  %119 = bitcast i32** %116 to i64*
  br label %130

120:                                              ; preds = %493
  %121 = zext i32 %497 to i64
  %122 = load i64, i64* %44, align 8
  %123 = load i64, i64* %46, align 8
  %124 = sub i64 %122, %123
  %125 = ashr exact i64 %124, 2
  %126 = icmp ugt i64 %125, %121
  br i1 %126, label %127, label %498

127:                                              ; preds = %120
  %128 = inttoptr i64 %123 to i32*
  %129 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %9, align 8
  br label %130

130:                                              ; preds = %127, %103
  %131 = phi %"class.spv::Instruction"** [ %10, %103 ], [ %129, %127 ]
  %132 = phi i32* [ %50, %103 ], [ %128, %127 ]
  %133 = phi i64 [ 0, %103 ], [ %121, %127 ]
  %134 = phi i32 [ 0, %103 ], [ %497, %127 ]
  %135 = phi i32 [ 0, %103 ], [ %495, %127 ]
  %136 = phi i32 [ 0, %103 ], [ %494, %127 ]
  %137 = getelementptr inbounds i32, i32* %132, i64 %133
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %139
  %141 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %140, align 8
  %142 = icmp eq %"class.spv::Instruction"* %141, null
  br i1 %142, label %147, label %143

143:                                              ; preds = %130
  %144 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  br label %147

147:                                              ; preds = %130, %143
  %148 = phi i64 [ %146, %143 ], [ 0, %130 ]
  %149 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %148
  %150 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %149, align 8
  %151 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %150, i64 0, i32 3
  %152 = load i32, i32* %151, align 8
  %153 = add i32 %152, -20
  %154 = icmp ult i32 %153, 3
  br i1 %154, label %167, label %155

155:                                              ; preds = %147
  br i1 %142, label %160, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i64
  br label %160

160:                                              ; preds = %155, %156
  %161 = phi i64 [ %159, %156 ], [ 0, %155 ]
  %162 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %161
  %163 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %162, align 8
  %164 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %163, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %165, 32
  br i1 %166, label %167, label %222

167:                                              ; preds = %160, %147
  br i1 %110, label %168, label %219

168:                                              ; preds = %167
  %169 = load i32*, i32** %76, align 8
  %170 = load i32*, i32** %77, align 8
  %171 = icmp eq i32* %169, %170
  %172 = ptrtoint i32* %170 to i64
  br i1 %171, label %176, label %173

173:                                              ; preds = %168
  store i32 %138, i32* %169, align 4
  %174 = getelementptr inbounds i32, i32* %169, i64 1
  %175 = ptrtoint i32* %174 to i64
  store i64 %175, i64* %111, align 8
  br label %219

176:                                              ; preds = %168
  %177 = ptrtoint i32* %169 to i64
  %178 = load i64, i64* %112, align 8
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 2
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 4611686018427387903
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast %"class.std::__1::vector.26"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %184) #20
  unreachable

185:                                              ; preds = %176
  %186 = sub i64 %172, %178
  %187 = ashr exact i64 %186, 2
  %188 = icmp ult i64 %187, 2305843009213693951
  br i1 %188, label %189, label %197

189:                                              ; preds = %185
  %190 = ashr exact i64 %186, 1
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 4611686018427387903
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  tail call void @abort() #20
  unreachable

197:                                              ; preds = %194, %185
  %198 = phi i64 [ %192, %194 ], [ 4611686018427387903, %185 ]
  %199 = shl i64 %198, 2
  %200 = tail call i8* @_Znwm(i64 %199) #18
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi i8* [ %200, %197 ], [ null, %189 ]
  %205 = phi i32* [ %201, %197 ], [ null, %189 ]
  %206 = getelementptr inbounds i32, i32* %205, i64 %180
  %207 = getelementptr inbounds i32, i32* %205, i64 %203
  %208 = ptrtoint i32* %207 to i64
  store i32 %138, i32* %206, align 4
  %209 = getelementptr inbounds i32, i32* %206, i64 1
  %210 = ptrtoint i32* %209 to i64
  %211 = ptrtoint i32* %205 to i64
  %212 = icmp sgt i64 %179, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %202
  %214 = inttoptr i64 %178 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %214, i64 %179, i1 false) #17
  br label %215

215:                                              ; preds = %213, %202
  store i64 %211, i64* %112, align 8
  store i64 %210, i64* %111, align 8
  store i64 %208, i64* %113, align 8
  %216 = icmp eq i64 %178, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = inttoptr i64 %178 to i8*
  tail call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %167, %217, %215, %173
  %220 = phi i32 [ %136, %173 ], [ %136, %215 ], [ %136, %217 ], [ %138, %167 ]
  %221 = add i32 %135, 1
  br label %493

222:                                              ; preds = %160
  br i1 %142, label %227, label %223

223:                                              ; preds = %222
  %224 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  br label %227

227:                                              ; preds = %222, %223
  %228 = phi i64 [ %226, %223 ], [ 0, %222 ]
  %229 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %228
  %230 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %229, align 8
  %231 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %230, i64 0, i32 3
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 23
  br i1 %233, label %234, label %344

234:                                              ; preds = %227
  br i1 %142, label %239, label %235

235:                                              ; preds = %234
  %236 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %237 = load i32, i32* %236, align 4
  %238 = zext i32 %237 to i64
  br label %239

239:                                              ; preds = %235, %234
  %240 = phi i64 [ %238, %235 ], [ 0, %234 ]
  %241 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %240
  %242 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %241, align 8
  %243 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %242, i64 0, i32 3
  %244 = load i32, i32* %243, align 8
  switch i32 %244, label %271 [
    i32 30, label %261
    i32 28, label %250
    i32 24, label %245
    i32 23, label %245
  ]

245:                                              ; preds = %239, %239
  %246 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %242, i64 0, i32 4, i32 0, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 1
  %249 = load i32, i32* %248, align 4
  br label %271

250:                                              ; preds = %239
  %251 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %242, i64 0, i32 4, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 1
  %254 = load i32, i32* %253, align 4
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %255
  %257 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %256, align 8
  %258 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %257, i64 0, i32 4, i32 0, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = load i32, i32* %259, align 4
  br label %271

261:                                              ; preds = %239
  %262 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %242, i64 0, i32 4
  %263 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %242, i64 0, i32 4, i32 0, i32 1
  %264 = bitcast i32** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.std::__1::vector.26"* %262 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = sub i64 %265, %267
  %269 = lshr exact i64 %268, 2
  %270 = trunc i64 %269 to i32
  br label %271

271:                                              ; preds = %261, %250, %245, %239
  %272 = phi i32 [ %270, %261 ], [ %260, %250 ], [ %249, %245 ], [ 1, %239 ]
  %273 = add i32 %272, %135
  %274 = icmp ugt i32 %273, %42
  %275 = sub i32 %42, %135
  %276 = select i1 %274, i32 %275, i32 %272
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %493, label %278

278:                                              ; preds = %271, %339
  %279 = phi i32 [ %340, %339 ], [ %136, %271 ]
  %280 = phi i32 [ %341, %339 ], [ %135, %271 ]
  %281 = phi i32 [ %342, %339 ], [ 0, %271 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #17
  %282 = tail call i8* @_Znwm(i64 4) #18
  %283 = bitcast i8* %282 to i32*
  %284 = getelementptr inbounds i8, i8* %282, i64 4
  %285 = ptrtoint i8* %284 to i64
  store i32 %281, i32* %283, align 4
  %286 = ptrtoint i8* %282 to i64
  store i64 %286, i64* %118, align 8
  store i64 %285, i64* %117, align 8
  store i64 %285, i64* %119, align 8
  %287 = call i32 @_ZN3spv7Builder19createRvalueSwizzleENS_10DecorationEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %1, i32 %99, i32 %138, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %5) #17
  br i1 %110, label %288, label %339

288:                                              ; preds = %278
  %289 = load i32*, i32** %76, align 8
  %290 = load i32*, i32** %77, align 8
  %291 = icmp eq i32* %289, %290
  %292 = ptrtoint i32* %290 to i64
  br i1 %291, label %296, label %293

293:                                              ; preds = %288
  store i32 %287, i32* %289, align 4
  %294 = getelementptr inbounds i32, i32* %289, i64 1
  %295 = ptrtoint i32* %294 to i64
  store i64 %295, i64* %111, align 8
  br label %339

296:                                              ; preds = %288
  %297 = ptrtoint i32* %289 to i64
  %298 = load i64, i64* %112, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 2
  %301 = add nsw i64 %300, 1
  %302 = icmp ugt i64 %301, 4611686018427387903
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  %304 = bitcast %"class.std::__1::vector.26"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %304) #20
  unreachable

305:                                              ; preds = %296
  %306 = sub i64 %292, %298
  %307 = ashr exact i64 %306, 2
  %308 = icmp ult i64 %307, 2305843009213693951
  br i1 %308, label %309, label %317

309:                                              ; preds = %305
  %310 = ashr exact i64 %306, 1
  %311 = icmp ult i64 %310, %301
  %312 = select i1 %311, i64 %301, i64 %310
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %322, label %314

314:                                              ; preds = %309
  %315 = icmp ugt i64 %312, 4611686018427387903
  br i1 %315, label %316, label %317

316:                                              ; preds = %314
  tail call void @abort() #20
  unreachable

317:                                              ; preds = %314, %305
  %318 = phi i64 [ %312, %314 ], [ 4611686018427387903, %305 ]
  %319 = shl i64 %318, 2
  %320 = tail call i8* @_Znwm(i64 %319) #18
  %321 = bitcast i8* %320 to i32*
  br label %322

322:                                              ; preds = %317, %309
  %323 = phi i64 [ %318, %317 ], [ 0, %309 ]
  %324 = phi i8* [ %320, %317 ], [ null, %309 ]
  %325 = phi i32* [ %321, %317 ], [ null, %309 ]
  %326 = getelementptr inbounds i32, i32* %325, i64 %300
  %327 = getelementptr inbounds i32, i32* %325, i64 %323
  %328 = ptrtoint i32* %327 to i64
  store i32 %287, i32* %326, align 4
  %329 = getelementptr inbounds i32, i32* %326, i64 1
  %330 = ptrtoint i32* %329 to i64
  %331 = ptrtoint i32* %325 to i64
  %332 = icmp sgt i64 %299, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %322
  %334 = inttoptr i64 %298 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %324, i8* align 4 %334, i64 %299, i1 false) #17
  br label %335

335:                                              ; preds = %333, %322
  store i64 %331, i64* %112, align 8
  store i64 %330, i64* %111, align 8
  store i64 %328, i64* %113, align 8
  %336 = icmp eq i64 %298, 0
  br i1 %336, label %339, label %337

337:                                              ; preds = %335
  %338 = inttoptr i64 %298 to i8*
  tail call void @_ZdlPv(i8* %338) #18
  br label %339

339:                                              ; preds = %278, %337, %335, %293
  %340 = phi i32 [ %287, %278 ], [ %279, %337 ], [ %279, %335 ], [ %279, %293 ]
  %341 = add i32 %280, 1
  tail call void @_ZdlPv(i8* nonnull %282) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #17
  %342 = add nuw i32 %281, 1
  %343 = icmp ult i32 %342, %276
  br i1 %343, label %278, label %493

344:                                              ; preds = %227
  br i1 %142, label %349, label %345

345:                                              ; preds = %344
  %346 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %347 = load i32, i32* %346, align 4
  %348 = zext i32 %347 to i64
  br label %349

349:                                              ; preds = %344, %345
  %350 = phi i64 [ %348, %345 ], [ 0, %344 ]
  %351 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %350
  %352 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %351, align 8
  %353 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %352, i64 0, i32 3
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 24
  br i1 %355, label %356, label %493

356:                                              ; preds = %349
  br i1 %142, label %361, label %357

357:                                              ; preds = %356
  %358 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %359 = load i32, i32* %358, align 4
  %360 = zext i32 %359 to i64
  br label %361

361:                                              ; preds = %357, %356
  %362 = phi i64 [ %360, %357 ], [ 0, %356 ]
  %363 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %362
  %364 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %363, align 8
  %365 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %364, i64 0, i32 3
  %366 = load i32, i32* %365, align 8
  switch i32 %366, label %393 [
    i32 30, label %383
    i32 28, label %372
    i32 24, label %367
    i32 23, label %367
  ]

367:                                              ; preds = %361, %361
  %368 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %364, i64 0, i32 4, i32 0, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = getelementptr inbounds i32, i32* %369, i64 1
  %371 = load i32, i32* %370, align 4
  br label %393

372:                                              ; preds = %361
  %373 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %364, i64 0, i32 4, i32 0, i32 0
  %374 = load i32*, i32** %373, align 8
  %375 = getelementptr inbounds i32, i32* %374, i64 1
  %376 = load i32, i32* %375, align 4
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %131, i64 %377
  %379 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %378, align 8
  %380 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %379, i64 0, i32 4, i32 0, i32 0
  %381 = load i32*, i32** %380, align 8
  %382 = load i32, i32* %381, align 4
  br label %393

383:                                              ; preds = %361
  %384 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %364, i64 0, i32 4
  %385 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %364, i64 0, i32 4, i32 0, i32 1
  %386 = bitcast i32** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"class.std::__1::vector.26"* %384 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = sub i64 %387, %389
  %391 = lshr exact i64 %390, 2
  %392 = trunc i64 %391 to i32
  br label %393

393:                                              ; preds = %383, %372, %367, %361
  %394 = phi i32 [ %392, %383 ], [ %382, %372 ], [ %371, %367 ], [ 1, %361 ]
  br i1 %142, label %398, label %395

395:                                              ; preds = %393
  %396 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %141, i64 0, i32 2
  %397 = load i32, i32* %396, align 4
  br label %398

398:                                              ; preds = %395, %393
  %399 = phi i32 [ %397, %395 ], [ 0, %393 ]
  %400 = tail call i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"* %0, i32 %399) #17
  %401 = mul nsw i32 %400, %394
  %402 = add i32 %401, %135
  %403 = icmp ugt i32 %402, %42
  %404 = sub i32 %42, %135
  %405 = select i1 %403, i32 %404, i32 %401
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %493, label %407

407:                                              ; preds = %398, %487
  %408 = phi i32 [ %488, %487 ], [ %136, %398 ]
  %409 = phi i32 [ %489, %487 ], [ %135, %398 ]
  %410 = phi i32 [ %491, %487 ], [ 0, %398 ]
  %411 = phi i32 [ %490, %487 ], [ 0, %398 ]
  %412 = phi i32 [ %426, %487 ], [ 0, %398 ]
  %413 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %9, align 8
  %414 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %413, i64 %139
  %415 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %414, align 8
  %416 = icmp eq %"class.spv::Instruction"* %415, null
  br i1 %416, label %420, label %417

417:                                              ; preds = %407
  %418 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %415, i64 0, i32 2
  %419 = load i32, i32* %418, align 4
  br label %420

420:                                              ; preds = %417, %407
  %421 = phi i32 [ %419, %417 ], [ 0, %407 ]
  %422 = tail call i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"* %0, i32 %421) #17
  %423 = icmp slt i32 %411, %422
  %424 = xor i1 %423, true
  %425 = zext i1 %424 to i32
  %426 = add nuw nsw i32 %412, %425
  %427 = select i1 %423, i32 %411, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #17
  %428 = tail call i8* @_Znwm(i64 8) #18
  %429 = bitcast i8* %428 to i32*
  %430 = getelementptr inbounds i8, i8* %428, i64 4
  %431 = bitcast i8* %430 to i32*
  %432 = getelementptr inbounds i8, i8* %428, i64 8
  %433 = ptrtoint i8* %432 to i64
  store i32 %427, i32* %431, align 4
  %434 = ptrtoint i8* %428 to i64
  store i32 %426, i32* %429, align 4
  store i64 %434, i64* %108, align 8
  store i64 %433, i64* %107, align 8
  store i64 %433, i64* %109, align 8
  %435 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %138, i32 %99, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6) #17
  br i1 %110, label %436, label %487

436:                                              ; preds = %420
  %437 = load i32*, i32** %76, align 8
  %438 = load i32*, i32** %77, align 8
  %439 = icmp eq i32* %437, %438
  %440 = ptrtoint i32* %438 to i64
  br i1 %439, label %444, label %441

441:                                              ; preds = %436
  store i32 %435, i32* %437, align 4
  %442 = getelementptr inbounds i32, i32* %437, i64 1
  %443 = ptrtoint i32* %442 to i64
  store i64 %443, i64* %111, align 8
  br label %487

444:                                              ; preds = %436
  %445 = ptrtoint i32* %437 to i64
  %446 = load i64, i64* %112, align 8
  %447 = sub i64 %445, %446
  %448 = ashr exact i64 %447, 2
  %449 = add nsw i64 %448, 1
  %450 = icmp ugt i64 %449, 4611686018427387903
  br i1 %450, label %451, label %453

451:                                              ; preds = %444
  %452 = bitcast %"class.std::__1::vector.26"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %452) #20
  unreachable

453:                                              ; preds = %444
  %454 = sub i64 %440, %446
  %455 = ashr exact i64 %454, 2
  %456 = icmp ult i64 %455, 2305843009213693951
  br i1 %456, label %457, label %465

457:                                              ; preds = %453
  %458 = ashr exact i64 %454, 1
  %459 = icmp ult i64 %458, %449
  %460 = select i1 %459, i64 %449, i64 %458
  %461 = icmp eq i64 %460, 0
  br i1 %461, label %470, label %462

462:                                              ; preds = %457
  %463 = icmp ugt i64 %460, 4611686018427387903
  br i1 %463, label %464, label %465

464:                                              ; preds = %462
  tail call void @abort() #20
  unreachable

465:                                              ; preds = %462, %453
  %466 = phi i64 [ %460, %462 ], [ 4611686018427387903, %453 ]
  %467 = shl i64 %466, 2
  %468 = tail call i8* @_Znwm(i64 %467) #18
  %469 = bitcast i8* %468 to i32*
  br label %470

470:                                              ; preds = %465, %457
  %471 = phi i64 [ %466, %465 ], [ 0, %457 ]
  %472 = phi i8* [ %468, %465 ], [ null, %457 ]
  %473 = phi i32* [ %469, %465 ], [ null, %457 ]
  %474 = getelementptr inbounds i32, i32* %473, i64 %448
  %475 = getelementptr inbounds i32, i32* %473, i64 %471
  %476 = ptrtoint i32* %475 to i64
  store i32 %435, i32* %474, align 4
  %477 = getelementptr inbounds i32, i32* %474, i64 1
  %478 = ptrtoint i32* %477 to i64
  %479 = ptrtoint i32* %473 to i64
  %480 = icmp sgt i64 %447, 0
  br i1 %480, label %481, label %483

481:                                              ; preds = %470
  %482 = inttoptr i64 %446 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %472, i8* align 4 %482, i64 %447, i1 false) #17
  br label %483

483:                                              ; preds = %481, %470
  store i64 %479, i64* %112, align 8
  store i64 %478, i64* %111, align 8
  store i64 %476, i64* %113, align 8
  %484 = icmp eq i64 %446, 0
  br i1 %484, label %487, label %485

485:                                              ; preds = %483
  %486 = inttoptr i64 %446 to i8*
  tail call void @_ZdlPv(i8* %486) #18
  br label %487

487:                                              ; preds = %420, %485, %483, %441
  %488 = phi i32 [ %408, %483 ], [ %408, %485 ], [ %408, %441 ], [ %435, %420 ]
  %489 = add i32 %409, 1
  %490 = add nsw i32 %427, 1
  tail call void @_ZdlPv(i8* nonnull %428) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #17
  %491 = add nuw i32 %410, 1
  %492 = icmp ult i32 %491, %405
  br i1 %492, label %407, label %493

493:                                              ; preds = %487, %339, %398, %271, %349, %219
  %494 = phi i32 [ %220, %219 ], [ %136, %349 ], [ %136, %271 ], [ %136, %398 ], [ %340, %339 ], [ %488, %487 ]
  %495 = phi i32 [ %221, %219 ], [ %135, %349 ], [ %135, %271 ], [ %135, %398 ], [ %341, %339 ], [ %489, %487 ]
  %496 = icmp ult i32 %495, %42
  %497 = add i32 %134, 1
  br i1 %496, label %120, label %498

498:                                              ; preds = %120, %493
  %499 = load i64, i64* %111, align 8
  %500 = load i64, i64* %112, align 8
  %501 = icmp eq i64 %499, %500
  br i1 %501, label %504, label %502

502:                                              ; preds = %498
  %503 = call i32 @_ZN3spv7Builder24createCompositeConstructEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %3, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %7)
  br label %504

504:                                              ; preds = %498, %502
  %505 = phi i32 [ %494, %498 ], [ %503, %502 ]
  %506 = icmp ne i32 %1, 2147483647
  %507 = icmp ne i32 %505, 0
  %508 = and i1 %506, %507
  br i1 %508, label %509, label %510

509:                                              ; preds = %504
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %505, i32 %1, i32 -1) #17
  br label %510

510:                                              ; preds = %101, %504, %509
  %511 = phi i32 [ 0, %101 ], [ %505, %504 ], [ %505, %509 ]
  %512 = phi i64* [ %102, %101 ], [ %111, %504 ], [ %111, %509 ]
  %513 = load i32*, i32** %75, align 8
  %514 = icmp eq i32* %513, null
  br i1 %514, label %518, label %515

515:                                              ; preds = %510
  %516 = ptrtoint i32* %513 to i64
  store i64 %516, i64* %512, align 8
  %517 = bitcast i32* %513 to i8*
  tail call void @_ZdlPv(i8* %517) #18
  br label %518

518:                                              ; preds = %510, %515
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #17
  br label %519

519:                                              ; preds = %518, %71
  %520 = phi i32 [ %72, %71 ], [ %511, %518 ]
  ret i32 %520
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder23createMatrixConstructorENS_10DecorationERKNSt3__16vectorIjNS2_9allocatorIjEEEEj(%"class.spv::Builder"*, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::vector.26", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = alloca %"class.std::__1::vector.26", align 8
  %8 = alloca [4 x [4 x i32]], align 16
  %9 = alloca %"class.std::__1::vector.26", align 8
  %10 = alloca %"class.std::__1::vector.26", align 8
  %11 = alloca %"class.std::__1::vector.26", align 8
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %13 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  br label %14

14:                                               ; preds = %31, %4
  %15 = phi i32 [ %3, %4 ], [ %33, %31 ]
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %13, i64 %16
  %18 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %34 [
    i32 19, label %21
    i32 20, label %21
    i32 21, label %21
    i32 22, label %21
    i32 30, label %21
    i32 23, label %24
    i32 24, label %24
    i32 28, label %24
    i32 29, label %24
    i32 32, label %27
  ]

21:                                               ; preds = %14, %14, %14, %14, %14
  %22 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  br label %34

24:                                               ; preds = %14, %14, %14, %14
  %25 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %18, i64 0, i32 4, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %31

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %18, i64 0, i32 4, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi i32* [ %30, %27 ], [ %26, %24 ]
  %33 = load i32, i32* %32, align 4
  br label %14

34:                                               ; preds = %14, %21
  %35 = phi i32 [ %23, %21 ], [ 0, %14 ]
  %36 = zext i32 %3 to i64
  %37 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %13, i64 %36
  %38 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %37, align 8
  %39 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %67 [
    i32 30, label %57
    i32 28, label %46
    i32 24, label %41
    i32 23, label %41
  ]

41:                                               ; preds = %34, %34
  %42 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 4, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  br label %67

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 4, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 1
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %13, i64 %51
  %53 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %52, align 8
  %54 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 4, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = load i32, i32* %55, align 4
  br label %67

57:                                               ; preds = %34
  %58 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 4
  %59 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %38, i64 0, i32 4, i32 0, i32 1
  %60 = bitcast i32** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.26"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = lshr exact i64 %64, 2
  %66 = trunc i64 %65 to i32
  br label %67

67:                                               ; preds = %34, %41, %46, %57
  %68 = phi i32 [ %66, %57 ], [ %56, %46 ], [ %45, %41 ], [ 1, %34 ]
  %69 = tail call i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"* %0, i32 %3)
  %70 = zext i32 %35 to i64
  %71 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %70
  %73 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %72, align 8
  %74 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %73, i64 0, i32 4, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %80
  %82 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %81, align 8
  %83 = icmp eq %"class.spv::Instruction"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %67
  %85 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  br label %88

88:                                               ; preds = %67, %84
  %89 = phi i64 [ %87, %84 ], [ 0, %67 ]
  %90 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %89
  %91 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %90, align 8
  %92 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %91, i64 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 24
  br i1 %94, label %95, label %446

95:                                               ; preds = %88
  br i1 %83, label %100, label %96

96:                                               ; preds = %95
  %97 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  br label %100

100:                                              ; preds = %96, %95
  %101 = phi i64 [ %99, %96 ], [ 0, %95 ]
  %102 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %101
  %103 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %102, align 8
  %104 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %103, i64 0, i32 3
  %105 = load i32, i32* %104, align 8
  switch i32 %105, label %132 [
    i32 30, label %122
    i32 28, label %111
    i32 24, label %106
    i32 23, label %106
  ]

106:                                              ; preds = %100, %100
  %107 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %103, i64 0, i32 4, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 1
  %110 = load i32, i32* %109, align 4
  br label %132

111:                                              ; preds = %100
  %112 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %103, i64 0, i32 4, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 1
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %71, i64 %116
  %118 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %117, align 8
  %119 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %118, i64 0, i32 4, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = load i32, i32* %120, align 4
  br label %132

122:                                              ; preds = %100
  %123 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %103, i64 0, i32 4
  %124 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %103, i64 0, i32 4, i32 0, i32 1
  %125 = bitcast i32** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.std::__1::vector.26"* %123 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %126, %128
  %130 = lshr exact i64 %129, 2
  %131 = trunc i64 %130 to i32
  br label %132

132:                                              ; preds = %100, %106, %111, %122
  %133 = phi i32 [ %131, %122 ], [ %121, %111 ], [ %110, %106 ], [ 1, %100 ]
  %134 = icmp slt i32 %133, %68
  br i1 %134, label %446, label %135

135:                                              ; preds = %132
  br i1 %83, label %139, label %136

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %82, i64 0, i32 2
  %138 = load i32, i32* %137, align 4
  br label %139

139:                                              ; preds = %135, %136
  %140 = phi i32 [ %138, %136 ], [ 0, %135 ]
  %141 = tail call i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"* %0, i32 %140) #17
  %142 = icmp slt i32 %141, %69
  br i1 %142, label %446, label %143

143:                                              ; preds = %139
  %144 = load i32*, i32** %77, align 8
  %145 = load i32, i32* %144, align 4
  %146 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %147 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 %36
  %148 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %147, align 8
  %149 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %148, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  switch i32 %150, label %164 [
    i32 23, label %151
    i32 24, label %151
    i32 28, label %151
    i32 29, label %151
    i32 5358, label %151
    i32 32, label %154
    i32 30, label %158
  ]

151:                                              ; preds = %143, %143, %143, %143, %143
  %152 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %148, i64 0, i32 4, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  br label %161

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %148, i64 0, i32 4, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 1
  br label %161

158:                                              ; preds = %143
  %159 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %148, i64 0, i32 4, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  br label %161

161:                                              ; preds = %158, %154, %151
  %162 = phi i32* [ %153, %151 ], [ %157, %154 ], [ %160, %158 ]
  %163 = load i32, i32* %162, align 4
  br label %164

164:                                              ; preds = %161, %143
  %165 = phi i32 [ 0, %143 ], [ %163, %161 ]
  %166 = zext i32 %145 to i64
  %167 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 %166
  %168 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %167, align 8
  %169 = icmp eq %"class.spv::Instruction"* %168, null
  br i1 %169, label %174, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %168, i64 0, i32 2
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  br label %174

174:                                              ; preds = %164, %170
  %175 = phi i64 [ %173, %170 ], [ 0, %164 ]
  %176 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %146, i64 %175
  %177 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %176, align 8
  %178 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %177, i64 0, i32 3
  %179 = load i32, i32* %178, align 8
  switch i32 %179, label %193 [
    i32 23, label %180
    i32 24, label %180
    i32 28, label %180
    i32 29, label %180
    i32 5358, label %180
    i32 32, label %183
    i32 30, label %187
  ]

180:                                              ; preds = %174, %174, %174, %174, %174
  %181 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %177, i64 0, i32 4, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  br label %190

183:                                              ; preds = %174
  %184 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %177, i64 0, i32 4, i32 0, i32 0
  %185 = load i32*, i32** %184, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 1
  br label %190

187:                                              ; preds = %174
  %188 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %177, i64 0, i32 4, i32 0, i32 0
  %189 = load i32*, i32** %188, align 8
  br label %190

190:                                              ; preds = %187, %183, %180
  %191 = phi i32* [ %182, %180 ], [ %186, %183 ], [ %189, %187 ]
  %192 = load i32, i32* %191, align 4
  br label %193

193:                                              ; preds = %190, %174
  %194 = phi i32 [ 0, %174 ], [ %192, %190 ]
  %195 = bitcast %"class.std::__1::vector.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #17
  %196 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 1
  %198 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 24, i1 false) #17
  %199 = icmp sgt i32 %69, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %193
  %201 = bitcast i32** %197 to i64*
  %202 = bitcast %"class.std::__1::vector.26"* %5 to i64*
  %203 = bitcast i32** %198 to i64*
  br label %222

204:                                              ; preds = %279, %193
  %205 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #17
  %206 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %208 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 0, i64 24, i1 false) #17
  %209 = icmp sgt i32 %68, 0
  br i1 %209, label %210, label %286

210:                                              ; preds = %204
  %211 = bitcast %"class.std::__1::vector.26"* %7 to i8*
  %212 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 1
  %214 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %215 = bitcast i32** %213 to i64*
  %216 = bitcast %"class.std::__1::vector.26"* %7 to i64*
  %217 = bitcast i32** %214 to i64*
  %218 = icmp ne i32 %1, 2147483647
  %219 = bitcast i32** %207 to i64*
  %220 = bitcast %"class.std::__1::vector.26"* %6 to i64*
  %221 = bitcast i32** %208 to i64*
  br label %307

222:                                              ; preds = %284, %200
  %223 = phi i64 [ 0, %200 ], [ %280, %284 ]
  %224 = phi i32* [ null, %200 ], [ %285, %284 ]
  %225 = phi i32* [ null, %200 ], [ %281, %284 ]
  %226 = phi i32 [ 0, %200 ], [ %282, %284 ]
  %227 = icmp ult i32* %225, %224
  %228 = ptrtoint i32* %224 to i64
  br i1 %227, label %229, label %232

229:                                              ; preds = %222
  store i32 %226, i32* %225, align 4
  %230 = getelementptr inbounds i32, i32* %225, i64 1
  %231 = ptrtoint i32* %230 to i64
  store i64 %231, i64* %201, align 8
  br label %279

232:                                              ; preds = %222
  %233 = ptrtoint i32* %225 to i64
  %234 = load i64, i64* %202, align 8
  %235 = sub i64 %233, %234
  %236 = ashr exact i64 %235, 2
  %237 = add nsw i64 %236, 1
  %238 = icmp ugt i64 %237, 4611686018427387903
  br i1 %238, label %239, label %241

239:                                              ; preds = %232
  %240 = bitcast %"class.std::__1::vector.26"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %240) #20
  unreachable

241:                                              ; preds = %232
  %242 = sub i64 %228, %234
  %243 = ashr exact i64 %242, 2
  %244 = icmp ult i64 %243, 2305843009213693951
  br i1 %244, label %245, label %253

245:                                              ; preds = %241
  %246 = ashr exact i64 %242, 1
  %247 = icmp ult i64 %246, %237
  %248 = select i1 %247, i64 %237, i64 %246
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %258, label %250

250:                                              ; preds = %245
  %251 = icmp ugt i64 %248, 4611686018427387903
  br i1 %251, label %252, label %253

252:                                              ; preds = %250
  tail call void @abort() #20
  unreachable

253:                                              ; preds = %250, %241
  %254 = phi i64 [ %248, %250 ], [ 4611686018427387903, %241 ]
  %255 = shl i64 %254, 2
  %256 = tail call i8* @_Znwm(i64 %255) #18
  %257 = bitcast i8* %256 to i32*
  br label %258

258:                                              ; preds = %253, %245
  %259 = phi i64 [ %254, %253 ], [ 0, %245 ]
  %260 = phi i32* [ %257, %253 ], [ null, %245 ]
  %261 = getelementptr inbounds i32, i32* %260, i64 %236
  %262 = getelementptr inbounds i32, i32* %260, i64 %259
  %263 = ptrtoint i32* %262 to i64
  store i32 %226, i32* %261, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 1
  %265 = ptrtoint i32* %264 to i64
  %266 = sub i64 %223, %234
  %267 = ashr exact i64 %266, 2
  %268 = sub nsw i64 0, %267
  %269 = getelementptr inbounds i32, i32* %261, i64 %268
  %270 = ptrtoint i32* %269 to i64
  %271 = icmp sgt i64 %266, 0
  br i1 %271, label %272, label %275

272:                                              ; preds = %258
  %273 = bitcast i32* %269 to i8*
  %274 = inttoptr i64 %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %273, i8* align 4 %274, i64 %266, i1 false) #17
  br label %275

275:                                              ; preds = %272, %258
  store i64 %270, i64* %202, align 8
  store i64 %265, i64* %201, align 8
  store i64 %263, i64* %203, align 8
  %276 = icmp eq i64 %234, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %275
  %278 = inttoptr i64 %234 to i8*
  tail call void @_ZdlPv(i8* %278) #18
  br label %279

279:                                              ; preds = %229, %275, %277
  %280 = phi i64 [ %231, %229 ], [ %265, %275 ], [ %265, %277 ]
  %281 = phi i32* [ %230, %229 ], [ %264, %275 ], [ %264, %277 ]
  %282 = add nuw nsw i32 %226, 1
  %283 = icmp eq i32 %282, %69
  br i1 %283, label %204, label %284

284:                                              ; preds = %279
  %285 = load i32*, i32** %198, align 8
  br label %222

286:                                              ; preds = %443, %204
  %287 = call i32 @_ZN3spv7Builder24createCompositeConstructEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %3, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6)
  %288 = icmp ne i32 %1, 2147483647
  %289 = icmp ne i32 %287, 0
  %290 = and i1 %288, %289
  br i1 %290, label %291, label %292

291:                                              ; preds = %286
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %287, i32 %1, i32 -1) #17
  br label %292

292:                                              ; preds = %286, %291
  %293 = load i32*, i32** %206, align 8
  %294 = icmp eq i32* %293, null
  br i1 %294, label %299, label %295

295:                                              ; preds = %292
  %296 = ptrtoint i32* %293 to i64
  %297 = bitcast i32** %207 to i64*
  store i64 %296, i64* %297, align 8
  %298 = bitcast i32* %293 to i8*
  tail call void @_ZdlPv(i8* %298) #18
  br label %299

299:                                              ; preds = %292, %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #17
  %300 = load i32*, i32** %196, align 8
  %301 = icmp eq i32* %300, null
  br i1 %301, label %306, label %302

302:                                              ; preds = %299
  %303 = ptrtoint i32* %300 to i64
  %304 = bitcast i32** %197 to i64*
  store i64 %303, i64* %304, align 8
  %305 = bitcast i32* %300 to i8*
  tail call void @_ZdlPv(i8* %305) #18
  br label %306

306:                                              ; preds = %299, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #17
  br label %998

307:                                              ; preds = %443, %210
  %308 = phi i64 [ 0, %210 ], [ %436, %443 ]
  %309 = phi i32* [ null, %210 ], [ %437, %443 ]
  %310 = phi i32 [ 0, %210 ], [ %444, %443 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #17
  %311 = tail call i8* @_Znwm(i64 4) #18
  %312 = bitcast i8* %311 to i32*
  %313 = getelementptr inbounds i8, i8* %311, i64 4
  %314 = ptrtoint i8* %313 to i64
  store i32 %310, i32* %312, align 4
  %315 = ptrtoint i8* %311 to i64
  store i64 %315, i64* %216, align 8
  store i64 %314, i64* %215, align 8
  store i64 %314, i64* %217, align 8
  %316 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %145, i32 %194, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %7)
  %317 = icmp ne i32 %316, 0
  %318 = and i1 %218, %317
  br i1 %318, label %319, label %320

319:                                              ; preds = %307
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %316, i32 %1, i32 -1) #17
  br label %320

320:                                              ; preds = %307, %319
  %321 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %322 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %321, i64 %166
  %323 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %322, align 8
  %324 = icmp eq %"class.spv::Instruction"* %323, null
  br i1 %324, label %328, label %325

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %323, i64 0, i32 2
  %327 = load i32, i32* %326, align 4
  br label %328

328:                                              ; preds = %320, %325
  %329 = phi i32 [ %327, %325 ], [ 0, %320 ]
  %330 = tail call i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"* %0, i32 %329) #17
  %331 = icmp eq i32 %69, %330
  br i1 %331, label %384, label %332

332:                                              ; preds = %328
  %333 = call i32 @_ZN3spv7Builder19createRvalueSwizzleENS_10DecorationEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %1, i32 %165, i32 %316, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %5)
  %334 = load i32*, i32** %207, align 8
  %335 = load i32*, i32** %208, align 8
  %336 = icmp ult i32* %334, %335
  %337 = ptrtoint i32* %335 to i64
  br i1 %336, label %338, label %341

338:                                              ; preds = %332
  store i32 %333, i32* %334, align 4
  %339 = getelementptr inbounds i32, i32* %334, i64 1
  %340 = ptrtoint i32* %339 to i64
  store i64 %340, i64* %219, align 8
  br label %435

341:                                              ; preds = %332
  %342 = ptrtoint i32* %334 to i64
  %343 = load i64, i64* %220, align 8
  %344 = sub i64 %342, %343
  %345 = ashr exact i64 %344, 2
  %346 = add nsw i64 %345, 1
  %347 = icmp ugt i64 %346, 4611686018427387903
  br i1 %347, label %348, label %350

348:                                              ; preds = %341
  %349 = bitcast %"class.std::__1::vector.26"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %349) #20
  unreachable

350:                                              ; preds = %341
  %351 = sub i64 %337, %343
  %352 = ashr exact i64 %351, 2
  %353 = icmp ult i64 %352, 2305843009213693951
  br i1 %353, label %354, label %362

354:                                              ; preds = %350
  %355 = ashr exact i64 %351, 1
  %356 = icmp ult i64 %355, %346
  %357 = select i1 %356, i64 %346, i64 %355
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %367, label %359

359:                                              ; preds = %354
  %360 = icmp ugt i64 %357, 4611686018427387903
  br i1 %360, label %361, label %362

361:                                              ; preds = %359
  tail call void @abort() #20
  unreachable

362:                                              ; preds = %359, %350
  %363 = phi i64 [ %357, %359 ], [ 4611686018427387903, %350 ]
  %364 = shl i64 %363, 2
  %365 = tail call i8* @_Znwm(i64 %364) #18
  %366 = bitcast i8* %365 to i32*
  br label %367

367:                                              ; preds = %362, %354
  %368 = phi i64 [ %363, %362 ], [ 0, %354 ]
  %369 = phi i8* [ %365, %362 ], [ null, %354 ]
  %370 = phi i32* [ %366, %362 ], [ null, %354 ]
  %371 = getelementptr inbounds i32, i32* %370, i64 %345
  %372 = getelementptr inbounds i32, i32* %370, i64 %368
  %373 = ptrtoint i32* %372 to i64
  store i32 %333, i32* %371, align 4
  %374 = getelementptr inbounds i32, i32* %371, i64 1
  %375 = ptrtoint i32* %374 to i64
  %376 = ptrtoint i32* %370 to i64
  %377 = icmp sgt i64 %344, 0
  br i1 %377, label %378, label %380

378:                                              ; preds = %367
  %379 = inttoptr i64 %343 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %369, i8* align 4 %379, i64 %344, i1 false) #17
  br label %380

380:                                              ; preds = %378, %367
  store i64 %376, i64* %220, align 8
  store i64 %375, i64* %219, align 8
  store i64 %373, i64* %221, align 8
  %381 = icmp eq i64 %343, 0
  br i1 %381, label %435, label %382

382:                                              ; preds = %380
  %383 = inttoptr i64 %343 to i8*
  tail call void @_ZdlPv(i8* %383) #18
  br label %435

384:                                              ; preds = %328
  %385 = load i32*, i32** %208, align 8
  %386 = icmp eq i32* %309, %385
  br i1 %386, label %390, label %387

387:                                              ; preds = %384
  store i32 %316, i32* %309, align 4
  %388 = getelementptr inbounds i32, i32* %309, i64 1
  %389 = ptrtoint i32* %388 to i64
  store i64 %389, i64* %219, align 8
  br label %435

390:                                              ; preds = %384
  %391 = ptrtoint i32* %385 to i64
  %392 = load i64, i64* %220, align 8
  %393 = sub i64 %391, %392
  %394 = ashr exact i64 %393, 2
  %395 = add nsw i64 %394, 1
  %396 = icmp ugt i64 %395, 4611686018427387903
  br i1 %396, label %397, label %399

397:                                              ; preds = %390
  %398 = bitcast %"class.std::__1::vector.26"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %398) #20
  unreachable

399:                                              ; preds = %390
  %400 = icmp ult i64 %394, 2305843009213693951
  br i1 %400, label %401, label %409

401:                                              ; preds = %399
  %402 = ashr exact i64 %393, 1
  %403 = icmp ult i64 %402, %395
  %404 = select i1 %403, i64 %395, i64 %402
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %414, label %406

406:                                              ; preds = %401
  %407 = icmp ugt i64 %404, 4611686018427387903
  br i1 %407, label %408, label %409

408:                                              ; preds = %406
  tail call void @abort() #20
  unreachable

409:                                              ; preds = %406, %399
  %410 = phi i64 [ %404, %406 ], [ 4611686018427387903, %399 ]
  %411 = shl i64 %410, 2
  %412 = tail call i8* @_Znwm(i64 %411) #18
  %413 = bitcast i8* %412 to i32*
  br label %414

414:                                              ; preds = %409, %401
  %415 = phi i64 [ %410, %409 ], [ 0, %401 ]
  %416 = phi i32* [ %413, %409 ], [ null, %401 ]
  %417 = getelementptr inbounds i32, i32* %416, i64 %394
  %418 = getelementptr inbounds i32, i32* %416, i64 %415
  %419 = ptrtoint i32* %418 to i64
  store i32 %316, i32* %417, align 4
  %420 = getelementptr inbounds i32, i32* %417, i64 1
  %421 = ptrtoint i32* %420 to i64
  %422 = sub i64 %308, %392
  %423 = ashr exact i64 %422, 2
  %424 = sub nsw i64 0, %423
  %425 = getelementptr inbounds i32, i32* %417, i64 %424
  %426 = ptrtoint i32* %425 to i64
  %427 = icmp sgt i64 %422, 0
  br i1 %427, label %428, label %431

428:                                              ; preds = %414
  %429 = bitcast i32* %425 to i8*
  %430 = inttoptr i64 %392 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %429, i8* align 4 %430, i64 %422, i1 false) #17
  br label %431

431:                                              ; preds = %428, %414
  store i64 %426, i64* %220, align 8
  store i64 %421, i64* %219, align 8
  store i64 %419, i64* %221, align 8
  %432 = icmp eq i64 %392, 0
  br i1 %432, label %435, label %433

433:                                              ; preds = %431
  %434 = inttoptr i64 %392 to i8*
  tail call void @_ZdlPv(i8* %434) #18
  br label %435

435:                                              ; preds = %433, %431, %387, %382, %380, %338
  %436 = phi i64 [ %421, %433 ], [ %421, %431 ], [ %389, %387 ], [ %375, %382 ], [ %375, %380 ], [ %340, %338 ]
  %437 = phi i32* [ %420, %433 ], [ %420, %431 ], [ %388, %387 ], [ %374, %382 ], [ %374, %380 ], [ %339, %338 ]
  %438 = load i32*, i32** %212, align 8
  %439 = icmp eq i32* %438, null
  br i1 %439, label %443, label %440

440:                                              ; preds = %435
  %441 = ptrtoint i32* %438 to i64
  store i64 %441, i64* %215, align 8
  %442 = bitcast i32* %438 to i8*
  tail call void @_ZdlPv(i8* %442) #18
  br label %443

443:                                              ; preds = %435, %440
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #17
  %444 = add nuw nsw i32 %310, 1
  %445 = icmp eq i32 %444, %68
  br i1 %445, label %286, label %307

446:                                              ; preds = %139, %132, %88
  %447 = bitcast [4 x [4 x i32]]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %447) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %447, i8 -86, i64 64, i1 false)
  %448 = icmp eq i32 %76, 64
  br i1 %448, label %449, label %452

449:                                              ; preds = %446
  %450 = tail call i32 @_ZN3spv7Builder18makeDoubleConstantEdb(%"class.spv::Builder"* %0, double 1.000000e+00, i1 zeroext false)
  %451 = tail call i32 @_ZN3spv7Builder18makeDoubleConstantEdb(%"class.spv::Builder"* %0, double 0.000000e+00, i1 zeroext false)
  br label %455

452:                                              ; preds = %446
  %453 = tail call i32 @_ZN3spv7Builder17makeFloatConstantEfb(%"class.spv::Builder"* %0, float 1.000000e+00, i1 zeroext false)
  %454 = tail call i32 @_ZN3spv7Builder17makeFloatConstantEfb(%"class.spv::Builder"* %0, float 0.000000e+00, i1 zeroext false)
  br label %455

455:                                              ; preds = %452, %449
  %456 = phi i32 [ %450, %449 ], [ %453, %452 ]
  %457 = phi i32 [ %451, %449 ], [ %454, %452 ]
  %458 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 0, i64 0
  store i32 %456, i32* %458, align 16
  %459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 0, i64 1
  %460 = insertelement <4 x i32> undef, i32 %457, i32 0
  %461 = shufflevector <4 x i32> %460, <4 x i32> undef, <4 x i32> zeroinitializer
  %462 = bitcast i32* %459 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %462, align 4
  %463 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 1, i64 1
  store i32 %456, i32* %463, align 4
  %464 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 1, i64 2
  %465 = bitcast i32* %464 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %465, align 8
  %466 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 2, i64 2
  store i32 %456, i32* %466, align 8
  %467 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 2, i64 3
  %468 = bitcast i32* %467 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %468, align 4
  %469 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 3, i64 3
  store i32 %456, i32* %469, align 4
  %470 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %471 = bitcast i32** %470 to i64*
  %472 = load i64, i64* %471, align 8
  %473 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = sub i64 %472, %474
  %476 = icmp eq i64 %475, 4
  %477 = inttoptr i64 %474 to i32*
  br i1 %476, label %484, label %478

478:                                              ; preds = %455
  %479 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %480 = load i32, i32* %477, align 4
  %481 = zext i32 %480 to i64
  %482 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %479, i64 %481
  %483 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %482, align 8
  br label %504

484:                                              ; preds = %455
  %485 = load i32, i32* %477, align 4
  %486 = zext i32 %485 to i64
  %487 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %488 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %487, i64 %486
  %489 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %488, align 8
  %490 = icmp eq %"class.spv::Instruction"* %489, null
  br i1 %490, label %495, label %491

491:                                              ; preds = %484
  %492 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %489, i64 0, i32 2
  %493 = load i32, i32* %492, align 4
  %494 = zext i32 %493 to i64
  br label %495

495:                                              ; preds = %484, %491
  %496 = phi i64 [ %494, %491 ], [ 0, %484 ]
  %497 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %487, i64 %496
  %498 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %497, align 8
  %499 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %498, i64 0, i32 3
  %500 = load i32, i32* %499, align 8
  %501 = add i32 %500, -20
  %502 = icmp ult i32 %501, 3
  br i1 %502, label %503, label %504

503:                                              ; preds = %495
  store i32 %485, i32* %458, align 16
  store i32 %485, i32* %463, align 4
  store i32 %485, i32* %466, align 8
  store i32 %485, i32* %469, align 4
  br label %812

504:                                              ; preds = %478, %495
  %505 = phi %"class.spv::Instruction"* [ %483, %478 ], [ %489, %495 ]
  %506 = phi i32 [ %480, %478 ], [ %485, %495 ]
  %507 = phi %"class.spv::Instruction"** [ %479, %478 ], [ %487, %495 ]
  %508 = icmp eq %"class.spv::Instruction"* %505, null
  br i1 %508, label %513, label %509

509:                                              ; preds = %504
  %510 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %505, i64 0, i32 2
  %511 = load i32, i32* %510, align 4
  %512 = zext i32 %511 to i64
  br label %513

513:                                              ; preds = %504, %509
  %514 = phi i64 [ %512, %509 ], [ 0, %504 ]
  %515 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %507, i64 %514
  %516 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %515, align 8
  %517 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %516, i64 0, i32 3
  %518 = load i32, i32* %517, align 8
  %519 = icmp eq i32 %518, 24
  br i1 %519, label %526, label %520

520:                                              ; preds = %513
  %521 = lshr exact i64 %475, 2
  %522 = trunc i64 %521 to i32
  %523 = icmp sgt i32 %522, 0
  br i1 %523, label %524, label %812

524:                                              ; preds = %520
  %525 = icmp ne i32 %1, 2147483647
  br label %681

526:                                              ; preds = %513
  br i1 %508, label %531, label %527

527:                                              ; preds = %526
  %528 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %505, i64 0, i32 2
  %529 = load i32, i32* %528, align 4
  %530 = zext i32 %529 to i64
  br label %531

531:                                              ; preds = %527, %526
  %532 = phi i64 [ %530, %527 ], [ 0, %526 ]
  %533 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %507, i64 %532
  %534 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %533, align 8
  %535 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %534, i64 0, i32 3
  %536 = load i32, i32* %535, align 8
  switch i32 %536, label %563 [
    i32 30, label %553
    i32 28, label %542
    i32 24, label %537
    i32 23, label %537
  ]

537:                                              ; preds = %531, %531
  %538 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %534, i64 0, i32 4, i32 0, i32 0
  %539 = load i32*, i32** %538, align 8
  %540 = getelementptr inbounds i32, i32* %539, i64 1
  %541 = load i32, i32* %540, align 4
  br label %563

542:                                              ; preds = %531
  %543 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %534, i64 0, i32 4, i32 0, i32 0
  %544 = load i32*, i32** %543, align 8
  %545 = getelementptr inbounds i32, i32* %544, i64 1
  %546 = load i32, i32* %545, align 4
  %547 = zext i32 %546 to i64
  %548 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %507, i64 %547
  %549 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %548, align 8
  %550 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %549, i64 0, i32 4, i32 0, i32 0
  %551 = load i32*, i32** %550, align 8
  %552 = load i32, i32* %551, align 4
  br label %563

553:                                              ; preds = %531
  %554 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %534, i64 0, i32 4
  %555 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %534, i64 0, i32 4, i32 0, i32 1
  %556 = bitcast i32** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.std::__1::vector.26"* %554 to i64*
  %559 = load i64, i64* %558, align 8
  %560 = sub i64 %557, %559
  %561 = lshr exact i64 %560, 2
  %562 = trunc i64 %561 to i32
  br label %563

563:                                              ; preds = %531, %537, %542, %553
  %564 = phi i32 [ %562, %553 ], [ %552, %542 ], [ %541, %537 ], [ 1, %531 ]
  %565 = icmp slt i32 %564, %68
  %566 = select i1 %565, i32 %564, i32 %68
  br i1 %508, label %570, label %567

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %505, i64 0, i32 2
  %569 = load i32, i32* %568, align 4
  br label %570

570:                                              ; preds = %563, %567
  %571 = phi i32 [ %569, %567 ], [ 0, %563 ]
  %572 = tail call i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"* %0, i32 %571) #17
  %573 = icmp slt i32 %572, %69
  %574 = select i1 %573, i32 %572, i32 %69
  %575 = icmp sgt i32 %566, 0
  br i1 %575, label %576, label %812

576:                                              ; preds = %570
  %577 = bitcast %"class.std::__1::vector.26"* %9 to i8*
  %578 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %9, i64 0, i32 0, i32 0
  %579 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %9, i64 0, i32 0, i32 1
  %580 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %581 = bitcast i32** %579 to i64*
  %582 = bitcast %"class.std::__1::vector.26"* %9 to i64*
  %583 = bitcast i32** %580 to i64*
  %584 = icmp sgt i32 %574, 0
  %585 = icmp ne i32 %1, 2147483647
  %586 = sext i32 %574 to i64
  %587 = sext i32 %566 to i64
  br label %588

588:                                              ; preds = %576, %605
  %589 = phi i64 [ 0, %576 ], [ %606, %605 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %577) #17
  %590 = tail call i8* @_Znwm(i64 4) #18
  %591 = bitcast i8* %590 to i32*
  %592 = getelementptr inbounds i8, i8* %590, i64 4
  %593 = bitcast i8* %592 to i32*
  %594 = ptrtoint i8* %592 to i64
  %595 = trunc i64 %589 to i32
  store i32 %595, i32* %591, align 4
  %596 = ptrtoint i8* %590 to i64
  store i64 %596, i64* %582, align 8
  store i64 %594, i64* %581, align 8
  store i64 %594, i64* %583, align 8
  br i1 %584, label %608, label %601

597:                                              ; preds = %676
  %598 = load i32*, i32** %578, align 8
  %599 = bitcast i32* %598 to i8*
  %600 = icmp eq i32* %598, null
  br i1 %600, label %605, label %601

601:                                              ; preds = %588, %597
  %602 = phi i32* [ %598, %597 ], [ %591, %588 ]
  %603 = phi i8* [ %599, %597 ], [ %590, %588 ]
  %604 = ptrtoint i32* %602 to i64
  store i64 %604, i64* %581, align 8
  tail call void @_ZdlPv(i8* %603) #18
  br label %605

605:                                              ; preds = %597, %601
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %577) #17
  %606 = add nuw nsw i64 %589, 1
  %607 = icmp slt i64 %606, %587
  br i1 %607, label %588, label %812

608:                                              ; preds = %588, %679
  %609 = phi i64 [ %674, %679 ], [ %594, %588 ]
  %610 = phi i32* [ %680, %679 ], [ %593, %588 ]
  %611 = phi i32* [ %671, %679 ], [ %593, %588 ]
  %612 = phi i64 [ %677, %679 ], [ 0, %588 ]
  %613 = icmp ult i32* %611, %610
  %614 = ptrtoint i32* %610 to i64
  br i1 %613, label %615, label %619

615:                                              ; preds = %608
  %616 = trunc i64 %612 to i32
  store i32 %616, i32* %611, align 4
  %617 = getelementptr inbounds i32, i32* %611, i64 1
  %618 = ptrtoint i32* %617 to i64
  store i64 %618, i64* %581, align 8
  br label %667

619:                                              ; preds = %608
  %620 = ptrtoint i32* %611 to i64
  %621 = load i64, i64* %582, align 8
  %622 = sub i64 %620, %621
  %623 = ashr exact i64 %622, 2
  %624 = add nsw i64 %623, 1
  %625 = icmp ugt i64 %624, 4611686018427387903
  br i1 %625, label %626, label %628

626:                                              ; preds = %619
  %627 = bitcast %"class.std::__1::vector.26"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %627) #20
  unreachable

628:                                              ; preds = %619
  %629 = sub i64 %614, %621
  %630 = ashr exact i64 %629, 2
  %631 = icmp ult i64 %630, 2305843009213693951
  br i1 %631, label %632, label %640

632:                                              ; preds = %628
  %633 = ashr exact i64 %629, 1
  %634 = icmp ult i64 %633, %624
  %635 = select i1 %634, i64 %624, i64 %633
  %636 = icmp eq i64 %635, 0
  br i1 %636, label %645, label %637

637:                                              ; preds = %632
  %638 = icmp ugt i64 %635, 4611686018427387903
  br i1 %638, label %639, label %640

639:                                              ; preds = %637
  tail call void @abort() #20
  unreachable

640:                                              ; preds = %637, %628
  %641 = phi i64 [ %635, %637 ], [ 4611686018427387903, %628 ]
  %642 = shl i64 %641, 2
  %643 = tail call i8* @_Znwm(i64 %642) #18
  %644 = bitcast i8* %643 to i32*
  br label %645

645:                                              ; preds = %640, %632
  %646 = phi i64 [ %641, %640 ], [ 0, %632 ]
  %647 = phi i32* [ %644, %640 ], [ null, %632 ]
  %648 = getelementptr inbounds i32, i32* %647, i64 %623
  %649 = getelementptr inbounds i32, i32* %647, i64 %646
  %650 = ptrtoint i32* %649 to i64
  %651 = trunc i64 %612 to i32
  store i32 %651, i32* %648, align 4
  %652 = getelementptr inbounds i32, i32* %648, i64 1
  %653 = ptrtoint i32* %652 to i64
  %654 = sub i64 %609, %621
  %655 = ashr exact i64 %654, 2
  %656 = sub nsw i64 0, %655
  %657 = getelementptr inbounds i32, i32* %648, i64 %656
  %658 = ptrtoint i32* %657 to i64
  %659 = icmp sgt i64 %654, 0
  br i1 %659, label %660, label %663

660:                                              ; preds = %645
  %661 = bitcast i32* %657 to i8*
  %662 = inttoptr i64 %621 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %661, i8* align 4 %662, i64 %654, i1 false) #17
  br label %663

663:                                              ; preds = %660, %645
  store i64 %658, i64* %582, align 8
  store i64 %653, i64* %581, align 8
  store i64 %650, i64* %583, align 8
  %664 = icmp eq i64 %621, 0
  br i1 %664, label %667, label %665

665:                                              ; preds = %663
  %666 = inttoptr i64 %621 to i8*
  tail call void @_ZdlPv(i8* %666) #18
  br label %667

667:                                              ; preds = %615, %663, %665
  %668 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %506, i32 %35, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %9)
  %669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 %589, i64 %612
  store i32 %668, i32* %669, align 4
  %670 = load i32*, i32** %579, align 8
  %671 = getelementptr inbounds i32, i32* %670, i64 -1
  store i32* %671, i32** %579, align 8
  %672 = icmp ne i32 %668, 0
  %673 = and i1 %585, %672
  %674 = ptrtoint i32* %671 to i64
  br i1 %673, label %675, label %676

675:                                              ; preds = %667
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %668, i32 %1, i32 -1) #17
  br label %676

676:                                              ; preds = %667, %675
  %677 = add nuw nsw i64 %612, 1
  %678 = icmp slt i64 %677, %586
  br i1 %678, label %679, label %597

679:                                              ; preds = %676
  %680 = load i32*, i32** %580, align 8
  br label %608

681:                                              ; preds = %750, %524
  %682 = phi i32 [ %506, %524 ], [ %752, %750 ]
  %683 = phi i64 [ %474, %524 ], [ %690, %750 ]
  %684 = phi %"class.spv::Instruction"** [ %507, %524 ], [ %691, %750 ]
  %685 = phi i32* [ %477, %524 ], [ %749, %750 ]
  %686 = phi i64 [ 0, %524 ], [ %743, %750 ]
  %687 = phi i32 [ 0, %524 ], [ %694, %750 ]
  %688 = phi i32 [ 0, %524 ], [ %693, %750 ]
  br label %689

689:                                              ; preds = %798, %681
  %690 = phi i64 [ %683, %681 ], [ %811, %798 ]
  %691 = phi %"class.spv::Instruction"** [ %684, %681 ], [ %810, %798 ]
  %692 = phi i32* [ %685, %681 ], [ %809, %798 ]
  %693 = phi i32 [ %688, %681 ], [ %805, %798 ]
  %694 = phi i32 [ %687, %681 ], [ %807, %798 ]
  %695 = phi i32 [ %682, %681 ], [ %799, %798 ]
  %696 = phi i32 [ 0, %681 ], [ %808, %798 ]
  %697 = getelementptr inbounds i32, i32* %692, i64 %686
  %698 = load i32, i32* %697, align 4
  %699 = zext i32 %698 to i64
  %700 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %691, i64 %699
  %701 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %700, align 8
  %702 = icmp eq %"class.spv::Instruction"* %701, null
  br i1 %702, label %707, label %703

703:                                              ; preds = %689
  %704 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %701, i64 0, i32 2
  %705 = load i32, i32* %704, align 4
  %706 = zext i32 %705 to i64
  br label %707

707:                                              ; preds = %703, %689
  %708 = phi i64 [ %706, %703 ], [ 0, %689 ]
  %709 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %691, i64 %708
  %710 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %709, align 8
  %711 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %710, i64 0, i32 3
  %712 = load i32, i32* %711, align 8
  switch i32 %712, label %739 [
    i32 30, label %729
    i32 28, label %718
    i32 24, label %713
    i32 23, label %713
  ]

713:                                              ; preds = %707, %707
  %714 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %710, i64 0, i32 4, i32 0, i32 0
  %715 = load i32*, i32** %714, align 8
  %716 = getelementptr inbounds i32, i32* %715, i64 1
  %717 = load i32, i32* %716, align 4
  br label %739

718:                                              ; preds = %707
  %719 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %710, i64 0, i32 4, i32 0, i32 0
  %720 = load i32*, i32** %719, align 8
  %721 = getelementptr inbounds i32, i32* %720, i64 1
  %722 = load i32, i32* %721, align 4
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %691, i64 %723
  %725 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %724, align 8
  %726 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %725, i64 0, i32 4, i32 0, i32 0
  %727 = load i32*, i32** %726, align 8
  %728 = load i32, i32* %727, align 4
  br label %739

729:                                              ; preds = %707
  %730 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %710, i64 0, i32 4
  %731 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %710, i64 0, i32 4, i32 0, i32 1
  %732 = bitcast i32** %731 to i64*
  %733 = load i64, i64* %732, align 8
  %734 = bitcast %"class.std::__1::vector.26"* %730 to i64*
  %735 = load i64, i64* %734, align 8
  %736 = sub i64 %733, %735
  %737 = lshr exact i64 %736, 2
  %738 = trunc i64 %737 to i32
  br label %739

739:                                              ; preds = %707, %713, %718, %729
  %740 = phi i32 [ %738, %729 ], [ %728, %718 ], [ %717, %713 ], [ 1, %707 ]
  %741 = icmp slt i32 %696, %740
  br i1 %741, label %753, label %742

742:                                              ; preds = %739
  %743 = add nuw nsw i64 %686, 1
  %744 = load i64, i64* %471, align 8
  %745 = sub i64 %744, %690
  %746 = shl i64 %745, 30
  %747 = ashr i64 %746, 32
  %748 = icmp slt i64 %743, %747
  %749 = inttoptr i64 %690 to i32*
  br i1 %748, label %750, label %812

750:                                              ; preds = %742
  %751 = getelementptr inbounds i32, i32* %749, i64 %743
  %752 = load i32, i32* %751, align 4
  br label %681

753:                                              ; preds = %739
  br i1 %702, label %758, label %754

754:                                              ; preds = %753
  %755 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %701, i64 0, i32 2
  %756 = load i32, i32* %755, align 4
  %757 = zext i32 %756 to i64
  br label %758

758:                                              ; preds = %754, %753
  %759 = phi i64 [ %757, %754 ], [ 0, %753 ]
  %760 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %691, i64 %759
  %761 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %760, align 8
  %762 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %761, i64 0, i32 3
  %763 = load i32, i32* %762, align 8
  switch i32 %763, label %798 [
    i32 30, label %780
    i32 28, label %769
    i32 24, label %764
    i32 23, label %764
  ]

764:                                              ; preds = %758, %758
  %765 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %761, i64 0, i32 4, i32 0, i32 0
  %766 = load i32*, i32** %765, align 8
  %767 = getelementptr inbounds i32, i32* %766, i64 1
  %768 = load i32, i32* %767, align 4
  br label %790

769:                                              ; preds = %758
  %770 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %761, i64 0, i32 4, i32 0, i32 0
  %771 = load i32*, i32** %770, align 8
  %772 = getelementptr inbounds i32, i32* %771, i64 1
  %773 = load i32, i32* %772, align 4
  %774 = zext i32 %773 to i64
  %775 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %691, i64 %774
  %776 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %775, align 8
  %777 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %776, i64 0, i32 4, i32 0, i32 0
  %778 = load i32*, i32** %777, align 8
  %779 = load i32, i32* %778, align 4
  br label %790

780:                                              ; preds = %758
  %781 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %761, i64 0, i32 4
  %782 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %761, i64 0, i32 4, i32 0, i32 1
  %783 = bitcast i32** %782 to i64*
  %784 = load i64, i64* %783, align 8
  %785 = bitcast %"class.std::__1::vector.26"* %781 to i64*
  %786 = load i64, i64* %785, align 8
  %787 = sub i64 %784, %786
  %788 = lshr exact i64 %787, 2
  %789 = trunc i64 %788 to i32
  br label %790

790:                                              ; preds = %764, %769, %780
  %791 = phi i32 [ %789, %780 ], [ %779, %769 ], [ %768, %764 ]
  %792 = icmp sgt i32 %791, 1
  br i1 %792, label %793, label %798

793:                                              ; preds = %790
  %794 = tail call i32 @_ZN3spv7Builder22createCompositeExtractEjjj(%"class.spv::Builder"* %0, i32 %698, i32 %35, i32 %696)
  %795 = icmp ne i32 %794, 0
  %796 = and i1 %525, %795
  br i1 %796, label %797, label %798

797:                                              ; preds = %793
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %794, i32 %1, i32 -1) #17
  br label %798

798:                                              ; preds = %758, %797, %793, %790
  %799 = phi i32 [ %695, %790 ], [ %794, %793 ], [ %794, %797 ], [ %695, %758 ]
  %800 = sext i32 %694 to i64
  %801 = add nsw i32 %693, 1
  %802 = sext i32 %693 to i64
  %803 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 %800, i64 %802
  store i32 %799, i32* %803, align 4
  %804 = icmp eq i32 %801, %69
  %805 = select i1 %804, i32 0, i32 %801
  %806 = zext i1 %804 to i32
  %807 = add nsw i32 %694, %806
  %808 = add nuw nsw i32 %696, 1
  %809 = load i32*, i32** %77, align 8
  %810 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %811 = ptrtoint i32* %809 to i64
  br label %689

812:                                              ; preds = %742, %605, %503, %520, %570
  %813 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %12, align 8
  %814 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %813, i64 %36
  %815 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %814, align 8
  %816 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %815, i64 0, i32 3
  %817 = load i32, i32* %816, align 8
  switch i32 %817, label %831 [
    i32 23, label %818
    i32 24, label %818
    i32 28, label %818
    i32 29, label %818
    i32 5358, label %818
    i32 32, label %821
    i32 30, label %825
  ]

818:                                              ; preds = %812, %812, %812, %812, %812
  %819 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %815, i64 0, i32 4, i32 0, i32 0
  %820 = load i32*, i32** %819, align 8
  br label %828

821:                                              ; preds = %812
  %822 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %815, i64 0, i32 4, i32 0, i32 0
  %823 = load i32*, i32** %822, align 8
  %824 = getelementptr inbounds i32, i32* %823, i64 1
  br label %828

825:                                              ; preds = %812
  %826 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %815, i64 0, i32 4, i32 0, i32 0
  %827 = load i32*, i32** %826, align 8
  br label %828

828:                                              ; preds = %825, %821, %818
  %829 = phi i32* [ %820, %818 ], [ %824, %821 ], [ %827, %825 ]
  %830 = load i32, i32* %829, align 4
  br label %831

831:                                              ; preds = %828, %812
  %832 = phi i32 [ 0, %812 ], [ %830, %828 ]
  %833 = bitcast %"class.std::__1::vector.26"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %833) #17
  %834 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 0
  %835 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 1
  %836 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %833, i8 0, i64 24, i1 false) #17
  %837 = icmp sgt i32 %68, 0
  br i1 %837, label %838, label %853

838:                                              ; preds = %831
  %839 = bitcast %"class.std::__1::vector.26"* %11 to i8*
  %840 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %11, i64 0, i32 0, i32 0
  %841 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %11, i64 0, i32 0, i32 1
  %842 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %843 = icmp sgt i32 %69, 0
  %844 = bitcast i32** %841 to i64*
  %845 = bitcast %"class.std::__1::vector.26"* %11 to i64*
  %846 = bitcast i32** %842 to i64*
  %847 = icmp ne i32 %1, 2147483647
  %848 = bitcast i32** %835 to i64*
  %849 = bitcast %"class.std::__1::vector.26"* %10 to i64*
  %850 = bitcast i32** %836 to i64*
  %851 = zext i32 %68 to i64
  %852 = zext i32 %69 to i64
  br label %867

853:                                              ; preds = %931, %831
  %854 = call i32 @_ZN3spv7Builder24createCompositeConstructEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %3, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %10)
  %855 = icmp ne i32 %1, 2147483647
  %856 = icmp ne i32 %854, 0
  %857 = and i1 %855, %856
  br i1 %857, label %858, label %859

858:                                              ; preds = %853
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %854, i32 %1, i32 -1) #17
  br label %859

859:                                              ; preds = %853, %858
  %860 = load i32*, i32** %834, align 8
  %861 = icmp eq i32* %860, null
  br i1 %861, label %866, label %862

862:                                              ; preds = %859
  %863 = ptrtoint i32* %860 to i64
  %864 = bitcast i32** %835 to i64*
  store i64 %863, i64* %864, align 8
  %865 = bitcast i32* %860 to i8*
  tail call void @_ZdlPv(i8* %865) #18
  br label %866

866:                                              ; preds = %859, %862
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %833) #17
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %447) #17
  br label %998

867:                                              ; preds = %931, %838
  %868 = phi i64 [ 0, %838 ], [ %932, %931 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %839) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %839, i8 0, i64 24, i1 false) #17
  br i1 %843, label %934, label %869

869:                                              ; preds = %991, %867
  %870 = call i32 @_ZN3spv7Builder24createCompositeConstructEjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %832, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %11)
  %871 = icmp ne i32 %870, 0
  %872 = and i1 %847, %871
  br i1 %872, label %873, label %874

873:                                              ; preds = %869
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %870, i32 %1, i32 -1) #17
  br label %874

874:                                              ; preds = %869, %873
  %875 = load i32*, i32** %835, align 8
  %876 = load i32*, i32** %836, align 8
  %877 = icmp eq i32* %875, %876
  %878 = ptrtoint i32* %876 to i64
  br i1 %877, label %882, label %879

879:                                              ; preds = %874
  store i32 %870, i32* %875, align 4
  %880 = getelementptr inbounds i32, i32* %875, i64 1
  %881 = ptrtoint i32* %880 to i64
  store i64 %881, i64* %848, align 8
  br label %925

882:                                              ; preds = %874
  %883 = ptrtoint i32* %875 to i64
  %884 = load i64, i64* %849, align 8
  %885 = sub i64 %883, %884
  %886 = ashr exact i64 %885, 2
  %887 = add nsw i64 %886, 1
  %888 = icmp ugt i64 %887, 4611686018427387903
  br i1 %888, label %889, label %891

889:                                              ; preds = %882
  %890 = bitcast %"class.std::__1::vector.26"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %890) #20
  unreachable

891:                                              ; preds = %882
  %892 = sub i64 %878, %884
  %893 = ashr exact i64 %892, 2
  %894 = icmp ult i64 %893, 2305843009213693951
  br i1 %894, label %895, label %903

895:                                              ; preds = %891
  %896 = ashr exact i64 %892, 1
  %897 = icmp ult i64 %896, %887
  %898 = select i1 %897, i64 %887, i64 %896
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %908, label %900

900:                                              ; preds = %895
  %901 = icmp ugt i64 %898, 4611686018427387903
  br i1 %901, label %902, label %903

902:                                              ; preds = %900
  tail call void @abort() #20
  unreachable

903:                                              ; preds = %900, %891
  %904 = phi i64 [ %898, %900 ], [ 4611686018427387903, %891 ]
  %905 = shl i64 %904, 2
  %906 = tail call i8* @_Znwm(i64 %905) #18
  %907 = bitcast i8* %906 to i32*
  br label %908

908:                                              ; preds = %903, %895
  %909 = phi i64 [ %904, %903 ], [ 0, %895 ]
  %910 = phi i8* [ %906, %903 ], [ null, %895 ]
  %911 = phi i32* [ %907, %903 ], [ null, %895 ]
  %912 = getelementptr inbounds i32, i32* %911, i64 %886
  %913 = getelementptr inbounds i32, i32* %911, i64 %909
  %914 = ptrtoint i32* %913 to i64
  store i32 %870, i32* %912, align 4
  %915 = getelementptr inbounds i32, i32* %912, i64 1
  %916 = ptrtoint i32* %915 to i64
  %917 = ptrtoint i32* %911 to i64
  %918 = icmp sgt i64 %885, 0
  br i1 %918, label %919, label %921

919:                                              ; preds = %908
  %920 = inttoptr i64 %884 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %910, i8* align 4 %920, i64 %885, i1 false) #17
  br label %921

921:                                              ; preds = %919, %908
  store i64 %917, i64* %849, align 8
  store i64 %916, i64* %848, align 8
  store i64 %914, i64* %850, align 8
  %922 = icmp eq i64 %884, 0
  br i1 %922, label %925, label %923

923:                                              ; preds = %921
  %924 = inttoptr i64 %884 to i8*
  tail call void @_ZdlPv(i8* %924) #18
  br label %925

925:                                              ; preds = %879, %921, %923
  %926 = load i32*, i32** %840, align 8
  %927 = icmp eq i32* %926, null
  br i1 %927, label %931, label %928

928:                                              ; preds = %925
  %929 = ptrtoint i32* %926 to i64
  store i64 %929, i64* %844, align 8
  %930 = bitcast i32* %926 to i8*
  tail call void @_ZdlPv(i8* %930) #18
  br label %931

931:                                              ; preds = %925, %928
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %839) #17
  %932 = add nuw nsw i64 %868, 1
  %933 = icmp eq i64 %932, %851
  br i1 %933, label %853, label %867

934:                                              ; preds = %867, %996
  %935 = phi i64 [ %992, %996 ], [ 0, %867 ]
  %936 = phi i32* [ %997, %996 ], [ null, %867 ]
  %937 = phi i32* [ %993, %996 ], [ null, %867 ]
  %938 = phi i64 [ %994, %996 ], [ 0, %867 ]
  %939 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %8, i64 0, i64 %868, i64 %938
  %940 = icmp eq i32* %937, %936
  br i1 %940, label %945, label %941

941:                                              ; preds = %934
  %942 = load i32, i32* %939, align 4
  store i32 %942, i32* %937, align 4
  %943 = getelementptr inbounds i32, i32* %937, i64 1
  %944 = ptrtoint i32* %943 to i64
  store i64 %944, i64* %844, align 8
  br label %991

945:                                              ; preds = %934
  %946 = ptrtoint i32* %936 to i64
  %947 = load i64, i64* %845, align 8
  %948 = sub i64 %946, %947
  %949 = ashr exact i64 %948, 2
  %950 = add nsw i64 %949, 1
  %951 = icmp ugt i64 %950, 4611686018427387903
  br i1 %951, label %952, label %954

952:                                              ; preds = %945
  %953 = bitcast %"class.std::__1::vector.26"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %953) #20
  unreachable

954:                                              ; preds = %945
  %955 = icmp ult i64 %949, 2305843009213693951
  br i1 %955, label %956, label %964

956:                                              ; preds = %954
  %957 = ashr exact i64 %948, 1
  %958 = icmp ult i64 %957, %950
  %959 = select i1 %958, i64 %950, i64 %957
  %960 = icmp eq i64 %959, 0
  br i1 %960, label %969, label %961

961:                                              ; preds = %956
  %962 = icmp ugt i64 %959, 4611686018427387903
  br i1 %962, label %963, label %964

963:                                              ; preds = %961
  tail call void @abort() #20
  unreachable

964:                                              ; preds = %961, %954
  %965 = phi i64 [ %959, %961 ], [ 4611686018427387903, %954 ]
  %966 = shl i64 %965, 2
  %967 = tail call i8* @_Znwm(i64 %966) #18
  %968 = bitcast i8* %967 to i32*
  br label %969

969:                                              ; preds = %964, %956
  %970 = phi i64 [ %965, %964 ], [ 0, %956 ]
  %971 = phi i32* [ %968, %964 ], [ null, %956 ]
  %972 = getelementptr inbounds i32, i32* %971, i64 %949
  %973 = getelementptr inbounds i32, i32* %971, i64 %970
  %974 = ptrtoint i32* %973 to i64
  %975 = load i32, i32* %939, align 4
  store i32 %975, i32* %972, align 4
  %976 = getelementptr inbounds i32, i32* %972, i64 1
  %977 = ptrtoint i32* %976 to i64
  %978 = sub i64 %935, %947
  %979 = ashr exact i64 %978, 2
  %980 = sub nsw i64 0, %979
  %981 = getelementptr inbounds i32, i32* %972, i64 %980
  %982 = ptrtoint i32* %981 to i64
  %983 = icmp sgt i64 %978, 0
  br i1 %983, label %984, label %987

984:                                              ; preds = %969
  %985 = bitcast i32* %981 to i8*
  %986 = inttoptr i64 %947 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %985, i8* align 4 %986, i64 %978, i1 false) #17
  br label %987

987:                                              ; preds = %984, %969
  store i64 %982, i64* %845, align 8
  store i64 %977, i64* %844, align 8
  store i64 %974, i64* %846, align 8
  %988 = icmp eq i64 %947, 0
  br i1 %988, label %991, label %989

989:                                              ; preds = %987
  %990 = inttoptr i64 %947 to i8*
  tail call void @_ZdlPv(i8* %990) #18
  br label %991

991:                                              ; preds = %941, %987, %989
  %992 = phi i64 [ %944, %941 ], [ %977, %987 ], [ %977, %989 ]
  %993 = phi i32* [ %943, %941 ], [ %976, %987 ], [ %976, %989 ]
  %994 = add nuw nsw i64 %938, 1
  %995 = icmp eq i64 %994, %852
  br i1 %995, label %869, label %996

996:                                              ; preds = %991
  %997 = load i32*, i32** %842, align 8
  br label %934

998:                                              ; preds = %866, %306
  %999 = phi i32 [ %287, %306 ], [ %854, %866 ]
  ret i32 %999
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3spv7Builder14getTypeNumRowsEj(%"class.spv::Builder"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %5 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %3
  %7 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %24 [
    i32 23, label %10
    i32 24, label %10
    i32 28, label %10
    i32 29, label %10
    i32 5358, label %10
    i32 32, label %13
    i32 30, label %17
  ]

10:                                               ; preds = %2, %2, %2, %2, %2
  %11 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  br label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 1
  br label %20

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  br label %20

20:                                               ; preds = %17, %13, %10
  %21 = phi i32* [ %12, %10 ], [ %16, %13 ], [ %19, %17 ]
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %20, %2
  %25 = phi i64 [ 0, %2 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %25
  %27 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %26, align 8
  %28 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  switch i32 %29, label %56 [
    i32 30, label %46
    i32 28, label %35
    i32 24, label %30
    i32 23, label %30
  ]

30:                                               ; preds = %24, %24
  %31 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %27, i64 0, i32 4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  %34 = load i32, i32* %33, align 4
  br label %56

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %27, i64 0, i32 4, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %5, i64 %40
  %42 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %41, align 8
  %43 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %42, i64 0, i32 4, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %44, align 4
  br label %56

46:                                               ; preds = %24
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %27, i64 0, i32 4
  %48 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %27, i64 0, i32 4, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.26"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = lshr exact i64 %53, 2
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %24, %30, %35, %46
  %57 = phi i32 [ %55, %46 ], [ %45, %35 ], [ %34, %30 ], [ 1, %24 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder2IfC2EjjRS0_(%"class.spv::Builder::If"* nocapture, i32, i32, %"class.spv::Builder"* dereferenceable(888)) unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 0
  store %"class.spv::Builder"* %3, %"class.spv::Builder"** %7, align 8
  %8 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 6
  store %"class.spv::Block"* null, %"class.spv::Block"** %10, align 8
  %11 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %3, i64 0, i32 17
  %12 = load %"class.spv::Block"*, %"class.spv::Block"** %11, align 8
  %13 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %12, i64 0, i32 5
  %14 = bitcast %"class.spv::Function"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 3
  %17 = bitcast %"class.spv::Function"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = tail call i8* @_Znwm(i64 120) #18
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %3, i64 0, i32 18
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  store i32 %21, i32* %19, align 8
  %22 = load %"class.spv::Function"*, %"class.spv::Function"** %16, align 8
  %23 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to %"class.std::__1::vector.38"*
  %26 = getelementptr inbounds i8, i8* %18, i64 104
  %27 = bitcast i8* %26 to %"class.spv::Function"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %22, %"class.spv::Function"** %27, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 112
  store i8 0, i8* %28, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  %30 = tail call i8* @_Znwm(i64 80) #18
  %31 = bitcast i8* %30 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 %21, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %30, i64 16
  %37 = bitcast i8* %36 to i32*
  store i32 248, i32* %37, align 8
  %38 = getelementptr inbounds i8, i8* %30, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  %39 = ptrtoint i8* %30 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %18, i64 16
  %42 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %25, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %43, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %43, align 8
  %45 = icmp eq %"class.spv::Instruction"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %4
  %47 = bitcast %"class.spv::Instruction"* %44 to void (%"class.spv::Instruction"*)***
  %48 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %48, i64 1
  %50 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %49, align 8
  call void %50(%"class.spv::Instruction"* nonnull %44) #17
  br label %51

51:                                               ; preds = %46, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 -1, i32 0, i32 0, i32 0
  %54 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %53, align 8
  %55 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %54, i64 0, i32 6
  %56 = bitcast %"class.spv::Block"** %55 to i8**
  store i8* %18, i8** %56, align 8
  %57 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %22, i64 0, i32 1
  %58 = load %"class.spv::Module"*, %"class.spv::Module"** %57, align 8
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1, i32 0, i32 0, i32 0
  %61 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %60, align 8
  %62 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %58, i64 0, i32 2
  %66 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %58, i64 0, i32 2, i32 0, i32 1
  %67 = bitcast %"class.spv::Instruction"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector.55"* %65 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = ashr exact i64 %71, 3
  %73 = icmp ugt i64 %72, %64
  %74 = inttoptr i64 %70 to %"class.spv::Instruction"**
  br i1 %73, label %87, label %75

75:                                               ; preds = %51
  %76 = add i32 %63, 16
  %77 = zext i32 %76 to i64
  %78 = icmp ult i64 %72, %77
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = sub nsw i64 %77, %72
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %65, i64 %80) #17
  %81 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %65, i64 0, i32 0, i32 0
  %82 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %81, align 8
  br label %87

83:                                               ; preds = %75
  %84 = icmp ugt i64 %72, %77
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %74, i64 %77
  store %"class.spv::Instruction"** %86, %"class.spv::Instruction"*** %66, align 8
  br label %87

87:                                               ; preds = %51, %79, %83, %85
  %88 = phi %"class.spv::Instruction"** [ %74, %85 ], [ %74, %83 ], [ %82, %79 ], [ %74, %51 ]
  %89 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %88, i64 %64
  store %"class.spv::Instruction"* %61, %"class.spv::Instruction"** %89, align 8
  %90 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 5
  %91 = bitcast %"class.spv::Block"** %90 to i8**
  store i8* %18, i8** %91, align 8
  %92 = call i8* @_Znwm(i64 120) #18
  %93 = load %"class.spv::Builder"*, %"class.spv::Builder"** %7, align 8
  %94 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %93, i64 0, i32 18
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 8
  %97 = load %"class.spv::Function"*, %"class.spv::Function"** %16, align 8
  %98 = bitcast i8* %92 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %98, align 8
  %99 = getelementptr inbounds i8, i8* %92, i64 8
  %100 = bitcast i8* %99 to %"class.std::__1::vector.38"*
  %101 = getelementptr inbounds i8, i8* %92, i64 104
  %102 = bitcast i8* %101 to %"class.spv::Function"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %97, %"class.spv::Function"** %102, align 8
  %103 = getelementptr inbounds i8, i8* %92, i64 112
  store i8 0, i8* %103, align 8
  %104 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #17
  %105 = call i8* @_Znwm(i64 80) #18
  %106 = bitcast i8* %105 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to i32*
  store i32 %96, i32* %108, align 8
  %109 = getelementptr inbounds i8, i8* %105, i64 12
  %110 = bitcast i8* %109 to i32*
  store i32 0, i32* %110, align 4
  %111 = getelementptr inbounds i8, i8* %105, i64 16
  %112 = bitcast i8* %111 to i32*
  store i32 248, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %105, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 56, i1 false) #17
  %114 = ptrtoint i8* %105 to i64
  %115 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %92, i64 16
  %117 = bitcast i8* %116 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %100, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %118, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %118, align 8
  %120 = icmp eq %"class.spv::Instruction"* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %87
  %122 = bitcast %"class.spv::Instruction"* %119 to void (%"class.spv::Instruction"*)***
  %123 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %123, i64 1
  %125 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %124, align 8
  call void %125(%"class.spv::Instruction"* nonnull %119) #17
  br label %126

126:                                              ; preds = %121, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #17
  %127 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %117, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 -1, i32 0, i32 0, i32 0
  %129 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %128, align 8
  %130 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %129, i64 0, i32 6
  %131 = bitcast %"class.spv::Block"** %130 to i8**
  store i8* %92, i8** %131, align 8
  %132 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %97, i64 0, i32 1
  %133 = load %"class.spv::Module"*, %"class.spv::Module"** %132, align 8
  %134 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %117, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 -1, i32 0, i32 0, i32 0
  %136 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %135, align 8
  %137 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %136, i64 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %133, i64 0, i32 2
  %141 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %133, i64 0, i32 2, i32 0, i32 1
  %142 = bitcast %"class.spv::Instruction"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::vector.55"* %140 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %143, %145
  %147 = ashr exact i64 %146, 3
  %148 = icmp ugt i64 %147, %139
  %149 = inttoptr i64 %145 to %"class.spv::Instruction"**
  br i1 %148, label %162, label %150

150:                                              ; preds = %126
  %151 = add i32 %138, 16
  %152 = zext i32 %151 to i64
  %153 = icmp ult i64 %147, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = sub nsw i64 %152, %147
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %140, i64 %155) #17
  %156 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %140, i64 0, i32 0, i32 0
  %157 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %156, align 8
  br label %162

158:                                              ; preds = %150
  %159 = icmp ugt i64 %147, %152
  br i1 %159, label %160, label %162

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %149, i64 %152
  store %"class.spv::Instruction"** %161, %"class.spv::Instruction"*** %141, align 8
  br label %162

162:                                              ; preds = %126, %154, %158, %160
  %163 = phi %"class.spv::Instruction"** [ %149, %160 ], [ %149, %158 ], [ %157, %154 ], [ %149, %126 ]
  %164 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %163, i64 %139
  store %"class.spv::Instruction"* %136, %"class.spv::Instruction"** %164, align 8
  %165 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 7
  %166 = bitcast %"class.spv::Block"** %165 to i8**
  store i8* %92, i8** %166, align 8
  %167 = load %"class.spv::Builder"*, %"class.spv::Builder"** %7, align 8
  %168 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %167, i64 0, i32 17
  %169 = bitcast %"class.spv::Block"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 4
  %172 = bitcast %"class.spv::Block"** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = load %"class.spv::Function"*, %"class.spv::Function"** %16, align 8
  %174 = load %"class.spv::Block"*, %"class.spv::Block"** %90, align 8
  call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %173, %"class.spv::Block"* %174)
  %175 = load %"class.spv::Builder"*, %"class.spv::Builder"** %7, align 8
  %176 = bitcast %"class.spv::Block"** %90 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %175, i64 0, i32 17
  %179 = bitcast %"class.spv::Block"** %178 to i64*
  store i64 %177, i64* %179, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder2If13makeBeginElseEv(%"class.spv::Builder::If"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 0
  %4 = load %"class.spv::Builder"*, %"class.spv::Builder"** %3, align 8
  %5 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 7
  %6 = load %"class.spv::Block"*, %"class.spv::Block"** %5, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %4, %"class.spv::Block"* %6)
  %7 = tail call i8* @_Znwm(i64 120) #18
  %8 = bitcast i8* %7 to %"class.spv::Block"*
  %9 = load %"class.spv::Builder"*, %"class.spv::Builder"** %3, align 8
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %9, i64 0, i32 18
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 3
  %14 = load %"class.spv::Function"*, %"class.spv::Function"** %13, align 8
  %15 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 8
  %17 = bitcast i8* %16 to %"class.std::__1::vector.38"*
  %18 = getelementptr inbounds i8, i8* %7, i64 104
  %19 = bitcast i8* %18 to %"class.spv::Function"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %14, %"class.spv::Function"** %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 112
  store i8 0, i8* %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = tail call i8* @_Znwm(i64 80) #18
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %12, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %22, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 248, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %22, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 56, i1 false) #17
  %31 = ptrtoint i8* %22 to i64
  %32 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 16
  %34 = bitcast i8* %33 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %17, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #17
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %35, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %35, align 8
  %37 = icmp eq %"class.spv::Instruction"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %1
  %39 = bitcast %"class.spv::Instruction"* %36 to void (%"class.spv::Instruction"*)***
  %40 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %40, i64 1
  %42 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %41, align 8
  call void %42(%"class.spv::Instruction"* nonnull %36) #17
  br label %43

43:                                               ; preds = %38, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 -1, i32 0, i32 0, i32 0
  %46 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %46, i64 0, i32 6
  %48 = bitcast %"class.spv::Block"** %47 to i8**
  store i8* %7, i8** %48, align 8
  %49 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %14, i64 0, i32 1
  %50 = load %"class.spv::Module"*, %"class.spv::Module"** %49, align 8
  %51 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 -1, i32 0, i32 0, i32 0
  %53 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %52, align 8
  %54 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %50, i64 0, i32 2
  %58 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %50, i64 0, i32 2, i32 0, i32 1
  %59 = bitcast %"class.spv::Instruction"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector.55"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ugt i64 %64, %56
  %66 = inttoptr i64 %62 to %"class.spv::Instruction"**
  br i1 %65, label %79, label %67

67:                                               ; preds = %43
  %68 = add i32 %55, 16
  %69 = zext i32 %68 to i64
  %70 = icmp ult i64 %64, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = sub nsw i64 %69, %64
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %57, i64 %72) #17
  %73 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %57, i64 0, i32 0, i32 0
  %74 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %73, align 8
  br label %79

75:                                               ; preds = %67
  %76 = icmp ugt i64 %64, %69
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %66, i64 %69
  store %"class.spv::Instruction"** %78, %"class.spv::Instruction"*** %58, align 8
  br label %79

79:                                               ; preds = %43, %71, %75, %77
  %80 = phi %"class.spv::Instruction"** [ %66, %77 ], [ %66, %75 ], [ %74, %71 ], [ %66, %43 ]
  %81 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %80, i64 %56
  store %"class.spv::Instruction"* %53, %"class.spv::Instruction"** %81, align 8
  %82 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 6
  %83 = bitcast %"class.spv::Block"** %82 to i8**
  store i8* %7, i8** %83, align 8
  %84 = load %"class.spv::Function"*, %"class.spv::Function"** %13, align 8
  call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %84, %"class.spv::Block"* nonnull %8)
  %85 = load %"class.spv::Builder"*, %"class.spv::Builder"** %3, align 8
  %86 = bitcast %"class.spv::Block"** %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %85, i64 0, i32 17
  %89 = bitcast %"class.spv::Block"** %88 to i64*
  store i64 %87, i64* %89, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* nocapture readonly, %"class.spv::Block"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call i8* @_Znwm(i64 80) #18
  %5 = bitcast i8* %4 to %"class.spv::Instruction"*
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 12
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %4, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 249, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 56, i1 false) #17
  %14 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %1, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %5, i32 %19)
  %20 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %21 = load %"class.spv::Block"*, %"class.spv::Block"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %4, i8** %24, align 8
  %25 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp ult %"class.std::__1::unique_ptr"* %26, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %2
  %31 = ptrtoint i8* %4 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %23, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %34 = ptrtoint %"class.std::__1::unique_ptr"* %33 to i64
  %35 = bitcast %"class.std::__1::unique_ptr"** %25 to i64*
  store i64 %34, i64* %35, align 8
  br label %38

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %37, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #17
  br label %38

38:                                               ; preds = %36, %30
  %39 = getelementptr inbounds i8, i8* %4, i64 72
  %40 = bitcast i8* %39 to %"class.spv::Block"**
  store %"class.spv::Block"* %21, %"class.spv::Block"** %40, align 8
  %41 = load i32, i32* %8, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %75, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %21, i64 0, i32 5
  %45 = load %"class.spv::Function"*, %"class.spv::Function"** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %45, i64 0, i32 1
  %47 = load %"class.spv::Module"*, %"class.spv::Module"** %46, align 8
  %48 = zext i32 %41 to i64
  %49 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2
  %50 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast %"class.spv::Instruction"*** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.55"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 3
  %57 = icmp ugt i64 %56, %48
  %58 = inttoptr i64 %54 to %"class.spv::Instruction"**
  br i1 %57, label %71, label %59

59:                                               ; preds = %43
  %60 = add i32 %41, 16
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %56, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = sub nsw i64 %61, %56
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %49, i64 %64) #17
  %65 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %49, i64 0, i32 0, i32 0
  %66 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  br label %71

67:                                               ; preds = %59
  %68 = icmp ugt i64 %56, %61
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %58, i64 %61
  store %"class.spv::Instruction"** %70, %"class.spv::Instruction"*** %50, align 8
  br label %71

71:                                               ; preds = %69, %67, %63, %43
  %72 = phi %"class.spv::Instruction"** [ %58, %69 ], [ %58, %67 ], [ %66, %63 ], [ %58, %43 ]
  %73 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %72, i64 %48
  %74 = bitcast %"class.spv::Instruction"** %73 to i8**
  store i8* %4, i8** %74, align 8
  br label %75

75:                                               ; preds = %71, %38
  %76 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %23, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %23, align 8
  %77 = icmp eq %"class.spv::Instruction"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.spv::Instruction"* %76 to void (%"class.spv::Instruction"*)***
  %80 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %80, i64 1
  %82 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %81, align 8
  call void %82(%"class.spv::Instruction"* nonnull %76) #17
  br label %83

83:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  %84 = load %"class.spv::Block"*, %"class.spv::Block"** %20, align 8
  call void @_ZN3spv5Block14addPredecessorEPS0_(%"class.spv::Block"* %1, %"class.spv::Block"* %84)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder2If9makeEndIfEv(%"class.spv::Builder::If"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 0
  %3 = load %"class.spv::Builder"*, %"class.spv::Builder"** %2, align 8
  %4 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 7
  %5 = load %"class.spv::Block"*, %"class.spv::Block"** %4, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %3, %"class.spv::Block"* %5)
  %6 = load %"class.spv::Builder"*, %"class.spv::Builder"** %2, align 8
  %7 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 4
  %8 = bitcast %"class.spv::Block"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %6, i64 0, i32 17
  %11 = bitcast %"class.spv::Block"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = load %"class.spv::Builder"*, %"class.spv::Builder"** %2, align 8
  %13 = load %"class.spv::Block"*, %"class.spv::Block"** %4, align 8
  %14 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  tail call void @_ZN3spv7Builder20createSelectionMergeEPNS_5BlockEj(%"class.spv::Builder"* %12, %"class.spv::Block"* %13, i32 %15)
  %16 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 6
  %17 = load %"class.spv::Block"*, %"class.spv::Block"** %16, align 8
  %18 = icmp eq %"class.spv::Block"* %17, null
  %19 = load %"class.spv::Builder"*, %"class.spv::Builder"** %2, align 8
  %20 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 5
  %23 = load %"class.spv::Block"*, %"class.spv::Block"** %22, align 8
  br i1 %18, label %25, label %24

24:                                               ; preds = %1
  tail call void @_ZN3spv7Builder23createConditionalBranchEjPNS_5BlockES2_(%"class.spv::Builder"* %19, i32 %21, %"class.spv::Block"* %23, %"class.spv::Block"* nonnull %17)
  br label %27

25:                                               ; preds = %1
  %26 = load %"class.spv::Block"*, %"class.spv::Block"** %4, align 8
  tail call void @_ZN3spv7Builder23createConditionalBranchEjPNS_5BlockES2_(%"class.spv::Builder"* %19, i32 %21, %"class.spv::Block"* %23, %"class.spv::Block"* %26)
  br label %27

27:                                               ; preds = %25, %24
  %28 = getelementptr inbounds %"class.spv::Builder::If", %"class.spv::Builder::If"* %0, i64 0, i32 3
  %29 = load %"class.spv::Function"*, %"class.spv::Function"** %28, align 8
  %30 = load %"class.spv::Block"*, %"class.spv::Block"** %4, align 8
  tail call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %29, %"class.spv::Block"* %30)
  %31 = load %"class.spv::Builder"*, %"class.spv::Builder"** %2, align 8
  %32 = bitcast %"class.spv::Block"** %4 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %31, i64 0, i32 17
  %35 = bitcast %"class.spv::Block"** %34 to i64*
  store i64 %33, i64* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder20createSelectionMergeEPNS_5BlockEj(%"class.spv::Builder"* nocapture readonly, %"class.spv::Block"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = tail call i8* @_Znwm(i64 80) #18
  %6 = bitcast i8* %5 to %"class.spv::Instruction"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 247, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false) #17
  %15 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %1, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %20)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %2)
  %21 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %22 = load %"class.spv::Block"*, %"class.spv::Block"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %5, i8** %25, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %28, align 8
  %30 = icmp ult %"class.std::__1::unique_ptr"* %27, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %3
  %32 = ptrtoint i8* %5 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %24, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %35 = ptrtoint %"class.std::__1::unique_ptr"* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr"** %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %39

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %38, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %39

39:                                               ; preds = %37, %31
  %40 = getelementptr inbounds i8, i8* %5, i64 72
  %41 = bitcast i8* %40 to %"class.spv::Block"**
  store %"class.spv::Block"* %22, %"class.spv::Block"** %41, align 8
  %42 = load i32, i32* %9, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %76, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %22, i64 0, i32 5
  %46 = load %"class.spv::Function"*, %"class.spv::Function"** %45, align 8
  %47 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %46, i64 0, i32 1
  %48 = load %"class.spv::Module"*, %"class.spv::Module"** %47, align 8
  %49 = zext i32 %42 to i64
  %50 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2
  %51 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %48, i64 0, i32 2, i32 0, i32 1
  %52 = bitcast %"class.spv::Instruction"*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector.55"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 3
  %58 = icmp ugt i64 %57, %49
  %59 = inttoptr i64 %55 to %"class.spv::Instruction"**
  br i1 %58, label %72, label %60

60:                                               ; preds = %44
  %61 = add i32 %42, 16
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %57, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = sub nsw i64 %62, %57
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %50, i64 %65) #17
  %66 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %50, i64 0, i32 0, i32 0
  %67 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %66, align 8
  br label %72

68:                                               ; preds = %60
  %69 = icmp ugt i64 %57, %62
  br i1 %69, label %70, label %72

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %59, i64 %62
  store %"class.spv::Instruction"** %71, %"class.spv::Instruction"*** %51, align 8
  br label %72

72:                                               ; preds = %70, %68, %64, %44
  %73 = phi %"class.spv::Instruction"** [ %59, %70 ], [ %59, %68 ], [ %67, %64 ], [ %59, %44 ]
  %74 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %73, i64 %49
  %75 = bitcast %"class.spv::Instruction"** %74 to i8**
  store i8* %5, i8** %75, align 8
  br label %76

76:                                               ; preds = %72, %39
  %77 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %24, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %24, align 8
  %78 = icmp eq %"class.spv::Instruction"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.spv::Instruction"* %77 to void (%"class.spv::Instruction"*)***
  %81 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %81, i64 1
  %83 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %82, align 8
  call void %83(%"class.spv::Instruction"* nonnull %77) #17
  br label %84

84:                                               ; preds = %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder23createConditionalBranchEjPNS_5BlockES2_(%"class.spv::Builder"* nocapture readonly, i32, %"class.spv::Block"*, %"class.spv::Block"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = tail call i8* @_Znwm(i64 80) #18
  %7 = bitcast i8* %6 to %"class.spv::Instruction"*
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 250, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %1)
  %16 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %2, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %21)
  %22 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %3, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %24, align 8
  %26 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %27)
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %29 = load %"class.spv::Block"*, %"class.spv::Block"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %6, i8** %32, align 8
  %33 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %29, i64 0, i32 1, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %35 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %29, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %35, align 8
  %37 = icmp ult %"class.std::__1::unique_ptr"* %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %4
  %39 = ptrtoint i8* %6 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %31, align 8
  %40 = bitcast %"class.std::__1::unique_ptr"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 1
  %42 = ptrtoint %"class.std::__1::unique_ptr"* %41 to i64
  %43 = bitcast %"class.std::__1::unique_ptr"** %33 to i64*
  store i64 %42, i64* %43, align 8
  br label %46

44:                                               ; preds = %4
  %45 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %29, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %45, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #17
  br label %46

46:                                               ; preds = %44, %38
  %47 = getelementptr inbounds i8, i8* %6, i64 72
  %48 = bitcast i8* %47 to %"class.spv::Block"**
  store %"class.spv::Block"* %29, %"class.spv::Block"** %48, align 8
  %49 = load i32, i32* %10, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %83, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %29, i64 0, i32 5
  %53 = load %"class.spv::Function"*, %"class.spv::Function"** %52, align 8
  %54 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %53, i64 0, i32 1
  %55 = load %"class.spv::Module"*, %"class.spv::Module"** %54, align 8
  %56 = zext i32 %49 to i64
  %57 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %55, i64 0, i32 2
  %58 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %55, i64 0, i32 2, i32 0, i32 1
  %59 = bitcast %"class.spv::Instruction"*** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector.55"* %57 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ugt i64 %64, %56
  %66 = inttoptr i64 %62 to %"class.spv::Instruction"**
  br i1 %65, label %79, label %67

67:                                               ; preds = %51
  %68 = add i32 %49, 16
  %69 = zext i32 %68 to i64
  %70 = icmp ult i64 %64, %69
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = sub nsw i64 %69, %64
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %57, i64 %72) #17
  %73 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %57, i64 0, i32 0, i32 0
  %74 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %73, align 8
  br label %79

75:                                               ; preds = %67
  %76 = icmp ugt i64 %64, %69
  br i1 %76, label %77, label %79

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %66, i64 %69
  store %"class.spv::Instruction"** %78, %"class.spv::Instruction"*** %58, align 8
  br label %79

79:                                               ; preds = %77, %75, %71, %51
  %80 = phi %"class.spv::Instruction"** [ %66, %77 ], [ %66, %75 ], [ %74, %71 ], [ %66, %51 ]
  %81 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %80, i64 %56
  %82 = bitcast %"class.spv::Instruction"** %81 to i8**
  store i8* %6, i8** %82, align 8
  br label %83

83:                                               ; preds = %79, %46
  %84 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %31, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %31, align 8
  %85 = icmp eq %"class.spv::Instruction"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.spv::Instruction"* %84 to void (%"class.spv::Instruction"*)***
  %88 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %88, i64 1
  %90 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %89, align 8
  call void %90(%"class.spv::Instruction"* nonnull %84) #17
  br label %91

91:                                               ; preds = %83, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %92 = load %"class.spv::Block"*, %"class.spv::Block"** %28, align 8
  call void @_ZN3spv5Block14addPredecessorEPS0_(%"class.spv::Block"* %2, %"class.spv::Block"* %92)
  %93 = load %"class.spv::Block"*, %"class.spv::Block"** %28, align 8
  call void @_ZN3spv5Block14addPredecessorEPS0_(%"class.spv::Block"* %3, %"class.spv::Block"* %93)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder10makeSwitchEjjiRKNSt3__16vectorIiNS1_9allocatorIiEEEES7_iRNS2_IPNS_5BlockENS3_IS9_EEEE(%"class.spv::Builder"*, i32, i32, i32, %"class.std::__1::vector.200"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.200"* nocapture readonly dereferenceable(24), i32, %"class.std::__1::vector.48"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %13 = load %"class.spv::Block"*, %"class.spv::Block"** %12, align 8
  %14 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %13, i64 0, i32 5
  %15 = load %"class.spv::Function"*, %"class.spv::Function"** %14, align 8
  %16 = icmp sgt i32 %3, 0
  %17 = call i8* @_Znwm(i64 120) #18
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to %"class.std::__1::vector.38"*
  %24 = getelementptr inbounds i8, i8* %17, i64 104
  %25 = bitcast i8* %24 to %"class.spv::Function"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %15, %"class.spv::Function"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %17, i64 112
  store i8 0, i8* %26, align 8
  br i1 %16, label %27, label %40

27:                                               ; preds = %8
  %28 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  %29 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %15, i64 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.spv::Block"*** %32 to i64*
  %35 = bitcast %"class.std::__1::vector.48"* %7 to i64*
  %36 = bitcast %"class.spv::Block"*** %33 to i64*
  %37 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 0
  br label %119

38:                                               ; preds = %243
  %39 = bitcast i8* %249 to %"class.std::__1::vector.38"*
  br label %40

40:                                               ; preds = %38, %8
  %41 = phi i8* [ %17, %8 ], [ %245, %38 ]
  %42 = phi i32 [ %20, %8 ], [ %247, %38 ]
  %43 = phi %"class.std::__1::vector.38"* [ %23, %8 ], [ %39, %38 ]
  %44 = bitcast i8* %41 to %"class.spv::Block"*
  %45 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #17
  %46 = call i8* @_Znwm(i64 80) #18
  %47 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = bitcast i8* %48 to i32*
  store i32 %42, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %46, i64 12
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %46, i64 16
  %53 = bitcast i8* %52 to i32*
  store i32 248, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %46, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 56, i1 false) #17
  %55 = ptrtoint i8* %46 to i64
  %56 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %41, i64 16
  %58 = bitcast i8* %57 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %43, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11) #17
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %59, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %59, align 8
  %61 = icmp eq %"class.spv::Instruction"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %40
  %63 = bitcast %"class.spv::Instruction"* %60 to void (%"class.spv::Instruction"*)***
  %64 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %64, i64 1
  %66 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %65, align 8
  call void %66(%"class.spv::Instruction"* nonnull %60) #17
  br label %67

67:                                               ; preds = %62, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #17
  %68 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 -1, i32 0, i32 0, i32 0
  %70 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %69, align 8
  %71 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %70, i64 0, i32 6
  %72 = bitcast %"class.spv::Block"** %71 to i8**
  store i8* %41, i8** %72, align 8
  %73 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %15, i64 0, i32 1
  %74 = load %"class.spv::Module"*, %"class.spv::Module"** %73, align 8
  %75 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %58, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 -1, i32 0, i32 0, i32 0
  %77 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %76, align 8
  %78 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %77, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %74, i64 0, i32 2
  %82 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %74, i64 0, i32 2, i32 0, i32 1
  %83 = bitcast %"class.spv::Instruction"*** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector.55"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 3
  %89 = icmp ugt i64 %88, %80
  %90 = inttoptr i64 %86 to %"class.spv::Instruction"**
  br i1 %89, label %103, label %91

91:                                               ; preds = %67
  %92 = add i32 %79, 16
  %93 = zext i32 %92 to i64
  %94 = icmp ult i64 %88, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = sub nsw i64 %93, %88
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %81, i64 %96) #17
  %97 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %81, i64 0, i32 0, i32 0
  %98 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %97, align 8
  br label %103

99:                                               ; preds = %91
  %100 = icmp ugt i64 %88, %93
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %90, i64 %93
  store %"class.spv::Instruction"** %102, %"class.spv::Instruction"*** %82, align 8
  br label %103

103:                                              ; preds = %67, %95, %99, %101
  %104 = phi %"class.spv::Instruction"** [ %90, %101 ], [ %90, %99 ], [ %98, %95 ], [ %90, %67 ]
  %105 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %104, i64 %80
  store %"class.spv::Instruction"* %77, %"class.spv::Instruction"** %105, align 8
  %106 = ptrtoint i8* %41 to i64
  call void @_ZN3spv7Builder20createSelectionMergeEPNS_5BlockEj(%"class.spv::Builder"* %0, %"class.spv::Block"* nonnull %44, i32 %2)
  %107 = call i8* @_Znwm(i64 80) #18
  %108 = bitcast i8* %107 to %"class.spv::Instruction"*
  %109 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds i8, i8* %107, i64 8
  %111 = bitcast i8* %110 to i32*
  store i32 0, i32* %111, align 8
  %112 = getelementptr inbounds i8, i8* %107, i64 12
  %113 = bitcast i8* %112 to i32*
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds i8, i8* %107, i64 16
  %115 = bitcast i8* %114 to i32*
  store i32 251, i32* %115, align 8
  %116 = getelementptr inbounds i8, i8* %107, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 56, i1 false) #17
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %108, i32 %1)
  %117 = icmp sgt i32 %6, -1
  %118 = bitcast i8* %41 to %"class.spv::Block"*
  br i1 %117, label %255, label %261

119:                                              ; preds = %243, %27
  %120 = phi %"class.std::__1::vector.38"* [ %23, %27 ], [ %250, %243 ]
  %121 = phi i32 [ %20, %27 ], [ %247, %243 ]
  %122 = phi i8* [ %17, %27 ], [ %245, %243 ]
  %123 = phi i32 [ 0, %27 ], [ %244, %243 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  %124 = call i8* @_Znwm(i64 80) #18
  %125 = bitcast i8* %124 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds i8, i8* %124, i64 8
  %127 = bitcast i8* %126 to i32*
  store i32 %121, i32* %127, align 8
  %128 = getelementptr inbounds i8, i8* %124, i64 12
  %129 = bitcast i8* %128 to i32*
  store i32 0, i32* %129, align 4
  %130 = getelementptr inbounds i8, i8* %124, i64 16
  %131 = bitcast i8* %130 to i32*
  store i32 248, i32* %131, align 8
  %132 = getelementptr inbounds i8, i8* %124, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 56, i1 false) #17
  %133 = ptrtoint i8* %124 to i64
  store i64 %133, i64* %29, align 8
  %134 = getelementptr inbounds i8, i8* %122, i64 16
  %135 = bitcast i8* %134 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %120, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %10) #17
  %136 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %30, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %30, align 8
  %137 = icmp eq %"class.spv::Instruction"* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %119
  %139 = bitcast %"class.spv::Instruction"* %136 to void (%"class.spv::Instruction"*)***
  %140 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %140, i64 1
  %142 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %141, align 8
  call void %142(%"class.spv::Instruction"* nonnull %136) #17
  br label %143

143:                                              ; preds = %138, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %144 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %135, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 -1, i32 0, i32 0, i32 0
  %146 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %145, align 8
  %147 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %146, i64 0, i32 6
  %148 = bitcast %"class.spv::Block"** %147 to i8**
  store i8* %122, i8** %148, align 8
  %149 = load %"class.spv::Module"*, %"class.spv::Module"** %31, align 8
  %150 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %135, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %150, i64 -1, i32 0, i32 0, i32 0
  %152 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %151, align 8
  %153 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %149, i64 0, i32 2
  %157 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %149, i64 0, i32 2, i32 0, i32 1
  %158 = bitcast %"class.spv::Instruction"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.std::__1::vector.55"* %156 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %159, %161
  %163 = ashr exact i64 %162, 3
  %164 = icmp ugt i64 %163, %155
  %165 = inttoptr i64 %161 to %"class.spv::Instruction"**
  br i1 %164, label %178, label %166

166:                                              ; preds = %143
  %167 = add i32 %154, 16
  %168 = zext i32 %167 to i64
  %169 = icmp ult i64 %163, %168
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = sub nsw i64 %168, %163
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %156, i64 %171) #17
  %172 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %156, i64 0, i32 0, i32 0
  %173 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %172, align 8
  br label %178

174:                                              ; preds = %166
  %175 = icmp ugt i64 %163, %168
  br i1 %175, label %176, label %178

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %165, i64 %168
  store %"class.spv::Instruction"** %177, %"class.spv::Instruction"*** %157, align 8
  br label %178

178:                                              ; preds = %143, %170, %174, %176
  %179 = phi %"class.spv::Instruction"** [ %165, %176 ], [ %165, %174 ], [ %173, %170 ], [ %165, %143 ]
  %180 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %179, i64 %155
  store %"class.spv::Instruction"* %152, %"class.spv::Instruction"** %180, align 8
  %181 = ptrtoint i8* %122 to i64
  %182 = load %"class.spv::Block"**, %"class.spv::Block"*** %32, align 8
  %183 = load %"class.spv::Block"**, %"class.spv::Block"*** %33, align 8
  %184 = icmp ult %"class.spv::Block"** %182, %183
  %185 = ptrtoint %"class.spv::Block"** %183 to i64
  br i1 %184, label %186, label %190

186:                                              ; preds = %178
  %187 = bitcast %"class.spv::Block"** %182 to i64*
  store i64 %181, i64* %187, align 8
  %188 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %182, i64 1
  %189 = ptrtoint %"class.spv::Block"** %188 to i64
  store i64 %189, i64* %34, align 8
  br label %243

190:                                              ; preds = %178
  %191 = ptrtoint %"class.spv::Block"** %182 to i64
  %192 = load i64, i64* %35, align 8
  %193 = sub i64 %191, %192
  %194 = ashr exact i64 %193, 3
  %195 = add nsw i64 %194, 1
  %196 = icmp ugt i64 %195, 2305843009213693951
  br i1 %196, label %197, label %199

197:                                              ; preds = %190
  %198 = bitcast %"class.std::__1::vector.48"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %198) #20
  unreachable

199:                                              ; preds = %190
  %200 = sub i64 %185, %192
  %201 = ashr exact i64 %200, 3
  %202 = icmp ult i64 %201, 1152921504606846975
  br i1 %202, label %203, label %211

203:                                              ; preds = %199
  %204 = ashr exact i64 %200, 2
  %205 = icmp ult i64 %204, %195
  %206 = select i1 %205, i64 %195, i64 %204
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %216, label %208

208:                                              ; preds = %203
  %209 = icmp ugt i64 %206, 2305843009213693951
  br i1 %209, label %210, label %211

210:                                              ; preds = %208
  call void @abort() #20
  unreachable

211:                                              ; preds = %208, %199
  %212 = phi i64 [ %206, %208 ], [ 2305843009213693951, %199 ]
  %213 = shl i64 %212, 3
  %214 = call i8* @_Znwm(i64 %213) #18
  %215 = bitcast i8* %214 to %"class.spv::Block"**
  br label %216

216:                                              ; preds = %211, %203
  %217 = phi i64 [ %212, %211 ], [ 0, %203 ]
  %218 = phi %"class.spv::Block"** [ %215, %211 ], [ null, %203 ]
  %219 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %218, i64 %194
  %220 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %218, i64 %217
  %221 = ptrtoint %"class.spv::Block"** %220 to i64
  %222 = bitcast %"class.spv::Block"** %219 to i64*
  store i64 %181, i64* %222, align 8
  %223 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %219, i64 1
  %224 = ptrtoint %"class.spv::Block"** %223 to i64
  %225 = load %"class.spv::Block"**, %"class.spv::Block"*** %37, align 8
  %226 = load i64, i64* %34, align 8
  %227 = ptrtoint %"class.spv::Block"** %225 to i64
  %228 = sub i64 %226, %227
  %229 = ashr exact i64 %228, 3
  %230 = sub nsw i64 0, %229
  %231 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %219, i64 %230
  %232 = ptrtoint %"class.spv::Block"** %231 to i64
  %233 = icmp sgt i64 %228, 0
  br i1 %233, label %234, label %238

234:                                              ; preds = %216
  %235 = bitcast %"class.spv::Block"** %231 to i8*
  %236 = bitcast %"class.spv::Block"** %225 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 %228, i1 false) #17
  %237 = load %"class.spv::Block"**, %"class.spv::Block"*** %37, align 8
  br label %238

238:                                              ; preds = %234, %216
  %239 = phi %"class.spv::Block"** [ %225, %216 ], [ %237, %234 ]
  store i64 %232, i64* %35, align 8
  store i64 %224, i64* %34, align 8
  store i64 %221, i64* %36, align 8
  %240 = icmp eq %"class.spv::Block"** %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %238
  %242 = bitcast %"class.spv::Block"** %239 to i8*
  call void @_ZdlPv(i8* %242) #18
  br label %243

243:                                              ; preds = %186, %238, %241
  %244 = add nuw nsw i32 %123, 1
  %245 = call i8* @_Znwm(i64 120) #18
  %246 = load i32, i32* %18, align 8
  %247 = add i32 %246, 1
  store i32 %247, i32* %18, align 8
  %248 = bitcast i8* %245 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %248, align 8
  %249 = getelementptr inbounds i8, i8* %245, i64 8
  %250 = bitcast i8* %249 to %"class.std::__1::vector.38"*
  %251 = getelementptr inbounds i8, i8* %245, i64 104
  %252 = bitcast i8* %251 to %"class.spv::Function"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %249, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %15, %"class.spv::Function"** %252, align 8
  %253 = getelementptr inbounds i8, i8* %245, i64 112
  store i8 0, i8* %253, align 8
  %254 = icmp eq i32 %244, %3
  br i1 %254, label %38, label %119

255:                                              ; preds = %103
  %256 = sext i32 %6 to i64
  %257 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 0
  %258 = load %"class.spv::Block"**, %"class.spv::Block"*** %257, align 8
  %259 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %258, i64 %256
  %260 = load %"class.spv::Block"*, %"class.spv::Block"** %259, align 8
  br label %261

261:                                              ; preds = %103, %255
  %262 = phi %"class.spv::Block"* [ %260, %255 ], [ %118, %103 ]
  %263 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %262, i64 0, i32 1, i32 0, i32 0
  %264 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %263, align 8
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %264, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %265, align 8
  %267 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %266, i64 0, i32 1
  %268 = load i32, i32* %267, align 8
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %108, i32 %268)
  %269 = load %"class.spv::Block"*, %"class.spv::Block"** %12, align 8
  call void @_ZN3spv5Block14addPredecessorEPS0_(%"class.spv::Block"* %262, %"class.spv::Block"* %269)
  %270 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %4, i64 0, i32 0, i32 1
  %271 = bitcast i32** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.std::__1::vector.200"* %4 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = sub i64 %272, %274
  %276 = lshr exact i64 %275, 2
  %277 = trunc i64 %276 to i32
  %278 = icmp sgt i32 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %261
  %280 = getelementptr inbounds %"class.std::__1::vector.200", %"class.std::__1::vector.200"* %5, i64 0, i32 0, i32 0
  %281 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %7, i64 0, i32 0, i32 0
  br label %388

282:                                              ; preds = %388, %261
  %283 = load %"class.spv::Block"*, %"class.spv::Block"** %12, align 8
  %284 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284)
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr"* %9 to i8**
  store i8* %107, i8** %286, align 8
  %287 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %283, i64 0, i32 1, i32 0, i32 1
  %288 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %287, align 8
  %289 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %283, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %290 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %289, align 8
  %291 = icmp ult %"class.std::__1::unique_ptr"* %288, %290
  br i1 %291, label %292, label %298

292:                                              ; preds = %282
  %293 = ptrtoint i8* %107 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %285, align 8
  %294 = bitcast %"class.std::__1::unique_ptr"* %288 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %288, i64 1
  %296 = ptrtoint %"class.std::__1::unique_ptr"* %295 to i64
  %297 = bitcast %"class.std::__1::unique_ptr"** %287 to i64*
  store i64 %296, i64* %297, align 8
  br label %300

298:                                              ; preds = %282
  %299 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %283, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %299, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %9) #17
  br label %300

300:                                              ; preds = %298, %292
  %301 = getelementptr inbounds i8, i8* %107, i64 72
  %302 = bitcast i8* %301 to %"class.spv::Block"**
  store %"class.spv::Block"* %283, %"class.spv::Block"** %302, align 8
  %303 = load i32, i32* %111, align 8
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %337, label %305

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %283, i64 0, i32 5
  %307 = load %"class.spv::Function"*, %"class.spv::Function"** %306, align 8
  %308 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %307, i64 0, i32 1
  %309 = load %"class.spv::Module"*, %"class.spv::Module"** %308, align 8
  %310 = zext i32 %303 to i64
  %311 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %309, i64 0, i32 2
  %312 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %309, i64 0, i32 2, i32 0, i32 1
  %313 = bitcast %"class.spv::Instruction"*** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.std::__1::vector.55"* %311 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = sub i64 %314, %316
  %318 = ashr exact i64 %317, 3
  %319 = icmp ugt i64 %318, %310
  %320 = inttoptr i64 %316 to %"class.spv::Instruction"**
  br i1 %319, label %333, label %321

321:                                              ; preds = %305
  %322 = add i32 %303, 16
  %323 = zext i32 %322 to i64
  %324 = icmp ult i64 %318, %323
  br i1 %324, label %325, label %329

325:                                              ; preds = %321
  %326 = sub nsw i64 %323, %318
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %311, i64 %326) #17
  %327 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %311, i64 0, i32 0, i32 0
  %328 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %327, align 8
  br label %333

329:                                              ; preds = %321
  %330 = icmp ugt i64 %318, %323
  br i1 %330, label %331, label %333

331:                                              ; preds = %329
  %332 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %320, i64 %323
  store %"class.spv::Instruction"** %332, %"class.spv::Instruction"*** %312, align 8
  br label %333

333:                                              ; preds = %331, %329, %325, %305
  %334 = phi %"class.spv::Instruction"** [ %320, %331 ], [ %320, %329 ], [ %328, %325 ], [ %320, %305 ]
  %335 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %334, i64 %310
  %336 = bitcast %"class.spv::Instruction"** %335 to i8**
  store i8* %107, i8** %336, align 8
  br label %337

337:                                              ; preds = %333, %300
  %338 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %285, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %285, align 8
  %339 = icmp eq %"class.spv::Instruction"* %338, null
  br i1 %339, label %345, label %340

340:                                              ; preds = %337
  %341 = bitcast %"class.spv::Instruction"* %338 to void (%"class.spv::Instruction"*)***
  %342 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %342, i64 1
  %344 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %343, align 8
  call void %344(%"class.spv::Instruction"* nonnull %338) #17
  br label %345

345:                                              ; preds = %337, %340
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284)
  %346 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 2
  %347 = bitcast %"class.spv::Block"**** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1
  %350 = bitcast %"class.spv::Block"**** %349 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = sub i64 %348, %351
  %353 = icmp eq i64 %352, 0
  %354 = shl i64 %352, 6
  %355 = add i64 %354, -1
  %356 = select i1 %353, i64 0, i64 %355
  %357 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %358 = load i64, i64* %357, align 8
  %359 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 2, i32 0, i32 0
  %360 = load i64, i64* %359, align 8
  %361 = add i64 %360, %358
  %362 = icmp eq i64 %356, %361
  %363 = inttoptr i64 %351 to %"class.spv::Block"***
  %364 = inttoptr i64 %348 to %"class.spv::Block"***
  br i1 %362, label %365, label %372

365:                                              ; preds = %345
  %366 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0
  call void @_ZNSt3__15dequeIPN3spv5BlockENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %366) #17
  %367 = load i64, i64* %359, align 8
  %368 = load i64, i64* %357, align 8
  %369 = load %"class.spv::Block"***, %"class.spv::Block"**** %349, align 8
  %370 = load %"class.spv::Block"***, %"class.spv::Block"**** %346, align 8
  %371 = add i64 %368, %367
  br label %372

372:                                              ; preds = %365, %345
  %373 = phi i64 [ %371, %365 ], [ %361, %345 ]
  %374 = phi %"class.spv::Block"*** [ %370, %365 ], [ %364, %345 ]
  %375 = phi %"class.spv::Block"*** [ %369, %365 ], [ %363, %345 ]
  %376 = icmp eq %"class.spv::Block"*** %374, %375
  br i1 %376, label %384, label %377

377:                                              ; preds = %372
  %378 = lshr i64 %373, 9
  %379 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %375, i64 %378
  %380 = load %"class.spv::Block"**, %"class.spv::Block"*** %379, align 8
  %381 = and i64 %373, 511
  %382 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %380, i64 %381
  %383 = bitcast %"class.spv::Block"** %382 to i64*
  br label %384

384:                                              ; preds = %372, %377
  %385 = phi i64* [ %383, %377 ], [ null, %372 ]
  store i64 %106, i64* %385, align 8
  %386 = load i64, i64* %359, align 8
  %387 = add i64 %386, 1
  store i64 %387, i64* %359, align 8
  ret void

388:                                              ; preds = %279, %388
  %389 = phi i64 [ %274, %279 ], [ %417, %388 ]
  %390 = phi i64 [ 0, %279 ], [ %415, %388 ]
  %391 = inttoptr i64 %389 to i32*
  %392 = getelementptr inbounds i32, i32* %391, i64 %390
  %393 = load i32, i32* %392, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %108, i32 %393)
  %394 = load i32*, i32** %280, align 8
  %395 = getelementptr inbounds i32, i32* %394, i64 %390
  %396 = load i32, i32* %395, align 4
  %397 = sext i32 %396 to i64
  %398 = load %"class.spv::Block"**, %"class.spv::Block"*** %281, align 8
  %399 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %398, i64 %397
  %400 = load %"class.spv::Block"*, %"class.spv::Block"** %399, align 8
  %401 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %400, i64 0, i32 1, i32 0, i32 0
  %402 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %401, align 8
  %403 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %402, i64 0, i32 0, i32 0, i32 0
  %404 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %403, align 8
  %405 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %404, i64 0, i32 1
  %406 = load i32, i32* %405, align 8
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %108, i32 %406)
  %407 = load i32*, i32** %280, align 8
  %408 = getelementptr inbounds i32, i32* %407, i64 %390
  %409 = load i32, i32* %408, align 4
  %410 = sext i32 %409 to i64
  %411 = load %"class.spv::Block"**, %"class.spv::Block"*** %281, align 8
  %412 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %411, i64 %410
  %413 = load %"class.spv::Block"*, %"class.spv::Block"** %412, align 8
  %414 = load %"class.spv::Block"*, %"class.spv::Block"** %12, align 8
  call void @_ZN3spv5Block14addPredecessorEPS0_(%"class.spv::Block"* %413, %"class.spv::Block"* %414)
  %415 = add nuw nsw i64 %390, 1
  %416 = load i64, i64* %271, align 8
  %417 = load i64, i64* %273, align 8
  %418 = sub i64 %416, %417
  %419 = shl i64 %418, 30
  %420 = ashr i64 %419, 32
  %421 = icmp slt i64 %415, %420
  br i1 %421, label %388, label %282
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv5Block14addPredecessorEPS0_(%"class.spv::Block"*, %"class.spv::Block"*) local_unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.spv::Block"* %1 to i64
  %4 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.spv::Block"**, %"class.spv::Block"*** %5, align 8
  %7 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.spv::Block"**, %"class.spv::Block"*** %7, align 8
  %9 = icmp eq %"class.spv::Block"** %6, %8
  %10 = ptrtoint %"class.spv::Block"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.spv::Block"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %6, i64 1
  %14 = ptrtoint %"class.spv::Block"** %13 to i64
  %15 = bitcast %"class.spv::Block"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.spv::Block"** %6 to i64
  %18 = bitcast %"class.spv::Block"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.48"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.48"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #20
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.spv::Block"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #18
  %44 = bitcast i8* %43 to %"class.spv::Block"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.spv::Block"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %47, i64 %22
  %49 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %47, i64 %46
  %50 = ptrtoint %"class.spv::Block"** %49 to i64
  %51 = bitcast %"class.spv::Block"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %48, i64 1
  %53 = ptrtoint %"class.spv::Block"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.spv::Block"**, %"class.spv::Block"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.spv::Block"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %48, i64 %60
  %62 = ptrtoint %"class.spv::Block"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.spv::Block"** %61 to i8*
  %66 = bitcast %"class.spv::Block"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #17
  %67 = load %"class.spv::Block"**, %"class.spv::Block"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.spv::Block"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.spv::Block"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.spv::Block"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #18
  br label %73

73:                                               ; preds = %11, %68, %71
  %74 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %1, i64 0, i32 3
  %75 = ptrtoint %"class.spv::Block"* %0 to i64
  %76 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %1, i64 0, i32 3, i32 0, i32 1
  %77 = load %"class.spv::Block"**, %"class.spv::Block"*** %76, align 8
  %78 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %1, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %79 = load %"class.spv::Block"**, %"class.spv::Block"*** %78, align 8
  %80 = icmp ult %"class.spv::Block"** %77, %79
  %81 = ptrtoint %"class.spv::Block"** %79 to i64
  br i1 %80, label %82, label %87

82:                                               ; preds = %73
  %83 = bitcast %"class.spv::Block"** %77 to i64*
  store i64 %75, i64* %83, align 8
  %84 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %77, i64 1
  %85 = ptrtoint %"class.spv::Block"** %84 to i64
  %86 = bitcast %"class.spv::Block"*** %76 to i64*
  store i64 %85, i64* %86, align 8
  br label %144

87:                                               ; preds = %73
  %88 = ptrtoint %"class.spv::Block"** %77 to i64
  %89 = bitcast %"class.spv::Block"*** %76 to i64*
  %90 = bitcast %"class.std::__1::vector.48"* %74 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %88, %91
  %93 = ashr exact i64 %92, 3
  %94 = add nsw i64 %93, 1
  %95 = icmp ugt i64 %94, 2305843009213693951
  br i1 %95, label %96, label %98

96:                                               ; preds = %87
  %97 = bitcast %"class.std::__1::vector.48"* %74 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %97) #20
  unreachable

98:                                               ; preds = %87
  %99 = bitcast %"class.spv::Block"*** %78 to i64*
  %100 = sub i64 %81, %91
  %101 = ashr exact i64 %100, 3
  %102 = icmp ult i64 %101, 1152921504606846975
  br i1 %102, label %103, label %111

103:                                              ; preds = %98
  %104 = ashr exact i64 %100, 2
  %105 = icmp ult i64 %104, %94
  %106 = select i1 %105, i64 %94, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = icmp ugt i64 %106, 2305843009213693951
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #20
  unreachable

111:                                              ; preds = %108, %98
  %112 = phi i64 [ %106, %108 ], [ 2305843009213693951, %98 ]
  %113 = shl i64 %112, 3
  %114 = tail call i8* @_Znwm(i64 %113) #18
  %115 = bitcast i8* %114 to %"class.spv::Block"**
  br label %116

116:                                              ; preds = %111, %103
  %117 = phi i64 [ %112, %111 ], [ 0, %103 ]
  %118 = phi %"class.spv::Block"** [ %115, %111 ], [ null, %103 ]
  %119 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %118, i64 %93
  %120 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %118, i64 %117
  %121 = ptrtoint %"class.spv::Block"** %120 to i64
  %122 = bitcast %"class.spv::Block"** %119 to i64*
  store i64 %75, i64* %122, align 8
  %123 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %119, i64 1
  %124 = ptrtoint %"class.spv::Block"** %123 to i64
  %125 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %74, i64 0, i32 0, i32 0
  %126 = load %"class.spv::Block"**, %"class.spv::Block"*** %125, align 8
  %127 = load i64, i64* %89, align 8
  %128 = ptrtoint %"class.spv::Block"** %126 to i64
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 3
  %131 = sub nsw i64 0, %130
  %132 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %119, i64 %131
  %133 = ptrtoint %"class.spv::Block"** %132 to i64
  %134 = icmp sgt i64 %129, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %116
  %136 = bitcast %"class.spv::Block"** %132 to i8*
  %137 = bitcast %"class.spv::Block"** %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 %129, i1 false) #17
  %138 = load %"class.spv::Block"**, %"class.spv::Block"*** %125, align 8
  br label %139

139:                                              ; preds = %135, %116
  %140 = phi %"class.spv::Block"** [ %126, %116 ], [ %138, %135 ]
  store i64 %133, i64* %90, align 8
  store i64 %124, i64* %89, align 8
  store i64 %121, i64* %99, align 8
  %141 = icmp eq %"class.spv::Block"** %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  %143 = bitcast %"class.spv::Block"** %140 to i8*
  tail call void @_ZdlPv(i8* %143) #18
  br label %144

144:                                              ; preds = %82, %139, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder14addSwitchBreakEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, -1
  %7 = add i64 %6, %5
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1
  %9 = load %"class.spv::Block"***, %"class.spv::Block"**** %8, align 8
  %10 = lshr i64 %7, 9
  %11 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %9, i64 %10
  %12 = load %"class.spv::Block"**, %"class.spv::Block"*** %11, align 8
  %13 = and i64 %7, 511
  %14 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %12, i64 %13
  %15 = load %"class.spv::Block"*, %"class.spv::Block"** %14, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %0, %"class.spv::Block"* %15)
  tail call void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* %0, i8* undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder17nextSwitchSegmentERNSt3__16vectorIPNS_5BlockENS1_9allocatorIS4_EEEEi(%"class.spv::Builder"* nocapture, %"class.std::__1::vector.48"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #1 align 2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %7 = load %"class.spv::Block"*, %"class.spv::Block"** %6, align 8
  %8 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %7, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 -1, i32 0, i32 0, i32 0
  %11 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %14 [
    i32 249, label %20
    i32 250, label %20
    i32 251, label %20
    i32 252, label %20
    i32 4416, label %20
    i32 253, label %20
    i32 254, label %20
    i32 255, label %20
  ]

14:                                               ; preds = %5
  %15 = sext i32 %2 to i64
  %16 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.spv::Block"**, %"class.spv::Block"*** %16, align 8
  %18 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %17, i64 %15
  %19 = load %"class.spv::Block"*, %"class.spv::Block"** %18, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %0, %"class.spv::Block"* %19)
  br label %20

20:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %14, %3
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.spv::Block"**, %"class.spv::Block"*** %22, align 8
  %24 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %23, i64 %21
  %25 = load %"class.spv::Block"*, %"class.spv::Block"** %24, align 8
  %26 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %25, i64 0, i32 5
  %27 = load %"class.spv::Function"*, %"class.spv::Function"** %26, align 8
  tail call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %27, %"class.spv::Block"* %25)
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  store %"class.spv::Block"* %25, %"class.spv::Block"** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder9endSwitchERNSt3__16vectorIPNS_5BlockENS1_9allocatorIS4_EEEE(%"class.spv::Builder"* nocapture, %"class.std::__1::vector.48"* nocapture readnone dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %4 = load %"class.spv::Block"*, %"class.spv::Block"** %3, align 8
  %5 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %4, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 -1, i32 0, i32 0, i32 0
  %8 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %11 [
    i32 249, label %26
    i32 250, label %26
    i32 251, label %26
    i32 252, label %26
    i32 4416, label %26
    i32 253, label %26
    i32 254, label %26
    i32 255, label %26
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %13, -1
  %17 = add i64 %16, %15
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1
  %19 = load %"class.spv::Block"***, %"class.spv::Block"**** %18, align 8
  %20 = lshr i64 %17, 9
  %21 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %19, i64 %20
  %22 = load %"class.spv::Block"**, %"class.spv::Block"*** %21, align 8
  %23 = and i64 %17, 511
  %24 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %22, i64 %23
  %25 = load %"class.spv::Block"*, %"class.spv::Block"** %24, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %0, %"class.spv::Block"* %25) #17
  tail call void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* %0, i8* undef) #17
  br label %26

26:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %11
  %27 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %28, -1
  %32 = add i64 %31, %30
  %33 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1
  %34 = load %"class.spv::Block"***, %"class.spv::Block"**** %33, align 8
  %35 = lshr i64 %32, 9
  %36 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %34, i64 %35
  %37 = load %"class.spv::Block"**, %"class.spv::Block"*** %36, align 8
  %38 = and i64 %32, 511
  %39 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %37, i64 %38
  %40 = load %"class.spv::Block"*, %"class.spv::Block"** %39, align 8
  %41 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %40, i64 0, i32 5
  %42 = load %"class.spv::Function"*, %"class.spv::Function"** %41, align 8
  tail call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %42, %"class.spv::Block"* %40)
  %43 = load i64, i64* %27, align 8
  %44 = load i64, i64* %29, align 8
  %45 = add i64 %43, -1
  %46 = add i64 %45, %44
  %47 = load %"class.spv::Block"***, %"class.spv::Block"**** %33, align 8
  %48 = lshr i64 %46, 9
  %49 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %47, i64 %48
  %50 = load %"class.spv::Block"**, %"class.spv::Block"*** %49, align 8
  %51 = and i64 %46, 511
  %52 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %50, i64 %51
  %53 = bitcast %"class.spv::Block"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.spv::Block"** %3 to i64*
  store i64 %54, i64* %55, align 8
  store i64 %45, i64* %27, align 8
  %56 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 2
  %57 = bitcast %"class.spv::Block"**** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = ptrtoint %"class.spv::Block"*** %47 to i64
  %60 = sub i64 %58, %59
  %61 = icmp eq i64 %60, 0
  %62 = shl i64 %60, 6
  %63 = add i64 %62, -1
  %64 = select i1 %61, i64 0, i64 %63
  %65 = sub i64 1, %43
  %66 = sub i64 %65, %44
  %67 = add i64 %66, %64
  %68 = icmp ult i64 %67, 1024
  br i1 %68, label %76, label %69

69:                                               ; preds = %26
  %70 = inttoptr i64 %58 to %"class.spv::Block"***
  %71 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %70, i64 -1
  %72 = bitcast %"class.spv::Block"*** %71 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #18
  %74 = load %"class.spv::Block"***, %"class.spv::Block"**** %56, align 8
  %75 = getelementptr %"class.spv::Block"**, %"class.spv::Block"*** %74, i64 -1
  store %"class.spv::Block"*** %75, %"class.spv::Block"**** %56, align 8
  br label %76

76:                                               ; preds = %26, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(120) %"class.spv::Block"* @_ZN3spv7Builder12makeNewBlockEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr", align 8
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %4 = load %"class.spv::Block"*, %"class.spv::Block"** %3, align 8
  %5 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %4, i64 0, i32 5
  %6 = load %"class.spv::Function"*, %"class.spv::Function"** %5, align 8
  %7 = tail call i8* @_Znwm(i64 120) #18
  %8 = bitcast i8* %7 to %"class.spv::Block"*
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to %"class.std::__1::vector.38"*
  %15 = getelementptr inbounds i8, i8* %7, i64 104
  %16 = bitcast i8* %15 to %"class.spv::Function"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 96, i1 false) #17
  store %"class.spv::Function"* %6, %"class.spv::Function"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 112
  store i8 0, i8* %17, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = tail call i8* @_Znwm(i64 80) #18
  %20 = bitcast i8* %19 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %11, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %19, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 248, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 56, i1 false) #17
  %28 = ptrtoint i8* %19 to i64
  %29 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %7, i64 16
  %31 = bitcast i8* %30 to %"class.std::__1::unique_ptr"**
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %14, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %2) #17
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %32, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %32, align 8
  %34 = icmp eq %"class.spv::Instruction"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %1
  %36 = bitcast %"class.spv::Instruction"* %33 to void (%"class.spv::Instruction"*)***
  %37 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %37, i64 1
  %39 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %38, align 8
  call void %39(%"class.spv::Instruction"* nonnull %33) #17
  br label %40

40:                                               ; preds = %35, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 -1, i32 0, i32 0, i32 0
  %43 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %42, align 8
  %44 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %43, i64 0, i32 6
  %45 = bitcast %"class.spv::Block"** %44 to i8**
  store i8* %7, i8** %45, align 8
  %46 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %6, i64 0, i32 1
  %47 = load %"class.spv::Module"*, %"class.spv::Module"** %46, align 8
  %48 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 -1, i32 0, i32 0, i32 0
  %50 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %49, align 8
  %51 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2
  %55 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %47, i64 0, i32 2, i32 0, i32 1
  %56 = bitcast %"class.spv::Instruction"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.55"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, %53
  %63 = inttoptr i64 %59 to %"class.spv::Instruction"**
  br i1 %62, label %76, label %64

64:                                               ; preds = %40
  %65 = add i32 %52, 16
  %66 = zext i32 %65 to i64
  %67 = icmp ult i64 %61, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = sub nsw i64 %66, %61
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %54, i64 %69) #17
  %70 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %54, i64 0, i32 0, i32 0
  %71 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %70, align 8
  br label %76

72:                                               ; preds = %64
  %73 = icmp ugt i64 %61, %66
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %63, i64 %66
  store %"class.spv::Instruction"** %75, %"class.spv::Instruction"*** %55, align 8
  br label %76

76:                                               ; preds = %40, %68, %72, %74
  %77 = phi %"class.spv::Instruction"** [ %63, %74 ], [ %63, %72 ], [ %71, %68 ], [ %63, %40 ]
  %78 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %77, i64 %53
  store %"class.spv::Instruction"* %50, %"class.spv::Instruction"** %78, align 8
  call void @_ZN3spv8Function8addBlockEPNS_5BlockE(%"class.spv::Function"* %6, %"class.spv::Block"* nonnull %8)
  ret %"class.spv::Block"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.spv::Builder::LoopBlocks"* @_ZN3spv7Builder11makeNewLoopEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = tail call dereferenceable(120) %"class.spv::Block"* @_ZN3spv7Builder12makeNewBlockEv(%"class.spv::Builder"* %0)
  %3 = tail call dereferenceable(120) %"class.spv::Block"* @_ZN3spv7Builder12makeNewBlockEv(%"class.spv::Builder"* %0)
  %4 = tail call dereferenceable(120) %"class.spv::Block"* @_ZN3spv7Builder12makeNewBlockEv(%"class.spv::Builder"* %0)
  %5 = tail call dereferenceable(120) %"class.spv::Block"* @_ZN3spv7Builder12makeNewBlockEv(%"class.spv::Builder"* %0)
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"struct.spv::Builder::LoopBlocks"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.spv::Builder::LoopBlocks"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = icmp eq i64 %12, 0
  %14 = shl i64 %12, 4
  %15 = add i64 %14, -1
  %16 = select i1 %13, i64 0, i64 %15
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  %22 = icmp eq i64 %16, %21
  %23 = inttoptr i64 %11 to %"struct.spv::Builder::LoopBlocks"**
  %24 = inttoptr i64 %8 to %"struct.spv::Builder::LoopBlocks"**
  br i1 %22, label %25, label %32

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0
  tail call void @_ZNSt3__15dequeIN3spv7Builder10LoopBlocksENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.116"* %26) #17
  %27 = load i64, i64* %19, align 8
  %28 = load i64, i64* %17, align 8
  %29 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %9, align 8
  %30 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %6, align 8
  %31 = add i64 %28, %27
  br label %32

32:                                               ; preds = %25, %1
  %33 = phi i64 [ %31, %25 ], [ %21, %1 ]
  %34 = phi %"struct.spv::Builder::LoopBlocks"** [ %30, %25 ], [ %24, %1 ]
  %35 = phi %"struct.spv::Builder::LoopBlocks"** [ %29, %25 ], [ %23, %1 ]
  %36 = icmp eq %"struct.spv::Builder::LoopBlocks"** %34, %35
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = lshr i64 %33, 7
  %39 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %35, i64 %38
  %40 = load %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %39, align 8
  %41 = and i64 %33, 127
  %42 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %40, i64 %41
  %43 = bitcast %"struct.spv::Builder::LoopBlocks"* %42 to i8*
  br label %44

44:                                               ; preds = %32, %37
  %45 = phi i8* [ %43, %37 ], [ null, %32 ]
  %46 = bitcast i8* %45 to %"class.spv::Block"**
  store %"class.spv::Block"* %2, %"class.spv::Block"** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to %"class.spv::Block"**
  store %"class.spv::Block"* %3, %"class.spv::Block"** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 16
  %50 = bitcast i8* %49 to %"class.spv::Block"**
  store %"class.spv::Block"* %4, %"class.spv::Block"** %50, align 8
  %51 = getelementptr inbounds i8, i8* %45, i64 24
  %52 = bitcast i8* %51 to %"class.spv::Block"**
  store %"class.spv::Block"* %5, %"class.spv::Block"** %52, align 8
  %53 = load i64, i64* %19, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %19, align 8
  %55 = load i64, i64* %17, align 8
  %56 = add i64 %55, %53
  %57 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %9, align 8
  %58 = lshr i64 %56, 7
  %59 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %57, i64 %58
  %60 = load %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %59, align 8
  %61 = and i64 %56, 127
  %62 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %60, i64 %61
  ret %"struct.spv::Builder::LoopBlocks"* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder18createLoopContinueEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, -1
  %7 = add i64 %6, %5
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %8, align 8
  %10 = lshr i64 %7, 7
  %11 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %9, i64 %10
  %12 = load %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %11, align 8
  %13 = and i64 %7, 127
  %14 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %12, i64 %13, i32 3
  %15 = load %"class.spv::Block"*, %"class.spv::Block"** %14, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %0, %"class.spv::Block"* %15)
  tail call void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* %0, i8* undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder14createLoopExitEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, -1
  %7 = add i64 %6, %5
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %8, align 8
  %10 = lshr i64 %7, 7
  %11 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %9, i64 %10
  %12 = load %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %11, align 8
  %13 = and i64 %7, 127
  %14 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks", %"struct.spv::Builder::LoopBlocks"* %12, i64 %13, i32 2
  %15 = load %"class.spv::Block"*, %"class.spv::Block"** %14, align 8
  tail call void @_ZN3spv7Builder12createBranchEPNS_5BlockE(%"class.spv::Builder"* %0, %"class.spv::Block"* %15)
  tail call void @_ZN3spv7Builder30createAndSetNoPredecessorBlockEPKc(%"class.spv::Builder"* %0, i8* undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder9closeLoopEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, -1
  store i64 %6, i64* %2, align 8
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast %"struct.spv::Builder::LoopBlocks"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 37, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.spv::Builder::LoopBlocks"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = icmp eq i64 %13, 0
  %15 = shl i64 %13, 4
  %16 = add i64 %15, -1
  %17 = select i1 %14, i64 0, i64 %16
  %18 = sub i64 1, %3
  %19 = sub i64 %18, %5
  %20 = add i64 %19, %17
  %21 = icmp ult i64 %20, 256
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = inttoptr i64 %9 to %"struct.spv::Builder::LoopBlocks"**
  %24 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %23, i64 -1
  %25 = bitcast %"struct.spv::Builder::LoopBlocks"** %24 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #18
  %27 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %7, align 8
  %28 = getelementptr %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %27, i64 -1
  store %"struct.spv::Builder::LoopBlocks"** %28, %"struct.spv::Builder::LoopBlocks"*** %7, align 8
  br label %29

29:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder22accessChainPushSwizzleERNSt3__16vectorIjNS1_9allocatorIjEEEEjNS0_11AccessChain13CoherentFlagsEj(%"class.spv::Builder"*, %"class.std::__1::vector.26"* readonly dereferenceable(24), i32, i32, i32) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = trunc i32 %3 to i16
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 11, i32 0
  %9 = load i16, i16* %8, align 4
  %10 = and i16 %7, 1
  %11 = or i16 %9, %7
  %12 = and i16 %11, 2
  %13 = and i16 %9, -1023
  %14 = or i16 %13, %10
  %15 = or i16 %14, %12
  %16 = and i16 %11, 4
  %17 = or i16 %15, %16
  %18 = and i16 %11, 8
  %19 = or i16 %17, %18
  %20 = and i16 %11, 16
  %21 = and i16 %11, 32
  %22 = and i16 %11, 64
  %23 = and i16 %11, 128
  %24 = and i16 %11, 256
  %25 = and i16 %11, 512
  %26 = or i16 %19, %20
  %27 = or i16 %26, %21
  %28 = or i16 %27, %22
  %29 = or i16 %28, %23
  %30 = or i16 %29, %24
  %31 = or i16 %30, %25
  store i16 %31, i16* %8, align 4
  %32 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 10
  %33 = load i32, i32* %32, align 4
  %34 = or i32 %33, %4
  store i32 %34, i32* %32, align 4
  %35 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 7
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %5
  store i32 %2, i32* %35, align 4
  br label %39

39:                                               ; preds = %38, %5
  %40 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %41 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.26"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 2
  %48 = icmp eq i64 %46, 0
  %49 = inttoptr i64 %45 to i32*
  br i1 %48, label %171, label %50

50:                                               ; preds = %39
  %51 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #17
  %52 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #17
  %54 = icmp ugt i64 %47, 4611686018427387903
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = bitcast %"class.std::__1::vector.26"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %56) #20
  unreachable

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = tail call i8* @_Znwm(i64 %46) #18
  %60 = bitcast i8* %59 to i32*
  %61 = bitcast i32** %53 to i8**
  store i8* %59, i8** %61, align 8
  %62 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  store i8* %59, i8** %62, align 8
  %63 = getelementptr inbounds i32, i32* %60, i64 %47
  store i32* %63, i32** %58, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %40, i64 0, i32 0, i32 0
  %65 = bitcast i32** %53 to i64*
  %66 = ptrtoint i8* %59 to i64
  %67 = icmp sgt i64 %46, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %57
  %69 = lshr exact i64 %46, 2
  %70 = inttoptr i64 %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %70, i64 %46, i1 false) #17
  %71 = getelementptr inbounds i32, i32* %60, i64 %69
  %72 = ptrtoint i32* %71 to i64
  br label %73

73:                                               ; preds = %57, %68
  %74 = phi i64 [ %72, %68 ], [ %66, %57 ]
  store i64 %74, i64* %65, align 8
  store i32* %49, i32** %41, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %76 = bitcast i32** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %77, %79
  br i1 %80, label %87, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast i32** %82 to i64*
  br label %92

84:                                               ; preds = %160
  %85 = bitcast i32* %168 to i8*
  %86 = icmp eq i32* %168, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %73, %84
  %88 = phi i32* [ %168, %84 ], [ %60, %73 ]
  %89 = phi i8* [ %85, %84 ], [ %59, %73 ]
  %90 = ptrtoint i32* %88 to i64
  store i64 %90, i64* %65, align 8
  tail call void @_ZdlPv(i8* %89) #18
  br label %91

91:                                               ; preds = %84, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #17
  br label %178

92:                                               ; preds = %169, %81
  %93 = phi i32* [ %49, %81 ], [ %170, %169 ]
  %94 = phi i32* [ %60, %81 ], [ %168, %169 ]
  %95 = phi i64 [ %79, %81 ], [ %164, %169 ]
  %96 = phi i64 [ 0, %81 ], [ %162, %169 ]
  %97 = phi i32 [ 0, %81 ], [ %161, %169 ]
  %98 = inttoptr i64 %95 to i32*
  %99 = getelementptr inbounds i32, i32* %98, i64 %96
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i32, i32* %94, i64 %101
  %103 = load i32*, i32** %82, align 8
  %104 = icmp eq i32* %93, %103
  br i1 %104, label %109, label %105

105:                                              ; preds = %92
  %106 = load i32, i32* %102, align 4
  store i32 %106, i32* %93, align 4
  %107 = getelementptr inbounds i32, i32* %93, i64 1
  %108 = ptrtoint i32* %107 to i64
  store i64 %108, i64* %42, align 8
  br label %160

109:                                              ; preds = %92
  %110 = ptrtoint i32* %103 to i64
  %111 = load i64, i64* %44, align 8
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 2
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 4611686018427387903
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::vector.26"* %40 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #20
  unreachable

118:                                              ; preds = %109
  %119 = icmp ult i64 %113, 2305843009213693951
  br i1 %119, label %120, label %128

120:                                              ; preds = %118
  %121 = ashr exact i64 %112, 1
  %122 = icmp ult i64 %121, %114
  %123 = select i1 %122, i64 %114, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %120
  %126 = icmp ugt i64 %123, 4611686018427387903
  br i1 %126, label %127, label %128

127:                                              ; preds = %125
  tail call void @abort() #20
  unreachable

128:                                              ; preds = %125, %118
  %129 = phi i64 [ %123, %125 ], [ 4611686018427387903, %118 ]
  %130 = shl i64 %129, 2
  %131 = tail call i8* @_Znwm(i64 %130) #18
  %132 = bitcast i8* %131 to i32*
  br label %133

133:                                              ; preds = %128, %120
  %134 = phi i64 [ %129, %128 ], [ 0, %120 ]
  %135 = phi i32* [ %132, %128 ], [ null, %120 ]
  %136 = getelementptr inbounds i32, i32* %135, i64 %113
  %137 = getelementptr inbounds i32, i32* %135, i64 %134
  %138 = ptrtoint i32* %137 to i64
  %139 = load i32, i32* %102, align 4
  store i32 %139, i32* %136, align 4
  %140 = getelementptr inbounds i32, i32* %136, i64 1
  %141 = ptrtoint i32* %140 to i64
  %142 = load i32*, i32** %64, align 8
  %143 = load i64, i64* %42, align 8
  %144 = ptrtoint i32* %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 2
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds i32, i32* %136, i64 %147
  %149 = ptrtoint i32* %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %133
  %152 = bitcast i32* %148 to i8*
  %153 = bitcast i32* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %153, i64 %145, i1 false) #17
  %154 = load i32*, i32** %64, align 8
  br label %155

155:                                              ; preds = %151, %133
  %156 = phi i32* [ %142, %133 ], [ %154, %151 ]
  store i64 %149, i64* %44, align 8
  store i64 %141, i64* %42, align 8
  store i64 %138, i64* %83, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = bitcast i32* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #18
  br label %160

160:                                              ; preds = %105, %155, %158
  %161 = add i32 %97, 1
  %162 = zext i32 %161 to i64
  %163 = load i64, i64* %76, align 8
  %164 = load i64, i64* %78, align 8
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 2
  %167 = icmp ugt i64 %166, %162
  %168 = load i32*, i32** %52, align 8
  br i1 %167, label %169, label %84

169:                                              ; preds = %160
  %170 = load i32*, i32** %41, align 8
  br label %92

171:                                              ; preds = %39
  %172 = icmp eq %"class.std::__1::vector.26"* %40, %1
  br i1 %172, label %178, label %173

173:                                              ; preds = %171
  %174 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %177 = load i32*, i32** %176, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.26"* %40, i32* %175, i32* %177) #17
  br label %178

178:                                              ; preds = %173, %171, %91
  %179 = load i32, i32* %35, align 4
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %182 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %181, align 8
  %183 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %182, i64 %180
  %184 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %183, align 8
  %185 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %184, i64 0, i32 3
  %186 = load i32, i32* %185, align 8
  switch i32 %186, label %213 [
    i32 30, label %203
    i32 28, label %192
    i32 24, label %187
    i32 23, label %187
  ]

187:                                              ; preds = %178, %178
  %188 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %184, i64 0, i32 4, i32 0, i32 0
  %189 = load i32*, i32** %188, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 1
  %191 = load i32, i32* %190, align 4
  br label %213

192:                                              ; preds = %178
  %193 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %184, i64 0, i32 4, i32 0, i32 0
  %194 = load i32*, i32** %193, align 8
  %195 = getelementptr inbounds i32, i32* %194, i64 1
  %196 = load i32, i32* %195, align 4
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %182, i64 %197
  %199 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %198, align 8
  %200 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %199, i64 0, i32 4, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = load i32, i32* %201, align 4
  br label %213

203:                                              ; preds = %178
  %204 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %184, i64 0, i32 4
  %205 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %184, i64 0, i32 4, i32 0, i32 1
  %206 = bitcast i32** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.std::__1::vector.26"* %204 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = sub i64 %207, %209
  %211 = lshr exact i64 %210, 2
  %212 = trunc i64 %211 to i32
  br label %213

213:                                              ; preds = %203, %192, %187, %178
  %214 = phi i32 [ %212, %203 ], [ %202, %192 ], [ %191, %187 ], [ 1, %178 ]
  %215 = load i64, i64* %42, align 8
  %216 = load i64, i64* %44, align 8
  %217 = sub i64 %215, %216
  %218 = ashr exact i64 %217, 2
  %219 = trunc i64 %218 to i32
  %220 = icmp sgt i32 %214, %219
  %221 = inttoptr i64 %216 to i32*
  br i1 %220, label %239, label %222

222:                                              ; preds = %213
  %223 = icmp eq i64 %217, 0
  br i1 %223, label %234, label %227

224:                                              ; preds = %227
  %225 = zext i32 %233 to i64
  %226 = icmp ugt i64 %218, %225
  br i1 %226, label %227, label %234

227:                                              ; preds = %222, %224
  %228 = phi i64 [ %225, %224 ], [ 0, %222 ]
  %229 = phi i32 [ %233, %224 ], [ 0, %222 ]
  %230 = getelementptr inbounds i32, i32* %221, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %229, %231
  %233 = add i32 %229, 1
  br i1 %232, label %224, label %239

234:                                              ; preds = %224, %222
  store i64 %216, i64* %42, align 8
  %235 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %236 = load i32, i32* %235, align 8
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %234
  store i32 0, i32* %35, align 4
  br label %239

239:                                              ; preds = %227, %213, %234, %238
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3spv7Builder26simplifyAccessChainSwizzleEv(%"class.spv::Builder"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %6 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, i64 %4
  %8 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %37 [
    i32 30, label %27
    i32 28, label %16
    i32 24, label %11
    i32 23, label %11
  ]

11:                                               ; preds = %1, %1
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 1
  %15 = load i32, i32* %14, align 4
  br label %37

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 1
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, i64 %21
  %23 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %22, align 8
  %24 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %23, i64 0, i32 4, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = load i32, i32* %25, align 4
  br label %37

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4
  %29 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.26"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = lshr exact i64 %34, 2
  %36 = trunc i64 %35 to i32
  br label %37

37:                                               ; preds = %1, %11, %16, %27
  %38 = phi i32 [ %36, %27 ], [ %26, %16 ], [ %15, %11 ], [ 1, %1 ]
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %40 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %41 = bitcast i32** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector.26"* %39 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = ashr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = icmp sgt i32 %38, %47
  %49 = inttoptr i64 %44 to i32*
  br i1 %48, label %67, label %50

50:                                               ; preds = %37
  %51 = icmp eq i64 %45, 0
  br i1 %51, label %62, label %55

52:                                               ; preds = %55
  %53 = zext i32 %61 to i64
  %54 = icmp ugt i64 %46, %53
  br i1 %54, label %55, label %62

55:                                               ; preds = %50, %52
  %56 = phi i64 [ %53, %52 ], [ 0, %50 ]
  %57 = phi i32 [ %61, %52 ], [ 0, %50 ]
  %58 = getelementptr inbounds i32, i32* %49, i64 %56
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %57, %59
  %61 = add i32 %57, 1
  br i1 %60, label %52, label %67

62:                                               ; preds = %52, %50
  store i64 %44, i64* %41, align 8
  %63 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  store i32 0, i32* %2, align 4
  br label %67

67:                                               ; preds = %55, %37, %66, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder16accessChainStoreEjNS_10DecorationENS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"*, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  tail call void @_ZN3spv7Builder26transferAccessChainSwizzleEb(%"class.spv::Builder"* %0, i1 zeroext true)
  %7 = tail call i32 @_ZN3spv7Builder19collapseAccessChainEv(%"class.spv::Builder"* %0)
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %7, i32 %2, i32 -1)
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %9 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.26"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %29, label %15

15:                                               ; preds = %6
  %16 = tail call i32 @_ZN3spv7Builder10createLoadEjNS_10DecorationENS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"* %0, i32 %7, i32 2147483647, i32 0, i32 2147483647, i32 0)
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %19 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %18, align 8
  %20 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, i64 %17
  %21 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %20, align 8
  %22 = icmp eq %"class.spv::Instruction"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %21, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %15, %23
  %27 = phi i32 [ %25, %23 ], [ 0, %15 ]
  %28 = tail call i32 @_ZN3spv7Builder19createLvalueSwizzleEjjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %27, i32 %16, i32 %1, %"class.std::__1::vector.26"* dereferenceable(24) %8)
  br label %29

29:                                               ; preds = %6, %26
  %30 = phi i32 [ %28, %26 ], [ %1, %6 ]
  %31 = sub i32 0, %5
  %32 = and i32 %31, %5
  %33 = zext i32 %7 to i64
  %34 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %35 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %34, align 8
  %36 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %35, i64 %33
  %37 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %36, align 8
  %38 = icmp eq %"class.spv::Instruction"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %37, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  br label %43

43:                                               ; preds = %29, %39
  %44 = phi i64 [ %42, %39 ], [ 0, %29 ]
  %45 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %35, i64 %44
  %46 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %46, i64 0, i32 4, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 5349
  %51 = or i32 %3, 2
  %52 = select i1 %50, i32 %51, i32 %3
  tail call void @_ZN3spv7Builder11createStoreEjjNS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"* %0, i32 %30, i32 %7, i32 %52, i32 %4, i32 %32)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder26transferAccessChainSwizzleEb(%"class.spv::Builder"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %4 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %8 to i32*
  br i1 %10, label %12, label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = xor i1 %1, true
  %17 = or i1 %15, %16
  br i1 %17, label %174, label %102

18:                                               ; preds = %2
  %19 = ashr exact i64 %9, 2
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %174, label %21

21:                                               ; preds = %18
  %22 = icmp eq i64 %9, 4
  br i1 %22, label %23, label %97

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %25 = load i32, i32* %11, align 4
  %26 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %27 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %26, i32 %25, i1 zeroext false) #17
  %28 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 2, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp ult i32* %29, %31
  %33 = ptrtoint i32* %31 to i64
  br i1 %32, label %34, label %38

34:                                               ; preds = %23
  store i32 %27, i32* %29, align 4
  %35 = getelementptr inbounds i32, i32* %29, i64 1
  %36 = ptrtoint i32* %35 to i64
  %37 = bitcast i32** %28 to i64*
  store i64 %36, i64* %37, align 8
  br label %94

38:                                               ; preds = %23
  %39 = ptrtoint i32* %29 to i64
  %40 = bitcast i32** %28 to i64*
  %41 = bitcast %"class.std::__1::vector.26"* %24 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = ashr exact i64 %43, 2
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 4611686018427387903
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::vector.26"* %24 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #20
  unreachable

49:                                               ; preds = %38
  %50 = bitcast i32** %30 to i64*
  %51 = sub i64 %33, %42
  %52 = ashr exact i64 %51, 2
  %53 = icmp ult i64 %52, 2305843009213693951
  br i1 %53, label %54, label %62

54:                                               ; preds = %49
  %55 = ashr exact i64 %51, 1
  %56 = icmp ult i64 %55, %45
  %57 = select i1 %56, i64 %45, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %54
  %60 = icmp ugt i64 %57, 4611686018427387903
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  tail call void @abort() #20
  unreachable

62:                                               ; preds = %59, %49
  %63 = phi i64 [ %57, %59 ], [ 4611686018427387903, %49 ]
  %64 = shl i64 %63, 2
  %65 = tail call i8* @_Znwm(i64 %64) #18
  %66 = bitcast i8* %65 to i32*
  br label %67

67:                                               ; preds = %62, %54
  %68 = phi i64 [ %63, %62 ], [ 0, %54 ]
  %69 = phi i32* [ %66, %62 ], [ null, %54 ]
  %70 = getelementptr inbounds i32, i32* %69, i64 %44
  %71 = getelementptr inbounds i32, i32* %69, i64 %68
  %72 = ptrtoint i32* %71 to i64
  store i32 %27, i32* %70, align 4
  %73 = getelementptr inbounds i32, i32* %70, i64 1
  %74 = ptrtoint i32* %73 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %24, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = load i64, i64* %40, align 8
  %78 = ptrtoint i32* %76 to i64
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 2
  %81 = sub nsw i64 0, %80
  %82 = getelementptr inbounds i32, i32* %70, i64 %81
  %83 = ptrtoint i32* %82 to i64
  %84 = icmp sgt i64 %79, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %67
  %86 = bitcast i32* %82 to i8*
  %87 = bitcast i32* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %79, i1 false) #17
  %88 = load i32*, i32** %75, align 8
  br label %89

89:                                               ; preds = %85, %67
  %90 = phi i32* [ %76, %67 ], [ %88, %85 ]
  store i64 %83, i64* %41, align 8
  store i64 %74, i64* %40, align 8
  store i64 %72, i64* %50, align 8
  %91 = icmp eq i32* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = bitcast i32* %90 to i8*
  tail call void @_ZdlPv(i8* %93) #18
  br label %94

94:                                               ; preds = %34, %89, %92
  %95 = load i64, i64* %7, align 8
  store i64 %95, i64* %5, align 8
  %96 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 7
  store i32 0, i32* %96, align 4
  br label %174

97:                                               ; preds = %21
  br i1 %1, label %98, label %174

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %174, label %102

102:                                              ; preds = %12, %98
  %103 = phi i32 [ %100, %98 ], [ %14, %12 ]
  %104 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %105 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %106 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 2, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %107, %109
  %111 = ptrtoint i32* %109 to i64
  br i1 %110, label %116, label %112

112:                                              ; preds = %102
  store i32 %103, i32* %107, align 4
  %113 = getelementptr inbounds i32, i32* %107, i64 1
  %114 = ptrtoint i32* %113 to i64
  %115 = bitcast i32** %106 to i64*
  store i64 %114, i64* %115, align 8
  br label %172

116:                                              ; preds = %102
  %117 = ptrtoint i32* %107 to i64
  %118 = bitcast i32** %106 to i64*
  %119 = bitcast %"class.std::__1::vector.26"* %105 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %117, %120
  %122 = ashr exact i64 %121, 2
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 4611686018427387903
  br i1 %124, label %125, label %127

125:                                              ; preds = %116
  %126 = bitcast %"class.std::__1::vector.26"* %105 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #20
  unreachable

127:                                              ; preds = %116
  %128 = bitcast i32** %108 to i64*
  %129 = sub i64 %111, %120
  %130 = ashr exact i64 %129, 2
  %131 = icmp ult i64 %130, 2305843009213693951
  br i1 %131, label %132, label %140

132:                                              ; preds = %127
  %133 = ashr exact i64 %129, 1
  %134 = icmp ult i64 %133, %123
  %135 = select i1 %134, i64 %123, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %132
  %138 = icmp ugt i64 %135, 4611686018427387903
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  tail call void @abort() #20
  unreachable

140:                                              ; preds = %137, %127
  %141 = phi i64 [ %135, %137 ], [ 4611686018427387903, %127 ]
  %142 = shl i64 %141, 2
  %143 = tail call i8* @_Znwm(i64 %142) #18
  %144 = bitcast i8* %143 to i32*
  br label %145

145:                                              ; preds = %140, %132
  %146 = phi i64 [ %141, %140 ], [ 0, %132 ]
  %147 = phi i32* [ %144, %140 ], [ null, %132 ]
  %148 = getelementptr inbounds i32, i32* %147, i64 %122
  %149 = getelementptr inbounds i32, i32* %147, i64 %146
  %150 = ptrtoint i32* %149 to i64
  store i32 %103, i32* %148, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 1
  %152 = ptrtoint i32* %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %105, i64 0, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = load i64, i64* %118, align 8
  %156 = ptrtoint i32* %154 to i64
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 2
  %159 = sub nsw i64 0, %158
  %160 = getelementptr inbounds i32, i32* %148, i64 %159
  %161 = ptrtoint i32* %160 to i64
  %162 = icmp sgt i64 %157, 0
  br i1 %162, label %163, label %167

163:                                              ; preds = %145
  %164 = bitcast i32* %160 to i8*
  %165 = bitcast i32* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %164, i8* align 4 %165, i64 %157, i1 false) #17
  %166 = load i32*, i32** %153, align 8
  br label %167

167:                                              ; preds = %163, %145
  %168 = phi i32* [ %154, %145 ], [ %166, %163 ]
  store i64 %161, i64* %119, align 8
  store i64 %152, i64* %118, align 8
  store i64 %150, i64* %128, align 8
  %169 = icmp eq i32* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %167
  %171 = bitcast i32* %168 to i8*
  tail call void @_ZdlPv(i8* %171) #18
  br label %172

172:                                              ; preds = %112, %167, %170
  %173 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 7
  store i32 0, i32* %173, align 4
  store i32 0, i32* %104, align 8
  br label %174

174:                                              ; preds = %12, %98, %97, %172, %18, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder19collapseAccessChainEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %107

5:                                                ; preds = %1
  tail call void @_ZN3spv7Builder19remapDynamicSwizzleEv(%"class.spv::Builder"* %0)
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %78, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %11 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 2, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %12, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %21, label %17

17:                                               ; preds = %9
  store i32 %7, i32* %12, align 4
  %18 = getelementptr inbounds i32, i32* %12, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %11 to i64*
  store i64 %19, i64* %20, align 8
  br label %77

21:                                               ; preds = %9
  %22 = ptrtoint i32* %12 to i64
  %23 = bitcast i32** %11 to i64*
  %24 = bitcast %"class.std::__1::vector.26"* %10 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = ashr exact i64 %26, 2
  %28 = add nsw i64 %27, 1
  %29 = icmp ugt i64 %28, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::vector.26"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #20
  unreachable

32:                                               ; preds = %21
  %33 = bitcast i32** %13 to i64*
  %34 = sub i64 %16, %25
  %35 = ashr exact i64 %34, 2
  %36 = icmp ult i64 %35, 2305843009213693951
  br i1 %36, label %37, label %45

37:                                               ; preds = %32
  %38 = ashr exact i64 %34, 1
  %39 = icmp ult i64 %38, %28
  %40 = select i1 %39, i64 %28, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = icmp ugt i64 %40, 4611686018427387903
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @abort() #20
  unreachable

45:                                               ; preds = %42, %32
  %46 = phi i64 [ %40, %42 ], [ 4611686018427387903, %32 ]
  %47 = shl i64 %46, 2
  %48 = tail call i8* @_Znwm(i64 %47) #18
  %49 = bitcast i8* %48 to i32*
  br label %50

50:                                               ; preds = %45, %37
  %51 = phi i64 [ %46, %45 ], [ 0, %37 ]
  %52 = phi i32* [ %49, %45 ], [ null, %37 ]
  %53 = getelementptr inbounds i32, i32* %52, i64 %27
  %54 = getelementptr inbounds i32, i32* %52, i64 %51
  %55 = ptrtoint i32* %54 to i64
  store i32 %7, i32* %53, align 4
  %56 = getelementptr inbounds i32, i32* %53, i64 1
  %57 = ptrtoint i32* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = load i64, i64* %23, align 8
  %61 = ptrtoint i32* %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 2
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds i32, i32* %53, i64 %64
  %66 = ptrtoint i32* %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %50
  %69 = bitcast i32* %65 to i8*
  %70 = bitcast i32* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %62, i1 false) #17
  %71 = load i32*, i32** %58, align 8
  br label %72

72:                                               ; preds = %68, %50
  %73 = phi i32* [ %59, %50 ], [ %71, %68 ]
  store i64 %66, i64* %24, align 8
  store i64 %57, i64* %23, align 8
  store i64 %55, i64* %33, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast i32* %73 to i8*
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %17, %72, %75
  store i32 0, i32* %6, align 8
  br label %78

78:                                               ; preds = %5, %77
  %79 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %80 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.26"* %79 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %82, %84
  %86 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 0
  %87 = load i32, i32* %86, align 8
  br i1 %85, label %107, label %88

88:                                               ; preds = %78
  %89 = zext i32 %87 to i64
  %90 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %91 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %90, align 8
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %89
  %93 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %92, align 8
  %94 = icmp eq %"class.spv::Instruction"* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %93, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  br label %99

99:                                               ; preds = %88, %95
  %100 = phi i64 [ %98, %95 ], [ 0, %88 ]
  %101 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %100
  %102 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %101, align 8
  %103 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %102, i64 0, i32 4, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = load i32, i32* %104, align 4
  %106 = tail call i32 @_ZN3spv7Builder17createAccessChainENS_12StorageClassEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %105, i32 %87, %"class.std::__1::vector.26"* dereferenceable(24) %79)
  store i32 %106, i32* %2, align 8
  br label %107

107:                                              ; preds = %78, %1, %99
  %108 = phi i32 [ %106, %99 ], [ %3, %1 ], [ %87, %78 ]
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder15accessChainLoadENS_10DecorationES1_S1_jNS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca %"class.std::__1::vector.26", align 8
  %11 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22
  %12 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 8
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %228, label %15

15:                                               ; preds = %8
  tail call void @_ZN3spv7Builder26transferAccessChainSwizzleEb(%"class.spv::Builder"* %0, i1 zeroext false)
  %16 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.26"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %19, %21
  br i1 %22, label %225, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 %4, i32 %25
  %28 = bitcast %"class.std::__1::vector.26"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  %29 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #17
  %32 = sub i64 %19, %21
  %33 = lshr exact i64 %32, 2
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %123

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %38 = bitcast i32** %30 to i64*
  %39 = bitcast %"class.std::__1::vector.26"* %10 to i64*
  %40 = bitcast i32** %31 to i64*
  br label %41

41:                                               ; preds = %36, %113
  %42 = phi i64 [ 0, %36 ], [ %114, %113 ]
  %43 = phi i32* [ null, %36 ], [ %115, %113 ]
  %44 = phi i64 [ %21, %36 ], [ %118, %113 ]
  %45 = phi i64 [ 0, %36 ], [ %116, %113 ]
  %46 = inttoptr i64 %44 to i32*
  %47 = getelementptr inbounds i32, i32* %46, i64 %45
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %37, align 8
  %51 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, i64 %49
  %52 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 43
  br i1 %55, label %56, label %131

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %52, i64 0, i32 4, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %31, align 8
  %61 = icmp ult i32* %43, %60
  %62 = ptrtoint i32* %60 to i64
  br i1 %61, label %63, label %66

63:                                               ; preds = %56
  store i32 %59, i32* %43, align 4
  %64 = getelementptr inbounds i32, i32* %43, i64 1
  %65 = ptrtoint i32* %64 to i64
  store i64 %65, i64* %38, align 8
  br label %113

66:                                               ; preds = %56
  %67 = ptrtoint i32* %43 to i64
  %68 = load i64, i64* %39, align 8
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 4611686018427387903
  br i1 %72, label %73, label %75

73:                                               ; preds = %66
  %74 = bitcast %"class.std::__1::vector.26"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %74) #20
  unreachable

75:                                               ; preds = %66
  %76 = sub i64 %62, %68
  %77 = ashr exact i64 %76, 2
  %78 = icmp ult i64 %77, 2305843009213693951
  br i1 %78, label %79, label %87

79:                                               ; preds = %75
  %80 = ashr exact i64 %76, 1
  %81 = icmp ult i64 %80, %71
  %82 = select i1 %81, i64 %71, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %92, label %84

84:                                               ; preds = %79
  %85 = icmp ugt i64 %82, 4611686018427387903
  br i1 %85, label %86, label %87

86:                                               ; preds = %84
  tail call void @abort() #20
  unreachable

87:                                               ; preds = %84, %75
  %88 = phi i64 [ %82, %84 ], [ 4611686018427387903, %75 ]
  %89 = shl i64 %88, 2
  %90 = tail call i8* @_Znwm(i64 %89) #18
  %91 = bitcast i8* %90 to i32*
  br label %92

92:                                               ; preds = %87, %79
  %93 = phi i64 [ %88, %87 ], [ 0, %79 ]
  %94 = phi i32* [ %91, %87 ], [ null, %79 ]
  %95 = getelementptr inbounds i32, i32* %94, i64 %70
  %96 = getelementptr inbounds i32, i32* %94, i64 %93
  %97 = ptrtoint i32* %96 to i64
  store i32 %59, i32* %95, align 4
  %98 = getelementptr inbounds i32, i32* %95, i64 1
  %99 = ptrtoint i32* %98 to i64
  %100 = sub i64 %42, %68
  %101 = ashr exact i64 %100, 2
  %102 = sub nsw i64 0, %101
  %103 = getelementptr inbounds i32, i32* %95, i64 %102
  %104 = ptrtoint i32* %103 to i64
  %105 = icmp sgt i64 %100, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %92
  %107 = bitcast i32* %103 to i8*
  %108 = inttoptr i64 %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %108, i64 %100, i1 false) #17
  br label %109

109:                                              ; preds = %106, %92
  store i64 %104, i64* %39, align 8
  store i64 %99, i64* %38, align 8
  store i64 %97, i64* %40, align 8
  %110 = icmp eq i64 %68, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = inttoptr i64 %68 to i8*
  tail call void @_ZdlPv(i8* %112) #18
  br label %113

113:                                              ; preds = %63, %109, %111
  %114 = phi i64 [ %65, %63 ], [ %99, %109 ], [ %99, %111 ]
  %115 = phi i32* [ %64, %63 ], [ %98, %109 ], [ %98, %111 ]
  %116 = add nuw nsw i64 %45, 1
  %117 = load i64, i64* %18, align 8
  %118 = load i64, i64* %20, align 8
  %119 = sub i64 %117, %118
  %120 = shl i64 %119, 30
  %121 = ashr i64 %120, 32
  %122 = icmp slt i64 %116, %121
  br i1 %122, label %41, label %123

123:                                              ; preds = %113, %23
  %124 = getelementptr inbounds %"struct.spv::Builder::AccessChain", %"struct.spv::Builder::AccessChain"* %11, i64 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = call i32 @_ZN3spv7Builder22createCompositeExtractEjjRKNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %125, i32 %27, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %10)
  %127 = icmp ne i32 %1, 2147483647
  %128 = icmp ne i32 %126, 0
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %216

130:                                              ; preds = %123
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %126, i32 %1, i32 -1) #17
  br label %216

131:                                              ; preds = %41
  %132 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp ugt i32 %133, 66559
  %135 = getelementptr inbounds %"struct.spv::Builder::AccessChain", %"struct.spv::Builder::AccessChain"* %11, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, i64 %137
  %139 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %138, align 8
  br i1 %134, label %140, label %201

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %139, i64 0, i32 3
  %142 = load i32, i32* %141, align 8
  switch i32 %142, label %201 [
    i32 1, label %157
    i32 41, label %157
    i32 42, label %157
    i32 43, label %157
    i32 44, label %157
    i32 45, label %157
    i32 46, label %157
    i32 48, label %157
    i32 49, label %157
    i32 50, label %157
    i32 51, label %157
    i32 52, label %157
    i32 59, label %143
  ]

143:                                              ; preds = %140
  %144 = icmp eq %"class.spv::Instruction"* %139, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %139, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i64
  br label %149

149:                                              ; preds = %143, %145
  %150 = phi i64 [ %148, %145 ], [ 0, %143 ]
  %151 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %50, i64 %150
  %152 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %151, align 8
  %153 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %152, i64 0, i32 4, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 7
  br i1 %156, label %201, label %157

157:                                              ; preds = %149, %140, %140, %140, %140, %140, %140, %140, %140, %140, %140, %140, %140
  %158 = icmp eq %"class.spv::Instruction"* %139, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %139, i64 0, i32 2
  %161 = load i32, i32* %160, align 4
  br label %162

162:                                              ; preds = %157, %159
  %163 = phi i32 [ %161, %159 ], [ 0, %157 ]
  %164 = tail call i32 @_ZN3spv7Builder14createVariableENS_10DecorationENS_12StorageClassEjPKcj(%"class.spv::Builder"* %0, i32 2147483647, i32 7, i32 %163, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 %136)
  %165 = tail call i8* @_Znwm(i64 80) #18
  %166 = bitcast i8* %165 to %"class.spv::Instruction"*
  %167 = bitcast i8* %165 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %167, align 8
  %168 = getelementptr inbounds i8, i8* %165, i64 8
  %169 = bitcast i8* %168 to i32*
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds i8, i8* %165, i64 12
  %171 = bitcast i8* %170 to i32*
  store i32 0, i32* %171, align 4
  %172 = getelementptr inbounds i8, i8* %165, i64 16
  %173 = bitcast i8* %172 to i32*
  store i32 71, i32* %173, align 8
  %174 = getelementptr inbounds i8, i8* %165, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 56, i1 false) #17
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %166, i32 %164) #17
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %166, i32 24) #17
  %175 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #17
  %176 = ptrtoint i8* %165 to i64
  %177 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %179 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %178, align 8
  %180 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 2, i32 0, i32 0
  %181 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %180, align 8
  %182 = icmp ult %"class.std::__1::unique_ptr"* %179, %181
  br i1 %182, label %183, label %189

183:                                              ; preds = %162
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %184, align 8
  %185 = bitcast %"class.std::__1::unique_ptr"* %179 to i64*
  store i64 %176, i64* %185, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %179, i64 1
  %187 = ptrtoint %"class.std::__1::unique_ptr"* %186 to i64
  %188 = bitcast %"class.std::__1::unique_ptr"** %178 to i64*
  store i64 %187, i64* %188, align 8
  br label %191

189:                                              ; preds = %162
  %190 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %190, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %9) #17
  br label %191

191:                                              ; preds = %189, %183
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %192, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %192, align 8
  %194 = icmp eq %"class.spv::Instruction"* %193, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %191
  %196 = bitcast %"class.spv::Instruction"* %193 to void (%"class.spv::Instruction"*)***
  %197 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %197, i64 1
  %199 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %198, align 8
  call void %199(%"class.spv::Instruction"* nonnull %193) #17
  br label %200

200:                                              ; preds = %191, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #17
  br label %211

201:                                              ; preds = %131, %149, %140
  %202 = getelementptr inbounds %"struct.spv::Builder::AccessChain", %"struct.spv::Builder::AccessChain"* %11, i64 0, i32 0
  %203 = icmp eq %"class.spv::Instruction"* %139, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %139, i64 0, i32 2
  %206 = load i32, i32* %205, align 4
  br label %207

207:                                              ; preds = %201, %204
  %208 = phi i32 [ %206, %204 ], [ 0, %201 ]
  %209 = tail call i32 @_ZN3spv7Builder14createVariableENS_10DecorationENS_12StorageClassEjPKcj(%"class.spv::Builder"* %0, i32 2147483647, i32 7, i32 %208, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i32 0)
  %210 = load i32, i32* %202, align 8
  tail call void @_ZN3spv7Builder11createStoreEjjNS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"* %0, i32 %210, i32 %209, i32 0, i32 2147483647, i32 0)
  br label %211

211:                                              ; preds = %207, %200
  %212 = phi i32 [ %164, %200 ], [ %209, %207 ]
  %213 = getelementptr inbounds %"struct.spv::Builder::AccessChain", %"struct.spv::Builder::AccessChain"* %11, i64 0, i32 0
  store i32 %212, i32* %213, align 8
  store i8 0, i8* %12, align 8
  %214 = call i32 @_ZN3spv7Builder19collapseAccessChainEv(%"class.spv::Builder"* %0)
  %215 = call i32 @_ZN3spv7Builder10createLoadEjNS_10DecorationENS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"* %0, i32 %214, i32 %1, i32 0, i32 2147483647, i32 0)
  br label %216

216:                                              ; preds = %130, %123, %211
  %217 = phi i32 [ %215, %211 ], [ %126, %123 ], [ %126, %130 ]
  %218 = load i32*, i32** %29, align 8
  %219 = icmp eq i32* %218, null
  br i1 %219, label %224, label %220

220:                                              ; preds = %216
  %221 = ptrtoint i32* %218 to i64
  %222 = bitcast i32** %30 to i64*
  store i64 %221, i64* %222, align 8
  %223 = bitcast i32* %218 to i8*
  call void @_ZdlPv(i8* %223) #18
  br label %224

224:                                              ; preds = %216, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br label %255

225:                                              ; preds = %15
  %226 = getelementptr inbounds %"struct.spv::Builder::AccessChain", %"struct.spv::Builder::AccessChain"* %11, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  br label %255

228:                                              ; preds = %8
  tail call void @_ZN3spv7Builder26transferAccessChainSwizzleEb(%"class.spv::Builder"* %0, i1 zeroext true)
  %229 = sub i32 0, %7
  %230 = and i32 %229, %7
  %231 = getelementptr inbounds %"struct.spv::Builder::AccessChain", %"struct.spv::Builder::AccessChain"* %11, i64 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %235 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %234, align 8
  %236 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %235, i64 %233
  %237 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %236, align 8
  %238 = icmp eq %"class.spv::Instruction"* %237, null
  br i1 %238, label %243, label %239

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %237, i64 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  br label %243

243:                                              ; preds = %228, %239
  %244 = phi i64 [ %242, %239 ], [ 0, %228 ]
  %245 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %235, i64 %244
  %246 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %245, align 8
  %247 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %246, i64 0, i32 4, i32 0, i32 0
  %248 = load i32*, i32** %247, align 8
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 5349
  %251 = or i32 %5, 2
  %252 = select i1 %250, i32 %251, i32 %5
  %253 = tail call i32 @_ZN3spv7Builder19collapseAccessChainEv(%"class.spv::Builder"* %0)
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %253, i32 %2, i32 -1)
  %254 = tail call i32 @_ZN3spv7Builder10createLoadEjNS_10DecorationENS_16MemoryAccessMaskENS_5ScopeEj(%"class.spv::Builder"* %0, i32 %253, i32 %1, i32 %252, i32 %6, i32 %230)
  tail call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %254, i32 %3, i32 -1)
  br label %255

255:                                              ; preds = %224, %225, %243
  %256 = phi i32 [ %217, %224 ], [ %227, %225 ], [ %254, %243 ]
  %257 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %258 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %259 = bitcast i32** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::vector.26"* %257 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = sub i64 %260, %262
  %264 = ashr exact i64 %263, 2
  %265 = icmp eq i64 %263, 0
  br i1 %265, label %266, label %270

266:                                              ; preds = %255
  %267 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %268 = load i32, i32* %267, align 8
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %321, label %311

270:                                              ; preds = %255
  %271 = zext i32 %256 to i64
  %272 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %273 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %272, align 8
  %274 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %273, i64 %271
  %275 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %274, align 8
  %276 = icmp eq %"class.spv::Instruction"* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %270
  %278 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %275, i64 0, i32 2
  br label %279

279:                                              ; preds = %292, %295, %277
  %280 = phi i32* [ %278, %277 ], [ %298, %295 ], [ %294, %292 ]
  %281 = load i32, i32* %280, align 4
  br label %282

282:                                              ; preds = %279, %270
  %283 = phi i32 [ 0, %270 ], [ %281, %279 ]
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %273, i64 %284
  %286 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %285, align 8
  %287 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %286, i64 0, i32 3
  %288 = load i32, i32* %287, align 8
  switch i32 %288, label %299 [
    i32 19, label %289
    i32 20, label %289
    i32 21, label %289
    i32 22, label %289
    i32 30, label %289
    i32 23, label %292
    i32 24, label %292
    i32 28, label %292
    i32 29, label %292
    i32 32, label %295
  ]

289:                                              ; preds = %282, %282, %282, %282, %282
  %290 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %286, i64 0, i32 1
  %291 = load i32, i32* %290, align 8
  br label %299

292:                                              ; preds = %282, %282, %282, %282
  %293 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %286, i64 0, i32 4, i32 0, i32 0
  %294 = load i32*, i32** %293, align 8
  br label %279

295:                                              ; preds = %282
  %296 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %286, i64 0, i32 4, i32 0, i32 0
  %297 = load i32*, i32** %296, align 8
  %298 = getelementptr inbounds i32, i32* %297, i64 1
  br label %279

299:                                              ; preds = %282, %289
  %300 = phi i32 [ %291, %289 ], [ 0, %282 ]
  %301 = icmp ugt i64 %264, 1
  br i1 %301, label %302, label %305

302:                                              ; preds = %299
  %303 = trunc i64 %264 to i32
  %304 = call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %300, i32 %303)
  br label %305

305:                                              ; preds = %299, %302
  %306 = phi i32 [ %304, %302 ], [ %300, %299 ]
  %307 = call i32 @_ZN3spv7Builder19createRvalueSwizzleENS_10DecorationEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spv::Builder"* %0, i32 %1, i32 %306, i32 %256, %"class.std::__1::vector.26"* dereferenceable(24) %257)
  %308 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %309 = load i32, i32* %308, align 8
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %319, label %311

311:                                              ; preds = %266, %305
  %312 = phi i32 [ %307, %305 ], [ %256, %266 ]
  %313 = phi i32 [ %309, %305 ], [ %268, %266 ]
  %314 = call i32 @_ZN3spv7Builder26createVectorExtractDynamicEjjj(%"class.spv::Builder"* %0, i32 %312, i32 %4, i32 %313)
  %315 = icmp ne i32 %1, 2147483647
  %316 = icmp ne i32 %314, 0
  %317 = and i1 %315, %316
  br i1 %317, label %318, label %319

318:                                              ; preds = %311
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %314, i32 %1, i32 -1) #17
  br label %319

319:                                              ; preds = %318, %311, %305
  %320 = phi i32 [ %307, %305 ], [ %314, %311 ], [ %314, %318 ]
  call void @_ZN3spv7Builder13addDecorationEjNS_10DecorationEi(%"class.spv::Builder"* %0, i32 %320, i32 %3, i32 -1)
  br label %321

321:                                              ; preds = %266, %319
  %322 = phi i32 [ %320, %319 ], [ %256, %266 ]
  ret i32 %322
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder20accessChainGetLValueEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN3spv7Builder26transferAccessChainSwizzleEb(%"class.spv::Builder"* %0, i1 zeroext true)
  %2 = tail call i32 @_ZN3spv7Builder19collapseAccessChainEv(%"class.spv::Builder"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3spv7Builder26accessChainGetInferredTypeEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %160, label %5

5:                                                ; preds = %1
  %6 = zext i32 %3 to i64
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %8 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %7, align 8
  %9 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %6
  %10 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %9, align 8
  %11 = icmp eq %"class.spv::Instruction"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %5, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %5 ]
  %17 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 8
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %39

20:                                               ; preds = %15
  %21 = zext i32 %16 to i64
  %22 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %21
  %23 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %22, align 8
  %24 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  switch i32 %25, label %39 [
    i32 23, label %26
    i32 24, label %26
    i32 28, label %26
    i32 29, label %26
    i32 5358, label %26
    i32 32, label %30
    i32 30, label %35
  ]

26:                                               ; preds = %20, %20, %20, %20, %20
  %27 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %23, i64 0, i32 4, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %28, align 4
  br label %39

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %23, i64 0, i32 4, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  %34 = load i32, i32* %33, align 4
  br label %39

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %23, i64 0, i32 4, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %35, %30, %26, %20, %15
  %40 = phi i32 [ %16, %15 ], [ %38, %35 ], [ %34, %30 ], [ %29, %26 ], [ 0, %20 ]
  %41 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 2, i32 0, i32 1
  %44 = load i32*, i32** %43, align 8
  %45 = icmp eq i32* %42, %44
  br i1 %45, label %46, label %57

46:                                               ; preds = %87, %39
  %47 = phi i32 [ %40, %39 ], [ %88, %87 ]
  %48 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %49 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %50 = bitcast i32** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.26"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 2
  %56 = icmp eq i64 %54, 4
  br i1 %56, label %91, label %110

57:                                               ; preds = %39, %87
  %58 = phi i32 [ %88, %87 ], [ %40, %39 ]
  %59 = phi i32* [ %89, %87 ], [ %42, %39 ]
  %60 = zext i32 %58 to i64
  %61 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %60
  %62 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %61, align 8
  %63 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %87 [
    i32 30, label %65
    i32 23, label %77
    i32 24, label %77
    i32 28, label %77
    i32 29, label %77
    i32 5358, label %77
    i32 32, label %80
  ]

65:                                               ; preds = %57
  %66 = load i32, i32* %59, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %67
  %69 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %68, align 8
  %70 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %69, i64 0, i32 4, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 %73
  br label %84

77:                                               ; preds = %57, %57, %57, %57, %57
  %78 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  br label %84

80:                                               ; preds = %57
  %81 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %62, i64 0, i32 4, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = getelementptr inbounds i32, i32* %82, i64 1
  br label %84

84:                                               ; preds = %65, %77, %80
  %85 = phi i32* [ %83, %80 ], [ %79, %77 ], [ %76, %65 ]
  %86 = load i32, i32* %85, align 4
  br label %87

87:                                               ; preds = %84, %57
  %88 = phi i32 [ 0, %57 ], [ %86, %84 ]
  %89 = getelementptr inbounds i32, i32* %59, i64 1
  %90 = icmp eq i32* %89, %44
  br i1 %90, label %46, label %57

91:                                               ; preds = %46
  %92 = zext i32 %47 to i64
  %93 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %92
  %94 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %93, align 8
  %95 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  switch i32 %96, label %135 [
    i32 23, label %97
    i32 24, label %97
    i32 28, label %97
    i32 29, label %97
    i32 5358, label %97
    i32 32, label %101
    i32 30, label %106
  ]

97:                                               ; preds = %91, %91, %91, %91, %91
  %98 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = load i32, i32* %99, align 4
  br label %135

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 1
  %105 = load i32, i32* %104, align 4
  br label %135

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %94, i64 0, i32 4, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = load i32, i32* %108, align 4
  br label %135

110:                                              ; preds = %46
  %111 = icmp ugt i64 %55, 1
  br i1 %111, label %112, label %135

112:                                              ; preds = %110
  %113 = zext i32 %47 to i64
  %114 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %8, i64 %113
  %115 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %114, align 8
  %116 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %115, i64 0, i32 3
  %117 = load i32, i32* %116, align 8
  switch i32 %117, label %131 [
    i32 23, label %118
    i32 24, label %118
    i32 28, label %118
    i32 29, label %118
    i32 5358, label %118
    i32 32, label %121
    i32 30, label %125
  ]

118:                                              ; preds = %112, %112, %112, %112, %112
  %119 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %115, i64 0, i32 4, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  br label %128

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %115, i64 0, i32 4, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 1
  br label %128

125:                                              ; preds = %112
  %126 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %115, i64 0, i32 4, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  br label %128

128:                                              ; preds = %125, %121, %118
  %129 = phi i32* [ %120, %118 ], [ %124, %121 ], [ %127, %125 ]
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %128, %112
  %132 = phi i32 [ 0, %112 ], [ %130, %128 ]
  %133 = trunc i64 %55 to i32
  %134 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %132, i32 %133)
  br label %135

135:                                              ; preds = %106, %101, %97, %91, %110, %131
  %136 = phi i32 [ %134, %131 ], [ %47, %110 ], [ %109, %106 ], [ %105, %101 ], [ %100, %97 ], [ 0, %91 ]
  %137 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %160, label %140

140:                                              ; preds = %135
  %141 = zext i32 %136 to i64
  %142 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %7, align 8
  %143 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %142, i64 %141
  %144 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %143, align 8
  %145 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %144, i64 0, i32 3
  %146 = load i32, i32* %145, align 8
  switch i32 %146, label %160 [
    i32 23, label %147
    i32 24, label %147
    i32 28, label %147
    i32 29, label %147
    i32 5358, label %147
    i32 32, label %151
    i32 30, label %156
  ]

147:                                              ; preds = %140, %140, %140, %140, %140
  %148 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %144, i64 0, i32 4, i32 0, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = load i32, i32* %149, align 4
  br label %160

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %144, i64 0, i32 4, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 1
  %155 = load i32, i32* %154, align 4
  br label %160

156:                                              ; preds = %140
  %157 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %144, i64 0, i32 4, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = load i32, i32* %158, align 4
  br label %160

160:                                              ; preds = %156, %151, %147, %140, %135, %1
  %161 = phi i32 [ 0, %1 ], [ %136, %135 ], [ %159, %156 ], [ %155, %151 ], [ %150, %147 ], [ 0, %140 ]
  ret i32 %161
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3spv7Builder4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"*, %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.spv::Instruction", align 8
  %6 = alloca %"class.spv::Instruction", align 8
  %7 = alloca %"class.spv::Instruction", align 8
  %8 = alloca %"class.spv::Instruction", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %10, %12
  %14 = ptrtoint i32* %12 to i64
  br i1 %13, label %19, label %15

15:                                               ; preds = %2
  store i32 119734787, i32* %10, align 4
  %16 = getelementptr inbounds i32, i32* %10, i64 1
  %17 = ptrtoint i32* %16 to i64
  %18 = bitcast i32** %9 to i64*
  store i64 %17, i64* %18, align 8
  br label %76

19:                                               ; preds = %2
  %20 = ptrtoint i32* %10 to i64
  %21 = bitcast i32** %9 to i64*
  %22 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = ashr exact i64 %24, 2
  %26 = add nsw i64 %25, 1
  %27 = icmp ugt i64 %26, 4611686018427387903
  br i1 %27, label %28, label %30

28:                                               ; preds = %19
  %29 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #20
  unreachable

30:                                               ; preds = %19
  %31 = bitcast i32** %11 to i64*
  %32 = sub i64 %14, %23
  %33 = ashr exact i64 %32, 2
  %34 = icmp ult i64 %33, 2305843009213693951
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = ashr exact i64 %32, 1
  %37 = icmp ult i64 %36, %26
  %38 = select i1 %37, i64 %26, i64 %36
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %48, label %40

40:                                               ; preds = %35
  %41 = icmp ugt i64 %38, 4611686018427387903
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @abort() #20
  unreachable

43:                                               ; preds = %40, %30
  %44 = phi i64 [ %38, %40 ], [ 4611686018427387903, %30 ]
  %45 = shl i64 %44, 2
  %46 = tail call i8* @_Znwm(i64 %45) #18
  %47 = bitcast i8* %46 to i32*
  br label %48

48:                                               ; preds = %43, %35
  %49 = phi i64 [ %44, %43 ], [ 0, %35 ]
  %50 = phi i32* [ %47, %43 ], [ null, %35 ]
  %51 = getelementptr inbounds i32, i32* %50, i64 %25
  %52 = getelementptr inbounds i32, i32* %50, i64 %49
  %53 = ptrtoint i32* %52 to i64
  store i32 119734787, i32* %51, align 4
  %54 = getelementptr inbounds i32, i32* %51, i64 1
  %55 = ptrtoint i32* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = load i64, i64* %21, align 8
  %59 = ptrtoint i32* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds i32, i32* %51, i64 %62
  %64 = ptrtoint i32* %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %48
  %67 = bitcast i32* %63 to i8*
  %68 = bitcast i32* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 %60, i1 false) #17
  %69 = load i32*, i32** %56, align 8
  br label %70

70:                                               ; preds = %66, %48
  %71 = phi i32* [ %57, %48 ], [ %69, %66 ]
  store i64 %64, i64* %22, align 8
  store i64 %55, i64* %21, align 8
  store i64 %53, i64* %31, align 8
  %72 = icmp eq i32* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = bitcast i32* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #18
  %75 = load i32*, i32** %9, align 8
  br label %76

76:                                               ; preds = %15, %70, %73
  %77 = phi i32* [ %16, %15 ], [ %54, %70 ], [ %75, %73 ]
  %78 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 1
  %79 = load i32*, i32** %11, align 8
  %80 = icmp eq i32* %77, %79
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = load i32, i32* %78, align 4
  store i32 %82, i32* %77, align 4
  %83 = getelementptr inbounds i32, i32* %77, i64 1
  %84 = ptrtoint i32* %83 to i64
  %85 = bitcast i32** %9 to i64*
  store i64 %84, i64* %85, align 8
  br label %142

86:                                               ; preds = %76
  %87 = ptrtoint i32* %79 to i64
  %88 = bitcast i32** %9 to i64*
  %89 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %87, %90
  %92 = ashr exact i64 %91, 2
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 4611686018427387903
  br i1 %94, label %95, label %97

95:                                               ; preds = %86
  %96 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #20
  unreachable

97:                                               ; preds = %86
  %98 = bitcast i32** %11 to i64*
  %99 = icmp ult i64 %92, 2305843009213693951
  br i1 %99, label %100, label %108

100:                                              ; preds = %97
  %101 = ashr exact i64 %91, 1
  %102 = icmp ult i64 %101, %93
  %103 = select i1 %102, i64 %93, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = icmp ugt i64 %103, 4611686018427387903
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @abort() #20
  unreachable

108:                                              ; preds = %105, %97
  %109 = phi i64 [ %103, %105 ], [ 4611686018427387903, %97 ]
  %110 = shl i64 %109, 2
  %111 = tail call i8* @_Znwm(i64 %110) #18
  %112 = bitcast i8* %111 to i32*
  br label %113

113:                                              ; preds = %108, %100
  %114 = phi i64 [ %109, %108 ], [ 0, %100 ]
  %115 = phi i32* [ %112, %108 ], [ null, %100 ]
  %116 = getelementptr inbounds i32, i32* %115, i64 %92
  %117 = getelementptr inbounds i32, i32* %115, i64 %114
  %118 = ptrtoint i32* %117 to i64
  %119 = load i32, i32* %78, align 4
  store i32 %119, i32* %116, align 4
  %120 = getelementptr inbounds i32, i32* %116, i64 1
  %121 = ptrtoint i32* %120 to i64
  %122 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = load i64, i64* %88, align 8
  %125 = ptrtoint i32* %123 to i64
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 2
  %128 = sub nsw i64 0, %127
  %129 = getelementptr inbounds i32, i32* %116, i64 %128
  %130 = ptrtoint i32* %129 to i64
  %131 = icmp sgt i64 %126, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %113
  %133 = bitcast i32* %129 to i8*
  %134 = bitcast i32* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 %126, i1 false) #17
  %135 = load i32*, i32** %122, align 8
  br label %136

136:                                              ; preds = %132, %113
  %137 = phi i32* [ %123, %113 ], [ %135, %132 ]
  store i64 %130, i64* %89, align 8
  store i64 %121, i64* %88, align 8
  store i64 %118, i64* %98, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = bitcast i32* %137 to i8*
  tail call void @_ZdlPv(i8* %140) #18
  %141 = load i32*, i32** %9, align 8
  br label %142

142:                                              ; preds = %81, %136, %139
  %143 = phi i32* [ %83, %81 ], [ %120, %136 ], [ %141, %139 ]
  %144 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 15
  %145 = load i32, i32* %144, align 8
  %146 = load i32*, i32** %11, align 8
  %147 = icmp ult i32* %143, %146
  %148 = ptrtoint i32* %146 to i64
  br i1 %147, label %149, label %153

149:                                              ; preds = %142
  store i32 %145, i32* %143, align 4
  %150 = getelementptr inbounds i32, i32* %143, i64 1
  %151 = ptrtoint i32* %150 to i64
  %152 = bitcast i32** %9 to i64*
  store i64 %151, i64* %152, align 8
  br label %210

153:                                              ; preds = %142
  %154 = ptrtoint i32* %143 to i64
  %155 = bitcast i32** %9 to i64*
  %156 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %154, %157
  %159 = ashr exact i64 %158, 2
  %160 = add nsw i64 %159, 1
  %161 = icmp ugt i64 %160, 4611686018427387903
  br i1 %161, label %162, label %164

162:                                              ; preds = %153
  %163 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %163) #20
  unreachable

164:                                              ; preds = %153
  %165 = bitcast i32** %11 to i64*
  %166 = sub i64 %148, %157
  %167 = ashr exact i64 %166, 2
  %168 = icmp ult i64 %167, 2305843009213693951
  br i1 %168, label %169, label %177

169:                                              ; preds = %164
  %170 = ashr exact i64 %166, 1
  %171 = icmp ult i64 %170, %160
  %172 = select i1 %171, i64 %160, i64 %170
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %182, label %174

174:                                              ; preds = %169
  %175 = icmp ugt i64 %172, 4611686018427387903
  br i1 %175, label %176, label %177

176:                                              ; preds = %174
  tail call void @abort() #20
  unreachable

177:                                              ; preds = %174, %164
  %178 = phi i64 [ %172, %174 ], [ 4611686018427387903, %164 ]
  %179 = shl i64 %178, 2
  %180 = tail call i8* @_Znwm(i64 %179) #18
  %181 = bitcast i8* %180 to i32*
  br label %182

182:                                              ; preds = %177, %169
  %183 = phi i64 [ %178, %177 ], [ 0, %169 ]
  %184 = phi i32* [ %181, %177 ], [ null, %169 ]
  %185 = getelementptr inbounds i32, i32* %184, i64 %159
  %186 = getelementptr inbounds i32, i32* %184, i64 %183
  %187 = ptrtoint i32* %186 to i64
  store i32 %145, i32* %185, align 4
  %188 = getelementptr inbounds i32, i32* %185, i64 1
  %189 = ptrtoint i32* %188 to i64
  %190 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = load i64, i64* %155, align 8
  %193 = ptrtoint i32* %191 to i64
  %194 = sub i64 %192, %193
  %195 = ashr exact i64 %194, 2
  %196 = sub nsw i64 0, %195
  %197 = getelementptr inbounds i32, i32* %185, i64 %196
  %198 = ptrtoint i32* %197 to i64
  %199 = icmp sgt i64 %194, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %182
  %201 = bitcast i32* %197 to i8*
  %202 = bitcast i32* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %201, i8* align 4 %202, i64 %194, i1 false) #17
  %203 = load i32*, i32** %190, align 8
  br label %204

204:                                              ; preds = %200, %182
  %205 = phi i32* [ %191, %182 ], [ %203, %200 ]
  store i64 %198, i64* %156, align 8
  store i64 %189, i64* %155, align 8
  store i64 %187, i64* %165, align 8
  %206 = icmp eq i32* %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %204
  %208 = bitcast i32* %205 to i8*
  tail call void @_ZdlPv(i8* %208) #18
  %209 = load i32*, i32** %9, align 8
  br label %210

210:                                              ; preds = %149, %204, %207
  %211 = phi i32* [ %150, %149 ], [ %188, %204 ], [ %209, %207 ]
  %212 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 18
  %213 = load i32, i32* %212, align 8
  %214 = add i32 %213, 1
  %215 = load i32*, i32** %11, align 8
  %216 = icmp ult i32* %211, %215
  %217 = ptrtoint i32* %215 to i64
  br i1 %216, label %218, label %222

218:                                              ; preds = %210
  store i32 %214, i32* %211, align 4
  %219 = getelementptr inbounds i32, i32* %211, i64 1
  %220 = ptrtoint i32* %219 to i64
  %221 = bitcast i32** %9 to i64*
  store i64 %220, i64* %221, align 8
  br label %279

222:                                              ; preds = %210
  %223 = ptrtoint i32* %211 to i64
  %224 = bitcast i32** %9 to i64*
  %225 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %223, %226
  %228 = ashr exact i64 %227, 2
  %229 = add nsw i64 %228, 1
  %230 = icmp ugt i64 %229, 4611686018427387903
  br i1 %230, label %231, label %233

231:                                              ; preds = %222
  %232 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %232) #20
  unreachable

233:                                              ; preds = %222
  %234 = bitcast i32** %11 to i64*
  %235 = sub i64 %217, %226
  %236 = ashr exact i64 %235, 2
  %237 = icmp ult i64 %236, 2305843009213693951
  br i1 %237, label %238, label %246

238:                                              ; preds = %233
  %239 = ashr exact i64 %235, 1
  %240 = icmp ult i64 %239, %229
  %241 = select i1 %240, i64 %229, i64 %239
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %238
  %244 = icmp ugt i64 %241, 4611686018427387903
  br i1 %244, label %245, label %246

245:                                              ; preds = %243
  tail call void @abort() #20
  unreachable

246:                                              ; preds = %243, %233
  %247 = phi i64 [ %241, %243 ], [ 4611686018427387903, %233 ]
  %248 = shl i64 %247, 2
  %249 = tail call i8* @_Znwm(i64 %248) #18
  %250 = bitcast i8* %249 to i32*
  br label %251

251:                                              ; preds = %246, %238
  %252 = phi i64 [ %247, %246 ], [ 0, %238 ]
  %253 = phi i32* [ %250, %246 ], [ null, %238 ]
  %254 = getelementptr inbounds i32, i32* %253, i64 %228
  %255 = getelementptr inbounds i32, i32* %253, i64 %252
  %256 = ptrtoint i32* %255 to i64
  store i32 %214, i32* %254, align 4
  %257 = getelementptr inbounds i32, i32* %254, i64 1
  %258 = ptrtoint i32* %257 to i64
  %259 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = load i64, i64* %224, align 8
  %262 = ptrtoint i32* %260 to i64
  %263 = sub i64 %261, %262
  %264 = ashr exact i64 %263, 2
  %265 = sub nsw i64 0, %264
  %266 = getelementptr inbounds i32, i32* %254, i64 %265
  %267 = ptrtoint i32* %266 to i64
  %268 = icmp sgt i64 %263, 0
  br i1 %268, label %269, label %273

269:                                              ; preds = %251
  %270 = bitcast i32* %266 to i8*
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %270, i8* align 4 %271, i64 %263, i1 false) #17
  %272 = load i32*, i32** %259, align 8
  br label %273

273:                                              ; preds = %269, %251
  %274 = phi i32* [ %260, %251 ], [ %272, %269 ]
  store i64 %267, i64* %225, align 8
  store i64 %258, i64* %224, align 8
  store i64 %256, i64* %234, align 8
  %275 = icmp eq i32* %274, null
  br i1 %275, label %279, label %276

276:                                              ; preds = %273
  %277 = bitcast i32* %274 to i8*
  tail call void @_ZdlPv(i8* %277) #18
  %278 = load i32*, i32** %9, align 8
  br label %279

279:                                              ; preds = %218, %273, %276
  %280 = phi i32* [ %219, %218 ], [ %257, %273 ], [ %278, %276 ]
  %281 = load i32*, i32** %11, align 8
  %282 = icmp ult i32* %280, %281
  %283 = ptrtoint i32* %281 to i64
  br i1 %282, label %284, label %288

284:                                              ; preds = %279
  store i32 0, i32* %280, align 4
  %285 = getelementptr inbounds i32, i32* %280, i64 1
  %286 = ptrtoint i32* %285 to i64
  %287 = bitcast i32** %9 to i64*
  store i64 %286, i64* %287, align 8
  br label %344

288:                                              ; preds = %279
  %289 = ptrtoint i32* %280 to i64
  %290 = bitcast i32** %9 to i64*
  %291 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = sub i64 %289, %292
  %294 = ashr exact i64 %293, 2
  %295 = add nsw i64 %294, 1
  %296 = icmp ugt i64 %295, 4611686018427387903
  br i1 %296, label %297, label %299

297:                                              ; preds = %288
  %298 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %298) #20
  unreachable

299:                                              ; preds = %288
  %300 = bitcast i32** %11 to i64*
  %301 = sub i64 %283, %292
  %302 = ashr exact i64 %301, 2
  %303 = icmp ult i64 %302, 2305843009213693951
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ashr exact i64 %301, 1
  %306 = icmp ult i64 %305, %295
  %307 = select i1 %306, i64 %295, i64 %305
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %317, label %309

309:                                              ; preds = %304
  %310 = icmp ugt i64 %307, 4611686018427387903
  br i1 %310, label %311, label %312

311:                                              ; preds = %309
  tail call void @abort() #20
  unreachable

312:                                              ; preds = %309, %299
  %313 = phi i64 [ %307, %309 ], [ 4611686018427387903, %299 ]
  %314 = shl i64 %313, 2
  %315 = tail call i8* @_Znwm(i64 %314) #18
  %316 = bitcast i8* %315 to i32*
  br label %317

317:                                              ; preds = %312, %304
  %318 = phi i64 [ %313, %312 ], [ 0, %304 ]
  %319 = phi i32* [ %316, %312 ], [ null, %304 ]
  %320 = getelementptr inbounds i32, i32* %319, i64 %294
  %321 = getelementptr inbounds i32, i32* %319, i64 %318
  %322 = ptrtoint i32* %321 to i64
  store i32 0, i32* %320, align 4
  %323 = getelementptr inbounds i32, i32* %320, i64 1
  %324 = ptrtoint i32* %323 to i64
  %325 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %326 = load i32*, i32** %325, align 8
  %327 = load i64, i64* %290, align 8
  %328 = ptrtoint i32* %326 to i64
  %329 = sub i64 %327, %328
  %330 = ashr exact i64 %329, 2
  %331 = sub nsw i64 0, %330
  %332 = getelementptr inbounds i32, i32* %320, i64 %331
  %333 = ptrtoint i32* %332 to i64
  %334 = icmp sgt i64 %329, 0
  br i1 %334, label %335, label %339

335:                                              ; preds = %317
  %336 = bitcast i32* %332 to i8*
  %337 = bitcast i32* %326 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %336, i8* align 4 %337, i64 %329, i1 false) #17
  %338 = load i32*, i32** %325, align 8
  br label %339

339:                                              ; preds = %335, %317
  %340 = phi i32* [ %326, %317 ], [ %338, %335 ]
  store i64 %333, i64* %291, align 8
  store i64 %324, i64* %290, align 8
  store i64 %322, i64* %300, align 8
  %341 = icmp eq i32* %340, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %339
  %343 = bitcast i32* %340 to i8*
  tail call void @_ZdlPv(i8* %343) #18
  br label %344

344:                                              ; preds = %284, %339, %342
  %345 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 0
  %346 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %345, align 8
  %347 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %348 = icmp eq %"class.std::__1::__tree_end_node"* %346, %347
  br i1 %348, label %361, label %349

349:                                              ; preds = %344
  %350 = bitcast %"class.spv::Instruction"* %5 to i8*
  %351 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 0
  %352 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 1
  %353 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 2
  %354 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 3
  %355 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 4
  %356 = bitcast %"class.std::__1::vector.26"* %355 to i8*
  %357 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 5, i32 0
  %358 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 4, i32 0, i32 0
  %359 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %5, i64 0, i32 4, i32 0, i32 1
  %360 = bitcast i32** %359 to i64*
  br label %379

361:                                              ; preds = %422, %344
  %362 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0, i32 0
  %363 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %362, align 8
  %364 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %365 = icmp eq %"class.std::__1::__tree_end_node"* %363, %364
  br i1 %365, label %425, label %366

366:                                              ; preds = %361
  %367 = bitcast %"class.spv::Instruction"* %6 to i8*
  %368 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 0
  %369 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 1
  %370 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 2
  %371 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 3
  %372 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 4
  %373 = bitcast %"class.std::__1::vector.26"* %372 to i8*
  %374 = bitcast i32* %4 to i8*
  %375 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 5, i32 0
  %376 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 4, i32 0, i32 0
  %377 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %6, i64 0, i32 4, i32 0, i32 1
  %378 = bitcast i32** %377 to i64*
  br label %602

379:                                              ; preds = %349, %422
  %380 = phi %"class.std::__1::__tree_end_node"* [ %346, %349 ], [ %423, %422 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %350) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %350, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %351, align 8
  store i32 0, i32* %352, align 8
  store i32 0, i32* %353, align 4
  store i32 17, i32* %354, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %356, i8 0, i64 56, i1 false) #17
  %381 = bitcast %"class.std::__1::__tree_end_node"* %380 to %"class.std::__1::__tree_node"*
  %382 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %381, i64 0, i32 1
  %383 = load i32, i32* %382, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %5, i32 %383)
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %5, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %351, align 8
  %384 = load i64*, i64** %357, align 8
  %385 = icmp eq i64* %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %379
  %387 = bitcast i64* %384 to i8*
  call void @_ZdlPv(i8* %387) #18
  br label %388

388:                                              ; preds = %386, %379
  %389 = load i32*, i32** %358, align 8
  %390 = icmp eq i32* %389, null
  br i1 %390, label %394, label %391

391:                                              ; preds = %388
  %392 = ptrtoint i32* %389 to i64
  store i64 %392, i64* %360, align 8
  %393 = bitcast i32* %389 to i8*
  call void @_ZdlPv(i8* %393) #18
  br label %394

394:                                              ; preds = %388, %391
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %350) #17
  %395 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %380, i64 1, i32 0
  %396 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %395, align 8
  %397 = icmp eq %"class.std::__1::__tree_node_base"* %396, null
  br i1 %397, label %398, label %406

398:                                              ; preds = %394
  %399 = bitcast %"class.std::__1::__tree_end_node"* %380 to %"class.std::__1::__tree_node_base"*
  %400 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %380, i64 2
  %401 = bitcast %"class.std::__1::__tree_end_node"* %400 to %"class.std::__1::__tree_end_node"**
  %402 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %401, align 8
  %403 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %402, i64 0, i32 0
  %404 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %403, align 8
  %405 = icmp eq %"class.std::__1::__tree_node_base"* %404, %399
  br i1 %405, label %422, label %413

406:                                              ; preds = %394, %406
  %407 = phi %"class.std::__1::__tree_node_base"* [ %409, %406 ], [ %396, %394 ]
  %408 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %407, i64 0, i32 0, i32 0
  %409 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %408, align 8
  %410 = icmp eq %"class.std::__1::__tree_node_base"* %409, null
  br i1 %410, label %411, label %406

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %407, i64 0, i32 0
  br label %422

413:                                              ; preds = %398, %413
  %414 = phi %"class.std::__1::__tree_end_node"** [ %417, %413 ], [ %401, %398 ]
  %415 = bitcast %"class.std::__1::__tree_end_node"** %414 to %"class.std::__1::__tree_node_base"**
  %416 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %415, align 8
  %417 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %416, i64 0, i32 2
  %418 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %417, align 8
  %419 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %418, i64 0, i32 0
  %420 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %419, align 8
  %421 = icmp eq %"class.std::__1::__tree_node_base"* %420, %416
  br i1 %421, label %422, label %413

422:                                              ; preds = %413, %398, %411
  %423 = phi %"class.std::__1::__tree_end_node"* [ %412, %411 ], [ %402, %398 ], [ %418, %413 ]
  %424 = icmp eq %"class.std::__1::__tree_end_node"* %423, %347
  br i1 %424, label %361, label %379

425:                                              ; preds = %680, %361
  %426 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24
  %427 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 24, i32 0, i32 1
  %428 = bitcast %"class.std::__1::unique_ptr"** %427 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.std::__1::vector.38"* %426 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = sub i64 %429, %431
  %433 = lshr exact i64 %432, 3
  %434 = trunc i64 %433 to i32
  %435 = icmp sgt i32 %434, 0
  br i1 %435, label %436, label %449

436:                                              ; preds = %425, %436
  %437 = phi i64 [ %444, %436 ], [ %431, %425 ]
  %438 = phi i64 [ %442, %436 ], [ 0, %425 ]
  %439 = inttoptr i64 %437 to %"class.std::__1::unique_ptr"*
  %440 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %439, i64 %438, i32 0, i32 0, i32 0
  %441 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %440, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %441, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %442 = add nuw nsw i64 %438, 1
  %443 = load i64, i64* %428, align 8
  %444 = load i64, i64* %430, align 8
  %445 = sub i64 %443, %444
  %446 = shl i64 %445, 29
  %447 = ashr i64 %446, 32
  %448 = icmp slt i64 %442, %447
  br i1 %448, label %436, label %449

449:                                              ; preds = %436, %425
  %450 = bitcast %"class.spv::Instruction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %450) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %450, i8 -86, i64 24, i1 false)
  %451 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %451, align 8
  %452 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 1
  store i32 0, i32* %452, align 8
  %453 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 2
  store i32 0, i32* %453, align 4
  %454 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 3
  store i32 14, i32* %454, align 8
  %455 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4
  %456 = bitcast %"class.std::__1::vector.26"* %455 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %456, i8 0, i64 56, i1 false) #17
  %457 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 12
  %458 = load i32, i32* %457, align 8
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %458)
  %459 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 13
  %460 = load i32, i32* %459, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %460)
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %7, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %461 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25
  %462 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 25, i32 0, i32 1
  %463 = bitcast %"class.std::__1::unique_ptr"** %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = bitcast %"class.std::__1::vector.38"* %461 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = sub i64 %464, %466
  %468 = lshr exact i64 %467, 3
  %469 = trunc i64 %468 to i32
  %470 = icmp sgt i32 %469, 0
  br i1 %470, label %471, label %484

471:                                              ; preds = %449, %471
  %472 = phi i64 [ %479, %471 ], [ %466, %449 ]
  %473 = phi i64 [ %477, %471 ], [ 0, %449 ]
  %474 = inttoptr i64 %472 to %"class.std::__1::unique_ptr"*
  %475 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %474, i64 %473, i32 0, i32 0, i32 0
  %476 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %475, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %476, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %477 = add nuw nsw i64 %473, 1
  %478 = load i64, i64* %463, align 8
  %479 = load i64, i64* %465, align 8
  %480 = sub i64 %478, %479
  %481 = shl i64 %480, 29
  %482 = ashr i64 %481, 32
  %483 = icmp slt i64 %477, %482
  br i1 %483, label %471, label %484

484:                                              ; preds = %471, %449
  %485 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26
  %486 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 26, i32 0, i32 1
  %487 = bitcast %"class.std::__1::unique_ptr"** %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = bitcast %"class.std::__1::vector.38"* %485 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = sub i64 %488, %490
  %492 = lshr exact i64 %491, 3
  %493 = trunc i64 %492 to i32
  %494 = icmp sgt i32 %493, 0
  br i1 %494, label %495, label %508

495:                                              ; preds = %484, %495
  %496 = phi i64 [ %503, %495 ], [ %490, %484 ]
  %497 = phi i64 [ %501, %495 ], [ 0, %484 ]
  %498 = inttoptr i64 %496 to %"class.std::__1::unique_ptr"*
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %498, i64 %497, i32 0, i32 0, i32 0
  %500 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %499, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %500, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %501 = add nuw nsw i64 %497, 1
  %502 = load i64, i64* %487, align 8
  %503 = load i64, i64* %489, align 8
  %504 = sub i64 %502, %503
  %505 = shl i64 %504, 29
  %506 = ashr i64 %505, 32
  %507 = icmp slt i64 %501, %506
  br i1 %507, label %495, label %508

508:                                              ; preds = %495, %484
  %509 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23
  %510 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 23, i32 0, i32 1
  %511 = bitcast %"class.std::__1::unique_ptr"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.std::__1::vector.38"* %509 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = sub i64 %512, %514
  %516 = lshr exact i64 %515, 3
  %517 = trunc i64 %516 to i32
  %518 = icmp sgt i32 %517, 0
  br i1 %518, label %519, label %532

519:                                              ; preds = %508, %519
  %520 = phi i64 [ %527, %519 ], [ %514, %508 ]
  %521 = phi i64 [ %525, %519 ], [ 0, %508 ]
  %522 = inttoptr i64 %520 to %"class.std::__1::unique_ptr"*
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %522, i64 %521, i32 0, i32 0, i32 0
  %524 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %523, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %524, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %525 = add nuw nsw i64 %521, 1
  %526 = load i64, i64* %511, align 8
  %527 = load i64, i64* %513, align 8
  %528 = sub i64 %526, %527
  %529 = shl i64 %528, 29
  %530 = ashr i64 %529, 32
  %531 = icmp slt i64 %525, %530
  br i1 %531, label %519, label %532

532:                                              ; preds = %519, %508
  %533 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 4
  %534 = load i32, i32* %533, align 4
  %535 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 5
  call void @_ZNK3spv7Builder22dumpSourceInstructionsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS1_6vectorIjNS5_IjEEEE(%"class.spv::Builder"* %0, i32 %534, %"class.std::__1::basic_string"* dereferenceable(24) %535, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %536 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 0
  %537 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %536, align 8
  %538 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 1, i32 0, i32 0
  %539 = icmp eq %"class.std::__1::__tree_end_node"* %537, %538
  br i1 %539, label %578, label %540

540:                                              ; preds = %532, %575
  %541 = phi %"class.std::__1::__tree_end_node"* [ %576, %575 ], [ %537, %532 ]
  %542 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %541, i64 4
  %543 = bitcast %"class.std::__1::__tree_end_node"* %542 to i32*
  %544 = load i32, i32* %543, align 8
  %545 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %541, i64 5
  %546 = bitcast %"class.std::__1::__tree_end_node"* %545 to %"class.std::__1::basic_string"**
  %547 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %546, align 8
  call void @_ZNK3spv7Builder22dumpSourceInstructionsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS1_6vectorIjNS5_IjEEEE(%"class.spv::Builder"* %0, i32 %544, %"class.std::__1::basic_string"* dereferenceable(24) %547, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %548 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %541, i64 1, i32 0
  %549 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %548, align 8
  %550 = icmp eq %"class.std::__1::__tree_node_base"* %549, null
  br i1 %550, label %551, label %559

551:                                              ; preds = %540
  %552 = bitcast %"class.std::__1::__tree_end_node"* %541 to %"class.std::__1::__tree_node_base"*
  %553 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %541, i64 2
  %554 = bitcast %"class.std::__1::__tree_end_node"* %553 to %"class.std::__1::__tree_end_node"**
  %555 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %554, align 8
  %556 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %555, i64 0, i32 0
  %557 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %556, align 8
  %558 = icmp eq %"class.std::__1::__tree_node_base"* %557, %552
  br i1 %558, label %575, label %566

559:                                              ; preds = %540, %559
  %560 = phi %"class.std::__1::__tree_node_base"* [ %562, %559 ], [ %549, %540 ]
  %561 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %560, i64 0, i32 0, i32 0
  %562 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %561, align 8
  %563 = icmp eq %"class.std::__1::__tree_node_base"* %562, null
  br i1 %563, label %564, label %559

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %560, i64 0, i32 0
  br label %575

566:                                              ; preds = %551, %566
  %567 = phi %"class.std::__1::__tree_end_node"** [ %570, %566 ], [ %554, %551 ]
  %568 = bitcast %"class.std::__1::__tree_end_node"** %567 to %"class.std::__1::__tree_node_base"**
  %569 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %568, align 8
  %570 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %569, i64 0, i32 2
  %571 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %570, align 8
  %572 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %571, i64 0, i32 0
  %573 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %572, align 8
  %574 = icmp eq %"class.std::__1::__tree_node_base"* %573, %569
  br i1 %574, label %575, label %566

575:                                              ; preds = %566, %564, %551
  %576 = phi %"class.std::__1::__tree_end_node"* [ %565, %564 ], [ %555, %551 ], [ %571, %566 ]
  %577 = icmp eq %"class.std::__1::__tree_end_node"* %576, %538
  br i1 %577, label %578, label %540

578:                                              ; preds = %575, %532
  %579 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 10
  %580 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 10, i32 0, i32 1
  %581 = bitcast i8*** %580 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = bitcast %"class.std::__1::vector"* %579 to i64*
  %584 = load i64, i64* %583, align 8
  %585 = sub i64 %582, %584
  %586 = lshr exact i64 %585, 3
  %587 = trunc i64 %586 to i32
  %588 = icmp sgt i32 %587, 0
  br i1 %588, label %589, label %683

589:                                              ; preds = %578
  %590 = bitcast %"class.spv::Instruction"* %8 to i8*
  %591 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 0
  %592 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 1
  %593 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 2
  %594 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 3
  %595 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4
  %596 = bitcast %"class.std::__1::vector.26"* %595 to i8*
  %597 = bitcast i32* %3 to i8*
  %598 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 5, i32 0
  %599 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 0
  %600 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %8, i64 0, i32 4, i32 0, i32 1
  %601 = bitcast i32** %600 to i64*
  br label %819

602:                                              ; preds = %366, %680
  %603 = phi %"class.std::__1::__tree_end_node"* [ %363, %366 ], [ %681, %680 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %367) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %367, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %368, align 8
  store i32 0, i32* %369, align 8
  store i32 0, i32* %370, align 4
  store i32 10, i32* %371, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %373, i8 0, i64 56, i1 false) #17
  %604 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %603, i64 4
  %605 = bitcast %"class.std::__1::__tree_end_node"* %604 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %606 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %605, i64 0, i32 1, i32 0
  %607 = load i8, i8* %606, align 1
  %608 = icmp slt i8 %607, 0
  br i1 %608, label %609, label %612

609:                                              ; preds = %602
  %610 = bitcast %"class.std::__1::__tree_end_node"* %604 to i8**
  %611 = load i8*, i8** %610, align 8
  br label %614

612:                                              ; preds = %602
  %613 = bitcast %"class.std::__1::__tree_end_node"* %604 to i8*
  br label %614

614:                                              ; preds = %609, %612
  %615 = phi i8* [ %611, %609 ], [ %613, %612 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %374) #17
  store i32 -1431655766, i32* %4, align 4
  br label %616

616:                                              ; preds = %627, %614
  %617 = phi i8* [ %615, %614 ], [ %620, %627 ]
  %618 = phi i8* [ %374, %614 ], [ %628, %627 ]
  %619 = phi i32 [ 0, %614 ], [ %629, %627 ]
  %620 = getelementptr inbounds i8, i8* %617, i64 1
  %621 = load i8, i8* %617, align 1
  %622 = getelementptr inbounds i8, i8* %618, i64 1
  store i8 %621, i8* %618, align 1
  %623 = add nsw i32 %619, 1
  %624 = icmp eq i32 %623, 4
  br i1 %624, label %625, label %627

625:                                              ; preds = %616
  %626 = load i32, i32* %4, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %626) #17
  br label %627

627:                                              ; preds = %625, %616
  %628 = phi i8* [ %374, %625 ], [ %622, %616 ]
  %629 = phi i32 [ 0, %625 ], [ %623, %616 ]
  %630 = icmp eq i8 %621, 0
  br i1 %630, label %631, label %616

631:                                              ; preds = %627
  %632 = icmp sgt i32 %629, 0
  br i1 %632, label %633, label %641

633:                                              ; preds = %631
  %634 = icmp slt i32 %629, 4
  br i1 %634, label %635, label %639

635:                                              ; preds = %633
  %636 = sub nuw nsw i32 3, %629
  %637 = zext i32 %636 to i64
  %638 = add nuw nsw i64 %637, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %628, i8 0, i64 %638, i1 false) #17
  br label %639

639:                                              ; preds = %635, %633
  %640 = load i32, i32* %4, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %6, i32 %640) #17
  br label %641

641:                                              ; preds = %631, %639
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %374) #17
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %6, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %368, align 8
  %642 = load i64*, i64** %375, align 8
  %643 = icmp eq i64* %642, null
  br i1 %643, label %646, label %644

644:                                              ; preds = %641
  %645 = bitcast i64* %642 to i8*
  call void @_ZdlPv(i8* %645) #18
  br label %646

646:                                              ; preds = %644, %641
  %647 = load i32*, i32** %376, align 8
  %648 = icmp eq i32* %647, null
  br i1 %648, label %652, label %649

649:                                              ; preds = %646
  %650 = ptrtoint i32* %647 to i64
  store i64 %650, i64* %378, align 8
  %651 = bitcast i32* %647 to i8*
  call void @_ZdlPv(i8* %651) #18
  br label %652

652:                                              ; preds = %646, %649
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %367) #17
  %653 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %603, i64 1, i32 0
  %654 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %653, align 8
  %655 = icmp eq %"class.std::__1::__tree_node_base"* %654, null
  br i1 %655, label %656, label %664

656:                                              ; preds = %652
  %657 = bitcast %"class.std::__1::__tree_end_node"* %603 to %"class.std::__1::__tree_node_base"*
  %658 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %603, i64 2
  %659 = bitcast %"class.std::__1::__tree_end_node"* %658 to %"class.std::__1::__tree_end_node"**
  %660 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %659, align 8
  %661 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %660, i64 0, i32 0
  %662 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %661, align 8
  %663 = icmp eq %"class.std::__1::__tree_node_base"* %662, %657
  br i1 %663, label %680, label %671

664:                                              ; preds = %652, %664
  %665 = phi %"class.std::__1::__tree_node_base"* [ %667, %664 ], [ %654, %652 ]
  %666 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %665, i64 0, i32 0, i32 0
  %667 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %666, align 8
  %668 = icmp eq %"class.std::__1::__tree_node_base"* %667, null
  br i1 %668, label %669, label %664

669:                                              ; preds = %664
  %670 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %665, i64 0, i32 0
  br label %680

671:                                              ; preds = %656, %671
  %672 = phi %"class.std::__1::__tree_end_node"** [ %675, %671 ], [ %659, %656 ]
  %673 = bitcast %"class.std::__1::__tree_end_node"** %672 to %"class.std::__1::__tree_node_base"**
  %674 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %673, align 8
  %675 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %674, i64 0, i32 2
  %676 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %675, align 8
  %677 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %676, i64 0, i32 0
  %678 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %677, align 8
  %679 = icmp eq %"class.std::__1::__tree_node_base"* %678, %674
  br i1 %679, label %680, label %671

680:                                              ; preds = %671, %656, %669
  %681 = phi %"class.std::__1::__tree_end_node"* [ %670, %669 ], [ %660, %656 ], [ %676, %671 ]
  %682 = icmp eq %"class.std::__1::__tree_end_node"* %681, %364
  br i1 %682, label %425, label %602

683:                                              ; preds = %861, %578
  %684 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27
  %685 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 27, i32 0, i32 1
  %686 = bitcast %"class.std::__1::unique_ptr"** %685 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = bitcast %"class.std::__1::vector.38"* %684 to i64*
  %689 = load i64, i64* %688, align 8
  %690 = sub i64 %687, %689
  %691 = lshr exact i64 %690, 3
  %692 = trunc i64 %691 to i32
  %693 = icmp sgt i32 %692, 0
  br i1 %693, label %694, label %707

694:                                              ; preds = %683, %694
  %695 = phi i64 [ %702, %694 ], [ %689, %683 ]
  %696 = phi i64 [ %700, %694 ], [ 0, %683 ]
  %697 = inttoptr i64 %695 to %"class.std::__1::unique_ptr"*
  %698 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %697, i64 %696, i32 0, i32 0, i32 0
  %699 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %698, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %699, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %700 = add nuw nsw i64 %696, 1
  %701 = load i64, i64* %686, align 8
  %702 = load i64, i64* %688, align 8
  %703 = sub i64 %701, %702
  %704 = shl i64 %703, 29
  %705 = ashr i64 %704, 32
  %706 = icmp slt i64 %700, %705
  br i1 %706, label %694, label %707

707:                                              ; preds = %694, %683
  call void @_ZNK3spv7Builder19dumpModuleProcessesERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* %0, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %708 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28
  %709 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 28, i32 0, i32 1
  %710 = bitcast %"class.std::__1::unique_ptr"** %709 to i64*
  %711 = load i64, i64* %710, align 8
  %712 = bitcast %"class.std::__1::vector.38"* %708 to i64*
  %713 = load i64, i64* %712, align 8
  %714 = sub i64 %711, %713
  %715 = lshr exact i64 %714, 3
  %716 = trunc i64 %715 to i32
  %717 = icmp sgt i32 %716, 0
  br i1 %717, label %718, label %731

718:                                              ; preds = %707, %718
  %719 = phi i64 [ %726, %718 ], [ %713, %707 ]
  %720 = phi i64 [ %724, %718 ], [ 0, %707 ]
  %721 = inttoptr i64 %719 to %"class.std::__1::unique_ptr"*
  %722 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %721, i64 %720, i32 0, i32 0, i32 0
  %723 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %722, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %723, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %724 = add nuw nsw i64 %720, 1
  %725 = load i64, i64* %710, align 8
  %726 = load i64, i64* %712, align 8
  %727 = sub i64 %725, %726
  %728 = shl i64 %727, 29
  %729 = ashr i64 %728, 32
  %730 = icmp slt i64 %724, %729
  br i1 %730, label %718, label %731

731:                                              ; preds = %718, %707
  %732 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29
  %733 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 29, i32 0, i32 1
  %734 = bitcast %"class.std::__1::unique_ptr"** %733 to i64*
  %735 = load i64, i64* %734, align 8
  %736 = bitcast %"class.std::__1::vector.38"* %732 to i64*
  %737 = load i64, i64* %736, align 8
  %738 = sub i64 %735, %737
  %739 = lshr exact i64 %738, 3
  %740 = trunc i64 %739 to i32
  %741 = icmp sgt i32 %740, 0
  br i1 %741, label %742, label %755

742:                                              ; preds = %731, %742
  %743 = phi i64 [ %750, %742 ], [ %737, %731 ]
  %744 = phi i64 [ %748, %742 ], [ 0, %731 ]
  %745 = inttoptr i64 %743 to %"class.std::__1::unique_ptr"*
  %746 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %745, i64 %744, i32 0, i32 0, i32 0
  %747 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %746, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %747, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %748 = add nuw nsw i64 %744, 1
  %749 = load i64, i64* %734, align 8
  %750 = load i64, i64* %736, align 8
  %751 = sub i64 %749, %750
  %752 = shl i64 %751, 29
  %753 = ashr i64 %752, 32
  %754 = icmp slt i64 %748, %753
  br i1 %754, label %742, label %755

755:                                              ; preds = %742, %731
  %756 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 30
  %757 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 30, i32 0, i32 1
  %758 = bitcast %"class.std::__1::unique_ptr"** %757 to i64*
  %759 = load i64, i64* %758, align 8
  %760 = bitcast %"class.std::__1::vector.38"* %756 to i64*
  %761 = load i64, i64* %760, align 8
  %762 = sub i64 %759, %761
  %763 = lshr exact i64 %762, 3
  %764 = trunc i64 %763 to i32
  %765 = icmp sgt i32 %764, 0
  br i1 %765, label %766, label %779

766:                                              ; preds = %755, %766
  %767 = phi i64 [ %774, %766 ], [ %761, %755 ]
  %768 = phi i64 [ %772, %766 ], [ 0, %755 ]
  %769 = inttoptr i64 %767 to %"class.std::__1::unique_ptr"*
  %770 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %769, i64 %768, i32 0, i32 0, i32 0
  %771 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %770, align 8
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %771, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %772 = add nuw nsw i64 %768, 1
  %773 = load i64, i64* %758, align 8
  %774 = load i64, i64* %760, align 8
  %775 = sub i64 %773, %774
  %776 = shl i64 %775, 29
  %777 = ashr i64 %776, 32
  %778 = icmp slt i64 %772, %777
  br i1 %778, label %766, label %779

779:                                              ; preds = %766, %755
  %780 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 1
  %781 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 16, i32 1, i32 0, i32 1
  %782 = bitcast %"class.spv::Function"*** %781 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = bitcast %"class.std::__1::vector.24"* %780 to i64*
  %785 = load i64, i64* %784, align 8
  %786 = sub i64 %783, %785
  %787 = lshr exact i64 %786, 3
  %788 = trunc i64 %787 to i32
  %789 = icmp sgt i32 %788, 0
  br i1 %789, label %790, label %803

790:                                              ; preds = %779, %790
  %791 = phi i64 [ %798, %790 ], [ %785, %779 ]
  %792 = phi i64 [ %796, %790 ], [ 0, %779 ]
  %793 = inttoptr i64 %791 to %"class.spv::Function"**
  %794 = getelementptr inbounds %"class.spv::Function"*, %"class.spv::Function"** %793, i64 %792
  %795 = load %"class.spv::Function"*, %"class.spv::Function"** %794, align 8
  call void @_ZNK3spv8Function4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Function"* %795, %"class.std::__1::vector.26"* dereferenceable(24) %1) #17
  %796 = add nuw nsw i64 %792, 1
  %797 = load i64, i64* %782, align 8
  %798 = load i64, i64* %784, align 8
  %799 = sub i64 %797, %798
  %800 = shl i64 %799, 29
  %801 = ashr i64 %800, 32
  %802 = icmp slt i64 %796, %801
  br i1 %802, label %790, label %803

803:                                              ; preds = %790, %779
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %451, align 8
  %804 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 5, i32 0
  %805 = load i64*, i64** %804, align 8
  %806 = icmp eq i64* %805, null
  br i1 %806, label %809, label %807

807:                                              ; preds = %803
  %808 = bitcast i64* %805 to i8*
  call void @_ZdlPv(i8* %808) #18
  br label %809

809:                                              ; preds = %807, %803
  %810 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %811 = load i32*, i32** %810, align 8
  %812 = icmp eq i32* %811, null
  br i1 %812, label %818, label %813

813:                                              ; preds = %809
  %814 = ptrtoint i32* %811 to i64
  %815 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 1
  %816 = bitcast i32** %815 to i64*
  store i64 %814, i64* %816, align 8
  %817 = bitcast i32* %811 to i8*
  call void @_ZdlPv(i8* %817) #18
  br label %818

818:                                              ; preds = %809, %813
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %450) #17
  ret void

819:                                              ; preds = %589, %861
  %820 = phi i64 [ %584, %589 ], [ %864, %861 ]
  %821 = phi i64 [ 0, %589 ], [ %862, %861 ]
  %822 = inttoptr i64 %820 to i8**
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %590) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %590, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %591, align 8
  store i32 0, i32* %592, align 8
  store i32 0, i32* %593, align 4
  store i32 4, i32* %594, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %596, i8 0, i64 56, i1 false) #17
  %823 = getelementptr inbounds i8*, i8** %822, i64 %821
  %824 = load i8*, i8** %823, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %597) #17
  store i32 -1431655766, i32* %3, align 4
  br label %825

825:                                              ; preds = %836, %819
  %826 = phi i8* [ %824, %819 ], [ %829, %836 ]
  %827 = phi i8* [ %597, %819 ], [ %837, %836 ]
  %828 = phi i32 [ 0, %819 ], [ %838, %836 ]
  %829 = getelementptr inbounds i8, i8* %826, i64 1
  %830 = load i8, i8* %826, align 1
  %831 = getelementptr inbounds i8, i8* %827, i64 1
  store i8 %830, i8* %827, align 1
  %832 = add nsw i32 %828, 1
  %833 = icmp eq i32 %832, 4
  br i1 %833, label %834, label %836

834:                                              ; preds = %825
  %835 = load i32, i32* %3, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %835) #17
  br label %836

836:                                              ; preds = %834, %825
  %837 = phi i8* [ %597, %834 ], [ %831, %825 ]
  %838 = phi i32 [ 0, %834 ], [ %832, %825 ]
  %839 = icmp eq i8 %830, 0
  br i1 %839, label %840, label %825

840:                                              ; preds = %836
  %841 = icmp sgt i32 %838, 0
  br i1 %841, label %842, label %850

842:                                              ; preds = %840
  %843 = icmp slt i32 %838, 4
  br i1 %843, label %844, label %848

844:                                              ; preds = %842
  %845 = sub nuw nsw i32 3, %838
  %846 = zext i32 %845 to i64
  %847 = add nuw nsw i64 %846, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %837, i8 0, i64 %847, i1 false) #17
  br label %848

848:                                              ; preds = %844, %842
  %849 = load i32, i32* %3, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %849) #17
  br label %850

850:                                              ; preds = %840, %848
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %597) #17
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %8, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %591, align 8
  %851 = load i64*, i64** %598, align 8
  %852 = icmp eq i64* %851, null
  br i1 %852, label %855, label %853

853:                                              ; preds = %850
  %854 = bitcast i64* %851 to i8*
  call void @_ZdlPv(i8* %854) #18
  br label %855

855:                                              ; preds = %853, %850
  %856 = load i32*, i32** %599, align 8
  %857 = icmp eq i32* %856, null
  br i1 %857, label %861, label %858

858:                                              ; preds = %855
  %859 = ptrtoint i32* %856 to i64
  store i64 %859, i64* %601, align 8
  %860 = bitcast i32* %856 to i8*
  call void @_ZdlPv(i8* %860) #18
  br label %861

861:                                              ; preds = %855, %858
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %590) #17
  %862 = add nuw nsw i64 %821, 1
  %863 = load i64, i64* %581, align 8
  %864 = load i64, i64* %583, align 8
  %865 = sub i64 %863, %864
  %866 = shl i64 %865, 29
  %867 = ashr i64 %866, 32
  %868 = icmp slt i64 %862, %867
  br i1 %868, label %819, label %683
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"*, %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = select i1 %5, i32 1, i32 2
  %7 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i32
  %11 = add nuw nsw i32 %6, %10
  %12 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.26"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = lshr exact i64 %18, 2
  %20 = trunc i64 %19 to i32
  %21 = add i32 %11, %20
  %22 = shl i32 %21, 16
  %23 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = or i32 %22, %24
  %26 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = icmp ult i32* %27, %29
  %31 = ptrtoint i32* %29 to i64
  br i1 %30, label %32, label %36

32:                                               ; preds = %2
  store i32 %25, i32* %27, align 4
  %33 = getelementptr inbounds i32, i32* %27, i64 1
  %34 = ptrtoint i32* %33 to i64
  %35 = bitcast i32** %26 to i64*
  store i64 %34, i64* %35, align 8
  br label %92

36:                                               ; preds = %2
  %37 = ptrtoint i32* %27 to i64
  %38 = bitcast i32** %26 to i64*
  %39 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  %42 = ashr exact i64 %41, 2
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 4611686018427387903
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #20
  unreachable

47:                                               ; preds = %36
  %48 = bitcast i32** %28 to i64*
  %49 = sub i64 %31, %40
  %50 = ashr exact i64 %49, 2
  %51 = icmp ult i64 %50, 2305843009213693951
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = ashr exact i64 %49, 1
  %54 = icmp ult i64 %53, %43
  %55 = select i1 %54, i64 %43, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i64 %55, 4611686018427387903
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @abort() #20
  unreachable

60:                                               ; preds = %57, %47
  %61 = phi i64 [ %55, %57 ], [ 4611686018427387903, %47 ]
  %62 = shl i64 %61, 2
  %63 = tail call i8* @_Znwm(i64 %62) #18
  %64 = bitcast i8* %63 to i32*
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %61, %60 ], [ 0, %52 ]
  %67 = phi i32* [ %64, %60 ], [ null, %52 ]
  %68 = getelementptr inbounds i32, i32* %67, i64 %42
  %69 = getelementptr inbounds i32, i32* %67, i64 %66
  %70 = ptrtoint i32* %69 to i64
  store i32 %25, i32* %68, align 4
  %71 = getelementptr inbounds i32, i32* %68, i64 1
  %72 = ptrtoint i32* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = load i64, i64* %38, align 8
  %76 = ptrtoint i32* %74 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 2
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds i32, i32* %68, i64 %79
  %81 = ptrtoint i32* %80 to i64
  %82 = icmp sgt i64 %77, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %65
  %84 = bitcast i32* %80 to i8*
  %85 = bitcast i32* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 %77, i1 false) #17
  %86 = load i32*, i32** %73, align 8
  br label %87

87:                                               ; preds = %83, %65
  %88 = phi i32* [ %74, %65 ], [ %86, %83 ]
  store i64 %81, i64* %39, align 8
  store i64 %72, i64* %38, align 8
  store i64 %70, i64* %48, align 8
  %89 = icmp eq i32* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %87
  %91 = bitcast i32* %88 to i8*
  tail call void @_ZdlPv(i8* %91) #18
  br label %92

92:                                               ; preds = %32, %87, %90
  %93 = load i32, i32* %3, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %160, label %95

95:                                               ; preds = %92
  %96 = load i32*, i32** %26, align 8
  %97 = load i32*, i32** %28, align 8
  %98 = icmp eq i32* %96, %97
  %99 = ptrtoint i32* %97 to i64
  br i1 %98, label %104, label %100

100:                                              ; preds = %95
  store i32 %93, i32* %96, align 4
  %101 = getelementptr inbounds i32, i32* %96, i64 1
  %102 = ptrtoint i32* %101 to i64
  %103 = bitcast i32** %26 to i64*
  store i64 %102, i64* %103, align 8
  br label %160

104:                                              ; preds = %95
  %105 = ptrtoint i32* %96 to i64
  %106 = bitcast i32** %26 to i64*
  %107 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %105, %108
  %110 = ashr exact i64 %109, 2
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 4611686018427387903
  br i1 %112, label %113, label %115

113:                                              ; preds = %104
  %114 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #20
  unreachable

115:                                              ; preds = %104
  %116 = bitcast i32** %28 to i64*
  %117 = sub i64 %99, %108
  %118 = ashr exact i64 %117, 2
  %119 = icmp ult i64 %118, 2305843009213693951
  br i1 %119, label %120, label %128

120:                                              ; preds = %115
  %121 = ashr exact i64 %117, 1
  %122 = icmp ult i64 %121, %111
  %123 = select i1 %122, i64 %111, i64 %121
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %133, label %125

125:                                              ; preds = %120
  %126 = icmp ugt i64 %123, 4611686018427387903
  br i1 %126, label %127, label %128

127:                                              ; preds = %125
  tail call void @abort() #20
  unreachable

128:                                              ; preds = %125, %115
  %129 = phi i64 [ %123, %125 ], [ 4611686018427387903, %115 ]
  %130 = shl i64 %129, 2
  %131 = tail call i8* @_Znwm(i64 %130) #18
  %132 = bitcast i8* %131 to i32*
  br label %133

133:                                              ; preds = %128, %120
  %134 = phi i64 [ %129, %128 ], [ 0, %120 ]
  %135 = phi i32* [ %132, %128 ], [ null, %120 ]
  %136 = getelementptr inbounds i32, i32* %135, i64 %110
  %137 = getelementptr inbounds i32, i32* %135, i64 %134
  %138 = ptrtoint i32* %137 to i64
  store i32 %93, i32* %136, align 4
  %139 = getelementptr inbounds i32, i32* %136, i64 1
  %140 = ptrtoint i32* %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %142 = load i32*, i32** %141, align 8
  %143 = load i64, i64* %106, align 8
  %144 = ptrtoint i32* %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 2
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds i32, i32* %136, i64 %147
  %149 = ptrtoint i32* %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %133
  %152 = bitcast i32* %148 to i8*
  %153 = bitcast i32* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %153, i64 %145, i1 false) #17
  %154 = load i32*, i32** %141, align 8
  br label %155

155:                                              ; preds = %151, %133
  %156 = phi i32* [ %142, %133 ], [ %154, %151 ]
  store i64 %149, i64* %107, align 8
  store i64 %140, i64* %106, align 8
  store i64 %138, i64* %116, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = bitcast i32* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #18
  br label %160

160:                                              ; preds = %158, %155, %100, %92
  %161 = load i32, i32* %7, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %228, label %163

163:                                              ; preds = %160
  %164 = load i32*, i32** %26, align 8
  %165 = load i32*, i32** %28, align 8
  %166 = icmp eq i32* %164, %165
  %167 = ptrtoint i32* %165 to i64
  br i1 %166, label %172, label %168

168:                                              ; preds = %163
  store i32 %161, i32* %164, align 4
  %169 = getelementptr inbounds i32, i32* %164, i64 1
  %170 = ptrtoint i32* %169 to i64
  %171 = bitcast i32** %26 to i64*
  store i64 %170, i64* %171, align 8
  br label %228

172:                                              ; preds = %163
  %173 = ptrtoint i32* %164 to i64
  %174 = bitcast i32** %26 to i64*
  %175 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %173, %176
  %178 = ashr exact i64 %177, 2
  %179 = add nsw i64 %178, 1
  %180 = icmp ugt i64 %179, 4611686018427387903
  br i1 %180, label %181, label %183

181:                                              ; preds = %172
  %182 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #20
  unreachable

183:                                              ; preds = %172
  %184 = bitcast i32** %28 to i64*
  %185 = sub i64 %167, %176
  %186 = ashr exact i64 %185, 2
  %187 = icmp ult i64 %186, 2305843009213693951
  br i1 %187, label %188, label %196

188:                                              ; preds = %183
  %189 = ashr exact i64 %185, 1
  %190 = icmp ult i64 %189, %179
  %191 = select i1 %190, i64 %179, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %201, label %193

193:                                              ; preds = %188
  %194 = icmp ugt i64 %191, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #20
  unreachable

196:                                              ; preds = %193, %183
  %197 = phi i64 [ %191, %193 ], [ 4611686018427387903, %183 ]
  %198 = shl i64 %197, 2
  %199 = tail call i8* @_Znwm(i64 %198) #18
  %200 = bitcast i8* %199 to i32*
  br label %201

201:                                              ; preds = %196, %188
  %202 = phi i64 [ %197, %196 ], [ 0, %188 ]
  %203 = phi i32* [ %200, %196 ], [ null, %188 ]
  %204 = getelementptr inbounds i32, i32* %203, i64 %178
  %205 = getelementptr inbounds i32, i32* %203, i64 %202
  %206 = ptrtoint i32* %205 to i64
  store i32 %161, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %204, i64 1
  %208 = ptrtoint i32* %207 to i64
  %209 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = load i64, i64* %174, align 8
  %212 = ptrtoint i32* %210 to i64
  %213 = sub i64 %211, %212
  %214 = ashr exact i64 %213, 2
  %215 = sub nsw i64 0, %214
  %216 = getelementptr inbounds i32, i32* %204, i64 %215
  %217 = ptrtoint i32* %216 to i64
  %218 = icmp sgt i64 %213, 0
  br i1 %218, label %219, label %223

219:                                              ; preds = %201
  %220 = bitcast i32* %216 to i8*
  %221 = bitcast i32* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %220, i8* align 4 %221, i64 %213, i1 false) #17
  %222 = load i32*, i32** %209, align 8
  br label %223

223:                                              ; preds = %219, %201
  %224 = phi i32* [ %210, %201 ], [ %222, %219 ]
  store i64 %217, i64* %175, align 8
  store i64 %208, i64* %174, align 8
  store i64 %206, i64* %184, align 8
  %225 = icmp eq i32* %224, null
  br i1 %225, label %228, label %226

226:                                              ; preds = %223
  %227 = bitcast i32* %224 to i8*
  tail call void @_ZdlPv(i8* %227) #18
  br label %228

228:                                              ; preds = %226, %223, %168, %160
  %229 = load i64, i64* %14, align 8
  %230 = load i64, i64* %16, align 8
  %231 = sub i64 %229, %230
  %232 = lshr exact i64 %231, 2
  %233 = trunc i64 %232 to i32
  %234 = icmp sgt i32 %233, 0
  br i1 %234, label %235, label %240

235:                                              ; preds = %228
  %236 = bitcast i32** %26 to i64*
  %237 = bitcast %"class.std::__1::vector.26"* %1 to i64*
  %238 = bitcast i32** %28 to i64*
  %239 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  br label %241

240:                                              ; preds = %307, %228
  ret void

241:                                              ; preds = %235, %307
  %242 = phi i64 [ %230, %235 ], [ %310, %307 ]
  %243 = phi i64 [ 0, %235 ], [ %308, %307 ]
  %244 = inttoptr i64 %242 to i32*
  %245 = getelementptr inbounds i32, i32* %244, i64 %243
  %246 = load i32*, i32** %26, align 8
  %247 = load i32*, i32** %28, align 8
  %248 = icmp eq i32* %246, %247
  %249 = ptrtoint i32* %247 to i64
  br i1 %248, label %254, label %250

250:                                              ; preds = %241
  %251 = load i32, i32* %245, align 4
  store i32 %251, i32* %246, align 4
  %252 = getelementptr inbounds i32, i32* %246, i64 1
  %253 = ptrtoint i32* %252 to i64
  store i64 %253, i64* %236, align 8
  br label %307

254:                                              ; preds = %241
  %255 = ptrtoint i32* %246 to i64
  %256 = load i64, i64* %237, align 8
  %257 = sub i64 %255, %256
  %258 = ashr exact i64 %257, 2
  %259 = add nsw i64 %258, 1
  %260 = icmp ugt i64 %259, 4611686018427387903
  br i1 %260, label %261, label %263

261:                                              ; preds = %254
  %262 = bitcast %"class.std::__1::vector.26"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %262) #20
  unreachable

263:                                              ; preds = %254
  %264 = sub i64 %249, %256
  %265 = ashr exact i64 %264, 2
  %266 = icmp ult i64 %265, 2305843009213693951
  br i1 %266, label %267, label %275

267:                                              ; preds = %263
  %268 = ashr exact i64 %264, 1
  %269 = icmp ult i64 %268, %259
  %270 = select i1 %269, i64 %259, i64 %268
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %280, label %272

272:                                              ; preds = %267
  %273 = icmp ugt i64 %270, 4611686018427387903
  br i1 %273, label %274, label %275

274:                                              ; preds = %272
  tail call void @abort() #20
  unreachable

275:                                              ; preds = %272, %263
  %276 = phi i64 [ %270, %272 ], [ 4611686018427387903, %263 ]
  %277 = shl i64 %276, 2
  %278 = tail call i8* @_Znwm(i64 %277) #18
  %279 = bitcast i8* %278 to i32*
  br label %280

280:                                              ; preds = %275, %267
  %281 = phi i64 [ %276, %275 ], [ 0, %267 ]
  %282 = phi i32* [ %279, %275 ], [ null, %267 ]
  %283 = getelementptr inbounds i32, i32* %282, i64 %258
  %284 = getelementptr inbounds i32, i32* %282, i64 %281
  %285 = ptrtoint i32* %284 to i64
  %286 = load i32, i32* %245, align 4
  store i32 %286, i32* %283, align 4
  %287 = getelementptr inbounds i32, i32* %283, i64 1
  %288 = ptrtoint i32* %287 to i64
  %289 = load i32*, i32** %239, align 8
  %290 = load i64, i64* %236, align 8
  %291 = ptrtoint i32* %289 to i64
  %292 = sub i64 %290, %291
  %293 = ashr exact i64 %292, 2
  %294 = sub nsw i64 0, %293
  %295 = getelementptr inbounds i32, i32* %283, i64 %294
  %296 = ptrtoint i32* %295 to i64
  %297 = icmp sgt i64 %292, 0
  br i1 %297, label %298, label %302

298:                                              ; preds = %280
  %299 = bitcast i32* %295 to i8*
  %300 = bitcast i32* %289 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %299, i8* align 4 %300, i64 %292, i1 false) #17
  %301 = load i32*, i32** %239, align 8
  br label %302

302:                                              ; preds = %298, %280
  %303 = phi i32* [ %289, %280 ], [ %301, %298 ]
  store i64 %296, i64* %237, align 8
  store i64 %288, i64* %236, align 8
  store i64 %285, i64* %238, align 8
  %304 = icmp eq i32* %303, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %302
  %306 = bitcast i32* %303 to i8*
  tail call void @_ZdlPv(i8* %306) #18
  br label %307

307:                                              ; preds = %250, %302, %305
  %308 = add nuw nsw i64 %243, 1
  %309 = load i64, i64* %14, align 8
  %310 = load i64, i64* %16, align 8
  %311 = sub i64 %309, %310
  %312 = shl i64 %311, 30
  %313 = ashr i64 %312, 32
  %314 = icmp slt i64 %308, %313
  br i1 %314, label %241, label %240
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv11InstructionD2Ev(%"class.spv::Instruction"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i32* %10 to i64
  %14 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3spv7Builder16dumpInstructionsERNSt3__16vectorIjNS1_9allocatorIjEEEERKNS2_INS1_10unique_ptrINS_11InstructionENS1_14default_deleteIS8_EEEENS3_ISB_EEEE(%"class.spv::Builder"* nocapture readnone, %"class.std::__1::vector.26"* dereferenceable(24), %"class.std::__1::vector.38"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %2, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.38"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %14, %3
  ret void

14:                                               ; preds = %3, %14
  %15 = phi i64 [ %22, %14 ], [ %8, %3 ]
  %16 = phi i64 [ %20, %14 ], [ 0, %3 ]
  %17 = inttoptr i64 %15 to %"class.std::__1::unique_ptr"*
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %18, align 8
  tail call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %19, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %20 = add nuw nsw i64 %16, 1
  %21 = load i64, i64* %5, align 8
  %22 = load i64, i64* %7, align 8
  %23 = sub i64 %21, %22
  %24 = shl i64 %23, 29
  %25 = ashr i64 %24, 32
  %26 = icmp slt i64 %20, %25
  br i1 %26, label %14, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3spv7Builder22dumpSourceInstructionsERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"*, %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 5
  tail call void @_ZNK3spv7Builder22dumpSourceInstructionsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS1_6vectorIjNS5_IjEEEE(%"class.spv::Builder"* %0, i32 %4, %"class.std::__1::basic_string"* dereferenceable(24) %5, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 39, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %46, %2
  ret void

11:                                               ; preds = %2, %46
  %12 = phi %"class.std::__1::__tree_end_node"* [ %47, %46 ], [ %7, %2 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 4
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 5
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::basic_string"**
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZNK3spv7Builder22dumpSourceInstructionsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS1_6vectorIjNS5_IjEEEE(%"class.spv::Builder"* %0, i32 %15, %"class.std::__1::basic_string"* dereferenceable(24) %18, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %30

22:                                               ; preds = %11
  %23 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_end_node"**
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %23
  br i1 %29, label %46, label %37

30:                                               ; preds = %11, %30
  %31 = phi %"class.std::__1::__tree_node_base"* [ %33, %30 ], [ %20, %11 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %30

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 0
  br label %46

37:                                               ; preds = %22, %37
  %38 = phi %"class.std::__1::__tree_end_node"** [ %41, %37 ], [ %25, %22 ]
  %39 = bitcast %"class.std::__1::__tree_end_node"** %38 to %"class.std::__1::__tree_node_base"**
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %40
  br i1 %45, label %46, label %37

46:                                               ; preds = %37, %22, %35
  %47 = phi %"class.std::__1::__tree_end_node"* [ %36, %35 ], [ %26, %22 ], [ %42, %37 ]
  %48 = icmp eq %"class.std::__1::__tree_end_node"* %47, %8
  br i1 %48, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3spv7Builder19dumpModuleProcessesERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Builder"* nocapture readonly, %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.spv::Instruction", align 8
  %5 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 11
  %6 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 11, i32 0, i32 1
  %7 = bitcast i8*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = lshr exact i64 %11, 3
  %13 = trunc i64 %12 to i32
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %2
  %16 = bitcast %"class.spv::Instruction"* %4 to i8*
  %17 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 0
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 3
  %21 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 4
  %22 = bitcast %"class.std::__1::vector.26"* %21 to i8*
  %23 = bitcast i32* %3 to i8*
  %24 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 5, i32 0
  %25 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 4, i32 0, i32 0
  %26 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 4, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  br label %29

28:                                               ; preds = %71, %2
  ret void

29:                                               ; preds = %15, %71
  %30 = phi i64 [ %10, %15 ], [ %74, %71 ]
  %31 = phi i64 [ 0, %15 ], [ %72, %71 ]
  %32 = inttoptr i64 %30 to i8**
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %16) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  store i32 0, i32* %18, align 8
  store i32 0, i32* %19, align 4
  store i32 330, i32* %20, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 56, i1 false) #17
  %33 = getelementptr inbounds i8*, i8** %32, i64 %31
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #17
  store i32 -1431655766, i32* %3, align 4
  br label %35

35:                                               ; preds = %46, %29
  %36 = phi i8* [ %34, %29 ], [ %39, %46 ]
  %37 = phi i8* [ %23, %29 ], [ %47, %46 ]
  %38 = phi i32 [ 0, %29 ], [ %48, %46 ]
  %39 = getelementptr inbounds i8, i8* %36, i64 1
  %40 = load i8, i8* %36, align 1
  %41 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %40, i8* %37, align 1
  %42 = add nsw i32 %38, 1
  %43 = icmp eq i32 %42, 4
  br i1 %43, label %44, label %46

44:                                               ; preds = %35
  %45 = load i32, i32* %3, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %4, i32 %45) #17
  br label %46

46:                                               ; preds = %44, %35
  %47 = phi i8* [ %23, %44 ], [ %41, %35 ]
  %48 = phi i32 [ 0, %44 ], [ %42, %35 ]
  %49 = icmp eq i8 %40, 0
  br i1 %49, label %50, label %35

50:                                               ; preds = %46
  %51 = icmp sgt i32 %48, 0
  br i1 %51, label %52, label %60

52:                                               ; preds = %50
  %53 = icmp slt i32 %48, 4
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = sub nuw nsw i32 3, %48
  %56 = zext i32 %55 to i64
  %57 = add nuw nsw i64 %56, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 %57, i1 false) #17
  br label %58

58:                                               ; preds = %54, %52
  %59 = load i32, i32* %3, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %4, i32 %59) #17
  br label %60

60:                                               ; preds = %50, %58
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #17
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %4, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %61 = load i64*, i64** %24, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = bitcast i64* %61 to i8*
  call void @_ZdlPv(i8* %64) #18
  br label %65

65:                                               ; preds = %63, %60
  %66 = load i32*, i32** %25, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = ptrtoint i32* %66 to i64
  store i64 %69, i64* %27, align 8
  %70 = bitcast i32* %66 to i8*
  call void @_ZdlPv(i8* %70) #18
  br label %71

71:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %16) #17
  %72 = add nuw nsw i64 %31, 1
  %73 = load i64, i64* %7, align 8
  %74 = load i64, i64* %9, align 8
  %75 = sub i64 %73, %74
  %76 = shl i64 %75, 29
  %77 = ashr i64 %76, 32
  %78 = icmp slt i64 %72, %77
  br i1 %78, label %29, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder19remapDynamicSwizzleEv(%"class.spv::Builder"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::vector.26", align 8
  %3 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 6
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %123, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5
  %8 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 22, i32 5, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.26"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %16, label %123

16:                                               ; preds = %6
  %17 = bitcast %"class.std::__1::vector.26"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #17
  %21 = lshr exact i64 %13, 2
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %16
  %25 = bitcast i32** %19 to i64*
  %26 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %27 = bitcast i32** %20 to i64*
  br label %48

28:                                               ; preds = %111, %16
  %29 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %30 = load i64, i64* %9, align 8
  %31 = load i64, i64* %11, align 8
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 2
  %34 = trunc i64 %33 to i32
  %35 = tail call i32 @_ZN3spv7Builder14makeVectorTypeEji(%"class.spv::Builder"* %0, i32 %29, i32 %34)
  %36 = call i32 @_ZN3spv7Builder21makeCompositeConstantEjRKNSt3__16vectorIjNS1_9allocatorIjEEEEb(%"class.spv::Builder"* %0, i32 %35, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %2, i1 zeroext false)
  %37 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %38 = load i32, i32* %3, align 8
  %39 = tail call i32 @_ZN3spv7Builder26createVectorExtractDynamicEjjj(%"class.spv::Builder"* %0, i32 %36, i32 %37, i32 %38)
  store i32 %39, i32* %3, align 8
  %40 = load i64, i64* %11, align 8
  store i64 %40, i64* %9, align 8
  %41 = load i32*, i32** %18, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %28
  %44 = ptrtoint i32* %41 to i64
  %45 = bitcast i32** %19 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast i32* %41 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %28, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  br label %123

48:                                               ; preds = %121, %24
  %49 = phi i64 [ 0, %24 ], [ %112, %121 ]
  %50 = phi i32* [ null, %24 ], [ %122, %121 ]
  %51 = phi i32* [ null, %24 ], [ %113, %121 ]
  %52 = phi i64 [ %12, %24 ], [ %116, %121 ]
  %53 = phi i64 [ 0, %24 ], [ %114, %121 ]
  %54 = inttoptr i64 %52 to i32*
  %55 = getelementptr inbounds i32, i32* %54, i64 %53
  %56 = load i32, i32* %55, align 4
  %57 = tail call i32 @_ZN3spv7Builder15makeIntegerTypeEib(%"class.spv::Builder"* %0, i32 32, i1 zeroext false) #17
  %58 = tail call i32 @_ZN3spv7Builder15makeIntConstantEjjb(%"class.spv::Builder"* %0, i32 %57, i32 %56, i1 zeroext false) #17
  %59 = icmp ult i32* %51, %50
  %60 = ptrtoint i32* %50 to i64
  br i1 %59, label %61, label %64

61:                                               ; preds = %48
  store i32 %58, i32* %51, align 4
  %62 = getelementptr inbounds i32, i32* %51, i64 1
  %63 = ptrtoint i32* %62 to i64
  store i64 %63, i64* %25, align 8
  br label %111

64:                                               ; preds = %48
  %65 = ptrtoint i32* %51 to i64
  %66 = load i64, i64* %26, align 8
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 2
  %69 = add nsw i64 %68, 1
  %70 = icmp ugt i64 %69, 4611686018427387903
  br i1 %70, label %71, label %73

71:                                               ; preds = %64
  %72 = bitcast %"class.std::__1::vector.26"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %72) #20
  unreachable

73:                                               ; preds = %64
  %74 = sub i64 %60, %66
  %75 = ashr exact i64 %74, 2
  %76 = icmp ult i64 %75, 2305843009213693951
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = ashr exact i64 %74, 1
  %79 = icmp ult i64 %78, %69
  %80 = select i1 %79, i64 %69, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = icmp ugt i64 %80, 4611686018427387903
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @abort() #20
  unreachable

85:                                               ; preds = %82, %73
  %86 = phi i64 [ %80, %82 ], [ 4611686018427387903, %73 ]
  %87 = shl i64 %86, 2
  %88 = tail call i8* @_Znwm(i64 %87) #18
  %89 = bitcast i8* %88 to i32*
  br label %90

90:                                               ; preds = %85, %77
  %91 = phi i64 [ %86, %85 ], [ 0, %77 ]
  %92 = phi i32* [ %89, %85 ], [ null, %77 ]
  %93 = getelementptr inbounds i32, i32* %92, i64 %68
  %94 = getelementptr inbounds i32, i32* %92, i64 %91
  %95 = ptrtoint i32* %94 to i64
  store i32 %58, i32* %93, align 4
  %96 = getelementptr inbounds i32, i32* %93, i64 1
  %97 = ptrtoint i32* %96 to i64
  %98 = sub i64 %49, %66
  %99 = ashr exact i64 %98, 2
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds i32, i32* %93, i64 %100
  %102 = ptrtoint i32* %101 to i64
  %103 = icmp sgt i64 %98, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %90
  %105 = bitcast i32* %101 to i8*
  %106 = inttoptr i64 %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 %98, i1 false) #17
  br label %107

107:                                              ; preds = %104, %90
  store i64 %102, i64* %26, align 8
  store i64 %97, i64* %25, align 8
  store i64 %95, i64* %27, align 8
  %108 = icmp eq i64 %66, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %110) #18
  br label %111

111:                                              ; preds = %61, %107, %109
  %112 = phi i64 [ %63, %61 ], [ %97, %107 ], [ %97, %109 ]
  %113 = phi i32* [ %62, %61 ], [ %96, %107 ], [ %96, %109 ]
  %114 = add nuw nsw i64 %53, 1
  %115 = load i64, i64* %9, align 8
  %116 = load i64, i64* %11, align 8
  %117 = sub i64 %115, %116
  %118 = shl i64 %117, 30
  %119 = ashr i64 %118, 32
  %120 = icmp slt i64 %114, %119
  br i1 %120, label %121, label %28

121:                                              ; preds = %111
  %122 = load i32*, i32** %20, align 8
  br label %48

123:                                              ; preds = %1, %47, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3spv7Builder15createLoopMergeEPNS_5BlockES2_jRKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.spv::Builder"* nocapture readonly, %"class.spv::Block"* nocapture readonly, %"class.spv::Block"* nocapture readonly, i32, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = tail call i8* @_Znwm(i64 80) #18
  %8 = bitcast i8* %7 to %"class.spv::Instruction"*
  %9 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 246, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 56, i1 false) #17
  %17 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %19, align 8
  %21 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %22)
  %23 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %2, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %25, align 8
  %27 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  tail call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %28)
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %3)
  %29 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %4, i64 0, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.26"* %4 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = lshr exact i64 %34, 2
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %103, label %38

38:                                               ; preds = %103, %5
  %39 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 17
  %40 = load %"class.spv::Block"*, %"class.spv::Block"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr"* %6 to i8**
  store i8* %7, i8** %43, align 8
  %44 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %40, i64 0, i32 1, i32 0, i32 1
  %45 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %44, align 8
  %46 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %40, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = icmp ult %"class.std::__1::unique_ptr"* %45, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %38
  %50 = ptrtoint i8* %7 to i64
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %42, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 1
  %53 = ptrtoint %"class.std::__1::unique_ptr"* %52 to i64
  %54 = bitcast %"class.std::__1::unique_ptr"** %44 to i64*
  store i64 %53, i64* %54, align 8
  br label %57

55:                                               ; preds = %38
  %56 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %40, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"* %56, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %6) #17
  br label %57

57:                                               ; preds = %55, %49
  %58 = getelementptr inbounds i8, i8* %7, i64 72
  %59 = bitcast i8* %58 to %"class.spv::Block"**
  store %"class.spv::Block"* %40, %"class.spv::Block"** %59, align 8
  %60 = load i32, i32* %11, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %94, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %40, i64 0, i32 5
  %64 = load %"class.spv::Function"*, %"class.spv::Function"** %63, align 8
  %65 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %64, i64 0, i32 1
  %66 = load %"class.spv::Module"*, %"class.spv::Module"** %65, align 8
  %67 = zext i32 %60 to i64
  %68 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %66, i64 0, i32 2
  %69 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %66, i64 0, i32 2, i32 0, i32 1
  %70 = bitcast %"class.spv::Instruction"*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector.55"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = ashr exact i64 %74, 3
  %76 = icmp ugt i64 %75, %67
  %77 = inttoptr i64 %73 to %"class.spv::Instruction"**
  br i1 %76, label %90, label %78

78:                                               ; preds = %62
  %79 = add i32 %60, 16
  %80 = zext i32 %79 to i64
  %81 = icmp ult i64 %75, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = sub nsw i64 %80, %75
  call void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"* %68, i64 %83) #17
  %84 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %68, i64 0, i32 0, i32 0
  %85 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %84, align 8
  br label %90

86:                                               ; preds = %78
  %87 = icmp ugt i64 %75, %80
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %77, i64 %80
  store %"class.spv::Instruction"** %89, %"class.spv::Instruction"*** %69, align 8
  br label %90

90:                                               ; preds = %88, %86, %82, %62
  %91 = phi %"class.spv::Instruction"** [ %77, %88 ], [ %77, %86 ], [ %85, %82 ], [ %77, %62 ]
  %92 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %91, i64 %67
  %93 = bitcast %"class.spv::Instruction"** %92 to i8**
  store i8* %7, i8** %93, align 8
  br label %94

94:                                               ; preds = %90, %57
  %95 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %42, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %42, align 8
  %96 = icmp eq %"class.spv::Instruction"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.spv::Instruction"* %95 to void (%"class.spv::Instruction"*)***
  %99 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %99, i64 1
  %101 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %100, align 8
  call void %101(%"class.spv::Instruction"* nonnull %95) #17
  br label %102

102:                                              ; preds = %94, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  ret void

103:                                              ; preds = %5, %103
  %104 = phi i64 [ %111, %103 ], [ %33, %5 ]
  %105 = phi i64 [ %109, %103 ], [ 0, %5 ]
  %106 = inttoptr i64 %104 to i32*
  %107 = getelementptr inbounds i32, i32* %106, i64 %105
  %108 = load i32, i32* %107, align 4
  tail call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %8, i32 %108)
  %109 = add nuw nsw i64 %105, 1
  %110 = load i64, i64* %30, align 8
  %111 = load i64, i64* %32, align 8
  %112 = sub i64 %110, %111
  %113 = shl i64 %112, 30
  %114 = ashr i64 %113, 32
  %115 = icmp slt i64 %109, %114
  br i1 %115, label %103, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3spv7Builder22dumpSourceInstructionsEjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS1_6vectorIjNS5_IjEEEE(%"class.spv::Builder"* nocapture readonly, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.spv::Instruction", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.spv::Instruction", align 8
  %11 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %173, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.spv::Instruction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  %16 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 3
  store i32 3, i32* %19, align 8
  %20 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4
  %21 = bitcast %"class.std::__1::vector.26"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 56, i1 false) #17
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %12)
  %22 = getelementptr inbounds %"class.spv::Builder", %"class.spv::Builder"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %23)
  %24 = icmp eq i32 %1, 0
  br i1 %24, label %156, label %25

25:                                               ; preds = %14
  call void @_ZN3spv11Instruction12addIdOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %1)
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %155, label %35

35:                                               ; preds = %25
  %36 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #17
  %38 = trunc i64 %33 to i32
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %154

40:                                               ; preds = %35
  %41 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator"*
  %43 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = bitcast %"class.spv::Instruction"* %10 to i8*
  %46 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 0
  %47 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 1
  %48 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 2
  %49 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 3
  %50 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 4
  %51 = bitcast %"class.std::__1::vector.26"* %50 to i8*
  %52 = bitcast i32* %5 to i8*
  %53 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 5, i32 0
  %54 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 4, i32 0, i32 0
  %55 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %10, i64 0, i32 4, i32 0, i32 1
  %56 = bitcast i32** %55 to i64*
  %57 = bitcast i32* %6 to i8*
  br label %58

58:                                               ; preds = %139, %40
  %59 = phi i8 [ 0, %40 ], [ %149, %139 ]
  %60 = phi i64 [ 0, %40 ], [ %140, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 %60, i64 262123, %"class.std::__1::allocator"* dereferenceable(1) %42) #17
  %61 = icmp slt i8 %59, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %63) #18
  br label %64

64:                                               ; preds = %62, %58
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %41, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #17
  %65 = icmp eq i64 %60, 0
  br i1 %65, label %66, label %97

66:                                               ; preds = %64
  %67 = load i8, i8* %44, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i8*, i8** %37, align 8
  %70 = select i1 %68, i8* %69, i8* %36
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #17
  store i32 -1431655766, i32* %6, align 4
  br label %71

71:                                               ; preds = %82, %66
  %72 = phi i8* [ %70, %66 ], [ %75, %82 ]
  %73 = phi i8* [ %57, %66 ], [ %83, %82 ]
  %74 = phi i32 [ 0, %66 ], [ %84, %82 ]
  %75 = getelementptr inbounds i8, i8* %72, i64 1
  %76 = load i8, i8* %72, align 1
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  store i8 %76, i8* %73, align 1
  %78 = add nsw i32 %74, 1
  %79 = icmp eq i32 %78, 4
  br i1 %79, label %80, label %82

80:                                               ; preds = %71
  %81 = load i32, i32* %6, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %81) #17
  br label %82

82:                                               ; preds = %80, %71
  %83 = phi i8* [ %57, %80 ], [ %77, %71 ]
  %84 = phi i32 [ 0, %80 ], [ %78, %71 ]
  %85 = icmp eq i8 %76, 0
  br i1 %85, label %86, label %71

86:                                               ; preds = %82
  %87 = icmp sgt i32 %84, 0
  br i1 %87, label %88, label %96

88:                                               ; preds = %86
  %89 = icmp slt i32 %84, 4
  br i1 %89, label %90, label %94

90:                                               ; preds = %88
  %91 = sub nuw nsw i32 3, %84
  %92 = zext i32 %91 to i64
  %93 = add nuw nsw i64 %92, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %83, i8 0, i64 %93, i1 false) #17
  br label %94

94:                                               ; preds = %90, %88
  %95 = load i32, i32* %6, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %7, i32 %95) #17
  br label %96

96:                                               ; preds = %86, %94
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #17
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %7, %"class.std::__1::vector.26"* dereferenceable(24) %3)
  br label %139

97:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %45) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  store i32 0, i32* %47, align 8
  store i32 0, i32* %48, align 4
  store i32 2, i32* %49, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 56, i1 false) #17
  %98 = load i8, i8* %44, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i8*, i8** %37, align 8
  %101 = select i1 %99, i8* %100, i8* %36
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #17
  store i32 -1431655766, i32* %5, align 4
  br label %102

102:                                              ; preds = %113, %97
  %103 = phi i8* [ %101, %97 ], [ %106, %113 ]
  %104 = phi i8* [ %52, %97 ], [ %114, %113 ]
  %105 = phi i32 [ 0, %97 ], [ %115, %113 ]
  %106 = getelementptr inbounds i8, i8* %103, i64 1
  %107 = load i8, i8* %103, align 1
  %108 = getelementptr inbounds i8, i8* %104, i64 1
  store i8 %107, i8* %104, align 1
  %109 = add nsw i32 %105, 1
  %110 = icmp eq i32 %109, 4
  br i1 %110, label %111, label %113

111:                                              ; preds = %102
  %112 = load i32, i32* %5, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %112) #17
  br label %113

113:                                              ; preds = %111, %102
  %114 = phi i8* [ %52, %111 ], [ %108, %102 ]
  %115 = phi i32 [ 0, %111 ], [ %109, %102 ]
  %116 = icmp eq i8 %107, 0
  br i1 %116, label %117, label %102

117:                                              ; preds = %113
  %118 = icmp sgt i32 %115, 0
  br i1 %118, label %119, label %127

119:                                              ; preds = %117
  %120 = icmp slt i32 %115, 4
  br i1 %120, label %121, label %125

121:                                              ; preds = %119
  %122 = sub nuw nsw i32 3, %115
  %123 = zext i32 %122 to i64
  %124 = add nuw nsw i64 %123, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %114, i8 0, i64 %124, i1 false) #17
  br label %125

125:                                              ; preds = %121, %119
  %126 = load i32, i32* %5, align 4
  call void @_ZN3spv11Instruction19addImmediateOperandEj(%"class.spv::Instruction"* nonnull %10, i32 %126) #17
  br label %127

127:                                              ; preds = %117, %125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #17
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %10, %"class.std::__1::vector.26"* dereferenceable(24) %3)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %128 = load i64*, i64** %53, align 8
  %129 = icmp eq i64* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast i64* %128 to i8*
  call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %130, %127
  %133 = load i32*, i32** %54, align 8
  %134 = icmp eq i32* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = ptrtoint i32* %133 to i64
  store i64 %136, i64* %56, align 8
  %137 = bitcast i32* %133 to i8*
  call void @_ZdlPv(i8* %137) #18
  br label %138

138:                                              ; preds = %132, %135
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %45) #17
  br label %139

139:                                              ; preds = %138, %96
  %140 = add nuw i64 %60, 262123
  %141 = load i8, i8* %27, align 1
  %142 = icmp slt i8 %141, 0
  %143 = load i64, i64* %30, align 8
  %144 = zext i8 %141 to i64
  %145 = select i1 %142, i64 %143, i64 %144
  %146 = trunc i64 %145 to i32
  %147 = trunc i64 %140 to i32
  %148 = icmp slt i32 %147, %146
  %149 = load i8, i8* %44, align 1
  br i1 %148, label %58, label %150

150:                                              ; preds = %139
  %151 = icmp slt i8 %149, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %150
  %153 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %153) #18
  br label %154

154:                                              ; preds = %35, %150, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #17
  br label %157

155:                                              ; preds = %25
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %7, %"class.std::__1::vector.26"* dereferenceable(24) %3)
  br label %157

156:                                              ; preds = %14
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %7, %"class.std::__1::vector.26"* dereferenceable(24) %3)
  br label %157

157:                                              ; preds = %154, %155, %156
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %158 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 5, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = icmp eq i64* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %157
  %162 = bitcast i64* %159 to i8*
  call void @_ZdlPv(i8* %162) #18
  br label %163

163:                                              ; preds = %161, %157
  %164 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = icmp eq i32* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %163
  %168 = ptrtoint i32* %165 to i64
  %169 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %7, i64 0, i32 4, i32 0, i32 1
  %170 = bitcast i32** %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = bitcast i32* %165 to i8*
  call void @_ZdlPv(i8* %171) #18
  br label %172

172:                                              ; preds = %163, %167
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #17
  br label %173

173:                                              ; preds = %4, %172
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv6ModuleD0Ev(%"class.spv::Module"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv6ModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %3, align 8
  %5 = icmp eq %"class.spv::Instruction"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.spv::Instruction"** %4 to i64
  %8 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.spv::Instruction"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.spv::Instruction"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.spv::Function"**, %"class.spv::Function"*** %12, align 8
  %14 = icmp eq %"class.spv::Function"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint %"class.spv::Function"** %13 to i64
  %17 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %"class.spv::Function"*** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast %"class.spv::Function"** %13 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %11, %15
  %21 = bitcast %"class.spv::Module"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv11InstructionD0Ev(%"class.spv::Instruction"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 5, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #18
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i32* %10 to i64
  %14 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %0, i64 0, i32 4, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.spv::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN3spv11InstructionENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.55"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.spv::Instruction"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.spv::Instruction"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.spv::Instruction"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.spv::Instruction"*, %"class.spv::Instruction"** %13, i64 %18
  %20 = bitcast %"class.spv::Instruction"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint %"class.spv::Instruction"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.55"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #20
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #20
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to %"class.spv::Instruction"**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.spv::Instruction"** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %57, i64 %33
  %59 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %57, i64 %56
  %60 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %58, i64 %1
  %61 = bitcast %"class.spv::Instruction"** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #17
  %63 = ptrtoint %"class.spv::Instruction"** %59 to i64
  %64 = ptrtoint %"class.spv::Instruction"** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.spv::Instruction"** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %58, i64 %71
  %73 = ptrtoint %"class.spv::Instruction"** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.spv::Instruction"** %72 to i8*
  %77 = bitcast %"class.spv::Instruction"** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #17
  %78 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.spv::Instruction"** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.spv::Instruction"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.spv::Instruction"** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #0

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.133"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.129"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #17
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #17
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #17, !range !70
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.133"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.133"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.133"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.133"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %17
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.133"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.133"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.133"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.133"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #17
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.133"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.133"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.133"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #10 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.133"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.129"*, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.219"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #17
  %20 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %6, i8* %17, i64 %18) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #17
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %5
  %25 = call i64 @llvm.ctpop.i64(i64 %22) #17, !range !70
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.133"* %39, null
  br i1 %40, label %114, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.133"* %43, null
  br i1 %44, label %114, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  %47 = load i8, i8* %8, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %13, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = load i8*, i8** %11, align 8
  %53 = select i1 %48, i8* %52, i8* %15
  %54 = icmp eq i64 %51, 0
  br label %55

55:                                               ; preds = %45, %98
  %56 = phi %"struct.std::__1::__hash_node_base.133"* [ %43, %45 ], [ %100, %98 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %56, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.133"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, %20
  br i1 %60, label %71, label %61

61:                                               ; preds = %55
  br i1 %26, label %64, label %62

62:                                               ; preds = %61
  %63 = and i64 %59, %46
  br label %68

64:                                               ; preds = %61
  %65 = icmp ult i64 %59, %22
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %59, %22
  br label %68

68:                                               ; preds = %62, %64, %66
  %69 = phi i64 [ %63, %62 ], [ %67, %66 ], [ %59, %64 ]
  %70 = icmp eq i64 %69, %35
  br i1 %70, label %71, label %114

71:                                               ; preds = %55, %68
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %56, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base.133"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %56, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base.133"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %75 to i64
  %81 = select i1 %76, i64 %79, i64 %80
  %82 = icmp eq i64 %81, %51
  br i1 %82, label %83, label %98

83:                                               ; preds = %71
  %84 = bitcast %"struct.std::__1::__hash_node_base.133"* %72 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast %"struct.std::__1::__hash_node_base.133"* %72 to i8*
  %87 = select i1 %76, i8* %85, i8* %86
  br i1 %76, label %94, label %88

88:                                               ; preds = %83
  br i1 %54, label %203, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %85 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %53, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %102, label %98

94:                                               ; preds = %83
  br i1 %54, label %203, label %95

95:                                               ; preds = %94
  %96 = call i32 @bcmp(i8* %87, i8* %53, i64 %51) #17
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %203, label %98

98:                                               ; preds = %109, %89, %71, %95
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %56, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.133"* %100, null
  br i1 %101, label %114, label %55

102:                                              ; preds = %89, %109
  %103 = phi i64 [ %106, %109 ], [ %80, %89 ]
  %104 = phi i8* [ %107, %109 ], [ %86, %89 ]
  %105 = phi i8* [ %110, %109 ], [ %53, %89 ]
  %106 = add i64 %103, -1
  %107 = getelementptr inbounds i8, i8* %104, i64 1
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %203, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %105, i64 1
  %111 = load i8, i8* %107, align 1
  %112 = load i8, i8* %110, align 1
  %113 = icmp eq i8 %111, %112
  br i1 %113, label %102, label %98

114:                                              ; preds = %68, %98, %41, %34, %5
  %115 = phi i64 [ %35, %34 ], [ -6148914691236517206, %5 ], [ %35, %41 ], [ %35, %98 ], [ %35, %68 ]
  %116 = call i8* @_Znwm(i64 48) #18, !noalias !71
  %117 = getelementptr inbounds i8, i8* %116, i64 16
  %118 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %119 = load i8*, i8** %118, align 8, !noalias !71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %119, i64 24, i1 false) #17, !noalias !71
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #17, !noalias !71
  %120 = getelementptr inbounds i8, i8* %116, i64 40
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8, !noalias !71
  %122 = getelementptr inbounds i8, i8* %116, i64 8
  %123 = bitcast i8* %122 to i64*
  store i64 %20, i64* %123, align 8, !noalias !71
  %124 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base.133"**
  store %"struct.std::__1::__hash_node_base.133"* null, %"struct.std::__1::__hash_node_base.133"** %124, align 8, !noalias !71
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 2, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 1
  %128 = uitofp i64 %127 to float
  %129 = uitofp i64 %22 to float
  %130 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 3, i32 0, i32 0
  %131 = load float, float* %130, align 4
  %132 = fmul float %131, %129
  %133 = fcmp olt float %132, %128
  %134 = or i1 %23, %133
  br i1 %134, label %135, label %158

135:                                              ; preds = %114
  %136 = shl i64 %22, 1
  %137 = icmp ult i64 %22, 3
  %138 = call i64 @llvm.ctpop.i64(i64 %22) #17, !range !70
  %139 = icmp ugt i64 %138, 1
  %140 = or i1 %137, %139
  %141 = zext i1 %140 to i64
  %142 = or i64 %136, %141
  %143 = fdiv float %128, %131
  %144 = call float @llvm.ceil.f32(float %143) #17
  %145 = fptoui float %144 to i64
  %146 = icmp ult i64 %142, %145
  %147 = select i1 %146, i64 %145, i64 %142
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.129"* %0, i64 %147)
  %148 = load i64, i64* %21, align 8
  %149 = call i64 @llvm.ctpop.i64(i64 %148) #17, !range !70
  %150 = icmp ugt i64 %149, 1
  br i1 %150, label %154, label %151

151:                                              ; preds = %135
  %152 = add i64 %148, -1
  %153 = and i64 %152, %20
  br label %158

154:                                              ; preds = %135
  %155 = icmp ult i64 %20, %148
  br i1 %155, label %158, label %156

156:                                              ; preds = %154
  %157 = urem i64 %20, %148
  br label %158

158:                                              ; preds = %156, %154, %151, %114
  %159 = phi i64 [ %22, %114 ], [ %148, %151 ], [ %148, %154 ], [ %148, %156 ]
  %160 = phi i64 [ %115, %114 ], [ %153, %151 ], [ %20, %154 ], [ %157, %156 ]
  %161 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %162, i64 %160
  %164 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.133"* %164, null
  br i1 %165, label %166, label %192

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 1, i32 0, i32 0
  %168 = bitcast %"struct.std::__1::__hash_node_base.133"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast i8* %116 to i64*
  store i64 %169, i64* %170, align 8
  %171 = bitcast %"struct.std::__1::__hash_node_base.133"* %167 to i8**
  store i8* %116, i8** %171, align 8
  store %"struct.std::__1::__hash_node_base.133"* %167, %"struct.std::__1::__hash_node_base.133"** %163, align 8
  %172 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %124, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base.133"* %172, null
  br i1 %173, label %199, label %174

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %172, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base.133"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = call i64 @llvm.ctpop.i64(i64 %159) #17, !range !70
  %179 = icmp ugt i64 %178, 1
  br i1 %179, label %183, label %180

180:                                              ; preds = %174
  %181 = add i64 %159, -1
  %182 = and i64 %177, %181
  br label %187

183:                                              ; preds = %174
  %184 = icmp ult i64 %177, %159
  br i1 %184, label %187, label %185

185:                                              ; preds = %183
  %186 = urem i64 %177, %159
  br label %187

187:                                              ; preds = %180, %183, %185
  %188 = phi i64 [ %182, %180 ], [ %186, %185 ], [ %177, %183 ]
  %189 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %161, align 8
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %189, i64 %188
  %191 = bitcast %"struct.std::__1::__hash_node_base.133"** %190 to i8**
  br label %197

192:                                              ; preds = %158
  %193 = bitcast %"struct.std::__1::__hash_node_base.133"* %164 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast i8* %116 to i64*
  store i64 %194, i64* %195, align 8
  %196 = bitcast %"struct.std::__1::__hash_node_base.133"* %164 to i8**
  br label %197

197:                                              ; preds = %187, %192
  %198 = phi i8** [ %196, %192 ], [ %191, %187 ]
  store i8* %116, i8** %198, align 8
  br label %199

199:                                              ; preds = %197, %166
  %200 = bitcast i8* %116 to %"struct.std::__1::__hash_node_base.133"*
  %201 = load i64, i64* %125, align 8
  %202 = add i64 %201, 1
  store i64 %202, i64* %125, align 8
  br label %203

203:                                              ; preds = %88, %94, %95, %102, %199
  %204 = phi i8 [ 1, %199 ], [ 0, %102 ], [ 0, %95 ], [ 0, %94 ], [ 0, %88 ]
  %205 = phi %"struct.std::__1::__hash_node_base.133"* [ %200, %199 ], [ %56, %102 ], [ %56, %95 ], [ %56, %94 ], [ %56, %88 ]
  %206 = insertvalue { %"struct.std::__1::__hash_node_base.133"*, i8 } undef, %"struct.std::__1::__hash_node_base.133"* %205, 0
  %207 = insertvalue { %"struct.std::__1::__hash_node_base.133"*, i8 } %206, i8 %204, 1
  ret { %"struct.std::__1::__hash_node_base.133"*, i8 } %207
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.129"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !70
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.129"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !70
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !70
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.129"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.129"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.129"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.133"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.133"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.135", %"class.std::__1::__bucket_list_deallocator.135"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.133"* null, %"struct.std::__1::__hash_node_base.133"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !74

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.133"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.133"* null, %"struct.std::__1::__hash_node_base.133"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.133"* null, %"struct.std::__1::__hash_node_base.133"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.133"* null, %"struct.std::__1::__hash_node_base.133"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.133"* null, %"struct.std::__1::__hash_node_base.133"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.133"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !70
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.133"* %36, %"struct.std::__1::__hash_node_base.133"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.133"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.133"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.133"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.133"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.133"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.133"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.133"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.133"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.133"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.133"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.133"* %82, %"struct.std::__1::__hash_node_base.133"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.133"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.133"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.133"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.133"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.133"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.133"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #17
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.133"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.133"* [ %80, %100 ], [ %121, %154 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ], [ %121, %141 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.133"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.133"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.133"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.133"* %80, %"struct.std::__1::__hash_node_base.133"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.133"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.133"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.129", %"class.std::__1::__hash_table.129"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.133"** null, %"struct.std::__1::__hash_node_base.133"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.133"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.133"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #18
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.135", %"class.std::__1::__bucket_list_deallocator.135"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.33"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.33", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.33"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #17
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.33"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #20
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #18
  %23 = bitcast %"class.std::__1::vector.33"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !75
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !75
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !75
  %28 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !80
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !83
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !83
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.33"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.33"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.33"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.33"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #17
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.33"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !86
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #17
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !89
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !89
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !89
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #17, !noalias !89
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !89
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !89
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !89
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !92
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !92
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !95
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !95
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !95
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !95
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !95
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !95
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #17
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #1 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #0

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv6Module11addFunctionEPNS_8FunctionE(%"class.spv::Module"*, %"class.spv::Function"*) local_unnamed_addr #1 comdat align 2 {
  %3 = ptrtoint %"class.spv::Function"* %1 to i64
  %4 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.spv::Function"**, %"class.spv::Function"*** %5, align 8
  %7 = getelementptr inbounds %"class.spv::Module", %"class.spv::Module"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.spv::Function"**, %"class.spv::Function"*** %7, align 8
  %9 = icmp eq %"class.spv::Function"** %6, %8
  %10 = ptrtoint %"class.spv::Function"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.spv::Function"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.spv::Function"*, %"class.spv::Function"** %6, i64 1
  %14 = ptrtoint %"class.spv::Function"** %13 to i64
  %15 = bitcast %"class.spv::Function"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.spv::Function"** %6 to i64
  %18 = bitcast %"class.spv::Function"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.24"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.24"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #20
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.spv::Function"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #18
  %44 = bitcast i8* %43 to %"class.spv::Function"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.spv::Function"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.spv::Function"*, %"class.spv::Function"** %47, i64 %22
  %49 = getelementptr inbounds %"class.spv::Function"*, %"class.spv::Function"** %47, i64 %46
  %50 = ptrtoint %"class.spv::Function"** %49 to i64
  %51 = bitcast %"class.spv::Function"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.spv::Function"*, %"class.spv::Function"** %48, i64 1
  %53 = ptrtoint %"class.spv::Function"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.spv::Function"**, %"class.spv::Function"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.spv::Function"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.spv::Function"*, %"class.spv::Function"** %48, i64 %60
  %62 = ptrtoint %"class.spv::Function"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.spv::Function"** %61 to i8*
  %66 = bitcast %"class.spv::Function"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #17
  %67 = load %"class.spv::Function"**, %"class.spv::Function"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.spv::Function"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.spv::Function"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.spv::Function"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #18
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv8FunctionD2Ev(%"class.spv::Function"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = bitcast %"class.spv::Instruction"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.55"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %39, %1
  %14 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = bitcast %"class.spv::Block"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.48"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = lshr exact i64 %20, 3
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %82, label %47

24:                                               ; preds = %1, %39
  %25 = phi i64 [ %40, %39 ], [ %8, %1 ]
  %26 = phi i64 [ %41, %39 ], [ %6, %1 ]
  %27 = phi i64 [ %42, %39 ], [ 0, %1 ]
  %28 = inttoptr i64 %25 to %"class.spv::Instruction"**
  %29 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %28, i64 %27
  %30 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %29, align 8
  %31 = icmp eq %"class.spv::Instruction"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.spv::Instruction"* %30 to void (%"class.spv::Instruction"*)***
  %34 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %34, i64 1
  %36 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %35, align 8
  tail call void %36(%"class.spv::Instruction"* nonnull %30) #17
  %37 = load i64, i64* %5, align 8
  %38 = load i64, i64* %7, align 8
  br label %39

39:                                               ; preds = %24, %32
  %40 = phi i64 [ %25, %24 ], [ %38, %32 ]
  %41 = phi i64 [ %26, %24 ], [ %37, %32 ]
  %42 = add nuw nsw i64 %27, 1
  %43 = sub i64 %41, %40
  %44 = shl i64 %43, 29
  %45 = ashr i64 %44, 32
  %46 = icmp slt i64 %42, %45
  br i1 %46, label %24, label %13

47:                                               ; preds = %97, %13
  %48 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 7, i32 0
  %49 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"class.std::__1::__tree_node.240"**
  %51 = load %"class.std::__1::__tree_node.240"*, %"class.std::__1::__tree_node.240"** %50, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.63"* %48, %"class.std::__1::__tree_node.240"* %51) #17
  %52 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %14, i64 0, i32 0, i32 0
  %53 = load %"class.spv::Block"**, %"class.spv::Block"*** %52, align 8
  %54 = icmp eq %"class.spv::Block"** %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %47
  %56 = ptrtoint %"class.spv::Block"** %53 to i64
  store i64 %56, i64* %16, align 8
  %57 = bitcast %"class.spv::Block"** %53 to i8*
  tail call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %47, %55
  %59 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 0, i32 0
  %60 = load %"class.spv::Instruction"**, %"class.spv::Instruction"*** %59, align 8
  %61 = icmp eq %"class.spv::Instruction"** %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"class.spv::Instruction"** %60 to i64
  store i64 %63, i64* %5, align 8
  %64 = bitcast %"class.spv::Instruction"** %60 to i8*
  tail call void @_ZdlPv(i8* %64) #18
  br label %65

65:                                               ; preds = %58, %62
  %66 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 5, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = bitcast i64* %68 to i8*
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %70, %65
  %73 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 4, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = icmp eq i32* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = ptrtoint i32* %74 to i64
  %78 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2, i32 4, i32 0, i32 1
  %79 = bitcast i32** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = bitcast i32* %74 to i8*
  tail call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %72, %76
  ret void

82:                                               ; preds = %13, %97
  %83 = phi i64 [ %98, %97 ], [ %19, %13 ]
  %84 = phi i64 [ %99, %97 ], [ %17, %13 ]
  %85 = phi i64 [ %100, %97 ], [ 0, %13 ]
  %86 = inttoptr i64 %83 to %"class.spv::Block"**
  %87 = getelementptr inbounds %"class.spv::Block"*, %"class.spv::Block"** %86, i64 %85
  %88 = load %"class.spv::Block"*, %"class.spv::Block"** %87, align 8
  %89 = icmp eq %"class.spv::Block"* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %82
  %91 = bitcast %"class.spv::Block"* %88 to void (%"class.spv::Block"*)***
  %92 = load void (%"class.spv::Block"*)**, void (%"class.spv::Block"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.spv::Block"*)*, void (%"class.spv::Block"*)** %92, i64 1
  %94 = load void (%"class.spv::Block"*)*, void (%"class.spv::Block"*)** %93, align 8
  tail call void %94(%"class.spv::Block"* nonnull %88) #17
  %95 = load i64, i64* %16, align 8
  %96 = load i64, i64* %18, align 8
  br label %97

97:                                               ; preds = %82, %90
  %98 = phi i64 [ %83, %82 ], [ %96, %90 ]
  %99 = phi i64 [ %84, %82 ], [ %95, %90 ]
  %100 = add nuw nsw i64 %85, 1
  %101 = sub i64 %99, %98
  %102 = shl i64 %101, 29
  %103 = ashr i64 %102, 32
  %104 = icmp slt i64 %100, %103
  br i1 %104, label %82, label %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv8FunctionD0Ev(%"class.spv::Function"*) unnamed_addr #1 comdat align 2 {
  tail call void @_ZN3spv8FunctionD2Ev(%"class.spv::Function"* %0) #17
  %2 = bitcast %"class.spv::Function"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.63"*, %"class.std::__1::__tree_node.240"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.240"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.240"* %1 to %"class.std::__1::__tree_node.240"**
  %6 = load %"class.std::__1::__tree_node.240"*, %"class.std::__1::__tree_node.240"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.63"* %0, %"class.std::__1::__tree_node.240"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.240", %"class.std::__1::__tree_node.240"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.240"**
  %9 = load %"class.std::__1::__tree_node.240"*, %"class.std::__1::__tree_node.240"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree.63"* %0, %"class.std::__1::__tree_node.240"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node.240"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv5BlockD2Ev(%"class.spv::Block"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv5BlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  %9 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %15, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %15, align 8
  %17 = icmp eq %"class.spv::Instruction"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.spv::Instruction"* %16 to void (%"class.spv::Instruction"*)***
  %20 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %20, i64 1
  %22 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %21, align 8
  tail call void %22(%"class.spv::Instruction"* nonnull %16) #17
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.38"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.spv::Block"**, %"class.spv::Block"*** %31, align 8
  %33 = icmp eq %"class.spv::Block"** %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"class.spv::Block"** %32 to i64
  %36 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = bitcast %"class.spv::Block"*** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"class.spv::Block"** %32 to i8*
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.spv::Block"**, %"class.spv::Block"*** %40, align 8
  %42 = icmp eq %"class.spv::Block"** %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"class.spv::Block"** %41 to i64
  %45 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.spv::Block"*** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.spv::Block"** %41 to i8*
  tail call void @_ZdlPv(i8* %47) #18
  br label %48

48:                                               ; preds = %39, %43
  %49 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %50, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.std::__1::unique_ptr"* %51 to i8*
  %55 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 1, i32 0, i32 1
  %56 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr"* %56, %51
  br i1 %57, label %74, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"class.std::__1::unique_ptr"* [ %60, %69 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %61, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %61, align 8
  %63 = icmp eq %"class.spv::Instruction"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.spv::Instruction"* %62 to void (%"class.spv::Instruction"*)***
  %66 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %66, i64 1
  %68 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %67, align 8
  tail call void %68(%"class.spv::Instruction"* nonnull %62) #17
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::unique_ptr"* %60, %51
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.38"* %49 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  store %"class.std::__1::unique_ptr"* %51, %"class.std::__1::unique_ptr"** %55, align 8
  tail call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %48, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3spv5BlockD0Ev(%"class.spv::Block"*) unnamed_addr #1 comdat align 2 {
  tail call void @_ZN3spv5BlockD2Ev(%"class.spv::Block"* %0) #17
  %2 = bitcast %"class.spv::Block"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3spv8Function4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Function"*, %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = alloca %"class.spv::Instruction", align 8
  %5 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 2
  tail call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %5, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %6 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.spv::Instruction"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.55"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %54, label %16

16:                                               ; preds = %54, %2
  %17 = getelementptr inbounds %"class.spv::Function", %"class.spv::Function"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.spv::Block"**, %"class.spv::Block"*** %17, align 8
  %19 = load %"class.spv::Block"*, %"class.spv::Block"** %18, align 8
  %20 = ptrtoint %"class.std::__1::vector.26"* %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*)* @_ZNSt3__110__function16__policy_invokerIFvPN3spv5BlockENS2_11ReachReasonES4_EE11__call_implINS0_20__default_alloc_funcIZNKS2_8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKS3_S5_S4_E_S6_EEEEvPKNS0_16__policy_storageES4_S5_S4_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*)** %21, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK3spv8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKNS4_5BlockENS4_11ReachReasonEPSB_E_FvSF_SE_SF_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %22, align 8
  %23 = bitcast %"class.std::__1::function"* %3 to i64*
  store i64 %20, i64* %23, align 8
  call void @_ZN3spv15inReadableOrderEPNS_5BlockENSt3__18functionIFvS1_NS_11ReachReasonES1_EEE(%"class.spv::Block"* %19, %"class.std::__1::function"* nonnull %3) #17
  %24 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %24, i64 0, i32 1
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = icmp eq void (i8*)* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void %26(i8* %30) #17
  br label %31

31:                                               ; preds = %16, %28
  %32 = bitcast %"class.spv::Instruction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  %33 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 1
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 2
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 3
  store i32 56, i32* %36, align 8
  %37 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 4
  %38 = bitcast %"class.std::__1::vector.26"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 56, i1 false) #17
  call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* nonnull %4, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3spv11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %39 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 5, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = icmp eq i64* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  %43 = bitcast i64* %40 to i8*
  call void @_ZdlPv(i8* %43) #18
  br label %44

44:                                               ; preds = %42, %31
  %45 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 4, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = ptrtoint i32* %46 to i64
  %50 = getelementptr inbounds %"class.spv::Instruction", %"class.spv::Instruction"* %4, i64 0, i32 4, i32 0, i32 1
  %51 = bitcast i32** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast i32* %46 to i8*
  call void @_ZdlPv(i8* %52) #18
  br label %53

53:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #17
  ret void

54:                                               ; preds = %2, %54
  %55 = phi i64 [ %62, %54 ], [ %11, %2 ]
  %56 = phi i64 [ %60, %54 ], [ 0, %2 ]
  %57 = inttoptr i64 %55 to %"class.spv::Instruction"**
  %58 = getelementptr inbounds %"class.spv::Instruction"*, %"class.spv::Instruction"** %57, i64 %56
  %59 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %58, align 8
  tail call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %59, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %60 = add nuw nsw i64 %56, 1
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = shl i64 %63, 29
  %65 = ashr i64 %64, 32
  %66 = icmp slt i64 %60, %65
  br i1 %66, label %54, label %16
}

declare void @_ZN3spv15inReadableOrderEPNS_5BlockENSt3__18functionIFvS1_NS_11ReachReasonES1_EEE(%"class.spv::Block"*, %"class.std::__1::function"*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN3spv5BlockENS2_11ReachReasonES4_EE11__call_implINS0_20__default_alloc_funcIZNKS2_8Function4dumpERNS_6vectorIjNS_9allocatorIjEEEEEUlPKS3_S5_S4_E_S6_EEEEvPKNS0_16__policy_storageES4_S5_S4_(%"union.std::__1::__function::__policy_storage"*, %"class.spv::Block"*, i32, %"class.spv::Block"*) #1 comdat align 2 {
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.26"**
  %6 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %5, align 8
  tail call void @_ZNK3spv5Block4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Block"* %1, %"class.std::__1::vector.26"* dereferenceable(24) %6) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3spv5Block4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Block"*, %"class.std::__1::vector.26"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %6, align 8
  tail call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %7, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %8 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.38"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %28, %2
  %19 = getelementptr inbounds %"class.spv::Block", %"class.spv::Block"* %0, i64 0, i32 1, i32 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.38"* %3 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %26, 1
  br i1 %27, label %42, label %41

28:                                               ; preds = %2, %28
  %29 = phi i64 [ %36, %28 ], [ %13, %2 ]
  %30 = phi i64 [ %34, %28 ], [ 0, %2 ]
  %31 = inttoptr i64 %29 to %"class.std::__1::unique_ptr"*
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 %30, i32 0, i32 0, i32 0
  %33 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %32, align 8
  tail call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %33, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %34 = add nuw nsw i64 %30, 1
  %35 = load i64, i64* %10, align 8
  %36 = load i64, i64* %12, align 8
  %37 = sub i64 %35, %36
  %38 = shl i64 %37, 29
  %39 = ashr i64 %38, 32
  %40 = icmp slt i64 %34, %39
  br i1 %40, label %28, label %18

41:                                               ; preds = %42, %18
  ret void

42:                                               ; preds = %18, %42
  %43 = phi i64 [ %50, %42 ], [ %23, %18 ]
  %44 = phi i64 [ %48, %42 ], [ 1, %18 ]
  %45 = inttoptr i64 %43 to %"class.std::__1::unique_ptr"*
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 %44, i32 0, i32 0, i32 0
  %47 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %46, align 8
  tail call void @_ZNK3spv11Instruction4dumpERNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spv::Instruction"* %47, %"class.std::__1::vector.26"* dereferenceable(24) %1)
  %48 = add nuw nsw i64 %44, 1
  %49 = load i64, i64* %20, align 8
  %50 = load i64, i64* %22, align 8
  %51 = sub i64 %49, %50
  %52 = shl i64 %51, 29
  %53 = ashr i64 %52, 32
  %54 = icmp slt i64 %48, %53
  br i1 %54, label %42, label %41
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3spv11InstructionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spv::Instruction"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !96

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spv::Instruction"*, %"class.spv::Instruction"** %142, align 8
  store %"class.spv::Instruction"* null, %"class.spv::Instruction"** %142, align 8
  %144 = icmp eq %"class.spv::Instruction"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spv::Instruction"* %143 to void (%"class.spv::Instruction"*)***
  %147 = load void (%"class.spv::Instruction"*)**, void (%"class.spv::Instruction"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %147, i64 1
  %149 = load void (%"class.spv::Instruction"*)*, void (%"class.spv::Instruction"*)** %148, align 8
  tail call void %149(%"class.spv::Instruction"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.267"* dereferenceable(8), %"class.std::__1::tuple.219"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !70
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #18, !noalias !97
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.267", %"class.std::__1::tuple.267"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !97
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !97
  store i32 %62, i32* %61, align 8, !noalias !97
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #17, !noalias !97
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !97
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !97
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !70
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #17
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #17, !range !70
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #17, !range !70
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !70
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #17
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #17, !range !70
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #17
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #17, !range !70
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #17
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !100

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #17, !range !70
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.26"*, i32*, i32*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.26"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #17
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #17
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #18
  %55 = bitcast %"class.std::__1::vector.26"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.26"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #20
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.26"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #20
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #18
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.26"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #17
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPb(%"class.spvutils::HexFloat"*, i32, i8*) local_unnamed_addr #1 comdat align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !101

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  store i32 8192, i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit, align 4
  %10 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit) #17
  br label %11

11:                                               ; preds = %6, %9, %3
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %19, !prof !101

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit) #17
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  store i32 4096, i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit, align 4
  %18 = tail call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit to i8*))
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit) #17
  br label %19

19:                                               ; preds = %14, %17, %11
  store i8 0, i8* %2, align 1
  %20 = getelementptr inbounds %"class.spvutils::HexFloat", %"class.spvutils::HexFloat"* %0, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 2147483647
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = and i32 %21, 8388607
  br label %69

26:                                               ; preds = %19
  %27 = and i32 %21, 2139095040
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  %30 = and i32 %21, 8388607
  br label %69

31:                                               ; preds = %26
  %32 = and i32 %21, 4194304
  %33 = icmp eq i32 %32, 0
  %34 = and i32 %21, 8388607
  br i1 %33, label %35, label %44

35:                                               ; preds = %31, %35
  %36 = phi i32 [ %38, %35 ], [ %34, %31 ]
  %37 = phi i32 [ %39, %35 ], [ -127, %31 ]
  %38 = shl i32 %36, 1
  %39 = add nsw i32 %37, -1
  %40 = and i32 %36, 2097152
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %35, label %42

42:                                               ; preds = %35
  %43 = icmp ult i32 %39, -126
  br i1 %43, label %44, label %69

44:                                               ; preds = %42, %31
  %45 = phi i32 [ -127, %31 ], [ %39, %42 ]
  %46 = sub i32 2, %45
  %47 = sub i32 -127, %45
  %48 = and i32 %46, 7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %44, %50
  %51 = phi i32 [ %55, %50 ], [ %45, %44 ]
  %52 = phi i32 [ %54, %50 ], [ %34, %44 ]
  %53 = phi i32 [ %56, %50 ], [ %48, %44 ]
  %54 = shl i32 %52, 1
  %55 = add nuw nsw i32 %51, 1
  %56 = add i32 %53, -1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %50, !llvm.loop !102

58:                                               ; preds = %50, %44
  %59 = phi i32 [ undef, %44 ], [ %54, %50 ]
  %60 = phi i32 [ %45, %44 ], [ %55, %50 ]
  %61 = phi i32 [ %34, %44 ], [ %54, %50 ]
  %62 = icmp ult i32 %47, 7
  br i1 %62, label %69, label %63

63:                                               ; preds = %58, %63
  %64 = phi i32 [ %67, %63 ], [ %60, %58 ]
  %65 = phi i32 [ %66, %63 ], [ %61, %58 ]
  %66 = shl i32 %65, 8
  %67 = add nuw nsw i32 %64, 8
  %68 = icmp eq i32 %67, -126
  br i1 %68, label %69, label %63

69:                                               ; preds = %58, %63, %29, %24, %42
  %70 = phi i32 [ %34, %42 ], [ %25, %24 ], [ %30, %29 ], [ %59, %58 ], [ %66, %63 ]
  %71 = and i32 %70, 8388607
  %72 = and i32 %70, 8191
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %99, label %74

74:                                               ; preds = %69
  switch i32 %1, label %99 [
    i32 1, label %79
    i32 2, label %75
    i32 3, label %77
  ]

75:                                               ; preds = %74
  %76 = icmp sgt i32 %21, -1
  br i1 %76, label %91, label %99

77:                                               ; preds = %74
  %78 = icmp slt i32 %21, 0
  br i1 %78, label %91, label %99

79:                                               ; preds = %74
  %80 = load i32, i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE17first_rounded_bit, align 4
  %81 = and i32 %80, %71
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %99, label %83

83:                                               ; preds = %79
  %84 = xor i32 %80, -1
  %85 = and i32 %72, %84
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %83
  %88 = load i32, i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit, align 4
  %89 = and i32 %88, %71
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %87, %75, %77, %83
  %92 = load i32, i32* @_ZZN8spvutils8HexFloatINS_10FloatProxyIfEENS_14HexFloatTraitsIS2_EEE31getRoundedNormalizedSignificandINS0_INS1_INS_7Float16EEENS3_IS8_EEEEEENT_9uint_typeENS_15round_directionEPbE20last_significant_bit, align 4
  %93 = add i32 %92, %71
  store i8 0, i8* %2, align 1
  %94 = and i32 %93, 8388608
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %91
  store i8 1, i8* %2, align 1
  %97 = lshr i32 %93, 1
  %98 = and i32 %97, 2143289343
  br label %99

99:                                               ; preds = %74, %79, %77, %75, %87, %96, %91, %69
  %100 = phi i32 [ %71, %69 ], [ %98, %96 ], [ %93, %91 ], [ %71, %87 ], [ %71, %75 ], [ %71, %77 ], [ %71, %79 ], [ %71, %74 ]
  %101 = lshr i32 %100, 13
  %102 = trunc i32 %101 to i16
  ret i16 %102
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #15

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.280"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.280"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.280"* %1 to %"class.std::__1::__tree_node.280"**
  %6 = load %"class.std::__1::__tree_node.280"*, %"class.std::__1::__tree_node.280"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.280"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.280", %"class.std::__1::__tree_node.280"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.280"**
  %9 = load %"class.std::__1::__tree_node.280"*, %"class.std::__1::__tree_node.280"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.280"* %9) #17
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.280", %"class.std::__1::__tree_node.280"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.280"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.15"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.15"* %0, %"class.std::__1::__tree_node"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.15"* %0, %"class.std::__1::__tree_node"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.155"*, %"class.std::__1::__tree_node.281"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.281"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.281"* %1 to %"class.std::__1::__tree_node.281"**
  %6 = load %"class.std::__1::__tree_node.281"*, %"class.std::__1::__tree_node.281"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.155"* %0, %"class.std::__1::__tree_node.281"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.281", %"class.std::__1::__tree_node.281"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.281"**
  %9 = load %"class.std::__1::__tree_node.281"*, %"class.std::__1::__tree_node.281"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIjSA_NS_4lessIjEELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.155"* %0, %"class.std::__1::__tree_node.281"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node.281"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.282"* dereferenceable(8), %"class.std::__1::tuple.219"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !70
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #18, !noalias !103
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.282", %"class.std::__1::tuple.282"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !103
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !103
  store i32 %62, i32* %61, align 8, !noalias !103
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #17, !noalias !103
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !103
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %66, align 8, !noalias !103
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #17, !range !70
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #17
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #17, !range !70
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base"* %109, %"struct.std::__1::__hash_node_base"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #17, !range !70
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %149
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN3spv8FunctionENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.77"*, %"class.std::__1::unique_ptr.79"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.79"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.77"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.77"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.79"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.79"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.79"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.79"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.79"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.79"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.79"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.79"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.79"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spv::Function"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.79"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.79"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.79"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.79"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !106

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.79"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.79"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.79"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.79"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.79"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.79"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.79"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.79"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.79"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.79"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.79"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.79"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.79"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.79"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.79"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.79"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.79"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.79"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.79"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.79"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.79"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.79"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.79"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.79"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.79"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.79"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.79"*
  %138 = icmp eq %"class.std::__1::unique_ptr.79"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.79"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spv::Function"*, %"class.spv::Function"** %142, align 8
  store %"class.spv::Function"* null, %"class.spv::Function"** %142, align 8
  %144 = icmp eq %"class.spv::Function"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.spv::Function"* %143 to void (%"class.spv::Function"*)***
  %147 = load void (%"class.spv::Function"*)**, void (%"class.spv::Function"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.spv::Function"*)*, void (%"class.spv::Function"*)** %147, i64 1
  %149 = load void (%"class.spv::Function"*)*, void (%"class.spv::Function"*)** %148, align 8
  tail call void %149(%"class.spv::Function"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.79"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN3spv5BlockENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.spv::Block"**, align 8
  %3 = alloca %"class.spv::Block"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.289", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spv::Block"***, %"class.spv::Block"**** %10, align 8
  %12 = bitcast %"class.spv::Block"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %11, i64 1
  store %"class.spv::Block"*** %14, %"class.spv::Block"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spv::Block"***, %"class.spv::Block"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spv::Block"***, %"class.spv::Block"**** %17, align 8
  %19 = icmp eq %"class.spv::Block"*** %16, %18
  %20 = ptrtoint %"class.spv::Block"*** %18 to i64
  %21 = bitcast %"class.spv::Block"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spv::Block"***, %"class.spv::Block"**** %23, align 8
  %25 = icmp ugt %"class.spv::Block"*** %14, %24
  %26 = ptrtoint %"class.spv::Block"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spv::Block"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %14, i64 %32
  %34 = ptrtoint %"class.spv::Block"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spv::Block"*** %33 to i8*
  %40 = bitcast %"class.spv::Block"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #17
  %41 = load %"class.spv::Block"***, %"class.spv::Block"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spv::Block"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %33, i64 %36
  store %"class.spv::Block"*** %44, %"class.spv::Block"**** %15, align 8
  %45 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %43, i64 %32
  store %"class.spv::Block"*** %45, %"class.spv::Block"**** %10, align 8
  %46 = bitcast %"class.spv::Block"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spv::Block"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #20
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #18
  %60 = bitcast i8* %59 to %"class.spv::Block"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %60, i64 %57
  %63 = ptrtoint %"class.spv::Block"*** %62 to i64
  %64 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %60, i64 %53
  %65 = ptrtoint %"class.spv::Block"*** %64 to i64
  %66 = ptrtoint %"class.spv::Block"*** %14 to i64
  %67 = ptrtoint %"class.spv::Block"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spv::Block"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spv::Block"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spv::Block"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %79, i64 1
  %87 = ptrtoint %"class.spv::Block"*** %86 to i64
  %88 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !107

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spv::Block"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spv::Block"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spv::Block"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spv::Block"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spv::Block"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spv::Block"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 1
  %107 = bitcast %"class.spv::Block"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spv::Block"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 2
  %112 = bitcast %"class.spv::Block"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spv::Block"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 3
  %117 = bitcast %"class.spv::Block"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spv::Block"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 4
  %122 = bitcast %"class.spv::Block"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spv::Block"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 5
  %127 = bitcast %"class.spv::Block"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spv::Block"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 6
  %132 = bitcast %"class.spv::Block"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spv::Block"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 7
  %137 = bitcast %"class.spv::Block"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spv::Block"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %99, i64 8
  %141 = ptrtoint %"class.spv::Block"*** %140 to i64
  %142 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %101, i64 8
  %143 = icmp eq %"class.spv::Block"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spv::Block"*** %70 to i64
  %146 = load %"class.spv::Block"***, %"class.spv::Block"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spv::Block"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spv::Block"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spv::Block"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spv::Block"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spv::Block"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  %156 = bitcast %"class.spv::Block"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spv::Block"***, %"class.spv::Block"**** %15, align 8
  %161 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %160, i64 1
  store %"class.spv::Block"*** %161, %"class.spv::Block"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spv::Block"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spv::Block"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spv::Block"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spv::Block"***
  %181 = inttoptr i64 %169 to %"class.spv::Block"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spv::Block"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #17
  %186 = tail call i8* @_Znwm(i64 4096) #18
  %187 = bitcast %"class.spv::Block"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN3spv5BlockENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %163, %"class.spv::Block"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #17
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spv::Block"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #17
  %190 = tail call i8* @_Znwm(i64 4096) #18
  %191 = bitcast %"class.spv::Block"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN3spv5BlockENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %163, %"class.spv::Block"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #17
  %192 = load %"class.spv::Block"***, %"class.spv::Block"**** %167, align 8
  %193 = bitcast %"class.spv::Block"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %192, i64 1
  store %"class.spv::Block"*** %195, %"class.spv::Block"**** %167, align 8
  %196 = load %"class.spv::Block"***, %"class.spv::Block"**** %164, align 8
  %197 = load %"class.spv::Block"***, %"class.spv::Block"**** %172, align 8
  %198 = icmp eq %"class.spv::Block"*** %196, %197
  %199 = ptrtoint %"class.spv::Block"*** %197 to i64
  %200 = bitcast %"class.spv::Block"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spv::Block"***, %"class.spv::Block"**** %202, align 8
  %204 = icmp ugt %"class.spv::Block"*** %195, %203
  %205 = ptrtoint %"class.spv::Block"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spv::Block"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %195, i64 %211
  %213 = ptrtoint %"class.spv::Block"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spv::Block"*** %212 to i8*
  %219 = bitcast %"class.spv::Block"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #17
  %220 = load %"class.spv::Block"***, %"class.spv::Block"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spv::Block"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %212, i64 %215
  store %"class.spv::Block"*** %223, %"class.spv::Block"**** %164, align 8
  %224 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %222, i64 %211
  store %"class.spv::Block"*** %224, %"class.spv::Block"**** %167, align 8
  %225 = bitcast %"class.spv::Block"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #20
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #18
  %237 = bitcast i8* %236 to %"class.spv::Block"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %237, i64 %234
  %240 = ptrtoint %"class.spv::Block"*** %239 to i64
  %241 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %237, i64 %230
  %242 = ptrtoint %"class.spv::Block"*** %241 to i64
  %243 = ptrtoint %"class.spv::Block"*** %195 to i64
  %244 = ptrtoint %"class.spv::Block"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spv::Block"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spv::Block"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spv::Block"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %256, i64 1
  %264 = ptrtoint %"class.spv::Block"*** %263 to i64
  %265 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !108

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spv::Block"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spv::Block"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spv::Block"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spv::Block"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spv::Block"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spv::Block"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 1
  %284 = bitcast %"class.spv::Block"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spv::Block"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 2
  %289 = bitcast %"class.spv::Block"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spv::Block"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 3
  %294 = bitcast %"class.spv::Block"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spv::Block"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 4
  %299 = bitcast %"class.spv::Block"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spv::Block"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 5
  %304 = bitcast %"class.spv::Block"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spv::Block"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 6
  %309 = bitcast %"class.spv::Block"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spv::Block"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 7
  %314 = bitcast %"class.spv::Block"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spv::Block"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %276, i64 8
  %318 = ptrtoint %"class.spv::Block"*** %317 to i64
  %319 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %278, i64 8
  %320 = icmp eq %"class.spv::Block"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spv::Block"*** %247 to i64
  %323 = load %"class.spv::Block"***, %"class.spv::Block"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spv::Block"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spv::Block"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spv::Block"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #18
  %331 = bitcast %"class.spv::Block"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spv::Block"***, %"class.spv::Block"**** %164, align 8
  %336 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %335, i64 1
  store %"class.spv::Block"*** %336, %"class.spv::Block"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.289"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #17
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.289"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spv::Block"*** null, %"class.spv::Block"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.112"** %342 to %"class.std::__1::__compressed_pair.109"**
  store %"class.std::__1::__compressed_pair.109"* %346, %"class.std::__1::__compressed_pair.109"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #20
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #18
  %354 = bitcast i8* %353 to %"class.spv::Block"***
  %355 = bitcast %"struct.std::__1::__split_buffer.289"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %354, i64 %171
  store %"class.spv::Block"*** %356, %"class.spv::Block"**** %340, align 8
  store %"class.spv::Block"*** %356, %"class.spv::Block"**** %339, align 8
  %357 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %354, i64 %345
  store %"class.spv::Block"*** %357, %"class.spv::Block"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #18
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spv::Block"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spv::Block"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spv::Block"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %356, i64 %370
  store %"class.spv::Block"*** %371, %"class.spv::Block"**** %340, align 8
  store %"class.spv::Block"*** %371, %"class.spv::Block"**** %339, align 8
  %372 = ptrtoint %"class.spv::Block"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #20
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.289"* %4 to i64*
  %382 = bitcast %"class.spv::Block"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #18
  %386 = bitcast i8* %385 to %"class.spv::Block"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %386, i64 %383
  %389 = ptrtoint %"class.spv::Block"*** %388 to i64
  %390 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %386, i64 %377
  %391 = ptrtoint %"class.spv::Block"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spv::Block"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spv::Block"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #18
  %394 = load %"class.spv::Block"***, %"class.spv::Block"**** %164, align 8
  %395 = load %"class.spv::Block"***, %"class.spv::Block"**** %167, align 8
  %396 = ptrtoint %"class.spv::Block"*** %395 to i64
  %397 = ptrtoint %"class.spv::Block"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spv::Block"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spv::Block"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spv::Block"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spv::Block"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %406, i64 1
  store %"class.spv::Block"*** %408, %"class.spv::Block"**** %340, align 8
  %409 = icmp eq %"class.spv::Block"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spv::Block"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.289"* %4 to i64*
  %413 = bitcast %"class.spv::Block"**** %339 to i64*
  %414 = bitcast %"class.spv::Block"**** %340 to i64*
  %415 = bitcast %"class.spv::Block"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spv::Block"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.289"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spv::Block"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spv::Block"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spv::Block"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spv::Block"***
  %441 = inttoptr i64 %434 to %"class.spv::Block"***
  %442 = icmp eq %"class.spv::Block"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spv::Block"**, %"class.spv::Block"*** %441, i64 -1
  %445 = ptrtoint %"class.spv::Block"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spv::Block"**, %"class.spv::Block"*** %441, i64 %448
  store %"class.spv::Block"*** %449, %"class.spv::Block"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #18
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #17
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spv::Block"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN3spv5BlockERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.289"* nonnull %4, %"class.spv::Block"*** dereferenceable(8) %457)
  %458 = load %"class.spv::Block"***, %"class.spv::Block"**** %167, align 8
  %459 = icmp eq %"class.spv::Block"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN3spv5BlockENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"class.spv::Block"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spv::Block"***, %"class.spv::Block"**** %5, align 8
  %7 = icmp eq %"class.spv::Block"*** %4, %6
  %8 = ptrtoint %"class.spv::Block"*** %6 to i64
  %9 = bitcast %"class.spv::Block"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.spv::Block"***, %"class.spv::Block"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.spv::Block"***, %"class.spv::Block"**** %13, align 8
  %15 = icmp ugt %"class.spv::Block"*** %12, %14
  %16 = ptrtoint %"class.spv::Block"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spv::Block"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %12, i64 %22
  %24 = ptrtoint %"class.spv::Block"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spv::Block"*** %23 to i8*
  %30 = bitcast %"class.spv::Block"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #17
  %31 = load %"class.spv::Block"***, %"class.spv::Block"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spv::Block"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %23, i64 %26
  store %"class.spv::Block"*** %34, %"class.spv::Block"**** %3, align 8
  %35 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %33, i64 %22
  store %"class.spv::Block"*** %35, %"class.spv::Block"**** %11, align 8
  %36 = bitcast %"class.spv::Block"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spv::Block"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #18
  %50 = bitcast i8* %49 to %"class.spv::Block"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %50, i64 %47
  %53 = ptrtoint %"class.spv::Block"*** %52 to i64
  %54 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %50, i64 %43
  %55 = ptrtoint %"class.spv::Block"*** %54 to i64
  %56 = ptrtoint %"class.spv::Block"*** %12 to i64
  %57 = ptrtoint %"class.spv::Block"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spv::Block"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spv::Block"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spv::Block"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %69, i64 1
  %77 = ptrtoint %"class.spv::Block"*** %76 to i64
  %78 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !109

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spv::Block"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spv::Block"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spv::Block"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spv::Block"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spv::Block"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spv::Block"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 1
  %97 = bitcast %"class.spv::Block"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spv::Block"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 2
  %102 = bitcast %"class.spv::Block"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spv::Block"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 3
  %107 = bitcast %"class.spv::Block"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spv::Block"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 4
  %112 = bitcast %"class.spv::Block"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spv::Block"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 5
  %117 = bitcast %"class.spv::Block"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spv::Block"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 6
  %122 = bitcast %"class.spv::Block"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spv::Block"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 7
  %127 = bitcast %"class.spv::Block"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spv::Block"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %89, i64 8
  %131 = ptrtoint %"class.spv::Block"*** %130 to i64
  %132 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %91, i64 8
  %133 = icmp eq %"class.spv::Block"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spv::Block"*** %60 to i64
  %136 = load %"class.spv::Block"***, %"class.spv::Block"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spv::Block"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spv::Block"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spv::Block"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spv::Block"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spv::Block"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = bitcast %"class.spv::Block"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spv::Block"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  %153 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %152, i64 1
  store %"class.spv::Block"*** %153, %"class.spv::Block"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN3spv5BlockENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"class.spv::Block"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.spv::Block"***, %"class.spv::Block"**** %5, align 8
  %7 = icmp eq %"class.spv::Block"*** %4, %6
  %8 = ptrtoint %"class.spv::Block"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.spv::Block"***, %"class.spv::Block"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spv::Block"***, %"class.spv::Block"**** %12, align 8
  %14 = icmp ult %"class.spv::Block"*** %11, %13
  %15 = bitcast %"class.spv::Block"**** %12 to i64*
  %16 = ptrtoint %"class.spv::Block"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spv::Block"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %11, i64 %22
  %24 = ptrtoint %"class.spv::Block"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %23, i64 %29
  %31 = bitcast %"class.spv::Block"*** %30 to i8*
  %32 = bitcast %"class.spv::Block"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #17
  %33 = load %"class.spv::Block"***, %"class.spv::Block"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spv::Block"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spv::Block"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spv::Block"*** %36, %"class.spv::Block"**** %3, align 8
  %37 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %35, i64 %22
  store %"class.spv::Block"*** %37, %"class.spv::Block"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"class.spv::Block"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %51, i64 %48
  %54 = ptrtoint %"class.spv::Block"*** %53 to i64
  %55 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %51, i64 %43
  %56 = ptrtoint %"class.spv::Block"*** %55 to i64
  %57 = ptrtoint %"class.spv::Block"*** %4 to i64
  %58 = ptrtoint %"class.spv::Block"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spv::Block"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spv::Block"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spv::Block"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %70, i64 1
  %78 = ptrtoint %"class.spv::Block"*** %77 to i64
  %79 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !110

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spv::Block"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spv::Block"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spv::Block"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spv::Block"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spv::Block"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spv::Block"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 1
  %98 = bitcast %"class.spv::Block"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spv::Block"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 2
  %103 = bitcast %"class.spv::Block"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spv::Block"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 3
  %108 = bitcast %"class.spv::Block"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spv::Block"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 4
  %113 = bitcast %"class.spv::Block"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spv::Block"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 5
  %118 = bitcast %"class.spv::Block"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spv::Block"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 6
  %123 = bitcast %"class.spv::Block"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spv::Block"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 7
  %128 = bitcast %"class.spv::Block"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spv::Block"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 8
  %132 = ptrtoint %"class.spv::Block"*** %131 to i64
  %133 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 8
  %134 = icmp eq %"class.spv::Block"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spv::Block"*** %61 to i64
  %137 = load %"class.spv::Block"***, %"class.spv::Block"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spv::Block"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spv::Block"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spv::Block"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spv::Block"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spv::Block"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spv::Block"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %148, i64 -1
  %150 = bitcast %"class.spv::Block"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spv::Block"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  %154 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %153, i64 -1
  store %"class.spv::Block"*** %154, %"class.spv::Block"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN3spv5BlockERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.289"*, %"class.spv::Block"*** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %0, i64 0, i32 1
  %4 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %0, i64 0, i32 0
  %6 = load %"class.spv::Block"***, %"class.spv::Block"**** %5, align 8
  %7 = icmp eq %"class.spv::Block"*** %4, %6
  %8 = ptrtoint %"class.spv::Block"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %0, i64 0, i32 2
  %11 = load %"class.spv::Block"***, %"class.spv::Block"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.289", %"struct.std::__1::__split_buffer.289"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spv::Block"***, %"class.spv::Block"**** %12, align 8
  %14 = icmp ult %"class.spv::Block"*** %11, %13
  %15 = bitcast %"class.spv::Block"**** %12 to i64*
  %16 = ptrtoint %"class.spv::Block"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spv::Block"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %11, i64 %22
  %24 = ptrtoint %"class.spv::Block"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %23, i64 %29
  %31 = bitcast %"class.spv::Block"*** %30 to i8*
  %32 = bitcast %"class.spv::Block"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #17
  %33 = load %"class.spv::Block"***, %"class.spv::Block"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spv::Block"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spv::Block"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spv::Block"*** %36, %"class.spv::Block"**** %3, align 8
  %37 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %35, i64 %22
  store %"class.spv::Block"*** %37, %"class.spv::Block"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.289"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"class.spv::Block"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %51, i64 %48
  %54 = ptrtoint %"class.spv::Block"*** %53 to i64
  %55 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %51, i64 %43
  %56 = ptrtoint %"class.spv::Block"*** %55 to i64
  %57 = ptrtoint %"class.spv::Block"*** %4 to i64
  %58 = ptrtoint %"class.spv::Block"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spv::Block"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spv::Block"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spv::Block"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %70, i64 1
  %78 = ptrtoint %"class.spv::Block"*** %77 to i64
  %79 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !111

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spv::Block"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spv::Block"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spv::Block"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spv::Block"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spv::Block"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spv::Block"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 1
  %98 = bitcast %"class.spv::Block"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spv::Block"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 2
  %103 = bitcast %"class.spv::Block"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spv::Block"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 3
  %108 = bitcast %"class.spv::Block"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spv::Block"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 4
  %113 = bitcast %"class.spv::Block"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spv::Block"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 5
  %118 = bitcast %"class.spv::Block"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spv::Block"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 6
  %123 = bitcast %"class.spv::Block"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spv::Block"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 7
  %128 = bitcast %"class.spv::Block"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spv::Block"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %90, i64 8
  %132 = ptrtoint %"class.spv::Block"*** %131 to i64
  %133 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %92, i64 8
  %134 = icmp eq %"class.spv::Block"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spv::Block"*** %61 to i64
  %137 = load %"class.spv::Block"***, %"class.spv::Block"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spv::Block"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spv::Block"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spv::Block"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spv::Block"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spv::Block"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spv::Block"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %148, i64 -1
  %150 = bitcast %"class.spv::Block"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spv::Block"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spv::Block"***, %"class.spv::Block"**** %3, align 8
  %154 = getelementptr inbounds %"class.spv::Block"**, %"class.spv::Block"*** %153, i64 -1
  store %"class.spv::Block"*** %154, %"class.spv::Block"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN3spv7Builder10LoopBlocksENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.116"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.spv::Builder::LoopBlocks"*, align 8
  %3 = alloca %"struct.spv::Builder::LoopBlocks"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.295", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 127
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -128
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  %12 = bitcast %"struct.spv::Builder::LoopBlocks"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %11, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %14, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %17, align 8
  %19 = icmp eq %"struct.spv::Builder::LoopBlocks"** %16, %18
  %20 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %18 to i64
  %21 = bitcast %"struct.spv::Builder::LoopBlocks"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %23, align 8
  %25 = icmp ugt %"struct.spv::Builder::LoopBlocks"** %14, %24
  %26 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %14, i64 %32
  %34 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.spv::Builder::LoopBlocks"** %33 to i8*
  %40 = bitcast %"struct.spv::Builder::LoopBlocks"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #17
  %41 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.spv::Builder::LoopBlocks"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %33, i64 %36
  store %"struct.spv::Builder::LoopBlocks"** %44, %"struct.spv::Builder::LoopBlocks"*** %15, align 8
  %45 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %43, i64 %32
  store %"struct.spv::Builder::LoopBlocks"** %45, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  %46 = bitcast %"struct.spv::Builder::LoopBlocks"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.spv::Builder::LoopBlocks"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.116"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #20
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #18
  %60 = bitcast i8* %59 to %"struct.spv::Builder::LoopBlocks"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %60, i64 %57
  %63 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %62 to i64
  %64 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %60, i64 %53
  %65 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %64 to i64
  %66 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %14 to i64
  %67 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.spv::Builder::LoopBlocks"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.spv::Builder::LoopBlocks"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.spv::Builder::LoopBlocks"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %79, i64 1
  %87 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %86 to i64
  %88 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !112

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.spv::Builder::LoopBlocks"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.spv::Builder::LoopBlocks"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.spv::Builder::LoopBlocks"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.spv::Builder::LoopBlocks"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.spv::Builder::LoopBlocks"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 1
  %106 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 1
  %107 = bitcast %"struct.spv::Builder::LoopBlocks"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.spv::Builder::LoopBlocks"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 2
  %111 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 2
  %112 = bitcast %"struct.spv::Builder::LoopBlocks"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.spv::Builder::LoopBlocks"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 3
  %116 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 3
  %117 = bitcast %"struct.spv::Builder::LoopBlocks"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.spv::Builder::LoopBlocks"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 4
  %121 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 4
  %122 = bitcast %"struct.spv::Builder::LoopBlocks"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.spv::Builder::LoopBlocks"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 5
  %126 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 5
  %127 = bitcast %"struct.spv::Builder::LoopBlocks"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.spv::Builder::LoopBlocks"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 6
  %131 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 6
  %132 = bitcast %"struct.spv::Builder::LoopBlocks"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.spv::Builder::LoopBlocks"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 7
  %136 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 7
  %137 = bitcast %"struct.spv::Builder::LoopBlocks"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.spv::Builder::LoopBlocks"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %99, i64 8
  %141 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %140 to i64
  %142 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %101, i64 8
  %143 = icmp eq %"struct.spv::Builder::LoopBlocks"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %70 to i64
  %146 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.spv::Builder::LoopBlocks"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.spv::Builder::LoopBlocks"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.spv::Builder::LoopBlocks"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.spv::Builder::LoopBlocks"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.spv::Builder::LoopBlocks"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  %156 = bitcast %"struct.spv::Builder::LoopBlocks"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %15, align 8
  %161 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %160, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %161, %"struct.spv::Builder::LoopBlocks"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.spv::Builder::LoopBlocks"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.spv::Builder::LoopBlocks"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.spv::Builder::LoopBlocks"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.116"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.spv::Builder::LoopBlocks"**
  %181 = inttoptr i64 %169 to %"struct.spv::Builder::LoopBlocks"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.spv::Builder::LoopBlocks"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #17
  %186 = tail call i8* @_Znwm(i64 4096) #18
  %187 = bitcast %"struct.spv::Builder::LoopBlocks"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.118"* %163, %"struct.spv::Builder::LoopBlocks"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #17
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.spv::Builder::LoopBlocks"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #17
  %190 = tail call i8* @_Znwm(i64 4096) #18
  %191 = bitcast %"struct.spv::Builder::LoopBlocks"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.118"* %163, %"struct.spv::Builder::LoopBlocks"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #17
  %192 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %167, align 8
  %193 = bitcast %"struct.spv::Builder::LoopBlocks"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %192, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %195, %"struct.spv::Builder::LoopBlocks"*** %167, align 8
  %196 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %164, align 8
  %197 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %172, align 8
  %198 = icmp eq %"struct.spv::Builder::LoopBlocks"** %196, %197
  %199 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %197 to i64
  %200 = bitcast %"struct.spv::Builder::LoopBlocks"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %202, align 8
  %204 = icmp ugt %"struct.spv::Builder::LoopBlocks"** %195, %203
  %205 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %195, i64 %211
  %213 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.spv::Builder::LoopBlocks"** %212 to i8*
  %219 = bitcast %"struct.spv::Builder::LoopBlocks"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #17
  %220 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.spv::Builder::LoopBlocks"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %212, i64 %215
  store %"struct.spv::Builder::LoopBlocks"** %223, %"struct.spv::Builder::LoopBlocks"*** %164, align 8
  %224 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %222, i64 %211
  store %"struct.spv::Builder::LoopBlocks"** %224, %"struct.spv::Builder::LoopBlocks"*** %167, align 8
  %225 = bitcast %"struct.spv::Builder::LoopBlocks"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #20
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #18
  %237 = bitcast i8* %236 to %"struct.spv::Builder::LoopBlocks"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %237, i64 %234
  %240 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %239 to i64
  %241 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %237, i64 %230
  %242 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %241 to i64
  %243 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %195 to i64
  %244 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.spv::Builder::LoopBlocks"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.spv::Builder::LoopBlocks"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.spv::Builder::LoopBlocks"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %256, i64 1
  %264 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %263 to i64
  %265 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !113

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.spv::Builder::LoopBlocks"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.spv::Builder::LoopBlocks"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.spv::Builder::LoopBlocks"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.spv::Builder::LoopBlocks"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.spv::Builder::LoopBlocks"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 1
  %283 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 1
  %284 = bitcast %"struct.spv::Builder::LoopBlocks"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.spv::Builder::LoopBlocks"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 2
  %288 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 2
  %289 = bitcast %"struct.spv::Builder::LoopBlocks"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.spv::Builder::LoopBlocks"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 3
  %293 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 3
  %294 = bitcast %"struct.spv::Builder::LoopBlocks"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.spv::Builder::LoopBlocks"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 4
  %298 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 4
  %299 = bitcast %"struct.spv::Builder::LoopBlocks"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.spv::Builder::LoopBlocks"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 5
  %303 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 5
  %304 = bitcast %"struct.spv::Builder::LoopBlocks"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.spv::Builder::LoopBlocks"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 6
  %308 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 6
  %309 = bitcast %"struct.spv::Builder::LoopBlocks"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.spv::Builder::LoopBlocks"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 7
  %313 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 7
  %314 = bitcast %"struct.spv::Builder::LoopBlocks"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.spv::Builder::LoopBlocks"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %276, i64 8
  %318 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %317 to i64
  %319 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %278, i64 8
  %320 = icmp eq %"struct.spv::Builder::LoopBlocks"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %247 to i64
  %323 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.spv::Builder::LoopBlocks"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.spv::Builder::LoopBlocks"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.spv::Builder::LoopBlocks"** %325 to i8*
  call void @_ZdlPv(i8* %330) #18
  %331 = bitcast %"struct.spv::Builder::LoopBlocks"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %164, align 8
  %336 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %335, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %336, %"struct.spv::Builder::LoopBlocks"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.295"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #17
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.116", %"class.std::__1::deque.116"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.295"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.spv::Builder::LoopBlocks"** null, %"struct.spv::Builder::LoopBlocks"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.122"** %342 to %"class.std::__1::__compressed_pair.119"**
  store %"class.std::__1::__compressed_pair.119"* %346, %"class.std::__1::__compressed_pair.119"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #20
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #18
  %354 = bitcast i8* %353 to %"struct.spv::Builder::LoopBlocks"**
  %355 = bitcast %"struct.std::__1::__split_buffer.295"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %354, i64 %171
  store %"struct.spv::Builder::LoopBlocks"** %356, %"struct.spv::Builder::LoopBlocks"*** %340, align 8
  store %"struct.spv::Builder::LoopBlocks"** %356, %"struct.spv::Builder::LoopBlocks"*** %339, align 8
  %357 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %354, i64 %345
  store %"struct.spv::Builder::LoopBlocks"** %357, %"struct.spv::Builder::LoopBlocks"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #18
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.spv::Builder::LoopBlocks"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %356, i64 %370
  store %"struct.spv::Builder::LoopBlocks"** %371, %"struct.spv::Builder::LoopBlocks"*** %340, align 8
  store %"struct.spv::Builder::LoopBlocks"** %371, %"struct.spv::Builder::LoopBlocks"*** %339, align 8
  %372 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #20
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.295"* %4 to i64*
  %382 = bitcast %"struct.spv::Builder::LoopBlocks"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #18
  %386 = bitcast i8* %385 to %"struct.spv::Builder::LoopBlocks"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %386, i64 %383
  %389 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %388 to i64
  %390 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %386, i64 %377
  %391 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.spv::Builder::LoopBlocks"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.spv::Builder::LoopBlocks"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #18
  %394 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %164, align 8
  %395 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %167, align 8
  %396 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %395 to i64
  %397 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.spv::Builder::LoopBlocks"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.spv::Builder::LoopBlocks"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.spv::Builder::LoopBlocks"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.spv::Builder::LoopBlocks"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %406, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %408, %"struct.spv::Builder::LoopBlocks"*** %340, align 8
  %409 = icmp eq %"struct.spv::Builder::LoopBlocks"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.295"* %4 to i64*
  %413 = bitcast %"struct.spv::Builder::LoopBlocks"*** %339 to i64*
  %414 = bitcast %"struct.spv::Builder::LoopBlocks"*** %340 to i64*
  %415 = bitcast %"struct.spv::Builder::LoopBlocks"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.295"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.spv::Builder::LoopBlocks"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.spv::Builder::LoopBlocks"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.spv::Builder::LoopBlocks"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.spv::Builder::LoopBlocks"**
  %441 = inttoptr i64 %434 to %"struct.spv::Builder::LoopBlocks"**
  %442 = icmp eq %"struct.spv::Builder::LoopBlocks"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %441, i64 -1
  %445 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %441, i64 %448
  store %"struct.spv::Builder::LoopBlocks"** %449, %"struct.spv::Builder::LoopBlocks"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #18
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #17
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.spv::Builder::LoopBlocks"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.295"* nonnull %4, %"struct.spv::Builder::LoopBlocks"** dereferenceable(8) %457)
  %458 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %167, align 8
  %459 = icmp eq %"struct.spv::Builder::LoopBlocks"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.118"*, %"struct.spv::Builder::LoopBlocks"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 2
  %4 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %5, align 8
  %7 = icmp eq %"struct.spv::Builder::LoopBlocks"** %4, %6
  %8 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %6 to i64
  %9 = bitcast %"struct.spv::Builder::LoopBlocks"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 1
  %12 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 0
  %14 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %13, align 8
  %15 = icmp ugt %"struct.spv::Builder::LoopBlocks"** %12, %14
  %16 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %12, i64 %22
  %24 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.spv::Builder::LoopBlocks"** %23 to i8*
  %30 = bitcast %"struct.spv::Builder::LoopBlocks"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #17
  %31 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.spv::Builder::LoopBlocks"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %23, i64 %26
  store %"struct.spv::Builder::LoopBlocks"** %34, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %35 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %33, i64 %22
  store %"struct.spv::Builder::LoopBlocks"** %35, %"struct.spv::Builder::LoopBlocks"*** %11, align 8
  %36 = bitcast %"struct.spv::Builder::LoopBlocks"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.spv::Builder::LoopBlocks"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.118"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #18
  %50 = bitcast i8* %49 to %"struct.spv::Builder::LoopBlocks"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %50, i64 %47
  %53 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %52 to i64
  %54 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %50, i64 %43
  %55 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %54 to i64
  %56 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %12 to i64
  %57 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.spv::Builder::LoopBlocks"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.spv::Builder::LoopBlocks"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.spv::Builder::LoopBlocks"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %69, i64 1
  %77 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %76 to i64
  %78 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !114

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.spv::Builder::LoopBlocks"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.spv::Builder::LoopBlocks"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.spv::Builder::LoopBlocks"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.spv::Builder::LoopBlocks"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.spv::Builder::LoopBlocks"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 1
  %96 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 1
  %97 = bitcast %"struct.spv::Builder::LoopBlocks"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.spv::Builder::LoopBlocks"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 2
  %101 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 2
  %102 = bitcast %"struct.spv::Builder::LoopBlocks"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.spv::Builder::LoopBlocks"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 3
  %106 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 3
  %107 = bitcast %"struct.spv::Builder::LoopBlocks"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.spv::Builder::LoopBlocks"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 4
  %111 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 4
  %112 = bitcast %"struct.spv::Builder::LoopBlocks"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.spv::Builder::LoopBlocks"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 5
  %116 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 5
  %117 = bitcast %"struct.spv::Builder::LoopBlocks"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.spv::Builder::LoopBlocks"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 6
  %121 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 6
  %122 = bitcast %"struct.spv::Builder::LoopBlocks"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.spv::Builder::LoopBlocks"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 7
  %126 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 7
  %127 = bitcast %"struct.spv::Builder::LoopBlocks"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.spv::Builder::LoopBlocks"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %89, i64 8
  %131 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %130 to i64
  %132 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %91, i64 8
  %133 = icmp eq %"struct.spv::Builder::LoopBlocks"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %60 to i64
  %136 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.spv::Builder::LoopBlocks"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.spv::Builder::LoopBlocks"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.spv::Builder::LoopBlocks"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.spv::Builder::LoopBlocks"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.spv::Builder::LoopBlocks"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = bitcast %"struct.spv::Builder::LoopBlocks"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.spv::Builder::LoopBlocks"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %153 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %152, i64 1
  store %"struct.spv::Builder::LoopBlocks"** %153, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.118"*, %"struct.spv::Builder::LoopBlocks"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 1
  %4 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 0
  %6 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %5, align 8
  %7 = icmp eq %"struct.spv::Builder::LoopBlocks"** %4, %6
  %8 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 2
  %11 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.118", %"struct.std::__1::__split_buffer.118"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %12, align 8
  %14 = icmp ult %"struct.spv::Builder::LoopBlocks"** %11, %13
  %15 = bitcast %"struct.spv::Builder::LoopBlocks"*** %12 to i64*
  %16 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %11, i64 %22
  %24 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %23, i64 %29
  %31 = bitcast %"struct.spv::Builder::LoopBlocks"** %30 to i8*
  %32 = bitcast %"struct.spv::Builder::LoopBlocks"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #17
  %33 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.spv::Builder::LoopBlocks"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.spv::Builder::LoopBlocks"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.spv::Builder::LoopBlocks"** %36, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %37 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %35, i64 %22
  store %"struct.spv::Builder::LoopBlocks"** %37, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.118"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"struct.spv::Builder::LoopBlocks"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %51, i64 %48
  %54 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %53 to i64
  %55 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %51, i64 %43
  %56 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %55 to i64
  %57 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %4 to i64
  %58 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.spv::Builder::LoopBlocks"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.spv::Builder::LoopBlocks"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.spv::Builder::LoopBlocks"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %70, i64 1
  %78 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %77 to i64
  %79 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !115

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.spv::Builder::LoopBlocks"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.spv::Builder::LoopBlocks"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.spv::Builder::LoopBlocks"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.spv::Builder::LoopBlocks"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.spv::Builder::LoopBlocks"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 1
  %97 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 1
  %98 = bitcast %"struct.spv::Builder::LoopBlocks"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.spv::Builder::LoopBlocks"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 2
  %102 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 2
  %103 = bitcast %"struct.spv::Builder::LoopBlocks"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.spv::Builder::LoopBlocks"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 3
  %107 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 3
  %108 = bitcast %"struct.spv::Builder::LoopBlocks"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.spv::Builder::LoopBlocks"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 4
  %112 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 4
  %113 = bitcast %"struct.spv::Builder::LoopBlocks"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.spv::Builder::LoopBlocks"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 5
  %117 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 5
  %118 = bitcast %"struct.spv::Builder::LoopBlocks"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.spv::Builder::LoopBlocks"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 6
  %122 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 6
  %123 = bitcast %"struct.spv::Builder::LoopBlocks"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.spv::Builder::LoopBlocks"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 7
  %127 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 7
  %128 = bitcast %"struct.spv::Builder::LoopBlocks"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spv::Builder::LoopBlocks"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 8
  %132 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %131 to i64
  %133 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 8
  %134 = icmp eq %"struct.spv::Builder::LoopBlocks"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %61 to i64
  %137 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.spv::Builder::LoopBlocks"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.spv::Builder::LoopBlocks"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.spv::Builder::LoopBlocks"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.spv::Builder::LoopBlocks"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.spv::Builder::LoopBlocks"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.spv::Builder::LoopBlocks"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %148, i64 -1
  %150 = bitcast %"struct.spv::Builder::LoopBlocks"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.spv::Builder::LoopBlocks"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %154 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %153, i64 -1
  store %"struct.spv::Builder::LoopBlocks"** %154, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN3spv7Builder10LoopBlocksERNS_9allocatorIS4_EEE10push_frontERKS4_(%"struct.std::__1::__split_buffer.295"*, %"struct.spv::Builder::LoopBlocks"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %0, i64 0, i32 1
  %4 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %0, i64 0, i32 0
  %6 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %5, align 8
  %7 = icmp eq %"struct.spv::Builder::LoopBlocks"** %4, %6
  %8 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %0, i64 0, i32 2
  %11 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.295", %"struct.std::__1::__split_buffer.295"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %12, align 8
  %14 = icmp ult %"struct.spv::Builder::LoopBlocks"** %11, %13
  %15 = bitcast %"struct.spv::Builder::LoopBlocks"*** %12 to i64*
  %16 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %11, i64 %22
  %24 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %23, i64 %29
  %31 = bitcast %"struct.spv::Builder::LoopBlocks"** %30 to i8*
  %32 = bitcast %"struct.spv::Builder::LoopBlocks"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #17
  %33 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.spv::Builder::LoopBlocks"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.spv::Builder::LoopBlocks"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.spv::Builder::LoopBlocks"** %36, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %37 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %35, i64 %22
  store %"struct.spv::Builder::LoopBlocks"** %37, %"struct.spv::Builder::LoopBlocks"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.295"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #20
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #18
  %51 = bitcast i8* %50 to %"struct.spv::Builder::LoopBlocks"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %51, i64 %48
  %54 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %53 to i64
  %55 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %51, i64 %43
  %56 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %55 to i64
  %57 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %4 to i64
  %58 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.spv::Builder::LoopBlocks"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.spv::Builder::LoopBlocks"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.spv::Builder::LoopBlocks"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %70, i64 1
  %78 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %77 to i64
  %79 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !116

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.spv::Builder::LoopBlocks"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.spv::Builder::LoopBlocks"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.spv::Builder::LoopBlocks"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.spv::Builder::LoopBlocks"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.spv::Builder::LoopBlocks"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 1
  %97 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 1
  %98 = bitcast %"struct.spv::Builder::LoopBlocks"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.spv::Builder::LoopBlocks"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 2
  %102 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 2
  %103 = bitcast %"struct.spv::Builder::LoopBlocks"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.spv::Builder::LoopBlocks"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 3
  %107 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 3
  %108 = bitcast %"struct.spv::Builder::LoopBlocks"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.spv::Builder::LoopBlocks"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 4
  %112 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 4
  %113 = bitcast %"struct.spv::Builder::LoopBlocks"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.spv::Builder::LoopBlocks"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 5
  %117 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 5
  %118 = bitcast %"struct.spv::Builder::LoopBlocks"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.spv::Builder::LoopBlocks"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 6
  %122 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 6
  %123 = bitcast %"struct.spv::Builder::LoopBlocks"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.spv::Builder::LoopBlocks"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 7
  %127 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 7
  %128 = bitcast %"struct.spv::Builder::LoopBlocks"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.spv::Builder::LoopBlocks"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %90, i64 8
  %132 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %131 to i64
  %133 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %92, i64 8
  %134 = icmp eq %"struct.spv::Builder::LoopBlocks"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.spv::Builder::LoopBlocks"** %61 to i64
  %137 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.spv::Builder::LoopBlocks"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.spv::Builder::LoopBlocks"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.spv::Builder::LoopBlocks"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.spv::Builder::LoopBlocks"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.spv::Builder::LoopBlocks"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #18
  %146 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.spv::Builder::LoopBlocks"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %148, i64 -1
  %150 = bitcast %"struct.spv::Builder::LoopBlocks"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.spv::Builder::LoopBlocks"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.spv::Builder::LoopBlocks"**, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  %154 = getelementptr inbounds %"struct.spv::Builder::LoopBlocks"*, %"struct.spv::Builder::LoopBlocks"** %153, i64 -1
  store %"struct.spv::Builder::LoopBlocks"** %154, %"struct.spv::Builder::LoopBlocks"*** %3, align 8
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #16

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind }
attributes #16 = { nofree nounwind readonly }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!42 = distinct !{!42, !43}
!43 = !{!"llvm.loop.unroll.disable"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!47 = distinct !{!47, !48}
!48 = !{!"llvm.loop.isvectorized", i32 1}
!49 = distinct !{!49, !43}
!50 = distinct !{!50, !51, !48}
!51 = !{!"llvm.loop.unroll.runtime.disable"}
!52 = distinct !{!52, !48}
!53 = distinct !{!53, !43}
!54 = distinct !{!54, !51, !48}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!57 = distinct !{!57, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__16__treeIN3spv10CapabilityENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!70 = !{i64 0, i64 65}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjEENS_22__unordered_map_hasherIS7_S8_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISU_EEEEEEmOT_DpOT0_"}
!74 = distinct !{!74, !43}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!77 = distinct !{!77, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!78 = distinct !{!78, !79, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!83 = !{!84, !81}
!84 = distinct !{!84, !85, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!91 = distinct !{!91, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!92 = !{!90, !93}
!93 = distinct !{!93, !94, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!95 = !{!93}
!96 = distinct !{!96, !43}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISV_EEEEEEmOT_DpOT0_"}
!100 = distinct !{!100, !43}
!101 = !{!"branch_weights", i32 1, i32 1048575}
!102 = distinct !{!102, !43}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIPN3spv11InstructionENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIjS9_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS9_SE_SC_Lb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_"}
!106 = distinct !{!106, !43}
!107 = distinct !{!107, !43}
!108 = distinct !{!108, !43}
!109 = distinct !{!109, !43}
!110 = distinct !{!110, !43}
!111 = distinct !{!111, !43}
!112 = distinct !{!112, !43}
!113 = distinct !{!113, !43}
!114 = distinct !{!114, !43}
!115 = distinct !{!115, !43}
!116 = distinct !{!116, !43}
