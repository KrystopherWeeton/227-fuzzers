; ModuleID = '../../third_party/libjxl/src/lib/jxl/enc_dot_dictionary.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/enc_dot_dictionary.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [3 x double] }
%"struct.std::__1::array.13" = type { [3 x i64] }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { %"struct.std::__1::pair.7"*, %"struct.std::__1::pair.7"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair.7" = type { %"struct.jxl::QuantizedPatch", %"class.std::__1::vector.28" }
%"struct.jxl::QuantizedPatch" = type { i64, i64, [3 x %"class.std::__1::vector.14"], [3 x %"class.std::__1::vector.21"] }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i8*, i8*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i8* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { float*, float*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.std::__1::pair.30"*, %"struct.std::__1::pair.30"*, %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::pair.30" = type { i32, i32 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::pair.30"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair.7"* }
%"struct.jxl::CompressParams" = type { float, i64, float, float, float, i8, [3 x float], i32, i64, i32, i32, i32, [4 x i8], %"struct.jxl::YCbCrChromaSubsampling", i8, i64, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i64, float, %"class.jxl::Plane"*, i8*, i8*, i8, i8, [2 x i8], %"struct.jxl::ButteraugliParams", i8, [3 x i8], %"struct.jxl::ModularOptions", i32, %"struct.std::__1::pair", i32, float, float, i32, i32, i8, i8, i64, i64 }
%"struct.jxl::YCbCrChromaSubsampling" = type <{ %"class.jxl::Fields", [3 x i32], i8, i8, [2 x i8] }>
%"class.jxl::Fields" = type { i32 (...)** }
%"class.jxl::Plane" = type { %"struct.jxl::PlaneBase" }
%"struct.jxl::PlaneBase" = type { i32, i32, i32, i32, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.jxl::ButteraugliParams" = type <{ float, float, float, i8, [3 x i8] }>
%"struct.jxl::ModularOptions" = type <{ i64, float, i32, %"class.std::__1::vector", float, [4 x i8], i64, i32, i32, float, i32, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"struct.std::__1::pair" = type { float, float }
%"class.jxl::Image3" = type { [3 x %"class.jxl::Plane"] }
%"struct.jxl::ColorCorrelationMap" = type { %"class.jxl::Plane.4", %"class.jxl::Plane.4", [4 x float], i32, float, float, float, i32, i32 }
%"class.jxl::Plane.4" = type { %"struct.jxl::PlaneBase" }
%"class.jxl::ThreadPool" = type { i32 (i8*, i8*, i32 (i8*, i64)*, void (i8*, i32, i64)*, i32, i32)*, i8* }
%"struct.jxl::GaussianDetectParams" = type { double, double, i32, double, double, double, double, i64, i64, i64, i64 }
%"struct.jxl::EllipseQuantParams" = type { i64, i64, i64, double, double, i64, i64, %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array.13", i8, float, float }

@__const._ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE.ellipse_params = private unnamed_addr constant { double, double, i32, [4 x i8], double, double, double, double, i64, i64, i64, i64 } { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, align 8
@__const._ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE.qParams = private unnamed_addr constant { i64, i64, i64, double, double, i64, i64, %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array.13", i8, [3 x i8], float, float, [4 x i8] } { i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i64 -6148914691236517206, i64 -6148914691236517206, %"struct.std::__1::array" { [3 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF] }, %"struct.std::__1::array" { [3 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF] }, %"struct.std::__1::array.13" { [3 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206] }, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@_ZN3jxl12_GLOBAL__N_120kEllipseMinIntensityE = internal unnamed_addr constant %"struct.std::__1::array" { [3 x double] [double -5.000000e-02, double 0.000000e+00, double -5.000000e-01] }, align 8
@_ZN3jxl12_GLOBAL__N_120kEllipseMaxIntensityE = internal unnamed_addr constant %"struct.std::__1::array" { [3 x double] [double 5.000000e-02, double 1.000000e+00, double 4.000000e-01] }, align 8
@_ZN3jxl12_GLOBAL__N_118kEllipseIntensityQE = internal unnamed_addr constant %"struct.std::__1::array.13" { [3 x i64] [i64 10, i64 36, i64 10] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE(%"class.std::__1::vector.5"* noalias sret, %"struct.jxl::CompressParams"* nocapture readonly dereferenceable(360), %"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::ColorCorrelationMap"* nocapture readonly dereferenceable(104), %"class.jxl::ThreadPool"*) local_unnamed_addr #0 {
  %6 = alloca %"struct.jxl::GaussianDetectParams", align 16
  %7 = alloca %"struct.jxl::EllipseQuantParams", align 16
  %8 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %1, i64 0, i32 18
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %10 [
    i32 1, label %14
    i32 0, label %54
  ]

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.jxl::CompressParams", %"struct.jxl::CompressParams"* %1, i64 0, i32 0
  %12 = load float, float* %11, align 8
  %13 = fcmp ult float %12, 3.000000e+00
  br i1 %13, label %54, label %14

14:                                               ; preds = %10, %5
  %15 = bitcast %"struct.jxl::GaussianDetectParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %15) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %15, i8* align 8 bitcast ({ double, double, i32, [4 x i8], double, double, double, double, i64, i64, i64, i64 }* @__const._ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE.ellipse_params to i8*), i64 24, i1 false)
  %16 = getelementptr inbounds %"struct.jxl::GaussianDetectParams", %"struct.jxl::GaussianDetectParams"* %6, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.jxl::GaussianDetectParams", %"struct.jxl::GaussianDetectParams"* %6, i64 0, i32 9
  %18 = bitcast %"struct.jxl::GaussianDetectParams"* %6 to <2 x double>*
  store <2 x double> <double 4.000000e-02, double 2.000000e-02>, <2 x double>* %18, align 16
  %19 = getelementptr inbounds %"struct.jxl::GaussianDetectParams", %"struct.jxl::GaussianDetectParams"* %6, i64 0, i32 2
  store i32 5, i32* %19, align 16
  %20 = bitcast double* %16 to <2 x double>*
  store <2 x double> <double 5.000000e-03, double 3.000000e+02>, <2 x double>* %20, align 8
  %21 = getelementptr inbounds %"struct.jxl::GaussianDetectParams", %"struct.jxl::GaussianDetectParams"* %6, i64 0, i32 5
  %22 = bitcast double* %21 to <2 x double>*
  store <2 x double> <double 1.200000e-01, double 1.000000e+00>, <2 x double>* %22, align 8
  %23 = getelementptr inbounds %"struct.jxl::GaussianDetectParams", %"struct.jxl::GaussianDetectParams"* %6, i64 0, i32 7
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12>, <2 x i64>* %24, align 8
  %25 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 100, i64 100>, <2 x i64>* %25, align 8
  %26 = bitcast %"struct.jxl::EllipseQuantParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %26) #3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %26, i8* align 8 bitcast ({ i64, i64, i64, double, double, i64, i64, %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array.13", i8, [3 x i8], float, float, [4 x i8] }* @__const._ZN3jxl17FindDotDictionaryERKNS_14CompressParamsERKNS_6Image3IfEERKNS_19ColorCorrelationMapEPNS_10ThreadPoolE.qParams to i8*), i64 144, i1 false)
  %27 = bitcast %"class.jxl::Image3"* %2 to <2 x i32>*
  %28 = load <2 x i32>, <2 x i32>* %27, align 8
  %29 = zext <2 x i32> %28 to <2 x i64>
  %30 = bitcast %"struct.jxl::EllipseQuantParams"* %7 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 16
  %31 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 2
  store i64 2, i64* %31, align 16
  %32 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 3
  %33 = bitcast double* %32 to <2 x double>*
  store <2 x double> <double 1.000000e-01, double 3.100000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 5
  %35 = bitcast i64* %34 to <2 x i64>*
  store <2 x i64> <i64 16, i64 8>, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 7
  %37 = bitcast %"struct.std::__1::array"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 bitcast (%"struct.std::__1::array"* @_ZN3jxl12_GLOBAL__N_120kEllipseMinIntensityE to i8*), i64 24, i1 false)
  %38 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 8
  %39 = bitcast %"struct.std::__1::array"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %39, i8* align 8 bitcast (%"struct.std::__1::array"* @_ZN3jxl12_GLOBAL__N_120kEllipseMaxIntensityE to i8*), i64 24, i1 false)
  %40 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 9
  %41 = bitcast %"struct.std::__1::array.13"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 bitcast (%"struct.std::__1::array.13"* @_ZN3jxl12_GLOBAL__N_118kEllipseIntensityQE to i8*), i64 24, i1 false)
  %42 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 10
  store i8 1, i8* %42, align 16
  %43 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 11
  %44 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %3, i64 0, i32 5
  %45 = load float, float* %44, align 8
  %46 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %3, i64 0, i32 4
  %47 = load float, float* %46, align 4
  %48 = fmul float %47, 0.000000e+00
  %49 = fadd float %45, %48
  store float %49, float* %43, align 4
  %50 = getelementptr inbounds %"struct.jxl::EllipseQuantParams", %"struct.jxl::EllipseQuantParams"* %7, i64 0, i32 12
  %51 = getelementptr inbounds %"struct.jxl::ColorCorrelationMap", %"struct.jxl::ColorCorrelationMap"* %3, i64 0, i32 6
  %52 = load float, float* %51, align 4
  %53 = fadd float %48, %52
  store float %53, float* %50, align 8
  call void @_ZN3jxl22DetectGaussianEllipsesERKNS_6Image3IfEERKNS_20GaussianDetectParamsERKNS_18EllipseQuantParamsEPNS_10ThreadPoolE(%"class.std::__1::vector.5"* sret %0, %"class.jxl::Image3"* dereferenceable(96) %2, %"struct.jxl::GaussianDetectParams"* nonnull dereferenceable(88) %6, %"struct.jxl::EllipseQuantParams"* nonnull dereferenceable(144) %7, %"class.jxl::ThreadPool"* %4) #3
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %26) #3
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %15) #3
  br label %56

54:                                               ; preds = %10, %5
  %55 = bitcast %"class.std::__1::vector.5"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #3
  br label %56

56:                                               ; preds = %54, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3jxl22DetectGaussianEllipsesERKNS_6Image3IfEERKNS_20GaussianDetectParamsERKNS_18EllipseQuantParamsEPNS_10ThreadPoolE(%"class.std::__1::vector.5"* sret, %"class.jxl::Image3"* dereferenceable(96), %"struct.jxl::GaussianDetectParams"* dereferenceable(88), %"struct.jxl::EllipseQuantParams"* dereferenceable(144), %"class.jxl::ThreadPool"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
