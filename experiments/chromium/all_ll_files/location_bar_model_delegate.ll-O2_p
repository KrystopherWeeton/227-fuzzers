; ModuleID = '../../components/omnibox/browser/location_bar_model_delegate.cc'
source_filename = "../../components/omnibox/browser/location_bar_model_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.LocationBarModelDelegate = type { i32 (...)** }
%"struct.security_state::VisibleSecurityState" = type <{ %class.GURL, i32, [4 x i8], %"struct.security_state::SafetyTipInfo", i8, [7 x i8], %class.scoped_refptr, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GURL* }
%"struct.security_state::SafetyTipInfo" = type { i32, %class.GURL }
%class.scoped_refptr = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector.17" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::unique_ptr.13"* }
%"struct.gfx::VectorIcon" = type opaque
%class.AutocompleteClassifier = type opaque
%class.TemplateURLService = type opaque

$_ZN24LocationBarModelDelegateD2Ev = comdat any

$_ZN24LocationBarModelDelegateD0Ev = comdat any

@_ZTV24LocationBarModelDelegate = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*)* @_ZN24LocationBarModelDelegate20ShouldPreventElisionEv to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate33ShouldTrimDisplayUrlAfterHostNameEv to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate16ShouldDisplayURLEv to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate44ShouldUseUpdatedConnectionSecurityIndicatorsEv to i8*), i8* bitcast (i32 (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate16GetSecurityLevelEv to i8*), i8* bitcast (%"struct.security_state::VisibleSecurityState"* (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate23GetVisibleSecurityStateEv to i8*), i8* bitcast (%"class.net::X509Certificate"* (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate14GetCertificateEv to i8*), i8* bitcast (%"struct.gfx::VectorIcon"* (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate21GetVectorIconOverrideEv to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate13IsOfflinePageEv to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*)* @_ZNK24LocationBarModelDelegate12IsNewTabPageEv to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*, %class.GURL*)* @_ZNK24LocationBarModelDelegate15IsNewTabPageURLERK4GURL to i8*), i8* bitcast (i1 (%class.LocationBarModelDelegate*, %class.GURL*)* @_ZNK24LocationBarModelDelegate10IsHomePageERK4GURL to i8*), i8* bitcast (%class.AutocompleteClassifier* (%class.LocationBarModelDelegate*)* @_ZN24LocationBarModelDelegate25GetAutocompleteClassifierEv to i8*), i8* bitcast (%class.TemplateURLService* (%class.LocationBarModelDelegate*)* @_ZN24LocationBarModelDelegate21GetTemplateURLServiceEv to i8*), i8* bitcast (void (%class.LocationBarModelDelegate*)* @_ZN24LocationBarModelDelegateD2Ev to i8*), i8* bitcast (void (%class.LocationBarModelDelegate*)* @_ZN24LocationBarModelDelegateD0Ev to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN24LocationBarModelDelegate20ShouldPreventElisionEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate33ShouldTrimDisplayUrlAfterHostNameEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate16ShouldDisplayURLEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate44ShouldUseUpdatedConnectionSecurityIndicatorsEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK24LocationBarModelDelegate16GetSecurityLevelEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"struct.security_state::VisibleSecurityState"* @_ZNK24LocationBarModelDelegate23GetVisibleSecurityStateEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 296) #5
  %3 = bitcast i8* %2 to %"struct.security_state::VisibleSecurityState"*
  tail call void @_ZN14security_state20VisibleSecurityStateC1Ev(%"struct.security_state::VisibleSecurityState"* nonnull %3) #6
  ret %"struct.security_state::VisibleSecurityState"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.net::X509Certificate"* @_ZNK24LocationBarModelDelegate14GetCertificateEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.net::X509Certificate"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"struct.gfx::VectorIcon"* @_ZNK24LocationBarModelDelegate21GetVectorIconOverrideEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"struct.gfx::VectorIcon"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate13IsOfflinePageEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate12IsNewTabPageEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate15IsNewTabPageURLERK4GURL(%class.LocationBarModelDelegate* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120)) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK24LocationBarModelDelegate10IsHomePageERK4GURL(%class.LocationBarModelDelegate* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120)) unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.AutocompleteClassifier* @_ZN24LocationBarModelDelegate25GetAutocompleteClassifierEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret %class.AutocompleteClassifier* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.TemplateURLService* @_ZN24LocationBarModelDelegate21GetTemplateURLServiceEv(%class.LocationBarModelDelegate* nocapture readnone) unnamed_addr #0 align 2 {
  ret %class.TemplateURLService* null
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24LocationBarModelDelegateD2Ev(%class.LocationBarModelDelegate*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN24LocationBarModelDelegateD0Ev(%class.LocationBarModelDelegate*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN14security_state20VisibleSecurityStateC1Ev(%"struct.security_state::VisibleSecurityState"*) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
