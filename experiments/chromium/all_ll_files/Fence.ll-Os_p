; ModuleID = '../../third_party/swiftshader/src/OpenGL/libGLESv2/Fence.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libGLESv2/Fence.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.es2::Fence" = type <{ i32 (...)**, i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.es2::FenceSync" = type { %"class.gl::NamedObject", i32, i32 }
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>

@_ZTVN3es25FenceE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.es2::Fence"*)* @_ZN3es25FenceD2Ev to i8*), i8* bitcast (void (%"class.es2::Fence"*)* @_ZN3es25FenceD0Ev to i8*)] }, align 8
@_ZTVN3es29FenceSyncE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object7releaseEv to i8*), i8* bitcast (void (%"class.es2::FenceSync"*)* @_ZN3es29FenceSyncD2Ev to i8*), i8* bitcast (void (%"class.es2::FenceSync"*)* @_ZN3es29FenceSyncD0Ev to i8*)] }, align 8

@_ZN3es25FenceC1Ev = hidden unnamed_addr alias void (%"class.es2::Fence"*), void (%"class.es2::Fence"*)* @_ZN3es25FenceC2Ev
@_ZN3es25FenceD1Ev = hidden unnamed_addr alias void (%"class.es2::Fence"*), void (%"class.es2::Fence"*)* @_ZN3es25FenceD2Ev
@_ZN3es29FenceSyncC1Ejjj = hidden unnamed_addr alias void (%"class.es2::FenceSync"*, i32, i32, i32), void (%"class.es2::FenceSync"*, i32, i32, i32)* @_ZN3es29FenceSyncC2Ejjj
@_ZN3es29FenceSyncD1Ev = hidden unnamed_addr alias void (%"class.es2::FenceSync"*), void (%"class.es2::FenceSync"*)* @_ZN3es29FenceSyncD2Ev

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3es25FenceC2Ev(%"class.es2::Fence"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es25FenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 4
  store i8 0, i8* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN3es25FenceD2Ev(%"class.es2::Fence"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es25FenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25FenceD0Ev(%"class.es2::Fence"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.es2::Fence"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i8 @_ZN3es25Fence7isFenceEv(%"class.es2::Fence"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  ret i8 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25Fence8setFenceEj(%"class.es2::Fence"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp eq i32 %1, 34034
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN3es25errorEj(i32 1281) #8
  br label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 3
  store i32 34034, i32* %7, align 4
  %8 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 8
  br label %9

9:                                                ; preds = %5, %4
  ret void
}

; Function Attrs: optsize
declare void @_ZN3es25errorEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i8 @_ZN3es25Fence9testFenceEv(%"class.es2::Fence"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN3es25errorEj(i32 1282) #8
  br label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 4
  store i8 1, i8* %7, align 8
  br label %8

8:                                                ; preds = %6, %5
  ret i8 1
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25Fence11finishFenceEv(%"class.es2::Fence"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void @_ZN3es25errorEj(i32 1282) #8
  br label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 4
  store i8 1, i8* %7, align 8
  br label %8

8:                                                ; preds = %6, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es25Fence10getFenceivEjPi(%"class.es2::Fence"* nocapture, i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN3es25errorEj(i32 1282) #8
  br label %19

8:                                                ; preds = %3
  switch i32 %1, label %18 [
    i32 34035, label %9
    i32 34036, label %15
  ]

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  store i32 1, i32* %2, align 4
  br label %19

14:                                               ; preds = %9
  store i8 1, i8* %10, align 8
  store i32 1, i32* %2, align 4
  br label %19

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.es2::Fence", %"class.es2::Fence"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %2, align 4
  br label %19

18:                                               ; preds = %8
  tail call void @_ZN3es25errorEj(i32 1280) #8
  br label %19

19:                                               ; preds = %7, %13, %18, %15, %14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29FenceSyncC2Ejjj(%"class.es2::FenceSync"*, i32, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.es2::FenceSync", %"class.es2::FenceSync"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"* %5, i32 %1) #8
  %6 = getelementptr inbounds %"class.es2::FenceSync", %"class.es2::FenceSync"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es29FenceSyncE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.es2::FenceSync", %"class.es2::FenceSync"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.es2::FenceSync", %"class.es2::FenceSync"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 4
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"*, i32) unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"*) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29FenceSyncD2Ev(%"class.es2::FenceSync"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::FenceSync", %"class.es2::FenceSync"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %2) #8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29FenceSyncD0Ev(%"class.es2::FenceSync"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.es2::FenceSync", %"class.es2::FenceSync"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %2) #8
  %3 = bitcast %"class.es2::FenceSync"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN3es29FenceSync10clientWaitEjm(%"class.es2::FenceSync"* nocapture readnone, i32, i64) local_unnamed_addr #6 align 2 {
  ret i32 37146
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3es29FenceSync10serverWaitEjm(%"class.es2::FenceSync"* nocapture, i32, i64) local_unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es29FenceSync9getSyncivEjPiS1_(%"class.es2::FenceSync"* nocapture readnone, i32, i32*, i32* nocapture) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %17 [
    i32 37138, label %5
    i32 37140, label %8
    i32 37139, label %11
    i32 37141, label %14
  ]

5:                                                ; preds = %4
  store i32 37142, i32* %3, align 4
  %6 = icmp eq i32* %2, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %5
  store i32 1, i32* %2, align 4
  br label %18

8:                                                ; preds = %4
  store i32 37145, i32* %3, align 4
  %9 = icmp eq i32* %2, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %8
  store i32 1, i32* %2, align 4
  br label %18

11:                                               ; preds = %4
  store i32 37143, i32* %3, align 4
  %12 = icmp eq i32* %2, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  store i32 1, i32* %2, align 4
  br label %18

14:                                               ; preds = %4
  %15 = icmp eq i32* %2, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  store i32 0, i32* %2, align 4
  br label %18

17:                                               ; preds = %4
  tail call void @_ZN3es25errorEj(i32 1280) #8
  br label %18

18:                                               ; preds = %5, %8, %11, %14, %16, %13, %10, %7, %17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl6Object6addRefEv(%"class.gl::Object"*) unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN2gl6Object7releaseEv(%"class.gl::Object"*) unnamed_addr #4

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind optsize }
attributes #8 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
