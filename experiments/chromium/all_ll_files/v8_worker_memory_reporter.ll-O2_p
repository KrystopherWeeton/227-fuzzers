; ModuleID = '../../third_party/blink/renderer/controller/performance_manager/v8_worker_memory_reporter.cc'
source_filename = "../../third_party/blink/renderer/controller/performance_manager/v8_worker_memory_reporter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.662 }
%class.scoped_refptr.662 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.12", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback.985" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.230" }>
%"class.base::RefCountedThreadSafe.230" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.230", [4 x i8] }>
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.21, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.229, %"class.std::__1::unique_ptr.231", %"class.WTF::HashMap.250", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent.443", %"class.blink::CrossThreadPersistent.649", %class.scoped_refptr.651, %"class.blink::TaskHandle", %"class.WTF::HashSet.653", %"class.WTF::HashSet.657" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.21 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque" }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { %"class.std::__1::unique_ptr.26"*, i32, i32 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.29" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.32", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.73", %"class.crdtp::detail::PtrMaybe.93", %"class.crdtp::detail::PtrMaybe.103", %"class.crdtp::detail::PtrMaybe.113", %"class.crdtp::detail::PtrMaybe.134", %"class.crdtp::detail::PtrMaybe.144", %"class.crdtp::detail::PtrMaybe.154", %"class.crdtp::detail::PtrMaybe.164", %"class.crdtp::detail::PtrMaybe.193", %"class.crdtp::detail::PtrMaybe.203", %"class.crdtp::detail::PtrMaybe.213" }
%"class.crdtp::ProtocolObject.32" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.38", %"class.crdtp::detail::PtrMaybe.41", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.60" }
%"class.crdtp::ProtocolObject.38" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.41" = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.45", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.45" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.60" = type { %"class.std::__1::unique_ptr.61" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.64", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.64" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.77", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.60", %"class.crdtp::detail::PtrMaybe.80" }
%"class.crdtp::ProtocolObject.77" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.80" = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.84", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.84" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.93" = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.97", %"class.std::__1::unique_ptr.61", %"class.crdtp::detail::PtrMaybe.80", %"class.crdtp::detail::PtrMaybe.80", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.97" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.103" = type { %"class.std::__1::unique_ptr.104" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.107", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.81" }
%"class.crdtp::ProtocolObject.107" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.113" = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.117", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.80", %"class.crdtp::detail::PtrMaybe.120", %"class.crdtp::detail::ValueMaybe.130" }
%"class.crdtp::ProtocolObject.117" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.120" = type { %"class.std::__1::unique_ptr.121" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.124", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.124" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.130" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.134" = type { %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.138", %"class.std::__1::unique_ptr.121", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.138" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.144" = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.148", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.130", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.148" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.154" = type { %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.158", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.158" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.164" = type { %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.168", %"class.std::__1::unique_ptr.171", i8, %"class.std::__1::unique_ptr.61", %"class.crdtp::detail::PtrMaybe.120", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.180" }
%"class.crdtp::ProtocolObject.168" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.174", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.174" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.180" = type { %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.184", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.184" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.193" = type { %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.197", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.80", %"class.crdtp::detail::PtrMaybe.60", %"class.crdtp::detail::ValueMaybe.130", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.197" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.203" = type { %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.207", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.207" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.213" = type { %"class.std::__1::unique_ptr.214" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.217", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.120" }
%"class.crdtp::ProtocolObject.217" = type { %"class.crdtp::Serializable" }
%"class.blink::WorkerReportingProxy" = type opaque
%class.scoped_refptr.229 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.237, %class.scoped_refptr.237, %class.scoped_refptr.237, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.246" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap", %"class.base::WeakPtrFactory.236" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.base::WeakPtrFactory.236" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.237 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { i64 }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.WTF::HashMap.250" = type { %"class.WTF::HashTable.251" }
%"class.WTF::HashTable.251" = type <{ %"struct.WTF::KeyValuePair.254"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.254" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.255" }
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.259", i32, [4 x i8], %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.397", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.403", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.414", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.432", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.439", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.377", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.295" = type { %"struct.std::__1::__atomic_base.296" }
%"struct.std::__1::__atomic_base.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__cxx_atomic_impl.298" }
%"struct.std::__1::__cxx_atomic_impl.298" = type { %"struct.std::__1::__cxx_atomic_base_impl.299" }
%"struct.std::__1::__cxx_atomic_base_impl.299" = type { i64 }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::Worklist.306"* }
%"class.blink::Worklist.306" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::Worklist.313"* }
%"class.blink::Worklist.313" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::Worklist.320"* }
%"class.blink::Worklist.320" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::Worklist.327"* }
%"class.blink::Worklist.327" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::Worklist.334"* }
%"class.blink::Worklist.334" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::Worklist.341"* }
%"class.blink::Worklist.341" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::Worklist.348"* }
%"class.blink::Worklist.348" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.295" }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.355", %"class.std::__1::__compressed_pair.363", %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.370", [4 x i8] }>
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { float }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.380", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.389" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.403" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.420" }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.306"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.313"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.320"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.327"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.334"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.978", i64 }
%"class.std::__1::vector.978" = type { %"class.std::__1::__vector_base.979" }
%"class.std::__1::__vector_base.979" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.980" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.438 }
%class.scoped_refptr.438 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.439" = type { %"struct.std::__1::__atomic_base.440" }
%"struct.std::__1::__atomic_base.440" = type { %"struct.std::__1::__cxx_atomic_impl.441" }
%"struct.std::__1::__cxx_atomic_impl.441" = type { %"struct.std::__1::__cxx_atomic_base_impl.442" }
%"struct.std::__1::__cxx_atomic_base_impl.442" = type { i8 }
%"class.blink::CrossThreadPersistent.443" = type { %"class.blink::PersistentBase.444" }
%"class.blink::PersistentBase.444" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent.610", %"class.std::__1::unique_ptr.622", %"class.blink::Member.628", %"class.blink::HeapHashSet.630", %class.scoped_refptr.637, %"class.blink::Member.639", %"class.blink::Member.641", i32, %"class.WTF::Vector.562", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.645" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.456" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451", [32 x i8] }
%"class.WTF::VectorBufferBase.451" = type { %"struct.std::__1::pair.452"*, i32, i32 }
%"struct.std::__1::pair.452" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.453"* }
%"class.blink::HeapVector.453" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.WTF::Vector.459"* }
%"class.WTF::Vector.459" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.528", i32, i8, [3 x i8], %"class.blink::HeapVector.530", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.539", %"class.blink::Member.541", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.550", %"class.blink::Member.556", %"class.blink::Member.558", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.465" }
%"class.WTF::HashMap.465" = type { %"class.WTF::HashTable.466" }
%"class.WTF::HashTable.466" = type <{ %"struct.WTF::KeyValuePair.468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.468" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.473" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.473" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.474" }
%"class.blink::HeapHashMap.474" = type { %"class.WTF::HashMap.477" }
%"class.WTF::HashMap.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type { i8*, %"class.blink::Member.1004" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1006" }
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.481, %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.516", %"class.blink::Member.522", i32, [4 x i8], %"class.WTF::HashSet.524", i32, i32 }
%class.scoped_refptr.481 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.482 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.482 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.492", %"class.std::__1::map.503", %"class.std::__1::map.512"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.488 }
%union.anon.488 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::map.503" = type { %"class.std::__1::__tree.504" }
%"class.std::__1::__tree.504" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::map.512" = type opaque
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.528", i32, i8, [3 x i8], %"class.blink::HeapVector.530", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.539", %"class.blink::Member.541", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.550", %"class.blink::Member.556", %"class.blink::Member.558", i8, [7 x i8] }>
%"class.WTF::HashSet.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.530" = type { %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.blink::Member.536"*, i32, i32 }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.543", i32, i32 }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.541", i8, [7 x i8], %"class.WTF::Vector.562", %"class.blink::HeapVector.602", i8, [7 x i8], %"class.WTF::HashSet.524", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.602" = type { %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"class.blink::Member.608"*, i32, i32 }
%"class.blink::Member.608" = type opaque
%"class.blink::CrossThreadPersistent.610" = type { %"class.blink::PersistentBase.611" }
%"class.blink::PersistentBase.611" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.614" }
%"class.blink::Supplementable.614" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.615" }
%"class.blink::HeapHashMap.615" = type { %"class.WTF::HashMap.618" }
%"class.WTF::HashMap.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type { i8*, %"class.blink::Member.1021" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::Supplement.1023"* }
%"class.blink::Supplement.1023" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1024" }
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.665", %"class.blink::Member.667", %"class.blink::Member.671", %class.scoped_refptr.229, %class.scoped_refptr.229, %"class.blink::Member.673", %"class.blink::Member.675", %"class.blink::Member.681", %"class.blink::Member.685", %"class.blink::Member.737", %"class.blink::HeapHashMap.739", %"class.blink::HeapHashSet.746", %"class.blink::HeapHashSet.746", %"class.blink::HeapHashMap.929", %"class.blink::HeapVector.936", %"class.blink::Member.944", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.947", %"class.WTF::Vector.954", %"class.blink::HeapHashSet.960", %"class.blink::HeapHashSet.960", %"class.std::__1::unique_ptr.966", %"class.base::WeakPtr.730", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.975", i8, i8, %"class.base::WeakPtrFactory.977" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.679" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.689", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.691", %"class.WTF::HashSet.696", i8, [3 x i8], i32, %"class.blink::HeapHashMap.700", %"class.std::__1::map.707", %"class.std::__1::map.718", %"class.std::__1::unique_ptr.727", %"class.blink::Member.675", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.734", %"class.mojo::InlinedStructPtr.736", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.691" = type { %"class.WTF::HashTable.692" }
%"class.WTF::HashTable.692" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.700" = type { %"class.WTF::HashMap.703" }
%"class.WTF::HashMap.703" = type { %"class.WTF::HashTable.704" }
%"class.WTF::HashTable.704" = type <{ %"struct.WTF::KeyValuePair.706"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.706" = type opaque
%"class.std::__1::map.707" = type { %"class.std::__1::__tree.708" }
%"class.std::__1::__tree.708" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::map.718" = type { %"class.std::__1::__tree.719" }
%"class.std::__1::__tree.719" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.720", %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.730", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.736" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.739" = type { %"class.WTF::HashMap.742" }
%"class.WTF::HashMap.742" = type { %"class.WTF::HashTable.743" }
%"class.WTF::HashTable.743" = type <{ %"struct.WTF::KeyValuePair.745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.745" = type opaque
%"class.blink::HeapHashSet.746" = type { %"class.WTF::HashSet.749" }
%"class.WTF::HashSet.749" = type { %"class.WTF::HashTable.750" }
%"class.WTF::HashTable.750" = type <{ %"class.blink::WeakMember.752"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.756", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.776", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.873", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.904", %"class.blink::ResourceResponse", %class.scoped_refptr.906, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.756" = type { %"class.absl::optional_internal::optional_data.757" }
%"class.absl::optional_internal::optional_data.757" = type { %"class.absl::optional_internal::optional_data_base.758" }
%"class.absl::optional_internal::optional_data_base.758" = type { %"class.absl::optional_internal::optional_data_dtor_base.759" }
%"class.absl::optional_internal::optional_data_dtor_base.759" = type { i8, %union.anon.760 }
%union.anon.760 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.761", i8, %"class.absl::optional.766", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.7" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::KURL"* }
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, [7 x i8], %union.anon.765 }
%union.anon.765 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.766" = type { %"class.absl::optional_internal::optional_data.767" }
%"class.absl::optional_internal::optional_data.767" = type { %"class.absl::optional_internal::optional_data_base.768" }
%"class.absl::optional_internal::optional_data_base.768" = type { %"class.absl::optional_internal::optional_data_dtor_base.769" }
%"class.absl::optional_internal::optional_data_dtor_base.769" = type { i8, %union.anon.770 }
%union.anon.770 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.771", %"class.WTF::Vector.585" }
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { i32*, i32, i32 }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587" }
%"class.WTF::VectorBufferBase.587" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.776" = type { %"class.WTF::VectorBuffer.777" }
%"class.WTF::VectorBuffer.777" = type { %"class.WTF::VectorBufferBase.778" }
%"class.WTF::VectorBufferBase.778" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.869" }
%"class.WTF::HashMap.869" = type { %"class.WTF::HashTable.870" }
%"class.WTF::HashTable.870" = type <{ %"struct.WTF::KeyValuePair.872"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.872" = type <{ %"class.blink::WeakMember.1026", i32, [4 x i8] }>
%"class.blink::WeakMember.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1028", [7 x i8], %"class.blink::Member.942", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1028" = type { i8 }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.753" }
%"class.blink::HeapHashSet.873" = type { %"class.WTF::HashSet.876" }
%"class.WTF::HashSet.876" = type { %"class.WTF::HashTable.877" }
%"class.WTF::HashTable.877" = type <{ %"class.blink::WeakMember.879"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.879" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.880", i8, i8, %class.scoped_refptr.885, %class.scoped_refptr.900, %class.scoped_refptr.902 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.880" = type { %"class.WTF::HashTable.881" }
%"class.WTF::HashTable.881" = type <{ %"struct.std::__1::pair.884"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.884" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.885 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.886", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.886" = type { %"class.base::RefCounted.887" }
%"class.base::RefCounted.887" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.888" }
%"class.blink::PersistentBase.888" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.891" }
%"class.blink::HeapHashMap.891" = type { %"class.WTF::HashMap.894" }
%"class.WTF::HashMap.894" = type { %"class.WTF::HashTable.895" }
%"class.WTF::HashTable.895" = type <{ %"struct.WTF::KeyValuePair.897"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.897" = type { %"class.blink::WeakMember.898", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.900 = type { %"class.base::RefCountedData.901"* }
%"class.base::RefCountedData.901" = type opaque
%class.scoped_refptr.902 = type { %"class.base::RefCountedData.903"* }
%"class.base::RefCountedData.903" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.832" }
%"class.base::time_internal::TimeBase.832" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.482, %class.scoped_refptr.482, %class.scoped_refptr.482, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.784, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.796", %"class.absl::optional.801", %"class.absl::optional.811", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.821", %"class.absl::optional.811", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.811", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.821", %"class.absl::optional.826", i8, %class.scoped_refptr.831 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.779" }
%"class.WTF::HashMap.779" = type { %"class.WTF::HashTable.780" }
%"class.WTF::HashTable.780" = type <{ %"struct.WTF::KeyValuePair.783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.783" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.784 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.785", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.794, i8, %"class.url::Origin" }
%"class.base::RefCounted.785" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.1 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.786" }
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"class.std::__1::unique_ptr.788"*, %"class.std::__1::unique_ptr.788"*, %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.std::__1::unique_ptr.788"* }
%class.scoped_refptr.794 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.795", [4 x i8] }>
%"class.base::RefCountedThreadSafe.795" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.796" = type { %"class.absl::optional_internal::optional_data.797" }
%"class.absl::optional_internal::optional_data.797" = type { %"class.absl::optional_internal::optional_data_base.798" }
%"class.absl::optional_internal::optional_data_base.798" = type { %"class.absl::optional_internal::optional_data_dtor_base.799" }
%"class.absl::optional_internal::optional_data_dtor_base.799" = type { i8, %union.anon.800 }
%union.anon.800 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.801" = type { %"class.absl::optional_internal::optional_data.802" }
%"class.absl::optional_internal::optional_data.802" = type { %"class.absl::optional_internal::optional_data_base.803" }
%"class.absl::optional_internal::optional_data_base.803" = type { %"class.absl::optional_internal::optional_data_dtor_base.804" }
%"class.absl::optional_internal::optional_data_dtor_base.804" = type { i8, %union.anon.805 }
%union.anon.805 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.806", %"class.WTF::Vector.585", %"class.WTF::String" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %class.scoped_refptr.482*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.816", %"class.absl::optional.816" }
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { %"class.base::TimeDelta" }
%"class.absl::optional.811" = type { %"class.absl::optional_internal::optional_data.812" }
%"class.absl::optional_internal::optional_data.812" = type { %"class.absl::optional_internal::optional_data_base.813" }
%"class.absl::optional_internal::optional_data_base.813" = type { %"class.absl::optional_internal::optional_data_dtor_base.814" }
%"class.absl::optional_internal::optional_data_dtor_base.814" = type { i8, %union.anon.815 }
%union.anon.815 = type { %"class.WTF::String" }
%"class.absl::optional.821" = type { %"class.absl::optional_internal::optional_data.822" }
%"class.absl::optional_internal::optional_data.822" = type { %"class.absl::optional_internal::optional_data_base.823" }
%"class.absl::optional_internal::optional_data_base.823" = type { %"class.absl::optional_internal::optional_data_dtor_base.824" }
%"class.absl::optional_internal::optional_data_dtor_base.824" = type { i8, %union.anon.825 }
%union.anon.825 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.826" = type { %"class.absl::optional_internal::optional_data.827" }
%"class.absl::optional_internal::optional_data.827" = type { %"class.absl::optional_internal::optional_data_base.828" }
%"class.absl::optional_internal::optional_data_base.828" = type { %"class.absl::optional_internal::optional_data_dtor_base.829" }
%"class.absl::optional_internal::optional_data_dtor_base.829" = type { i8, %union.anon.830 }
%union.anon.830 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.831 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1013", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1013" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1014" }
%"class.std::__1::vector.1014" = type { %"class.std::__1::__vector_base.1015" }
%"class.std::__1::__vector_base.1015" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { i32* }
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.833", %class.scoped_refptr.848, %class.scoped_refptr.849, %"struct.blink::CacheControlHeader", %"class.absl::optional.816", %"class.absl::optional.850", %"class.absl::optional.850", %"class.absl::optional.850", i64, %"class.blink::KURL", %"class.WTF::Vector.855", %"class.WTF::String", %"class.WTF::Vector.585", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.821", %"class.WTF::Vector.585", %"class.blink::KURL", %"class.absl::optional.860" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.833" = type { %"class.absl::optional_internal::optional_data.834" }
%"class.absl::optional_internal::optional_data.834" = type { %"class.absl::optional_internal::optional_data_base.835" }
%"class.absl::optional_internal::optional_data_base.835" = type { %"class.absl::optional_internal::optional_data_dtor_base.836" }
%"class.absl::optional_internal::optional_data_dtor_base.836" = type { i8, %union.anon.837 }
%union.anon.837 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.585", %"class.WTF::String", i64, i64, %"class.WTF::Vector.838", %"class.WTF::Vector.843" }
%"class.WTF::Vector.838" = type { %"class.WTF::VectorBuffer.839" }
%"class.WTF::VectorBuffer.839" = type { %"class.WTF::VectorBufferBase.840" }
%"class.WTF::VectorBufferBase.840" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.848 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.849 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.850" = type { %"class.absl::optional_internal::optional_data.851" }
%"class.absl::optional_internal::optional_data.851" = type { %"class.absl::optional_internal::optional_data_base.852" }
%"class.absl::optional_internal::optional_data_base.852" = type { %"class.absl::optional_internal::optional_data_dtor_base.853" }
%"class.absl::optional_internal::optional_data_dtor_base.853" = type { i8, %union.anon.854 }
%union.anon.854 = type { %"class.base::Time" }
%"class.WTF::Vector.855" = type { %"class.WTF::VectorBuffer.856" }
%"class.WTF::VectorBuffer.856" = type { %"class.WTF::VectorBufferBase.857" }
%"class.WTF::VectorBufferBase.857" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.860" = type { %"class.absl::optional_internal::optional_data.861" }
%"class.absl::optional_internal::optional_data.861" = type { %"class.absl::optional_internal::optional_data_base.862" }
%"class.absl::optional_internal::optional_data_base.862" = type { %"class.absl::optional_internal::optional_data_dtor_base.863" }
%"class.absl::optional_internal::optional_data_dtor_base.863" = type { i8, %union.anon.864 }
%union.anon.864 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.906 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.907", i64, %"class.WTF::Vector.909", %"class.WTF::Vector.914" }
%"class.WTF::RefCounted.907" = type { %"class.base::RefCounted.908" }
%"class.base::RefCounted.908" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.911" }
%"class.WTF::VectorBufferBase.911" = type { i8*, i32, i32 }
%"class.WTF::Vector.914" = type { %"class.WTF::VectorBuffer.915" }
%"class.WTF::VectorBuffer.915" = type { %"class.WTF::VectorBufferBase.916" }
%"class.WTF::VectorBufferBase.916" = type { %"class.std::__1::unique_ptr.917"*, i32, i32 }
%"class.std::__1::unique_ptr.917" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.920" }
%"class.std::__1::__tree.920" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.921", %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.blink::HeapHashMap.929" = type { %"class.WTF::HashMap.932" }
%"class.WTF::HashMap.932" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"struct.WTF::KeyValuePair.935"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.935" = type opaque
%"class.blink::HeapVector.936" = type { %"class.WTF::Vector.939" }
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941" }
%"class.WTF::VectorBufferBase.941" = type { %"class.blink::Member.942"*, i32, i32 }
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.636", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.229, %"class.base::WeakPtrFactory.946" }
%"class.base::WeakPtrFactory.946" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.636" = type { %"class.blink::MemberBase.629" }
%"class.blink::HeapHashMap.947" = type { %"class.WTF::HashMap.950" }
%"class.WTF::HashMap.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"struct.WTF::KeyValuePair.953"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.953" = type opaque
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { %class.scoped_refptr.957*, i32, i32 }
%class.scoped_refptr.957 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.960" = type { %"class.WTF::HashSet.963" }
%"class.WTF::HashSet.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"class.blink::Member.904"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.WTF::HashSet.969"* }
%"class.WTF::HashSet.969" = type opaque
%"class.base::WeakPtr.730" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.973" }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.977" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.630" = type { %"class.WTF::HashSet.633" }
%"class.WTF::HashSet.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"class.blink::WeakMember.636"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.637 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.638", [4 x i8] }>
%"class.base::RefCounted.638" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.641" = type { %"class.blink::MemberBase.642" }
%"class.blink::MemberBase.642" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.WTF::Vector.562" = type { %"class.WTF::VectorBuffer.563" }
%"class.WTF::VectorBuffer.563" = type { %"class.WTF::VectorBufferBase.564" }
%"class.WTF::VectorBufferBase.564" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.565" }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.568", %"class.WTF::HashMap.575", %"class.WTF::HashMap.580", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.585", i32, %"class.mojo::StructPtr.590", %"class.WTF::Vector.585" }
%"class.mojo::StructPtr.568" = type { %"class.std::__1::unique_ptr.569" }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type opaque
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.584" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.590" = type { %"class.std::__1::unique_ptr.591" }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.585", i8, i8, [6 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.643", i32, [4 x i8] }>
%"class.std::__1::bitset.643" = type { %"class.std::__1::__bitset.644" }
%"class.std::__1::__bitset.644" = type { [25 x i64] }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.649" = type { %"class.blink::PersistentBase.650" }
%"class.blink::PersistentBase.650" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.651 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.657" = type { %"class.WTF::HashTable.658" }
%"class.WTF::HashTable.658" = type <{ %"class.std::__1::unique_ptr.661"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.661" = type opaque
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.985" }
%"class.v8::MeasureMemoryDelegate" = type { i32 (...)** }
%"class.blink::V8WorkerMemoryReporter" = type { %"struct.blink::V8WorkerMemoryReporter::Result", %"class.base::OnceCallback", i32, i32, i32, i32, %"class.base::WeakPtrFactory" }
%"struct.blink::V8WorkerMemoryReporter::Result" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, i32, i32 }
%"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage" = type { %"class.blink::MultiToken", i64, %"class.blink::KURL" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate" = type <{ %"class.v8::MeasureMemoryDelegate", %"class.base::WeakPtr", %"class.blink::WorkerThread"*, i8, [7 x i8] }>
%"class.v8::Context" = type { i8 }
%"class.std::__1::vector.1054" = type { %"class.std::__1::__vector_base.1055" }
%"class.std::__1::__vector_base.1055" = type { %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"*, %"class.std::__1::__compressed_pair.1057" }
%"struct.std::__1::pair.1056" = type { %"class.v8::Local", i64 }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.std::__1::pair.1056"* }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.1062", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.1077", %"class.blink::Member.1095", %"class.blink::Member.1097", %"class.blink::Member.1113", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.1115", i32, %"class.blink::Member.1122", %"class.std::__1::unique_ptr.1124", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.1304", %"class.absl::optional.1308", i32, %"class.std::__1::unique_ptr.1314", %"class.std::__1::unique_ptr.1320", i64 }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1062" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1063" }
%"class.blink::HeapHashMap.1063" = type { %"class.WTF::HashMap.1066" }
%"class.WTF::HashMap.1066" = type { %"class.WTF::HashTable.1067" }
%"class.WTF::HashTable.1067" = type <{ %"struct.WTF::KeyValuePair.1069"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1069" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.1070", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1080", %"class.WTF::HashMap.1080", %"class.std::__1::unique_ptr.1085" }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1084" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.WTF::Vector.1088"* }
%"class.WTF::Vector.1088" = type opaque
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.1100" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1099", %"class.WTF::Vector.585", i8 }>
%"class.blink::WeakMember.1099" = type { %"class.blink::MemberBase.523" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1099" }
%"class.blink::Supplementable.1100" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1101" }
%"class.blink::HeapHashMap.1101" = type { %"class.WTF::HashMap.1104" }
%"class.WTF::HashMap.1104" = type { %"class.WTF::HashTable.1105" }
%"class.WTF::HashTable.1105" = type <{ %"struct.WTF::KeyValuePair.1107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1107" = type { i8*, %"class.blink::Member.1108" }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::Supplement.1110"* }
%"class.blink::Supplement.1110" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1111" }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.1113" = type { %"class.blink::MemberBase.1114" }
%"class.blink::MemberBase.1114" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.1293" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1287" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1130, %"class.std::__1::unique_ptr.1242", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1132, i32 }>
%class.scoped_refptr.1130 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1132, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1208", %"class.absl::optional.1213", %"class.absl::optional.1165", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1233", i8, [7 x i8], %class.scoped_refptr.1132, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1131" }>
%"class.base::RefCountedThreadSafe.1131" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1133", %"class.std::__1::unique_ptr.1139", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1145" }
%"class.std::__1::unique_ptr.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1145" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.985", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1132, %"class.std::__1::unique_ptr.1146", %"class.absl::optional.1155", %"struct.std::__1::atomic.439", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1165", %"class.std::__1::unique_ptr.1170", i8, i64, %class.scoped_refptr.1204, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1206", %"class.base::WeakPtrFactory.1207" }
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1132, i8, %"class.mojo::ScopedHandleBase.1149", %class.scoped_refptr.1150, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.1151" }
%"class.mojo::ScopedHandleBase.1149" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1150 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.1151" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1155" = type { %"class.absl::optional_internal::optional_data.1156" }
%"class.absl::optional_internal::optional_data.1156" = type { %"class.absl::optional_internal::optional_data_base.1157" }
%"class.absl::optional_internal::optional_data_base.1157" = type { %"class.absl::optional_internal::optional_data_dtor_base.1158" }
%"class.absl::optional_internal::optional_data_dtor_base.1158" = type { i8, %union.anon.1159 }
%union.anon.1159 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1160", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1160" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1173", i8, i64, %class.scoped_refptr.1174, %class.scoped_refptr.1199 }
%"class.base::RepeatingCallback.1173" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1174 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1175", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1177", %"class.std::__1::map.1188", i8, [7 x i8] }>
%"class.base::RefCounted.1175" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1176 }
%class.scoped_refptr.1176 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1177" = type { %"class.std::__1::__tree.1178" }
%"class.std::__1::__tree.1178" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1179", %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1179" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::map.1188" = type { %"class.std::__1::__tree.1189" }
%"class.std::__1::__tree.1189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1190", %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%class.scoped_refptr.1199 = type { %"class.base::RefCountedData.1200"* }
%"class.base::RefCountedData.1200" = type opaque
%class.scoped_refptr.1204 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1205 }
%class.scoped_refptr.1205 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1547", [4 x i8], %"class.base::RepeatingCallback.1245", %class.scoped_refptr.1132, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.2", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1547" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.1245" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr.1206" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1207" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1208" = type { %"class.absl::optional_internal::optional_data.1209" }
%"class.absl::optional_internal::optional_data.1209" = type { %"class.absl::optional_internal::optional_data_base.1210" }
%"class.absl::optional_internal::optional_data_base.1210" = type { %"class.absl::optional_internal::optional_data_dtor_base.1211" }
%"class.absl::optional_internal::optional_data_dtor_base.1211" = type { i8, %union.anon.1212 }
%union.anon.1212 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1213" = type { %"class.absl::optional_internal::optional_data.1214" }
%"class.absl::optional_internal::optional_data.1214" = type { %"class.absl::optional_internal::optional_data_base.1215" }
%"class.absl::optional_internal::optional_data_base.1215" = type { %"class.absl::optional_internal::optional_data_dtor_base.1216" }
%"class.absl::optional_internal::optional_data_dtor_base.1216" = type { i8, [7 x i8], %union.anon.1217 }
%union.anon.1217 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1165" = type { %"class.absl::optional_internal::optional_data.1166" }
%"class.absl::optional_internal::optional_data.1166" = type { %"class.absl::optional_internal::optional_data_base.1167" }
%"class.absl::optional_internal::optional_data_base.1167" = type { %"class.absl::optional_internal::optional_data_dtor_base.1168" }
%"class.absl::optional_internal::optional_data_dtor_base.1168" = type { i8, %union.anon.1169 }
%union.anon.1169 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1218 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1218 = type { %"class.std::__1::map.1221" }
%"class.std::__1::map.1221" = type { %"class.std::__1::__tree.1222" }
%"class.std::__1::__tree.1222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1223", %"class.std::__1::__compressed_pair.1227" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1227" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1232"*, i64 }
%"class.std::__1::unique_ptr.1232" = type opaque
%"class.std::__1::map.1233" = type { %"class.std::__1::__tree.1234" }
%"class.std::__1::__tree.1234" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1235", %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::unique_ptr.1242" = type { %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1245", %"class.base::OnceCallback.1246", %"class.absl::optional.816", %"class.absl::optional.1247", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1254", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1262", %"class.std::__1::map.1273", i64, %"class.base::OnceCallback.985", %"class.base::OnceCallback.1282", i8, %class.scoped_refptr.1132, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1283" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.1246" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1247" = type { %"class.absl::optional_internal::optional_data.1248" }
%"class.absl::optional_internal::optional_data.1248" = type { %"class.absl::optional_internal::optional_data_base.1249" }
%"class.absl::optional_internal::optional_data_base.1249" = type { %"class.absl::optional_internal::optional_data_dtor_base.1250" }
%"class.absl::optional_internal::optional_data_dtor_base.1250" = type { i8, %union.anon.1251 }
%union.anon.1251 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.985" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1132, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1252" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.1252" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1253 }
%class.scoped_refptr.1253 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1257", %class.scoped_refptr.1258 }
%"class.base::RepeatingCallback.1257" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1258 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1131", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.1262" = type { %"class.std::__1::__tree.1263" }
%"class.std::__1::__tree.1263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1264", %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.std::__1::map.1273" = type { %"class.std::__1::__tree.1274" }
%"class.std::__1::__tree.1274" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1275", %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.base::OnceCallback.1282" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.985" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1283" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.1132 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.1293" = type { %"class.std::__1::__tree.1294" }
%"class.std::__1::__tree.1294" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1295", %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.880", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.absl::optional.1308" = type { %"class.absl::optional_internal::optional_data.1309" }
%"class.absl::optional_internal::optional_data.1309" = type { %"class.absl::optional_internal::optional_data_base.1310" }
%"class.absl::optional_internal::optional_data_base.1310" = type { %"class.absl::optional_internal::optional_data_dtor_base.1311" }
%"class.absl::optional_internal::optional_data_dtor_base.1311" = type { i8, [7 x i8], %union.anon.1312 }
%union.anon.1312 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.1313", i8, [7 x i8] }>
%"struct.std::__1::pair.1313" = type { i64, i64 }
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.1323", %"class.mojo::ScopedHandleBase.1521", %"class.mojo::StructPtr.1522", %"class.std::__1::vector.1530", %"class.std::__1::vector.1537" }
%"class.mojo::StructPtr.1323" = type { %"class.std::__1::unique_ptr.1324" }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.1327, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.1342", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.1358", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.1364", %"class.std::__1::vector.1371", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.860", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.1406", %"class.absl::optional.1507", %"class.absl::optional.821", %"class.std::__1::vector.1371", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.1327 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.1328", %"class.std::__1::vector.1329", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.1328" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.1329" = type { %"class.std::__1::__vector_base.1330" }
%"class.std::__1::__vector_base.1330" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.1331" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.1342" = type { %"class.std::__1::unique_ptr.1343" }
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.1346", %"class.std::__1::vector.1346", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.1346" = type { %"class.std::__1::__vector_base.1347" }
%"class.std::__1::__vector_base.1347" = type { %"class.mojo::InlinedStructPtr.1348"*, %"class.mojo::InlinedStructPtr.1348"*, %"class.std::__1::__compressed_pair.1350" }
%"class.mojo::InlinedStructPtr.1348" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.mojo::InlinedStructPtr.1348"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.1358" = type { %"class.std::__1::__vector_base.1359" }
%"class.std::__1::__vector_base.1359" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %class.GURL* }
%"class.absl::optional.1364" = type { %"class.absl::optional_internal::optional_data.1365" }
%"class.absl::optional_internal::optional_data.1365" = type { %"class.absl::optional_internal::optional_data_base.1366" }
%"class.absl::optional_internal::optional_data_base.1366" = type { %"class.absl::optional_internal::optional_data_dtor_base.1367" }
%"class.absl::optional_internal::optional_data_dtor_base.1367" = type { i8, [7 x i8], %union.anon.1368 }
%union.anon.1368 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.1369, %class.scoped_refptr.1369, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.1389", %"class.std::__1::basic_string", %"class.std::__1::vector.1397", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.1369 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.1370", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.1378", %"class.std::__1::vector.1382" }
%"class.base::RefCountedThreadSafe.1370" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.1371", %"class.std::__1::vector.1371", %"class.std::__1::vector.1371", %"class.std::__1::vector.1371" }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.1382" = type { %"class.std::__1::__vector_base.1383" }
%"class.std::__1::__vector_base.1383" = type { %"class.std::__1::unique_ptr.1378"*, %"class.std::__1::unique_ptr.1378"*, %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.std::__1::unique_ptr.1378"* }
%"class.std::__1::vector.1389" = type { %"class.std::__1::__vector_base.1390" }
%"class.std::__1::__vector_base.1390" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.1392" }
%"class.net::HashValue" = type { i32, %union.anon.1391 }
%union.anon.1391 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1392" = type { %"struct.std::__1::__compressed_pair_elem.1393" }
%"struct.std::__1::__compressed_pair_elem.1393" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.1397" = type { %"class.std::__1::__vector_base.1398" }
%"class.std::__1::__vector_base.1398" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.1401" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.1399, i32, [4 x i8] }>
%class.scoped_refptr.1399 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.1400", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.1400" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.1406" = type { %"class.std::__1::unique_ptr.1407" }
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.1410", %"class.mojo::StructPtr.1459", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.1471", %"class.base::TimeDelta", %"class.absl::optional.1471", i32, [4 x i8], %"class.std::__1::vector.1483", %"class.mojo::StructPtr.1497", i8, [7 x i8] }>
%"class.std::__1::vector.1410" = type { %"class.std::__1::__vector_base.1411" }
%"class.std::__1::__vector_base.1411" = type { %"class.mojo::StructPtr.1412"*, %"class.mojo::StructPtr.1412"*, %"class.std::__1::__compressed_pair.1454" }
%"class.mojo::StructPtr.1412" = type { %"class.std::__1::unique_ptr.1413" }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1416", %"class.base::flat_map", %"class.base::flat_map.1432", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1442", i8, %"class.std::__1::vector.1371", i32, %"class.mojo::StructPtr.1444", %"class.std::__1::vector.1371" }
%"class.mojo::StructPtr.1416" = type { %"class.std::__1::unique_ptr.1417" }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1423" }
%"class.base::internal::flat_tree.1423" = type { %"class.std::__1::vector.1424" }
%"class.std::__1::vector.1424" = type { %"class.std::__1::__vector_base.1425" }
%"class.std::__1::__vector_base.1425" = type { %"struct.std::__1::pair.1426"*, %"struct.std::__1::pair.1426"*, %"class.std::__1::__compressed_pair.1427" }
%"struct.std::__1::pair.1426" = type opaque
%"class.std::__1::__compressed_pair.1427" = type { %"struct.std::__1::__compressed_pair_elem.1428" }
%"struct.std::__1::__compressed_pair_elem.1428" = type { %"struct.std::__1::pair.1426"* }
%"class.base::flat_map.1432" = type { %"class.base::internal::flat_tree.1433" }
%"class.base::internal::flat_tree.1433" = type { %"class.std::__1::vector.1434" }
%"class.std::__1::vector.1434" = type { %"class.std::__1::__vector_base.1435" }
%"class.std::__1::__vector_base.1435" = type { %"struct.std::__1::pair.1436"*, %"struct.std::__1::pair.1436"*, %"class.std::__1::__compressed_pair.1437" }
%"struct.std::__1::pair.1436" = type opaque
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"struct.std::__1::pair.1436"* }
%"class.mojo::InlinedStructPtr.1442" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.1444" = type { %"class.std::__1::unique_ptr.1445" }
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.1371", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.1455" }
%"struct.std::__1::__compressed_pair_elem.1455" = type { %"class.mojo::StructPtr.1412"* }
%"class.mojo::StructPtr.1459" = type { %"class.std::__1::unique_ptr.1460" }
%"class.std::__1::unique_ptr.1460" = type { %"class.std::__1::__compressed_pair.1461" }
%"class.std::__1::__compressed_pair.1461" = type { %"struct.std::__1::__compressed_pair_elem.1462" }
%"struct.std::__1::__compressed_pair_elem.1462" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1466", i32, %"class.absl::optional.1466" }
%"class.absl::optional.1466" = type { %"class.absl::optional_internal::optional_data.1467" }
%"class.absl::optional_internal::optional_data.1467" = type { %"class.absl::optional_internal::optional_data_base.1468" }
%"class.absl::optional_internal::optional_data_base.1468" = type { %"class.absl::optional_internal::optional_data_dtor_base.1469" }
%"class.absl::optional_internal::optional_data_dtor_base.1469" = type { i8, %union.anon.1470 }
%union.anon.1470 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1466", i32, %"class.absl::optional.1466" }
%"class.absl::optional.1471" = type { %"class.absl::optional_internal::optional_data.1472" }
%"class.absl::optional_internal::optional_data.1472" = type { %"class.absl::optional_internal::optional_data_base.1473" }
%"class.absl::optional_internal::optional_data_base.1473" = type { %"class.absl::optional_internal::optional_data_dtor_base.1474" }
%"class.absl::optional_internal::optional_data_dtor_base.1474" = type { i8, %union.anon.1475 }
%union.anon.1475 = type { %"class.std::__1::vector.1476" }
%"class.std::__1::vector.1476" = type { %"class.std::__1::__vector_base.1477" }
%"class.std::__1::__vector_base.1477" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { i32* }
%"class.std::__1::vector.1483" = type { %"class.std::__1::__vector_base.1484" }
%"class.std::__1::__vector_base.1484" = type { %"class.mojo::StructPtr.1485"*, %"class.mojo::StructPtr.1485"*, %"class.std::__1::__compressed_pair.1492" }
%"class.mojo::StructPtr.1485" = type { %"class.std::__1::unique_ptr.1486" }
%"class.std::__1::unique_ptr.1486" = type { %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1466" }
%"class.std::__1::__compressed_pair.1492" = type { %"struct.std::__1::__compressed_pair_elem.1493" }
%"struct.std::__1::__compressed_pair_elem.1493" = type { %"class.mojo::StructPtr.1485"* }
%"class.mojo::StructPtr.1497" = type { %"class.std::__1::unique_ptr.1498" }
%"class.std::__1::unique_ptr.1498" = type { %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.1371"* }
%"class.absl::optional.1507" = type { %"class.absl::optional_internal::optional_data.1508" }
%"class.absl::optional_internal::optional_data.1508" = type { %"class.absl::optional_internal::optional_data_base.1509" }
%"class.absl::optional_internal::optional_data_base.1509" = type { %"class.absl::optional_internal::optional_data_dtor_base.1510" }
%"class.absl::optional_internal::optional_data_dtor_base.1510" = type { i8, %union.anon.1511 }
%union.anon.1511 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1512" }
%"class.std::__1::unique_ptr.1512" = type { %"class.std::__1::__compressed_pair.1513" }
%"class.std::__1::__compressed_pair.1513" = type { %"struct.std::__1::__compressed_pair_elem.1514" }
%"struct.std::__1::__compressed_pair_elem.1514" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.1371", %"class.absl::optional.1466", %"class.std::__1::vector.1371", %"class.std::__1::vector.1371" }
%"class.std::__1::vector.1371" = type { %"class.std::__1::__vector_base.1372" }
%"class.std::__1::__vector_base.1372" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.1336" }
%"class.std::__1::unique_ptr.1336" = type { %"class.std::__1::__compressed_pair.1337" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"class.mojo::ScopedHandleBase.1521" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.1522" = type { %"class.std::__1::unique_ptr.1523" }
%"class.std::__1::unique_ptr.1523" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.1526", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.1526" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1530" = type { %"class.std::__1::__vector_base.1531" }
%"class.std::__1::__vector_base.1531" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1532" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1532" = type { %"struct.std::__1::__compressed_pair_elem.1533" }
%"struct.std::__1::__compressed_pair_elem.1533" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1537" = type { %"class.std::__1::__vector_base.1538" }
%"class.std::__1::__vector_base.1538" = type { %"class.mojo::StructPtr.1323"*, %"class.mojo::StructPtr.1323"*, %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"class.mojo::StructPtr.1323"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink12WorkerThread22CallOnAllWorkerThreadsIPFvPS0_N4base7WeakPtrINS_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJS6_RS8_EEEjT_NS_8TaskTypeEDpOT0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS3_17WorkerMemoryUsageENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink12WorkerThreadENS_7WeakPtrINS3_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES8_SA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPN5blink12WorkerThreadENS_7WeakPtrINS2_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES7_S9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEmm = comdat any

@_ZN5blink22V8WorkerMemoryReporter8kTimeoutE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 60000000 }, align 8
@.str = private unnamed_addr constant [15 x i8] c"GetMemoryUsage\00", align 1
@.str.1 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/controller/performance_manager/v8_worker_memory_reporter.cc\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"NotifyMeasurementSuccess\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"NotifyMeasurementFailure\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"CallOnAllWorkerThreads\00", align 1
@.str.7 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/core/workers/worker_thread.h\00", align 1
@_ZTVN5blink12_GLOBAL__N_125WorkerMeasurementDelegateE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*)* @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegateD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*)* @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegateD0Ev to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*, %"class.v8::Context"*)* @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegate13ShouldMeasureEN2v85LocalINS2_7ContextEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*, %"class.std::__1::vector.1054"*, i64)* @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegate19MeasurementCompleteERKNSt3__16vectorINS2_4pairIN2v85LocalINS5_7ContextEEEmEENS2_9allocatorIS9_EEEEm to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::V8WorkerMemoryReporter::WorkerMemoryUsage]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter14GetMemoryUsageEN4base12OnceCallbackIFvRKNS0_6ResultEEEEN2v822MeasureMemoryExecutionE(%"class.base::OnceCallback"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback.985", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::OnceCallback.985", align 8
  store i32 %1, i32* %4, align 4
  %11 = tail call i8* @_Znwm(i64 56) #8
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #9
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast i8* %15 to i64*
  store i64 %14, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 24
  %19 = getelementptr inbounds i8, i8* %11, i64 40
  %20 = bitcast i8* %19 to %"class.base::internal::WeakPtrFactoryBase"*
  %21 = ptrtoint i8* %11 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #9
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %20, i64 %21) #9
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #9
  %23 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9, !noalias !2
  %25 = bitcast i8* %19 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %25) #9, !noalias !2
  %26 = getelementptr inbounds i8, i8* %11, i64 48
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !2
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %28) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9, !noalias !2
  %30 = call i32 @_ZN5blink12WorkerThread22CallOnAllWorkerThreadsIPFvPS0_N4base7WeakPtrINS_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJS6_RS8_EEEjT_NS_8TaskTypeEDpOT0_(void (%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32)* nonnull @_ZN5blink22V8WorkerMemoryReporter16StartMeasurementEPNS_12WorkerThreadEN4base7WeakPtrIS0_EEN2v822MeasureMemoryExecutionE, i8 zeroext 23, %"class.base::WeakPtr"* nonnull dereferenceable(16) %6, i32* nonnull dereferenceable(4) %4)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %59

32:                                               ; preds = %2
  %33 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %34 = bitcast %"class.blink::Thread"* %33 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %35 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %35, i64 3
  %37 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %36, align 8
  %38 = call %"class.base::SingleThreadTaskRunner"* %37(%"class.blink::Thread"* %33) #9
  %39 = bitcast %"class.base::SingleThreadTaskRunner"* %38 to %"class.base::TaskRunner"*
  %40 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1, i64 0, i64 0), i32 149) #9
  %41 = call i8* @_Znwm(i64 56) #8, !noalias !7
  %42 = bitcast i8* %41 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %42, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !7
  %43 = getelementptr inbounds i8, i8* %41, i64 32
  %44 = bitcast i8* %43 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::V8WorkerMemoryReporter"*)* @_ZN5blink22V8WorkerMemoryReporter14InvokeCallbackEv to i64), i64 0>, <2 x i64>* %44, align 8, !noalias !7
  %45 = getelementptr inbounds i8, i8* %41, i64 48
  %46 = bitcast i8* %45 to i64*
  store i64 %21, i64* %46, align 8, !noalias !7
  %47 = bitcast %"class.base::OnceCallback.985"* %8 to i8**
  store i8* %41, i8** %47, align 8, !alias.scope !7
  %48 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %39, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.985"* nonnull %8) #9
  %49 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #9
  %50 = icmp eq %"class.base::SingleThreadTaskRunner"* %38, null
  br i1 %50, label %91, label %51

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %38, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %91

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe.230"* %57 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %58) #9
  br label %91

59:                                               ; preds = %2
  %60 = getelementptr inbounds i8, i8* %11, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 %30, i32* %61, align 4
  %62 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %63 = bitcast %"class.blink::Thread"* %62 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %64 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %63, align 8
  %65 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %64, i64 3
  %66 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %65, align 8
  %67 = call %"class.base::SingleThreadTaskRunner"* %66(%"class.blink::Thread"* %62) #9
  %68 = bitcast %"class.base::SingleThreadTaskRunner"* %67 to %"class.base::TaskRunner"*
  %69 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1, i64 0, i64 0), i32 156) #9
  %70 = call i8* @_Znwm(i64 56) #8, !noalias !14
  %71 = bitcast i8* %70 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %71, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !14
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::V8WorkerMemoryReporter"*)* @_ZN5blink22V8WorkerMemoryReporter9OnTimeoutEv to i64), i64 0>, <2 x i64>* %73, align 8, !noalias !14
  %74 = getelementptr inbounds i8, i8* %70, i64 48
  %75 = bitcast i8* %74 to i64*
  store i64 %21, i64* %75, align 8, !noalias !14
  %76 = bitcast %"class.base::OnceCallback.985"* %10 to i8**
  store i8* %70, i8** %76, align 8, !alias.scope !14
  %77 = bitcast %"class.base::SingleThreadTaskRunner"* %67 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)***
  %78 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*** %77, align 8
  %79 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)** %78, align 8
  %80 = call zeroext i1 %79(%"class.base::TaskRunner"* %68, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback.985"* nonnull %10, i64 60000000) #9
  %81 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %81) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #9
  %82 = icmp eq %"class.base::SingleThreadTaskRunner"* %67, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %59
  %84 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %67, i64 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw sub i32* %85, i32 1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %84, i64 -2
  %90 = bitcast %"class.base::RefCountedThreadSafe.230"* %89 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %90) #9
  br label %91

91:                                               ; preds = %32, %51, %56, %59, %83, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink12WorkerThread22CallOnAllWorkerThreadsIPFvPS0_N4base7WeakPtrINS_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJS6_RS8_EEEjT_NS_8TaskTypeEDpOT0_(void (%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32)*, i8 zeroext, %"class.base::WeakPtr"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::OnceCallback.985", align 8
  %6 = alloca %"class.base::OnceCallback.985", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = alloca %"class.base::OnceCallback.985", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %12 = ptrtoint void (%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32)* %0 to i64
  %13 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink12WorkerThread14ThreadSetMutexEv() #9
  %14 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %13, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %14) #9
  %15 = tail call dereferenceable(24) %"class.WTF::HashSet.653"* @_ZN5blink12WorkerThread13WorkerThreadsEv() #9
  %16 = getelementptr inbounds %"class.WTF::HashSet.653", %"class.WTF::HashSet.653"* %15, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::HashSet.653", %"class.WTF::HashSet.653"* %15, i64 0, i32 0, i32 0
  %20 = load %"class.blink::WorkerThread"**, %"class.blink::WorkerThread"*** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::HashSet.653", %"class.WTF::HashSet.653"* %15, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %20, i64 %23
  br i1 %18, label %60, label %25

25:                                               ; preds = %4
  %26 = icmp eq i32 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"class.blink::WorkerThread"** [ %32, %31 ], [ %20, %25 ]
  %29 = bitcast %"class.blink::WorkerThread"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  switch i64 %30, label %34 [
    i64 -1, label %31
    i64 0, label %31
  ]

31:                                               ; preds = %27, %27
  %32 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %28, i64 1
  %33 = icmp eq %"class.blink::WorkerThread"** %32, %24
  br i1 %33, label %60, label %27

34:                                               ; preds = %27, %25
  %35 = phi %"class.blink::WorkerThread"** [ %20, %25 ], [ %28, %27 ]
  %36 = icmp eq %"class.blink::WorkerThread"** %35, %24
  br i1 %36, label %60, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.base::Location"* %10 to i8*
  %39 = bitcast %"class.base::OnceCallback.985"* %6 to i8*
  %40 = bitcast %"class.base::WeakPtr"* %7 to i8*
  %41 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %45 = bitcast %"class.base::OnceCallback.985"* %5 to i8*
  %46 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %6, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %5, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::CrossThreadOnceFunction"* %11 to i64*
  %49 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %5, i64 0, i32 0
  %50 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %6, i64 0, i32 0
  %51 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  %52 = bitcast %"class.base::OnceCallback.985"* %8 to i8*
  %53 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i8*
  %54 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.base::OnceCallback.985"* %8 to i64*
  %57 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %8, i64 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %11, i64 0, i32 0, i32 0
  br label %62

60:                                               ; preds = %31, %99, %110, %107, %4, %34
  %61 = phi i32 [ 0, %34 ], [ 0, %4 ], [ %100, %107 ], [ %100, %110 ], [ %100, %99 ], [ 0, %31 ]
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %14) #9
  ret i32 %61

62:                                               ; preds = %37, %110
  %63 = phi i32 [ 0, %37 ], [ %100, %110 ]
  %64 = phi %"class.blink::WorkerThread"** [ %35, %37 ], [ %104, %110 ]
  %65 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %64, align 8
  %66 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %65, i8 zeroext %1) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i32 213) #9
  %67 = ptrtoint %"class.blink::WorkerThread"* %65 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9, !noalias !21
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %41, %"class.base::internal::WeakReference"* dereferenceable(8) %42) #9, !noalias !21
  %68 = load i64, i64* %44, align 8, !noalias !24
  store i64 %68, i64* %43, align 8, !alias.scope !27, !noalias !21
  %69 = load i32, i32* %3, align 4, !noalias !21
  %70 = call i8* @_Znwm(i64 72) #8, !noalias !28
  %71 = bitcast i8* %70 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %71, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink12WorkerThreadENS_7WeakPtrINS3_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES8_SA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPN5blink12WorkerThreadENS_7WeakPtrINS2_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES7_S9_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !28
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to i64*
  store i64 %12, i64* %73, align 8, !noalias !28
  %74 = getelementptr inbounds i8, i8* %70, i64 40
  %75 = bitcast i8* %74 to i64*
  store i64 %67, i64* %75, align 8, !noalias !28
  %76 = getelementptr inbounds i8, i8* %70, i64 48
  %77 = bitcast i8* %76 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %77, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %41) #9, !noalias !28
  %78 = getelementptr inbounds i8, i8* %70, i64 56
  %79 = bitcast i8* %78 to i64*
  %80 = load i64, i64* %43, align 8, !noalias !28
  store i64 %80, i64* %79, align 8, !noalias !28
  %81 = getelementptr inbounds i8, i8* %70, i64 64
  %82 = bitcast i8* %81 to i32*
  store i32 %69, i32* %82, align 4, !noalias !28
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9, !noalias !21
  %83 = ptrtoint i8* %70 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %46, align 8, !noalias !33
  store i64 %83, i64* %48, align 8, !alias.scope !33
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8, !noalias !33
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #9, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9, !noalias !21
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #9, !noalias !21
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %51) #9, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %84 = bitcast %"class.base::SingleThreadTaskRunner"* %66 to %"class.base::TaskRunner"*
  %85 = load i64, i64* %48, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %54, align 8
  store i64 %85, i64* %56, align 8, !alias.scope !36
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8, !noalias !36
  %86 = bitcast %"class.base::SingleThreadTaskRunner"* %66 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)***
  %87 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*** %86, align 8
  %88 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)** %87, align 8
  %89 = call zeroext i1 %88(%"class.base::TaskRunner"* %84, %"class.base::Location"* nonnull dereferenceable(32) %10, %"class.base::OnceCallback.985"* nonnull %8, i64 0) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %57) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %58) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #9
  %90 = icmp eq %"class.base::SingleThreadTaskRunner"* %66, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %62
  %92 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %66, i64 0, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw sub i32* %93, i32 1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %92, i64 -2
  %98 = bitcast %"class.base::RefCountedThreadSafe.230"* %97 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %98) #9
  br label %99

99:                                               ; preds = %62, %91, %96
  %100 = add i32 %63, 1
  %101 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %64, i64 1
  %102 = icmp eq %"class.blink::WorkerThread"** %101, %24
  br i1 %102, label %60, label %103

103:                                              ; preds = %99, %107
  %104 = phi %"class.blink::WorkerThread"** [ %108, %107 ], [ %101, %99 ]
  %105 = bitcast %"class.blink::WorkerThread"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  switch i64 %106, label %110 [
    i64 -1, label %107
    i64 0, label %107
  ]

107:                                              ; preds = %103, %103
  %108 = getelementptr inbounds %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %104, i64 1
  %109 = icmp eq %"class.blink::WorkerThread"** %108, %24
  br i1 %109, label %60, label %103

110:                                              ; preds = %103
  %111 = icmp eq %"class.blink::WorkerThread"** %104, %24
  br i1 %111, label %60, label %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter16StartMeasurementEPNS_12WorkerThreadEN4base7WeakPtrIS0_EEN2v822MeasureMemoryExecutionE(%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32) #0 align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = tail call %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"* %0) #9
  %7 = tail call %"class.v8::Isolate"* @_ZN5blink12WorkerThread10GetIsolateEv(%"class.blink::WorkerThread"* %0) #9
  %8 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %6, i64 0, i32 1
  %9 = bitcast %"class.blink::ExecutionContext.base"* %8 to %"class.blink::ExecutionContext"*
  %10 = bitcast %"class.blink::ExecutionContext.base"* %8 to i1 (%"class.blink::ExecutionContext"*)***
  %11 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, i64 3
  %13 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ExecutionContext"* %9) #9
  br i1 %14, label %15, label %36

15:                                               ; preds = %3
  %16 = ptrtoint %"class.blink::WorkerThread"* %0 to i64
  %17 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = tail call i8* @_Znwm(i64 40) #8
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %19, %"class.base::internal::WeakReference"* dereferenceable(8) %20) #9
  %21 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %21, align 8
  %24 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125WorkerMeasurementDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 8
  %26 = bitcast i8* %25 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #9
  %27 = getelementptr inbounds i8, i8* %18, i64 16
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %21, align 8
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %18, i64 24
  %31 = bitcast i8* %30 to i64*
  store i64 %16, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %18, i64 32
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  %34 = bitcast i8* %18 to %"class.v8::MeasureMemoryDelegate"*
  %35 = call zeroext i1 @_ZN2v87Isolate13MeasureMemoryENSt3__110unique_ptrINS_21MeasureMemoryDelegateENS1_14default_deleteIS3_EEEENS_22MeasureMemoryExecutionE(%"class.v8::Isolate"* %7, %"class.v8::MeasureMemoryDelegate"* nonnull %34, i32 %2) #9
  br label %43

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %37, %"class.base::internal::WeakReference"* dereferenceable(8) %38) #9
  %39 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  call void @_ZN5blink22V8WorkerMemoryReporter24NotifyMeasurementFailureEPNS_12WorkerThreadEN4base7WeakPtrIS0_EE(%"class.blink::WorkerThread"* undef, %"class.base::WeakPtr"* nonnull %5)
  %42 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %42) #9
  br label %43

43:                                               ; preds = %36, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.985"*) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter14InvokeCallbackEv(%"class.blink::V8WorkerMemoryReporter"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0
  %5 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, %"struct.blink::V8WorkerMemoryReporter::Result"* dereferenceable(16) %4) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %15 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 2
  store i32 1, i32* %15, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink22V8WorkerMemoryReporter14SetWorkerCountEj(%"class.blink::V8WorkerMemoryReporter"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter9OnTimeoutEv(%"class.blink::V8WorkerMemoryReporter"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %15 = inttoptr i64 %12 to %"class.base::internal::BindStateBase"*
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)**
  %18 = load void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* %15, %"struct.blink::V8WorkerMemoryReporter::Result"* dereferenceable(16) %8) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  store i32 1, i32* %3, align 8
  br label %19

19:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"*) local_unnamed_addr #4

declare %"class.v8::Isolate"* @_ZN5blink12WorkerThread10GetIsolateEv(%"class.blink::WorkerThread"*) local_unnamed_addr #4

declare zeroext i1 @_ZN2v87Isolate13MeasureMemoryENSt3__110unique_ptrINS_21MeasureMemoryDelegateENS1_14default_deleteIS3_EEEENS_22MeasureMemoryExecutionE(%"class.v8::Isolate"*, %"class.v8::MeasureMemoryDelegate"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter24NotifyMeasurementFailureEPNS_12WorkerThreadEN4base7WeakPtrIS0_EE(%"class.blink::WorkerThread"* nocapture readnone, %"class.base::WeakPtr"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.985", align 8
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca %"class.base::OnceCallback.985", align 8
  %6 = alloca %"class.base::OnceCallback.985", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #9
  %11 = bitcast %"class.blink::Thread"* %10 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %12, i64 3
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %13, align 8
  %15 = tail call %"class.base::SingleThreadTaskRunner"* %14(%"class.blink::Thread"* %10) #9
  %16 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1, i64 0, i64 0), i32 203) #9
  %17 = bitcast %"class.base::OnceCallback.985"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9, !noalias !39
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %19, %"class.base::internal::WeakReference"* dereferenceable(8) %20) #9, !noalias !39
  %21 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !42
  store i64 %23, i64* %21, align 8, !alias.scope !45, !noalias !39
  %24 = call i8* @_Znwm(i64 64) #8, !noalias !46
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !46
  %26 = getelementptr inbounds i8, i8* %24, i64 32
  %27 = bitcast i8* %26 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::V8WorkerMemoryReporter"*)* @_ZN5blink22V8WorkerMemoryReporter20OnMeasurementFailureEv to i64), i64 0>, <2 x i64>* %27, align 8, !noalias !46
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %29, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %19) #9, !noalias !46
  %30 = getelementptr inbounds i8, i8* %24, i64 56
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %21, align 8, !noalias !46
  store i64 %32, i64* %31, align 8, !noalias !46
  %33 = bitcast %"class.base::OnceCallback.985"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9, !noalias !39
  %34 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = ptrtoint i8* %24 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !51
  %36 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8, !noalias !51
  %37 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #9, !noalias !51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9, !noalias !39
  %38 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #9, !noalias !39
  %39 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %39) #9, !noalias !39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9, !noalias !39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  %40 = bitcast %"class.base::OnceCallback.985"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = bitcast %"class.WTF::CrossThreadOnceFunction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::TaskRunner"*
  %43 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback.985"* %3 to i64*
  store i64 %35, i64* %45, align 8, !alias.scope !54
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8, !noalias !54
  %46 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)***
  %47 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*** %46, align 8
  %48 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)** %47, align 8
  %49 = call zeroext i1 %48(%"class.base::TaskRunner"* %42, %"class.base::Location"* nonnull dereferenceable(32) %8, %"class.base::OnceCallback.985"* nonnull %3, i64 0) #9
  %50 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #9
  %51 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %52 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  %53 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.230"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #9
  br label %62

62:                                               ; preds = %2, %54, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter24NotifyMeasurementSuccessEPNS_12WorkerThreadEN4base7WeakPtrIS0_EENSt3__110unique_ptrINS0_17WorkerMemoryUsageENS6_14default_deleteIS8_EEEE(%"class.blink::WorkerThread"* nocapture readnone, %"class.base::WeakPtr"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.985", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback.985", align 8
  %7 = alloca %"class.base::OnceCallback.985", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = ptrtoint %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %2 to i64
  %12 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #9
  %13 = bitcast %"class.blink::Thread"* %12 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %14 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %14, i64 3
  %16 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %15, align 8
  %17 = tail call %"class.base::SingleThreadTaskRunner"* %16(%"class.blink::Thread"* %12) #9
  %18 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1, i64 0, i64 0), i32 192) #9
  %19 = bitcast %"class.base::OnceCallback.985"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9, !noalias !57
  %21 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %21, %"class.base::internal::WeakReference"* dereferenceable(8) %22) #9, !noalias !57
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !60
  store i64 %25, i64* %23, align 8, !alias.scope !63, !noalias !57
  %26 = call i8* @_Znwm(i64 72) #8, !noalias !64
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS3_17WorkerMemoryUsageENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #9, !noalias !64
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*)* @_ZN5blink22V8WorkerMemoryReporter20OnMeasurementSuccessENSt3__110unique_ptrINS0_17WorkerMemoryUsageENS1_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %29, align 8, !noalias !64
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  %31 = bitcast i8* %30 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %31, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %21) #9, !noalias !64
  %32 = getelementptr inbounds i8, i8* %26, i64 56
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %23, align 8, !noalias !64
  store i64 %34, i64* %33, align 8, !noalias !64
  %35 = getelementptr inbounds i8, i8* %26, i64 64
  %36 = bitcast i8* %35 to i64*
  store i64 %11, i64* %36, align 8, !noalias !64
  %37 = bitcast %"class.base::OnceCallback.985"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9, !noalias !57
  %38 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %7, i64 0, i32 0, i32 0, i32 0
  %39 = ptrtoint i8* %26 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %38, align 8, !noalias !69
  %40 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8, !noalias !69
  %41 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #9, !noalias !69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9, !noalias !57
  %42 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #9, !noalias !57
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %43) #9, !noalias !57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9, !noalias !57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %44 = bitcast %"class.base::OnceCallback.985"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast %"class.base::SingleThreadTaskRunner"* %17 to %"class.base::TaskRunner"*
  %47 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.base::OnceCallback.985"* %4 to i64*
  store i64 %39, i64* %49, align 8, !alias.scope !72
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8, !noalias !72
  %50 = bitcast %"class.base::SingleThreadTaskRunner"* %17 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)***
  %51 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*** %50, align 8
  %52 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.985"*, i64)** %51, align 8
  %53 = call zeroext i1 %52(%"class.base::TaskRunner"* %46, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback.985"* nonnull %4, i64 0) #9
  %54 = getelementptr inbounds %"class.base::OnceCallback.985", %"class.base::OnceCallback.985"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %54) #9
  %55 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %56 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #9
  %57 = icmp eq %"class.base::SingleThreadTaskRunner"* %17, null
  br i1 %57, label %66, label %58

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %17, i64 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw sub i32* %60, i32 1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe.230", %"class.base::RefCountedThreadSafe.230"* %59, i64 -2
  %65 = bitcast %"class.base::RefCountedThreadSafe.230"* %64 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %65) #9
  br label %66

66:                                               ; preds = %63, %58, %3
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter20OnMeasurementSuccessENSt3__110unique_ptrINS0_17WorkerMemoryUsageENS1_14default_deleteIS3_EEEE(%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %71, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %36, !prof !75

14:                                               ; preds = %7
  %15 = add i32 %10, 1
  %16 = lshr i32 %10, 2
  %17 = add i32 %15, %16
  %18 = icmp ugt i32 %17, 4
  %19 = select i1 %18, i32 %17, i32 4
  %20 = icmp ugt i32 %19, %15
  %21 = select i1 %20, i32 %19, i32 %15
  %22 = icmp ult i32 %10, %21
  br i1 %22, label %23, label %36, !prof !76

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %24, align 8
  %26 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %25, null
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = zext i32 %21 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEmm(i64 %28) #9
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEPKcv, i64 0, i64 0)) #9
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast %"class.blink::V8WorkerMemoryReporter"* %0 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = udiv i64 %29, 144
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %11, align 8
  br label %36

35:                                               ; preds = %23
  tail call void @_ZN3WTF6VectorIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %8, i32 %21) #9
  br label %36

36:                                               ; preds = %7, %14, %27, %35
  %37 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %37, align 8
  %39 = load i32, i32* %9, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %38, i64 %40
  %42 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %41 to i8*
  %43 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false) #9
  %44 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %38, i64 %40, i32 2, i32 0
  %45 = bitcast i8* %44 to %"class.blink::KURL"*
  %46 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %1, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %45, %"class.blink::KURL"* dereferenceable(112) %46) #9
  %47 = load i32, i32* %9, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %9, align 4
  %49 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  %52 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %51
  %55 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %58, label %71

58:                                               ; preds = %36
  %59 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0
  %61 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #9
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %59, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.base::OnceCallback"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %64, i64* %65, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %62, align 8
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %67 = inttoptr i64 %64 to %"class.base::internal::BindStateBase"*
  %68 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %67, i64 0, i32 1
  %69 = bitcast void ()** %68 to void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)**
  %70 = load void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)** %69, align 8
  tail call void %70(%"class.base::internal::BindStateBase"* %67, %"struct.blink::V8WorkerMemoryReporter::Result"* dereferenceable(16) %60) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #9
  store i32 1, i32* %4, align 8
  br label %71

71:                                               ; preds = %36, %58, %2
  %72 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %1, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %1, i64 0, i32 2
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %74) #9
  %75 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %1 to i8*
  call void @_ZdlPv(i8* %75) #8
  br label %76

76:                                               ; preds = %71, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22V8WorkerMemoryReporter20OnMeasurementFailureEv(%"class.blink::V8WorkerMemoryReporter"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, %9
  %13 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %0, i64 0, i32 0
  %19 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %25 = inttoptr i64 %22 to %"class.base::internal::BindStateBase"*
  %26 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %25, i64 0, i32 1
  %27 = bitcast void ()** %26 to void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)**
  %28 = load void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.blink::V8WorkerMemoryReporter::Result"*)** %27, align 8
  tail call void %28(%"class.base::internal::BindStateBase"* %25, %"struct.blink::V8WorkerMemoryReporter::Result"* dereferenceable(16) %18) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  store i32 1, i32* %3, align 8
  br label %29

29:                                               ; preds = %1, %16, %6
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::V8WorkerMemoryReporter"**
  %10 = load %"class.blink::V8WorkerMemoryReporter"*, %"class.blink::V8WorkerMemoryReporter"** %9, align 8
  %11 = icmp eq %"class.blink::V8WorkerMemoryReporter"* %10, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::V8WorkerMemoryReporter"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*)**
  %37 = load void (%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*)*, void (%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::V8WorkerMemoryReporter"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %42 to %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"**
  %44 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %43, align 8
  store %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* null, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %43, align 8
  call void %41(%"class.blink::V8WorkerMemoryReporter"* %28, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %44) #9
  br label %45

45:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS3_17WorkerMemoryUsageENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"**
  %6 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %5, align 8
  store %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* null, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %5, align 8
  %7 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %6, i64 0, i32 2
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %9) #9
  %10 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  br label %11

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %12 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %13) #9
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #8
  br label %15

15:                                               ; preds = %11, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::V8WorkerMemoryReporter"**
  %9 = load %"class.blink::V8WorkerMemoryReporter"*, %"class.blink::V8WorkerMemoryReporter"** %8, align 8
  %10 = icmp ne %"class.blink::V8WorkerMemoryReporter"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::V8WorkerMemoryReporter"**
  %10 = load %"class.blink::V8WorkerMemoryReporter"*, %"class.blink::V8WorkerMemoryReporter"** %9, align 8
  %11 = icmp eq %"class.blink::V8WorkerMemoryReporter"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::V8WorkerMemoryReporter"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::V8WorkerMemoryReporter"*)**
  %37 = load void (%"class.blink::V8WorkerMemoryReporter"*)*, void (%"class.blink::V8WorkerMemoryReporter"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::V8WorkerMemoryReporter"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::V8WorkerMemoryReporter"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::V8WorkerMemoryReporter"* %28) #9
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::V8WorkerMemoryReporter"**
  %9 = load %"class.blink::V8WorkerMemoryReporter"*, %"class.blink::V8WorkerMemoryReporter"** %8, align 8
  %10 = icmp ne %"class.blink::V8WorkerMemoryReporter"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink12WorkerThread14ThreadSetMutexEv() local_unnamed_addr #4

declare dereferenceable(24) %"class.WTF::HashSet.653"* @_ZN5blink12WorkerThread13WorkerThreadsEv() local_unnamed_addr #4

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"*, i8 zeroext) local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPN5blink12WorkerThreadENS_7WeakPtrINS3_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES8_SA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.blink::WorkerThread"**
  %7 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %9 = bitcast void ()** %8 to i32*
  %10 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #9
  %11 = load void (%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32)*, void (%"class.blink::WorkerThread"*, %"class.base::WeakPtr"*, i32)** %4, align 8
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %14 = bitcast void ()** %13 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %12, %"class.base::internal::WeakReference"* dereferenceable(8) %14) #9
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  %19 = load i32, i32* %9, align 4
  call void %11(%"class.blink::WorkerThread"* %7, %"class.base::WeakPtr"* nonnull %2, i32 %19) #9
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPN5blink12WorkerThreadENS_7WeakPtrINS2_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES7_S9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::V8WorkerMemoryReporter"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::V8WorkerMemoryReporter"*)**
  %21 = load void (%"class.blink::V8WorkerMemoryReporter"*)*, void (%"class.blink::V8WorkerMemoryReporter"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::V8WorkerMemoryReporter"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::V8WorkerMemoryReporter"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::V8WorkerMemoryReporter"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::V8WorkerMemoryReporter"**
  %6 = load %"class.blink::V8WorkerMemoryReporter"*, %"class.blink::V8WorkerMemoryReporter"** %5, align 8
  store %"class.blink::V8WorkerMemoryReporter"* null, %"class.blink::V8WorkerMemoryReporter"** %5, align 8
  %7 = icmp eq %"class.blink::V8WorkerMemoryReporter"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %6, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %9) #9
  %10 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %6, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %10) #9
  %11 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %11, align 8
  %13 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %12, null
  br i1 %13, label %32, label %14, !prof !76

14:                                               ; preds = %8
  %15 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %12 to i8*
  %16 = getelementptr inbounds %"class.blink::V8WorkerMemoryReporter", %"class.blink::V8WorkerMemoryReporter"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19, !prof !75

19:                                               ; preds = %14
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %12, i64 %20
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* [ %25, %22 ], [ %12, %19 ]
  %24 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %23, i64 0, i32 2
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %24) #9
  %25 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %23, i64 1
  %26 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %25, %21
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  store i32 0, i32* %16, align 4
  %28 = bitcast %"class.blink::V8WorkerMemoryReporter"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %14
  %31 = phi i8* [ %29, %27 ], [ %15, %14 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %31) #9
  br label %32

32:                                               ; preds = %30, %8
  %33 = bitcast %"class.blink::V8WorkerMemoryReporter"* %6 to i8*
  tail call void @_ZdlPv(i8* %33) #8
  br label %34

34:                                               ; preds = %3, %32
  %35 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #8
  br label %36

36:                                               ; preds = %34, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegateD2Ev(%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125WorkerMeasurementDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !77
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8)
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #9
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  call void @_ZN5blink22V8WorkerMemoryReporter24NotifyMeasurementFailureEPNS_12WorkerThreadEN4base7WeakPtrIS0_EE(%"class.blink::WorkerThread"* undef, %"class.base::WeakPtr"* nonnull %2) #9
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #9
  store i8 1, i8* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8)
  br label %15

15:                                               ; preds = %1, %7
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %16) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegateD0Ev(%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_125WorkerMeasurementDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !77
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #9
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %11, align 8
  call void @_ZN5blink22V8WorkerMemoryReporter24NotifyMeasurementFailureEPNS_12WorkerThreadEN4base7WeakPtrIS0_EE(%"class.blink::WorkerThread"* undef, %"class.base::WeakPtr"* nonnull %2) #9
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #9
  store i8 1, i8* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  br label %15

15:                                               ; preds = %1, %7
  %16 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %16) #9
  %17 = bitcast %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0 to i8*
  call void @_ZdlPv(i8* %17) #8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegate13ShouldMeasureEN2v85LocalINS2_7ContextEEE(%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* nocapture readnone, %"class.v8::Context"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_125WorkerMeasurementDelegate19MeasurementCompleteERKNSt3__16vectorINS2_4pairIN2v85LocalINS5_7ContextEEEmEENS2_9allocatorIS9_EEEEm(%"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"*, %"class.std::__1::vector.1054"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = alloca %"class.blink::MultiToken", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 2
  %8 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %7, align 8
  %9 = tail call %"class.blink::WorkerOrWorkletGlobalScope"* @_ZN5blink12WorkerThread11GlobalScopeEv(%"class.blink::WorkerThread"* %8) #9
  %10 = getelementptr inbounds %"class.std::__1::vector.1054", %"class.std::__1::vector.1054"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.1054", %"class.std::__1::vector.1054"* %1, i64 0, i32 0, i32 1
  %13 = load %"struct.std::__1::pair.1056"*, %"struct.std::__1::pair.1056"** %12, align 8
  %14 = icmp eq %"struct.std::__1::pair.1056"* %11, %13
  br i1 %14, label %39, label %15

15:                                               ; preds = %3
  %16 = ptrtoint %"struct.std::__1::pair.1056"* %11 to i64
  %17 = getelementptr %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %13, i64 -1, i32 0, i32 0
  %18 = ptrtoint %"class.v8::Context"** %17 to i64
  %19 = sub i64 %18, %16
  %20 = lshr i64 %19, 4
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 7
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %15, %24
  %25 = phi i64 [ %30, %24 ], [ %2, %15 ]
  %26 = phi %"struct.std::__1::pair.1056"* [ %31, %24 ], [ %11, %15 ]
  %27 = phi i64 [ %32, %24 ], [ %22, %15 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %26, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %25
  %31 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %26, i64 1
  %32 = add i64 %27, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %24, !llvm.loop !78

34:                                               ; preds = %24, %15
  %35 = phi i64 [ undef, %15 ], [ %30, %24 ]
  %36 = phi i64 [ %2, %15 ], [ %30, %24 ]
  %37 = phi %"struct.std::__1::pair.1056"* [ %11, %15 ], [ %31, %24 ]
  %38 = icmp ult i64 %19, 112
  br i1 %38, label %39, label %64

39:                                               ; preds = %34, %64, %3
  %40 = phi i64 [ %2, %3 ], [ %35, %34 ], [ %90, %64 ]
  %41 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %9 to %"class.blink::WorkerGlobalScope"*
  %42 = tail call i8* @_Znwm(i64 144) #8
  %43 = bitcast i8* %42 to %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %42, i8 0, i64 144, i1 false) #9
  %44 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #9
  %45 = bitcast i8* %42 to i64*
  %46 = extractvalue { i64, i64 } %44, 0
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %42, i64 8
  %48 = bitcast i8* %47 to i64*
  %49 = extractvalue { i64, i64 } %44, 1
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %42, i64 16
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %42, i64 32
  %53 = bitcast i8* %52 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %53) #9
  %54 = bitcast %"class.blink::MultiToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #9
  %55 = bitcast %"class.blink::WorkerOrWorkletGlobalScope"* %9 to void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)***
  %56 = load void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)**, void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)*, void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)** %56, i64 68
  %58 = load void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)*, void (%"class.blink::MultiToken"*, %"class.blink::WorkerGlobalScope"*)** %57, align 8
  call void %58(%"class.blink::MultiToken"* nonnull sret %5, %"class.blink::WorkerGlobalScope"* %41) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %54, i64 20, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #9
  %59 = getelementptr inbounds i8, i8* %42, i64 24
  %60 = bitcast i8* %59 to i64*
  store i64 %40, i64* %60, align 8
  %61 = getelementptr inbounds %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::WorkerOrWorkletGlobalScope"* %9, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i64 8
  %62 = bitcast i8* %61 to %"class.blink::KURL"*
  %63 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %62) #9
  br i1 %63, label %93, label %106

64:                                               ; preds = %34, %64
  %65 = phi i64 [ %90, %64 ], [ %36, %34 ]
  %66 = phi %"struct.std::__1::pair.1056"* [ %91, %64 ], [ %37, %34 ]
  %67 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %65
  %70 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 1, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %69
  %73 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 2, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %72
  %76 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 3, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %75
  %79 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 4, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, %78
  %82 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 5, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %81
  %85 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 6, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %84
  %88 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 7, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, %87
  %91 = getelementptr inbounds %"struct.std::__1::pair.1056", %"struct.std::__1::pair.1056"* %66, i64 8
  %92 = icmp eq %"struct.std::__1::pair.1056"* %91, %13
  br i1 %92, label %39, label %64

93:                                               ; preds = %39
  %94 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"* %41) #9
  %95 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %94, i64 0, i32 4, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp ult i32 %100, 2000
  br i1 %101, label %102, label %106

102:                                              ; preds = %93, %98
  %103 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %103) #9
  %104 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"* %41) #9
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %6, %"class.blink::KURL"* %104) #9
  %105 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %53, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %103) #9
  br label %106

106:                                              ; preds = %39, %98, %102
  %107 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107)
  %108 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %108, %"class.base::internal::WeakReference"* dereferenceable(8) %109) #9
  %110 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %111 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 1, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %110, align 8
  call void @_ZN5blink22V8WorkerMemoryReporter24NotifyMeasurementSuccessEPNS_12WorkerThreadEN4base7WeakPtrIS0_EENSt3__110unique_ptrINS0_17WorkerMemoryUsageENS6_14default_deleteIS8_EEEE(%"class.blink::WorkerThread"* undef, %"class.base::WeakPtr"* nonnull %4, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* nonnull %43) #9
  %113 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %113) #9
  %114 = getelementptr inbounds %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate", %"class.blink::(anonymous namespace)::WorkerMeasurementDelegate"* %0, i64 0, i32 3
  store i8 1, i8* %114, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107)
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink17WorkerGlobalScope3UrlEv(%"class.blink::WorkerGlobalScope"*) unnamed_addr #4

declare void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* sret, %"class.blink::KURL"*) local_unnamed_addr #4

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* [ %23, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* [ %22, %14 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %16 to i8*
  %18 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false) #9
  %19 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %16, i64 0, i32 2, i32 0
  %20 = bitcast i8* %19 to %"class.blink::KURL"*
  %21 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %15, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %20, %"class.blink::KURL"* dereferenceable(112) %21) #9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %21) #9
  %22 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %16, i64 1
  %23 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %15, i64 1
  %24 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %23, %10
  br i1 %24, label %25, label %14

25:                                               ; preds = %14, %4
  %26 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #9
  br label %63

27:                                               ; preds = %2
  %28 = zext i32 %1 to i64
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEmm(i64 %28) #9
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEPKcv, i64 0, i64 0)) #9
  %31 = udiv i64 %29, 144
  %32 = ptrtoint i8* %30 to i64
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*, %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %27
  %41 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %34 to i8*
  br label %58

42:                                               ; preds = %27
  %43 = bitcast i8* %30 to %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"*
  br label %44

44:                                               ; preds = %42, %44
  %45 = phi %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* [ %53, %44 ], [ %34, %42 ]
  %46 = phi %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* [ %52, %44 ], [ %43, %42 ]
  %47 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %46 to i8*
  %48 = bitcast %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 32, i1 false) #9
  %49 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %46, i64 0, i32 2, i32 0
  %50 = bitcast i8* %49 to %"class.blink::KURL"*
  %51 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %45, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %50, %"class.blink::KURL"* dereferenceable(112) %51) #9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %51) #9
  %52 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %46, i64 1
  %53 = getelementptr inbounds %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage", %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %45, i64 1
  %54 = icmp eq %"struct.blink::V8WorkerMemoryReporter::WorkerMemoryUsage"* %53, %38
  br i1 %54, label %55, label %44

55:                                               ; preds = %44
  %56 = bitcast %"class.WTF::Vector"* %0 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %40, %55
  %59 = phi i8* [ %57, %55 ], [ %41, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #9
  %60 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %32, i64* %60 monotonic, align 8
  %61 = trunc i64 %31 to i32
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %61, i32* %62, align 8
  br label %63

63:                                               ; preds = %58, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink22V8WorkerMemoryReporter17WorkerMemoryUsageEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 14898517
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 14898517) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 144
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink22V8WorkerMemoryReporterEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink22V8WorkerMemoryReporterEE10GetWeakPtrEv"}
!5 = distinct !{!5, !6, !"_ZN5blink22V8WorkerMemoryReporter10GetWeakPtrEv: argument 0"}
!6 = distinct !{!6, !"_ZN5blink22V8WorkerMemoryReporter10GetWeakPtrEv"}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!12 = distinct !{!12, !13, !"_ZN3WTF4BindIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF4BindIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!14 = !{!15, !17, !19}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!19 = distinct !{!19, !20, !"_ZN3WTF4BindIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF4BindIMN5blink22V8WorkerMemoryReporterEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF19CrossThreadBindOnceIRPFvPN5blink12WorkerThreadEN4base7WeakPtrINS1_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJNS_28CrossThreadUnretainedWrapperIS2_EERS7_RS9_EEEDaOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF19CrossThreadBindOnceIRPFvPN5blink12WorkerThreadEN4base7WeakPtrINS1_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJNS_28CrossThreadUnretainedWrapperIS2_EERS7_RS9_EEEDaOT_DpOT0_"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22V8WorkerMemoryReporterEEEE4CopyERKS5_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22V8WorkerMemoryReporterEEEE4CopyERKS5_"}
!27 = !{!25}
!28 = !{!29, !31, !22}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackERPFvPN5blink12WorkerThreadENS_7WeakPtrINS3_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES8_SA_EEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackERPFvPN5blink12WorkerThreadENS_7WeakPtrINS3_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES8_SA_EEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIRPFvPN5blink12WorkerThreadENS_7WeakPtrINS1_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES6_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIRPFvPN5blink12WorkerThreadENS_7WeakPtrINS1_22V8WorkerMemoryReporterEEEN2v822MeasureMemoryExecutionEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES6_S8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!33 = !{!34, !22}
!34 = distinct !{!34, !35, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJRN4base7WeakPtrIS2_EEEEEDaOT_DpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJRN4base7WeakPtrIS2_EEEEEDaOT_DpOT0_"}
!42 = !{!43, !40}
!43 = distinct !{!43, !44, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22V8WorkerMemoryReporterEEEE4CopyERKS5_: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22V8WorkerMemoryReporterEEEE4CopyERKS5_"}
!45 = !{!43}
!46 = !{!47, !49, !40}
!47 = distinct !{!47, !48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!49 = distinct !{!49, !50, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!51 = !{!52, !40}
!52 = distinct !{!52, !53, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!53 = distinct !{!53, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!56 = distinct !{!56, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS2_17WorkerMemoryUsageENS3_14default_deleteIS5_EEEEEJRN4base7WeakPtrIS2_EES8_EEEDaOT_DpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZN3WTF19CrossThreadBindOnceIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS2_17WorkerMemoryUsageENS3_14default_deleteIS5_EEEEEJRN4base7WeakPtrIS2_EES8_EEEDaOT_DpOT0_"}
!60 = !{!61, !58}
!61 = distinct !{!61, !62, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22V8WorkerMemoryReporterEEEE4CopyERKS5_: argument 0"}
!62 = distinct !{!62, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink22V8WorkerMemoryReporterEEEE4CopyERKS5_"}
!63 = !{!61}
!64 = !{!65, !67, !58}
!65 = distinct !{!65, !66, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEDcOT0_DpOT1_: argument 0"}
!66 = distinct !{!66, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS4_17WorkerMemoryUsageENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEDcOT0_DpOT1_"}
!67 = distinct !{!67, !68, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS2_17WorkerMemoryUsageENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!68 = distinct !{!68, !"_ZN4base8BindOnceIMN5blink22V8WorkerMemoryReporterEFvNSt3__110unique_ptrINS2_17WorkerMemoryUsageENS3_14default_deleteIS5_EEEEEJNS_7WeakPtrIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!69 = !{!70, !58}
!70 = distinct !{!70, !71, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!71 = distinct !{!71, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!74 = distinct !{!74, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!75 = !{!"branch_weights", i32 1, i32 2000}
!76 = !{!"branch_weights", i32 2000, i32 1}
!77 = !{i8 0, i8 2}
!78 = distinct !{!78, !79}
!79 = !{!"llvm.loop.unroll.disable"}
