; ModuleID = '../../headless/lib/browser/protocol/headless_handler.cc'
source_filename = "../../headless/lib/browser/protocol/headless_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::protocol::HeadlessHandler" = type { %"class.headless::protocol::DomainHandler", %"class.headless::protocol::HeadlessExperimental::Backend", %"class.headless::HeadlessBrowserImpl"*, %"class.content::WebContents"*, %"class.std::__1::unique_ptr.46" }
%"class.headless::protocol::DomainHandler" = type { i32 (...)** }
%"class.headless::protocol::HeadlessExperimental::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.headless::protocol::HeadlessExperimental::Frontend"* }
%"class.headless::protocol::HeadlessExperimental::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.headless::HeadlessBrowserImpl" = type { %"class.headless::HeadlessBrowser", %"class.headless::HeadlessDevToolsTarget", %"class.base::OnceCallback", %"struct.headless::HeadlessBrowser::Options", %"class.headless::HeadlessBrowserMainParts"*, %"class.base::flat_map", %"class.headless::HeadlessBrowserContext"*, %class.scoped_refptr.32, %"class.std::__1::unique_ptr.33", %"class.base::WeakPtrFactory" }
%"class.headless::HeadlessBrowser" = type { i32 (...)** }
%"class.headless::HeadlessDevToolsTarget" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.headless::HeadlessBrowser::Options" = type <{ i32, [4 x i8], i8**, %"class.net::HostPortPair", i8, [7 x i8], %"class.base::MessagePump"*, i8, i8, i8, [5 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.gfx::Size", %"class.base::FilePath", i8, i8, i8, i8, [4 x i8], %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.24", i8, [7 x i8], %"class.base::FilePath", i32, [4 x i8] }>
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.base::MessagePump" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.net::ProxyConfig"* }
%"class.net::ProxyConfig" = type { i8, %class.GURL, i8, %"struct.net::ProxyConfig::ProxyRules" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.4" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GURL* }
%"struct.net::ProxyConfig::ProxyRules" = type { %"class.net::ProxyBypassRules", i8, i32, %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList" }
%"class.net::ProxyBypassRules" = type { %"class.net::SchemeHostPortMatcher" }
%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%"class.net::ProxyList" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.16" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::ProxyServer"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.24" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.headless::HeadlessBrowserMainParts" = type opaque
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair"* }
%"class.headless::HeadlessBrowserContext" = type { i32 (...)** }
%class.scoped_refptr.32 = type { %"class.content::DevToolsAgentHost"* }
%"class.content::DevToolsAgentHost" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.headless::HeadlessRequestContextManager"* }
%"class.headless::HeadlessRequestContextManager" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.40", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"class.content::WebContents" = type opaque
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.52", %"class.std::__1::vector.60" }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.std::__1::pair.54"*, %"struct.std::__1::pair.54"*, %"class.std::__1::__compressed_pair.55" }
%"struct.std::__1::pair.54" = type opaque
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::pair.54"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.crdtp::detail::ValueMaybe" = type { i8, double }
%"class.crdtp::detail::ValueMaybe.74" = type { i8, i8 }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"* }
%"class.headless::protocol::HeadlessExperimental::ScreenshotParams" = type { %"class.crdtp::ProtocolObject", %"class.crdtp::detail::ValueMaybe.78", %"class.crdtp::detail::ValueMaybe.79" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::ValueMaybe.78" = type { i8, %"class.std::__1::basic_string" }
%"class.crdtp::detail::ValueMaybe.79" = type { i8, i32 }
%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::OnceCallback.273" = type { %"class.base::internal::CallbackBase" }
%"class.headless::HeadlessWebContentsImpl" = type { %"class.headless::HeadlessWebContents", %"class.headless::HeadlessDevToolsTarget", %"class.content::DevToolsAgentHostObserver", %"class.content::RenderProcessHostObserver", %"class.content::WebContentsObserver", i64, i8, %"class.headless::HeadlessBrowserContextImpl"*, %"class.content::RenderProcessHost"*, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", i32, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.245", %class.scoped_refptr.32, i8, i8, [6 x i8], %"class.base::ObserverList.251", %"class.base::WeakPtr.255" }
%"class.headless::HeadlessWebContents" = type { i32 (...)** }
%"class.content::DevToolsAgentHostObserver" = type { i32 (...)** }
%"class.content::RenderProcessHostObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.83" }
%"class.base::WeakPtrFactory.83" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.headless::HeadlessBrowserContextImpl" = type opaque
%"class.content::RenderProcessHost" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.headless::HeadlessWebContentsImpl::Delegate"* }
%"class.headless::HeadlessWebContentsImpl::Delegate" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.headless::HeadlessWindowTreeHost"* }
%"class.headless::HeadlessWindowTreeHost" = type { %"class.aura::WindowTreeHost", %"class.ui::PlatformEventDispatcher", %"class.gfx::Rect", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236" }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.203", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.223", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.229" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.93" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i64 }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.158", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::vector.177", i32, i32, i32, [4 x i8], %"class.base::ObserverList.184", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.196", %"class.base::WeakPtr.202" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.98", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.104", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.106" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.111", %"class.std::__1::vector.130", %"class.ui::EventHandler"* }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.137" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.130" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.123" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.113", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.113" = type { %"class.base::internal::flat_tree.114" }
%"class.base::internal::flat_tree.114" = type { %"class.std::__1::vector.115" }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.std::__1::pair.117"*, %"struct.std::__1::pair.117"*, %"class.std::__1::__compressed_pair.118" }
%"struct.std::__1::pair.117" = type opaque
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::pair.117"* }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.base::flat_map.126"* }
%"class.base::flat_map.126" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.149" }
%"class.std::__1::map.149" = type { %"class.std::__1::__tree.150" }
%"class.std::__1::__tree.150" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.184" = type <{ %"class.std::__1::vector.185", %"class.base::LinkedList.193", i64, i32, [4 x i8] }>
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.188" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.193" = type { %"class.base::LinkNode.194" }
%"class.base::LinkNode.194" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.202" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::ObserverList.203" = type <{ %"class.std::__1::vector.104", %"class.base::LinkedList.204", i64, i32, [4 x i8] }>
%"class.base::LinkedList.204" = type { %"class.base::LinkNode.205" }
%"class.base::LinkNode.205" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.ui::Compositor"* }
%"class.ui::Compositor" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.219, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.219 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.220", [4 x i8] }>
%"class.base::RefCounted.220" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.222 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.221, i32, i32 }
%class.sk_sp.221 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.41" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.222 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.229" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.aura::client::FocusClient"* }
%"class.aura::client::FocusClient" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.aura::client::WindowParentingClient"* }
%"class.aura::client::WindowParentingClient" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.content::WebContents"* }
%"class.base::ObserverList.251" = type <{ %"class.std::__1::vector.104", %"class.base::LinkedList.252", i64, i32, [4 x i8] }>
%"class.base::LinkedList.252" = type { %"class.base::LinkNode.253" }
%"class.base::LinkNode.253" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtr.255" = type { %"class.base::internal::WeakPtrBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::CommandLine" = type { %"class.std::__1::vector.256", %"class.std::__1::map.263", i64 }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.263" = type { %"class.std::__1::__tree.264" }
%"class.std::__1::__tree.264" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.gfx::Image" = type { %class.scoped_refptr.283 }
%class.scoped_refptr.283 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.crdtp::detail::ValueMaybe.280" = type { i8, %"class.headless::protocol::Binary" }
%"class.headless::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.282", [4 x i8] }>
%"class.base::RefCountedThreadSafe.282" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector.285" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.282" }>
%"class.std::__1::vector.285" = type { %"class.std::__1::__vector_base.286" }
%"class.std::__1::__vector_base.286" = type { i8*, i8*, %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { i8* }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %class.SkBitmap* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.292", %"class.std::__1::__tuple_leaf.293" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* }
%"class.std::__1::__tuple_leaf.292" = type { i32 }
%"class.std::__1::__tuple_leaf.293" = type { i32 }

@_ZTVN8headless8protocol15HeadlessHandlerE = hidden unnamed_addr constant { [8 x i8*], [7 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*)* @_ZN8headless8protocol15HeadlessHandlerD2Ev to i8*), i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*)* @_ZN8headless8protocol15HeadlessHandlerD0Ev to i8*), i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*, %"class.crdtp::UberDispatcher"*)* @_ZN8headless8protocol15HeadlessHandler4WireEPN5crdtp14UberDispatcherE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.headless::protocol::HeadlessHandler"*)* @_ZN8headless8protocol15HeadlessHandler7DisableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.headless::protocol::HeadlessHandler"*)* @_ZN8headless8protocol15HeadlessHandler6EnableEv to i8*), i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.74"*, %"class.crdtp::detail::PtrMaybe"*, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)* @_ZN8headless8protocol15HeadlessHandler10BeginFrameEN5crdtp6detail10ValueMaybeIdEES5_NS4_IbEENS3_8PtrMaybeINS0_20HeadlessExperimental16ScreenshotParamsEEENSt3__110unique_ptrINS8_7Backend18BeginFrameCallbackENSB_14default_deleteISE_EEEE to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*)* @_ZThn8_N8headless8protocol15HeadlessHandlerD1Ev to i8*), i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*)* @_ZThn8_N8headless8protocol15HeadlessHandlerD0Ev to i8*), i8* bitcast (void (%"class.headless::protocol::HeadlessHandler"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.74"*, %"class.crdtp::detail::PtrMaybe"*, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)* @_ZThn8_N8headless8protocol15HeadlessHandler10BeginFrameEN5crdtp6detail10ValueMaybeIdEES5_NS4_IbEENS3_8PtrMaybeINS0_20HeadlessExperimental16ScreenshotParamsEEENSt3__110unique_ptrINS8_7Backend18BeginFrameCallbackENSB_14default_deleteISE_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.headless::protocol::HeadlessHandler"*)* @_ZThn8_N8headless8protocol15HeadlessHandler7DisableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.headless::protocol::HeadlessHandler"*)* @_ZThn8_N8headless8protocol15HeadlessHandler6EnableEv to i8*)] }, align 8
@.str = private unnamed_addr constant [59 x i8] c"Command is only supported if BeginFrameControl is enabled.\00", align 1
@_ZN8switches33kRunAllCompositorStagesBeforeDrawE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [113 x i8] c"Command is only supported with --run-all-compositor-stages-before-draw, see https://goo.gl/3zHXhB for more info.\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"interval has to be greater than 0\00", align 1
@_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams10FormatEnum3PngE = external local_unnamed_addr global i8*, align 8
@_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams10FormatEnum4JpegE = external local_unnamed_addr global i8*, align 8
@.str.3 = private unnamed_addr constant [26 x i8] c"Invalid screenshot.format\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"screenshot.quality has to be in range 0..100\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN8headless8protocol15HeadlessHandlerC1EPNS_19HeadlessBrowserImplEPN7content11WebContentsE = hidden unnamed_addr alias void (%"class.headless::protocol::HeadlessHandler"*, %"class.headless::HeadlessBrowserImpl"*, %"class.content::WebContents"*), void (%"class.headless::protocol::HeadlessHandler"*, %"class.headless::HeadlessBrowserImpl"*, %"class.content::WebContents"*)* @_ZN8headless8protocol15HeadlessHandlerC2EPNS_19HeadlessBrowserImplEPN7content11WebContentsE
@_ZN8headless8protocol15HeadlessHandlerD1Ev = hidden unnamed_addr alias void (%"class.headless::protocol::HeadlessHandler"*), void (%"class.headless::protocol::HeadlessHandler"*)* @_ZN8headless8protocol15HeadlessHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8headless8protocol15HeadlessHandlerC2EPNS_19HeadlessBrowserImplEPN7content11WebContentsE(%"class.headless::protocol::HeadlessHandler"* nocapture, %"class.headless::HeadlessBrowserImpl"*, %"class.content::WebContents"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.headless::protocol::HeadlessHandler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 2
  store %"class.headless::HeadlessBrowserImpl"* %1, %"class.headless::HeadlessBrowserImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 3
  store %"class.content::WebContents"* %2, %"class.content::WebContents"** %6, align 8
  %7 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::unique_ptr.46"* %7 to i64*
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15HeadlessHandlerD2Ev(%"class.headless::protocol::HeadlessHandler"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.headless::protocol::HeadlessHandler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %3, align 8
  store %"class.headless::protocol::HeadlessExperimental::Frontend"* null, %"class.headless::protocol::HeadlessExperimental::Frontend"** %3, align 8
  %5 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.headless::protocol::HeadlessExperimental::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless8protocol15HeadlessHandlerD1Ev(%"class.headless::protocol::HeadlessHandler"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.46"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %2, i64 4, i32 0, i32 0, i32 0
  %5 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %4, align 8
  store %"class.headless::protocol::HeadlessExperimental::Frontend"* null, %"class.headless::protocol::HeadlessExperimental::Frontend"** %4, align 8
  %6 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.headless::protocol::HeadlessExperimental::Frontend"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15HeadlessHandlerD0Ev(%"class.headless::protocol::HeadlessHandler"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.headless::protocol::HeadlessHandler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %3, align 8
  store %"class.headless::protocol::HeadlessExperimental::Frontend"* null, %"class.headless::protocol::HeadlessExperimental::Frontend"** %3, align 8
  %5 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.headless::protocol::HeadlessExperimental::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.headless::protocol::HeadlessHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless8protocol15HeadlessHandlerD0Ev(%"class.headless::protocol::HeadlessHandler"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.46"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*], [7 x i8*] }, { [8 x i8*], [7 x i8*] }* @_ZTVN8headless8protocol15HeadlessHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %2, i64 4, i32 0, i32 0, i32 0
  %5 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %4, align 8
  store %"class.headless::protocol::HeadlessExperimental::Frontend"* null, %"class.headless::protocol::HeadlessExperimental::Frontend"** %4, align 8
  %6 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.headless::protocol::HeadlessExperimental::Frontend"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %"class.std::__1::unique_ptr.46"* %2 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15HeadlessHandler4WireEPN5crdtp14UberDispatcherE(%"class.headless::protocol::HeadlessHandler"*, %"class.crdtp::UberDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %1, i64 0, i32 1
  %4 = bitcast %"class.crdtp::FrontendChannel"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = tail call i8* @_Znwm(i64 8) #10
  %7 = bitcast i8* %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.46"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.headless::protocol::HeadlessExperimental::Frontend"* %11 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %14, %2
  %17 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 1
  tail call void @_ZN8headless8protocol20HeadlessExperimental10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %1, %"class.headless::protocol::HeadlessExperimental::Backend"* %17) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN8headless8protocol20HeadlessExperimental10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.headless::protocol::HeadlessExperimental::Backend"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15HeadlessHandler6EnableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.headless::protocol::HeadlessHandler"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %3, align 8
  %5 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN8headless8protocol20HeadlessExperimental8Frontend23NeedsBeginFramesChangedEb(%"class.headless::protocol::HeadlessExperimental::Frontend"* nonnull %4, i1 zeroext true) #11
  br label %7

7:                                                ; preds = %2, %6
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #11
  ret void
}

declare void @_ZN8headless8protocol20HeadlessExperimental8Frontend23NeedsBeginFramesChangedEb(%"class.headless::protocol::HeadlessExperimental::Frontend"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless8protocol15HeadlessHandler6EnableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.headless::protocol::HeadlessHandler"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %1, i64 -1, i32 4
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46"* %3, i64 4, i32 0, i32 0, i32 0
  %5 = load %"class.headless::protocol::HeadlessExperimental::Frontend"*, %"class.headless::protocol::HeadlessExperimental::Frontend"** %4, align 8, !noalias !2
  %6 = icmp eq %"class.headless::protocol::HeadlessExperimental::Frontend"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN8headless8protocol20HeadlessExperimental8Frontend23NeedsBeginFramesChangedEb(%"class.headless::protocol::HeadlessExperimental::Frontend"* nonnull %5, i1 zeroext true) #11
  br label %8

8:                                                ; preds = %2, %7
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15HeadlessHandler7DisableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.headless::protocol::HeadlessHandler"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless8protocol15HeadlessHandler7DisableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.headless::protocol::HeadlessHandler"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless8protocol15HeadlessHandler10BeginFrameEN5crdtp6detail10ValueMaybeIdEES5_NS4_IbEENS3_8PtrMaybeINS0_20HeadlessExperimental16ScreenshotParamsEEENSt3__110unique_ptrINS8_7Backend18BeginFrameCallbackENSB_14default_deleteISE_EEEE(%"class.headless::protocol::HeadlessHandler"* nocapture readonly, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.74"* nocapture readonly, %"class.crdtp::detail::PtrMaybe"* nocapture readonly, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*) unnamed_addr #1 align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::TimeTicks", align 8
  %13 = alloca %"class.base::TimeDelta", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.crdtp::DispatchResponse", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.base::TimeTicks", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.crdtp::DispatchResponse", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.crdtp::DispatchResponse", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.base::OnceCallback.273", align 8
  %25 = ptrtoint %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5 to i64
  %26 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 2
  %27 = bitcast %"class.headless::HeadlessBrowserImpl"** %26 to %"class.headless::HeadlessBrowser"**
  %28 = load %"class.headless::HeadlessBrowser"*, %"class.headless::HeadlessBrowser"** %27, align 8
  %29 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 0, i32 3
  %30 = load %"class.content::WebContents"*, %"class.content::WebContents"** %29, align 8
  %31 = tail call %"class.headless::HeadlessWebContentsImpl"* @_ZN8headless23HeadlessWebContentsImpl4FromEPNS_15HeadlessBrowserEPN7content11WebContentsE(%"class.headless::HeadlessBrowser"* %28, %"class.content::WebContents"* %30) #11
  %32 = getelementptr inbounds %"class.headless::HeadlessWebContentsImpl", %"class.headless::HeadlessWebContentsImpl"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %62

35:                                               ; preds = %6
  %36 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  %37 = tail call i8* @_Znwm(i64 64) #10
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast i64* %39 to <2 x i64>*
  store <2 x i64> <i64 58, i64 -9223372036854775744>, <2 x i64>* %40, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %37, i8* align 1 getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i64 58, i1 false) #11
  %41 = getelementptr inbounds i8, i8* %37, i64 58
  store i8 0, i8* %41, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull %9) #11
  %42 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)***
  %43 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %43, i64 1
  %45 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %44, align 8
  call void %45(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %8) #11
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %35, %51
  %55 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %54, %59
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  br label %390

62:                                               ; preds = %6
  %63 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #11
  %64 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %63, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches33kRunAllCompositorStagesBeforeDrawE, i64 0, i64 0)) #11
  br i1 %64, label %92, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #11
  %67 = tail call i8* @_Znwm(i64 128) #10
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = bitcast i64* %69 to <2 x i64>*
  store <2 x i64> <i64 112, i64 -9223372036854775680>, <2 x i64>* %70, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %67, i8* align 1 getelementptr inbounds ([113 x i8], [113 x i8]* @.str.1, i64 0, i64 0), i64 112, i1 false) #11
  %71 = getelementptr inbounds i8, i8* %67, i64 112
  store i8 0, i8* %71, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull %11) #11
  %72 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)***
  %73 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %73, i64 1
  %75 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %74, align 8
  call void %75(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %10) #11
  %76 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %65
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %65, %81
  %85 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  %90 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #11
  br label %390

92:                                               ; preds = %62
  %93 = bitcast %"class.base::TimeTicks"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %12, i64 0, i32 0, i32 0
  store i64 0, i64* %94, align 8
  %95 = bitcast %"class.base::TimeDelta"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  %96 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %13, i64 0, i32 0
  store i64 0, i64* %96, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14)
  store i8 0, i8* %14, align 1
  %97 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.74", %"class.crdtp::detail::ValueMaybe.74"* %3, i64 0, i32 0
  %98 = load i8, i8* %97, align 1, !range !5
  %99 = icmp eq i8 %98, 0
  %100 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.74", %"class.crdtp::detail::ValueMaybe.74"* %3, i64 0, i32 1
  %101 = select i1 %99, i8* %14, i8* %100
  %102 = load i8, i8* %101, align 1, !range !5
  %103 = icmp ne i8 %102, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14)
  %104 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %1, i64 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !5
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %92
  %108 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %1, i64 0, i32 1
  %109 = load double, double* %108, align 8
  %110 = fmul double %109, 1.000000e+03
  %111 = fcmp ult double %110, 0xC3E0000000000000
  %112 = fcmp ugt double %110, 0x43DFFFFFFFFFFFFF
  %113 = fcmp ogt double %110, 0xC3E0000000000000
  %114 = select i1 %113, double %110, double 0xC3E0000000000000
  %115 = fptosi double %114 to i64
  %116 = select i1 %111, i64 0, i64 9223372036854775807
  %117 = select i1 %112, i64 %116, i64 %115
  br label %120

118:                                              ; preds = %92
  %119 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  br label %120

120:                                              ; preds = %118, %107
  %121 = phi i64 [ %119, %118 ], [ %117, %107 ]
  store i64 %121, i64* %94, align 8
  %122 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 0
  %123 = load i8, i8* %122, align 8, !range !5
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %165, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %2, i64 0, i32 1
  %127 = load double, double* %126, align 8
  %128 = fcmp ugt double %127, 0.000000e+00
  br i1 %128, label %156, label %129

129:                                              ; preds = %125
  %130 = bitcast %"class.crdtp::DispatchResponse"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #11
  %131 = tail call i8* @_Znwm(i64 48) #10
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %131, i8** %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = bitcast i64* %133 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %134, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %131, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33, i1 false) #11
  %135 = getelementptr inbounds i8, i8* %131, i64 33
  store i8 0, i8* %135, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %15, %"class.std::__1::basic_string"* nonnull %16) #11
  %136 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)***
  %137 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %137, i64 1
  %139 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %138, align 8
  call void %139(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %15) #11
  %140 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %15, i64 0, i32 1
  %141 = bitcast %"class.std::__1::basic_string"* %140 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %142 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %141, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 1
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %129
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #10
  br label %148

148:                                              ; preds = %129, %145
  %149 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %150 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %149, i64 0, i32 1, i32 0
  %151 = load i8, i8* %150, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %154) #10
  br label %155

155:                                              ; preds = %148, %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #11
  br label %388

156:                                              ; preds = %125
  %157 = fmul double %127, 1.000000e+03
  %158 = fcmp ult double %157, 0xC3E0000000000000
  %159 = fcmp ugt double %157, 0x43DFFFFFFFFFFFFF
  %160 = fcmp ogt double %157, 0xC3E0000000000000
  %161 = select i1 %160, double %157, double 0xC3E0000000000000
  %162 = fptosi double %161 to i64
  %163 = select i1 %158, i64 0, i64 9223372036854775807
  %164 = select i1 %159, i64 %163, i64 %162
  br label %165

165:                                              ; preds = %120, %156
  %166 = phi i64 [ %164, %156 ], [ 16666, %120 ]
  store i64 %166, i64* %96, align 8
  %167 = bitcast %"class.base::TimeTicks"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #11
  %168 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %17, i64 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %168, align 8
  %169 = add i64 %166, -9223372036854775807
  %170 = icmp ult i64 %169, 2
  br i1 %170, label %178, label %171

171:                                              ; preds = %165
  %172 = icmp slt i64 %166, 0
  %173 = select i1 %172, i64 -9223372036854775808, i64 9223372036854775807
  %174 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %121, i64 %166) #11
  %175 = extractvalue { i64, i1 } %174, 1
  %176 = extractvalue { i64, i1 } %174, 0
  %177 = select i1 %175, i64 %173, i64 %176, !prof !6
  br label %186

178:                                              ; preds = %165
  %179 = add i64 %121, -9223372036854775807
  %180 = icmp ugt i64 %179, 1
  %181 = icmp eq i64 %121, %166
  %182 = or i1 %181, %180
  br i1 %182, label %186, label %183

183:                                              ; preds = %178
  %184 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0)) #11
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #11
  br label %186

186:                                              ; preds = %171, %178, %183
  %187 = phi i64 [ %177, %171 ], [ %166, %178 ], [ %166, %183 ]
  store i64 %187, i64* %168, align 8
  %188 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"*, %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"** %188, align 8
  %190 = icmp eq %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"* %189, null
  br i1 %190, label %370, label %191

191:                                              ; preds = %186
  %192 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #11
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %195 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %196 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #11
  %197 = load i8*, i8** @_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams10FormatEnum3PngE, align 8
  %198 = call i64 @strlen(i8* %197) #11
  %199 = icmp ugt i64 %198, -17
  br i1 %199, label %200, label %202

200:                                              ; preds = %191
  %201 = bitcast %"class.std::__1::basic_string"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %201) #12
  unreachable

202:                                              ; preds = %191
  %203 = icmp ult i64 %198, 23
  br i1 %203, label %212, label %204

204:                                              ; preds = %202
  %205 = add nuw i64 %198, 16
  %206 = and i64 %205, -16
  %207 = call i8* @_Znwm(i64 %206) #10
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %207, i8** %208, align 8
  %209 = or i64 %206, -9223372036854775808
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %198, i64* %211, align 8
  br label %217

212:                                              ; preds = %202
  %213 = trunc i64 %198 to i8
  %214 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %214, i64 0, i32 1, i32 0
  store i8 %213, i8* %215, align 1
  %216 = icmp eq i64 %198, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %212, %204
  %218 = phi i8* [ %207, %204 ], [ %195, %212 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %218, i8* align 1 %197, i64 %198, i1 false) #11
  br label %219

219:                                              ; preds = %212, %217
  %220 = phi i8* [ %195, %212 ], [ %218, %217 ]
  %221 = getelementptr inbounds i8, i8* %220, i64 %198
  store i8 0, i8* %221, align 1
  %222 = getelementptr inbounds %"class.headless::protocol::HeadlessExperimental::ScreenshotParams", %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"* %189, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 8, !range !5, !noalias !7
  %224 = icmp eq i8 %223, 0
  %225 = getelementptr inbounds %"class.headless::protocol::HeadlessExperimental::ScreenshotParams", %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"* %189, i64 0, i32 1, i32 1
  %226 = select i1 %224, %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"* %225
  %227 = bitcast %"class.std::__1::basic_string"* %226 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %229 = load i8, i8* %228, align 1, !noalias !7
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %233, label %231

231:                                              ; preds = %219
  %232 = bitcast %"class.std::__1::basic_string"* %226 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %192, i8* align 8 %232, i64 24, i1 false) #11
  br label %238

233:                                              ; preds = %219
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8, !noalias !7
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %237 = load i64, i64* %236, align 8, !noalias !7
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %18, i8* %235, i64 %237) #11
  br label %238

238:                                              ; preds = %231, %233
  %239 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %240 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %239, i64 0, i32 1, i32 0
  %241 = load i8, i8* %240, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %238
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %245) #10
  br label %246

246:                                              ; preds = %238, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #11
  %247 = load i8*, i8** @_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams10FormatEnum3PngE, align 8
  %248 = call i64 @strlen(i8* %247) #11
  %249 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  %253 = load i64, i64* %194, align 8
  %254 = zext i8 %251 to i64
  %255 = select i1 %252, i64 %253, i64 %254
  %256 = icmp eq i64 %248, %255
  br i1 %256, label %257, label %264

257:                                              ; preds = %246
  %258 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %18, i64 0, i64 -1, i8* %247, i64 %248) #11
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %308, label %260

260:                                              ; preds = %257
  %261 = load i8, i8* %250, align 1
  %262 = load i64, i64* %194, align 8
  %263 = zext i8 %261 to i64
  br label %264

264:                                              ; preds = %260, %246
  %265 = phi i64 [ %263, %260 ], [ %254, %246 ]
  %266 = phi i64 [ %262, %260 ], [ %253, %246 ]
  %267 = phi i8 [ %261, %260 ], [ %251, %246 ]
  %268 = load i8*, i8** @_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams10FormatEnum4JpegE, align 8
  %269 = call i64 @strlen(i8* %268) #11
  %270 = icmp slt i8 %267, 0
  %271 = select i1 %270, i64 %266, i64 %265
  %272 = icmp eq i64 %269, %271
  br i1 %272, label %273, label %276

273:                                              ; preds = %264
  %274 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %18, i64 0, i64 -1, i8* %268, i64 %269) #11
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %308, label %276

276:                                              ; preds = %273, %264
  %277 = bitcast %"class.crdtp::DispatchResponse"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %277) #11
  %278 = call i8* @_Znwm(i64 32) #10
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %278, i8** %279, align 8
  %280 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %281 = bitcast i64* %280 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %281, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %278, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i64 25, i1 false) #11
  %282 = getelementptr inbounds i8, i8* %278, i64 25
  store i8 0, i8* %282, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %20, %"class.std::__1::basic_string"* nonnull %21) #11
  %283 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)***
  %284 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %284, i64 1
  %286 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %285, align 8
  call void %286(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %20) #11
  %287 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %20, i64 0, i32 1
  %288 = bitcast %"class.std::__1::basic_string"* %287 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %289 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %288, i64 0, i32 1, i32 0
  %290 = load i8, i8* %289, align 1
  %291 = icmp slt i8 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %276
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %287, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load i8*, i8** %293, align 8
  call void @_ZdlPv(i8* %294) #10
  br label %295

295:                                              ; preds = %276, %292
  %296 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %296, i64 0, i32 1, i32 0
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %302

300:                                              ; preds = %295
  %301 = load i8*, i8** %279, align 8
  call void @_ZdlPv(i8* %301) #10
  br label %302

302:                                              ; preds = %295, %300
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %277) #11
  %303 = load i8, i8* %250, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %306) #10
  br label %307

307:                                              ; preds = %302, %305
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #11
  br label %386

308:                                              ; preds = %257, %273
  %309 = load i8*, i8** @_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams10FormatEnum3PngE, align 8
  %310 = call i64 @strlen(i8* %309) #11
  %311 = load i8, i8* %250, align 1
  %312 = icmp slt i8 %311, 0
  %313 = load i64, i64* %194, align 8
  %314 = zext i8 %311 to i64
  %315 = select i1 %312, i64 %313, i64 %314
  %316 = icmp eq i64 %310, %315
  br i1 %316, label %317, label %321

317:                                              ; preds = %308
  %318 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %18, i64 0, i64 -1, i8* %309, i64 %310) #11
  %319 = icmp ne i32 %318, 0
  %320 = zext i1 %319 to i32
  br label %321

321:                                              ; preds = %308, %317
  %322 = phi i32 [ %320, %317 ], [ 1, %308 ]
  %323 = load %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"*, %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"** %188, align 8
  %324 = getelementptr inbounds %"class.headless::protocol::HeadlessExperimental::ScreenshotParams", %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"* %323, i64 0, i32 2, i32 0
  %325 = load i8, i8* %324, align 4, !range !5
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %363, label %327

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.headless::protocol::HeadlessExperimental::ScreenshotParams", %"class.headless::protocol::HeadlessExperimental::ScreenshotParams"* %323, i64 0, i32 2, i32 1
  %329 = load i32, i32* %328, align 4
  %330 = icmp ugt i32 %329, 100
  br i1 %330, label %331, label %363

331:                                              ; preds = %327
  %332 = bitcast %"class.crdtp::DispatchResponse"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %332) #11
  %333 = call i8* @_Znwm(i64 48) #10
  %334 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %333, i8** %334, align 8
  %335 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %336 = bitcast i64* %335 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %336, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %333, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0), i64 44, i1 false) #11
  %337 = getelementptr inbounds i8, i8* %333, i64 44
  store i8 0, i8* %337, align 1
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %22, %"class.std::__1::basic_string"* nonnull %23) #11
  %338 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)***
  %339 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*** %338, align 8
  %340 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %339, i64 1
  %341 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %340, align 8
  call void %341(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %22) #11
  %342 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %22, i64 0, i32 1
  %343 = bitcast %"class.std::__1::basic_string"* %342 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %343, i64 0, i32 1, i32 0
  %345 = load i8, i8* %344, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %331
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %342, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load i8*, i8** %348, align 8
  call void @_ZdlPv(i8* %349) #10
  br label %350

350:                                              ; preds = %331, %347
  %351 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %352 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %351, i64 0, i32 1, i32 0
  %353 = load i8, i8* %352, align 1
  %354 = icmp slt i8 %353, 0
  br i1 %354, label %355, label %357

355:                                              ; preds = %350
  %356 = load i8*, i8** %334, align 8
  call void @_ZdlPv(i8* %356) #10
  br label %357

357:                                              ; preds = %350, %355
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %332) #11
  %358 = load i8, i8* %250, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %362

360:                                              ; preds = %357
  %361 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %361) #10
  br label %362

362:                                              ; preds = %357, %360
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #11
  br label %386

363:                                              ; preds = %321, %327
  %364 = phi i32 [ %329, %327 ], [ 80, %321 ]
  %365 = load i8, i8* %250, align 1
  %366 = icmp slt i8 %365, 0
  br i1 %366, label %367, label %369

367:                                              ; preds = %363
  %368 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %368) #10
  br label %369

369:                                              ; preds = %363, %367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #11
  br label %370

370:                                              ; preds = %186, %369
  %371 = phi i32 [ %322, %369 ], [ -1431655766, %186 ]
  %372 = phi i32 [ %364, %369 ], [ -1431655766, %186 ]
  %373 = phi i1 [ true, %369 ], [ false, %186 ]
  %374 = call i8* @_Znwm(i64 56) #10, !noalias !10
  %375 = bitcast i8* %374 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %375, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::unique_ptr.274"*, %"class.std::__1::basic_string"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS3_14default_deleteIS9_EEEENS6_12_GLOBAL__N_113ImageEncodingEibNS4_I8SkBitmapNSA_ISF_EEEENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSC_SE_iEEEFvbSH_SN_EE7RunOnceEPNS0_13BindStateBaseEbOSH_OSN_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS2_14default_deleteIS8_EEEENS5_12_GLOBAL__N_113ImageEncodingEibNS3_I8SkBitmapNS9_ISE_EEEENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJSB_SD_iEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !10
  %376 = getelementptr inbounds i8, i8* %374, i64 32
  %377 = bitcast i8* %376 to i64*
  store i64 ptrtoint (void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i32, i32, i1, %class.SkBitmap*, %"class.std::__1::basic_string"*)* @_ZN8headless8protocol12_GLOBAL__N_120OnBeginFrameFinishedENSt3__110unique_ptrINS0_20HeadlessExperimental7Backend18BeginFrameCallbackENS2_14default_deleteIS6_EEEENS1_13ImageEncodingEibNS3_I8SkBitmapNS7_ISB_EEEENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i64), i64* %377, align 8, !noalias !10
  %378 = getelementptr inbounds i8, i8* %374, i64 40
  %379 = bitcast i8* %378 to i64*
  store i64 %25, i64* %379, align 8, !noalias !10
  %380 = getelementptr inbounds i8, i8* %374, i64 48
  %381 = bitcast i8* %380 to i32*
  store i32 %371, i32* %381, align 4, !noalias !10
  %382 = getelementptr inbounds i8, i8* %374, i64 52
  %383 = bitcast i8* %382 to i32*
  store i32 %372, i32* %383, align 4, !noalias !10
  %384 = bitcast %"class.base::OnceCallback.273"* %24 to i8**
  store i8* %374, i8** %384, align 8, !alias.scope !10
  call void @_ZN8headless23HeadlessWebContentsImpl10BeginFrameERKN4base9TimeTicksES4_RKNS1_9TimeDeltaEbbNS1_12OnceCallbackIFvbNSt3__110unique_ptrI8SkBitmapNS9_14default_deleteISB_EEEENS9_12basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEE(%"class.headless::HeadlessWebContentsImpl"* %31, %"class.base::TimeTicks"* nonnull dereferenceable(8) %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %17, %"class.base::TimeDelta"* nonnull dereferenceable(8) %13, i1 zeroext %103, i1 zeroext %373, %"class.base::OnceCallback.273"* nonnull %24) #11
  %385 = getelementptr inbounds %"class.base::OnceCallback.273", %"class.base::OnceCallback.273"* %24, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %385) #11
  br label %386

386:                                              ; preds = %362, %307, %370
  %387 = phi i64 [ %25, %307 ], [ %25, %362 ], [ 0, %370 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #11
  br label %388

388:                                              ; preds = %155, %386
  %389 = phi i64 [ %387, %386 ], [ %25, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  br label %390

390:                                              ; preds = %388, %91, %61
  %391 = phi i64 [ %389, %388 ], [ %25, %91 ], [ %25, %61 ]
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %399, label %393

393:                                              ; preds = %390
  %394 = inttoptr i64 %391 to %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*
  %395 = inttoptr i64 %391 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)***
  %396 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*** %395, align 8
  %397 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)** %396, i64 4
  %398 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)** %397, align 8
  call void %398(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* nonnull %394) #11
  br label %399

399:                                              ; preds = %390, %393
  ret void
}

declare %"class.headless::HeadlessWebContentsImpl"* @_ZN8headless23HeadlessWebContentsImpl4FromEPNS_15HeadlessBrowserEPN7content11WebContentsE(%"class.headless::HeadlessBrowser"*, %"class.content::WebContents"*) local_unnamed_addr #4

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #4

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

declare void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare void @_ZN8headless23HeadlessWebContentsImpl10BeginFrameERKN4base9TimeTicksES4_RKNS1_9TimeDeltaEbbNS1_12OnceCallbackIFvbNSt3__110unique_ptrI8SkBitmapNS9_14default_deleteISB_EEEENS9_12basic_stringIcNS9_11char_traitsIcEENS9_9allocatorIcEEEEEEE(%"class.headless::HeadlessWebContentsImpl"*, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::TimeTicks"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.base::OnceCallback.273"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless8protocol12_GLOBAL__N_120OnBeginFrameFinishedENSt3__110unique_ptrINS0_20HeadlessExperimental7Backend18BeginFrameCallbackENS2_14default_deleteIS6_EEEENS1_13ImageEncodingEibNS3_I8SkBitmapNS7_ISB_EEEENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i32, i32, i1 zeroext, %class.SkBitmap*, %"class.std::__1::basic_string"* nocapture) #1 {
  %7 = alloca %"class.gfx::Image", align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.crdtp::detail::ValueMaybe.280", align 8
  %11 = alloca %"class.crdtp::detail::ValueMaybe.280", align 8
  %12 = alloca %"class.headless::protocol::Binary", align 8
  %13 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %6
  %21 = zext i8 %15 to i64
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %50, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #11
  %27 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %28, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #11
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull %9) #11
  %29 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)***
  %30 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %30, i64 1
  %32 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.crdtp::DispatchResponse"*)** %31, align 8
  call void %32(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %8) #11
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %25, %38
  %42 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #11
  br label %129

50:                                               ; preds = %22
  %51 = icmp eq %class.SkBitmap* %4, null
  br i1 %51, label %64, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %64, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 2, i32 1, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 0, i32 0
  %62 = load %class.SkPixelRef*, %class.SkPixelRef** %61, align 8
  %63 = icmp eq %class.SkPixelRef* %62, null
  br i1 %63, label %64, label %70

64:                                               ; preds = %50, %52, %56, %60
  %65 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.280", %"class.crdtp::detail::ValueMaybe.280"* %10, i64 0, i32 0
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.280", %"class.crdtp::detail::ValueMaybe.280"* %10, i64 0, i32 1
  call void @_ZN8headless8protocol6BinaryC1Ev(%"class.headless::protocol::Binary"* %66) #11
  %67 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)***
  %68 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)*** %67, align 8
  %69 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)** %68, align 8
  call void %69(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0, i1 zeroext %3, %"class.crdtp::detail::ValueMaybe.280"* nonnull %10) #11
  call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* %66) #11
  br label %129

70:                                               ; preds = %60
  %71 = bitcast %"class.gfx::Image"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #11, !noalias !15
  %72 = getelementptr inbounds %"class.gfx::Image", %"class.gfx::Image"* %7, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageStorage"*), %"class.gfx::internal::ImageStorage"** %72, align 8, !noalias !15
  call void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* nonnull sret %7, %class.SkBitmap* nonnull dereferenceable(56) %4) #11, !noalias !15
  switch i32 %1, label %109 [
    i32 0, label %73
    i32 1, label %75
  ]

73:                                               ; preds = %70
  %74 = call %"class.base::RefCountedMemory"* @_ZNK3gfx5Image12As1xPNGBytesEv(%"class.gfx::Image"* nonnull %7) #11
  br label %97

75:                                               ; preds = %70
  %76 = call i8* @_Znwm(i64 40) #10
  %77 = bitcast i8* %76 to %"class.base::RefCountedBytes"*
  call void @_ZN4base15RefCountedBytesC1Ev(%"class.base::RefCountedBytes"* nonnull %77) #11
  %78 = getelementptr inbounds i8, i8* %76, i64 8
  %79 = bitcast i8* %78 to i32*
  %80 = atomicrmw add i32* %79, i32 1 monotonic, !noalias !15
  %81 = getelementptr inbounds i8, i8* %76, i64 16
  %82 = bitcast i8* %81 to %"class.std::__1::vector.285"*
  %83 = call zeroext i1 @_ZN3gfx26JPEG1xEncodedDataFromImageERKNS_5ImageEiPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.gfx::Image"* nonnull dereferenceable(8) %7, i32 %2, %"class.std::__1::vector.285"* %82) #11
  br i1 %83, label %84, label %87

84:                                               ; preds = %75
  %85 = bitcast i8* %76 to %"class.base::RefCountedMemory"*
  %86 = atomicrmw add i32* %79, i32 1 monotonic, !noalias !15
  br label %87

87:                                               ; preds = %84, %75
  %88 = phi %"class.base::RefCountedMemory"* [ %85, %84 ], [ null, %75 ]
  %89 = atomicrmw sub i32* %79, i32 1 acq_rel, !noalias !15
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast i8* %76 to %"class.base::RefCountedMemory"*
  %93 = bitcast i8* %76 to void (%"class.base::RefCountedMemory"*)***
  %94 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %93, align 8, !noalias !15
  %95 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %94, i64 3
  %96 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %95, align 8
  call void %96(%"class.base::RefCountedMemory"* nonnull %92) #11
  br label %97

97:                                               ; preds = %91, %87, %73
  %98 = phi %"class.base::RefCountedMemory"* [ %74, %73 ], [ %88, %87 ], [ %88, %91 ]
  %99 = icmp eq %"class.base::RefCountedMemory"* %98, null
  br i1 %99, label %109, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.base::RefCountedMemory"* %98 to i8* (%"class.base::RefCountedMemory"*)***
  %102 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %101, align 8
  %103 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %102, align 8
  %104 = call i8* %103(%"class.base::RefCountedMemory"* nonnull %98) #11
  %105 = icmp eq i8* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %98, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic
  call void @_ZN8headless8protocol6Binary14fromRefCountedE13scoped_refptrIN4base16RefCountedMemoryEE(%"class.headless::protocol::Binary"* nonnull sret %12, %"class.base::RefCountedMemory"* nonnull %98) #11
  br label %111

109:                                              ; preds = %97, %70
  call void @_ZN8headless8protocol6BinaryC1Ev(%"class.headless::protocol::Binary"* nonnull %12) #11
  br label %123

110:                                              ; preds = %100
  call void @_ZN8headless8protocol6BinaryC1Ev(%"class.headless::protocol::Binary"* nonnull %12) #11
  br label %111

111:                                              ; preds = %110, %106
  %112 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %98, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe.282", %"class.base::RefCountedThreadSafe.282"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %123

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.base::RefCountedThreadSafe.282", %"class.base::RefCountedThreadSafe.282"* %112, i64 -2
  %118 = bitcast %"class.base::RefCountedThreadSafe.282"* %117 to %"class.base::RefCountedMemory"*
  %119 = bitcast %"class.base::RefCountedThreadSafe.282"* %117 to void (%"class.base::RefCountedMemory"*)***
  %120 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %120, i64 3
  %122 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %121, align 8
  call void %122(%"class.base::RefCountedMemory"* nonnull %118) #11
  br label %123

123:                                              ; preds = %116, %111, %109
  call void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #11, !noalias !15
  %124 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.280", %"class.crdtp::detail::ValueMaybe.280"* %11, i64 0, i32 0
  store i8 1, i8* %124, align 8
  %125 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.280", %"class.crdtp::detail::ValueMaybe.280"* %11, i64 0, i32 1
  call void @_ZN8headless8protocol6BinaryC1ERKS1_(%"class.headless::protocol::Binary"* %125, %"class.headless::protocol::Binary"* nonnull dereferenceable(16) %12) #11
  %126 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)***
  %127 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)*** %126, align 8
  %128 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i1, %"class.crdtp::detail::ValueMaybe.280"*)** %127, align 8
  call void %128(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0, i1 zeroext %3, %"class.crdtp::detail::ValueMaybe.280"* nonnull %11) #11
  call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* %125) #11
  call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* nonnull %12) #11
  br label %131

129:                                              ; preds = %64, %49
  %130 = icmp eq %class.SkBitmap* %4, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %123, %129
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #11
  %132 = bitcast %class.SkBitmap* %4 to i8*
  call void @_ZdlPv(i8* %132) #10
  br label %133

133:                                              ; preds = %129, %131
  %134 = icmp eq %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %133
  %136 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %0 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)***
  %137 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)** %137, i64 4
  %139 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)** %138, align 8
  call void %139(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* nonnull %0) #11
  br label %140

140:                                              ; preds = %133, %135
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N8headless8protocol15HeadlessHandler10BeginFrameEN5crdtp6detail10ValueMaybeIdEES5_NS4_IbEENS3_8PtrMaybeINS0_20HeadlessExperimental16ScreenshotParamsEEENSt3__110unique_ptrINS8_7Backend18BeginFrameCallbackENSB_14default_deleteISE_EEEE(%"class.headless::protocol::HeadlessHandler"* nocapture readonly, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.74"* nocapture readonly, %"class.crdtp::detail::PtrMaybe"* nocapture readonly, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.headless::protocol::HeadlessHandler", %"class.headless::protocol::HeadlessHandler"* %0, i64 -1, i32 4
  %8 = bitcast %"class.std::__1::unique_ptr.46"* %7 to %"class.headless::protocol::HeadlessHandler"*
  tail call void @_ZN8headless8protocol15HeadlessHandler10BeginFrameEN5crdtp6detail10ValueMaybeIdEES5_NS4_IbEENS3_8PtrMaybeINS0_20HeadlessExperimental16ScreenshotParamsEEENSt3__110unique_ptrINS8_7Backend18BeginFrameCallbackENSB_14default_deleteISE_EEEE(%"class.headless::protocol::HeadlessHandler"* %8, %"class.crdtp::detail::ValueMaybe"* %1, %"class.crdtp::detail::ValueMaybe"* %2, %"class.crdtp::detail::ValueMaybe.74"* %3, %"class.crdtp::detail::PtrMaybe"* %4, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %5)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"*) unnamed_addr #5

declare void @_ZN8headless8protocol6BinaryC1Ev(%"class.headless::protocol::Binary"*) unnamed_addr #4

declare void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #4

declare %"class.base::RefCountedMemory"* @_ZNK3gfx5Image12As1xPNGBytesEv(%"class.gfx::Image"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN4base15RefCountedBytesC1Ev(%"class.base::RefCountedBytes"*) unnamed_addr #4

declare zeroext i1 @_ZN3gfx26JPEG1xEncodedDataFromImageERKNS_5ImageEiPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.gfx::Image"* dereferenceable(8), i32, %"class.std::__1::vector.285"*) local_unnamed_addr #4

declare void @_ZN8headless8protocol6Binary14fromRefCountedE13scoped_refptrIN4base16RefCountedMemoryEE(%"class.headless::protocol::Binary"* sret, %"class.base::RefCountedMemory"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gfx5ImageD1Ev(%"class.gfx::Image"*) unnamed_addr #5

declare void @_ZN8headless8protocol6BinaryC1ERKS1_(%"class.headless::protocol::Binary"*, %"class.headless::protocol::Binary"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS3_14default_deleteIS9_EEEENS6_12_GLOBAL__N_113ImageEncodingEibNS4_I8SkBitmapNSA_ISF_EEEENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSC_SE_iEEEFvbSH_SN_EE7RunOnceEPNS0_13BindStateBaseEbOSH_OSN_(%"class.base::internal::BindStateBase"* nocapture, i1 zeroext, %"class.std::__1::unique_ptr.274"* nocapture dereferenceable(8), %"class.std::__1::basic_string"* nocapture dereferenceable(24)) #1 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i32, i32, i1, %class.SkBitmap*, %"class.std::__1::basic_string"*)**
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to %"class.std::__1::tuple"*
  %10 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %11 = bitcast void ()** %10 to i32*
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 2, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i32, i32, i1, %class.SkBitmap*, %"class.std::__1::basic_string"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, i32, i32, i1, %class.SkBitmap*, %"class.std::__1::basic_string"*)** %7, align 8
  %15 = bitcast void ()** %8 to %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"**
  %16 = load %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"** %15, align 8
  store %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* null, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"** %15, align 8
  %17 = load i32, i32* %11, align 4
  %18 = load i32, i32* %12, align 4
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.SkBitmap*, %class.SkBitmap** %19, align 8
  store %class.SkBitmap* null, %class.SkBitmap** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %21, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  call void %14(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %16, i32 %17, i32 %18, i1 zeroext %1, %class.SkBitmap* %20, %"class.std::__1::basic_string"* nonnull %5) #11
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %4, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS2_14default_deleteIS8_EEEENS5_12_GLOBAL__N_113ImageEncodingEibNS3_I8SkBitmapNS9_ISE_EEEENS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEJSB_SD_iEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"**
  %6 = load %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"** %5, align 8
  store %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* null, %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"** %5, align 8
  %7 = icmp eq %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* %6 to void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)***
  %10 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)**, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)** %10, i64 4
  %12 = load void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)*, void (%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"*)** %11, align 8
  tail call void %12(%"class.headless::protocol::HeadlessExperimental::Backend::BeginFrameCallback"* nonnull %6) #11
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8headless8protocol15HeadlessHandler6EnableEv: argument 0"}
!4 = distinct !{!4, !"_ZN8headless8protocol15HeadlessHandler6EnableEv"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams9GetFormatERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE: argument 0"}
!9 = distinct !{!9, !"_ZN8headless8protocol20HeadlessExperimental16ScreenshotParams9GetFormatERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS3_14default_deleteIS9_EEEENS6_12_GLOBAL__N_113ImageEncodingEibNS4_I8SkBitmapNSA_ISF_EEEENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSC_RSE_RiEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS3_14default_deleteIS9_EEEENS6_12_GLOBAL__N_113ImageEncodingEibNS4_I8SkBitmapNSA_ISF_EEEENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEJSC_RSE_RiEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS1_14default_deleteIS7_EEEENS4_12_GLOBAL__N_113ImageEncodingEibNS2_I8SkBitmapNS8_ISD_EEEENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJSA_RSC_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIPFvNSt3__110unique_ptrIN8headless8protocol20HeadlessExperimental7Backend18BeginFrameCallbackENS1_14default_deleteIS7_EEEENS4_12_GLOBAL__N_113ImageEncodingEibNS2_I8SkBitmapNS8_ISD_EEEENS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJSA_RSC_RiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN8headless8protocol12_GLOBAL__N_112EncodeBitmapERK8SkBitmapNS1_13ImageEncodingEi: argument 0"}
!17 = distinct !{!17, !"_ZN8headless8protocol12_GLOBAL__N_112EncodeBitmapERK8SkBitmapNS1_13ImageEncodingEi"}
