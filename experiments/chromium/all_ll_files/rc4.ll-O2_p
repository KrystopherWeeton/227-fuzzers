; ModuleID = '../../third_party/boringssl/src/crypto/rc4/rc4.c'
source_filename = "../../third_party/boringssl/src/crypto/rc4/rc4.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rc4_key_st = type { i32, i32, [256 x i32] }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @RC4(%struct.rc4_key_st* nocapture, i64, i8* nocapture readonly, i8* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %13, %4
  %11 = phi i32 [ %8, %4 ], [ %23, %13 ]
  %12 = phi i32 [ %6, %4 ], [ %18, %13 ]
  store i32 %12, i32* %5, align 4
  store i32 %11, i32* %7, align 4
  ret void

13:                                               ; preds = %4, %13
  %14 = phi i32 [ %18, %13 ], [ %6, %4 ]
  %15 = phi i32 [ %23, %13 ], [ %8, %4 ]
  %16 = phi i64 [ %37, %13 ], [ 0, %4 ]
  %17 = add i32 %14, 1
  %18 = and i32 %17, 255
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %15
  %23 = and i32 %22, 255
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %24
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %20, align 4
  store i32 %21, i32* %25, align 4
  %27 = add i32 %26, %21
  %28 = and i32 %27, 255
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %2, i64 %16
  %33 = load i8, i8* %32, align 1
  %34 = trunc i32 %31 to i8
  %35 = xor i8 %33, %34
  %36 = getelementptr inbounds i8, i8* %3, i64 %16
  store i8 %35, i8* %36, align 1
  %37 = add nuw i64 %16, 1
  %38 = icmp eq i64 %37, %1
  br i1 %38, label %10, label %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @RC4_set_key(%struct.rc4_key_st* nocapture, i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi i64 [ 0, %3 ], [ %35, %6 ]
  %8 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %3 ], [ %36, %6 ]
  %9 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %7
  %10 = add <4 x i32> %8, <i32 4, i32 4, i32 4, i32 4>
  %11 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> %8, <4 x i32>* %11, align 4
  %12 = getelementptr inbounds i32, i32* %9, i64 4
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> %10, <4 x i32>* %13, align 4
  %14 = or i64 %7, 8
  %15 = add <4 x i32> %8, <i32 8, i32 8, i32 8, i32 8>
  %16 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %14
  %17 = add <4 x i32> %8, <i32 12, i32 12, i32 12, i32 12>
  %18 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> %15, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds i32, i32* %16, i64 4
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %20, align 4
  %21 = or i64 %7, 16
  %22 = add <4 x i32> %8, <i32 16, i32 16, i32 16, i32 16>
  %23 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %21
  %24 = add <4 x i32> %8, <i32 20, i32 20, i32 20, i32 20>
  %25 = bitcast i32* %23 to <4 x i32>*
  store <4 x i32> %22, <4 x i32>* %25, align 4
  %26 = getelementptr inbounds i32, i32* %23, i64 4
  %27 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> %24, <4 x i32>* %27, align 4
  %28 = or i64 %7, 24
  %29 = add <4 x i32> %8, <i32 24, i32 24, i32 24, i32 24>
  %30 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %28
  %31 = add <4 x i32> %8, <i32 28, i32 28, i32 28, i32 28>
  %32 = bitcast i32* %30 to <4 x i32>*
  store <4 x i32> %29, <4 x i32>* %32, align 4
  %33 = getelementptr inbounds i32, i32* %30, i64 4
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> %31, <4 x i32>* %34, align 4
  %35 = add nuw nsw i64 %7, 32
  %36 = add <4 x i32> %8, <i32 32, i32 32, i32 32, i32 32>
  %37 = icmp eq i64 %35, 256
  br i1 %37, label %39, label %6, !llvm.loop !2

38:                                               ; preds = %39
  ret void

39:                                               ; preds = %6, %39
  %40 = phi i64 [ %58, %39 ], [ 0, %6 ]
  %41 = phi i32 [ %51, %39 ], [ 0, %6 ]
  %42 = phi i32 [ %54, %39 ], [ 0, %6 ]
  %43 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %40
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds i8, i8* %2, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add i32 %44, %41
  %50 = add i32 %49, %48
  %51 = and i32 %50, 255
  %52 = add i32 %42, 1
  %53 = icmp eq i32 %52, %1
  %54 = select i1 %53, i32 0, i32 %52
  %55 = zext i32 %51 to i64
  %56 = getelementptr inbounds %struct.rc4_key_st, %struct.rc4_key_st* %0, i64 0, i32 2, i64 %55
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %43, align 4
  store i32 %44, i32* %56, align 4
  %58 = add nuw nsw i64 %40, 1
  %59 = icmp eq i64 %58, 256
  br i1 %59, label %38, label %39
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
