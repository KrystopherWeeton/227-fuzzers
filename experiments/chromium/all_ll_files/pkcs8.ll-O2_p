; ModuleID = '../../third_party/boringssl/src/crypto/pkcs8/pkcs8.c'
source_filename = "../../third_party/boringssl/src/crypto/pkcs8/pkcs8.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pbe_suite = type { i32, [10 x i8], i8, %struct.evp_cipher_st* ()*, %struct.env_md_st* ()*, i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)* }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.env_md_st = type opaque
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.engine_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque

@.str = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/pkcs8/pkcs8.c\00", align 1
@kBuiltinPBE = internal constant [4 x %struct.pbe_suite] [%struct.pbe_suite { i32 149, [10 x i8] c"*\86H\86\F7\0D\01\0C\01\06", i8 10, %struct.evp_cipher_st* ()* @EVP_rc2_40_cbc, %struct.env_md_st* ()* @EVP_sha1, i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)* @pkcs12_pbe_decrypt_init }, %struct.pbe_suite { i32 144, [10 x i8] c"*\86H\86\F7\0D\01\0C\01\01", i8 10, %struct.evp_cipher_st* ()* @EVP_rc4, %struct.env_md_st* ()* @EVP_sha1, i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)* @pkcs12_pbe_decrypt_init }, %struct.pbe_suite { i32 146, [10 x i8] c"*\86H\86\F7\0D\01\0C\01\03", i8 10, %struct.evp_cipher_st* ()* @EVP_des_ede3_cbc, %struct.env_md_st* ()* @EVP_sha1, i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)* @pkcs12_pbe_decrypt_init }, %struct.pbe_suite { i32 161, [10 x i8] c"*\86H\86\F7\0D\01\05\0D\00", i8 9, %struct.evp_cipher_st* ()* null, %struct.env_md_st* ()* null, i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)* @PKCS5_pbe2_decrypt_init }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pkcs12_key_gen(i8*, i64, i8* nocapture readonly, i64, i8 zeroext, i32, i64, i8* nocapture, %struct.env_md_st*) local_unnamed_addr #0 {
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.env_md_ctx_st, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca [128 x i8], align 16
  %17 = alloca [64 x i8], align 16
  %18 = alloca i32, align 4
  %19 = alloca [128 x i8], align 16
  %20 = icmp eq i32 %5, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %9
  tail call void @ERR_put_error(i32 19, i32 0, i32 129, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 116) #3
  br label %267

22:                                               ; preds = %9
  %23 = bitcast %struct.env_md_ctx_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #3
  %24 = bitcast %struct.env_md_ctx_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %13) #3
  %25 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #3
  store i8* null, i8** %14, align 8
  %26 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #3
  store i64 0, i64* %15, align 8
  %27 = icmp eq i8* %0, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %22
  %29 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false) #3
  %30 = shl i64 %1, 1
  %31 = call i32 @CBB_init(%struct.cbb_st* nonnull %10, i64 %30) #3
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 79) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #3
  br label %262

34:                                               ; preds = %28
  %35 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false) #3
  call void @CBS_init(%struct.cbs_st* nonnull %11, i8* nonnull %0, i64 %1) #3
  %36 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #3
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = bitcast i32* %12 to i8*
  br label %40

40:                                               ; preds = %48, %38
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #3
  store i32 -1431655766, i32* %12, align 4
  %41 = call i32 @cbs_get_utf8(%struct.cbs_st* nonnull %11, i32* nonnull %12) #3
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %12, align 4
  %45 = call i32 @cbb_add_ucs2_be(%struct.cbb_st* nonnull %10, i32 %44) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43, %40
  call void @ERR_put_error(i32 19, i32 0, i32 131, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 91) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #3
  br label %57

48:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #3
  %49 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #3
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %40

51:                                               ; preds = %48, %34
  %52 = call i32 @cbb_add_ucs2_be(%struct.cbb_st* nonnull %10, i32 0) #3
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = call i32 @CBB_finish(%struct.cbb_st* nonnull %10, i8** nonnull %14, i64* nonnull %15) #3
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %47, %51, %54
  call void @CBB_cleanup(%struct.cbb_st* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #3
  br label %262

58:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #3
  br label %59

59:                                               ; preds = %58, %22
  %60 = call i64 @EVP_MD_block_size(%struct.env_md_st* %8) #3
  %61 = getelementptr inbounds [128 x i8], [128 x i8]* %16, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -86, i64 128, i1 false)
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 %4, i64 %60, i1 false) #3
  br label %64

64:                                               ; preds = %59, %63
  %65 = add i64 %60, -1
  %66 = add i64 %65, %3
  %67 = icmp ult i64 %66, %3
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = load i64, i64* %15, align 8
  %70 = add i64 %65, %69
  %71 = icmp ult i64 %70, %69
  br i1 %71, label %72, label %73

72:                                               ; preds = %68, %64
  call void @ERR_put_error(i32 19, i32 0, i32 69, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 152) #3
  br label %262

73:                                               ; preds = %68
  %74 = urem i64 %66, %60
  %75 = sub i64 %66, %74
  %76 = urem i64 %70, %60
  %77 = sub i64 %70, %76
  %78 = add i64 %77, %75
  %79 = icmp ult i64 %78, %75
  br i1 %79, label %80, label %81

80:                                               ; preds = %73
  call void @ERR_put_error(i32 19, i32 0, i32 69, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 159) #3
  br label %262

81:                                               ; preds = %73
  %82 = call i8* @OPENSSL_malloc(i64 %78) #3
  %83 = icmp ne i64 %78, 0
  %84 = icmp eq i8* %82, null
  %85 = and i1 %83, %84
  br i1 %85, label %93, label %86

86:                                               ; preds = %81
  %87 = icmp eq i64 %75, 0
  br i1 %87, label %102, label %88

88:                                               ; preds = %86
  %89 = and i64 %75, 1
  %90 = icmp eq i64 %75, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = sub i64 %75, %89
  br label %109

93:                                               ; preds = %81
  call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 165) #3
  br label %262

94:                                               ; preds = %109, %88
  %95 = phi i64 [ 0, %88 ], [ %121, %109 ]
  %96 = icmp eq i64 %89, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = urem i64 %95, %3
  %99 = getelementptr inbounds i8, i8* %2, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = getelementptr inbounds i8, i8* %82, i64 %95
  store i8 %100, i8* %101, align 1
  br label %102

102:                                              ; preds = %97, %94, %86
  %103 = icmp eq i64 %77, 0
  br i1 %103, label %135, label %104

104:                                              ; preds = %102
  %105 = and i64 %77, 1
  %106 = icmp eq i64 %77, 1
  br i1 %106, label %124, label %107

107:                                              ; preds = %104
  %108 = sub i64 %77, %105
  br label %150

109:                                              ; preds = %109, %91
  %110 = phi i64 [ 0, %91 ], [ %121, %109 ]
  %111 = phi i64 [ %92, %91 ], [ %122, %109 ]
  %112 = urem i64 %110, %3
  %113 = getelementptr inbounds i8, i8* %2, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = getelementptr inbounds i8, i8* %82, i64 %110
  store i8 %114, i8* %115, align 1
  %116 = or i64 %110, 1
  %117 = urem i64 %116, %3
  %118 = getelementptr inbounds i8, i8* %2, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = getelementptr inbounds i8, i8* %82, i64 %116
  store i8 %119, i8* %120, align 1
  %121 = add nuw i64 %110, 2
  %122 = add i64 %111, -2
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %94, label %109

124:                                              ; preds = %150, %104
  %125 = phi i64 [ 0, %104 ], [ %168, %150 ]
  %126 = icmp eq i64 %105, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %124
  %128 = load i8*, i8** %14, align 8
  %129 = load i64, i64* %15, align 8
  %130 = urem i64 %125, %129
  %131 = getelementptr inbounds i8, i8* %128, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = add i64 %125, %75
  %134 = getelementptr inbounds i8, i8* %82, i64 %133
  store i8 %132, i8* %134, align 1
  br label %135

135:                                              ; preds = %127, %124, %102
  %136 = icmp eq i64 %6, 0
  br i1 %136, label %262, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds [64 x i8], [64 x i8]* %17, i64 0, i64 0
  %139 = bitcast i32* %18 to i8*
  %140 = icmp ugt i32 %5, 1
  %141 = getelementptr inbounds [128 x i8], [128 x i8]* %19, i64 0, i64 0
  %142 = icmp eq i64 %78, 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %138) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 -86, i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #3
  store i32 -1431655766, i32* %18, align 4
  %143 = call i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st* nonnull %13, %struct.env_md_st* %8, %struct.engine_st* null) #3
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %258, label %145

145:                                              ; preds = %137
  %146 = and i64 %60, 1
  %147 = icmp eq i64 %60, 1
  %148 = sub i64 %60, %146
  %149 = icmp eq i64 %146, 0
  br label %171

150:                                              ; preds = %150, %107
  %151 = phi i64 [ 0, %107 ], [ %168, %150 ]
  %152 = phi i64 [ %108, %107 ], [ %169, %150 ]
  %153 = load i8*, i8** %14, align 8
  %154 = load i64, i64* %15, align 8
  %155 = urem i64 %151, %154
  %156 = getelementptr inbounds i8, i8* %153, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = add i64 %151, %75
  %159 = getelementptr inbounds i8, i8* %82, i64 %158
  store i8 %157, i8* %159, align 1
  %160 = or i64 %151, 1
  %161 = load i8*, i8** %14, align 8
  %162 = load i64, i64* %15, align 8
  %163 = urem i64 %160, %162
  %164 = getelementptr inbounds i8, i8* %161, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = add i64 %160, %75
  %167 = getelementptr inbounds i8, i8* %82, i64 %166
  store i8 %165, i8* %167, align 1
  %168 = add nuw i64 %151, 2
  %169 = add i64 %152, -2
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %124, label %150

171:                                              ; preds = %145, %259
  %172 = phi i8* [ %206, %259 ], [ %7, %145 ]
  %173 = phi i64 [ %207, %259 ], [ %6, %145 ]
  %174 = call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* nonnull %13, i8* nonnull %61, i64 %60) #3
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %258, label %176

176:                                              ; preds = %171
  %177 = call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* nonnull %13, i8* %82, i64 %78) #3
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %258, label %179

179:                                              ; preds = %176
  %180 = call i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st* nonnull %13, i8* nonnull %138, i32* nonnull %18) #3
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %258, label %182

182:                                              ; preds = %179
  br i1 %140, label %185, label %198

183:                                              ; preds = %194
  %184 = icmp eq i32 %197, %5
  br i1 %184, label %198, label %185

185:                                              ; preds = %182, %183
  %186 = phi i32 [ %197, %183 ], [ 1, %182 ]
  %187 = call i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st* nonnull %13, %struct.env_md_st* %8, %struct.engine_st* null) #3
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %258, label %189

189:                                              ; preds = %185
  %190 = load i32, i32* %18, align 4
  %191 = zext i32 %190 to i64
  %192 = call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* nonnull %13, i8* nonnull %138, i64 %191) #3
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %258, label %194

194:                                              ; preds = %189
  %195 = call i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st* nonnull %13, i8* nonnull %138, i32* nonnull %18) #3
  %196 = icmp eq i32 %195, 0
  %197 = add nuw i32 %186, 1
  br i1 %196, label %258, label %183

198:                                              ; preds = %183, %182
  %199 = load i32, i32* %18, align 4
  %200 = zext i32 %199 to i64
  %201 = icmp ult i64 %173, %200
  %202 = select i1 %201, i64 %173, i64 %200
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %205, label %204

204:                                              ; preds = %198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* nonnull align 16 %138, i64 %202, i1 false) #3
  br label %205

205:                                              ; preds = %198, %204
  %206 = getelementptr inbounds i8, i8* %172, i64 %202
  %207 = sub i64 %173, %202
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %205
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %138) #3
  br label %262

210:                                              ; preds = %205
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %141) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %141, i8 -86, i64 128, i1 false)
  br i1 %62, label %221, label %211

211:                                              ; preds = %210
  %212 = load i32, i32* %18, align 4
  %213 = zext i32 %212 to i64
  br i1 %147, label %214, label %222

214:                                              ; preds = %222, %211
  %215 = phi i64 [ 0, %211 ], [ %234, %222 ]
  br i1 %149, label %221, label %216

216:                                              ; preds = %214
  %217 = urem i64 %215, %213
  %218 = getelementptr inbounds [64 x i8], [64 x i8]* %17, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds [128 x i8], [128 x i8]* %19, i64 0, i64 %215
  store i8 %219, i8* %220, align 1
  br label %221

221:                                              ; preds = %216, %214, %210
  br i1 %142, label %259, label %237

222:                                              ; preds = %211, %222
  %223 = phi i64 [ %234, %222 ], [ 0, %211 ]
  %224 = phi i64 [ %235, %222 ], [ %148, %211 ]
  %225 = urem i64 %223, %213
  %226 = getelementptr inbounds [64 x i8], [64 x i8]* %17, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = getelementptr inbounds [128 x i8], [128 x i8]* %19, i64 0, i64 %223
  store i8 %227, i8* %228, align 2
  %229 = or i64 %223, 1
  %230 = urem i64 %229, %213
  %231 = getelementptr inbounds [64 x i8], [64 x i8]* %17, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = getelementptr inbounds [128 x i8], [128 x i8]* %19, i64 0, i64 %229
  store i8 %232, i8* %233, align 1
  %234 = add nuw i64 %223, 2
  %235 = add i64 %224, -2
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %214, label %222

237:                                              ; preds = %221, %239
  %238 = phi i64 [ %240, %239 ], [ 0, %221 ]
  br i1 %62, label %239, label %242

239:                                              ; preds = %242, %237
  %240 = add i64 %238, %60
  %241 = icmp ult i64 %240, %78
  br i1 %241, label %237, label %259

242:                                              ; preds = %237, %242
  %243 = phi i64 [ %256, %242 ], [ %65, %237 ]
  %244 = phi i32 [ %255, %242 ], [ 1, %237 ]
  %245 = add i64 %243, %238
  %246 = getelementptr inbounds i8, i8* %82, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = getelementptr inbounds [128 x i8], [128 x i8]* %19, i64 0, i64 %243
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = add nuw nsw i32 %244, %248
  %253 = add nuw nsw i32 %252, %251
  %254 = trunc i32 %253 to i8
  store i8 %254, i8* %246, align 1
  %255 = lshr i32 %253, 8
  %256 = add i64 %243, -1
  %257 = icmp ult i64 %256, %60
  br i1 %257, label %242, label %239

258:                                              ; preds = %259, %171, %176, %179, %194, %189, %185, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %138) #3
  br label %262

259:                                              ; preds = %239, %221
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %141) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %138) #3
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %138) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %138, i8 -86, i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #3
  store i32 -1431655766, i32* %18, align 4
  %260 = call i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st* nonnull %13, %struct.env_md_st* %8, %struct.engine_st* null) #3
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %258, label %171

262:                                              ; preds = %135, %72, %80, %93, %33, %57, %258, %209
  %263 = phi i32 [ 0, %72 ], [ 0, %80 ], [ 0, %93 ], [ 0, %33 ], [ 0, %57 ], [ 0, %258 ], [ 1, %209 ], [ 1, %135 ]
  %264 = phi i8* [ null, %72 ], [ null, %80 ], [ null, %93 ], [ null, %33 ], [ null, %57 ], [ %82, %258 ], [ %82, %209 ], [ %82, %135 ]
  call void @OPENSSL_free(i8* %264) #3
  %265 = load i8*, i8** %14, align 8
  call void @OPENSSL_free(i8* %265) #3
  %266 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #3
  br label %267

267:                                              ; preds = %262, %21
  %268 = phi i32 [ 0, %21 ], [ %263, %262 ]
  ret i32 %268
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #1

declare i64 @EVP_MD_block_size(%struct.env_md_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #1

declare i32 @EVP_DigestUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #1

declare i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st*, i8*, i32*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pkcs12_pbe_encrypt_init(%struct.cbb_st*, %struct.evp_cipher_ctx_st*, i32, i32, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %9 = alloca %struct.cbb_st, align 8
  %10 = alloca %struct.cbb_st, align 8
  %11 = alloca %struct.cbb_st, align 8
  %12 = alloca %struct.cbb_st, align 8
  switch i32 %2, label %15 [
    i32 149, label %16
    i32 144, label %13
    i32 146, label %14
  ]

13:                                               ; preds = %8
  br label %16

14:                                               ; preds = %8
  br label %16

15:                                               ; preds = %8
  tail call void @ERR_put_error(i32 19, i32 0, i32 119, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 339) #3
  br label %54

16:                                               ; preds = %8, %13, %14
  %17 = phi %struct.pbe_suite* [ getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 2), %14 ], [ getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 1), %13 ], [ getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 0), %8 ]
  %18 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = bitcast %struct.cbb_st* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %20 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = bitcast %struct.cbb_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %9, i32 536870928) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %52, label %24

24:                                               ; preds = %16
  %25 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %10, i32 6) #3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.pbe_suite, %struct.pbe_suite* %17, i64 0, i32 1, i64 0
  %29 = getelementptr inbounds %struct.pbe_suite, %struct.pbe_suite* %17, i64 0, i32 2
  %30 = load i8, i8* %29, align 2
  %31 = zext i8 %30 to i64
  %32 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %10, i8* %28, i64 %31) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %52, label %34

34:                                               ; preds = %27
  %35 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %11, i32 536870928) #3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %34
  %38 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %11, %struct.cbb_st* nonnull %12, i32 4) #3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %37
  %41 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %12, i8* %6, i64 %7) #3
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = zext i32 %3 to i64
  %45 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %11, i64 %44) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = call fastcc i32 @pkcs12_pbe_cipher_init(%struct.pbe_suite* nonnull %17, %struct.evp_cipher_ctx_st* %1, i32 %3, i8* %4, i64 %5, i8* %6, i64 %7, i32 1)
  br label %52

52:                                               ; preds = %16, %24, %27, %34, %37, %40, %43, %47, %50
  %53 = phi i32 [ %51, %50 ], [ 0, %47 ], [ 0, %43 ], [ 0, %40 ], [ 0, %37 ], [ 0, %34 ], [ 0, %27 ], [ 0, %24 ], [ 0, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #3
  br label %54

54:                                               ; preds = %52, %15
  %55 = phi i32 [ 0, %15 ], [ %53, %52 ]
  ret i32 %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #1

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #1

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #1

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pkcs12_pbe_cipher_init(%struct.pbe_suite* nocapture readonly, %struct.evp_cipher_ctx_st*, i32, i8*, i64, i8* nocapture readonly, i64, i32) unnamed_addr #0 {
  %9 = alloca [64 x i8], align 16
  %10 = alloca [16 x i8], align 16
  %11 = getelementptr inbounds %struct.pbe_suite, %struct.pbe_suite* %0, i64 0, i32 3
  %12 = load %struct.evp_cipher_st* ()*, %struct.evp_cipher_st* ()** %11, align 8
  %13 = tail call %struct.evp_cipher_st* %12() #3
  %14 = getelementptr inbounds %struct.pbe_suite, %struct.pbe_suite* %0, i64 0, i32 4
  %15 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %14, align 8
  %16 = tail call %struct.env_md_st* %15() #3
  %17 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %17) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 64, i1 false)
  %18 = getelementptr inbounds [16 x i8], [16 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 16, i1 false)
  %19 = tail call i32 @EVP_CIPHER_key_length(%struct.evp_cipher_st* %13) #3
  %20 = zext i32 %19 to i64
  %21 = call i32 @pkcs12_key_gen(i8* %3, i64 %4, i8* %5, i64 %6, i8 zeroext 1, i32 %2, i64 %20, i8* nonnull %17, %struct.env_md_st* %16)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %8
  %24 = tail call i32 @EVP_CIPHER_iv_length(%struct.evp_cipher_st* %13) #3
  %25 = zext i32 %24 to i64
  %26 = call i32 @pkcs12_key_gen(i8* %3, i64 %4, i8* %5, i64 %6, i8 zeroext 2, i32 %2, i64 %25, i8* nonnull %18, %struct.env_md_st* %16)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %8
  tail call void @ERR_put_error(i32 19, i32 0, i32 110, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 247) #3
  br label %31

29:                                               ; preds = %23
  %30 = call i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st* %1, %struct.evp_cipher_st* %13, %struct.engine_st* null, i8* nonnull %17, i8* nonnull %18, i32 %7) #3
  call void @OPENSSL_cleanse(i8* nonnull %17, i64 64) #3
  call void @OPENSSL_cleanse(i8* nonnull %18, i64 16) #3
  br label %31

31:                                               ; preds = %29, %28
  %32 = phi i32 [ %30, %29 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %17) #3
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @pkcs8_pbe_decrypt(i8** nocapture, i64* nocapture, %struct.cbs_st*, i8*, i64, i8*, i64) local_unnamed_addr #0 {
  %8 = alloca %struct.evp_cipher_ctx_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = bitcast %struct.evp_cipher_ctx_st* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 144, i1 false)
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %8) #3
  %13 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #3
  %14 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = call i32 @CBS_get_asn1(%struct.cbs_st* %2, %struct.cbs_st* nonnull %9, i32 6) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 0, i32 1, i64 0), i64 10) #3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %24

20:                                               ; preds = %7
  call void @ERR_put_error(i32 19, i32 0, i32 104, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 370) #3
  br label %57

21:                                               ; preds = %17
  %22 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 1, i32 1, i64 0), i64 10) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %61, label %24

24:                                               ; preds = %64, %61, %21, %17
  %25 = phi i64 [ 0, %17 ], [ 1, %21 ], [ 2, %61 ], [ 3, %64 ]
  %26 = getelementptr inbounds [4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 %25
  %27 = icmp eq %struct.pbe_suite* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %64, %24
  call void @ERR_put_error(i32 19, i32 0, i32 119, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 382) #3
  br label %57

29:                                               ; preds = %24
  %30 = getelementptr inbounds [4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 %25, i32 5
  %31 = load i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)*, i32 (%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*)** %30, align 8
  %32 = call i32 %31(%struct.pbe_suite* nonnull %26, %struct.evp_cipher_ctx_st* nonnull %8, i8* %3, i64 %4, %struct.cbs_st* %2) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  call void @ERR_put_error(i32 19, i32 0, i32 109, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 387) #3
  br label %57

35:                                               ; preds = %29
  %36 = call i8* @OPENSSL_malloc(i64 %6) #3
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @ERR_put_error(i32 19, i32 0, i32 65, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 393) #3
  br label %57

39:                                               ; preds = %35
  %40 = icmp ugt i64 %6, 2147483647
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  call void @ERR_put_error(i32 19, i32 0, i32 69, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 398) #3
  br label %57

42:                                               ; preds = %39
  store i32 -1431655766, i32* %10, align 4
  store i32 -1431655766, i32* %11, align 4
  %43 = trunc i64 %6 to i32
  %44 = call i32 @EVP_DecryptUpdate(%struct.evp_cipher_ctx_st* nonnull %8, i8* nonnull %36, i32* nonnull %10, i8* %5, i32 %43) #3
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %10, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %36, i64 %48
  %50 = call i32 @EVP_DecryptFinal_ex(%struct.evp_cipher_ctx_st* nonnull %8, i8* %49, i32* nonnull %11) #3
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  store i8* %36, i8** %0, align 8
  %53 = load i32, i32* %10, align 4
  %54 = load i32, i32* %11, align 4
  %55 = add nsw i32 %54, %53
  %56 = sext i32 %55 to i64
  store i64 %56, i64* %1, align 8
  br label %57

57:                                               ; preds = %46, %42, %52, %41, %38, %34, %28, %20
  %58 = phi i32 [ 0, %28 ], [ 0, %38 ], [ 0, %41 ], [ 1, %52 ], [ 0, %46 ], [ 0, %42 ], [ 0, %34 ], [ 0, %20 ]
  %59 = phi i8* [ null, %28 ], [ null, %38 ], [ %36, %41 ], [ null, %52 ], [ %36, %46 ], [ %36, %42 ], [ null, %34 ], [ null, %20 ]
  call void @OPENSSL_free(i8* %59) #3
  %60 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %12) #3
  ret i32 %58

61:                                               ; preds = %21
  %62 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 2, i32 1, i64 0), i64 10) #3
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %24

64:                                               ; preds = %61
  %65 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %9, i8* getelementptr inbounds ([4 x %struct.pbe_suite], [4 x %struct.pbe_suite]* @kBuiltinPBE, i64 0, i64 3, i32 1, i64 0), i64 9) #3
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %28, label %24
}

declare void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st*) local_unnamed_addr #1

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #1

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #1

declare i32 @EVP_DecryptUpdate(%struct.evp_cipher_ctx_st*, i8*, i32*, i8*, i32) local_unnamed_addr #1

declare i32 @EVP_DecryptFinal_ex(%struct.evp_cipher_ctx_st*, i8*, i32*) local_unnamed_addr #1

declare i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @PKCS8_parse_encrypted_private_key(%struct.cbs_st*, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  %11 = bitcast %struct.cbs_st* %5 to i8*
  %12 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #3
  %13 = bitcast %struct.cbs_st* %6 to i8*
  %14 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #3
  %15 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %4, i32 536870928) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %3
  %19 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32 536870928) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %6, i32 4) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %24, %21, %18, %3
  call void @ERR_put_error(i32 19, i32 0, i32 104, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 427) #3
  br label %43

28:                                               ; preds = %24
  %29 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #3
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #3
  store i64 -6148914691236517206, i64* %8, align 8
  %31 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #3
  %32 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #3
  %33 = call i32 @pkcs8_pbe_decrypt(i8** nonnull %7, i64* nonnull %8, %struct.cbs_st* nonnull %5, i8* %1, i64 %2, i8* %31, i64 %32)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #3
  %37 = bitcast %struct.cbs_st* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  %38 = load i8*, i8** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %9, i8* %38, i64 %39) #3
  %40 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %9) #3
  call void @OPENSSL_free(i8* %38) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #3
  br label %41

41:                                               ; preds = %28, %35
  %42 = phi %struct.evp_pkey_st* [ %40, %35 ], [ null, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #3
  br label %43

43:                                               ; preds = %41, %27
  %44 = phi %struct.evp_pkey_st* [ null, %27 ], [ %42, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  ret %struct.evp_pkey_st* %44
}

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #1

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #1

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #1

declare %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @PKCS8_marshal_encrypted_private_key(%struct.cbb_st*, i32, %struct.evp_cipher_st*, i8*, i64, i8*, i64, i32, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.evp_cipher_ctx_st, align 8
  %13 = alloca %struct.cbb_st, align 8
  %14 = alloca %struct.cbb_st, align 8
  %15 = alloca %struct.cbb_st, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #3
  store i8* null, i8** %10, align 8
  %20 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #3
  store i64 0, i64* %11, align 8
  %21 = bitcast %struct.evp_cipher_ctx_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %21) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 144, i1 false)
  call void @EVP_CIPHER_CTX_init(%struct.evp_cipher_ctx_st* nonnull %12) #3
  %22 = icmp eq i8* %5, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %9
  %24 = icmp eq i64 %6, 0
  %25 = select i1 %24, i64 8, i64 %6
  %26 = call i8* @OPENSSL_malloc(i64 %25) #3
  %27 = icmp eq i8* %26, null
  br i1 %27, label %100, label %28

28:                                               ; preds = %23
  %29 = call i32 @RAND_bytes(i8* nonnull %26, i64 %25) #3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %100, label %31

31:                                               ; preds = %28, %9
  %32 = phi i64 [ %6, %9 ], [ %25, %28 ]
  %33 = phi i8* [ %5, %9 ], [ %26, %28 ]
  %34 = phi i8* [ null, %9 ], [ %26, %28 ]
  %35 = icmp slt i32 %7, 1
  %36 = select i1 %35, i32 2048, i32 %7
  %37 = bitcast %struct.cbb_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = call i32 @CBB_init(%struct.cbb_st* nonnull %13, i64 128) #3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %31
  %41 = call i32 @EVP_marshal_private_key(%struct.cbb_st* nonnull %13, %struct.evp_pkey_st* %8) #3
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = call i32 @CBB_finish(%struct.cbb_st* nonnull %13, i8** nonnull %10, i64* nonnull %11) #3
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43, %40, %31
  call void @CBB_cleanup(%struct.cbb_st* nonnull %13) #3
  br label %100

47:                                               ; preds = %43
  %48 = bitcast %struct.cbb_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false)
  %49 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %14, i32 536870928) #3
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %100, label %51

51:                                               ; preds = %47
  %52 = icmp eq i32 %1, -1
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = call i32 @PKCS5_pbe2_encrypt_init(%struct.cbb_st* nonnull %14, %struct.evp_cipher_ctx_st* nonnull %12, %struct.evp_cipher_st* %2, i32 %36, i8* %3, i64 %4, i8* nonnull %33, i64 %32) #3
  br label %57

55:                                               ; preds = %51
  %56 = call i32 @pkcs12_pbe_encrypt_init(%struct.cbb_st* nonnull %14, %struct.evp_cipher_ctx_st* nonnull %12, i32 %1, i32 %36, i8* %3, i64 %4, i8* nonnull %33, i64 %32)
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i32 [ %54, %53 ], [ %56, %55 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %100, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %11, align 8
  %62 = call i32 @EVP_CIPHER_CTX_block_size(%struct.evp_cipher_ctx_st* nonnull %12) #3
  %63 = zext i32 %62 to i64
  %64 = add i64 %61, %63
  %65 = load i64, i64* %11, align 8
  %66 = icmp ult i64 %64, %65
  br i1 %66, label %67, label %68

67:                                               ; preds = %60
  call void @ERR_put_error(i32 19, i32 0, i32 118, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 507) #3
  br label %100

68:                                               ; preds = %60
  %69 = bitcast %struct.cbb_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 32, i1 false)
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  store i32 -1431655766, i32* %17, align 4
  store i32 -1431655766, i32* %18, align 4
  %70 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %14, %struct.cbb_st* nonnull %15, i32 4) #3
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %100, label %72

72:                                               ; preds = %68
  %73 = call i32 @CBB_reserve(%struct.cbb_st* nonnull %15, i8** nonnull %16, i64 %64) #3
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %100, label %75

75:                                               ; preds = %72
  %76 = load i8*, i8** %16, align 8
  %77 = load i8*, i8** %10, align 8
  %78 = load i64, i64* %11, align 8
  %79 = trunc i64 %78 to i32
  %80 = call i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st* nonnull %12, i8* %76, i32* nonnull %17, i8* %77, i32 %79) #3
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %100, label %82

82:                                               ; preds = %75
  %83 = load i8*, i8** %16, align 8
  %84 = load i32, i32* %17, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = call i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st* nonnull %12, i8* %86, i32* nonnull %18) #3
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %82
  %90 = load i32, i32* %17, align 4
  %91 = load i32, i32* %18, align 4
  %92 = add nsw i32 %91, %90
  %93 = sext i32 %92 to i64
  %94 = call i32 @CBB_did_write(%struct.cbb_st* nonnull %15, i64 %93) #3
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %89
  %97 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  %98 = icmp ne i32 %97, 0
  %99 = zext i1 %98 to i32
  br label %100

100:                                              ; preds = %96, %28, %89, %82, %75, %72, %68, %57, %47, %23, %67, %46
  %101 = phi i32 [ 0, %23 ], [ 0, %67 ], [ 0, %89 ], [ 0, %82 ], [ 0, %75 ], [ 0, %72 ], [ 0, %68 ], [ 0, %57 ], [ 0, %47 ], [ 0, %46 ], [ 0, %28 ], [ %99, %96 ]
  %102 = phi i8* [ null, %23 ], [ %34, %67 ], [ %34, %89 ], [ %34, %82 ], [ %34, %75 ], [ %34, %72 ], [ %34, %68 ], [ %34, %57 ], [ %34, %47 ], [ %34, %46 ], [ %26, %28 ], [ %34, %96 ]
  %103 = load i8*, i8** %10, align 8
  call void @OPENSSL_free(i8* %103) #3
  call void @OPENSSL_free(i8* %102) #3
  %104 = call i32 @EVP_CIPHER_CTX_cleanup(%struct.evp_cipher_ctx_st* nonnull %12) #3
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %21) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #3
  ret i32 %101
}

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #1

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #1

declare i32 @EVP_marshal_private_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #1

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #1

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #1

declare i32 @PKCS5_pbe2_encrypt_init(%struct.cbb_st*, %struct.evp_cipher_ctx_st*, %struct.evp_cipher_st*, i32, i8*, i64, i8*, i64) local_unnamed_addr #1

declare i32 @EVP_CIPHER_CTX_block_size(%struct.evp_cipher_ctx_st*) local_unnamed_addr #1

declare i32 @CBB_reserve(%struct.cbb_st*, i8**, i64) local_unnamed_addr #1

declare i32 @EVP_CipherUpdate(%struct.evp_cipher_ctx_st*, i8*, i32*, i8*, i32) local_unnamed_addr #1

declare i32 @EVP_CipherFinal_ex(%struct.evp_cipher_ctx_st*, i8*, i32*) local_unnamed_addr #1

declare i32 @CBB_did_write(%struct.cbb_st*, i64) local_unnamed_addr #1

declare i32 @cbs_get_utf8(%struct.cbs_st*, i32*) local_unnamed_addr #1

declare i32 @cbb_add_ucs2_be(%struct.cbb_st*, i32) local_unnamed_addr #1

declare i32 @EVP_CIPHER_key_length(%struct.evp_cipher_st*) local_unnamed_addr #1

declare i32 @EVP_CIPHER_iv_length(%struct.evp_cipher_st*) local_unnamed_addr #1

declare i32 @EVP_CipherInit_ex(%struct.evp_cipher_ctx_st*, %struct.evp_cipher_st*, %struct.engine_st*, i8*, i8*, i32) local_unnamed_addr #1

declare void @OPENSSL_cleanse(i8*, i64) local_unnamed_addr #1

declare %struct.evp_cipher_st* @EVP_rc2_40_cbc() #1

declare %struct.env_md_st* @EVP_sha1() #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @pkcs12_pbe_decrypt_init(%struct.pbe_suite* nocapture readonly, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*) #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #3
  %10 = bitcast %struct.cbs_st* %7 to i8*
  %11 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #3
  %12 = bitcast i64* %8 to i8*
  %13 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #3
  store i64 -6148914691236517206, i64* %8, align 8
  %14 = call i32 @CBS_get_asn1(%struct.cbs_st* %4, %struct.cbs_st* nonnull %6, i32 536870928) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %5
  %17 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7, i32 4) #3
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %6, i64* nonnull %8) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = call i64 @CBS_len(%struct.cbs_st* %4) #3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25, %22, %19, %16, %5
  call void @ERR_put_error(i32 19, i32 0, i32 104, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 267) #3
  br label %40

29:                                               ; preds = %25
  %30 = load i64, i64* %8, align 8
  %31 = call i32 @pkcs12_iterations_acceptable(i64 %30) #3
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  call void @ERR_put_error(i32 19, i32 0, i32 129, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 272) #3
  br label %40

34:                                               ; preds = %29
  %35 = load i64, i64* %8, align 8
  %36 = trunc i64 %35 to i32
  %37 = call i8* @CBS_data(%struct.cbs_st* nonnull %7) #3
  %38 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #3
  %39 = call fastcc i32 @pkcs12_pbe_cipher_init(%struct.pbe_suite* %0, %struct.evp_cipher_ctx_st* %1, i32 %36, i8* %2, i64 %3, i8* %37, i64 %38, i32 0)
  br label %40

40:                                               ; preds = %34, %33, %28
  %41 = phi i32 [ 0, %28 ], [ %39, %34 ], [ 0, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #3
  ret i32 %41
}

declare %struct.evp_cipher_st* @EVP_rc4() #1

declare %struct.evp_cipher_st* @EVP_des_ede3_cbc() #1

declare i32 @PKCS5_pbe2_decrypt_init(%struct.pbe_suite*, %struct.evp_cipher_ctx_st*, i8*, i64, %struct.cbs_st*) #1

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #1

declare i32 @pkcs12_iterations_acceptable(i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
