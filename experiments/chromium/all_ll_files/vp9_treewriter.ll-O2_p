; ModuleID = '../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_treewriter.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp9/encoder/vp9_treewriter.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vp9_token = type { i32, i32 }

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @vp9_tokens_from_tree(%struct.vp9_token* nocapture, i8* nocapture readonly) local_unnamed_addr #0 {
  tail call fastcc void @tree2tok(%struct.vp9_token* %0, i8* %1, i32 0, i32 0, i32 0)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @tree2tok(%struct.vp9_token* nocapture, i8* nocapture readonly, i32, i32, i32) unnamed_addr #0 {
  %6 = shl nsw i32 %3, 1
  %7 = add nsw i32 %4, 1
  %8 = sext i32 %2 to i64
  %9 = add nsw i64 %8, 1
  %10 = getelementptr inbounds i8, i8* %1, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp slt i8 %11, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = sub nsw i32 0, %12
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.vp9_token, %struct.vp9_token* %0, i64 %16, i32 0
  store i32 %6, i32* %17, align 4
  %18 = getelementptr inbounds %struct.vp9_token, %struct.vp9_token* %0, i64 %16, i32 1
  store i32 %7, i32* %18, align 4
  br label %20

19:                                               ; preds = %5
  tail call fastcc void @tree2tok(%struct.vp9_token* %0, i8* %1, i32 %12, i32 %6, i32 %7)
  br label %20

20:                                               ; preds = %19, %14
  %21 = or i32 %6, 1
  %22 = getelementptr inbounds i8, i8* %1, i64 %9
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp slt i8 %23, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call fastcc void @tree2tok(%struct.vp9_token* %0, i8* %1, i32 %24, i32 %21, i32 %7)
  br label %32

27:                                               ; preds = %20
  %28 = sub nsw i32 0, %24
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.vp9_token, %struct.vp9_token* %0, i64 %29, i32 0
  store i32 %21, i32* %30, align 4
  %31 = getelementptr inbounds %struct.vp9_token, %struct.vp9_token* %0, i64 %29, i32 1
  store i32 %7, i32* %31, align 4
  br label %32

32:                                               ; preds = %27, %26
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @vp9_tree_probs_from_distribution(i8*, [2 x i32]*, i32*) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @convert_distribution(i32 0, i8* %0, [2 x i32]* %1, i32* %2)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @convert_distribution(i32, i8*, [2 x i32]*, i32*) unnamed_addr #0 {
  %5 = zext i32 %0 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp slt i8 %7, 1
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = sub nsw i32 0, %8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %3, i64 %12
  %14 = load i32, i32* %13, align 4
  br label %17

15:                                               ; preds = %4
  %16 = tail call fastcc i32 @convert_distribution(i32 %8, i8* %1, [2 x i32]* %2, i32* %3)
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i32 [ %14, %10 ], [ %16, %15 ]
  %19 = add i32 %0, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp slt i8 %22, 1
  br i1 %24, label %25, label %30

25:                                               ; preds = %17
  %26 = sub nsw i32 0, %23
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %3, i64 %27
  %29 = load i32, i32* %28, align 4
  br label %32

30:                                               ; preds = %17
  %31 = tail call fastcc i32 @convert_distribution(i32 %23, i8* %1, [2 x i32]* %2, i32* %3)
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i32 [ %29, %25 ], [ %31, %30 ]
  %34 = lshr i32 %0, 1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 %35, i64 0
  store i32 %18, i32* %36, align 4
  %37 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 %35, i64 1
  store i32 %33, i32* %37, align 4
  %38 = add i32 %33, %18
  ret i32 %38
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
