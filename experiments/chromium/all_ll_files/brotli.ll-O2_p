; ModuleID = '../../third_party/brotli/tools/brotli.c'
source_filename = "../../third_party/brotli/tools/brotli.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.Context = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, [20 x i32], i64, i64, i32, i8**, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, %struct._IO_FILE*, %struct._IO_FILE*, i64, i8*, i64, i8*, i64, i64 }
%struct.BrotliEncoderStateStruct = type opaque
%struct.BrotliDecoderStateStruct = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.utimbuf = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }

@.str = private unnamed_addr constant [4 x i8] c".br\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"out of memory\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"too many options passed\0A\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"quality already set\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"write to standard output already set\0A\00", align 1
@.str.5 = private unnamed_addr constant [37 x i8] c"command already set when parsing -d\0A\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"force output overwrite already set\0A\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"argument --rm / -j or --keep / -k already set\0A\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"argument --no-copy-stat / -n already set\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"command already set when parsing -t\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"argument --verbose / -v already set\0A\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"invalid argument -%c\0A\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"expected parameter for argument -%c\0A\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"write to standard output already set (-o)\0A\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"error parsing quality value [%s]\0A\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"lgwin parameter already set\0A\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"error parsing lgwin value [%s]\0A\00", align 1
@.str.17 = private unnamed_addr constant [52 x i8] c"lgwin parameter (%d) smaller than the minimum (%d)\0A\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"suffix already set\0A\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"best\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"decompress\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"command already set when parsing --decompress\0A\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"keep\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"no-copy-stat\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"rm\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.29 = private unnamed_addr constant [41 x i8] c"command already set when parsing --test\0A\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.32 = private unnamed_addr constant [39 x i8] c"must pass the parameter as --%s=value\0A\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"lgwin\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"large_window\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"write to standard output already set (--output)\0A\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"quality\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"invalid parameter: [%s]\0A\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"unbrotli\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.41 = private unnamed_addr constant [17 x i8] c"brotli %d.%d.%d\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"Use -h help. Use -f to force output to a terminal.\0A\00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"empty output file name for [%s] input file\0A\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"input file [%s] suffix mismatch\0A\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"con\00", align 1
@.str.47 = private unnamed_addr constant [36 x i8] c"failed to open input file [%s]: %s\0A\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.49 = private unnamed_addr constant [37 x i8] c"failed to open output file [%s]: %s\0A\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"failed to compress data [%s]\0A\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"Compressed \00", align 1
@.str.52 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"failed to read input [%s]: %s\0A\00", align 1
@.str.54 = private unnamed_addr constant [33 x i8] c"failed to write output [%s]: %s\0A\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"[%s]: \00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"%d B\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"%0.3f KiB\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"%0.3f MiB\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"%0.3f GiB\00", align 1
@.str.61 = private unnamed_addr constant [24 x i8] c"fclose failed [%s]: %s\0A\00", align 1
@.str.62 = private unnamed_addr constant [41 x i8] c"setting access bits failed for [%s]: %s\0A\00", align 1
@.str.63 = private unnamed_addr constant [35 x i8] c"setting group failed for [%s]: %s\0A\00", align 1
@.str.64 = private unnamed_addr constant [34 x i8] c"setting user failed for [%s]: %s\0A\00", align 1
@.str.65 = private unnamed_addr constant [53 x i8] c"Use -h help. Use -f to force input from a terminal.\0A\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"corrupt input [%s]\0A\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"Decompressed \00", align 1
@.str.68 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 1
@.str.69 = private unnamed_addr constant [275 x i8] c"Options:\0A  -#                          compression level (0-9)\0A  -c, --stdout                write on standard output\0A  -d, --decompress            decompress\0A  -f, --force                 force output file overwrite\0A  -h, --help                  display this help and exit\0A\00", align 1
@.str.70 = private unnamed_addr constant [246 x i8] c"  -j, --rm                    remove source file(s)\0A  -k, --keep                  keep source file(s) (default)\0A  -n, --no-copy-stat          do not copy source file(s) attributes\0A  -o FILE, --output=FILE      output file (only if 1 input file)\0A\00", align 1
@.str.71 = private unnamed_addr constant [57 x i8] c"  -q NUM, --quality=NUM       compression level (%d-%d)\0A\00", align 1
@.str.72 = private unnamed_addr constant [105 x i8] c"  -t, --test                  test compressed file integrity\0A  -v, --verbose               verbose mode\0A\00", align 1
@.str.73 = private unnamed_addr constant [192 x i8] c"  -w NUM, --lgwin=NUM         set LZ77 window size (0, %d-%d)\0A                              window size = 2**NUM - 16\0A                              0 lets compressor choose the optimal value\0A\00", align 1
@.str.74 = private unnamed_addr constant [340 x i8] c"  --large_window=NUM          use incompatible large-window brotli\0A                              bitstream with window size (0, %d-%d)\0A                              WARNING: this format is not compatible\0A                              with brotli RFC 7932 and may not be\0A                              decodable with regular brotli decoders\0A\00", align 1
@.str.75 = private unnamed_addr constant [65 x i8] c"  -S SUF, --suffix=SUF        output file suffix (default:'%s')\0A\00", align 1
@.str.76 = private unnamed_addr constant [305 x i8] c"  -V, --version               display version and exit\0A  -Z, --best                  use best compression level (11) (default)\0ASimple options could be coalesced, i.e. '-9kf' is equivalent to '-9 -k -f'.\0AWith no FILE, or when FILE is -, read standard input.\0AAll arguments after '--' are treated as files.\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @main(i32, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.Context, align 16
  %4 = bitcast %struct.Context* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 304, i1 false)
  %5 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 1
  %7 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 3
  %9 = bitcast %struct.Context* %3 to <4 x i32>*
  store <4 x i32> <i32 11, i32 -1, i32 0, i32 0>, <4 x i32>* %9, align 16
  %10 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 4
  store i32 0, i32* %10, align 16
  %11 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 5
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 7
  %13 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 6
  %14 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 8
  %15 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 10
  %16 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 11
  %17 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %16, align 16
  %18 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 12, i64 0
  %19 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 80, i1 false)
  %20 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 13
  %21 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 14
  %22 = bitcast i64* %20 to <2 x i64>*
  store <2 x i64> <i64 1, i64 0>, <2 x i64>* %22, align 8
  %23 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 15
  store i32 %0, i32* %23, align 8
  %24 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 16
  store i8** %1, i8*** %24, align 16
  %25 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 17
  %26 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 20
  %27 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 21
  store i8* null, i8** %27, align 16
  %28 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 24
  %29 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 25
  %30 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 27
  %31 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false)
  %32 = bitcast i8** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false)
  %33 = bitcast %struct._IO_FILE** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %33, i8 0, i64 16, i1 false)
  %34 = load i8*, i8** %1, align 8
  %35 = tail call i8* @strrchr(i8* %34, i32 47) #12
  %36 = icmp eq i8* %35, null
  %37 = getelementptr inbounds i8, i8* %35, i64 1
  %38 = select i1 %36, i8* %34, i8* %37
  %39 = tail call i8* @strrchr(i8* %38, i32 92) #12
  %40 = icmp eq i8* %39, null
  %41 = getelementptr inbounds i8, i8* %39, i64 1
  %42 = select i1 %40, i8* %38, i8* %41
  %43 = tail call i32 @strncmp(i8* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i64 8) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %2
  %46 = getelementptr inbounds i8, i8* %42, i64 8
  %47 = load i8, i8* %46, align 1
  switch i8 %47, label %48 [
    i8 0, label %49
    i8 46, label %49
  ]

48:                                               ; preds = %45
  br label %49

49:                                               ; preds = %48, %45, %45, %2
  %50 = phi i32 [ 1, %45 ], [ 1, %45 ], [ 0, %48 ], [ 0, %2 ]
  %51 = icmp sgt i32 %0, 1
  br i1 %51, label %52, label %767

52:                                               ; preds = %49
  %53 = bitcast i8** %16 to i64*
  %54 = bitcast i8** %15 to i64*
  br label %55

55:                                               ; preds = %752, %52
  %56 = phi i32 [ %50, %52 ], [ %764, %752 ]
  %57 = phi i32 [ 0, %52 ], [ %763, %752 ]
  %58 = phi i32 [ 0, %52 ], [ %762, %752 ]
  %59 = phi i32 [ 0, %52 ], [ %761, %752 ]
  %60 = phi i32 [ 0, %52 ], [ %760, %752 ]
  %61 = phi i32 [ 0, %52 ], [ %759, %752 ]
  %62 = phi i32 [ 0, %52 ], [ %758, %752 ]
  %63 = phi i32 [ 0, %52 ], [ %757, %752 ]
  %64 = phi i64 [ 1, %52 ], [ %756, %752 ]
  %65 = phi i64 [ 0, %52 ], [ %755, %752 ]
  %66 = phi i32 [ 0, %52 ], [ %754, %752 ]
  %67 = phi i32 [ 1, %52 ], [ %765, %752 ]
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %1, i64 %68
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %55
  %73 = tail call i64 @strlen(i8* nonnull %70) #12
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %72, %55
  %76 = add nsw i32 %66, 1
  %77 = sext i32 %66 to i64
  %78 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 12, i64 %77
  store i32 %67, i32* %78, align 4
  br label %752

79:                                               ; preds = %72
  %80 = icmp sgt i32 %66, 18
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %83 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %82, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %1108

84:                                               ; preds = %79
  %85 = icmp eq i32 %57, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %84
  %87 = load i8, i8* %70, align 1
  %88 = icmp ne i8 %87, 45
  %89 = icmp eq i64 %73, 1
  %90 = or i1 %89, %88
  br i1 %90, label %91, label %95

91:                                               ; preds = %86, %84
  %92 = add i64 %65, 1
  %93 = icmp ult i64 %64, %73
  %94 = select i1 %93, i64 %73, i64 %64
  br label %752

95:                                               ; preds = %86
  %96 = add nsw i32 %66, 1
  %97 = sext i32 %66 to i64
  %98 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 12, i64 %97
  store i32 %67, i32* %98, align 4
  %99 = icmp eq i64 %73, 2
  %100 = getelementptr inbounds i8, i8* %70, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 45
  br i1 %99, label %103, label %104

103:                                              ; preds = %95
  br i1 %102, label %752, label %105

104:                                              ; preds = %95
  br i1 %102, label %392, label %105

105:                                              ; preds = %104, %103
  br label %106

106:                                              ; preds = %105, %389
  %107 = phi i8 [ %391, %389 ], [ %101, %105 ]
  %108 = phi i64 [ %387, %389 ], [ 1, %105 ]
  %109 = phi i32 [ %386, %389 ], [ %56, %105 ]
  %110 = phi i32 [ %385, %389 ], [ %58, %105 ]
  %111 = phi i32 [ %384, %389 ], [ %59, %105 ]
  %112 = phi i32 [ %383, %389 ], [ %60, %105 ]
  %113 = phi i32 [ %382, %389 ], [ %61, %105 ]
  %114 = phi i32 [ %381, %389 ], [ %62, %105 ]
  %115 = phi i32 [ %380, %389 ], [ %63, %105 ]
  %116 = phi i32 [ %379, %389 ], [ %96, %105 ]
  %117 = phi i32 [ %378, %389 ], [ %67, %105 ]
  %118 = sext i8 %107 to i32
  %119 = add i8 %107, -48
  %120 = icmp ult i8 %119, 10
  br i1 %120, label %121, label %128

121:                                              ; preds = %106
  %122 = icmp eq i32 %114, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %121
  %124 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %125 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %124, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %1108

126:                                              ; preds = %121
  %127 = add nsw i32 %118, -48
  store i32 %127, i32* %5, align 16
  br label %377

128:                                              ; preds = %106
  switch i8 %107, label %147 [
    i8 99, label %129
    i8 100, label %135
    i8 102, label %140
    i8 104, label %1108
  ]

129:                                              ; preds = %128
  %130 = icmp eq i32 %113, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %129
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %133 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %132, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %1108

134:                                              ; preds = %129
  store i32 1, i32* %13, align 8
  br label %377

135:                                              ; preds = %128
  %136 = icmp eq i32 %115, 0
  br i1 %136, label %377, label %137

137:                                              ; preds = %135
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %139 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %138, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5, i64 0, i64 0)) #11
  br label %1108

140:                                              ; preds = %128
  %141 = load i32, i32* %8, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %145 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %144, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %1108

146:                                              ; preds = %140
  store i32 1, i32* %8, align 4
  br label %377

147:                                              ; preds = %128
  %148 = icmp eq i8 %107, 106
  switch i8 %107, label %181 [
    i8 107, label %149
    i8 106, label %149
    i8 110, label %156
    i8 116, label %163
    i8 118, label %168
    i8 86, label %810
    i8 90, label %175
    i8 111, label %184
    i8 113, label %184
    i8 119, label %184
    i8 68, label %184
    i8 83, label %184
  ]

149:                                              ; preds = %147, %147
  %150 = icmp eq i32 %112, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %149
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %153 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %152, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0)) #11
  br label %1108

154:                                              ; preds = %149
  %155 = zext i1 %148 to i32
  store i32 %155, i32* %10, align 16
  br label %377

156:                                              ; preds = %147
  %157 = load i32, i32* %11, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %156
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %161 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %160, i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %1108

162:                                              ; preds = %156
  store i32 0, i32* %11, align 4
  br label %377

163:                                              ; preds = %147
  %164 = icmp eq i32 %115, 0
  br i1 %164, label %377, label %165

165:                                              ; preds = %163
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %167 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %166, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0)) #11
  br label %1108

168:                                              ; preds = %147
  %169 = load i32, i32* %7, align 8
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %168
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %173 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %172, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %1108

174:                                              ; preds = %168
  store i32 1, i32* %7, align 8
  br label %377

175:                                              ; preds = %147
  %176 = icmp eq i32 %114, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %175
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %179 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %178, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %1108

180:                                              ; preds = %175
  store i32 11, i32* %5, align 16
  br label %377

181:                                              ; preds = %147
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %183 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %182, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i32 %118) #11
  br label %1108

184:                                              ; preds = %147, %147, %147, %147, %147
  %185 = add nuw i64 %108, 1
  %186 = icmp eq i64 %185, %73
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %189 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %188, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0), i32 %118) #11
  br label %1108

190:                                              ; preds = %184
  %191 = add nsw i32 %117, 1
  %192 = icmp eq i32 %191, %0
  br i1 %192, label %202, label %193

193:                                              ; preds = %190
  %194 = sext i32 %191 to i64
  %195 = getelementptr inbounds i8*, i8** %1, i64 %194
  %196 = load i8*, i8** %195, align 8
  %197 = icmp eq i8* %196, null
  %198 = ptrtoint i8* %196 to i64
  br i1 %197, label %202, label %199

199:                                              ; preds = %193
  %200 = load i8, i8* %196, align 1
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %199, %193, %190
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %204 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %203, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0), i32 %118) #11
  br label %1108

205:                                              ; preds = %199
  %206 = add nsw i32 %116, 1
  %207 = sext i32 %116 to i64
  %208 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 12, i64 %207
  store i32 %191, i32* %208, align 4
  switch i8 %107, label %377 [
    i8 111, label %209
    i8 113, label %215
    i8 119, label %290
    i8 83, label %371
  ]

209:                                              ; preds = %205
  %210 = icmp eq i32 %113, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %209
  %212 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %213 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %212, i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i64 0, i64 0)) #11
  br label %1108

214:                                              ; preds = %209
  store i64 %198, i64* %54, align 8
  br label %377

215:                                              ; preds = %205
  %216 = icmp eq i32 %114, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %215
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %219 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %218, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %1108

220:                                              ; preds = %215
  %221 = load i8, i8* %196, align 1
  %222 = icmp eq i8 %221, 0
  %223 = add i8 %221, -48
  %224 = icmp ugt i8 %223, 9
  %225 = or i1 %222, %224
  br i1 %225, label %287, label %226

226:                                              ; preds = %220
  %227 = sext i8 %221 to i32
  %228 = add nsw i32 %227, -48
  %229 = getelementptr inbounds i8, i8* %196, i64 1
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i8 %230, 0
  br i1 %232, label %237, label %246

233:                                              ; preds = %282, %271, %260, %249
  %234 = phi i32 [ %285, %282 ], [ %274, %271 ], [ %263, %260 ], [ %252, %249 ]
  %235 = phi i64 [ 5, %282 ], [ 4, %271 ], [ 3, %260 ], [ 2, %249 ]
  %236 = icmp eq i8 %221, 48
  br i1 %236, label %287, label %237

237:                                              ; preds = %233, %226
  %238 = phi i64 [ %235, %233 ], [ 1, %226 ]
  %239 = phi i32 [ %234, %233 ], [ %228, %226 ]
  %240 = and i64 %238, 4294967295
  %241 = getelementptr inbounds i8, i8* %196, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = icmp ne i8 %242, 0
  %244 = icmp ugt i32 %239, 11
  %245 = or i1 %244, %243
  br i1 %245, label %287, label %286

246:                                              ; preds = %226
  %247 = add i8 %230, -48
  %248 = icmp ugt i8 %247, 9
  br i1 %248, label %287, label %249

249:                                              ; preds = %246
  %250 = mul nsw i32 %228, 10
  %251 = add nsw i32 %250, -48
  %252 = add nsw i32 %251, %231
  %253 = getelementptr inbounds i8, i8* %196, i64 2
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i8 %254, 0
  br i1 %256, label %233, label %257

257:                                              ; preds = %249
  %258 = add i8 %254, -48
  %259 = icmp ugt i8 %258, 9
  br i1 %259, label %287, label %260

260:                                              ; preds = %257
  %261 = mul nsw i32 %252, 10
  %262 = add nsw i32 %261, -48
  %263 = add nsw i32 %262, %255
  %264 = getelementptr inbounds i8, i8* %196, i64 3
  %265 = load i8, i8* %264, align 1
  %266 = sext i8 %265 to i32
  %267 = icmp eq i8 %265, 0
  br i1 %267, label %233, label %268

268:                                              ; preds = %260
  %269 = add i8 %265, -48
  %270 = icmp ugt i8 %269, 9
  br i1 %270, label %287, label %271

271:                                              ; preds = %268
  %272 = mul nsw i32 %263, 10
  %273 = add nsw i32 %272, -48
  %274 = add nsw i32 %273, %266
  %275 = getelementptr inbounds i8, i8* %196, i64 4
  %276 = load i8, i8* %275, align 1
  %277 = sext i8 %276 to i32
  %278 = icmp eq i8 %276, 0
  br i1 %278, label %233, label %279

279:                                              ; preds = %271
  %280 = add i8 %276, -48
  %281 = icmp ugt i8 %280, 9
  br i1 %281, label %287, label %282

282:                                              ; preds = %279
  %283 = mul nsw i32 %274, 10
  %284 = add nsw i32 %283, -48
  %285 = add nsw i32 %284, %277
  br label %233

286:                                              ; preds = %237
  store i32 %239, i32* %5, align 16
  br label %377

287:                                              ; preds = %237, %233, %279, %268, %257, %246, %220
  %288 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %289 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %288, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i8* nonnull %196) #11
  br label %1108

290:                                              ; preds = %205
  %291 = icmp eq i32 %111, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %290
  %293 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %294 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %293, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #11
  br label %1108

295:                                              ; preds = %290
  %296 = load i8, i8* %196, align 1
  %297 = icmp eq i8 %296, 0
  %298 = add i8 %296, -48
  %299 = icmp ugt i8 %298, 9
  %300 = or i1 %297, %299
  br i1 %300, label %361, label %301

301:                                              ; preds = %295
  %302 = sext i8 %296 to i32
  %303 = add nsw i32 %302, -48
  %304 = getelementptr inbounds i8, i8* %196, i64 1
  %305 = load i8, i8* %304, align 1
  %306 = sext i8 %305 to i32
  %307 = icmp eq i8 %305, 0
  br i1 %307, label %312, label %321

308:                                              ; preds = %357, %346, %335, %324
  %309 = phi i32 [ %360, %357 ], [ %349, %346 ], [ %338, %335 ], [ %327, %324 ]
  %310 = phi i64 [ 5, %357 ], [ 4, %346 ], [ 3, %335 ], [ 2, %324 ]
  %311 = icmp eq i8 %296, 48
  br i1 %311, label %361, label %312

312:                                              ; preds = %308, %301
  %313 = phi i64 [ %310, %308 ], [ 1, %301 ]
  %314 = phi i32 [ %309, %308 ], [ %303, %301 ]
  %315 = and i64 %313, 4294967295
  %316 = getelementptr inbounds i8, i8* %196, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = icmp ne i8 %317, 0
  %319 = icmp ugt i32 %314, 24
  %320 = or i1 %319, %318
  br i1 %320, label %361, label %364

321:                                              ; preds = %301
  %322 = add i8 %305, -48
  %323 = icmp ugt i8 %322, 9
  br i1 %323, label %361, label %324

324:                                              ; preds = %321
  %325 = mul nsw i32 %303, 10
  %326 = add nsw i32 %325, -48
  %327 = add nsw i32 %326, %306
  %328 = getelementptr inbounds i8, i8* %196, i64 2
  %329 = load i8, i8* %328, align 1
  %330 = sext i8 %329 to i32
  %331 = icmp eq i8 %329, 0
  br i1 %331, label %308, label %332

332:                                              ; preds = %324
  %333 = add i8 %329, -48
  %334 = icmp ugt i8 %333, 9
  br i1 %334, label %361, label %335

335:                                              ; preds = %332
  %336 = mul nsw i32 %327, 10
  %337 = add nsw i32 %336, -48
  %338 = add nsw i32 %337, %330
  %339 = getelementptr inbounds i8, i8* %196, i64 3
  %340 = load i8, i8* %339, align 1
  %341 = sext i8 %340 to i32
  %342 = icmp eq i8 %340, 0
  br i1 %342, label %308, label %343

343:                                              ; preds = %335
  %344 = add i8 %340, -48
  %345 = icmp ugt i8 %344, 9
  br i1 %345, label %361, label %346

346:                                              ; preds = %343
  %347 = mul nsw i32 %338, 10
  %348 = add nsw i32 %347, -48
  %349 = add nsw i32 %348, %341
  %350 = getelementptr inbounds i8, i8* %196, i64 4
  %351 = load i8, i8* %350, align 1
  %352 = sext i8 %351 to i32
  %353 = icmp eq i8 %351, 0
  br i1 %353, label %308, label %354

354:                                              ; preds = %346
  %355 = add i8 %351, -48
  %356 = icmp ugt i8 %355, 9
  br i1 %356, label %361, label %357

357:                                              ; preds = %354
  %358 = mul nsw i32 %349, 10
  %359 = add nsw i32 %358, -48
  %360 = add nsw i32 %359, %352
  br label %308

361:                                              ; preds = %312, %308, %354, %343, %332, %321, %295
  %362 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %363 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %362, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i8* nonnull %196) #11
  br label %1108

364:                                              ; preds = %312
  store i32 %314, i32* %6, align 4
  %365 = icmp ne i32 %314, 0
  %366 = icmp slt i32 %314, 10
  %367 = and i1 %365, %366
  br i1 %367, label %368, label %377

368:                                              ; preds = %364
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %370 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %369, i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i32 %314, i32 10) #11
  br label %1108

371:                                              ; preds = %205
  %372 = icmp eq i32 %110, 0
  br i1 %372, label %376, label %373

373:                                              ; preds = %371
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %375 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %374, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %1108

376:                                              ; preds = %371
  store i64 %198, i64* %53, align 16
  br label %377

377:                                              ; preds = %286, %376, %364, %214, %205, %180, %174, %163, %162, %154, %146, %135, %134, %126
  %378 = phi i32 [ %117, %126 ], [ %117, %134 ], [ %117, %146 ], [ %117, %154 ], [ %117, %162 ], [ %117, %174 ], [ %117, %180 ], [ %117, %135 ], [ %117, %163 ], [ %191, %205 ], [ %191, %364 ], [ %191, %286 ], [ %191, %376 ], [ %191, %214 ]
  %379 = phi i32 [ %116, %126 ], [ %116, %134 ], [ %116, %146 ], [ %116, %154 ], [ %116, %162 ], [ %116, %174 ], [ %116, %180 ], [ %116, %135 ], [ %116, %163 ], [ %206, %205 ], [ %206, %364 ], [ %206, %286 ], [ %206, %376 ], [ %206, %214 ]
  %380 = phi i32 [ %115, %126 ], [ %115, %134 ], [ %115, %146 ], [ %115, %154 ], [ %115, %162 ], [ %115, %174 ], [ %115, %180 ], [ 1, %135 ], [ 1, %163 ], [ %115, %205 ], [ %115, %364 ], [ %115, %286 ], [ %115, %376 ], [ %115, %214 ]
  %381 = phi i32 [ 1, %126 ], [ %114, %134 ], [ %114, %146 ], [ %114, %154 ], [ %114, %162 ], [ %114, %174 ], [ 1, %180 ], [ %114, %135 ], [ %114, %163 ], [ %114, %205 ], [ %114, %364 ], [ 1, %286 ], [ %114, %376 ], [ %114, %214 ]
  %382 = phi i32 [ %113, %126 ], [ 1, %134 ], [ %113, %146 ], [ %113, %154 ], [ %113, %162 ], [ %113, %174 ], [ %113, %180 ], [ %113, %135 ], [ %113, %163 ], [ %113, %205 ], [ %113, %364 ], [ %113, %286 ], [ %113, %376 ], [ 0, %214 ]
  %383 = phi i32 [ %112, %126 ], [ %112, %134 ], [ %112, %146 ], [ 1, %154 ], [ %112, %162 ], [ %112, %174 ], [ %112, %180 ], [ %112, %135 ], [ %112, %163 ], [ %112, %205 ], [ %112, %364 ], [ %112, %286 ], [ %112, %376 ], [ %112, %214 ]
  %384 = phi i32 [ %111, %126 ], [ %111, %134 ], [ %111, %146 ], [ %111, %154 ], [ %111, %162 ], [ %111, %174 ], [ %111, %180 ], [ %111, %135 ], [ %111, %163 ], [ %111, %205 ], [ 1, %364 ], [ %111, %286 ], [ %111, %376 ], [ %111, %214 ]
  %385 = phi i32 [ %110, %126 ], [ %110, %134 ], [ %110, %146 ], [ %110, %154 ], [ %110, %162 ], [ %110, %174 ], [ %110, %180 ], [ %110, %135 ], [ %110, %163 ], [ %110, %205 ], [ %110, %364 ], [ %110, %286 ], [ 1, %376 ], [ %110, %214 ]
  %386 = phi i32 [ %109, %126 ], [ %109, %134 ], [ %109, %146 ], [ %109, %154 ], [ %109, %162 ], [ %109, %174 ], [ %109, %180 ], [ 1, %135 ], [ 4, %163 ], [ %109, %205 ], [ %109, %364 ], [ %109, %286 ], [ %109, %376 ], [ %109, %214 ]
  %387 = add nuw i64 %108, 1
  %388 = icmp eq i64 %387, %73
  br i1 %388, label %752, label %389

389:                                              ; preds = %377
  %390 = getelementptr inbounds i8, i8* %70, i64 %387
  %391 = load i8, i8* %390, align 1
  br label %106

392:                                              ; preds = %104
  %393 = getelementptr inbounds i8, i8* %70, i64 2
  %394 = tail call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i8* %393) #12
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %402

396:                                              ; preds = %392
  %397 = icmp eq i32 %62, 0
  br i1 %397, label %401, label %398

398:                                              ; preds = %396
  %399 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %400 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %399, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %1108

401:                                              ; preds = %396
  store i32 11, i32* %5, align 16
  br label %752

402:                                              ; preds = %392
  %403 = tail call i32 @strcmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %393) #12
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %410

405:                                              ; preds = %402
  %406 = icmp eq i32 %63, 0
  br i1 %406, label %752, label %407

407:                                              ; preds = %405
  %408 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %409 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %408, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0)) #11
  br label %1108

410:                                              ; preds = %402
  %411 = tail call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i8* %393) #12
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %420

413:                                              ; preds = %410
  %414 = load i32, i32* %8, align 4
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %419, label %416

416:                                              ; preds = %413
  %417 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %418 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %417, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %1108

419:                                              ; preds = %413
  store i32 1, i32* %8, align 4
  br label %752

420:                                              ; preds = %410
  %421 = tail call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i8* %393) #12
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %1108, label %423

423:                                              ; preds = %420
  %424 = tail call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* %393) #12
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %432

426:                                              ; preds = %423
  %427 = icmp eq i32 %60, 0
  br i1 %427, label %431, label %428

428:                                              ; preds = %426
  %429 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %430 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %429, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0)) #11
  br label %1108

431:                                              ; preds = %426
  store i32 0, i32* %10, align 16
  br label %752

432:                                              ; preds = %423
  %433 = tail call i32 @strcmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i8* %393) #12
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %442

435:                                              ; preds = %432
  %436 = load i32, i32* %11, align 4
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %441

438:                                              ; preds = %435
  %439 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %440 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %439, i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %1108

441:                                              ; preds = %435
  store i32 0, i32* %11, align 4
  br label %752

442:                                              ; preds = %432
  %443 = tail call i32 @strcmp(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i8* %393) #12
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %451

445:                                              ; preds = %442
  %446 = icmp eq i32 %60, 0
  br i1 %446, label %450, label %447

447:                                              ; preds = %445
  %448 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %449 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %448, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0)) #11
  br label %1108

450:                                              ; preds = %445
  store i32 1, i32* %10, align 16
  br label %752

451:                                              ; preds = %442
  %452 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i8* %393) #12
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %460

454:                                              ; preds = %451
  %455 = icmp eq i32 %61, 0
  br i1 %455, label %459, label %456

456:                                              ; preds = %454
  %457 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %458 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %457, i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %1108

459:                                              ; preds = %454
  store i32 1, i32* %13, align 8
  br label %752

460:                                              ; preds = %451
  %461 = tail call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8* %393) #12
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %468

463:                                              ; preds = %460
  %464 = icmp eq i32 %63, 0
  br i1 %464, label %752, label %465

465:                                              ; preds = %463
  %466 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %467 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %466, i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.29, i64 0, i64 0)) #11
  br label %1108

468:                                              ; preds = %460
  %469 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8* %393) #12
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %478

471:                                              ; preds = %468
  %472 = load i32, i32* %7, align 8
  %473 = icmp sgt i32 %472, 0
  br i1 %473, label %474, label %477

474:                                              ; preds = %471
  %475 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %476 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %475, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0)) #11
  br label %1108

477:                                              ; preds = %471
  store i32 1, i32* %7, align 8
  br label %752

478:                                              ; preds = %468
  %479 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i8* %393) #12
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %810, label %481

481:                                              ; preds = %478
  %482 = tail call i8* @strrchr(i8* %393, i32 61) #12
  %483 = icmp eq i8* %482, null
  br i1 %483, label %488, label %484

484:                                              ; preds = %481
  %485 = getelementptr inbounds i8, i8* %482, i64 1
  %486 = load i8, i8* %485, align 1
  %487 = icmp eq i8 %486, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %484, %481
  %489 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %490 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %489, i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.32, i64 0, i64 0), i8* %393) #11
  br label %1108

491:                                              ; preds = %484
  %492 = ptrtoint i8* %482 to i64
  %493 = ptrtoint i8* %393 to i64
  %494 = sub i64 %492, %493
  %495 = tail call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), i8* %393, i64 %494) #12
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %575

497:                                              ; preds = %491
  %498 = icmp eq i32 %59, 0
  br i1 %498, label %502, label %499

499:                                              ; preds = %497
  %500 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %501 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %500, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #11
  br label %1108

502:                                              ; preds = %497
  %503 = add i8 %486, -48
  %504 = icmp ugt i8 %503, 9
  br i1 %504, label %565, label %505

505:                                              ; preds = %502
  %506 = sext i8 %486 to i32
  %507 = add nsw i32 %506, -48
  %508 = getelementptr inbounds i8, i8* %482, i64 2
  %509 = load i8, i8* %508, align 1
  %510 = sext i8 %509 to i32
  %511 = icmp eq i8 %509, 0
  br i1 %511, label %516, label %525

512:                                              ; preds = %561, %550, %539, %528
  %513 = phi i32 [ %564, %561 ], [ %553, %550 ], [ %542, %539 ], [ %531, %528 ]
  %514 = phi i64 [ 5, %561 ], [ 4, %550 ], [ 3, %539 ], [ 2, %528 ]
  %515 = icmp eq i8 %486, 48
  br i1 %515, label %565, label %516

516:                                              ; preds = %512, %505
  %517 = phi i64 [ %514, %512 ], [ 1, %505 ]
  %518 = phi i32 [ %513, %512 ], [ %507, %505 ]
  %519 = and i64 %517, 4294967295
  %520 = getelementptr inbounds i8, i8* %485, i64 %519
  %521 = load i8, i8* %520, align 1
  %522 = icmp ne i8 %521, 0
  %523 = icmp ugt i32 %518, 24
  %524 = or i1 %523, %522
  br i1 %524, label %565, label %568

525:                                              ; preds = %505
  %526 = add i8 %509, -48
  %527 = icmp ugt i8 %526, 9
  br i1 %527, label %565, label %528

528:                                              ; preds = %525
  %529 = mul nsw i32 %507, 10
  %530 = add nsw i32 %529, -48
  %531 = add nsw i32 %530, %510
  %532 = getelementptr inbounds i8, i8* %482, i64 3
  %533 = load i8, i8* %532, align 1
  %534 = sext i8 %533 to i32
  %535 = icmp eq i8 %533, 0
  br i1 %535, label %512, label %536

536:                                              ; preds = %528
  %537 = add i8 %533, -48
  %538 = icmp ugt i8 %537, 9
  br i1 %538, label %565, label %539

539:                                              ; preds = %536
  %540 = mul nsw i32 %531, 10
  %541 = add nsw i32 %540, -48
  %542 = add nsw i32 %541, %534
  %543 = getelementptr inbounds i8, i8* %482, i64 4
  %544 = load i8, i8* %543, align 1
  %545 = sext i8 %544 to i32
  %546 = icmp eq i8 %544, 0
  br i1 %546, label %512, label %547

547:                                              ; preds = %539
  %548 = add i8 %544, -48
  %549 = icmp ugt i8 %548, 9
  br i1 %549, label %565, label %550

550:                                              ; preds = %547
  %551 = mul nsw i32 %542, 10
  %552 = add nsw i32 %551, -48
  %553 = add nsw i32 %552, %545
  %554 = getelementptr inbounds i8, i8* %482, i64 5
  %555 = load i8, i8* %554, align 1
  %556 = sext i8 %555 to i32
  %557 = icmp eq i8 %555, 0
  br i1 %557, label %512, label %558

558:                                              ; preds = %550
  %559 = add i8 %555, -48
  %560 = icmp ugt i8 %559, 9
  br i1 %560, label %565, label %561

561:                                              ; preds = %558
  %562 = mul nsw i32 %553, 10
  %563 = add nsw i32 %562, -48
  %564 = add nsw i32 %563, %556
  br label %512

565:                                              ; preds = %516, %512, %558, %547, %536, %525, %502
  %566 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %567 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %566, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i8* %485) #11
  br label %1108

568:                                              ; preds = %516
  store i32 %518, i32* %6, align 4
  %569 = icmp ne i32 %518, 0
  %570 = icmp slt i32 %518, 10
  %571 = and i1 %569, %570
  br i1 %571, label %572, label %752

572:                                              ; preds = %568
  %573 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %574 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %573, i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i32 %518, i32 10) #11
  br label %1108

575:                                              ; preds = %491
  %576 = tail call i32 @strncmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8* %393, i64 %494) #12
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %656

578:                                              ; preds = %575
  %579 = icmp eq i32 %59, 0
  br i1 %579, label %583, label %580

580:                                              ; preds = %578
  %581 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %582 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %581, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #11
  br label %1108

583:                                              ; preds = %578
  %584 = add i8 %486, -48
  %585 = icmp ugt i8 %584, 9
  br i1 %585, label %646, label %586

586:                                              ; preds = %583
  %587 = sext i8 %486 to i32
  %588 = add nsw i32 %587, -48
  %589 = getelementptr inbounds i8, i8* %482, i64 2
  %590 = load i8, i8* %589, align 1
  %591 = sext i8 %590 to i32
  %592 = icmp eq i8 %590, 0
  br i1 %592, label %597, label %606

593:                                              ; preds = %642, %631, %620, %609
  %594 = phi i32 [ %645, %642 ], [ %634, %631 ], [ %623, %620 ], [ %612, %609 ]
  %595 = phi i64 [ 5, %642 ], [ 4, %631 ], [ 3, %620 ], [ 2, %609 ]
  %596 = icmp eq i8 %486, 48
  br i1 %596, label %646, label %597

597:                                              ; preds = %593, %586
  %598 = phi i64 [ %595, %593 ], [ 1, %586 ]
  %599 = phi i32 [ %594, %593 ], [ %588, %586 ]
  %600 = and i64 %598, 4294967295
  %601 = getelementptr inbounds i8, i8* %485, i64 %600
  %602 = load i8, i8* %601, align 1
  %603 = icmp ne i8 %602, 0
  %604 = icmp ugt i32 %599, 30
  %605 = or i1 %604, %603
  br i1 %605, label %646, label %649

606:                                              ; preds = %586
  %607 = add i8 %590, -48
  %608 = icmp ugt i8 %607, 9
  br i1 %608, label %646, label %609

609:                                              ; preds = %606
  %610 = mul nsw i32 %588, 10
  %611 = add nsw i32 %610, -48
  %612 = add nsw i32 %611, %591
  %613 = getelementptr inbounds i8, i8* %482, i64 3
  %614 = load i8, i8* %613, align 1
  %615 = sext i8 %614 to i32
  %616 = icmp eq i8 %614, 0
  br i1 %616, label %593, label %617

617:                                              ; preds = %609
  %618 = add i8 %614, -48
  %619 = icmp ugt i8 %618, 9
  br i1 %619, label %646, label %620

620:                                              ; preds = %617
  %621 = mul nsw i32 %612, 10
  %622 = add nsw i32 %621, -48
  %623 = add nsw i32 %622, %615
  %624 = getelementptr inbounds i8, i8* %482, i64 4
  %625 = load i8, i8* %624, align 1
  %626 = sext i8 %625 to i32
  %627 = icmp eq i8 %625, 0
  br i1 %627, label %593, label %628

628:                                              ; preds = %620
  %629 = add i8 %625, -48
  %630 = icmp ugt i8 %629, 9
  br i1 %630, label %646, label %631

631:                                              ; preds = %628
  %632 = mul nsw i32 %623, 10
  %633 = add nsw i32 %632, -48
  %634 = add nsw i32 %633, %626
  %635 = getelementptr inbounds i8, i8* %482, i64 5
  %636 = load i8, i8* %635, align 1
  %637 = sext i8 %636 to i32
  %638 = icmp eq i8 %636, 0
  br i1 %638, label %593, label %639

639:                                              ; preds = %631
  %640 = add i8 %636, -48
  %641 = icmp ugt i8 %640, 9
  br i1 %641, label %646, label %642

642:                                              ; preds = %639
  %643 = mul nsw i32 %634, 10
  %644 = add nsw i32 %643, -48
  %645 = add nsw i32 %644, %637
  br label %593

646:                                              ; preds = %597, %593, %639, %628, %617, %606, %583
  %647 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %648 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %647, i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i8* %485) #11
  br label %1108

649:                                              ; preds = %597
  store i32 %599, i32* %6, align 4
  %650 = icmp ne i32 %599, 0
  %651 = icmp slt i32 %599, 10
  %652 = and i1 %650, %651
  br i1 %652, label %653, label %752

653:                                              ; preds = %649
  %654 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %655 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %654, i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17, i64 0, i64 0), i32 %599, i32 10) #11
  br label %1108

656:                                              ; preds = %575
  %657 = tail call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8* %393, i64 %494) #12
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %659, label %665

659:                                              ; preds = %656
  %660 = icmp eq i32 %61, 0
  br i1 %660, label %664, label %661

661:                                              ; preds = %659
  %662 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %663 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %662, i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0)) #11
  br label %1108

664:                                              ; preds = %659
  store i8* %485, i8** %15, align 8
  br label %752

665:                                              ; preds = %656
  %666 = tail call i32 @strncmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i8* %393, i64 %494) #12
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %740

668:                                              ; preds = %665
  %669 = icmp eq i32 %62, 0
  br i1 %669, label %673, label %670

670:                                              ; preds = %668
  %671 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %672 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %671, i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %1108

673:                                              ; preds = %668
  %674 = add i8 %486, -48
  %675 = icmp ugt i8 %674, 9
  br i1 %675, label %737, label %676

676:                                              ; preds = %673
  %677 = sext i8 %486 to i32
  %678 = add nsw i32 %677, -48
  %679 = getelementptr inbounds i8, i8* %482, i64 2
  %680 = load i8, i8* %679, align 1
  %681 = sext i8 %680 to i32
  %682 = icmp eq i8 %680, 0
  br i1 %682, label %687, label %696

683:                                              ; preds = %732, %721, %710, %699
  %684 = phi i32 [ %735, %732 ], [ %724, %721 ], [ %713, %710 ], [ %702, %699 ]
  %685 = phi i64 [ 5, %732 ], [ 4, %721 ], [ 3, %710 ], [ 2, %699 ]
  %686 = icmp eq i8 %486, 48
  br i1 %686, label %737, label %687

687:                                              ; preds = %683, %676
  %688 = phi i64 [ %685, %683 ], [ 1, %676 ]
  %689 = phi i32 [ %684, %683 ], [ %678, %676 ]
  %690 = and i64 %688, 4294967295
  %691 = getelementptr inbounds i8, i8* %485, i64 %690
  %692 = load i8, i8* %691, align 1
  %693 = icmp ne i8 %692, 0
  %694 = icmp ugt i32 %689, 11
  %695 = or i1 %694, %693
  br i1 %695, label %737, label %736

696:                                              ; preds = %676
  %697 = add i8 %680, -48
  %698 = icmp ugt i8 %697, 9
  br i1 %698, label %737, label %699

699:                                              ; preds = %696
  %700 = mul nsw i32 %678, 10
  %701 = add nsw i32 %700, -48
  %702 = add nsw i32 %701, %681
  %703 = getelementptr inbounds i8, i8* %482, i64 3
  %704 = load i8, i8* %703, align 1
  %705 = sext i8 %704 to i32
  %706 = icmp eq i8 %704, 0
  br i1 %706, label %683, label %707

707:                                              ; preds = %699
  %708 = add i8 %704, -48
  %709 = icmp ugt i8 %708, 9
  br i1 %709, label %737, label %710

710:                                              ; preds = %707
  %711 = mul nsw i32 %702, 10
  %712 = add nsw i32 %711, -48
  %713 = add nsw i32 %712, %705
  %714 = getelementptr inbounds i8, i8* %482, i64 4
  %715 = load i8, i8* %714, align 1
  %716 = sext i8 %715 to i32
  %717 = icmp eq i8 %715, 0
  br i1 %717, label %683, label %718

718:                                              ; preds = %710
  %719 = add i8 %715, -48
  %720 = icmp ugt i8 %719, 9
  br i1 %720, label %737, label %721

721:                                              ; preds = %718
  %722 = mul nsw i32 %713, 10
  %723 = add nsw i32 %722, -48
  %724 = add nsw i32 %723, %716
  %725 = getelementptr inbounds i8, i8* %482, i64 5
  %726 = load i8, i8* %725, align 1
  %727 = sext i8 %726 to i32
  %728 = icmp eq i8 %726, 0
  br i1 %728, label %683, label %729

729:                                              ; preds = %721
  %730 = add i8 %726, -48
  %731 = icmp ugt i8 %730, 9
  br i1 %731, label %737, label %732

732:                                              ; preds = %729
  %733 = mul nsw i32 %724, 10
  %734 = add nsw i32 %733, -48
  %735 = add nsw i32 %734, %727
  br label %683

736:                                              ; preds = %687
  store i32 %689, i32* %5, align 16
  br label %752

737:                                              ; preds = %687, %683, %729, %718, %707, %696, %673
  %738 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %739 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %738, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i8* %485) #11
  br label %1108

740:                                              ; preds = %665
  %741 = tail call i32 @strncmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %393, i64 %494) #12
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %749

743:                                              ; preds = %740
  %744 = icmp eq i32 %58, 0
  br i1 %744, label %748, label %745

745:                                              ; preds = %743
  %746 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %747 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %746, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %1108

748:                                              ; preds = %743
  store i8* %485, i8** %16, align 16
  br label %752

749:                                              ; preds = %740
  %750 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %751 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %750, i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.39, i64 0, i64 0), i8* %393) #11
  br label %1108

752:                                              ; preds = %377, %736, %748, %664, %649, %568, %477, %463, %459, %450, %441, %431, %419, %405, %401, %103, %91, %75
  %753 = phi i32 [ %67, %75 ], [ %67, %91 ], [ %67, %103 ], [ %67, %401 ], [ %67, %419 ], [ %67, %431 ], [ %67, %441 ], [ %67, %450 ], [ %67, %459 ], [ %67, %477 ], [ %67, %405 ], [ %67, %463 ], [ %67, %664 ], [ %67, %748 ], [ %67, %736 ], [ %67, %568 ], [ %67, %649 ], [ %378, %377 ]
  %754 = phi i32 [ %76, %75 ], [ %66, %91 ], [ %96, %103 ], [ %96, %401 ], [ %96, %419 ], [ %96, %431 ], [ %96, %441 ], [ %96, %450 ], [ %96, %459 ], [ %96, %477 ], [ %96, %405 ], [ %96, %463 ], [ %96, %664 ], [ %96, %748 ], [ %96, %736 ], [ %96, %568 ], [ %96, %649 ], [ %379, %377 ]
  %755 = phi i64 [ %65, %75 ], [ %92, %91 ], [ %65, %103 ], [ %65, %401 ], [ %65, %419 ], [ %65, %431 ], [ %65, %441 ], [ %65, %450 ], [ %65, %459 ], [ %65, %477 ], [ %65, %405 ], [ %65, %463 ], [ %65, %664 ], [ %65, %748 ], [ %65, %736 ], [ %65, %568 ], [ %65, %649 ], [ %65, %377 ]
  %756 = phi i64 [ %64, %75 ], [ %94, %91 ], [ %64, %103 ], [ %64, %401 ], [ %64, %419 ], [ %64, %431 ], [ %64, %441 ], [ %64, %450 ], [ %64, %459 ], [ %64, %477 ], [ %64, %405 ], [ %64, %463 ], [ %64, %664 ], [ %64, %748 ], [ %64, %736 ], [ %64, %568 ], [ %64, %649 ], [ %64, %377 ]
  %757 = phi i32 [ %63, %75 ], [ %63, %91 ], [ %63, %103 ], [ %63, %401 ], [ %63, %419 ], [ %63, %431 ], [ %63, %441 ], [ %63, %450 ], [ %63, %459 ], [ %63, %477 ], [ 1, %405 ], [ 1, %463 ], [ %63, %664 ], [ %63, %748 ], [ %63, %736 ], [ %63, %568 ], [ %63, %649 ], [ %380, %377 ]
  %758 = phi i32 [ %62, %75 ], [ %62, %91 ], [ %62, %103 ], [ 1, %401 ], [ %62, %419 ], [ %62, %431 ], [ %62, %441 ], [ %62, %450 ], [ %62, %459 ], [ %62, %477 ], [ %62, %405 ], [ %62, %463 ], [ %62, %664 ], [ %62, %748 ], [ 1, %736 ], [ %62, %568 ], [ %62, %649 ], [ %381, %377 ]
  %759 = phi i32 [ %61, %75 ], [ %61, %91 ], [ %61, %103 ], [ %61, %401 ], [ %61, %419 ], [ %61, %431 ], [ %61, %441 ], [ %61, %450 ], [ 1, %459 ], [ %61, %477 ], [ %61, %405 ], [ %61, %463 ], [ 0, %664 ], [ %61, %748 ], [ %61, %736 ], [ %61, %568 ], [ %61, %649 ], [ %382, %377 ]
  %760 = phi i32 [ %60, %75 ], [ %60, %91 ], [ %60, %103 ], [ %60, %401 ], [ %60, %419 ], [ 1, %431 ], [ %60, %441 ], [ 1, %450 ], [ %60, %459 ], [ %60, %477 ], [ %60, %405 ], [ %60, %463 ], [ %60, %664 ], [ %60, %748 ], [ %60, %736 ], [ %60, %568 ], [ %60, %649 ], [ %383, %377 ]
  %761 = phi i32 [ %59, %75 ], [ %59, %91 ], [ %59, %103 ], [ %59, %401 ], [ %59, %419 ], [ %59, %431 ], [ %59, %441 ], [ %59, %450 ], [ %59, %459 ], [ %59, %477 ], [ %59, %405 ], [ %59, %463 ], [ %59, %664 ], [ %59, %748 ], [ %59, %736 ], [ 1, %568 ], [ 1, %649 ], [ %384, %377 ]
  %762 = phi i32 [ %58, %75 ], [ %58, %91 ], [ %58, %103 ], [ %58, %401 ], [ %58, %419 ], [ %58, %431 ], [ %58, %441 ], [ %58, %450 ], [ %58, %459 ], [ %58, %477 ], [ %58, %405 ], [ %58, %463 ], [ %58, %664 ], [ 1, %748 ], [ %58, %736 ], [ %58, %568 ], [ %58, %649 ], [ %385, %377 ]
  %763 = phi i32 [ %57, %75 ], [ %57, %91 ], [ 1, %103 ], [ 0, %401 ], [ 0, %419 ], [ 0, %431 ], [ 0, %441 ], [ 0, %450 ], [ 0, %459 ], [ 0, %477 ], [ 0, %405 ], [ 0, %463 ], [ 0, %664 ], [ 0, %748 ], [ 0, %736 ], [ 0, %568 ], [ 0, %649 ], [ 0, %377 ]
  %764 = phi i32 [ %56, %75 ], [ %56, %91 ], [ %56, %103 ], [ %56, %401 ], [ %56, %419 ], [ %56, %431 ], [ %56, %441 ], [ %56, %450 ], [ %56, %459 ], [ %56, %477 ], [ 1, %405 ], [ 4, %463 ], [ %56, %664 ], [ %56, %748 ], [ %56, %736 ], [ %56, %568 ], [ %56, %649 ], [ %386, %377 ]
  %765 = add nsw i32 %753, 1
  %766 = icmp slt i32 %765, %0
  br i1 %766, label %55, label %767

767:                                              ; preds = %752, %49
  %768 = phi i64 [ 0, %49 ], [ %755, %752 ]
  %769 = phi i64 [ 1, %49 ], [ %756, %752 ]
  %770 = phi i32 [ 0, %49 ], [ %759, %752 ]
  %771 = phi i32 [ %50, %49 ], [ %764, %752 ]
  store i64 %768, i64* %21, align 16
  store i64 %769, i64* %20, align 8
  %772 = icmp eq i32 %771, 1
  %773 = zext i1 %772 to i32
  store i32 %773, i32* %14, align 16
  %774 = icmp eq i32 %771, 4
  %775 = zext i1 %774 to i32
  store i32 %775, i32* %12, align 4
  %776 = icmp ugt i64 %768, 1
  %777 = icmp ne i32 %770, 0
  %778 = and i1 %776, %777
  br i1 %778, label %1108, label %779

779:                                              ; preds = %767
  br i1 %774, label %780, label %786

780:                                              ; preds = %779
  %781 = load i8*, i8** %15, align 8
  %782 = icmp eq i8* %781, null
  %783 = load i32, i32* %13, align 8
  %784 = icmp eq i32 %783, 0
  %785 = and i1 %782, %784
  br i1 %785, label %786, label %1108

786:                                              ; preds = %780, %779
  %787 = load i8*, i8** %16, align 16
  %788 = tail call i8* @strchr(i8* %787, i32 47) #12
  %789 = icmp eq i8* %788, null
  br i1 %789, label %790, label %1108

790:                                              ; preds = %786
  %791 = tail call i8* @strchr(i8* %787, i32 92) #12
  %792 = icmp eq i8* %791, null
  br i1 %792, label %793, label %1108

793:                                              ; preds = %790
  switch i32 %771, label %1108 [
    i32 4, label %794
    i32 1, label %794
    i32 0, label %794
    i32 5, label %1133
    i32 6, label %810
  ]

794:                                              ; preds = %793, %793, %793
  %795 = tail call i64 @strlen(i8* %787) #12
  %796 = add i64 %769, 1
  %797 = add i64 %796, %795
  %798 = tail call noalias i8* @malloc(i64 %797) #11
  store i8* %798, i8** %25, align 8
  %799 = tail call noalias i8* @malloc(i64 1048576) #11
  store i8* %799, i8** %27, align 16
  %800 = icmp eq i8* %798, null
  %801 = icmp eq i8* %799, null
  %802 = or i1 %800, %801
  br i1 %802, label %807, label %803

803:                                              ; preds = %794
  %804 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 22
  store i8* %799, i8** %804, align 8
  %805 = getelementptr inbounds i8, i8* %799, i64 524288
  %806 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 23
  store i8* %805, i8** %806, align 16
  switch i32 %771, label %1108 [
    i32 4, label %985
    i32 1, label %985
    i32 0, label %813
  ]

807:                                              ; preds = %794
  %808 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %809 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %808, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %1133

810:                                              ; preds = %478, %147, %793
  %811 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %812 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %811, i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0), i32 1, i32 0, i32 9) #11
  br label %1133

813:                                              ; preds = %803
  %814 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 26
  %815 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 29
  %816 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 31
  %817 = bitcast i64* %815 to i8*
  %818 = bitcast i8** %806 to i64*
  %819 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 32
  %820 = bitcast i8** %819 to i64*
  %821 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 33
  %822 = bitcast i64* %821 to i8*
  %823 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 30
  %824 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 34
  %825 = bitcast i8** %804 to i64*
  %826 = bitcast i8** %823 to i64*
  br label %827

827:                                              ; preds = %954, %813
  %828 = call fastcc i32 @NextFile(%struct.Context* nonnull %3) #11
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %1133, label %830

830:                                              ; preds = %827
  %831 = call %struct.BrotliEncoderStateStruct* @BrotliEncoderCreateInstance(i8* (i8*, i64)* null, void (i8*, i8*)* null, i8* null) #11
  %832 = icmp eq %struct.BrotliEncoderStateStruct* %831, null
  br i1 %832, label %833, label %836

833:                                              ; preds = %830
  %834 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %835 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %834, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %1133

836:                                              ; preds = %830
  %837 = load i32, i32* %5, align 16
  %838 = call i32 @BrotliEncoderSetParameter(%struct.BrotliEncoderStateStruct* nonnull %831, i32 1, i32 %837) #11
  %839 = load i32, i32* %6, align 4
  %840 = icmp sgt i32 %839, 0
  br i1 %840, label %841, label %846

841:                                              ; preds = %836
  %842 = icmp sgt i32 %839, 24
  br i1 %842, label %843, label %853

843:                                              ; preds = %841
  %844 = call i32 @BrotliEncoderSetParameter(%struct.BrotliEncoderStateStruct* nonnull %831, i32 6, i32 1) #11
  %845 = load i32, i32* %6, align 4
  br label %853

846:                                              ; preds = %836
  %847 = load i64, i64* %814, align 8
  %848 = icmp sgt i64 %847, -1
  br i1 %848, label %849, label %853

849:                                              ; preds = %846
  %850 = icmp ugt i64 %847, 1008
  br i1 %850, label %851, label %853

851:                                              ; preds = %849
  %852 = icmp ugt i64 %847, 2032
  br i1 %852, label %960, label %853

853:                                              ; preds = %846, %849, %851, %960, %962, %964, %966, %968, %970, %972, %974, %976, %978, %980, %982, %841, %843
  %854 = phi i32 [ %845, %843 ], [ %839, %841 ], [ 24, %846 ], [ 10, %849 ], [ 11, %851 ], [ 12, %960 ], [ 13, %962 ], [ 14, %964 ], [ 15, %966 ], [ 16, %968 ], [ 17, %970 ], [ 18, %972 ], [ 19, %974 ], [ 20, %976 ], [ 21, %978 ], [ 22, %980 ], [ %984, %982 ]
  %855 = call i32 @BrotliEncoderSetParameter(%struct.BrotliEncoderStateStruct* nonnull %831, i32 2, i32 %854) #11
  %856 = load i64, i64* %814, align 8
  %857 = icmp sgt i64 %856, 0
  br i1 %857, label %858, label %863

858:                                              ; preds = %853
  %859 = icmp slt i64 %856, 1073741824
  %860 = select i1 %859, i64 %856, i64 1073741824
  %861 = trunc i64 %860 to i32
  %862 = call i32 @BrotliEncoderSetParameter(%struct.BrotliEncoderStateStruct* nonnull %831, i32 5, i32 %861) #11
  br label %863

863:                                              ; preds = %858, %853
  %864 = call fastcc i32 @OpenFiles(%struct.Context* nonnull %3) #11
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %954, label %866

866:                                              ; preds = %863
  %867 = load i8*, i8** %29, align 16
  %868 = icmp eq i8* %867, null
  %869 = load i32, i32* %8, align 4
  %870 = icmp eq i32 %869, 0
  %871 = and i1 %868, %870
  br i1 %871, label %872, label %878

872:                                              ; preds = %866
  %873 = call i32 @isatty(i32 1) #11
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %878, label %875

875:                                              ; preds = %872
  %876 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %877 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %876, i32 1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i64 0, i64 0)) #11
  br label %954

878:                                              ; preds = %872, %866
  call void @llvm.memset.p0i8.i64(i8* align 16 %817, i8 0, i64 16, i1 false) #11
  store i64 524288, i64* %816, align 16
  %879 = load i64, i64* %818, align 16
  store i64 %879, i64* %820, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 %822, i8 0, i64 16, i1 false) #11
  br label %880

880:                                              ; preds = %932, %878
  %881 = phi i64 [ 0, %878 ], [ %933, %932 ]
  %882 = phi i32 [ 0, %878 ], [ %910, %932 ]
  %883 = icmp ne i64 %881, 0
  %884 = icmp ne i32 %882, 0
  %885 = or i1 %883, %884
  br i1 %885, label %909, label %886

886:                                              ; preds = %880
  %887 = load i8*, i8** %804, align 8
  %888 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 16
  %889 = call i64 @fread(i8* %887, i64 1, i64 524288, %struct._IO_FILE* %888) #11
  store i64 %889, i64* %815, align 16
  %890 = load i64, i64* %821, align 16
  %891 = add i64 %890, %889
  store i64 %891, i64* %821, align 16
  %892 = load i64, i64* %825, align 8
  store i64 %892, i64* %826, align 8
  %893 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 16
  %894 = call i32 @ferror(%struct._IO_FILE* %893) #11
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %905, label %896

896:                                              ; preds = %886
  %897 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %898 = load i8*, i8** %28, align 8
  %899 = icmp eq i8* %898, null
  %900 = select i1 %899, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %898
  %901 = tail call i32* @__errno_location() #13
  %902 = load i32, i32* %901, align 4
  %903 = call i8* @strerror(i32 %902) #11
  %904 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %897, i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0), i8* %900, i8* %903) #11
  br label %954

905:                                              ; preds = %886
  %906 = call i32 @feof(%struct._IO_FILE* %893) #11
  %907 = icmp ne i32 %906, 0
  %908 = zext i1 %907 to i32
  br label %909

909:                                              ; preds = %905, %880
  %910 = phi i32 [ %882, %880 ], [ %908, %905 ]
  %911 = icmp eq i32 %910, 0
  %912 = select i1 %911, i32 0, i32 2
  %913 = call i32 @BrotliEncoderCompressStream(%struct.BrotliEncoderStateStruct* nonnull %831, i32 %912, i64* %815, i8** %823, i64* %816, i8** %819, i64* null) #11
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %921

915:                                              ; preds = %909
  %916 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %917 = load i8*, i8** %28, align 8
  %918 = icmp eq i8* %917, null
  %919 = select i1 %918, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %917
  %920 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %916, i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.50, i64 0, i64 0), i8* %919) #11
  br label %954

921:                                              ; preds = %909
  %922 = load i64, i64* %816, align 16
  %923 = icmp eq i64 %922, 0
  br i1 %923, label %924, label %929

924:                                              ; preds = %921
  %925 = call fastcc i32 @WriteOutput(%struct.Context* nonnull %3) #11
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %954, label %927

927:                                              ; preds = %924
  store i64 524288, i64* %816, align 16
  %928 = load i64, i64* %818, align 16
  store i64 %928, i64* %820, align 8
  br label %929

929:                                              ; preds = %927, %921
  %930 = call i32 @BrotliEncoderIsFinished(%struct.BrotliEncoderStateStruct* nonnull %831) #11
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %934

932:                                              ; preds = %929
  %933 = load i64, i64* %815, align 16
  br label %880

934:                                              ; preds = %929
  %935 = call fastcc i32 @WriteOutput(%struct.Context* nonnull %3) #11
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %954, label %937

937:                                              ; preds = %934
  store i64 0, i64* %816, align 16
  %938 = load i32, i32* %7, align 8
  %939 = icmp sgt i32 %938, 0
  br i1 %939, label %940, label %954

940:                                              ; preds = %937
  %941 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %942 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %941, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0)) #11
  %943 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %944 = load i8*, i8** %28, align 8
  %945 = icmp eq i8* %944, null
  %946 = select i1 %945, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %944
  %947 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %943, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i8* %946) #11
  %948 = load i64, i64* %821, align 16
  call fastcc void @PrintBytes(i64 %948) #11
  %949 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %950 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %949, i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #11
  %951 = load i64, i64* %824, align 8
  call fastcc void @PrintBytes(i64 %951) #11
  %952 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %953 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %952, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #11
  br label %954

954:                                              ; preds = %924, %896, %940, %937, %934, %915, %875, %863
  %955 = phi i32 [ 0, %863 ], [ 0, %875 ], [ 0, %915 ], [ 1, %940 ], [ 1, %937 ], [ 0, %934 ], [ 0, %896 ], [ 0, %924 ]
  call void @BrotliEncoderDestroyInstance(%struct.BrotliEncoderStateStruct* nonnull %831) #11
  %956 = call fastcc i32 @CloseFiles(%struct.Context* nonnull %3, i32 %955) #11
  %957 = icmp eq i32 %956, 0
  %958 = icmp eq i32 %955, 0
  %959 = or i1 %958, %957
  br i1 %959, label %1133, label %827

960:                                              ; preds = %851
  %961 = icmp ugt i64 %847, 4080
  br i1 %961, label %962, label %853

962:                                              ; preds = %960
  %963 = icmp ugt i64 %847, 8176
  br i1 %963, label %964, label %853

964:                                              ; preds = %962
  %965 = icmp ugt i64 %847, 16368
  br i1 %965, label %966, label %853

966:                                              ; preds = %964
  %967 = icmp ugt i64 %847, 32752
  br i1 %967, label %968, label %853

968:                                              ; preds = %966
  %969 = icmp ugt i64 %847, 65520
  br i1 %969, label %970, label %853

970:                                              ; preds = %968
  %971 = icmp ugt i64 %847, 131056
  br i1 %971, label %972, label %853

972:                                              ; preds = %970
  %973 = icmp ugt i64 %847, 262128
  br i1 %973, label %974, label %853

974:                                              ; preds = %972
  %975 = icmp ugt i64 %847, 524272
  br i1 %975, label %976, label %853

976:                                              ; preds = %974
  %977 = icmp ugt i64 %847, 1048560
  br i1 %977, label %978, label %853

978:                                              ; preds = %976
  %979 = icmp ugt i64 %847, 2097136
  br i1 %979, label %980, label %853

980:                                              ; preds = %978
  %981 = icmp ugt i64 %847, 4194288
  br i1 %981, label %982, label %853

982:                                              ; preds = %980
  %983 = icmp ugt i64 %847, 8388592
  %984 = select i1 %983, i32 24, i32 23
  br label %853

985:                                              ; preds = %803, %803
  %986 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 29
  %987 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 31
  %988 = bitcast i64* %986 to i8*
  %989 = bitcast i8** %806 to i64*
  %990 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 32
  %991 = bitcast i8** %990 to i64*
  %992 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 33
  %993 = bitcast i64* %992 to i8*
  %994 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 30
  %995 = getelementptr inbounds %struct.Context, %struct.Context* %3, i64 0, i32 34
  %996 = bitcast i8** %804 to i64*
  %997 = bitcast i8** %994 to i64*
  br label %998

998:                                              ; preds = %1102, %985
  %999 = call fastcc i32 @NextFile(%struct.Context* nonnull %3) #11
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1133, label %1001

1001:                                             ; preds = %998
  %1002 = call %struct.BrotliDecoderStateStruct* @BrotliDecoderCreateInstance(i8* (i8*, i64)* null, void (i8*, i8*)* null, i8* null) #11
  %1003 = icmp eq %struct.BrotliDecoderStateStruct* %1002, null
  br i1 %1003, label %1004, label %1007

1004:                                             ; preds = %1001
  %1005 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1006 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1005, i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %1133

1007:                                             ; preds = %1001
  %1008 = call i32 @BrotliDecoderSetParameter(%struct.BrotliDecoderStateStruct* nonnull %1002, i32 1, i32 1) #11
  %1009 = call fastcc i32 @OpenFiles(%struct.Context* nonnull %3) #11
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1102, label %1011

1011:                                             ; preds = %1007
  %1012 = load i8*, i8** %28, align 8
  %1013 = icmp eq i8* %1012, null
  %1014 = load i32, i32* %8, align 4
  %1015 = icmp eq i32 %1014, 0
  %1016 = and i1 %1013, %1015
  br i1 %1016, label %1017, label %1023

1017:                                             ; preds = %1011
  %1018 = call i32 @isatty(i32 0) #11
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1023, label %1020

1020:                                             ; preds = %1017
  %1021 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1022 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1021, i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.65, i64 0, i64 0)) #11
  br label %1102

1023:                                             ; preds = %1017, %1011
  call void @llvm.memset.p0i8.i64(i8* align 16 %988, i8 0, i64 16, i1 false) #11
  store i64 524288, i64* %987, align 16
  %1024 = load i64, i64* %989, align 16
  store i64 %1024, i64* %991, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 %993, i8 0, i64 16, i1 false) #11
  br label %1025

1025:                                             ; preds = %1100, %1023
  %1026 = phi i32 [ 2, %1023 ], [ %1101, %1100 ]
  switch i32 %1026, label %1094 [
    i32 2, label %1027
    i32 3, label %1056
    i32 1, label %1061
  ]

1027:                                             ; preds = %1025
  %1028 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 16
  %1029 = call i32 @feof(%struct._IO_FILE* %1028) #11
  %1030 = icmp eq i32 %1029, 0
  br i1 %1030, label %1037, label %1031

1031:                                             ; preds = %1027
  %1032 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1033 = load i8*, i8** %28, align 8
  %1034 = icmp eq i8* %1033, null
  %1035 = select i1 %1034, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %1033
  %1036 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1032, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0), i8* %1035) #11
  br label %1102

1037:                                             ; preds = %1027
  %1038 = load i8*, i8** %804, align 8
  %1039 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 16
  %1040 = call i64 @fread(i8* %1038, i64 1, i64 524288, %struct._IO_FILE* %1039) #11
  store i64 %1040, i64* %986, align 16
  %1041 = load i64, i64* %992, align 16
  %1042 = add i64 %1041, %1040
  store i64 %1042, i64* %992, align 16
  %1043 = load i64, i64* %996, align 8
  store i64 %1043, i64* %997, align 8
  %1044 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 16
  %1045 = call i32 @ferror(%struct._IO_FILE* %1044) #11
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1100, label %1047

1047:                                             ; preds = %1037
  %1048 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1049 = load i8*, i8** %28, align 8
  %1050 = icmp eq i8* %1049, null
  %1051 = select i1 %1050, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %1049
  %1052 = tail call i32* @__errno_location() #13
  %1053 = load i32, i32* %1052, align 4
  %1054 = call i8* @strerror(i32 %1053) #11
  %1055 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1048, i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0), i8* %1051, i8* %1054) #11
  br label %1102

1056:                                             ; preds = %1025
  %1057 = call fastcc i32 @WriteOutput(%struct.Context* nonnull %3) #11
  %1058 = icmp eq i32 %1057, 0
  br i1 %1058, label %1102, label %1059

1059:                                             ; preds = %1056
  store i64 524288, i64* %987, align 16
  %1060 = load i64, i64* %989, align 16
  store i64 %1060, i64* %991, align 8
  br label %1100

1061:                                             ; preds = %1025
  %1062 = call fastcc i32 @WriteOutput(%struct.Context* nonnull %3) #11
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1102, label %1064

1064:                                             ; preds = %1061
  store i64 0, i64* %987, align 16
  %1065 = load i64, i64* %986, align 16
  %1066 = icmp eq i64 %1065, 0
  br i1 %1066, label %1067, label %1071

1067:                                             ; preds = %1064
  %1068 = load %struct._IO_FILE*, %struct._IO_FILE** %30, align 16
  %1069 = call i32 @fgetc(%struct._IO_FILE* %1068) #11
  %1070 = icmp eq i32 %1069, -1
  br i1 %1070, label %1077, label %1071

1071:                                             ; preds = %1067, %1064
  %1072 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1073 = load i8*, i8** %28, align 8
  %1074 = icmp eq i8* %1073, null
  %1075 = select i1 %1074, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %1073
  %1076 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1072, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0), i8* %1075) #11
  br label %1102

1077:                                             ; preds = %1067
  %1078 = load i32, i32* %7, align 8
  %1079 = icmp sgt i32 %1078, 0
  br i1 %1079, label %1080, label %1102

1080:                                             ; preds = %1077
  %1081 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1082 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1081, i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i64 0, i64 0)) #11
  %1083 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1084 = load i8*, i8** %28, align 8
  %1085 = icmp eq i8* %1084, null
  %1086 = select i1 %1085, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %1084
  %1087 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1083, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i8* %1086) #11
  %1088 = load i64, i64* %992, align 16
  call fastcc void @PrintBytes(i64 %1088) #11
  %1089 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1090 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1089, i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #11
  %1091 = load i64, i64* %995, align 8
  call fastcc void @PrintBytes(i64 %1091) #11
  %1092 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1093 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1092, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.52, i64 0, i64 0)) #11
  br label %1102

1094:                                             ; preds = %1025
  %1095 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1096 = load i8*, i8** %28, align 8
  %1097 = icmp eq i8* %1096, null
  %1098 = select i1 %1097, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %1096
  %1099 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1095, i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0), i8* %1098) #11
  br label %1102

1100:                                             ; preds = %1037, %1059
  %1101 = call i32 @BrotliDecoderDecompressStream(%struct.BrotliDecoderStateStruct* nonnull %1002, i64* %986, i8** %994, i64* %987, i8** %990, i64* null) #11
  br label %1025

1102:                                             ; preds = %1056, %1047, %1094, %1080, %1077, %1071, %1061, %1031, %1020, %1007
  %1103 = phi i32 [ 0, %1007 ], [ 0, %1020 ], [ 0, %1031 ], [ 0, %1094 ], [ 0, %1071 ], [ 1, %1080 ], [ 1, %1077 ], [ 0, %1061 ], [ 0, %1047 ], [ 0, %1056 ]
  call void @BrotliDecoderDestroyInstance(%struct.BrotliDecoderStateStruct* nonnull %1002) #11
  %1104 = call fastcc i32 @CloseFiles(%struct.Context* nonnull %3, i32 %1103) #11
  %1105 = icmp eq i32 %1104, 0
  %1106 = icmp eq i32 %1103, 0
  %1107 = or i1 %1106, %1105
  br i1 %1107, label %1133, label %998

1108:                                             ; preds = %420, %128, %793, %790, %767, %780, %786, %123, %131, %137, %143, %151, %159, %165, %171, %177, %181, %187, %202, %211, %217, %287, %292, %368, %361, %373, %474, %465, %456, %447, %438, %428, %416, %407, %398, %81, %488, %499, %572, %565, %580, %653, %646, %661, %670, %737, %745, %749, %803
  %1109 = phi i32 [ %771, %803 ], [ 3, %790 ], [ 3, %767 ], [ 3, %780 ], [ 3, %786 ], [ 3, %123 ], [ 3, %131 ], [ 3, %137 ], [ 3, %143 ], [ 3, %151 ], [ 3, %159 ], [ 3, %165 ], [ 3, %171 ], [ 3, %177 ], [ 3, %181 ], [ 3, %187 ], [ 3, %202 ], [ 3, %211 ], [ 3, %217 ], [ 3, %287 ], [ 3, %292 ], [ 3, %368 ], [ 3, %361 ], [ 3, %373 ], [ 3, %474 ], [ 3, %465 ], [ 3, %456 ], [ 3, %447 ], [ 3, %438 ], [ 3, %428 ], [ 3, %416 ], [ 3, %407 ], [ 3, %398 ], [ 3, %81 ], [ 3, %488 ], [ 3, %499 ], [ 3, %572 ], [ 3, %565 ], [ 3, %580 ], [ 3, %653 ], [ 3, %646 ], [ 3, %661 ], [ 3, %670 ], [ 3, %737 ], [ 3, %745 ], [ 3, %749 ], [ %771, %793 ], [ 2, %128 ], [ 2, %420 ]
  %1110 = icmp eq i32 %1109, 2
  %1111 = load i8*, i8** %1, align 8
  %1112 = tail call i8* @strrchr(i8* %1111, i32 47) #12
  %1113 = icmp eq i8* %1112, null
  %1114 = getelementptr inbounds i8, i8* %1112, i64 1
  %1115 = select i1 %1113, i8* %1111, i8* %1114
  %1116 = tail call i8* @strrchr(i8* %1115, i32 92) #12
  %1117 = icmp eq i8* %1116, null
  %1118 = getelementptr inbounds i8, i8* %1116, i64 1
  %1119 = select i1 %1117, i8* %1115, i8* %1118
  %1120 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1121 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %1122 = select i1 %1110, %struct._IO_FILE* %1120, %struct._IO_FILE* %1121
  %1123 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.68, i64 0, i64 0), i8* %1119) #11
  %1124 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([275 x i8], [275 x i8]* @.str.69, i64 0, i64 0)) #11
  %1125 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([246 x i8], [246 x i8]* @.str.70, i64 0, i64 0)) #11
  %1126 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.71, i64 0, i64 0), i32 0, i32 11) #11
  %1127 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.72, i64 0, i64 0)) #11
  %1128 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @.str.73, i64 0, i64 0), i32 10, i32 24) #11
  %1129 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([340 x i8], [340 x i8]* @.str.74, i64 0, i64 0), i32 10, i32 30) #11
  %1130 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #11
  %1131 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %1122, i32 1, i8* getelementptr inbounds ([305 x i8], [305 x i8]* @.str.76, i64 0, i64 0)) #11
  %1132 = xor i1 %1110, true
  br label %1133

1133:                                             ; preds = %954, %827, %1102, %998, %793, %1004, %833, %807, %1108, %810
  %1134 = phi i1 [ %1132, %1108 ], [ false, %810 ], [ true, %807 ], [ true, %833 ], [ true, %1004 ], [ false, %793 ], [ true, %1102 ], [ false, %998 ], [ true, %954 ], [ false, %827 ]
  %1135 = load i32, i32* %26, align 8
  %1136 = icmp ne i32 %1135, 0
  %1137 = load i8*, i8** %25, align 8
  call void @free(i8* %1137) #11
  %1138 = load i8*, i8** %27, align 16
  call void @free(i8* %1138) #11
  %1139 = or i1 %1134, %1136
  br i1 %1139, label %1140, label %1141

1140:                                             ; preds = %1133
  call void @exit(i32 1) #14
  unreachable

1141:                                             ; preds = %1133
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %4) #11
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare i32 @__fprintf_chk(%struct._IO_FILE*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @NextFile(%struct.Context*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 26
  store i64 -1, i64* %5, align 8
  %6 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 14
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 19
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 12, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %4, %14
  br i1 %15, label %25, label %34

16:                                               ; preds = %1
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %134, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 10
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  br label %134

25:                                               ; preds = %9, %25
  %26 = phi i64 [ %29, %25 ], [ %12, %9 ]
  %27 = phi i32 [ %28, %25 ], [ %4, %9 ]
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %2, align 8
  %29 = add nsw i64 %26, 1
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %10, align 4
  %31 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 12, i64 %29
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %28, %32
  br i1 %33, label %25, label %34

34:                                               ; preds = %25, %9
  %35 = phi i32 [ %4, %9 ], [ %28, %25 ]
  %36 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 15
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %35, %37
  br i1 %38, label %39, label %134

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 16
  %41 = load i8**, i8*** %40, align 8
  %42 = sext i32 %35 to i64
  %43 = getelementptr inbounds i8*, i8** %41, i64 %42
  %44 = load i8*, i8** %43, align 8
  %45 = tail call i64 @strlen(i8* %44) #12
  %46 = icmp eq i64 %45, 1
  br i1 %46, label %47, label %57

47:                                               ; preds = %39
  %48 = load i8, i8* %44, align 1
  %49 = icmp eq i8 %48, 45
  br i1 %49, label %50, label %57

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  store i8* null, i8** %51, align 8
  %52 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 10
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %56 = bitcast i8** %55 to i64*
  store i64 %54, i64* %56, align 8
  br label %134

57:                                               ; preds = %47, %39
  %58 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  store i8* %44, i8** %58, align 8
  %59 = tail call %struct._IO_FILE* @fopen64(i8* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #11
  %60 = icmp eq %struct._IO_FILE* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = tail call i32 @fseek(%struct._IO_FILE* nonnull %59, i64 0, i32 2) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = tail call i32 @fclose(%struct._IO_FILE* nonnull %59) #11
  br label %71

66:                                               ; preds = %61
  %67 = tail call i64 @ftell(%struct._IO_FILE* nonnull %59) #11
  %68 = tail call i32 @fclose(%struct._IO_FILE* nonnull %59) #11
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i64 %67, i64 -1
  br label %71

71:                                               ; preds = %57, %64, %66
  %72 = phi i64 [ -1, %64 ], [ -1, %57 ], [ %70, %66 ]
  store i64 %72, i64* %5, align 8
  %73 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 10
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %77 = bitcast i8** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = icmp eq i64 %75, 0
  br i1 %78, label %79, label %134

79:                                               ; preds = %71
  %80 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 6
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %134

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 17
  %85 = load i8*, i8** %84, align 8
  %86 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %85, i1 false, i1 true, i1 false) #11
  %87 = tail call i8* @__strcpy_chk(i8* %85, i8* %44, i64 %86) #11
  %88 = bitcast i8** %84 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %77, align 8
  %90 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 8
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 0
  %93 = inttoptr i64 %89 to i8*
  br i1 %92, label %128, label %94

94:                                               ; preds = %83
  %95 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 11
  %96 = load i8*, i8** %95, align 8
  %97 = tail call i64 @strlen(i8* %96) #12
  %98 = tail call i8* @strrchr(i8* %93, i32 47) #12
  %99 = icmp eq i8* %98, null
  %100 = getelementptr inbounds i8, i8* %98, i64 1
  %101 = select i1 %99, i8* %93, i8* %100
  %102 = tail call i8* @strrchr(i8* %101, i32 92) #12
  %103 = icmp eq i8* %102, null
  %104 = getelementptr inbounds i8, i8* %102, i64 1
  %105 = select i1 %103, i8* %101, i8* %104
  %106 = tail call i64 @strlen(i8* %105) #12
  %107 = add i64 %97, 1
  %108 = icmp ult i64 %106, %107
  br i1 %108, label %109, label %115

109:                                              ; preds = %94
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %111 = icmp eq i8* %44, null
  %112 = select i1 %111, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %44
  %113 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %110, i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* %112) #11
  %114 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 20
  store i32 1, i32* %114, align 8
  br label %134

115:                                              ; preds = %94
  %116 = getelementptr inbounds i8, i8* %105, i64 %106
  %117 = sub i64 0, %97
  %118 = getelementptr inbounds i8, i8* %116, i64 %117
  %119 = tail call i32 @strcmp(i8* %96, i8* %118) #12
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %127, label %121

121:                                              ; preds = %115
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %123 = icmp eq i8* %44, null
  %124 = select i1 %123, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %44
  %125 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %122, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i8* %124) #11
  %126 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 20
  store i32 1, i32* %126, align 8
  br label %134

127:                                              ; preds = %115
  store i8 0, i8* %118, align 1
  br label %134

128:                                              ; preds = %83
  %129 = getelementptr inbounds i8, i8* %93, i64 %45
  %130 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 11
  %131 = load i8*, i8** %130, align 8
  %132 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %129, i1 false, i1 true, i1 false) #11
  %133 = tail call i8* @__strcpy_chk(i8* %129, i8* %131, i64 %132) #11
  br label %134

134:                                              ; preds = %109, %121, %127, %79, %71, %34, %16, %128, %50, %18
  %135 = phi i32 [ 1, %18 ], [ 1, %50 ], [ 1, %128 ], [ 0, %16 ], [ 0, %34 ], [ 1, %71 ], [ 1, %79 ], [ 0, %109 ], [ 0, %121 ], [ 1, %127 ]
  ret i32 %135
}

declare %struct.BrotliEncoderStateStruct* @BrotliEncoderCreateInstance(i8* (i8*, i64)*, void (i8*, i8*)*, i8*) local_unnamed_addr #4

declare i32 @BrotliEncoderSetParameter(%struct.BrotliEncoderStateStruct*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @OpenFiles(%struct.Context* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 27
  store %struct._IO_FILE* null, %struct._IO_FILE** %4, align 8
  %5 = icmp eq i8* %3, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call %struct._IO_FILE* @fdopen(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #11
  store %struct._IO_FILE* %7, %struct._IO_FILE** %4, align 8
  br label %17

8:                                                ; preds = %1
  %9 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #11
  store %struct._IO_FILE* %9, %struct._IO_FILE** %4, align 8
  %10 = icmp eq %struct._IO_FILE* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %8
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = tail call i32* @__errno_location() #13
  %14 = load i32, i32* %13, align 4
  %15 = tail call i8* @strerror(i32 %14) #11
  %16 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %12, i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %3, i8* %15) #11
  br label %50

17:                                               ; preds = %6, %8
  %18 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %50

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 28
  %25 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** %24, align 8
  %27 = icmp eq i8* %23, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %21
  %29 = tail call %struct._IO_FILE* @fdopen(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0)) #11
  store %struct._IO_FILE* %29, %struct._IO_FILE** %24, align 8
  br label %50

30:                                               ; preds = %21
  %31 = icmp eq i32 %26, 0
  %32 = select i1 %31, i32 705, i32 577
  %33 = tail call i32 (i8*, i32, ...) @open64(i8* nonnull %23, i32 %32, i32 384) #11
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = tail call i32* @__errno_location() #13
  %38 = load i32, i32* %37, align 4
  %39 = tail call i8* @strerror(i32 %38) #11
  %40 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %36, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %23, i8* %39) #11
  br label %50

41:                                               ; preds = %30
  %42 = tail call %struct._IO_FILE* @fdopen(i32 %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0)) #11
  store %struct._IO_FILE* %42, %struct._IO_FILE** %24, align 8
  %43 = icmp eq %struct._IO_FILE* %42, null
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = tail call i32* @__errno_location() #13
  %47 = load i32, i32* %46, align 4
  %48 = tail call i8* @strerror(i32 %47) #11
  %49 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %45, i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.49, i64 0, i64 0), i8* nonnull %23, i8* %48) #11
  br label %50

50:                                               ; preds = %44, %41, %35, %28, %11, %17
  %51 = phi i32 [ 1, %17 ], [ 0, %11 ], [ 0, %35 ], [ 0, %44 ], [ 1, %28 ], [ 1, %41 ]
  ret i32 %51
}

; Function Attrs: nounwind
declare i32 @isatty(i32) local_unnamed_addr #5

declare void @BrotliEncoderDestroyInstance(%struct.BrotliEncoderStateStruct*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @CloseFiles(%struct.Context* nocapture, i32) unnamed_addr #0 {
  %3 = alloca %struct.stat, align 8
  %4 = alloca %struct.utimbuf, align 8
  %5 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %100

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 28
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %11 = icmp eq %struct._IO_FILE* %10, null
  br i1 %11, label %100, label %12

12:                                               ; preds = %8
  %13 = icmp ne i32 %1, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = tail call i32 @unlink(i8* nonnull %16) #11
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  br label %21

21:                                               ; preds = %14, %18, %12
  %22 = phi %struct._IO_FILE* [ %10, %14 ], [ %20, %18 ], [ %10, %12 ]
  %23 = tail call i32 @fclose(%struct._IO_FILE* %22)
  %24 = icmp eq i32 %23, 0
  %25 = xor i1 %13, true
  %26 = or i1 %24, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %29 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  %32 = select i1 %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %30
  %33 = tail call i32* @__errno_location() #13
  %34 = load i32, i32* %33, align 4
  %35 = tail call i8* @strerror(i32 %34) #11
  %36 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %28, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i64 0, i64 0), i8* %32, i8* %35) #11
  br label %100

37:                                               ; preds = %21
  %38 = zext i1 %24 to i32
  %39 = and i1 %13, %24
  br i1 %39, label %40, label %100

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 5
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %100, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %struct.stat* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 144, i1 false) #11
  %50 = bitcast %struct.utimbuf* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #11
  %51 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %4, i64 0, i32 0
  %52 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %4, i64 0, i32 1
  %53 = icmp eq i8* %46, null
  %54 = icmp eq i8* %48, null
  %55 = or i1 %53, %54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false) #11
  br i1 %55, label %99, label %56

56:                                               ; preds = %44
  %57 = bitcast %struct.stat* %3 to %struct.stat64*
  %58 = call i32 @__xstat64(i32 1, i8* nonnull %46, %struct.stat64* nonnull %57) #11
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %99

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 11, i32 0
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %51, align 8
  %63 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 12, i32 0
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %52, align 8
  %65 = call i32 @utime(i8* nonnull %48, %struct.utimbuf* nonnull %4) #11
  %66 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 511
  %69 = call i32 @chmod(i8* nonnull %48, i32 %68) #11
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %60
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = tail call i32* @__errno_location() #13
  %74 = load i32, i32* %73, align 4
  %75 = call i8* @strerror(i32 %74) #11
  %76 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %72, i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.62, i64 0, i64 0), i8* nonnull %48, i8* %75) #11
  br label %77

77:                                               ; preds = %71, %60
  %78 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 5
  %79 = load i32, i32* %78, align 8
  %80 = call i32 @chown(i8* nonnull %48, i32 -1, i32 %79) #11
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %77
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = tail call i32* @__errno_location() #13
  %85 = load i32, i32* %84, align 4
  %86 = call i8* @strerror(i32 %85) #11
  %87 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %83, i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0), i8* nonnull %48, i8* %86) #11
  br label %88

88:                                               ; preds = %82, %77
  %89 = getelementptr inbounds %struct.stat, %struct.stat* %3, i64 0, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = call i32 @chown(i8* nonnull %48, i32 %90, i32 -1) #11
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %88
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %95 = tail call i32* @__errno_location() #13
  %96 = load i32, i32* %95, align 4
  %97 = call i8* @strerror(i32 %96) #11
  %98 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %94, i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.64, i64 0, i64 0), i8* nonnull %48, i8* %97) #11
  br label %99

99:                                               ; preds = %44, %56, %88, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %49) #11
  br label %100

100:                                              ; preds = %27, %40, %8, %2, %37, %99
  %101 = phi i32 [ 1, %2 ], [ 1, %99 ], [ 1, %40 ], [ %38, %37 ], [ 1, %8 ], [ 0, %27 ]
  %102 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 27
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** %102, align 8
  %104 = icmp eq %struct._IO_FILE* %103, null
  br i1 %104, label %120, label %105

105:                                              ; preds = %100
  %106 = call i32 @fclose(%struct._IO_FILE* nonnull %103)
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %120, label %108

108:                                              ; preds = %105
  %109 = icmp eq i32 %101, 0
  br i1 %109, label %120, label %110

110:                                              ; preds = %108
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  %115 = select i1 %114, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %113
  %116 = tail call i32* @__errno_location() #13
  %117 = load i32, i32* %116, align 4
  %118 = call i8* @strerror(i32 %117) #11
  %119 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %111, i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i64 0, i64 0), i8* %115, i8* %118) #11
  br label %120

120:                                              ; preds = %110, %108, %105, %100
  %121 = phi i32 [ %101, %105 ], [ %101, %100 ], [ 0, %108 ], [ 0, %110 ]
  %122 = icmp eq i32 %1, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 4
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 24
  %129 = load i8*, i8** %128, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = call i32 @unlink(i8* nonnull %129) #11
  br label %133

133:                                              ; preds = %127, %123, %120, %131
  %134 = bitcast %struct._IO_FILE** %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 16, i1 false)
  ret i32 %121
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fseek(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @ftell(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #8

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fdopen(i32, i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nofree
declare i32 @open64(i8* nocapture readonly, i32, ...) local_unnamed_addr #10

declare i32 @BrotliEncoderCompressStream(%struct.BrotliEncoderStateStruct*, i32, i64*, i8**, i64*, i8**, i64*) local_unnamed_addr #4

declare i32 @BrotliEncoderIsFinished(%struct.BrotliEncoderStateStruct*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @feof(%struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @WriteOutput(%struct.Context* nocapture) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 32
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 23
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %4, %7
  %9 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 34
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  store i64 %11, i64* %9, align 8
  %12 = icmp eq i64 %8, 0
  %13 = inttoptr i64 %7 to i8*
  br i1 %12, label %35, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %35

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 28
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %21 = tail call i64 @fwrite(i8* %13, i64 1, i64 %8, %struct._IO_FILE* %20)
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8
  %23 = tail call i32 @ferror(%struct._IO_FILE* %22) #11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %18
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %27 = getelementptr inbounds %struct.Context, %struct.Context* %0, i64 0, i32 25
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* %28
  %31 = tail call i32* @__errno_location() #13
  %32 = load i32, i32* %31, align 4
  %33 = tail call i8* @strerror(i32 %32) #11
  %34 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %26, i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.54, i64 0, i64 0), i8* %30, i8* %33) #11
  br label %35

35:                                               ; preds = %18, %14, %1, %25
  %36 = phi i32 [ 0, %25 ], [ 1, %1 ], [ 1, %14 ], [ 1, %18 ]
  ret i32 %36
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @PrintBytes(i64) unnamed_addr #0 {
  %2 = icmp ult i64 %0, 1024
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = trunc i64 %0 to i32
  %6 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %4, i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i32 %5) #11
  br label %24

7:                                                ; preds = %1
  %8 = icmp ult i64 %0, 1048576
  br i1 %8, label %9, label %14

9:                                                ; preds = %7
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = uitofp i64 %0 to double
  %12 = fmul double %11, 0x3F50000000000000
  %13 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %10, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i64 0, i64 0), double %12) #11
  br label %24

14:                                               ; preds = %7
  %15 = icmp ult i64 %0, 1073741824
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = uitofp i64 %0 to double
  br i1 %15, label %18, label %21

18:                                               ; preds = %14
  %19 = fmul double %17, 0x3EB0000000000000
  %20 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %16, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.59, i64 0, i64 0), double %19) #11
  br label %24

21:                                               ; preds = %14
  %22 = fmul double %17, 0x3E10000000000000
  %23 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %16, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0), double %22) #11
  br label %24

24:                                               ; preds = %9, %21, %18, %3
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @unlink(i8* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @utime(i8* nocapture readonly, %struct.utimbuf* nocapture readonly) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @chmod(i8* nocapture readonly, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @chown(i8* nocapture readonly, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #5

declare %struct.BrotliDecoderStateStruct* @BrotliDecoderCreateInstance(i8* (i8*, i64)*, void (i8*, i8*)*, i8*) local_unnamed_addr #4

declare i32 @BrotliDecoderSetParameter(%struct.BrotliDecoderStateStruct*, i32, i32) local_unnamed_addr #4

declare void @BrotliDecoderDestroyInstance(%struct.BrotliDecoderStateStruct*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @fgetc(%struct._IO_FILE* nocapture) local_unnamed_addr #3

declare i32 @BrotliDecoderDecompressStream(%struct.BrotliDecoderStateStruct*, i64*, i8**, i64*, i8**, i64*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
