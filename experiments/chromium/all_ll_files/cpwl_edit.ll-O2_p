; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_edit.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_edit.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { float*, float*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { float* }
%"class.CPWL_Wnd::CreateParams" = type <{ %class.CFX_FloatRect, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.4", %"class.fxcrt::ObservedPtr.5", %"class.fxcrt::UnownedPtr.6", i32, %struct.CFX_Color, i32, i32, %struct.CFX_Color, %struct.CFX_Color, i32, float, %struct.CPWL_Dash, [4 x i8], %class.CPWL_MsgControl*, i32, [4 x i8] }>
%class.CFX_FloatRect = type { float, float, float, float }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.IPWL_SystemHandler* }
%class.IPWL_SystemHandler = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.4" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type { i32 (...)** }
%"class.fxcrt::ObservedPtr.5" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPWL_Wnd::ProviderIface"* }
%"class.CPWL_Wnd::ProviderIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::UnownedPtr.6" = type { %"class.CPWL_Wnd::FocusHandlerIface"* }
%"class.CPWL_Wnd::FocusHandlerIface" = type { i32 (...)** }
%struct.CFX_Color = type { i32, float, float, float, float }
%struct.CPWL_Dash = type { i32, i32, i32 }
%class.CPWL_MsgControl = type opaque
%class.CPWL_Edit = type { %class.CPWL_Wnd.base, i8, i8, i8, %class.CFX_FloatRect, %"class.std::__1::unique_ptr.18", %"class.fxcrt::UnownedPtr.85", %"class.fxcrt::UnownedPtr.93", %"class.fxcrt::UnownedPtr.94" }
%class.CPWL_Wnd.base = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.IPWL_SystemHandler::PerWindowData"* }
%"class.fxcrt::UnownedPtr.10" = type { %class.CPWL_Wnd* }
%class.CPWL_Wnd = type <{ i32 (...)**, %"class.fxcrt::Observable", %"class.CPWL_Wnd::CreateParams", %"class.std::__1::unique_ptr", %"class.fxcrt::UnownedPtr.10", %"class.std::__1::vector", %"class.fxcrt::UnownedPtr.17", %class.CFX_FloatRect, %class.CFX_FloatRect, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %class.CPWL_Wnd* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::unique_ptr.11"* }
%"class.fxcrt::UnownedPtr.17" = type { %class.CPWL_ScrollBar* }
%class.CPWL_ScrollBar = type <{ %class.CPWL_Wnd.base, [5 x i8], %"class.CFX_Timer::CallbackIface", %struct.PWL_SCROLL_INFO, [4 x i8], %"class.fxcrt::UnownedPtr.95", %"class.fxcrt::UnownedPtr.95", %"class.fxcrt::UnownedPtr.95", %"class.std::__1::unique_ptr.86", %struct.PWL_SCROLL_PRIVATEDATA, i8, i8, [2 x i8], float, float, [4 x i8] }>
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%struct.PWL_SCROLL_INFO = type { float, float, float, float, float }
%"class.fxcrt::UnownedPtr.95" = type { %class.CPWL_SBButton* }
%class.CPWL_SBButton = type { %class.CPWL_Wnd.base, i8, i8, [3 x i8] }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr.89" }
%"class.fxcrt::UnownedPtr.89" = type { %"class.CFX_Timer::CallbackIface"* }
%struct.PWL_SCROLL_PRIVATEDATA = type { %struct.PWL_FLOATRANGE, float, float, float, float }
%struct.PWL_FLOATRANGE = type { float, float }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.CPWL_EditImpl* }
%class.CPWL_EditImpl = type { i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.fxcrt::UnownedPtr.49", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %"class.CPWL_EditImpl::SelectState", %class.CFX_PTemplate, %class.CFX_PTemplate, %"class.std::__1::unique_ptr.50", %"class.CPWL_EditImpl::RefreshState", %class.CFX_PTemplate, %"class.CPWL_EditImpl::UndoStack", %class.CFX_FloatRect }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.CPWL_EditImpl::Provider"* }
%"class.CPWL_EditImpl::Provider" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.CPVT_VariableText* }
%class.CPVT_VariableText = type { i8, i8, i8, i8, i16, i32, i32, i32, float, float, float, %"class.std::__1::vector.30", %"class.fxcrt::UnownedPtr.38", %"class.std::__1::unique_ptr.39", %class.CFX_FloatRect, %class.CPVT_FloatRect }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::unique_ptr.32"*, %"class.std::__1::unique_ptr.32"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::unique_ptr.32" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.32"* }
%"class.fxcrt::UnownedPtr.38" = type { %"class.CPVT_VariableText::Provider"* }
%"class.CPVT_VariableText::Provider" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.4" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.CPVT_VariableText::Iterator"* }
%"class.CPVT_VariableText::Iterator" = type { %struct.CPVT_WordPlace, %"class.fxcrt::UnownedPtr.42" }
%"class.fxcrt::UnownedPtr.42" = type { %class.CPVT_VariableText* }
%class.CPVT_FloatRect = type { %class.CFX_FloatRect }
%"class.fxcrt::UnownedPtr.49" = type { %class.CPWL_Edit* }
%struct.CPVT_WordPlace = type { i32, i32, i32 }
%"class.CPWL_EditImpl::SelectState" = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.CPWL_EditImpl::Iterator"* }
%"class.CPWL_EditImpl::Iterator" = type { %"class.fxcrt::UnownedPtr.53", %"class.fxcrt::UnownedPtr.54" }
%"class.fxcrt::UnownedPtr.53" = type { %class.CPWL_EditImpl* }
%"class.fxcrt::UnownedPtr.54" = type { %"class.CPVT_VariableText::Iterator"* }
%"class.CPWL_EditImpl::RefreshState" = type { %"class.std::__1::vector.58", %"class.std::__1::vector.58", %"class.std::__1::vector.65" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"class.std::__1::__compressed_pair.60" }
%"struct.CPWL_EditImpl::RefreshState::LineRect" = type { %struct.CPVT_WordRange, %class.CFX_FloatRect }
%struct.CPVT_WordRange = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.CPWL_EditImpl::RefreshState::LineRect"* }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.CFX_FloatRect* }
%class.CFX_PTemplate = type { float, float }
%"class.CPWL_EditImpl::UndoStack" = type <{ %"class.std::__1::deque", i64, i8, [7 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.78" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.72"**, %"class.std::__1::unique_ptr.72"**, %"class.std::__1::unique_ptr.72"**, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::unique_ptr.72" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr.72"** }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::UnownedPtr.85" = type { %class.CPWL_Caret* }
%class.CPWL_Caret = type { %class.CPWL_Wnd.base, %"class.CFX_Timer::CallbackIface", i8, %class.CFX_PTemplate, %class.CFX_PTemplate, float, %class.CFX_FloatRect, %"class.std::__1::unique_ptr.86" }
%"class.fxcrt::UnownedPtr.93" = type { %class.IPWL_FillerNotify* }
%class.IPWL_FillerNotify = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.94" = type { %class.CFFL_FormFiller* }
%class.CFFL_FormFiller = type opaque
%"class.IPWL_SystemHandler::PerWindowData" = type { i32 (...)** }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::ObservedPtr.100" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPWL_Edit* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.101", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.107" }
%"class.fxcrt::RetainPtr.101" = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.113" }
%class.CFX_PathData = type { %"class.std::__1::vector.120" }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.122" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.128", %class.CFX_Font, %"class.std::__1::vector.178", %"class.fxcrt::RetainPtr.186", %"class.fxcrt::RetainPtr.227", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.233", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr.128" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.129", %"class.std::__1::unique_ptr.135", %"class.fxcrt::RetainPtr.141", %"class.fxcrt::RetainPtr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::vector.173", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.129" = type { %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.141" = type { %"class.std::__1::unique_ptr.142" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.145", %"class.fxcrt::RetainPtr.149" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.149" = type { %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.157" = type { %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { i8* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { i8*, i8*, %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.177", i64 }
%"class.fxcrt::UnownedPtr.177" = type { i8* }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.std::__1::unique_ptr.180"*, %"class.std::__1::unique_ptr.180"*, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"* }
%"class.fxcrt::RetainPtr.186" = type { %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.198", %"class.fxcrt::RetainPtr.219" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.169", %"class.fxcrt::UnownedPtr.177" }
%"class.fxcrt::RetainPtr.198" = type { %"class.std::__1::unique_ptr.199" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.202" }
%"class.fxcrt::RetainPtr.202" = type { %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.263" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.281", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.208" }
%"class.std::__1::__tree.208" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.209", %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.219" = type { %"class.std::__1::unique_ptr.220" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.227" = type { %"class.std::__1::unique_ptr.228" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.190" }
%"class.fxcrt::RetainPtr.190" = type { %"class.std::__1::unique_ptr.191" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.fxcrt::StringDataTemplate.194"* }
%"class.fxcrt::StringDataTemplate.194" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%"class.fxcrt::RetainPtr.239" = type { %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.CPDF_Font* }
%"class.fxcrt::ObservedPtr.245" = type { %"class.fxcrt::Observable::ObserverIface", %class.CPWL_Wnd* }
%class.CFX_VTemplate = type { %class.CFX_PTemplate.251 }
%class.CFX_PTemplate.251 = type { i32, i32 }
%class.CPVT_Word = type { i16, i32, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float, i32, float }
%class.CPVT_Line = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5fxcrt11ObservedPtrI9CPWL_EditED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrI8CPWL_WndED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrI9CPWL_EditED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrI9CPWL_EditE21OnObservableDestroyedEv = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZN5fxcrt11ObservedPtrI8CPWL_WndED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrI8CPWL_WndE21OnObservableDestroyedEv = comdat any

$_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE = comdat any

$_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE = comdat any

@_ZTV9CPWL_Edit = hidden unnamed_addr constant { [43 x i8*] } { [43 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_EditD2Ev to i8*), i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_EditD0Ev to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, %class.CFX_FloatRect*)* @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i16, i32)* @_ZN9CPWL_Edit9OnKeyDownEtj to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i16, i32)* @_ZN9CPWL_Edit6OnCharEtj to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i32, %class.CFX_PTemplate*)* @_ZN9CPWL_Edit15OnLButtonDblClkEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i32, %class.CFX_PTemplate*)* @_ZN9CPWL_Edit13OnLButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i32, %class.CFX_PTemplate*)* @_ZN9CPWL_Edit11OnLButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i32, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i32, %class.CFX_PTemplate*)* @_ZN9CPWL_Edit11OnRButtonUpEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i32, %class.CFX_PTemplate*)* @_ZN9CPWL_Edit11OnMouseMoveEjRK13CFX_PTemplateIfE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*, i32, %class.CFX_PTemplate*, %class.CFX_VTemplate*)* @_ZN9CPWL_Edit12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE to i8*), i8* bitcast (void (%class.CPWL_Edit*, %struct.PWL_SCROLL_INFO*)* @_ZN9CPWL_Edit13SetScrollInfoERK15PWL_SCROLL_INFO to i8*), i8* bitcast (void (%class.CPWL_Edit*, float)* @_ZN9CPWL_Edit17SetScrollPositionEf to i8*), i8* bitcast (void (%class.CPWL_Edit*, float)* @_ZN9CPWL_Edit22ScrollWindowVerticallyEf to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate*)* @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd8SetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Wnd*)* @_ZN8CPWL_Wnd9KillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_Edit9SetCursorEv to i8*), i8* bitcast (i1 (%class.CPWL_Wnd*, i1)* @_ZN8CPWL_Wnd10SetVisibleEb to i8*), i8* bitcast (void (%class.CPWL_Edit*, float)* @_ZN9CPWL_Edit11SetFontSizeEf to i8*), i8* bitcast (float (%class.CPWL_Edit*)* @_ZNK9CPWL_Edit11GetFontSizeEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Edit*)* @_ZN9CPWL_Edit7GetTextEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPWL_Edit*)* @_ZN9CPWL_Edit15GetSelectedTextEv to i8*), i8* bitcast (void (%class.CPWL_Edit*, %"class.fxcrt::WideString"*)* @_ZN9CPWL_Edit16ReplaceSelectionERKN5fxcrt10WideStringE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*)* @_ZN9CPWL_Edit13SelectAllTextEv to i8*), i8* bitcast (i1 (%class.CPWL_Edit*)* @_ZN9CPWL_Edit7CanUndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Edit*)* @_ZN9CPWL_Edit7CanRedoEv to i8*), i8* bitcast (i1 (%class.CPWL_Edit*)* @_ZN9CPWL_Edit4UndoEv to i8*), i8* bitcast (i1 (%class.CPWL_Edit*)* @_ZN9CPWL_Edit4RedoEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Edit*)* @_ZNK9CPWL_Edit12GetFocusRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CPWL_Edit*)* @_ZNK9CPWL_Edit13GetClientRectEv to i8*), i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_Edit10OnSetFocusEv to i8*), i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_Edit11OnKillFocusEv to i8*), i8* bitcast (void (%class.CPWL_Edit*, %"class.CPWL_Wnd::CreateParams"*)* @_ZN9CPWL_Edit14CreateChildWndERKN8CPWL_Wnd12CreateParamsE to i8*), i8* bitcast (i1 (%class.CPWL_Edit*)* @_ZN9CPWL_Edit13RePosChildWndEv to i8*), i8* bitcast (void (%class.CPWL_Edit*, %class.CFX_RenderDevice*, %class.CFX_Matrix*)* @_ZN9CPWL_Edit18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_Edit9OnCreatedEv to i8*), i8* bitcast (void (%class.CPWL_Edit*)* @_ZN9CPWL_Edit9OnDestroyEv to i8*)] }, align 8
@__const._ZN9CPWL_Edit18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix.gsd = private unnamed_addr constant { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.113" } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.std::__1::vector.113" { %"class.std::__1::__vector_base.114" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.115" { %"struct.std::__1::__compressed_pair_elem.116" { float* inttoptr (i64 -6148914691236517206 to float*) } } } } }, align 8
@__const._ZN9CPWL_Edit15CreateEditCaretERKN8CPWL_Wnd12CreateParamsE.ecp = private unnamed_addr constant %"class.CPWL_Wnd::CreateParams" <{ %class.CFX_FloatRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::ObservedPtr" { %"class.fxcrt::Observable::ObserverIface" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.CFX_Timer::HandlerIface"* inttoptr (i64 -6148914691236517206 to %"class.CFX_Timer::HandlerIface"*) }, %"class.fxcrt::UnownedPtr" { %class.IPWL_SystemHandler* inttoptr (i64 -6148914691236517206 to %class.IPWL_SystemHandler*) }, %"class.fxcrt::UnownedPtr.4" { %class.IPVT_FontMap* inttoptr (i64 -6148914691236517206 to %class.IPVT_FontMap*) }, %"class.fxcrt::ObservedPtr.5" { %"class.fxcrt::Observable::ObserverIface" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.CPWL_Wnd::ProviderIface"* inttoptr (i64 -6148914691236517206 to %"class.CPWL_Wnd::ProviderIface"*) }, %"class.fxcrt::UnownedPtr.6" { %"class.CPWL_Wnd::FocusHandlerIface"* inttoptr (i64 -6148914691236517206 to %"class.CPWL_Wnd::FocusHandlerIface"*) }, i32 -1431655766, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.CFX_Color { i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, float 0xFFFFFFFFE0000000, %struct.CPWL_Dash { i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.CPWL_MsgControl* inttoptr (i64 -6148914691236517206 to %class.CPWL_MsgControl*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr.100"*)* @_ZN5fxcrt11ObservedPtrI9CPWL_EditED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.100"*)* @_ZN5fxcrt11ObservedPtrI9CPWL_EditED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.100"*)* @_ZN5fxcrt11ObservedPtrI9CPWL_EditE21OnObservableDestroyedEv to i8*)] }, comdat, align 8
@_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr.245"*)* @_ZN5fxcrt11ObservedPtrI8CPWL_WndED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.245"*)* @_ZN5fxcrt11ObservedPtrI8CPWL_WndED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr.245"*)* @_ZN5fxcrt11ObservedPtrI8CPWL_WndE21OnObservableDestroyedEv to i8*)] }, comdat, align 8

@_ZN9CPWL_EditC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%class.CPWL_Edit*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*), void (%class.CPWL_Edit*, %"class.CPWL_Wnd::CreateParams"*, %"class.IPWL_SystemHandler::PerWindowData"*)* @_ZN9CPWL_EditC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE
@_ZN9CPWL_EditD1Ev = hidden unnamed_addr alias void (%class.CPWL_Edit*), void (%class.CPWL_Edit*)* @_ZN9CPWL_EditD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_EditC2ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_Edit*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd* %4, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1, %"class.IPWL_SystemHandler::PerWindowData"* %2) #11
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [43 x i8*] }, { [43 x i8*] }* @_ZTV9CPWL_Edit, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 3
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4
  %10 = bitcast %class.CFX_FloatRect* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false) #11
  %11 = tail call i8* @_Znwm(i64 272) #12
  %12 = bitcast i8* %11 to %class.CPWL_EditImpl*
  tail call void @_ZN13CPWL_EditImplC1Ev(%class.CPWL_EditImpl* nonnull %12) #11
  %13 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = bitcast %class.CPWL_EditImpl** %13 to i8**
  store i8* %11, i8** %14, align 8
  %15 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 6, i32 0
  %16 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 17
  %17 = bitcast %class.CPWL_Caret** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false)
  store i32 3, i32* %16, align 8
  ret void
}

declare void @_ZN8CPWL_WndC2ERKNS_12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS3_14default_deleteIS6_EEEE(%class.CPWL_Wnd*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_EditD2Ev(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [43 x i8*] }, { [43 x i8*] }* @_ZTV9CPWL_Edit, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %3, align 8
  %5 = icmp eq %class.CPWL_EditImpl* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %4) #11
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %9) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_EditD0Ev(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [43 x i8*] }, { [43 x i8*] }* @_ZTV9CPWL_Edit, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %3, align 8
  %5 = icmp eq %class.CPWL_EditImpl* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %4) #11
  %7 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_WndD2Ev(%class.CPWL_Wnd* %9) #11
  %10 = bitcast %class.CPWL_Edit* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit7SetTextERKN5fxcrt10WideStringE(%class.CPWL_Edit* nocapture readonly, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl7SetTextERKN5fxcrt10WideStringE(%class.CPWL_EditImpl* %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl7SetTextERKN5fxcrt10WideStringE(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit13RePosChildWndEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %class.CFX_FloatRect, align 4
  %5 = alloca %"class.fxcrt::ObservedPtr.100", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %class.CFX_FloatRect*
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %class.CFX_FloatRect*
  %10 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %11 = tail call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %10) #11
  %12 = icmp eq %class.CPWL_ScrollBar* %11, null
  br i1 %12, label %46, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4, i32 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4, i32 2
  %18 = load float, float* %17, align 8
  %19 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4, i32 3
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %class.CFX_FloatRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 0
  %24 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %25 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %26 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %27 = fadd float %18, 1.200000e+01
  store float %18, float* %23, align 4
  %28 = bitcast float* %24 to i32*
  store i32 %16, i32* %28, align 4
  store float %27, float* %25, align 4
  %29 = bitcast float* %26 to i32*
  store i32 %21, i32* %29, align 4
  %30 = bitcast %"class.fxcrt::ObservedPtr.100"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  store %class.CPWL_Edit* %0, %class.CPWL_Edit** %32, align 8
  %33 = icmp eq %class.CPWL_Edit* %0, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 0
  %36 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %36, %"class.fxcrt::Observable::ObserverIface"* nonnull %35) #11
  br label %37

37:                                               ; preds = %13, %34
  %38 = bitcast %class.CPWL_ScrollBar* %11 to %class.CPWL_Wnd*
  %39 = call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* nonnull %38, %class.CFX_FloatRect* nonnull dereferenceable(16) %4, i1 zeroext true, i1 zeroext false) #11
  %40 = load %class.CPWL_Edit*, %class.CPWL_Edit** %32, align 8
  %41 = icmp eq %class.CPWL_Edit* %40, null
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  br label %126

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %40, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %44, %"class.fxcrt::Observable::ObserverIface"* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  br label %46

46:                                               ; preds = %43, %1
  %47 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 6, i32 0
  %48 = load %class.CPWL_Caret*, %class.CPWL_Caret** %47, align 8
  %49 = icmp eq %class.CPWL_Caret* %48, null
  br i1 %49, label %94, label %50

50:                                               ; preds = %46
  %51 = call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %10, i32 16384) #11
  br i1 %51, label %94, label %52

52:                                               ; preds = %50
  %53 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #11
  %54 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %55 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -1, i64 16, i1 false)
  %56 = call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %10) #11
  %57 = call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %10) #11
  %58 = add nsw i32 %57, %56
  %59 = sitofp i32 %58 to float
  %60 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #11
  %61 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %10) #11
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %63 = extractvalue { <2 x float>, <2 x float> } %61, 0
  store <2 x float> %63, <2 x float>* %62, align 8
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %65 = extractvalue { <2 x float>, <2 x float> } %61, 1
  store <2 x float> %65, <2 x float>* %64, align 8
  %66 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %54, float %59, float %59) #11
  %67 = extractvalue { <2 x float>, <2 x float> } %66, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #11
  %68 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %10) #11
  %69 = icmp eq %class.CPWL_ScrollBar* %68, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %52
  %71 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %68, i64 0, i32 0, i32 10
  %72 = load i8, i8* %71, align 1, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = extractelement <2 x float> %67, i32 0
  %76 = fadd float %75, -1.200000e+01
  %77 = insertelement <2 x float> %67, float %76, i32 0
  br label %78

78:                                               ; preds = %52, %70, %74
  %79 = phi <2 x float> [ %77, %74 ], [ %67, %70 ], [ %67, %52 ]
  %80 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %81 = extractvalue { <2 x float>, <2 x float> } %66, 0
  store <2 x float> %81, <2 x float>* %80, align 8
  %82 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %79, <2 x float>* %82, align 8
  %83 = extractelement <2 x float> %81, i32 0
  %84 = extractelement <2 x float> %79, i32 0
  %85 = fcmp ult float %83, %84
  br i1 %85, label %86, label %91

86:                                               ; preds = %78
  %87 = extractelement <2 x float> %79, i32 1
  %88 = extractelement <2 x float> %81, i32 1
  %89 = fcmp ult float %88, %87
  br i1 %89, label %90, label %91

90:                                               ; preds = %86
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %7, float 1.000000e+00, float 1.000000e+00) #11
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %7) #11
  br label %91

91:                                               ; preds = %86, %78, %90
  %92 = bitcast %class.CPWL_Caret** %47 to %class.CPWL_Wnd**
  %93 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %92, align 8
  call void @_ZN8CPWL_Wnd11SetClipRectERK13CFX_FloatRect(%class.CPWL_Wnd* %93, %class.CFX_FloatRect* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #11
  br label %94

94:                                               ; preds = %46, %91, %50
  %95 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %96 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %95, align 8
  %97 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #11
  %98 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %99 = call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %10) #11
  %100 = call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %10) #11
  %101 = add nsw i32 %100, %99
  %102 = sitofp i32 %101 to float
  %103 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #11
  %104 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %10) #11
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %106 = extractvalue { <2 x float>, <2 x float> } %104, 0
  store <2 x float> %106, <2 x float>* %105, align 8
  %107 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %108 = extractvalue { <2 x float>, <2 x float> } %104, 1
  store <2 x float> %108, <2 x float>* %107, align 8
  %109 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %98, float %102, float %102) #11
  %110 = extractvalue { <2 x float>, <2 x float> } %109, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #11
  %111 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %10) #11
  %112 = icmp eq %class.CPWL_ScrollBar* %111, null
  br i1 %112, label %121, label %113

113:                                              ; preds = %94
  %114 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %111, i64 0, i32 0, i32 10
  %115 = load i8, i8* %114, align 1, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = extractelement <2 x float> %110, i32 0
  %119 = fadd float %118, -1.200000e+01
  %120 = insertelement <2 x float> %110, float %119, i32 0
  br label %121

121:                                              ; preds = %94, %113, %117
  %122 = phi <2 x float> [ %120, %117 ], [ %110, %113 ], [ %110, %94 ]
  %123 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %124 = extractvalue { <2 x float>, <2 x float> } %109, 0
  store <2 x float> %124, <2 x float>* %123, align 8
  %125 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %122, <2 x float>* %125, align 8
  call void @_ZN13CPWL_EditImpl12SetPlateRectERK13CFX_FloatRect(%class.CPWL_EditImpl* %96, %class.CFX_FloatRect* nonnull dereferenceable(16) %9) #11
  br label %126

126:                                              ; preds = %42, %121
  %127 = phi i8* [ %22, %42 ], [ %97, %121 ]
  %128 = phi i1 [ false, %42 ], [ true, %121 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #11
  ret i1 %128
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd*, %class.CFX_FloatRect* dereferenceable(16), i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI9CPWL_EditED2Ev(%"class.fxcrt::ObservedPtr.100"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 1
  %4 = load %class.CPWL_Edit*, %class.CPWL_Edit** %3, align 8
  %5 = icmp eq %class.CPWL_Edit* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK9CPWL_Edit13GetClientRectEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %5 = tail call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %4) #11
  %6 = tail call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %4) #11
  %7 = add nsw i32 %6, %5
  %8 = sitofp i32 %7 to float
  %9 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %4) #11
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 0
  store <2 x float> %12, <2 x float>* %11, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %14 = extractvalue { <2 x float>, <2 x float> } %10, 1
  store <2 x float> %14, <2 x float>* %13, align 8
  %15 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %3, float %8, float %8) #11
  %16 = extractvalue { <2 x float>, <2 x float> } %15, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  %17 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %4) #11
  %18 = icmp eq %class.CPWL_ScrollBar* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %17, i64 0, i32 0, i32 10
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = extractelement <2 x float> %16, i32 0
  %25 = fadd float %24, -1.200000e+01
  %26 = insertelement <2 x float> %16, float %25, i32 0
  br label %27

27:                                               ; preds = %19, %1, %23
  %28 = phi <2 x float> [ %26, %23 ], [ %16, %19 ], [ %16, %1 ]
  %29 = insertvalue { <2 x float>, <2 x float> } %15, <2 x float> %28, 1
  ret { <2 x float>, <2 x float> } %29
}

declare void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #1

declare void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect*) local_unnamed_addr #1

declare void @_ZN8CPWL_Wnd11SetClipRectERK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl12SetPlateRectERK13CFX_FloatRect(%class.CPWL_EditImpl*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit28SetAlignFormatVerticalCenterEv(%class.CPWL_Edit* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl* %3, i32 1, i1 zeroext true) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPWL_Edit12CanSelectAllEv(%class.CPWL_Edit* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.CPVT_WordRange, align 4
  %3 = alloca %struct.CPVT_WordRange, align 4
  %4 = bitcast %struct.CPVT_WordRange* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  call void @_ZNK9CPWL_Edit18GetSelectWordRangeEv(%struct.CPVT_WordRange* nonnull sret %2, %class.CPWL_Edit* %0)
  %5 = bitcast %struct.CPVT_WordRange* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %6, align 8
  call void @_ZNK13CPWL_EditImpl17GetWholeWordRangeEv(%struct.CPVT_WordRange* nonnull sret %3, %class.CPWL_EditImpl* %7) #11
  %8 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %43

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %43

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %43

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %2, i64 0, i32 1, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %3, i64 0, i32 1, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %39, %41
  br label %43

43:                                               ; preds = %1, %13, %19, %25, %31, %37
  %44 = phi i1 [ true, %19 ], [ true, %31 ], [ true, %25 ], [ %42, %37 ], [ true, %13 ], [ true, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPWL_Edit18GetSelectWordRangeEv(%struct.CPVT_WordRange* noalias nocapture sret, %class.CPWL_Edit* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  %5 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %4) #11
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.CPVT_WordRange* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 -1, i64 24, i1 false) #11
  br label %47

8:                                                ; preds = %2
  %9 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  %10 = tail call i64 @_ZNK13CPWL_EditImpl12GetSelectionEv(%class.CPWL_EditImpl* %9) #11
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  %15 = tail call { i64, i32 } @_ZNK13CPWL_EditImpl20WordIndexToWordPlaceEi(%class.CPWL_EditImpl* %14, i32 %11) #11
  %16 = extractvalue { i64, i32 } %15, 0
  %17 = extractvalue { i64, i32 } %15, 1
  %18 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  %19 = tail call { i64, i32 } @_ZNK13CPWL_EditImpl20WordIndexToWordPlaceEi(%class.CPWL_EditImpl* %18, i32 %13) #11
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  %22 = bitcast %struct.CPVT_WordRange* %0 to i8*
  %23 = bitcast %struct.CPVT_WordRange* %0 to i64*
  store i64 %16, i64* %23, align 4
  %24 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 0, i32 2
  store i32 %17, i32* %24, align 4
  %25 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1
  %26 = bitcast %struct.CPVT_WordPlace* %25 to i8*
  %27 = bitcast %struct.CPVT_WordPlace* %25 to i64*
  store i64 %20, i64* %27, align 4
  %28 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 2
  store i32 %21, i32* %28, align 4
  %29 = trunc i64 %16 to i32
  %30 = getelementptr inbounds %struct.CPVT_WordPlace, %struct.CPVT_WordPlace* %25, i64 0, i32 0
  %31 = trunc i64 %20 to i32
  %32 = icmp eq i32 %29, %31
  %33 = lshr i64 %16, 32
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %20, 32
  %36 = trunc i64 %35 to i32
  br i1 %32, label %39, label %37

37:                                               ; preds = %8
  %38 = icmp sgt i32 %29, %31
  br i1 %38, label %45, label %47

39:                                               ; preds = %8
  %40 = icmp eq i32 %34, %36
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = icmp sgt i32 %34, %36
  br i1 %42, label %45, label %47

43:                                               ; preds = %39
  %44 = icmp sgt i32 %17, %21
  br i1 %44, label %45, label %47

45:                                               ; preds = %37, %43, %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %26, i64 12, i1 false) #11
  store i32 %29, i32* %30, align 4
  %46 = getelementptr inbounds %struct.CPVT_WordRange, %struct.CPVT_WordRange* %0, i64 0, i32 1, i32 1
  store i32 %34, i32* %46, align 4
  store i32 %17, i32* %28, align 4
  br label %47

47:                                               ; preds = %45, %43, %41, %37, %6
  ret void
}

declare void @_ZNK13CPWL_EditImpl17GetWholeWordRangeEv(%struct.CPVT_WordRange* sret, %class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPWL_Edit7CanCopyEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %2, i32 2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ false, %1 ], [ %7, %4 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPWL_Edit6CanCutEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %2, i32 2) #11
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %6) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  %10 = xor i1 %9, true
  br label %11

11:                                               ; preds = %1, %8, %4
  %12 = phi i1 [ false, %4 ], [ %10, %8 ], [ false, %1 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit7CutTextEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %2, i32 2) #11
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %6) #11
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %12 = tail call zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl* %11) #11
  br label %13

13:                                               ; preds = %8, %1, %4, %10
  ret void
}

declare zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit9OnCreatedEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 13
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  tail call void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl* %6, float %4) #11
  %7 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %8 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  %9 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %8, align 8
  tail call void @_ZN13CPWL_EditImpl10SetFontMapEP12IPVT_FontMap(%class.CPWL_EditImpl* %7, %class.IPVT_FontMap* %9) #11
  %10 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  tail call void @_ZN13CPWL_EditImpl9SetNotifyEP9CPWL_Edit(%class.CPWL_EditImpl* %10, %class.CPWL_Edit* %0) #11
  %11 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  tail call void @_ZN13CPWL_EditImpl10InitializeEv(%class.CPWL_EditImpl* %11) #11
  %12 = tail call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %2) #11
  %13 = icmp eq %class.CPWL_ScrollBar* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = bitcast %class.CPWL_ScrollBar* %12 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_Wnd10RemoveFlagEj(%class.CPWL_Wnd* nonnull %15, i32 4194304) #11
  tail call void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd* nonnull %15, i32 255) #11
  br label %16

16:                                               ; preds = %1, %14
  tail call void @_ZN9CPWL_Edit14SetParamByFlagEv(%class.CPWL_Edit* %0)
  %17 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %2) #11
  %18 = extractvalue { <2 x float>, <2 x float> } %17, 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 1
  %20 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4
  %21 = bitcast %class.CFX_FloatRect* %20 to <2 x float>*
  store <2 x float> %18, <2 x float>* %21, align 8
  %22 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4, i32 2
  %23 = bitcast float* %22 to <2 x float>*
  store <2 x float> %19, <2 x float>* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit11SetFontSizeEf(%class.CPWL_Edit* nocapture readonly, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl* %4, float %1) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl10SetFontMapEP12IPVT_FontMap(%class.CPWL_EditImpl*, %class.IPVT_FontMap*) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl9SetNotifyEP9CPWL_Edit(%class.CPWL_EditImpl*, %class.CPWL_Edit*) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl10InitializeEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare void @_ZN8CPWL_Wnd10RemoveFlagEj(%class.CPWL_Wnd*, i32) local_unnamed_addr #1

declare void @_ZN8CPWL_Wnd15SetTransparencyEi(%class.CPWL_Wnd*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit14SetParamByFlagEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %6 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %7 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 8) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %9, align 8
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentHEib(%class.CPWL_EditImpl* %10, i32 2, i1 zeroext false) #11
  br label %17

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 16) #11
  %13 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %13, align 8
  br i1 %12, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentHEib(%class.CPWL_EditImpl* %14, i32 1, i1 zeroext false) #11
  br label %17

16:                                               ; preds = %11
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentHEib(%class.CPWL_EditImpl* %14, i32 0, i1 zeroext false) #11
  br label %17

17:                                               ; preds = %15, %16, %8
  %18 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 128) #11
  %19 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %21 = zext i1 %18 to i32
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl* %20, i32 %21, i1 zeroext false) #11
  %22 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 2) #11
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  tail call void @_ZN13CPWL_EditImpl15SetPasswordCharEtb(%class.CPWL_EditImpl* %24, i16 zeroext 42, i1 zeroext false) #11
  br label %25

25:                                               ; preds = %23, %17
  %26 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %27 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 1) #11
  tail call void @_ZN13CPWL_EditImpl12SetMultiLineEbb(%class.CPWL_EditImpl* %26, i1 zeroext %27, i1 zeroext false) #11
  %28 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %29 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 1024) #11
  tail call void @_ZN13CPWL_EditImpl13SetAutoReturnEbb(%class.CPWL_EditImpl* %28, i1 zeroext %29, i1 zeroext false) #11
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %31 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 8388608) #11
  tail call void @_ZN13CPWL_EditImpl15SetAutoFontSizeEbb(%class.CPWL_EditImpl* %30, i1 zeroext %31, i1 zeroext false) #11
  %32 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %33 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 512) #11
  tail call void @_ZN13CPWL_EditImpl13SetAutoScrollEbb(%class.CPWL_EditImpl* %32, i1 zeroext %33, i1 zeroext false) #11
  %34 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %35 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 2048) #11
  tail call void @_ZN13CPWL_EditImpl10EnableUndoEb(%class.CPWL_EditImpl* %34, i1 zeroext %35) #11
  %36 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 16384) #11
  br i1 %36, label %37, label %41

37:                                               ; preds = %25
  %38 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #11
  %39 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 0, i64 16, i1 false)
  call void @_ZN8CPWL_Wnd11SetClipRectERK13CFX_FloatRect(%class.CPWL_Wnd* %6, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #11
  %40 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  call void @_ZN13CPWL_EditImpl15SetTextOverflowEbb(%class.CPWL_EditImpl* %40, i1 zeroext true, i1 zeroext false) #11
  br label %87

41:                                               ; preds = %25
  %42 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 6, i32 0
  %43 = load %class.CPWL_Caret*, %class.CPWL_Caret** %42, align 8
  %44 = icmp eq %class.CPWL_Caret* %43, null
  br i1 %44, label %87, label %45

45:                                               ; preds = %41
  %46 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #11
  %47 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %48 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -1, i64 16, i1 false)
  %49 = tail call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %6) #11
  %50 = tail call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %6) #11
  %51 = add nsw i32 %50, %49
  %52 = sitofp i32 %51 to float
  %53 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #11
  %54 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %6) #11
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %56 = extractvalue { <2 x float>, <2 x float> } %54, 0
  store <2 x float> %56, <2 x float>* %55, align 8
  %57 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %58 = extractvalue { <2 x float>, <2 x float> } %54, 1
  store <2 x float> %58, <2 x float>* %57, align 8
  %59 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %47, float %52, float %52) #11
  %60 = extractvalue { <2 x float>, <2 x float> } %59, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #11
  %61 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %6) #11
  %62 = icmp eq %class.CPWL_ScrollBar* %61, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %45
  %64 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %61, i64 0, i32 0, i32 10
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %63
  %68 = extractelement <2 x float> %60, i32 0
  %69 = fadd float %68, -1.200000e+01
  %70 = insertelement <2 x float> %60, float %69, i32 0
  br label %71

71:                                               ; preds = %45, %63, %67
  %72 = phi <2 x float> [ %70, %67 ], [ %60, %63 ], [ %60, %45 ]
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %74 = extractvalue { <2 x float>, <2 x float> } %59, 0
  store <2 x float> %74, <2 x float>* %73, align 8
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %72, <2 x float>* %75, align 8
  %76 = extractelement <2 x float> %74, i32 0
  %77 = extractelement <2 x float> %72, i32 0
  %78 = fcmp ult float %76, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %71
  %80 = extractelement <2 x float> %72, i32 1
  %81 = extractelement <2 x float> %74, i32 1
  %82 = fcmp ult float %81, %80
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %5, float 1.000000e+00, float 1.000000e+00) #11
  call void @_ZN13CFX_FloatRect9NormalizeEv(%class.CFX_FloatRect* nonnull %5) #11
  br label %84

84:                                               ; preds = %79, %71, %83
  %85 = bitcast %class.CPWL_Caret** %42 to %class.CPWL_Wnd**
  %86 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %85, align 8
  call void @_ZN8CPWL_Wnd11SetClipRectERK13CFX_FloatRect(%class.CPWL_Wnd* %86, %class.CFX_FloatRect* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #11
  br label %87

87:                                               ; preds = %41, %84, %37
  ret void
}

declare void @_ZN13CPWL_EditImpl13SetAlignmentHEib(%class.CPWL_EditImpl*, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl15SetPasswordCharEtb(%class.CPWL_EditImpl*, i16 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl12SetMultiLineEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl13SetAutoReturnEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl15SetAutoFontSizeEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl13SetAutoScrollEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl10EnableUndoEb(%class.CPWL_EditImpl*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN13CPWL_EditImpl15SetTextOverflowEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Edit*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %class.CFX_GraphStateData, align 8
  %7 = alloca [2 x float], align 4
  %8 = alloca %class.CFX_PathData, align 8
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %struct.CFX_Color, align 4
  %12 = alloca i16, align 2
  %13 = bitcast i16* %12 to %struct.CFX_FillRenderOptions*
  %14 = alloca %class.CFX_FloatRect, align 8
  %15 = alloca %struct.CPVT_WordRange, align 4
  %16 = alloca %struct.CFX_Color, align 4
  %17 = alloca %class.CFX_PTemplate, align 4
  %18 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_Wnd18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd* %18, %class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2) #11
  %19 = bitcast { <2 x float>, <2 x float> }* %5 to %class.CFX_FloatRect*
  %20 = tail call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %18) #11
  %21 = tail call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %18) #11
  %22 = add nsw i32 %21, %20
  %23 = sitofp i32 %22 to float
  %24 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = tail call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %18) #11
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %27 = extractvalue { <2 x float>, <2 x float> } %25, 0
  store <2 x float> %27, <2 x float>* %26, align 8
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %29 = extractvalue { <2 x float>, <2 x float> } %25, 1
  store <2 x float> %29, <2 x float>* %28, align 8
  %30 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %19, float %23, float %23) #11
  %31 = extractvalue { <2 x float>, <2 x float> } %30, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  %32 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %18) #11
  %33 = icmp eq %class.CPWL_ScrollBar* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %3
  %35 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %32, i64 0, i32 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = extractelement <2 x float> %31, i32 0
  %40 = fadd float %39, -1.200000e+01
  %41 = insertelement <2 x float> %31, float %40, i32 0
  br label %42

42:                                               ; preds = %3, %34, %38
  %43 = phi <2 x float> [ %41, %38 ], [ %31, %34 ], [ %31, %3 ]
  %44 = extractvalue { <2 x float>, <2 x float> } %30, 0
  %45 = call i32 @_ZNK8CPWL_Wnd14GetBorderStyleEv(%class.CPWL_Wnd* %18) #11
  %46 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %47 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %46, align 8
  %48 = call i32 @_ZNK13CPWL_EditImpl12GetCharArrayEv(%class.CPWL_EditImpl* %47) #11
  %49 = icmp sgt i32 %48, 0
  %50 = icmp ult i32 %45, 2
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %117

52:                                               ; preds = %42
  %53 = add nsw i32 %48, -1
  %54 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %53, i32 2) #11
  %55 = extractvalue { i32, i1 } %54, 1
  br i1 %55, label %117, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %57) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.113" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.113" }* @__const._ZN9CPWL_Edit18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix.gsd, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %6) #11
  %58 = call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %18) #11
  %59 = sitofp i32 %58 to float
  %60 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %6, i64 0, i32 4
  store float %59, float* %60, align 4
  %61 = icmp eq i32 %45, 1
  br i1 %61, label %62, label %81

62:                                               ; preds = %56
  %63 = bitcast [2 x float]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 0, i64 0
  %65 = call dereferenceable(12) %struct.CPWL_Dash* @_ZNK8CPWL_Wnd13GetBorderDashEv(%class.CPWL_Wnd* %18) #11
  %66 = getelementptr inbounds %struct.CPWL_Dash, %struct.CPWL_Dash* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sitofp i32 %67 to float
  store float %68, float* %64, align 4
  %69 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 0, i64 1
  %70 = call dereferenceable(12) %struct.CPWL_Dash* @_ZNK8CPWL_Wnd13GetBorderDashEv(%class.CPWL_Wnd* %18) #11
  %71 = getelementptr inbounds %struct.CPWL_Dash, %struct.CPWL_Dash* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sitofp i32 %72 to float
  store float %73, float* %69, align 4
  %74 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %6, i64 0, i32 5
  %75 = getelementptr inbounds [2 x float], [2 x float]* %7, i64 0, i64 2
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.113"* %74, float* nonnull %64, float* %75) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  %76 = call dereferenceable(12) %struct.CPWL_Dash* @_ZNK8CPWL_Wnd13GetBorderDashEv(%class.CPWL_Wnd* %18) #11
  %77 = getelementptr inbounds %struct.CPWL_Dash, %struct.CPWL_Dash* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = sitofp i32 %78 to float
  %80 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %6, i64 0, i32 2
  store float %79, float* %80, align 4
  br label %81

81:                                               ; preds = %62, %56
  %82 = extractelement <2 x float> %43, i32 0
  %83 = extractelement <2 x float> %44, i32 0
  %84 = fsub float %82, %83
  %85 = sitofp i32 %48 to float
  %86 = fdiv float %84, %85
  %87 = bitcast %class.CFX_PathData* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %88 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %8, i64 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %8, i64 0, i32 0, i32 0, i32 1
  %90 = bitcast %class.CFX_PathData* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %8) #11
  %91 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %92 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  %93 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  %94 = extractelement <2 x float> %44, i32 1
  store float 0.000000e+00, float* %92, align 4
  store float %94, float* %93, align 4
  %95 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  %96 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  %97 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %98 = extractelement <2 x float> %43, i32 1
  store float 0.000000e+00, float* %96, align 4
  store float %98, float* %97, align 4
  %99 = icmp sgt i32 %53, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %104, %81
  %101 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %88, align 8
  %102 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %89, align 8
  %103 = icmp eq %class.FX_PATHPOINT* %101, %102
  br i1 %103, label %116, label %111

104:                                              ; preds = %81, %104
  %105 = phi i32 [ %106, %104 ], [ 0, %81 ]
  %106 = add nuw nsw i32 %105, 1
  %107 = sitofp i32 %106 to float
  %108 = fmul float %86, %107
  %109 = fadd float %83, %108
  store float %109, float* %92, align 4
  store float %109, float* %96, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, i8 zeroext 2) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, i8 zeroext 0) #11
  %110 = icmp eq i32 %106, %53
  br i1 %110, label %100, label %104

111:                                              ; preds = %100
  %112 = bitcast %struct.CFX_Color* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %112) #11
  call void @_ZNK8CPWL_Wnd14GetBorderColorEv(%struct.CFX_Color* nonnull sret %11, %class.CPWL_Wnd* %18) #11
  %113 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* nonnull %11, i32 255) #11
  %114 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %114) #11
  store i16 1, i16* %12, align 2
  %115 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %1, %class.CFX_PathData* nonnull %8, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* nonnull %6, i32 0, i32 %113, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %112) #11
  br label %116

116:                                              ; preds = %111, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %57) #11
  br label %117

117:                                              ; preds = %52, %42, %116
  %118 = bitcast %class.CFX_FloatRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #11
  %119 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %14, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 16, i1 false) #11
  %120 = bitcast %struct.CPVT_WordRange* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #11
  %121 = bitcast %struct.CPVT_WordRange* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %121, i8 -86, i64 24, i1 false)
  %122 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %46, align 8
  call void @_ZNK13CPWL_EditImpl19GetVisibleWordRangeEv(%struct.CPVT_WordRange* nonnull sret %15, %class.CPWL_EditImpl* %122) #11
  %123 = call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %18, i32 16384) #11
  br i1 %123, label %153, label %124

124:                                              ; preds = %117
  %125 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %126 = call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %18) #11
  %127 = call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %18) #11
  %128 = add nsw i32 %127, %126
  %129 = sitofp i32 %128 to float
  %130 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #11
  %131 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %18) #11
  %132 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %133 = extractvalue { <2 x float>, <2 x float> } %131, 0
  store <2 x float> %133, <2 x float>* %132, align 8
  %134 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %135 = extractvalue { <2 x float>, <2 x float> } %131, 1
  store <2 x float> %135, <2 x float>* %134, align 8
  %136 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %125, float %129, float %129) #11
  %137 = extractvalue { <2 x float>, <2 x float> } %136, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #11
  %138 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %18) #11
  %139 = icmp eq %class.CPWL_ScrollBar* %138, null
  br i1 %139, label %148, label %140

140:                                              ; preds = %124
  %141 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %138, i64 0, i32 0, i32 10
  %142 = load i8, i8* %141, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %140
  %145 = extractelement <2 x float> %137, i32 0
  %146 = fadd float %145, -1.200000e+01
  %147 = insertelement <2 x float> %137, float %146, i32 0
  br label %148

148:                                              ; preds = %124, %140, %144
  %149 = phi <2 x float> [ %147, %144 ], [ %137, %140 ], [ %137, %124 ]
  %150 = extractvalue { <2 x float>, <2 x float> } %136, 0
  %151 = bitcast %class.CFX_FloatRect* %14 to <2 x float>*
  store <2 x float> %150, <2 x float>* %151, align 8
  %152 = bitcast float* %119 to <2 x float>*
  store <2 x float> %149, <2 x float>* %152, align 8
  br label %153

153:                                              ; preds = %148, %117
  %154 = phi %struct.CPVT_WordRange* [ null, %117 ], [ %15, %148 ]
  %155 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %46, align 8
  %156 = bitcast %struct.CFX_Color* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %156) #11
  call void @_ZNK8CPWL_Wnd12GetTextColorEv(%struct.CFX_Color* nonnull sret %16, %class.CPWL_Wnd* %18) #11
  %157 = call i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd* %18) #11
  %158 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* nonnull %16, i32 %157) #11
  %159 = bitcast %class.CFX_PTemplate* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #11
  %160 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 0
  store float 0.000000e+00, float* %160, align 4
  %161 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 1
  store float 0.000000e+00, float* %161, align 4
  %162 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  %163 = load %class.IPWL_SystemHandler*, %class.IPWL_SystemHandler** %162, align 8
  %164 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 8, i32 0
  %165 = load %class.CFFL_FormFiller*, %class.CFFL_FormFiller** %164, align 8
  call void @_ZN13CPWL_EditImpl8DrawEditEP16CFX_RenderDeviceRK10CFX_MatrixPS_jRK13CFX_FloatRectRK13CFX_PTemplateIfEPK14CPVT_WordRangeP18IPWL_SystemHandlerP15CFFL_FormFiller(%class.CFX_RenderDevice* %1, %class.CFX_Matrix* dereferenceable(24) %2, %class.CPWL_EditImpl* %155, i32 %158, %class.CFX_FloatRect* nonnull dereferenceable(16) %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %17, %struct.CPVT_WordRange* %154, %class.IPWL_SystemHandler* %163, %class.CFFL_FormFiller* %165) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %156) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #11
  ret void
}

declare void @_ZN8CPWL_Wnd18DrawThisAppearanceEP16CFX_RenderDeviceRK10CFX_Matrix(%class.CPWL_Wnd*, %class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #1

declare i32 @_ZNK8CPWL_Wnd14GetBorderStyleEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare i32 @_ZNK13CPWL_EditImpl12GetCharArrayEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData*) unnamed_addr #1

declare dereferenceable(12) %struct.CPWL_Dash* @_ZNK8CPWL_Wnd13GetBorderDashEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #1

declare void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #1

declare void @_ZNK8CPWL_Wnd14GetBorderColorEv(%struct.CFX_Color* sret, %class.CPWL_Wnd*) local_unnamed_addr #1

declare i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData*) unnamed_addr #2

declare void @_ZNK13CPWL_EditImpl19GetVisibleWordRangeEv(%struct.CPVT_WordRange* sret, %class.CPWL_EditImpl*) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl8DrawEditEP16CFX_RenderDeviceRK10CFX_MatrixPS_jRK13CFX_FloatRectRK13CFX_PTemplateIfEPK14CPVT_WordRangeP18IPWL_SystemHandlerP15CFFL_FormFiller(%class.CFX_RenderDevice*, %class.CFX_Matrix* dereferenceable(24), %class.CPWL_EditImpl*, i32, %class.CFX_FloatRect* dereferenceable(16), %class.CFX_PTemplate* dereferenceable(8), %struct.CPVT_WordRange*, %class.IPWL_SystemHandler*, %class.CFFL_FormFiller*) local_unnamed_addr #1

declare void @_ZNK8CPWL_Wnd12GetTextColorEv(%struct.CFX_Color* sret, %class.CPWL_Wnd*) local_unnamed_addr #1

declare i32 @_ZN8CPWL_Wnd15GetTransparencyEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit10OnSetFocusEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_PTemplate, align 4
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %"class.fxcrt::ObservedPtr.100", align 8
  %5 = bitcast %"class.fxcrt::ObservedPtr.100"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store %class.CPWL_Edit* %0, %class.CPWL_Edit** %7, align 8
  %8 = icmp eq %class.CPWL_Edit* %0, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %11, %"class.fxcrt::Observable::ObserverIface"* nonnull %10) #11
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.CFX_PTemplate* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %15 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  store float 0.000000e+00, float* %14, align 4
  store float 0.000000e+00, float* %15, align 4
  %16 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float 0.000000e+00, float* %17, align 4
  store float 0.000000e+00, float* %18, align 4
  call void @_ZNK9CPWL_Edit12GetCaretInfoEP13CFX_PTemplateIfES2_(%class.CPWL_Edit* %0, %class.CFX_PTemplate* nonnull %2, %class.CFX_PTemplate* nonnull %3) #11
  %19 = call zeroext i1 @_ZN9CPWL_Edit8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Edit* %0, i1 zeroext true, %class.CFX_PTemplate* nonnull dereferenceable(8) %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  %20 = load %class.CPWL_Edit*, %class.CPWL_Edit** %7, align 8
  %21 = icmp eq %class.CPWL_Edit* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %12
  %23 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %24 = call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %23) #11
  br i1 %24, label %39, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 5, i32 0
  %27 = load %"class.CPWL_Wnd::FocusHandlerIface"*, %"class.CPWL_Wnd::FocusHandlerIface"** %26, align 8
  %28 = icmp eq %"class.CPWL_Wnd::FocusHandlerIface"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.CPWL_Wnd::FocusHandlerIface"* %27 to void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)***
  %31 = load void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)**, void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)*, void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)** %31, i64 2
  %33 = load void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)*, void (%"class.CPWL_Wnd::FocusHandlerIface"*, %class.CPWL_Edit*)** %32, align 8
  call void %33(%"class.CPWL_Wnd::FocusHandlerIface"* nonnull %27, %class.CPWL_Edit* %0) #11
  %34 = load %class.CPWL_Edit*, %class.CPWL_Edit** %7, align 8
  %35 = icmp eq %class.CPWL_Edit* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 2
  store i8 1, i8* %37, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  br label %43

38:                                               ; preds = %29, %12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  br label %47

39:                                               ; preds = %22, %25
  %40 = load %class.CPWL_Edit*, %class.CPWL_Edit** %7, align 8
  %41 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 2
  store i8 1, i8* %41, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %42 = icmp eq %class.CPWL_Edit* %40, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %36, %39
  %44 = phi %class.CPWL_Edit* [ %34, %36 ], [ %40, %39 ]
  %45 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %44, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %4, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %45, %"class.fxcrt::Observable::ObserverIface"* nonnull %46) #11
  br label %47

47:                                               ; preds = %38, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12SetEditCaretEb(%class.CPWL_Edit*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  %7 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float 0.000000e+00, float* %6, align 4
  store float 0.000000e+00, float* %7, align 4
  %8 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %10 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float 0.000000e+00, float* %9, align 4
  store float 0.000000e+00, float* %10, align 4
  br i1 %1, label %11, label %12

11:                                               ; preds = %2
  call void @_ZNK9CPWL_Edit12GetCaretInfoEP13CFX_PTemplateIfES2_(%class.CPWL_Edit* %0, %class.CFX_PTemplate* nonnull %3, %class.CFX_PTemplate* nonnull %4)
  br label %12

12:                                               ; preds = %11, %2
  %13 = call zeroext i1 @_ZN9CPWL_Edit8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Edit* %0, i1 zeroext %1, %class.CFX_PTemplate* nonnull dereferenceable(8) %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit11OnKillFocusEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ObservedPtr.100", align 8
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = bitcast %"class.fxcrt::ObservedPtr.100"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %2, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %2, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store %class.CPWL_Edit* %0, %class.CPWL_Edit** %7, align 8
  %8 = icmp eq %class.CPWL_Edit* %0, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %11, %"class.fxcrt::Observable::ObserverIface"* nonnull %10) #11
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %14 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %13) #11
  %15 = icmp eq %class.CPWL_ScrollBar* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %14, i64 0, i32 0, i32 10
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = bitcast %class.CPWL_ScrollBar* %14 to %class.CPWL_Wnd*
  %22 = call zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd* nonnull %21, i1 zeroext false) #11
  %23 = load %class.CPWL_Edit*, %class.CPWL_Edit** %7, align 8
  %24 = icmp eq %class.CPWL_Edit* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 4
  %27 = call zeroext i1 @_ZN8CPWL_Wnd4MoveERK13CFX_FloatRectbb(%class.CPWL_Wnd* %13, %class.CFX_FloatRect* dereferenceable(16) %26, i1 zeroext true, i1 zeroext true) #11
  br i1 %27, label %28, label %45

28:                                               ; preds = %16, %12, %25
  %29 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %29, align 8
  call void @_ZN13CPWL_EditImpl10SelectNoneEv(%class.CPWL_EditImpl* %30) #11
  %31 = load %class.CPWL_Edit*, %class.CPWL_Edit** %7, align 8
  %32 = icmp eq %class.CPWL_Edit* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  store float 0.000000e+00, float* %35, align 4
  %36 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float 0.000000e+00, float* %36, align 4
  %37 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float 0.000000e+00, float* %39, align 4
  %40 = call zeroext i1 @_ZN9CPWL_Edit8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Edit* %0, i1 zeroext false, %class.CFX_PTemplate* nonnull dereferenceable(8) %3, %class.CFX_PTemplate* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br i1 %40, label %41, label %45

41:                                               ; preds = %33
  %42 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 3
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 2
  store i8 0, i8* %43, align 4
  br label %45

44:                                               ; preds = %20, %28
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  br label %51

45:                                               ; preds = %33, %25, %41
  %46 = load %class.CPWL_Edit*, %class.CPWL_Edit** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %47 = icmp eq %class.CPWL_Edit* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %46, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %2, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %49, %"class.fxcrt::Observable::ObserverIface"* nonnull %50) #11
  br label %51

51:                                               ; preds = %44, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

declare zeroext i1 @_ZN8CPWL_Wnd10SetVisibleEb(%class.CPWL_Wnd*, i1 zeroext) unnamed_addr #1

declare void @_ZN13CPWL_EditImpl10SelectNoneEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Edit*, i1 zeroext, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::ObservedPtr.100", align 8
  %6 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 6, i32 0
  %7 = load %class.CPWL_Caret*, %class.CPWL_Caret** %6, align 8
  %8 = icmp eq %class.CPWL_Caret* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %4
  %10 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %11 = tail call zeroext i1 @_ZNK8CPWL_Wnd9IsFocusedEv(%class.CPWL_Wnd* %10) #11
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %13, align 8
  %15 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %14) #11
  br i1 %15, label %16, label %17

16:                                               ; preds = %12, %9
  br label %17

17:                                               ; preds = %16, %12
  %18 = phi i1 [ false, %16 ], [ %1, %12 ]
  %19 = bitcast %"class.fxcrt::ObservedPtr.100"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  store %class.CPWL_Edit* %0, %class.CPWL_Edit** %21, align 8
  %22 = icmp eq %class.CPWL_Edit* %0, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %25, %"class.fxcrt::Observable::ObserverIface"* nonnull %24) #11
  br label %26

26:                                               ; preds = %17, %23
  %27 = load %class.CPWL_Caret*, %class.CPWL_Caret** %6, align 8
  call void @_ZN10CPWL_Caret8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Caret* %27, i1 zeroext %18, %class.CFX_PTemplate* dereferenceable(8) %2, %class.CFX_PTemplate* dereferenceable(8) %3) #11
  %28 = load %class.CPWL_Edit*, %class.CPWL_Edit** %21, align 8
  %29 = icmp ne %class.CPWL_Edit* %28, null
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %30 = icmp eq %class.CPWL_Edit* %28, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %28, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %5, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %32, %"class.fxcrt::Observable::ObserverIface"* nonnull %33) #11
  br label %34

34:                                               ; preds = %26, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  br label %35

35:                                               ; preds = %4, %34
  %36 = phi i1 [ %29, %34 ], [ true, %4 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12SetCharSpaceEf(%class.CPWL_Edit* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl12SetCharSpaceEf(%class.CPWL_EditImpl* %4, float %1) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl12SetCharSpaceEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #1

declare i64 @_ZNK13CPWL_EditImpl12GetSelectionEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare { i64, i32 } @_ZNK13CPWL_EditImpl20WordIndexToWordPlaceEi(%class.CPWL_EditImpl*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPWL_Edit10IsTextFullEv(%class.CPWL_Edit* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsTextFullEv(%class.CPWL_EditImpl* %3) #11
  ret i1 %4
}

declare zeroext i1 @_ZNK13CPWL_EditImpl10IsTextFullEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN9CPWL_Edit24GetCharArrayAutoFontSizeEPK9CPDF_FontRK13CFX_FloatRecti(%class.CPDF_Font*, %class.CFX_FloatRect* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %class.CPDF_Font* %0, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZNK9CPDF_Font14IsStandardFontEv(%class.CPDF_Font* nonnull %0) #11
  br i1 %6, label %38, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %9
  %17 = sitofp i32 %2 to float
  %18 = fdiv float %16, %17
  %19 = fmul float %18, 1.000000e+03
  %20 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %21, %23
  %25 = sitofp i32 %24 to float
  %26 = fdiv float %19, %25
  %27 = fsub float %15, %11
  %28 = fmul float %27, -1.000000e+03
  %29 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %30, %32
  %34 = sitofp i32 %33 to float
  %35 = fdiv float %28, %34
  %36 = fcmp olt float %26, %35
  %37 = select i1 %36, float %26, float %35
  br label %38

38:                                               ; preds = %5, %3, %7
  %39 = phi float [ %37, %7 ], [ 0.000000e+00, %3 ], [ 0.000000e+00, %5 ]
  ret float %39
}

declare zeroext i1 @_ZNK9CPDF_Font14IsStandardFontEv(%class.CPDF_Font*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12SetCharArrayEi(%class.CPWL_Edit*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.fxcrt::RetainPtr.239", align 8
  %5 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %6 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %5, i32 256) #11
  %7 = xor i1 %6, true
  %8 = icmp slt i32 %1, 1
  %9 = or i1 %8, %7
  br i1 %9, label %103, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  tail call void @_ZN13CPWL_EditImpl12SetCharArrayEi(%class.CPWL_EditImpl* %12, i32 %1) #11
  %13 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  tail call void @_ZN13CPWL_EditImpl15SetTextOverflowEbb(%class.CPWL_EditImpl* %13, i1 zeroext true, i1 zeroext true) #11
  %14 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %5, i32 8388608) #11
  br i1 %14, label %15, label %103

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  %17 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %16, align 8
  %18 = icmp eq %class.IPVT_FontMap* %17, null
  br i1 %18, label %103, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.fxcrt::RetainPtr.239"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = bitcast %class.IPVT_FontMap* %17 to void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)***
  %22 = load void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)**, void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)** %22, i64 2
  %24 = load void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)*, void (%"class.fxcrt::RetainPtr.239"*, %class.IPVT_FontMap*, i32)** %23, align 8
  call void %24(%"class.fxcrt::RetainPtr.239"* nonnull sret %4, %class.IPVT_FontMap* nonnull %17, i32 0) #11
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.239", %"class.fxcrt::RetainPtr.239"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Font*, %class.CPDF_Font** %25, align 8
  %27 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %28 = call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %5) #11
  %29 = call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %5) #11
  %30 = add nsw i32 %29, %28
  %31 = sitofp i32 %30 to float
  %32 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #11
  %33 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %5) #11
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 0
  store <2 x float> %35, <2 x float>* %34, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %37 = extractvalue { <2 x float>, <2 x float> } %33, 1
  store <2 x float> %37, <2 x float>* %36, align 8
  %38 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %27, float %31, float %31) #11
  %39 = extractvalue { <2 x float>, <2 x float> } %38, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #11
  %40 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %5) #11
  %41 = icmp eq %class.CPWL_ScrollBar* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %19
  %43 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %40, i64 0, i32 0, i32 10
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = extractelement <2 x float> %39, i32 0
  %48 = fadd float %47, -1.200000e+01
  %49 = insertelement <2 x float> %39, float %48, i32 0
  br label %50

50:                                               ; preds = %19, %42, %46
  %51 = phi <2 x float> [ %49, %46 ], [ %39, %42 ], [ %39, %19 ]
  %52 = extractvalue { <2 x float>, <2 x float> } %38, 0
  %53 = icmp eq %class.CPDF_Font* %26, null
  br i1 %53, label %83, label %54

54:                                               ; preds = %50
  %55 = call zeroext i1 @_ZNK9CPDF_Font14IsStandardFontEv(%class.CPDF_Font* nonnull %26) #11
  br i1 %55, label %83, label %56

56:                                               ; preds = %54
  %57 = extractelement <2 x float> %52, i32 0
  %58 = extractelement <2 x float> %52, i32 1
  %59 = extractelement <2 x float> %51, i32 0
  %60 = extractelement <2 x float> %51, i32 1
  %61 = fsub float %59, %57
  %62 = sitofp i32 %1 to float
  %63 = fdiv float %61, %62
  %64 = fmul float %63, 1.000000e+03
  %65 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 15, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 15, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = sub nsw i32 %66, %68
  %70 = sitofp i32 %69 to float
  %71 = fdiv float %64, %70
  %72 = fsub float %60, %58
  %73 = fmul float %72, -1.000000e+03
  %74 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 15, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %26, i64 0, i32 15, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = sub nsw i32 %75, %77
  %79 = sitofp i32 %78 to float
  %80 = fdiv float %73, %79
  %81 = fcmp olt float %71, %80
  %82 = select i1 %81, float %71, float %80
  br label %83

83:                                               ; preds = %50, %54, %56
  %84 = phi float [ %82, %56 ], [ 0.000000e+00, %50 ], [ 0.000000e+00, %54 ]
  %85 = load %class.CPDF_Font*, %class.CPDF_Font** %25, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %25, align 8
  %86 = icmp eq %class.CPDF_Font* %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %85, i64 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i64 %89, -1
  store i64 %90, i64* %88, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %87
  %93 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %85, i64 0, i32 0
  %94 = bitcast %class.CPDF_Font* %85 to void (%"class.fxcrt::Retainable"*)***
  %95 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, i64 1
  %97 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %96, align 8
  call void %97(%"class.fxcrt::Retainable"* nonnull %93) #11
  br label %98

98:                                               ; preds = %83, %87, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %99 = fcmp ugt float %84, 0.000000e+00
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  call void @_ZN13CPWL_EditImpl15SetAutoFontSizeEbb(%class.CPWL_EditImpl* %101, i1 zeroext false, i1 zeroext true) #11
  %102 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  call void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl* %102, float %84) #11
  br label %103

103:                                              ; preds = %15, %98, %100, %10, %2
  ret void
}

declare void @_ZN13CPWL_EditImpl12SetCharArrayEi(%class.CPWL_EditImpl*, i32) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12SetLimitCharEi(%class.CPWL_Edit* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl12SetLimitCharEi(%class.CPWL_EditImpl* %4, i32 %1) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl12SetLimitCharEi(%class.CPWL_EditImpl*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK9CPWL_Edit12GetFocusRectEv(%class.CPWL_Edit* nocapture readnone) unnamed_addr #5 align 2 {
  ret { <2 x float>, <2 x float> } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPWL_Edit19IsVScrollBarVisibleEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %2) #11
  %4 = icmp eq %class.CPWL_ScrollBar* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %3, i64 0, i32 0, i32 10
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit9OnKeyDownEtj(%class.CPWL_Edit*, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = alloca %"class.fxcrt::ObservedPtr.245", align 8
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %63

10:                                               ; preds = %3
  %11 = icmp eq i16 %1, 46
  br i1 %11, label %12, label %59

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 7, i32 0
  %14 = load %class.IPWL_FillerNotify*, %class.IPWL_FillerNotify** %13, align 8
  %15 = icmp eq %class.IPWL_FillerNotify* %14, null
  br i1 %15, label %59, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %18, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  %19 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %20, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  %21 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %22 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %21, align 8
  %23 = call i64 @_ZNK13CPWL_EditImpl12GetSelectionEv(%class.CPWL_EditImpl* %22) #11
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %24, %26
  %28 = add nsw i32 %24, 1
  %29 = select i1 %27, i32 %28, i32 %26
  %30 = bitcast %"class.fxcrt::ObservedPtr.245"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %6, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %33 = bitcast %class.CPWL_Wnd** %32 to %class.CPWL_Edit**
  store %class.CPWL_Edit* %0, %class.CPWL_Edit** %33, align 8
  %34 = icmp eq %class.CPWL_Edit* %0, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %6, i64 0, i32 0
  %37 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %37, %"class.fxcrt::Observable::ObserverIface"* nonnull %36) #11
  br label %38

38:                                               ; preds = %16, %35
  %39 = load %class.IPWL_FillerNotify*, %class.IPWL_FillerNotify** %13, align 8
  %40 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %40, align 8
  %42 = bitcast %class.IPWL_FillerNotify* %39 to i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)***
  %43 = load i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)**, i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)*** %42, align 8
  %44 = getelementptr inbounds i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)*, i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)** %43, i64 3
  %45 = load i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)*, i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)** %44, align 8
  %46 = call i16 %45(%class.IPWL_FillerNotify* %39, %"class.IPWL_SystemHandler::PerWindowData"* %41, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5, i32 %24, i32 %29, i1 zeroext true, i32 %2) #11
  %47 = trunc i16 %46 to i8
  %48 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %32, align 8
  %49 = icmp ne %class.CPWL_Wnd* %48, null
  %50 = icmp ne i8 %47, 0
  %51 = icmp ult i16 %46, 256
  %52 = and i1 %50, %49
  %53 = and i1 %51, %52
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %54 = icmp eq %class.CPWL_Wnd* %48, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %38
  %56 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %48, i64 0, i32 1
  %57 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %6, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %56, %"class.fxcrt::Observable::ObserverIface"* nonnull %57) #11
  br label %58

58:                                               ; preds = %38, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br i1 %53, label %59, label %63

59:                                               ; preds = %12, %58, %10
  %60 = call zeroext i1 @_ZN9CPWL_Edit17OnKeyDownInternalEtj(%class.CPWL_Edit* %0, i16 zeroext %1, i32 %2)
  %61 = call zeroext i1 @_ZN9CPWL_Edit17IsProceedtoOnCharEtj(i16 zeroext %1, i32 %2)
  %62 = or i1 %60, %61
  br label %63

63:                                               ; preds = %3, %58, %59
  %64 = phi i1 [ %62, %59 ], [ false, %58 ], [ true, %3 ]
  ret i1 %64
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK9CPWL_Edit12GetSelectionEv(%class.CPWL_Edit* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = tail call i64 @_ZNK13CPWL_EditImpl12GetSelectionEv(%class.CPWL_EditImpl* %3) #11
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI8CPWL_WndED2Ev(%"class.fxcrt::ObservedPtr.245"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 1
  %4 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %3, align 8
  %5 = icmp eq %class.CPWL_Wnd* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit17OnKeyDownInternalEtj(%class.CPWL_Edit*, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %66

7:                                                ; preds = %3
  %8 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %9 = tail call zeroext i1 @_ZN8CPWL_Wnd9OnKeyDownEtj(%class.CPWL_Wnd* %8, i16 zeroext %1, i32 %2) #11
  switch i16 %1, label %66 [
    i16 46, label %10
    i16 35, label %14
    i16 36, label %14
    i16 37, label %14
    i16 38, label %14
    i16 39, label %14
    i16 40, label %14
    i16 45, label %14
    i16 65, label %14
    i16 67, label %14
    i16 86, label %14
    i16 88, label %14
    i16 90, label %14
    i16 97, label %14
    i16 99, label %14
    i16 118, label %14
    i16 120, label %14
    i16 122, label %14
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  %13 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %12) #11
  br i1 %13, label %49, label %15

14:                                               ; preds = %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7, %7
  switch i16 %1, label %66 [
    i16 46, label %15
    i16 45, label %21
    i16 38, label %23
    i16 40, label %27
    i16 37, label %31
    i16 39, label %35
    i16 36, label %39
    i16 35, label %44
  ]

15:                                               ; preds = %10, %14
  %16 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %16, label %66, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %19 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %18, align 8
  %20 = tail call zeroext i1 @_ZN13CPWL_EditImpl6DeleteEv(%class.CPWL_EditImpl* %19) #11
  br label %66

21:                                               ; preds = %14
  %22 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  br label %66

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %25 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %24, align 8
  %26 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  tail call void @_ZN13CPWL_EditImpl7OnVK_UPEbb(%class.CPWL_EditImpl* %25, i1 zeroext %26, i1 zeroext false) #11
  br label %66

27:                                               ; preds = %14
  %28 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %29 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %28, align 8
  %30 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  tail call void @_ZN13CPWL_EditImpl9OnVK_DOWNEbb(%class.CPWL_EditImpl* %29, i1 zeroext %30, i1 zeroext false) #11
  br label %66

31:                                               ; preds = %14
  %32 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %33 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %32, align 8
  %34 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  tail call void @_ZN13CPWL_EditImpl9OnVK_LEFTEbb(%class.CPWL_EditImpl* %33, i1 zeroext %34, i1 zeroext false) #11
  br label %66

35:                                               ; preds = %14
  %36 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %37 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %36, align 8
  %38 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  tail call void @_ZN13CPWL_EditImpl10OnVK_RIGHTEbb(%class.CPWL_EditImpl* %37, i1 zeroext %38, i1 zeroext false) #11
  br label %66

39:                                               ; preds = %14
  %40 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %41 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %40, align 8
  %42 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  %43 = tail call zeroext i1 @_ZN8CPWL_Wnd13IsCTRLKeyDownEj(i32 %2) #11
  tail call void @_ZN13CPWL_EditImpl9OnVK_HOMEEbb(%class.CPWL_EditImpl* %41, i1 zeroext %42, i1 zeroext %43) #11
  br label %66

44:                                               ; preds = %14
  %45 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %46 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %45, align 8
  %47 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  %48 = tail call zeroext i1 @_ZN8CPWL_Wnd13IsCTRLKeyDownEj(i32 %2) #11
  tail call void @_ZN13CPWL_EditImpl8OnVK_ENDEbb(%class.CPWL_EditImpl* %46, i1 zeroext %47, i1 zeroext %48) #11
  br label %66

49:                                               ; preds = %10
  %50 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %52, label %66, label %53

53:                                               ; preds = %51
  %54 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  %55 = tail call zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl* %54) #11
  br label %66

56:                                               ; preds = %49
  %57 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %8, i32 2) #11
  br i1 %57, label %66, label %58

58:                                               ; preds = %56
  %59 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  %60 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %59) #11
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  %65 = tail call zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl* %64) #11
  br label %66

66:                                               ; preds = %21, %63, %61, %58, %56, %53, %51, %17, %15, %23, %27, %31, %35, %39, %44, %7, %14, %3
  %67 = phi i1 [ true, %3 ], [ true, %44 ], [ true, %39 ], [ true, %35 ], [ true, %31 ], [ true, %27 ], [ true, %23 ], [ false, %7 ], [ %9, %14 ], [ true, %15 ], [ true, %17 ], [ true, %21 ], [ true, %51 ], [ true, %53 ], [ true, %56 ], [ true, %58 ], [ true, %61 ], [ true, %63 ]
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit17IsProceedtoOnCharEtj(i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN8CPWL_Wnd21IsPlatformShortcutKeyEj(i32 %1) #11
  %4 = tail call zeroext i1 @_ZN8CPWL_Wnd12IsALTKeyDownEj(i32 %1) #11
  %5 = xor i1 %3, true
  %6 = or i1 %4, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  switch i16 %0, label %11 [
    i16 67, label %17
    i16 86, label %17
    i16 88, label %17
    i16 65, label %17
    i16 90, label %17
    i16 27, label %17
    i16 8, label %17
    i16 13, label %17
    i16 32, label %17
  ]

8:                                                ; preds = %2
  %9 = add i16 %0, -8
  %10 = icmp ult i16 %9, 25
  br i1 %10, label %12, label %11

11:                                               ; preds = %8, %7
  br label %17

12:                                               ; preds = %8
  %13 = zext i16 %9 to i25
  %14 = lshr i25 -16252895, %13
  %15 = and i25 %14, 1
  %16 = icmp ne i25 %15, 0
  ret i1 %16

17:                                               ; preds = %7, %7, %7, %7, %7, %7, %7, %7, %7, %11
  %18 = phi i1 [ false, %11 ], [ true, %7 ], [ true, %7 ], [ true, %7 ], [ true, %7 ], [ true, %7 ], [ true, %7 ], [ true, %7 ], [ true, %7 ], [ true, %7 ]
  ret i1 %18
}

declare zeroext i1 @_ZN8CPWL_Wnd21IsPlatformShortcutKeyEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit6OnCharEtj(%class.CPWL_Edit*, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::ObservedPtr.245", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %84

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN8CPWL_Wnd13IsCTRLKeyDownEj(i32 %2) #11
  br i1 %11, label %66, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 7, i32 0
  %14 = load %class.IPWL_FillerNotify*, %class.IPWL_FillerNotify** %13, align 8
  %15 = icmp eq %class.IPWL_FillerNotify* %14, null
  br i1 %15, label %66, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %18, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  %19 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %19, align 8
  %21 = call i64 @_ZNK13CPWL_EditImpl12GetSelectionEv(%class.CPWL_EditImpl* %20) #11
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  switch i16 %1, label %29 [
    i16 8, label %25
    i16 13, label %32
  ]

25:                                               ; preds = %16
  %26 = icmp eq i32 %22, %24
  %27 = zext i1 %26 to i32
  %28 = sub i32 %22, %27
  br label %32

29:                                               ; preds = %16
  %30 = zext i16 %1 to i32
  %31 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %4, i32 signext %30) #11
  br label %32

32:                                               ; preds = %25, %29, %16
  %33 = phi i32 [ %22, %29 ], [ %22, %16 ], [ %28, %25 ]
  %34 = bitcast %"class.fxcrt::ObservedPtr.245"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %5, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %37 = bitcast %class.CPWL_Wnd** %36 to %class.CPWL_Edit**
  store %class.CPWL_Edit* %0, %class.CPWL_Edit** %37, align 8
  %38 = icmp eq %class.CPWL_Edit* %0, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %5, i64 0, i32 0
  %41 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 1
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %41, %"class.fxcrt::Observable::ObserverIface"* nonnull %40) #11
  br label %42

42:                                               ; preds = %32, %39
  %43 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %44, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %6) #11
  %45 = load %class.IPWL_FillerNotify*, %class.IPWL_FillerNotify** %13, align 8
  %46 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.IPWL_SystemHandler::PerWindowData"*, %"class.IPWL_SystemHandler::PerWindowData"** %46, align 8
  %48 = bitcast %class.IPWL_FillerNotify* %45 to i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)***
  %49 = load i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)**, i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)*** %48, align 8
  %50 = getelementptr inbounds i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)*, i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)** %49, i64 3
  %51 = load i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)*, i16 (%class.IPWL_FillerNotify*, %"class.IPWL_SystemHandler::PerWindowData"*, %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, i32, i32, i1, i32)** %50, align 8
  %52 = call i16 %51(%class.IPWL_FillerNotify* %45, %"class.IPWL_SystemHandler::PerWindowData"* %47, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6, i32 %33, i32 %24, i1 zeroext true, i32 %2) #11
  %53 = trunc i16 %52 to i8
  %54 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %36, align 8
  %55 = icmp eq %class.CPWL_Wnd* %54, null
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %56 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %36, align 8
  %57 = icmp eq %class.CPWL_Wnd* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %42
  %59 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %56, i64 0, i32 1
  %60 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %5, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %59, %"class.fxcrt::Observable::ObserverIface"* nonnull %60) #11
  br label %61

61:                                               ; preds = %42, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br i1 %55, label %84, label %62

62:                                               ; preds = %61
  %63 = icmp eq i8 %53, 0
  br i1 %63, label %84, label %64

64:                                               ; preds = %62
  %65 = icmp ult i16 %52, 256
  br i1 %65, label %66, label %84

66:                                               ; preds = %12, %10, %64
  %67 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 3, i32 0
  %68 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %67, align 8
  %69 = icmp eq %class.IPVT_FontMap* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 3
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = bitcast %class.IPVT_FontMap* %68 to i32 (%class.IPVT_FontMap*, i16, i32)***
  %75 = load i32 (%class.IPVT_FontMap*, i16, i32)**, i32 (%class.IPVT_FontMap*, i16, i32)*** %74, align 8
  %76 = getelementptr inbounds i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %75, i64 6
  %77 = load i32 (%class.IPVT_FontMap*, i16, i32)*, i32 (%class.IPVT_FontMap*, i16, i32)** %76, align 8
  %78 = call i32 %77(%class.IPVT_FontMap* nonnull %68, i16 zeroext %1, i32 1) #11
  %79 = icmp eq i32 %78, %73
  br i1 %79, label %82, label %80

80:                                               ; preds = %70
  %81 = trunc i32 %78 to i8
  store i8 %81, i8* %71, align 1
  br label %82

82:                                               ; preds = %80, %70, %66
  %83 = call zeroext i1 @_ZN9CPWL_Edit14OnCharInternalEtj(%class.CPWL_Edit* %0, i16 zeroext %1, i32 %2)
  br label %84

84:                                               ; preds = %82, %62, %64, %61, %3
  %85 = phi i1 [ true, %3 ], [ %83, %82 ], [ false, %61 ], [ true, %62 ], [ false, %64 ]
  ret i1 %85
}

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit14OnCharInternalEtj(%class.CPWL_Edit*, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %83

7:                                                ; preds = %3
  %8 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %9 = tail call zeroext i1 @_ZN8CPWL_Wnd6OnCharEtj(%class.CPWL_Wnd* %8, i16 zeroext %1, i32 %2) #11
  switch i16 %1, label %10 [
    i16 10, label %83
    i16 27, label %83
  ]

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN8CPWL_Wnd21IsPlatformShortcutKeyEj(i32 %2) #11
  %12 = tail call zeroext i1 @_ZN8CPWL_Wnd12IsALTKeyDownEj(i32 %2) #11
  %13 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %2) #11
  %14 = xor i1 %11, true
  %15 = or i1 %12, %14
  br i1 %15, label %51, label %16

16:                                               ; preds = %10
  switch i16 %1, label %49 [
    i16 3, label %83
    i16 22, label %83
    i16 24, label %17
    i16 1, label %28
    i16 26, label %31
  ]

17:                                               ; preds = %16
  %18 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %8, i32 2) #11
  br i1 %18, label %83, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %20, align 8
  %22 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %21) #11
  br i1 %22, label %23, label %83

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %24, label %83, label %25

25:                                               ; preds = %23
  %26 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %20, align 8
  %27 = tail call zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl* %26) #11
  br label %83

28:                                               ; preds = %16
  %29 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %29, align 8
  tail call void @_ZN13CPWL_EditImpl9SelectAllEv(%class.CPWL_EditImpl* %30) #11
  br label %83

31:                                               ; preds = %16
  %32 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %13, label %33, label %41

33:                                               ; preds = %31
  br i1 %32, label %83, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %35, align 8
  %37 = tail call zeroext i1 @_ZNK13CPWL_EditImpl7CanRedoEv(%class.CPWL_EditImpl* %36) #11
  br i1 %37, label %38, label %83

38:                                               ; preds = %34
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %35, align 8
  %40 = tail call zeroext i1 @_ZN13CPWL_EditImpl4RedoEv(%class.CPWL_EditImpl* %39) #11
  br label %83

41:                                               ; preds = %31
  br i1 %32, label %83, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %44 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %43, align 8
  %45 = tail call zeroext i1 @_ZNK13CPWL_EditImpl7CanUndoEv(%class.CPWL_EditImpl* %44) #11
  br i1 %45, label %46, label %83

46:                                               ; preds = %42
  %47 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %43, align 8
  %48 = tail call zeroext i1 @_ZN13CPWL_EditImpl4UndoEv(%class.CPWL_EditImpl* %47) #11
  br label %83

49:                                               ; preds = %16
  %50 = icmp ult i16 %1, 32
  br i1 %50, label %83, label %51

51:                                               ; preds = %10, %49
  %52 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %52, label %83, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %55 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %54, align 8
  %56 = tail call zeroext i1 @_ZNK13CPWL_EditImpl10IsSelectedEv(%class.CPWL_EditImpl* %55) #11
  %57 = icmp eq i16 %1, 8
  %58 = and i1 %57, %56
  %59 = select i1 %58, i16 0, i16 %1
  %60 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %60, label %64, label %61

61:                                               ; preds = %53
  %62 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %54, align 8
  %63 = tail call zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl* %62) #11
  br label %64

64:                                               ; preds = %53, %61
  switch i16 %59, label %75 [
    i16 8, label %65
    i16 13, label %70
    i16 0, label %83
  ]

65:                                               ; preds = %64
  %66 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %66, label %83, label %67

67:                                               ; preds = %65
  %68 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %54, align 8
  %69 = tail call zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEv(%class.CPWL_EditImpl* %68) #11
  br label %83

70:                                               ; preds = %64
  %71 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %71, label %83, label %72

72:                                               ; preds = %70
  %73 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %54, align 8
  %74 = tail call zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEv(%class.CPWL_EditImpl* %73) #11
  br label %83

75:                                               ; preds = %64
  %76 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 3
  %77 = load i8, i8* %76, align 1
  %78 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %8) #11
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = zext i8 %77 to i32
  %81 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %54, align 8
  %82 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEti(%class.CPWL_EditImpl* %81, i16 zeroext %59, i32 %80) #11
  br label %83

83:                                               ; preds = %79, %75, %72, %70, %67, %65, %46, %42, %41, %38, %34, %33, %25, %23, %19, %17, %16, %16, %28, %49, %51, %64, %7, %7, %3
  %84 = phi i1 [ true, %3 ], [ false, %7 ], [ false, %7 ], [ true, %28 ], [ false, %49 ], [ true, %51 ], [ true, %64 ], [ true, %16 ], [ true, %16 ], [ true, %17 ], [ true, %19 ], [ true, %23 ], [ true, %25 ], [ true, %33 ], [ true, %34 ], [ true, %38 ], [ true, %41 ], [ true, %42 ], [ true, %46 ], [ true, %65 ], [ true, %67 ], [ true, %70 ], [ true, %72 ], [ true, %75 ], [ true, %79 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit12OnMouseWheelEjRK13CFX_PTemplateIfERK13CFX_VTemplateIiE(%class.CPWL_Edit*, i32, %class.CFX_PTemplate* nocapture readnone dereferenceable(8), %class.CFX_VTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %7 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %6, i32 1) #11
  br i1 %7, label %8, label %24

8:                                                ; preds = %4
  %9 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %12 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %12, align 8, !noalias !3
  call void @_ZNK13CPWL_EditImpl12GetScrollPosEv(%class.CFX_PTemplate* nonnull sret %5, %class.CPWL_EditImpl* %13) #11
  %14 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %3, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  %17 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %12, align 8
  %18 = call float @_ZNK13CPWL_EditImpl11GetFontSizeEv(%class.CPWL_EditImpl* %17) #11
  %19 = load float, float* %11, align 4
  %20 = fsub float -0.000000e+00, %18
  %21 = select i1 %16, float %18, float %20
  %22 = fadd float %19, %21
  store float %22, float* %11, align 4
  %23 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %12, align 8
  call void @_ZN13CPWL_EditImpl12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_EditImpl* %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %24

24:                                               ; preds = %4, %8
  %25 = phi i1 [ true, %8 ], [ false, %4 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPWL_Edit12GetScrollPosEv(%class.CFX_PTemplate* noalias sret, %class.CPWL_Edit* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZNK13CPWL_EditImpl12GetScrollPosEv(%class.CFX_PTemplate* sret %0, %class.CPWL_EditImpl* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK9CPWL_Edit11GetFontSizeEv(%class.CPWL_Edit* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = tail call float @_ZNK13CPWL_EditImpl11GetFontSizeEv(%class.CPWL_EditImpl* %3) #11
  ret float %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_Edit* nocapture readonly, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_EditImpl* %4, %class.CFX_PTemplate* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit9OnDestroyEv(%class.CPWL_Edit* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 6
  %3 = bitcast %"class.fxcrt::UnownedPtr.85"* %2 to i64*
  store i64 0, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPWL_Edit9IsWndHorVEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_Matrix, align 4
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %9 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -1, i64 24, i1 false)
  call void @_ZNK8CPWL_Wnd15GetWindowMatrixEv(%class.CFX_Matrix* nonnull sret %2, %class.CPWL_Wnd* %8) #11
  %10 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float 1.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float 1.000000e+00, float* %13, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %3, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #11
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  store float 0.000000e+00, float* %18, align 4
  %19 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float 1.000000e+00, float* %19, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %5, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %6) #11
  %20 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %15, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret i1 %22
}

declare void @_ZNK8CPWL_Wnd15GetWindowMatrixEv(%class.CFX_Matrix* sret, %class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit9SetCursorEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_Matrix, align 4
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = alloca %class.CFX_PTemplate, align 4
  %6 = alloca %class.CFX_PTemplate, align 4
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 9
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %1
  %11 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %12 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 0, i32 2, i32 2, i32 0
  %13 = load %class.IPWL_SystemHandler*, %class.IPWL_SystemHandler** %12, align 8
  %14 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -1, i64 24, i1 false) #11
  call void @_ZNK8CPWL_Wnd15GetWindowMatrixEv(%class.CFX_Matrix* nonnull sret %2, %class.CPWL_Wnd* %11) #11
  %15 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  store float 1.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  store float 1.000000e+00, float* %18, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %3, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %4) #11
  %19 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = bitcast %class.CFX_PTemplate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = bitcast %class.CFX_PTemplate* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 0
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %6, i64 0, i32 1
  store float 1.000000e+00, float* %24, align 4
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %5, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %6) #11
  %25 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %5, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %20, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %28 = select i1 %27, i32 3, i32 4
  %29 = bitcast %class.IPWL_SystemHandler* %13 to void (%class.IPWL_SystemHandler*, i32)***
  %30 = load void (%class.IPWL_SystemHandler*, i32)**, void (%class.IPWL_SystemHandler*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%class.IPWL_SystemHandler*, i32)*, void (%class.IPWL_SystemHandler*, i32)** %30, i64 5
  %32 = load void (%class.IPWL_SystemHandler*, i32)*, void (%class.IPWL_SystemHandler*, i32)** %31, align 8
  call void %32(%class.IPWL_SystemHandler* %13, i32 %28) #11
  br label %33

33:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit15GetSelectedTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_Edit* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZNK13CPWL_EditImpl15GetSelectedTextEv(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %4) #11
  ret void
}

declare void @_ZNK13CPWL_EditImpl15GetSelectedTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_Edit* nocapture readonly, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_EditImpl* %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl16ReplaceSelectionERKN5fxcrt10WideStringE(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit13SelectAllTextEv(%class.CPWL_Edit* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  tail call void @_ZN13CPWL_EditImpl9SelectAllEv(%class.CPWL_EditImpl* %3) #11
  ret i1 true
}

declare void @_ZN13CPWL_EditImpl9SelectAllEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit13SetScrollInfoERK15PWL_SCROLL_INFO(%class.CPWL_Edit*, %struct.PWL_SCROLL_INFO* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %4 = tail call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %3) #11
  %5 = icmp eq %class.CPWL_ScrollBar* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.CPWL_ScrollBar* %4 to %class.CPWL_Wnd*
  %8 = bitcast %class.CPWL_ScrollBar* %4 to void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)***
  %9 = load void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)**, void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)*, void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)** %9, i64 12
  %11 = load void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)*, void (%class.CPWL_Wnd*, %struct.PWL_SCROLL_INFO*)** %10, align 8
  tail call void %11(%class.CPWL_Wnd* nonnull %7, %struct.PWL_SCROLL_INFO* dereferenceable(20) %1) #11
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit17SetScrollPositionEf(%class.CPWL_Edit*, float) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %4 = tail call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %3) #11
  %5 = icmp eq %class.CPWL_ScrollBar* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.CPWL_ScrollBar* %4 to %class.CPWL_Wnd*
  %8 = bitcast %class.CPWL_ScrollBar* %4 to void (%class.CPWL_Wnd*, float)***
  %9 = load void (%class.CPWL_Wnd*, float)**, void (%class.CPWL_Wnd*, float)*** %8, align 8
  %10 = getelementptr inbounds void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %9, i64 13
  %11 = load void (%class.CPWL_Wnd*, float)*, void (%class.CPWL_Wnd*, float)** %10, align 8
  tail call void %11(%class.CPWL_Wnd* nonnull %7, float %1) #11
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit22ScrollWindowVerticallyEf(%class.CPWL_Edit* nocapture readonly, float) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_PTemplate, align 4
  %4 = alloca %class.CFX_PTemplate, align 4
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = bitcast %class.CFX_PTemplate* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %class.CFX_PTemplate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  call void @_ZNK13CPWL_EditImpl12GetScrollPosEv(%class.CFX_PTemplate* nonnull sret %4, %class.CPWL_EditImpl* %6) #11
  %9 = bitcast %class.CFX_PTemplate* %4 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %class.CFX_PTemplate* %3 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  store float %1, float* %12, align 4
  call void @_ZN13CPWL_EditImpl12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_EditImpl* %6, %class.CFX_PTemplate* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_EditImpl*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK13CPWL_EditImpl12GetScrollPosEv(%class.CFX_PTemplate* sret, %class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit14CreateChildWndERKN8CPWL_Wnd12CreateParamsE(%class.CPWL_Edit*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %4 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %3) #11
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN9CPWL_Edit15CreateEditCaretERKN8CPWL_Wnd12CreateParamsE(%class.CPWL_Edit* %0, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1)
  br label %6

6:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit15CreateEditCaretERKN8CPWL_Wnd12CreateParamsE(%class.CPWL_Edit*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.CPWL_Wnd::CreateParams", align 8
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 6, i32 0
  %6 = load %class.CPWL_Caret*, %class.CPWL_Caret** %5, align 8
  %7 = icmp eq %class.CPWL_Caret* %6, null
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  %9 = bitcast %"class.CPWL_Wnd::CreateParams"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %9) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%"class.CPWL_Wnd::CreateParams"* @__const._ZN9CPWL_Edit15CreateEditCaretERKN8CPWL_Wnd12CreateParamsE.ecp to i8*), i64 184, i1 false)
  call void @_ZN8CPWL_Wnd12CreateParamsC1ERKS0_(%"class.CPWL_Wnd::CreateParams"* nonnull %4, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184) %1) #11
  %10 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 6
  store i32 2097152, i32* %10, align 8
  %11 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 9
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.CPWL_Wnd::CreateParams", %"class.CPWL_Wnd::CreateParams"* %4, i64 0, i32 8
  store i32 0, i32* %12, align 8
  %13 = bitcast %"class.CPWL_Wnd::CreateParams"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  %14 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %15 = call %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd* %14) #11
  %16 = call i8* @_Znwm(i64 360) #12
  %17 = bitcast i8* %16 to %class.CPWL_Caret*
  call void @_ZN10CPWL_CaretC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_Caret* nonnull %17, %"class.CPWL_Wnd::CreateParams"* nonnull dereferenceable(184) %4, %"class.IPWL_SystemHandler::PerWindowData"* %15) #11
  %18 = bitcast %class.CPWL_Caret** %5 to i8**
  store i8* %16, i8** %18, align 8
  %19 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %20 = call i32 @_ZNK8CPWL_Wnd14GetBorderWidthEv(%class.CPWL_Wnd* %14) #11
  %21 = call i32 @_ZNK8CPWL_Wnd19GetInnerBorderWidthEv(%class.CPWL_Wnd* %14) #11
  %22 = add nsw i32 %21, %20
  %23 = sitofp i32 %22 to float
  %24 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = call { <2 x float>, <2 x float> } @_ZNK8CPWL_Wnd13GetWindowRectEv(%class.CPWL_Wnd* %14) #11
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %27 = extractvalue { <2 x float>, <2 x float> } %25, 0
  store <2 x float> %27, <2 x float>* %26, align 8
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %29 = extractvalue { <2 x float>, <2 x float> } %25, 1
  store <2 x float> %29, <2 x float>* %28, align 8
  %30 = call { <2 x float>, <2 x float> } @_ZNK13CFX_FloatRect11GetDeflatedEff(%class.CFX_FloatRect* nonnull %19, float %23, float %23) #11
  %31 = extractvalue { <2 x float>, <2 x float> } %30, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  %32 = call %class.CPWL_ScrollBar* @_ZNK8CPWL_Wnd13GetVScrollBarEv(%class.CPWL_Wnd* %14) #11
  %33 = icmp eq %class.CPWL_ScrollBar* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %class.CPWL_ScrollBar, %class.CPWL_ScrollBar* %32, i64 0, i32 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = extractelement <2 x float> %31, i32 0
  %40 = fadd float %39, -1.200000e+01
  %41 = insertelement <2 x float> %31, float %40, i32 0
  br label %42

42:                                               ; preds = %38, %34, %8
  %43 = phi <2 x float> [ %41, %38 ], [ %31, %34 ], [ %31, %8 ]
  %44 = extractvalue { <2 x float>, <2 x float> } %30, 0
  %45 = getelementptr inbounds i8, i8* %16, i64 336
  %46 = bitcast i8* %45 to <2 x float>*
  store <2 x float> %44, <2 x float>* %46, align 8
  %47 = getelementptr inbounds i8, i8* %16, i64 344
  %48 = bitcast i8* %47 to <2 x float>*
  store <2 x float> %43, <2 x float>* %48, align 8
  %49 = bitcast i8* %16 to %class.CPWL_Wnd*
  call void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd* %14, %class.CPWL_Wnd* nonnull %49) #11
  %50 = bitcast %class.CPWL_Caret** %5 to %class.CPWL_Wnd**
  %51 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %50, align 8
  call void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd* %51) #11
  call void @_ZN8CPWL_Wnd12CreateParamsD1Ev(%"class.CPWL_Wnd::CreateParams"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %9) #11
  br label %52

52:                                               ; preds = %2, %42
  ret void
}

declare void @_ZN8CPWL_Wnd12CreateParamsC1ERKS0_(%"class.CPWL_Wnd::CreateParams"*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184)) unnamed_addr #1

declare %"class.IPWL_SystemHandler::PerWindowData"* @_ZNK8CPWL_Wnd17CloneAttachedDataEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZN8CPWL_Wnd8AddChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.CPWL_Wnd*, %class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZN8CPWL_Wnd7RealizeEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8CPWL_Wnd12CreateParamsD1Ev(%"class.CPWL_Wnd::CreateParams"*) unnamed_addr #2

declare float @_ZNK13CPWL_EditImpl11GetFontSizeEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd9OnKeyDownEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit6DeleteEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZN13CPWL_EditImpl6DeleteEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9CPWL_Edit9PasteTextEv(%class.CPWL_Edit* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

declare void @_ZN13CPWL_EditImpl7OnVK_UPEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl9OnVK_DOWNEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl9OnVK_LEFTEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl10OnVK_RIGHTEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl9OnVK_HOMEEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl8OnVK_ENDEbb(%class.CPWL_EditImpl*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit14ClearSelectionEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZN13CPWL_EditImpl14ClearSelectionEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

declare zeroext i1 @_ZN8CPWL_Wnd6OnCharEtj(%class.CPWL_Wnd*, i16 zeroext, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9CPWL_Edit8CopyTextEv(%class.CPWL_Edit* nocapture) local_unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit4RedoEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl7CanRedoEv(%class.CPWL_EditImpl* %6) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %10 = tail call zeroext i1 @_ZN13CPWL_EditImpl4RedoEv(%class.CPWL_EditImpl* %9) #11
  br label %11

11:                                               ; preds = %1, %8, %4
  %12 = phi i1 [ false, %4 ], [ %10, %8 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit4UndoEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %11, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl7CanUndoEv(%class.CPWL_EditImpl* %6) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %10 = tail call zeroext i1 @_ZN13CPWL_EditImpl4UndoEv(%class.CPWL_EditImpl* %9) #11
  br label %11

11:                                               ; preds = %1, %8, %4
  %12 = phi i1 [ false, %4 ], [ %10, %8 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit9BackspaceEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12InsertReturnEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit10InsertWordEti(%class.CPWL_Edit*, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %4) #11
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %7, align 8
  %9 = tail call zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEti(%class.CPWL_EditImpl* %8, i16 zeroext %1, i32 %2) #11
  br label %10

10:                                               ; preds = %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Edit*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %6 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %4, i32 16384) #11
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZNK8CPWL_Wnd13ClientHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  br i1 %8, label %9, label %20

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd* %4, %class.CFX_FloatRect* null) #11
  br i1 %14, label %15, label %20

15:                                               ; preds = %9, %13
  store i8 1, i8* %10, align 1
  tail call void @_ZN8CPWL_Wnd10SetCaptureEv(%class.CPWL_Wnd* %4) #11
  %16 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %17 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %16, align 8
  %18 = tail call zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32 %1) #11
  %19 = tail call zeroext i1 @_ZN8CPWL_Wnd13IsCTRLKeyDownEj(i32 %1) #11
  tail call void @_ZN13CPWL_EditImpl11OnMouseDownERK13CFX_PTemplateIfEbb(%class.CPWL_EditImpl* %17, %class.CFX_PTemplate* dereferenceable(8) %2, i1 zeroext %18, i1 zeroext %19) #11
  br label %20

20:                                               ; preds = %7, %15, %13
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd13OnLButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK8CPWL_Wnd13ClientHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd14InvalidateRectEPK13CFX_FloatRect(%class.CPWL_Wnd*, %class.CFX_FloatRect*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd10SetCaptureEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl11OnMouseDownERK13CFX_PTemplateIfEbb(%class.CPWL_EditImpl*, %class.CFX_PTemplate* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Edit*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %6 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK8CPWL_Wnd13ClientHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = tail call zeroext i1 @_ZNK8CPWL_Wnd9IsFocusedEv(%class.CPWL_Wnd* %4) #11
  br i1 %12, label %14, label %13

13:                                               ; preds = %11
  tail call void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd* %4) #11
  br label %14

14:                                               ; preds = %13, %11, %9
  tail call void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd* %4) #11
  store i8 0, i8* %6, align 1
  br label %15

15:                                               ; preds = %3, %14
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd11OnLButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK8CPWL_Wnd9IsFocusedEv(%class.CPWL_Wnd*) local_unnamed_addr #1

declare void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

declare void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Edit*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %6 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %4, i32 16384) #11
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZNK8CPWL_Wnd13ClientHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  br i1 %8, label %9, label %12

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %10, align 8
  tail call void @_ZN13CPWL_EditImpl9SelectAllEv(%class.CPWL_EditImpl* %11) #11
  br label %12

12:                                               ; preds = %9, %7
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd15OnLButtonDblClkEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Edit*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %9 = tail call zeroext i1 @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %8, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %10 = tail call zeroext i1 @_ZNK8CPWL_Wnd7HasFlagEj(%class.CPWL_Wnd* %8, i32 16384) #11
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZNK8CPWL_Wnd13ClientHitTestERK13CFX_PTemplateIfE(%class.CPWL_Wnd* %8, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  br i1 %12, label %13, label %14

13:                                               ; preds = %11, %7
  tail call void @_ZN8CPWL_Wnd8SetFocusEv(%class.CPWL_Wnd* %8) #11
  br label %14

14:                                               ; preds = %11, %3, %13
  %15 = phi i1 [ false, %13 ], [ false, %3 ], [ true, %11 ]
  ret i1 %15
}

declare zeroext i1 @_ZN8CPWL_Wnd11OnRButtonUpEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Edit*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %5 = tail call zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd* %4, i32 %1, %class.CFX_PTemplate* dereferenceable(8) %2) #11
  %6 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %10, align 8
  tail call void @_ZN13CPWL_EditImpl11OnMouseMoveERK13CFX_PTemplateIfEbb(%class.CPWL_EditImpl* %11, %class.CFX_PTemplate* dereferenceable(8) %2, i1 zeroext false, i1 zeroext false) #11
  br label %12

12:                                               ; preds = %3, %9
  ret i1 true
}

declare zeroext i1 @_ZN8CPWL_Wnd11OnMouseMoveEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN13CPWL_EditImpl11OnMouseMoveERK13CFX_PTemplateIfEbb(%class.CPWL_EditImpl*, %class.CFX_PTemplate* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPWL_Edit12GetCaretInfoEP13CFX_PTemplateIfES2_(%class.CPWL_Edit* nocapture readonly, %class.CFX_PTemplate* nocapture, %class.CFX_PTemplate* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CPVT_Word, align 16
  %5 = alloca %class.CPVT_Line, align 4
  %6 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %6, align 8
  %8 = tail call %"class.CPWL_EditImpl::Iterator"* @_ZN13CPWL_EditImpl11GetIteratorEv(%class.CPWL_EditImpl* %7) #11
  %9 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %6, align 8
  %10 = tail call i32 @_ZNK13CPWL_EditImpl8GetCaretEv(%class.CPWL_EditImpl* %9) #11
  tail call void @_ZN13CPWL_EditImpl8Iterator5SetAtEi(%"class.CPWL_EditImpl::Iterator"* %8, i32 %10) #11
  %11 = bitcast %class.CPVT_Word* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  %12 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 0
  %13 = bitcast %class.CPVT_Word* %4 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %13, align 16
  store i16 0, i16* %12, align 16
  %14 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 2, i32 2
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 7
  %17 = bitcast float* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 20, i1 false) #11
  store i32 -1, i32* %16, align 8
  %18 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 8
  store float 0.000000e+00, float* %18, align 4
  %19 = bitcast %class.CPVT_Line* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %19) #11
  %20 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 2, i32 1
  %22 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 4
  %23 = getelementptr inbounds %class.CPVT_Line, %class.CPVT_Line* %5, i64 0, i32 5
  %24 = bitcast float* %20 to i8*
  %25 = bitcast %class.CPVT_Line* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %25, i8 -1, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 20, i1 false) #11
  %26 = call zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetWordER9CPVT_Word(%"class.CPWL_EditImpl::Iterator"* %8, %class.CPVT_Word* nonnull dereferenceable(48) %4) #11
  br i1 %26, label %27, label %41

27:                                               ; preds = %3
  %28 = load float, float* %15, align 4
  %29 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 6
  %30 = load float, float* %29, align 4
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  store float %31, float* %32, align 4
  %33 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 3, i32 1
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 4
  %36 = load float, float* %35, align 4
  %37 = fadd float %34, %36
  %38 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  store float %37, float* %38, align 4
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  store float %31, float* %39, align 4
  %40 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 5
  br label %52

41:                                               ; preds = %3
  %42 = call zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetLineER9CPVT_Line(%"class.CPWL_EditImpl::Iterator"* %8, %class.CPVT_Line* nonnull dereferenceable(44) %5) #11
  br i1 %42, label %43, label %58

43:                                               ; preds = %41
  %44 = bitcast float* %20 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = bitcast %class.CFX_PTemplate* %1 to i32*
  store i32 %45, i32* %46, align 4
  %47 = load float, float* %21, align 4
  %48 = load float, float* %22, align 4
  %49 = fadd float %47, %48
  %50 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  store float %49, float* %50, align 4
  %51 = bitcast %class.CFX_PTemplate* %2 to i32*
  store i32 %45, i32* %51, align 4
  br label %52

52:                                               ; preds = %27, %43
  %53 = phi float* [ %23, %43 ], [ %40, %27 ]
  %54 = phi float [ %47, %43 ], [ %34, %27 ]
  %55 = load float, float* %53, align 4
  %56 = fadd float %54, %55
  %57 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  store float %56, float* %57, align 4
  br label %58

58:                                               ; preds = %52, %41
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  ret void
}

declare %"class.CPWL_EditImpl::Iterator"* @_ZN13CPWL_EditImpl11GetIteratorEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare void @_ZN13CPWL_EditImpl8Iterator5SetAtEi(%"class.CPWL_EditImpl::Iterator"*, i32) local_unnamed_addr #1

declare i32 @_ZNK13CPWL_EditImpl8GetCaretEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetWordER9CPVT_Word(%"class.CPWL_EditImpl::Iterator"*, %class.CPVT_Word* dereferenceable(48)) local_unnamed_addr #1

declare zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetLineER9CPVT_Line(%"class.CPWL_EditImpl::Iterator"*, %class.CPVT_Line* dereferenceable(44)) local_unnamed_addr #1

declare void @_ZN10CPWL_Caret8SetCaretEbRK13CFX_PTemplateIfES3_(%class.CPWL_Caret*, i1 zeroext, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit7GetTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_Edit* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %4) #11
  ret void
}

declare void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit12SetSelectionEii(%class.CPWL_Edit* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %4, align 8
  tail call void @_ZN13CPWL_EditImpl12SetSelectionEii(%class.CPWL_EditImpl* %5, i32 %1, i32 %2) #11
  ret void
}

declare void @_ZN13CPWL_EditImpl12SetSelectionEii(%class.CPWL_EditImpl*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPWL_EditImpl10InsertWordEti(%class.CPWL_EditImpl*, i16 zeroext, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPWL_EditImpl12InsertReturnEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPWL_EditImpl6DeleteEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPWL_EditImpl9BackspaceEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit7CanUndoEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl7CanUndoEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ false, %1 ], [ %7, %4 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK13CPWL_EditImpl7CanUndoEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPWL_Edit7CanRedoEv(%class.CPWL_Edit*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  %3 = tail call zeroext i1 @_ZNK8CPWL_Wnd10IsReadOnlyEv(%class.CPWL_Wnd* %2) #11
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13CPWL_EditImpl7CanRedoEv(%class.CPWL_EditImpl* %6) #11
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ false, %1 ], [ %7, %4 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK13CPWL_EditImpl7CanRedoEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPWL_EditImpl4UndoEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

declare zeroext i1 @_ZN13CPWL_EditImpl4RedoEv(%class.CPWL_EditImpl*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPWL_Edit15SetReadyToInputEv(%class.CPWL_Edit*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.CPWL_Edit* %0 to %class.CPWL_Wnd*
  tail call void @_ZN8CPWL_Wnd14ReleaseCaptureEv(%class.CPWL_Wnd* %6) #11
  store i8 0, i8* %2, align 1
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare zeroext i1 @_ZN8CPWL_Wnd13OnRButtonDownEjRK13CFX_PTemplateIfE(%class.CPWL_Wnd*, i32, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd17NotifyLButtonDownEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15NotifyLButtonUpEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd15NotifyMouseMoveEPS_RK13CFX_PTemplateIfE(%class.CPWL_Wnd*, %class.CPWL_Wnd*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

declare void @_ZN8CPWL_Wnd9KillFocusEv(%class.CPWL_Wnd*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #8

declare zeroext i1 @_ZN8CPWL_Wnd12IsALTKeyDownEj(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd13IsCTRLKeyDownEj(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN8CPWL_Wnd14IsSHIFTKeyDownEj(i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN13CPWL_EditImplC1Ev(%class.CPWL_EditImpl*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl*) unnamed_addr #2

declare void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI9CPWL_EditED0Ev(%"class.fxcrt::ObservedPtr.100"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI9CPWL_EditEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 1
  %4 = load %class.CPWL_Edit*, %class.CPWL_Edit** %3, align 8
  %5 = icmp eq %class.CPWL_Edit* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Edit, %class.CPWL_Edit* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr.100"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI9CPWL_EditE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr.100"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.100", %"class.fxcrt::ObservedPtr.100"* %0, i64 0, i32 1
  store %class.CPWL_Edit* null, %class.CPWL_Edit** %2, align 8
  ret void
}

declare void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.113"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.113"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.113"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.113"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.113"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.113", %"class.std::__1::vector.113"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.113"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI8CPWL_WndED0Ev(%"class.fxcrt::ObservedPtr.245"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI8CPWL_WndEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 1
  %4 = load %class.CPWL_Wnd*, %class.CPWL_Wnd** %3, align 8
  %5 = icmp eq %class.CPWL_Wnd* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPWL_Wnd, %class.CPWL_Wnd* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #11
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr.245"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI8CPWL_WndE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr.245"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr.245", %"class.fxcrt::ObservedPtr.245"* %0, i64 0, i32 1
  store %class.CPWL_Wnd* null, %class.CPWL_Wnd** %2, align 8
  ret void
}

declare void @_ZN10CPWL_CaretC1ERKN8CPWL_Wnd12CreateParamsENSt3__110unique_ptrIN18IPWL_SystemHandler13PerWindowDataENS4_14default_deleteIS7_EEEE(%class.CPWL_Caret*, %"class.CPWL_Wnd::CreateParams"* dereferenceable(184), %"class.IPWL_SystemHandler::PerWindowData"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK9CPWL_Edit12GetScrollPosEv: argument 0"}
!5 = distinct !{!5, !"_ZNK9CPWL_Edit12GetScrollPosEv"}
