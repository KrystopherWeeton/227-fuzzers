; ModuleID = '../../chrome/common/net/safe_search_util.cc'
source_filename = "../../chrome/common/net/safe_search_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::allocator" = type { i8 }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }

@_ZN16safe_search_util24kSafeSearchSafeParameterE = hidden local_unnamed_addr constant [12 x i8] c"safe=active\00", align 1
@_ZN16safe_search_util24kSafeSearchSsuiParameterE = hidden local_unnamed_addr constant [8 x i8] c"ssui=on\00", align 1
@_ZN16safe_search_util26kYouTubeRestrictHeaderNameE = hidden constant [17 x i8] c"YouTube-Restrict\00", align 16
@_ZN16safe_search_util35kYouTubeRestrictHeaderValueModerateE = hidden constant [9 x i8] c"Moderate\00", align 1
@_ZN16safe_search_util33kYouTubeRestrictHeaderValueStrictE = hidden constant [7 x i8] c"Strict\00", align 1
@_ZN16safe_search_util25kGoogleAppsAllowedDomainsE = hidden local_unnamed_addr constant [27 x i8] c"X-GoogApps-Allowed-Domains\00", align 16
@.ref.tmp = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN16safe_search_util26kYouTubeRestrictHeaderNameE, i32 0, i32 0), i64 16 }, align 8
@.ref.tmp.1 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN16safe_search_util35kYouTubeRestrictHeaderValueModerateE, i32 0, i32 0), i64 8 }, align 8
@.ref.tmp.2 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN16safe_search_util26kYouTubeRestrictHeaderNameE, i32 0, i32 0), i64 16 }, align 8
@.ref.tmp.3 = private constant %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN16safe_search_util33kYouTubeRestrictHeaderValueStrictE, i32 0, i32 0), i64 6 }, align 8
@.str = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"=\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16safe_search_util21ForceGoogleSafeSearchERK4GURLPS0_(%class.GURL* dereferenceable(120), %class.GURL*) local_unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::vector.9", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.9", align 8
  %9 = alloca %"class.std::__1::allocator", align 1
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.url::StringPieceReplacements", align 8
  %13 = alloca %class.GURL, align 8
  %14 = tail call zeroext i1 @_ZN11google_util17IsGoogleSearchUrlERK4GURL(%class.GURL* dereferenceable(120) %0) #9
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = tail call zeroext i1 @_ZN11google_util19IsGoogleHomePageUrlERK4GURL(%class.GURL* dereferenceable(120) %0) #9
  br i1 %16, label %17, label %427

17:                                               ; preds = %15, %2
  %18 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 6, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = load i32, i32* %21, align 4, !noalias !2
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %39

27:                                               ; preds = %17
  %28 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 6, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !2
  %31 = sext i32 %30 to i64
  %32 = sext i32 %23 to i64
  %33 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #9, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %28, i64 %31, i64 %32, %"class.std::__1::allocator"* nonnull dereferenceable(1) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #9, !noalias !2
  %34 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1, !noalias !7
  %37 = load i8*, i8** %19, align 8, !noalias !7
  %38 = load i64, i64* %20, align 8, !noalias !7
  br label %39

39:                                               ; preds = %25, %27
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %25 ], [ %34, %27 ]
  %41 = phi i64 [ 0, %25 ], [ %38, %27 ]
  %42 = phi i8* [ null, %25 ], [ %37, %27 ]
  %43 = phi i8 [ 0, %25 ], [ %36, %27 ]
  %44 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #9
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::vector.9"* %5 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9, !noalias !7
  %49 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #9, !noalias !7
  %52 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #9, !noalias !7
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false) #9, !noalias !7
  store i8 11, i8* %56, align 1, !noalias !7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN16safe_search_util24kSafeSearchSafeParameterE, i64 0, i64 0), i64 11, i1 false) #9, !noalias !7
  %57 = getelementptr inbounds i8, i8* %52, i64 11
  store i8 0, i8* %57, align 1, !noalias !7
  %58 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #9, !noalias !7
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = bitcast i64* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 16, i1 false) #9, !noalias !7
  store i8 7, i8* %62, align 1, !noalias !7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN16safe_search_util24kSafeSearchSsuiParameterE, i64 0, i64 0), i64 7, i1 false) #9, !noalias !7
  %64 = getelementptr inbounds i8, i8* %58, i64 7
  store i8 0, i8* %64, align 1, !noalias !7
  %65 = bitcast %"class.std::__1::vector.9"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #9, !noalias !7
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %67 = icmp slt i8 %43, 0
  %68 = select i1 %67, i8* %42, i8* %18
  %69 = zext i8 %43 to i64
  %70 = select i1 %67, i64 %41, i64 %69
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.9"* nonnull sret %8, i8* %68, i64 %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #9, !noalias !7
  %71 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %8, i64 0, i32 0, i32 0
  %72 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8, !noalias !7
  %73 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %8, i64 0, i32 0, i32 1
  %74 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %73, align 8, !noalias !7
  %75 = icmp eq %"class.base::BasicStringPiece"* %72, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %39
  %77 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  %78 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %79 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %80 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %82 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %83 = bitcast %"class.base::BasicStringPiece"** %50 to i64*
  %84 = bitcast %"class.std::__1::vector.9"* %5 to i64*
  %85 = bitcast %"class.base::BasicStringPiece"** %51 to i64*
  br label %259

86:                                               ; preds = %349
  %87 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %71, align 8, !noalias !7
  br label %88

88:                                               ; preds = %86, %39
  %89 = phi %"class.base::BasicStringPiece"* [ %87, %86 ], [ %72, %39 ]
  %90 = icmp eq %"class.base::BasicStringPiece"* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %88
  %92 = ptrtoint %"class.base::BasicStringPiece"* %89 to i64
  %93 = bitcast %"class.base::BasicStringPiece"** %73 to i64*
  store i64 %92, i64* %93, align 8, !noalias !7
  %94 = bitcast %"class.base::BasicStringPiece"* %89 to i8*
  call void @_ZdlPv(i8* %94) #10
  br label %95

95:                                               ; preds = %91, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #9, !noalias !7
  %96 = load i8, i8* %56, align 1, !noalias !7
  %97 = icmp slt i8 %96, 0
  %98 = load i8*, i8** %53, align 8, !noalias !7
  %99 = select i1 %97, i8* %98, i8* %52
  %100 = load i64, i64* %54, align 8, !noalias !7
  %101 = zext i8 %96 to i64
  %102 = select i1 %97, i64 %100, i64 %101
  %103 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8, !noalias !7
  %104 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %51, align 8, !noalias !7
  %105 = icmp ult %"class.base::BasicStringPiece"* %103, %104
  %106 = ptrtoint %"class.base::BasicStringPiece"* %104 to i64
  br i1 %105, label %107, label %113

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 0, i32 0
  store i8* %99, i8** %108, align 8
  %109 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 0, i32 1
  store i64 %102, i64* %109, align 8
  %110 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %103, i64 1
  %111 = ptrtoint %"class.base::BasicStringPiece"* %110 to i64
  %112 = bitcast %"class.base::BasicStringPiece"** %50 to i64*
  store i64 %111, i64* %112, align 8, !noalias !7
  br label %163

113:                                              ; preds = %95
  %114 = ptrtoint %"class.base::BasicStringPiece"* %103 to i64
  %115 = bitcast %"class.base::BasicStringPiece"** %50 to i64*
  %116 = bitcast %"class.std::__1::vector.9"* %5 to i64*
  %117 = load i64, i64* %116, align 8, !noalias !7
  %118 = sub i64 %114, %117
  %119 = ashr exact i64 %118, 4
  %120 = add nsw i64 %119, 1
  %121 = icmp ugt i64 %120, 1152921504606846975
  br i1 %121, label %122, label %124

122:                                              ; preds = %113
  %123 = bitcast %"class.std::__1::vector.9"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %123) #11
  unreachable

124:                                              ; preds = %113
  %125 = bitcast %"class.base::BasicStringPiece"** %51 to i64*
  %126 = sub i64 %106, %117
  %127 = ashr exact i64 %126, 4
  %128 = icmp ult i64 %127, 576460752303423487
  br i1 %128, label %129, label %137

129:                                              ; preds = %124
  %130 = ashr exact i64 %126, 3
  %131 = icmp ult i64 %130, %120
  %132 = select i1 %131, i64 %120, i64 %130
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %129
  %135 = icmp ugt i64 %132, 1152921504606846975
  br i1 %135, label %136, label %137

136:                                              ; preds = %134
  call void @abort() #11
  unreachable

137:                                              ; preds = %134, %124
  %138 = phi i64 [ %132, %134 ], [ 1152921504606846975, %124 ]
  %139 = shl i64 %138, 4
  %140 = call i8* @_Znwm(i64 %139) #10
  %141 = bitcast i8* %140 to %"class.base::BasicStringPiece"*
  br label %142

142:                                              ; preds = %137, %129
  %143 = phi i64 [ %138, %137 ], [ 0, %129 ]
  %144 = phi i8* [ %140, %137 ], [ null, %129 ]
  %145 = phi %"class.base::BasicStringPiece"* [ %141, %137 ], [ null, %129 ]
  %146 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %145, i64 %119
  %147 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %145, i64 %143
  %148 = ptrtoint %"class.base::BasicStringPiece"* %147 to i64
  %149 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %146, i64 0, i32 0
  store i8* %99, i8** %149, align 8, !noalias !7
  %150 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %145, i64 %119, i32 1
  store i64 %102, i64* %150, align 8, !noalias !7
  %151 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %146, i64 1
  %152 = ptrtoint %"class.base::BasicStringPiece"* %151 to i64
  %153 = ptrtoint %"class.base::BasicStringPiece"* %145 to i64
  %154 = icmp sgt i64 %118, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %142
  %156 = inttoptr i64 %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %156, i64 %118, i1 false) #9
  br label %157

157:                                              ; preds = %155, %142
  store i64 %153, i64* %116, align 8, !noalias !7
  store i64 %152, i64* %115, align 8, !noalias !7
  store i64 %148, i64* %125, align 8, !noalias !7
  %158 = icmp eq i64 %117, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %117 to i8*
  call void @_ZdlPv(i8* %160) #10
  %161 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8, !noalias !7
  %162 = ptrtoint %"class.base::BasicStringPiece"* %161 to i64
  br label %163

163:                                              ; preds = %159, %157, %107
  %164 = phi i64 [ %111, %107 ], [ %152, %157 ], [ %162, %159 ]
  %165 = phi %"class.base::BasicStringPiece"* [ %110, %107 ], [ %151, %157 ], [ %161, %159 ]
  %166 = load i8, i8* %62, align 1, !noalias !7
  %167 = icmp slt i8 %166, 0
  %168 = load i8*, i8** %59, align 8, !noalias !7
  %169 = select i1 %167, i8* %168, i8* %58
  %170 = load i64, i64* %60, align 8, !noalias !7
  %171 = zext i8 %166 to i64
  %172 = select i1 %167, i64 %170, i64 %171
  %173 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %51, align 8, !noalias !7
  %174 = icmp ult %"class.base::BasicStringPiece"* %165, %173
  %175 = ptrtoint %"class.base::BasicStringPiece"* %173 to i64
  br i1 %174, label %176, label %183

176:                                              ; preds = %163
  %177 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %165, i64 0, i32 0
  store i8* %169, i8** %177, align 8
  %178 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %165, i64 0, i32 1
  store i64 %172, i64* %178, align 8
  %179 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %165, i64 1
  %180 = ptrtoint %"class.base::BasicStringPiece"* %179 to i64
  %181 = bitcast %"class.base::BasicStringPiece"** %50 to i64*
  store i64 %180, i64* %181, align 8, !noalias !7
  %182 = bitcast %"class.std::__1::vector.9"* %5 to i64*
  br label %236

183:                                              ; preds = %163
  %184 = ptrtoint %"class.base::BasicStringPiece"* %165 to i64
  %185 = bitcast %"class.base::BasicStringPiece"** %50 to i64*
  %186 = bitcast %"class.std::__1::vector.9"* %5 to i64*
  %187 = load i64, i64* %186, align 8, !noalias !7
  %188 = sub i64 %184, %187
  %189 = ashr exact i64 %188, 4
  %190 = add nsw i64 %189, 1
  %191 = icmp ugt i64 %190, 1152921504606846975
  br i1 %191, label %192, label %194

192:                                              ; preds = %183
  %193 = bitcast %"class.std::__1::vector.9"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %193) #11
  unreachable

194:                                              ; preds = %183
  %195 = bitcast %"class.base::BasicStringPiece"** %51 to i64*
  %196 = sub i64 %175, %187
  %197 = ashr exact i64 %196, 4
  %198 = icmp ult i64 %197, 576460752303423487
  br i1 %198, label %199, label %207

199:                                              ; preds = %194
  %200 = ashr exact i64 %196, 3
  %201 = icmp ult i64 %200, %190
  %202 = select i1 %201, i64 %190, i64 %200
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %212, label %204

204:                                              ; preds = %199
  %205 = icmp ugt i64 %202, 1152921504606846975
  br i1 %205, label %206, label %207

206:                                              ; preds = %204
  call void @abort() #11
  unreachable

207:                                              ; preds = %204, %194
  %208 = phi i64 [ %202, %204 ], [ 1152921504606846975, %194 ]
  %209 = shl i64 %208, 4
  %210 = call i8* @_Znwm(i64 %209) #10
  %211 = bitcast i8* %210 to %"class.base::BasicStringPiece"*
  br label %212

212:                                              ; preds = %207, %199
  %213 = phi i64 [ %208, %207 ], [ 0, %199 ]
  %214 = phi %"class.base::BasicStringPiece"* [ %211, %207 ], [ null, %199 ]
  %215 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %214, i64 %189
  %216 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %214, i64 %213
  %217 = ptrtoint %"class.base::BasicStringPiece"* %216 to i64
  %218 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %215, i64 0, i32 0
  store i8* %169, i8** %218, align 8, !noalias !7
  %219 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %214, i64 %189, i32 1
  store i64 %172, i64* %219, align 8, !noalias !7
  %220 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %215, i64 1
  %221 = ptrtoint %"class.base::BasicStringPiece"* %220 to i64
  %222 = sub i64 %164, %187
  %223 = ashr exact i64 %222, 4
  %224 = sub nsw i64 0, %223
  %225 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %215, i64 %224
  %226 = ptrtoint %"class.base::BasicStringPiece"* %225 to i64
  %227 = icmp sgt i64 %222, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %212
  %229 = bitcast %"class.base::BasicStringPiece"* %225 to i8*
  %230 = inttoptr i64 %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 %222, i1 false) #9
  br label %231

231:                                              ; preds = %228, %212
  store i64 %226, i64* %186, align 8, !noalias !7
  store i64 %221, i64* %185, align 8, !noalias !7
  store i64 %217, i64* %195, align 8, !noalias !7
  %232 = icmp eq i64 %187, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %231
  %234 = inttoptr i64 %187 to i8*
  call void @_ZdlPv(i8* %234) #10
  %235 = load i64, i64* %185, align 8, !noalias !7
  br label %236

236:                                              ; preds = %233, %231, %176
  %237 = phi i64* [ %181, %176 ], [ %185, %231 ], [ %185, %233 ]
  %238 = phi i64* [ %182, %176 ], [ %186, %231 ], [ %186, %233 ]
  %239 = phi i64 [ %180, %176 ], [ %221, %231 ], [ %235, %233 ]
  %240 = load i64, i64* %238, align 8, !noalias !7
  %241 = sub i64 %239, %240
  %242 = ashr exact i64 %241, 4
  %243 = inttoptr i64 %240 to %"class.base::BasicStringPiece"*
  call void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* nonnull sret %11, i64 %242, %"class.base::BasicStringPiece"* %243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #9
  %244 = load i8, i8* %62, align 1, !noalias !7
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %236
  %247 = load i8*, i8** %59, align 8, !noalias !7
  call void @_ZdlPv(i8* %247) #10
  br label %248

248:                                              ; preds = %246, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #9, !noalias !7
  %249 = load i8, i8* %56, align 1, !noalias !7
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = load i8*, i8** %53, align 8, !noalias !7
  call void @_ZdlPv(i8* %252) #10
  br label %253

253:                                              ; preds = %251, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #9, !noalias !7
  %254 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %49, align 8, !noalias !7
  %255 = icmp eq %"class.base::BasicStringPiece"* %254, null
  br i1 %255, label %354, label %256

256:                                              ; preds = %253
  %257 = ptrtoint %"class.base::BasicStringPiece"* %254 to i64
  store i64 %257, i64* %237, align 8, !noalias !7
  %258 = bitcast %"class.base::BasicStringPiece"* %254 to i8*
  call void @_ZdlPv(i8* %258) #10
  br label %354

259:                                              ; preds = %352, %76
  %260 = phi i8 [ 11, %76 ], [ %353, %352 ]
  %261 = phi %"class.base::BasicStringPiece"* [ %72, %76 ], [ %350, %352 ]
  %262 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %261, i64 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %261, i64 0, i32 1
  %265 = load i64, i64* %264, align 8
  %266 = icmp slt i8 %260, 0
  %267 = load i8*, i8** %53, align 8, !noalias !7
  %268 = select i1 %266, i8* %267, i8* %52
  %269 = load i64, i64* %54, align 8, !noalias !7
  %270 = zext i8 %260 to i64
  %271 = select i1 %266, i64 %269, i64 %270
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #9, !noalias !7
  store i8* %268, i8** %78, align 8, !noalias !7
  store i64 %271, i64* %79, align 8, !noalias !7
  %272 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %268, i64 %271, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1, i64 0) #9
  %273 = add i64 %272, 1
  %274 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %273) #9
  %275 = extractvalue { i8*, i64 } %274, 0
  %276 = extractvalue { i8*, i64 } %274, 1
  %277 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %263, i64 %265, i8* %275, i64 %276, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #9, !noalias !7
  br i1 %277, label %349, label %278

278:                                              ; preds = %259
  %279 = load i8*, i8** %262, align 8
  %280 = load i64, i64* %264, align 8
  %281 = load i8, i8* %62, align 1, !noalias !7
  %282 = icmp slt i8 %281, 0
  %283 = load i8*, i8** %59, align 8, !noalias !7
  %284 = select i1 %282, i8* %283, i8* %58
  %285 = load i64, i64* %60, align 8, !noalias !7
  %286 = zext i8 %281 to i64
  %287 = select i1 %282, i64 %285, i64 %286
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #9, !noalias !7
  store i8* %284, i8** %81, align 8, !noalias !7
  store i64 %287, i64* %82, align 8, !noalias !7
  %288 = call i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %284, i64 %287, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1, i64 0) #9
  %289 = add i64 %288, 1
  %290 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 0, i64 %289) #9
  %291 = extractvalue { i8*, i64 } %290, 0
  %292 = extractvalue { i8*, i64 } %290, 1
  %293 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %279, i64 %280, i8* %291, i64 %292, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #9, !noalias !7
  br i1 %293, label %349, label %294

294:                                              ; preds = %278
  %295 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %50, align 8, !noalias !7
  %296 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %51, align 8, !noalias !7
  %297 = icmp eq %"class.base::BasicStringPiece"* %295, %296
  %298 = ptrtoint %"class.base::BasicStringPiece"* %296 to i64
  br i1 %297, label %304, label %299

299:                                              ; preds = %294
  %300 = bitcast %"class.base::BasicStringPiece"* %295 to i8*
  %301 = bitcast %"class.base::BasicStringPiece"* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %301, i64 16, i1 false) #9
  %302 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %295, i64 1
  %303 = ptrtoint %"class.base::BasicStringPiece"* %302 to i64
  store i64 %303, i64* %83, align 8, !noalias !7
  br label %349

304:                                              ; preds = %294
  %305 = ptrtoint %"class.base::BasicStringPiece"* %295 to i64
  %306 = load i64, i64* %84, align 8, !noalias !7
  %307 = sub i64 %305, %306
  %308 = ashr exact i64 %307, 4
  %309 = add nsw i64 %308, 1
  %310 = icmp ugt i64 %309, 1152921504606846975
  br i1 %310, label %311, label %313

311:                                              ; preds = %304
  %312 = bitcast %"class.std::__1::vector.9"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %312) #11
  unreachable

313:                                              ; preds = %304
  %314 = sub i64 %298, %306
  %315 = ashr exact i64 %314, 4
  %316 = icmp ult i64 %315, 576460752303423487
  br i1 %316, label %317, label %325

317:                                              ; preds = %313
  %318 = ashr exact i64 %314, 3
  %319 = icmp ult i64 %318, %309
  %320 = select i1 %319, i64 %309, i64 %318
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %317
  %323 = icmp ugt i64 %320, 1152921504606846975
  br i1 %323, label %324, label %325

324:                                              ; preds = %322
  call void @abort() #11
  unreachable

325:                                              ; preds = %322, %313
  %326 = phi i64 [ %320, %322 ], [ 1152921504606846975, %313 ]
  %327 = shl i64 %326, 4
  %328 = call i8* @_Znwm(i64 %327) #10
  %329 = bitcast i8* %328 to %"class.base::BasicStringPiece"*
  br label %330

330:                                              ; preds = %325, %317
  %331 = phi i64 [ %326, %325 ], [ 0, %317 ]
  %332 = phi i8* [ %328, %325 ], [ null, %317 ]
  %333 = phi %"class.base::BasicStringPiece"* [ %329, %325 ], [ null, %317 ]
  %334 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %333, i64 %308
  %335 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %333, i64 %331
  %336 = ptrtoint %"class.base::BasicStringPiece"* %335 to i64
  %337 = bitcast %"class.base::BasicStringPiece"* %334 to i8*
  %338 = bitcast %"class.base::BasicStringPiece"* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %337, i8* align 8 %338, i64 16, i1 false) #9
  %339 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %334, i64 1
  %340 = ptrtoint %"class.base::BasicStringPiece"* %339 to i64
  %341 = ptrtoint %"class.base::BasicStringPiece"* %333 to i64
  %342 = icmp sgt i64 %307, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %330
  %344 = inttoptr i64 %306 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %332, i8* align 8 %344, i64 %307, i1 false) #9
  br label %345

345:                                              ; preds = %343, %330
  store i64 %341, i64* %84, align 8, !noalias !7
  store i64 %340, i64* %83, align 8, !noalias !7
  store i64 %336, i64* %85, align 8, !noalias !7
  %346 = icmp eq i64 %306, 0
  br i1 %346, label %349, label %347

347:                                              ; preds = %345
  %348 = inttoptr i64 %306 to i8*
  call void @_ZdlPv(i8* %348) #10
  br label %349

349:                                              ; preds = %347, %345, %299, %278, %259
  %350 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %261, i64 1
  %351 = icmp eq %"class.base::BasicStringPiece"* %350, %74
  br i1 %351, label %86, label %352

352:                                              ; preds = %349
  %353 = load i8, i8* %56, align 1, !noalias !7
  br label %259

354:                                              ; preds = %253, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9, !noalias !7
  %355 = load i8, i8* %66, align 1
  %356 = icmp slt i8 %355, 0
  %357 = load i64, i64* %20, align 8
  %358 = zext i8 %355 to i64
  %359 = select i1 %356, i64 %357, i64 %358
  %360 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %361 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %360, i64 0, i32 1, i32 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp slt i8 %362, 0
  %364 = load i64, i64* %46, align 8
  %365 = zext i8 %362 to i64
  %366 = select i1 %363, i64 %364, i64 %365
  %367 = icmp eq i64 %359, %366
  br i1 %367, label %368, label %396

368:                                              ; preds = %354
  %369 = load i8*, i8** %19, align 8
  %370 = select i1 %356, i8* %369, i8* %18
  %371 = load i8*, i8** %45, align 8
  %372 = select i1 %363, i8* %371, i8* %44
  %373 = icmp eq i64 %359, 0
  br i1 %356, label %380, label %374

374:                                              ; preds = %368
  br i1 %373, label %416, label %375

375:                                              ; preds = %374
  %376 = ptrtoint i8* %369 to i64
  %377 = trunc i64 %376 to i8
  %378 = load i8, i8* %372, align 1
  %379 = icmp eq i8 %378, %377
  br i1 %379, label %381, label %396

380:                                              ; preds = %368
  br i1 %373, label %416, label %393

381:                                              ; preds = %375, %388
  %382 = phi i64 [ %385, %388 ], [ %358, %375 ]
  %383 = phi i8* [ %386, %388 ], [ %18, %375 ]
  %384 = phi i8* [ %389, %388 ], [ %372, %375 ]
  %385 = add i64 %382, -1
  %386 = getelementptr inbounds i8, i8* %383, i64 1
  %387 = icmp eq i64 %385, 0
  br i1 %387, label %416, label %388

388:                                              ; preds = %381
  %389 = getelementptr inbounds i8, i8* %384, i64 1
  %390 = load i8, i8* %386, align 1
  %391 = load i8, i8* %389, align 1
  %392 = icmp eq i8 %390, %391
  br i1 %392, label %381, label %396

393:                                              ; preds = %380
  %394 = call i32 @bcmp(i8* %370, i8* %372, i64 %359) #9
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %416, label %396

396:                                              ; preds = %388, %375, %354, %393
  %397 = bitcast %"class.url::StringPieceReplacements"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %397) #9
  %398 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %12, i64 0, i32 0, i32 1
  %399 = bitcast %"struct.url::Parsed"* %398 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %397, i8 0, i64 64, i1 false) #9
  %400 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %12, i64 0, i32 0, i32 1
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %400) #9
  %401 = load i8, i8* %361, align 1
  %402 = icmp slt i8 %401, 0
  %403 = load i8*, i8** %45, align 8
  %404 = select i1 %402, i8* %403, i8* %44
  %405 = load i64, i64* %46, align 8
  %406 = zext i8 %401 to i64
  %407 = select i1 %402, i64 %405, i64 %406
  %408 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %12, i64 0, i32 0, i32 0, i32 6
  store i8* %404, i8** %408, align 8
  %409 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %12, i64 0, i32 0, i32 1, i32 6
  %410 = bitcast %"struct.url::Component"* %409 to i64*
  %411 = shl i64 %407, 32
  store i64 %411, i64* %410, align 8
  %412 = bitcast %class.GURL* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %412) #9
  %413 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %12, i64 0, i32 0
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* nonnull sret %13, %class.GURL* %0, %"class.url::Replacements"* nonnull dereferenceable(144) %413) #9
  %414 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %1, %class.GURL* nonnull dereferenceable(120) %13) #9
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %412) #9
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %400) #9
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %397) #9
  %415 = load i8, i8* %361, align 1
  br label %416

416:                                              ; preds = %381, %374, %380, %393, %396
  %417 = phi i8 [ %362, %374 ], [ %362, %380 ], [ %362, %393 ], [ %415, %396 ], [ %362, %381 ]
  %418 = icmp slt i8 %417, 0
  br i1 %418, label %419, label %421

419:                                              ; preds = %416
  %420 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %420) #10
  br label %421

421:                                              ; preds = %416, %419
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #9
  %422 = load i8, i8* %66, align 1
  %423 = icmp slt i8 %422, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %421
  %425 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %425) #10
  br label %426

426:                                              ; preds = %421, %424
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  br label %427

427:                                              ; preds = %15, %426
  ret void
}

declare zeroext i1 @_ZN11google_util17IsGoogleSearchUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i1 @_ZN11google_util19IsGoogleHomePageUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret, %class.GURL*, %"class.url::Replacements"* dereferenceable(144)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16safe_search_util20ForceYouTubeRestrictERK4GURLPN3net18HttpRequestHeadersENS_19YouTubeRestrictModeE(%class.GURL* dereferenceable(120), %"class.net::HttpRequestHeaders"*, i32) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN11google_util18IsYoutubeDomainUrlERK4GURLNS_19SubdomainPermissionENS_14PortPermissionE(%class.GURL* dereferenceable(120) %0, i32 0, i32 1) #9
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  switch i32 %2, label %8 [
    i32 2, label %7
    i32 1, label %6
  ]

6:                                                ; preds = %5
  tail call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.1) #9
  br label %8

7:                                                ; preds = %5
  tail call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) @.ref.tmp.3) #9
  br label %8

8:                                                ; preds = %3, %5, %7, %6
  ret void
}

declare zeroext i1 @_ZN11google_util18IsYoutubeDomainUrlERK4GURLNS_19SubdomainPermissionENS_14PortPermissionE(%class.GURL* dereferenceable(120), i32, i32) local_unnamed_addr #1

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.9"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base10JoinStringENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEES5_(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

declare i64 @_ZN4base8internal4findENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL5queryEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL5queryEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN12_GLOBAL__N_123AddSafeSearchParametersERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE: argument 0"}
!9 = distinct !{!9, !"_ZN12_GLOBAL__N_123AddSafeSearchParametersERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE"}
