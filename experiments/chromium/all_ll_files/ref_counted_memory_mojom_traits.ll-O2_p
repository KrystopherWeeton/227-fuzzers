; ModuleID = '../../mojo/public/cpp/base/ref_counted_memory_mojom_traits.cc'
source_filename = "../../mojo/public/cpp/base/ref_counted_memory_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.2" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%class.scoped_refptr = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo_base::mojom::internal::RefCountedMemory_Data" = type { %"struct.mojo::internal::StructHeader", %"class.mojo_base::mojom::internal::BigBuffer_Data" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.mojo_base::mojom::internal::BigBuffer_Data" = type { i32, i32, %"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" }
%"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.7", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.8"*, %"class.mojo::ScopedHandleBase.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.mojo::ScopedHandleBase.8" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.mojo::ScopedHandleBase.8"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.15" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.24, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.26", [4 x i8] }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.23", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.24 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.25" }>
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector.32" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i8*, i8*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem" }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN9mojo_base5mojom24RefCountedMemoryDataViewE13scoped_refptrIN4base16RefCountedMemoryEEE4dataERKS7_(%"class.mojo_base::BigBuffer"* noalias sret, %class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %5 = bitcast %"class.base::RefCountedMemory"* %4 to i8* (%"class.base::RefCountedMemory"*)***
  %6 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %5, align 8
  %7 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %6, align 8
  %8 = tail call i8* %7(%"class.base::RefCountedMemory"* %4) #6
  %9 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  %10 = bitcast %"class.base::RefCountedMemory"* %9 to i64 (%"class.base::RefCountedMemory"*)***
  %11 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %11, i64 1
  %13 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %12, align 8
  %14 = tail call i64 %13(%"class.base::RefCountedMemory"* %9) #6
  tail call void @_ZN9mojo_base9BigBufferC1EN4base4spanIKhLm18446744073709551615EEE(%"class.mojo_base::BigBuffer"* %0, i64 %14, i8* %8) #6
  ret void
}

declare void @_ZN9mojo_base9BigBufferC1EN4base4spanIKhLm18446744073709551615EEE(%"class.mojo_base::BigBuffer"*, i64, i8*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24RefCountedMemoryDataViewE13scoped_refptrIN4base16RefCountedMemoryEEE6IsNullERKS7_(%class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %2, align 8
  %4 = icmp eq %"class.base::RefCountedMemory"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN9mojo_base5mojom24RefCountedMemoryDataViewE13scoped_refptrIN4base16RefCountedMemoryEEE9SetToNullEPS7_(%class.scoped_refptr* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.scoped_refptr* %0 to i64*
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %4 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %3, align 8
  store i64 0, i64* %2, align 8
  %5 = icmp eq %"class.base::RefCountedMemory"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::RefCountedMemory"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.base::RefCountedMemory"*)***
  %15 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %15, i64 3
  %17 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %16, align 8
  tail call void %17(%"class.base::RefCountedMemory"* nonnull %13) #6
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom24RefCountedMemoryDataViewE13scoped_refptrIN4base16RefCountedMemoryEEE4ReadES3_PS7_(%"class.mojo_base::mojom::internal::RefCountedMemory_Data"*, %"class.mojo::Message"*, %class.scoped_refptr* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo_base::BigBuffer", align 8
  %5 = bitcast %"class.mojo_base::BigBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 56, i1 false)
  call void @_ZN9mojo_base9BigBufferC1Ev(%"class.mojo_base::BigBuffer"* nonnull %4) #6
  %6 = getelementptr inbounds %"class.mojo_base::mojom::internal::RefCountedMemory_Data", %"class.mojo_base::mojom::internal::RefCountedMemory_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.mojo_base::mojom::internal::BigBuffer_Data", %"class.mojo_base::mojom::internal::BigBuffer_Data"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = call zeroext i1 @_ZN4mojo11UnionTraitsIN9mojo_base5mojom17BigBufferDataViewENS1_9BigBufferEE4ReadES3_PS4_(%"class.mojo_base::mojom::internal::BigBuffer_Data"* nonnull %6, %"class.mojo::Message"* %1, %"class.mojo_base::BigBuffer"* nonnull %4) #6
  br i1 %11, label %12, label %37

12:                                               ; preds = %3, %10
  %13 = call i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* nonnull %4) #6
  %14 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* nonnull %4) #6
  %15 = call i8* @_Znwm(i64 40) #7
  %16 = bitcast i8* %15 to %"class.base::RefCountedBytes"*
  call void @_ZN4base15RefCountedBytesC1EPKhm(%"class.base::RefCountedBytes"* nonnull %16, i8* %13, i64 %14) #6
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to i32*
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  %20 = ptrtoint i8* %15 to i64
  %21 = bitcast %class.scoped_refptr* %2 to i64*
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %23 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %22, align 8
  store i64 %20, i64* %21, align 8
  %24 = icmp eq %"class.base::RefCountedMemory"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe"* %31 to %"class.base::RefCountedMemory"*
  %33 = bitcast %"class.base::RefCountedThreadSafe"* %31 to void (%"class.base::RefCountedMemory"*)***
  %34 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %34, i64 3
  %36 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %35, align 8
  call void %36(%"class.base::RefCountedMemory"* nonnull %32) #6
  br label %37

37:                                               ; preds = %12, %25, %30, %10
  %38 = phi i1 [ false, %10 ], [ true, %30 ], [ true, %25 ], [ true, %12 ]
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #6
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN9mojo_base9BigBufferC1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #1

declare i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #4

declare zeroext i1 @_ZN4mojo11UnionTraitsIN9mojo_base5mojom17BigBufferDataViewENS1_9BigBufferEE4ReadES3_PS4_(%"class.mojo_base::mojom::internal::BigBuffer_Data"*, %"class.mojo::Message"*, %"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN4base15RefCountedBytesC1EPKhm(%"class.base::RefCountedBytes"*, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
