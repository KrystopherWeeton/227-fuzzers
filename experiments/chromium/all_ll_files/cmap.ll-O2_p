; ModuleID = '../../third_party/ots/src/src/cmap.cc'
source_filename = "../../third_party/ots/src/src/cmap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeCMAP" = type { %"class.ots::Table.base", i8*, i64, i64, %"class.std::__1::vector", i8*, i64, i8*, i64, %"class.std::__1::vector.43", %"class.std::__1::vector.43", %"class.std::__1::vector.50" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"class.std::__1::__compressed_pair.38" }
%"struct.ots::OpenTypeCMAPSubtableVSRecord" = type { i32, i32, i32, %"class.std::__1::vector.24", %"class.std::__1::vector.31" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"class.std::__1::__compressed_pair.26" }
%"struct.ots::OpenTypeCMAPSubtableVSRange" = type { i32, i8 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.ots::OpenTypeCMAPSubtableVSRange"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"class.std::__1::__compressed_pair.33" }
%"struct.ots::OpenTypeCMAPSubtableVSMapping" = type { i32, i16 }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.ots::OpenTypeCMAPSubtableVSMapping"* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.ots::OpenTypeCMAPSubtableVSRecord"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"*, %"class.std::__1::__compressed_pair.45" }
%"struct.ots::OpenTypeCMAPSubtableRange" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.ots::OpenTypeCMAPSubtableRange"* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { i8*, i8*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"struct.(anonymous namespace)::Subtable314Range" = type { i16, i16, i16, i16, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__less.115" = type { i8 }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"class.std::__1::__compressed_pair.66" }
%"struct.(anonymous namespace)::CMAPSubtableHeader" = type { i16, i16, i32, i16, i32, i32 }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.(anonymous namespace)::CMAPSubtableHeader"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.71" }
%"class.std::__1::__tree.71" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.80" = type { %"class.std::__1::__vector_base.81" }
%"class.std::__1::__vector_base.81" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.82" }
%"struct.std::__1::pair" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.89", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.89" = type { i32, i32 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots12OpenTypeCMAPD2Ev = comdat any

$_ZN3ots12OpenTypeCMAPD0Ev = comdat any

$_ZNSt3__16vectorIN3ots25OpenTypeCMAPSubtableRangeENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3ots28OpenTypeCMAPSubtableVSRecordENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3ots27OpenTypeCMAPSubtableVSRangeENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3ots29OpenTypeCMAPSubtableVSMappingENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEbT0_S7_T_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Required OS/2 table missing\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"Can't read 4 bytes at start of cmap format 4 subtable\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"Can't read language\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Languages should be 0 (%d)\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Failed to read subcmap structure\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"Bad subcmap structure\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"Segcount < 1 (%d)\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"expected search range != search range (%d != %d)\00", align 1
@.str.8 = private unnamed_addr constant [50 x i8] c"entry selector != log2(segement count) (%d != %d)\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"unexpected range shift (%d != %d)\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"Failed to read segment %d\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"Failed to read cmap subtable segment padding\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"Non zero cmap subtable segment padding (%d)\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"Failed to read segment start range %d\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"Failed to read segment delta %d\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Failed to read segment range offset %d\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"bad id_range_offset\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"Bad segment offset (%d)\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"multiple 0xffff terminators found\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"Out of order end range (%d <= %d)\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"out of order start range (%d <= %d)\00", align 1
@.str.21 = private unnamed_addr constant [59 x i8] c"Final segment start and end must be 0xFFFF (0x%04X-0x%04X)\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"Range glyph reference too high (%d > %d)\00", align 1
@.str.23 = private unnamed_addr constant [31 x i8] c"bad glyph id offset (%d > %ld)\00", align 1
@.str.24 = private unnamed_addr constant [54 x i8] c"Unknown cmap subtable type (platform=%d, encoding=%d)\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"failed to skip the first 8 bytes of format 12 subtable\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"can't read format 12 subtable language\00", align 1
@.str.27 = private unnamed_addr constant [48 x i8] c"format 12 subtable language should be zero (%d)\00", align 1
@.str.28 = private unnamed_addr constant [47 x i8] c"can't read number of format 12 subtable groups\00", align 1
@.str.29 = private unnamed_addr constant [38 x i8] c"Bad format 12 subtable group count %d\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"can't read format 12 subtable group\00", align 1
@.str.31 = private unnamed_addr constant [87 x i8] c"bad format 12 subtable group (startCharCode=0x%4X, endCharCode=0x%4X, startGlyphID=%d)\00", align 1
@.str.32 = private unnamed_addr constant [74 x i8] c"format 12 subtable group endCharCode before startCharCode (0x%4X < 0x%4X)\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"bad format 12 subtable group startGlyphID (%d)\00", align 1
@.str.34 = private unnamed_addr constant [101 x i8] c"out of order format 12 subtable group (startCharCode=0x%4X <= startCharCode=0x%4X of previous group)\00", align 1
@.str.35 = private unnamed_addr constant [99 x i8] c"overlapping format 12 subtable groups (startCharCode=0x%4X <= endCharCode=0x%4X of previous group)\00", align 1
@.str.36 = private unnamed_addr constant [25 x i8] c"Bad cmap subtable length\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"Can't read cmap subtable language\00", align 1
@.str.38 = private unnamed_addr constant [48 x i8] c"Cmap subtable language should be zero but is %d\00", align 1
@.str.39 = private unnamed_addr constant [47 x i8] c"Can't read number of groups in a cmap subtable\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"Bad format 13 subtable group count %d\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"Can't read subrange structure in a cmap subtable\00", align 1
@.str.42 = private unnamed_addr constant [66 x i8] c"Bad subrange with start_range=%d, end_range=%d, start_glyph_id=%d\00", align 1
@.str.43 = private unnamed_addr constant [46 x i8] c"Subrange starting glyph id too high (%d > %d)\00", align 1
@.str.44 = private unnamed_addr constant [39 x i8] c"Overlapping subrange starts (%d >= %d)\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"Overlapping subranges (%d <= %d)\00", align 1
@.str.46 = private unnamed_addr constant [34 x i8] c"Can't read start of cmap subtable\00", align 1
@.str.47 = private unnamed_addr constant [46 x i8] c"Can't read number of records in cmap subtable\00", align 1
@.str.48 = private unnamed_addr constant [40 x i8] c"Bad format 14 subtable records count %d\00", align 1
@.str.49 = private unnamed_addr constant [57 x i8] c"Can't read record structure of record %d in cmap subtale\00", align 1
@.str.50 = private unnamed_addr constant [50 x i8] c"Bad record variation selector (%04X) in record %i\00", align 1
@.str.51 = private unnamed_addr constant [60 x i8] c"Out of order variation selector (%04X >= %04X) in record %d\00", align 1
@.str.52 = private unnamed_addr constant [51 x i8] c"No default aoffset in variation selector record %d\00", align 1
@.str.53 = private unnamed_addr constant [49 x i8] c"Default offset too high (%d >= %ld) in record %d\00", align 1
@.str.54 = private unnamed_addr constant [53 x i8] c"Non default offset too high (%d >= %ld) in record %d\00", align 1
@.str.55 = private unnamed_addr constant [41 x i8] c"Can't read number of ranges in record %d\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"Bad number of ranges (%d) in record %d\00", align 1
@.str.57 = private unnamed_addr constant [54 x i8] c"Can't read range info in variation selector record %d\00", align 1
@.str.58 = private unnamed_addr constant [66 x i8] c"Bad Unicode value *%04X) in variation selector range %d record %d\00", align 1
@.str.59 = private unnamed_addr constant [62 x i8] c"Can't read number of mappings in variation selector record %d\00", align 1
@.str.60 = private unnamed_addr constant [60 x i8] c"Bad number of mappings (%d) in variation selector record %d\00", align 1
@.str.61 = private unnamed_addr constant [54 x i8] c"Can't read mapping %d in variation selector record %d\00", align 1
@.str.62 = private unnamed_addr constant [64 x i8] c"Bad mapping (%04X -> %d) in mapping %d of variation selector %d\00", align 1
@.str.63 = private unnamed_addr constant [33 x i8] c"Bad subtable offset (%ld != %ld)\00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"Bad cmap subtable\00", align 1
@.str.65 = private unnamed_addr constant [37 x i8] c"Can't read language in cmap subtable\00", align 1
@.str.66 = private unnamed_addr constant [31 x i8] c"language id should be zero: %u\00", align 1
@.str.67 = private unnamed_addr constant [51 x i8] c"Can't read glyph id at array[%ld] in cmap subtable\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"Can't read structure of cmap\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"Non zero cmap version (%d)\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"No subtables in cmap!\00", align 1
@__const._ZN3ots12OpenTypeCMAP5ParseEPKhm.subt = private unnamed_addr constant { i16, i16, i32, i16, [2 x i8], i32, i32 } { i16 -21846, i16 -21846, i32 -1431655766, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766 }, align 4
@.str.71 = private unnamed_addr constant [49 x i8] c"Can't read subtable information cmap subtable %d\00", align 1
@.str.72 = private unnamed_addr constant [40 x i8] c"Bad subtable offset in cmap subtable %d\00", align 1
@.str.73 = private unnamed_addr constant [45 x i8] c"Bad subtable offset (%d) in cmap subtable %d\00", align 1
@.str.74 = private unnamed_addr constant [42 x i8] c"Can't read cmap subtable header format %d\00", align 1
@.str.75 = private unnamed_addr constant [35 x i8] c"Can't read cmap subtable %d length\00", align 1
@.str.76 = private unnamed_addr constant [37 x i8] c"Can't read cmap subtable %d language\00", align 1
@.str.77 = private unnamed_addr constant [31 x i8] c"Bad cmap subtable %d structure\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"Can read cmap subtable %d length\00", align 1
@.str.79 = private unnamed_addr constant [135 x i8] c"subtable %d with platform ID %d, encoding ID %d, language ID %d following subtable with platform ID %d, encoding ID %d, language ID %d\00", align 1
@.str.80 = private unnamed_addr constant [28 x i8] c"Bad cmap subtable %d length\00", align 1
@.str.81 = private unnamed_addr constant [39 x i8] c"Over long cmap subtable %d @ %d for %d\00", align 1
@.str.82 = private unnamed_addr constant [27 x i8] c"Excessive overlap count %d\00", align 1
@.str.83 = private unnamed_addr constant [39 x i8] c"No maxp table in font! Needed by cmap.\00", align 1
@.str.84 = private unnamed_addr constant [42 x i8] c"Failed to parse format 4 cmap subtable %d\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"Failed to parse format 12 cmap subtable %d\00", align 1
@.str.86 = private unnamed_addr constant [43 x i8] c"Failed to parse format 14 cmap subtable %d\00", align 1
@.str.87 = private unnamed_addr constant [34 x i8] c"no supported subtables were found\00", align 1
@_ZTVN3ots12OpenTypeCMAPE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeCMAP"*)* @_ZN3ots12OpenTypeCMAPD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeCMAP"*)* @_ZN3ots12OpenTypeCMAPD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeCMAP"*, i8*, i64)* @_ZN3ots12OpenTypeCMAP5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeCMAP"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeCMAP9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP12ParseFormat4EiiPKhmt(%"class.ots::OpenTypeCMAP"*, i32, i32, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %7 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %8 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 0, i32 3
  %9 = load %"struct.ots::Font"*, %"struct.ots::Font"** %8, align 8
  %10 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %9, i32 1330851634) #9
  %11 = icmp eq %"class.ots::Table"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #9
  br label %373

14:                                               ; preds = %6
  %15 = icmp ult i64 %4, 4
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %373

18:                                               ; preds = %14
  %19 = icmp ult i64 %4, 6
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %373

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %3, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 1
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = tail call i16 @llvm.bswap.i16(i16 %25) #9
  %29 = zext i16 %28 to i32
  %30 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %29) #9
  br label %373

31:                                               ; preds = %22
  %32 = icmp ult i64 %4, 8
  br i1 %32, label %51, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds i8, i8* %3, i64 6
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #9
  %38 = icmp ult i64 %4, 10
  br i1 %38, label %51, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %3, i64 8
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = tail call i16 @llvm.bswap.i16(i16 %42) #9
  %44 = icmp ult i64 %4, 12
  br i1 %44, label %51, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds i8, i8* %3, i64 10
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = tail call i16 @llvm.bswap.i16(i16 %48) #9
  %50 = icmp ult i64 %4, 14
  br i1 %50, label %51, label %53

51:                                               ; preds = %45, %39, %33, %31
  %52 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %373

53:                                               ; preds = %45
  %54 = getelementptr inbounds i8, i8* %3, i64 12
  %55 = bitcast i8* %54 to i16*
  %56 = load i16, i16* %55, align 1
  %57 = tail call i16 @llvm.bswap.i16(i16 %56) #9
  %58 = or i16 %43, %37
  %59 = and i16 %58, 1
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %53
  %62 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %373

63:                                               ; preds = %53
  %64 = lshr i16 %37, 1
  %65 = zext i16 %64 to i32
  %66 = icmp eq i16 %64, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i32 %65) #9
  br label %373

69:                                               ; preds = %63, %69
  %70 = phi i32 [ %71, %69 ], [ 0, %63 ]
  %71 = add i32 %70, 1
  %72 = lshr i32 %65, %71
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %69

74:                                               ; preds = %69
  %75 = shl i32 2, %70
  %76 = and i32 %75, 65535
  %77 = zext i16 %43 to i32
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i32 %76, i32 %77) #9
  br label %373

81:                                               ; preds = %74
  %82 = zext i16 %49 to i32
  %83 = icmp eq i32 %70, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), i32 %82, i32 %70) #9
  br label %373

86:                                               ; preds = %81
  %87 = sub i16 %37, %43
  %88 = icmp eq i16 %57, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = zext i16 %57 to i32
  %91 = zext i16 %87 to i32
  %92 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %90, i32 %91) #9
  br label %373

93:                                               ; preds = %86
  %94 = zext i16 %64 to i64
  %95 = mul nuw nsw i64 %94, 12
  %96 = tail call i8* @_Znwm(i64 %95) #10
  %97 = bitcast i8* %96 to %"struct.(anonymous namespace)::Subtable314Range"*
  %98 = ptrtoint i8* %96 to i64
  %99 = add nsw i64 %94, -1
  %100 = getelementptr %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %99, i32 0
  %101 = ptrtoint i16* %100 to i64
  %102 = sub i64 %101, %98
  %103 = urem i64 %102, 12
  %104 = add i64 %102, 12
  %105 = sub i64 %104, %103
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %96, i8 0, i64 %105, i1 false) #9
  %106 = icmp ult i64 %4, 16
  %107 = zext i16 %64 to i64
  br label %108

108:                                              ; preds = %113, %93
  %109 = phi i64 [ 0, %93 ], [ %119, %113 ]
  %110 = phi i1 [ %106, %93 ], [ %121, %113 ]
  %111 = phi i64 [ 16, %93 ], [ %120, %113 ]
  %112 = phi i64 [ 14, %93 ], [ %111, %113 ]
  br i1 %110, label %123, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %109, i32 1
  %115 = getelementptr inbounds i8, i8* %3, i64 %112
  %116 = bitcast i8* %115 to i16*
  %117 = load i16, i16* %116, align 1
  %118 = tail call i16 @llvm.bswap.i16(i16 %117) #9
  store i16 %118, i16* %114, align 2
  %119 = add nuw nsw i64 %109, 1
  %120 = add nuw nsw i64 %111, 2
  %121 = icmp ugt i64 %120, %4
  %122 = icmp eq i64 %119, %107
  br i1 %122, label %126, label %108

123:                                              ; preds = %108
  %124 = trunc i64 %109 to i32
  %125 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i32 %124) #9
  br label %371

126:                                              ; preds = %113
  br i1 %121, label %127, label %129

127:                                              ; preds = %126
  %128 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %371

129:                                              ; preds = %126
  %130 = getelementptr inbounds i8, i8* %3, i64 %111
  %131 = bitcast i8* %130 to i16*
  %132 = load i16, i16* %131, align 1
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = zext i16 %64 to i64
  br label %142

136:                                              ; preds = %129
  %137 = tail call i16 @llvm.bswap.i16(i16 %132) #9
  %138 = zext i16 %137 to i32
  %139 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i32 %138) #9
  br label %371

140:                                              ; preds = %150
  %141 = zext i16 %64 to i64
  br label %162

142:                                              ; preds = %150, %134
  %143 = phi i64 [ 0, %134 ], [ %156, %150 ]
  %144 = phi i64 [ %120, %134 ], [ %145, %150 ]
  %145 = add nuw nsw i64 %144, 2
  %146 = icmp ugt i64 %145, %4
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = trunc i64 %143 to i32
  %149 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i32 %148) #9
  br label %371

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %143, i32 0
  %152 = getelementptr inbounds i8, i8* %3, i64 %144
  %153 = bitcast i8* %152 to i16*
  %154 = load i16, i16* %153, align 1
  %155 = tail call i16 @llvm.bswap.i16(i16 %154) #9
  store i16 %155, i16* %151, align 2
  %156 = add nuw nsw i64 %143, 1
  %157 = icmp eq i64 %156, %135
  br i1 %157, label %140, label %142

158:                                              ; preds = %170
  %159 = add nsw i32 %65, -1
  %160 = zext i32 %159 to i64
  %161 = zext i16 %64 to i64
  br label %192

162:                                              ; preds = %170, %140
  %163 = phi i64 [ 0, %140 ], [ %176, %170 ]
  %164 = phi i64 [ %145, %140 ], [ %165, %170 ]
  %165 = add nuw nsw i64 %164, 2
  %166 = icmp ugt i64 %165, %4
  br i1 %166, label %167, label %170

167:                                              ; preds = %162
  %168 = trunc i64 %163 to i32
  %169 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i32 %168) #9
  br label %371

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %163, i32 2
  %172 = getelementptr inbounds i8, i8* %3, i64 %164
  %173 = bitcast i8* %172 to i16*
  %174 = load i16, i16* %173, align 1
  %175 = tail call i16 @llvm.bswap.i16(i16 %174) #9
  store i16 %175, i16* %171, align 2
  %176 = add nuw nsw i64 %163, 1
  %177 = icmp eq i64 %176, %141
  br i1 %177, label %158, label %162

178:                                              ; preds = %217
  %179 = icmp ugt i16 %37, 3
  br i1 %179, label %180, label %276

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %10, i64 0, i32 5, i64 69
  %182 = bitcast i8* %181 to i16*
  %183 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %10, i64 0, i32 5, i64 71
  %184 = bitcast i8* %183 to i16*
  %185 = zext i32 %159 to i64
  %186 = zext i16 %64 to i64
  %187 = add nsw i64 %185, -1
  %188 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %187, i32 0
  %189 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %187, i32 1
  %190 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %185, i32 0
  %191 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %185, i32 1
  br label %220

192:                                              ; preds = %217, %158
  %193 = phi i64 [ 0, %158 ], [ %218, %217 ]
  %194 = phi i64 [ %165, %158 ], [ %198, %217 ]
  %195 = trunc i64 %194 to i32
  %196 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %193, i32 4
  store i32 %195, i32* %196, align 4
  %197 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %193, i32 3
  %198 = add nuw nsw i64 %194, 2
  %199 = icmp ugt i64 %198, %4
  br i1 %199, label %200, label %203

200:                                              ; preds = %192
  %201 = trunc i64 %193 to i32
  %202 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i32 %201) #9
  br label %371

203:                                              ; preds = %192
  %204 = getelementptr inbounds i8, i8* %3, i64 %194
  %205 = bitcast i8* %204 to i16*
  %206 = load i16, i16* %205, align 1
  %207 = tail call i16 @llvm.bswap.i16(i16 %206) #9
  store i16 %207, i16* %197, align 2
  %208 = and i16 %207, 1
  %209 = icmp eq i16 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %203
  %211 = icmp eq i64 %193, %160
  br i1 %211, label %212, label %214

212:                                              ; preds = %210
  %213 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0)) #9
  store i16 0, i16* %197, align 2
  br label %217

214:                                              ; preds = %210
  %215 = zext i16 %207 to i32
  %216 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i32 %215) #9
  br label %371

217:                                              ; preds = %203, %212
  %218 = add nuw nsw i64 %193, 1
  %219 = icmp eq i64 %218, %161
  br i1 %219, label %178, label %192

220:                                              ; preds = %180, %273
  %221 = phi i64 [ 1, %180 ], [ %274, %273 ]
  %222 = icmp eq i64 %221, %185
  br i1 %222, label %223, label %237

223:                                              ; preds = %220
  %224 = load i16, i16* %188, align 4
  %225 = icmp eq i16 %224, -1
  br i1 %225, label %226, label %237

226:                                              ; preds = %223
  %227 = load i16, i16* %189, align 2
  %228 = icmp eq i16 %227, -1
  br i1 %228, label %229, label %237

229:                                              ; preds = %226
  %230 = load i16, i16* %190, align 4
  %231 = icmp eq i16 %230, -1
  br i1 %231, label %232, label %237

232:                                              ; preds = %229
  %233 = load i16, i16* %191, align 2
  %234 = icmp eq i16 %233, -1
  br i1 %234, label %235, label %237

235:                                              ; preds = %232
  %236 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0)) #9
  br label %273

237:                                              ; preds = %232, %229, %226, %223, %220
  %238 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %221, i32 1
  %239 = load i16, i16* %238, align 2
  %240 = add nsw i64 %221, -1
  %241 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %240, i32 1
  %242 = load i16, i16* %241, align 2
  %243 = icmp ugt i16 %239, %242
  br i1 %243, label %248, label %244

244:                                              ; preds = %237
  %245 = zext i16 %239 to i32
  %246 = zext i16 %242 to i32
  %247 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0), i32 %245, i32 %246) #9
  br label %371

248:                                              ; preds = %237
  %249 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %221, i32 0
  %250 = load i16, i16* %249, align 4
  %251 = icmp ugt i16 %250, %242
  br i1 %251, label %256, label %252

252:                                              ; preds = %248
  %253 = zext i16 %250 to i32
  %254 = zext i16 %242 to i32
  %255 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0), i32 %253, i32 %254) #9
  br label %371

256:                                              ; preds = %248
  %257 = load i16, i16* %182, align 2
  %258 = icmp ne i16 %257, -1
  %259 = icmp ne i16 %250, -1
  %260 = and i1 %259, %258
  %261 = icmp ugt i16 %257, %250
  %262 = and i1 %261, %260
  br i1 %262, label %263, label %264

263:                                              ; preds = %256
  store i16 %250, i16* %182, align 2
  br label %264

264:                                              ; preds = %256, %263
  %265 = load i16, i16* %184, align 4
  %266 = icmp eq i16 %265, -1
  br i1 %266, label %273, label %267

267:                                              ; preds = %264
  %268 = load i16, i16* %238, align 2
  %269 = icmp ne i16 %268, -1
  %270 = icmp ult i16 %265, %268
  %271 = and i1 %269, %270
  br i1 %271, label %272, label %273

272:                                              ; preds = %267
  store i16 %268, i16* %184, align 4
  br label %273

273:                                              ; preds = %267, %264, %272, %235
  %274 = add nuw nsw i64 %221, 1
  %275 = icmp ult i64 %274, %186
  br i1 %275, label %220, label %276

276:                                              ; preds = %273, %178
  %277 = sext i32 %159 to i64
  %278 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %277, i32 0
  %279 = load i16, i16* %278, align 4
  %280 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %277, i32 1
  %281 = load i16, i16* %280, align 2
  %282 = and i16 %279, %281
  %283 = icmp eq i16 %282, -1
  br i1 %283, label %284, label %286

284:                                              ; preds = %276
  %285 = zext i16 %64 to i64
  br label %290

286:                                              ; preds = %276
  %287 = zext i16 %279 to i32
  %288 = zext i16 %281 to i32
  %289 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.21, i64 0, i64 0), i32 %287, i32 %288) #9
  br label %371

290:                                              ; preds = %346, %284
  %291 = phi i64 [ 0, %284 ], [ %347, %346 ]
  %292 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %291, i32 0
  %293 = load i16, i16* %292, align 4
  %294 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %291, i32 1
  %295 = load i16, i16* %294, align 2
  %296 = icmp ugt i16 %293, %295
  br i1 %296, label %346, label %297

297:                                              ; preds = %290
  %298 = zext i16 %293 to i32
  %299 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %291, i32 3
  %300 = load i16, i16* %299, align 2
  %301 = icmp eq i16 %300, 0
  %302 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %291, i32 4
  %303 = zext i16 %300 to i32
  %304 = getelementptr inbounds %"struct.(anonymous namespace)::Subtable314Range", %"struct.(anonymous namespace)::Subtable314Range"* %97, i64 %291, i32 2
  %305 = zext i16 %295 to i32
  br label %306

306:                                              ; preds = %343, %297
  %307 = phi i32 [ %298, %297 ], [ %344, %343 ]
  br i1 %301, label %308, label %318

308:                                              ; preds = %306
  %309 = load i16, i16* %304, align 4
  %310 = trunc i32 %307 to i16
  %311 = add i16 %309, %310
  %312 = icmp ult i16 %311, %5
  br i1 %312, label %343, label %313

313:                                              ; preds = %308
  %314 = zext i16 %311 to i32
  %315 = zext i16 %5 to i32
  %316 = add nsw i32 %315, -1
  %317 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0), i32 %314, i32 %316) #9
  br label %371

318:                                              ; preds = %306
  %319 = trunc i32 %307 to i16
  %320 = sub i16 %319, %293
  %321 = load i32, i32* %302, align 4
  %322 = add i32 %321, %303
  %323 = zext i16 %320 to i32
  %324 = shl nuw nsw i32 %323, 1
  %325 = add i32 %322, %324
  %326 = add i32 %325, 1
  %327 = zext i32 %326 to i64
  %328 = icmp ult i64 %327, %4
  br i1 %328, label %331, label %329

329:                                              ; preds = %318
  %330 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0), i32 %325, i64 %4) #9
  br label %371

331:                                              ; preds = %318
  %332 = zext i32 %325 to i64
  %333 = getelementptr inbounds i8, i8* %3, i64 %332
  %334 = bitcast i8* %333 to i16*
  %335 = load i16, i16* %334, align 1
  %336 = tail call i16 @llvm.bswap.i16(i16 %335) #9
  %337 = icmp ult i16 %336, %5
  br i1 %337, label %343, label %338

338:                                              ; preds = %331
  %339 = zext i16 %336 to i32
  %340 = zext i16 %5 to i32
  %341 = add nsw i32 %340, -1
  %342 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0), i32 %339, i32 %341) #9
  br label %371

343:                                              ; preds = %308, %331
  %344 = add nuw nsw i32 %307, 1
  %345 = icmp ult i32 %307, %305
  br i1 %345, label %306, label %346

346:                                              ; preds = %343, %290
  %347 = add nuw nsw i64 %291, 1
  %348 = icmp eq i64 %347, %285
  br i1 %348, label %349, label %290

349:                                              ; preds = %346
  %350 = icmp eq i32 %1, 3
  %351 = icmp eq i32 %2, 0
  %352 = and i1 %350, %351
  br i1 %352, label %353, label %356

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 5
  store i8* %3, i8** %354, align 8
  %355 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 6
  store i64 %4, i64* %355, align 8
  br label %371

356:                                              ; preds = %349
  %357 = icmp eq i32 %2, 1
  %358 = and i1 %350, %357
  br i1 %358, label %359, label %362

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 7
  store i8* %3, i8** %360, align 8
  %361 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 8
  store i64 %4, i64* %361, align 8
  br label %371

362:                                              ; preds = %356
  %363 = icmp eq i32 %1, 0
  %364 = icmp eq i32 %2, 3
  %365 = and i1 %363, %364
  br i1 %365, label %366, label %369

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 1
  store i8* %3, i8** %367, align 8
  %368 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 2
  store i64 %4, i64* %368, align 8
  br label %371

369:                                              ; preds = %362
  %370 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.24, i64 0, i64 0), i32 %1, i32 %2) #9
  br label %371

371:                                              ; preds = %123, %313, %167, %147, %353, %366, %359, %369, %286, %136, %127, %214, %200, %244, %252, %329, %338
  %372 = phi i1 [ %125, %123 ], [ %139, %136 ], [ %289, %286 ], [ %370, %369 ], [ %128, %127 ], [ true, %359 ], [ true, %366 ], [ true, %353 ], [ %149, %147 ], [ %169, %167 ], [ %317, %313 ], [ %202, %200 ], [ %216, %214 ], [ %255, %252 ], [ %247, %244 ], [ %342, %338 ], [ %330, %329 ]
  tail call void @_ZdlPv(i8* nonnull %96) #10
  br label %373

373:                                              ; preds = %20, %27, %371, %67, %89, %84, %79, %61, %51, %16, %12
  %374 = phi i1 [ %17, %16 ], [ %13, %12 ], [ %30, %27 ], [ %21, %20 ], [ %62, %61 ], [ %52, %51 ], [ %68, %67 ], [ %80, %79 ], [ %85, %84 ], [ %92, %89 ], [ %372, %371 ]
  ret i1 %374
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP10Parse31012EPKhmt(%"class.ots::OpenTypeCMAP"*, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 8
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %8 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0)) #9
  br label %157

9:                                                ; preds = %4
  %10 = icmp ult i64 %2, 12
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %13 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #9
  br label %157

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %1, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = tail call i32 @llvm.bswap.i32(i32 %17) #9
  %21 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %21, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.27, i64 0, i64 0), i32 %20) #9
  br label %157

23:                                               ; preds = %14
  %24 = icmp ult i64 %2, 16
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %27 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %26, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28, i64 0, i64 0)) #9
  br label %157

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, i8* %1, i64 12
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 1
  %32 = tail call i32 @llvm.bswap.i32(i32 %31) #9
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = add i64 %2, -16
  %36 = udiv i64 %35, 12
  %37 = zext i32 %32 to i64
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %34, %28
  %40 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %41 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %40, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29, i64 0, i64 0), i32 %32) #9
  br label %157

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9
  %44 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9, i32 0, i32 1
  %45 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.43"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = sdiv exact i64 %49, 12
  %51 = icmp ult i64 %50, %37
  %52 = inttoptr i64 %48 to %"struct.ots::OpenTypeCMAPSubtableRange"*
  br i1 %51, label %53, label %55

53:                                               ; preds = %42
  %54 = sub nsw i64 %37, %50
  tail call void @_ZNSt3__16vectorIN3ots25OpenTypeCMAPSubtableRangeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.43"* %43, i64 %54) #9
  br label %59

55:                                               ; preds = %42
  %56 = icmp ugt i64 %50, %37
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %52, i64 %37
  store %"struct.ots::OpenTypeCMAPSubtableRange"* %58, %"struct.ots::OpenTypeCMAPSubtableRange"** %44, align 8
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %43, i64 0, i32 0, i32 0
  %61 = zext i16 %3 to i32
  br label %69

62:                                               ; preds = %127
  %63 = icmp ult i64 %131, %37
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = icmp ugt i32 %32, 1
  br i1 %65, label %66, label %157

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %43, i64 0, i32 0, i32 0
  %68 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %67, align 8
  br label %137

69:                                               ; preds = %59, %62
  %70 = phi i64 [ 0, %59 ], [ %131, %62 ]
  %71 = phi i64 [ 16, %59 ], [ %90, %62 ]
  %72 = add nuw nsw i64 %71, 4
  %73 = icmp ugt i64 %72, %2
  br i1 %73, label %92, label %74

74:                                               ; preds = %69
  %75 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %76 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %75, i64 %70, i32 0
  %77 = getelementptr inbounds i8, i8* %1, i64 %71
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 1
  %80 = tail call i32 @llvm.bswap.i32(i32 %79) #9
  store i32 %80, i32* %76, align 4
  %81 = add nuw nsw i64 %71, 8
  %82 = icmp ugt i64 %81, %2
  br i1 %82, label %92, label %83

83:                                               ; preds = %74
  %84 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %85 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %84, i64 %70, i32 1
  %86 = getelementptr inbounds i8, i8* %1, i64 %72
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = tail call i32 @llvm.bswap.i32(i32 %88) #9
  store i32 %89, i32* %85, align 4
  %90 = add nuw nsw i64 %71, 12
  %91 = icmp ugt i64 %90, %2
  br i1 %91, label %92, label %95

92:                                               ; preds = %83, %74, %69
  %93 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %94 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %93, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i64 0, i64 0)) #9
  br label %157

95:                                               ; preds = %83
  %96 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %97 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %96, i64 %70, i32 2
  %98 = getelementptr inbounds i8, i8* %1, i64 %81
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 1
  %101 = tail call i32 @llvm.bswap.i32(i32 %100) #9
  store i32 %101, i32* %97, align 4
  %102 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %103 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %70, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp ugt i32 %104, 1114111
  br i1 %105, label %114, label %106

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %70, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = icmp ugt i32 %108, 1114111
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %70, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp ugt i32 %112, 65535
  br i1 %113, label %114, label %122

114:                                              ; preds = %110, %106, %95
  %115 = and i64 %70, 4294967295
  %116 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %117 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %115, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %115, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %116, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.31, i64 0, i64 0), i32 %104, i32 %118, i32 %120) #9
  br label %157

122:                                              ; preds = %110
  %123 = icmp ult i32 %108, %104
  br i1 %123, label %124, label %127

124:                                              ; preds = %122
  %125 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %126 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %125, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.32, i64 0, i64 0), i32 %108, i32 %104) #9
  br label %157

127:                                              ; preds = %122
  %128 = sub nsw i32 %108, %104
  %129 = add nsw i32 %128, %112
  %130 = icmp ugt i32 %129, %61
  %131 = add nuw nsw i64 %70, 1
  br i1 %130, label %132, label %62

132:                                              ; preds = %127
  %133 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %134 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %133, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0), i32 %112) #9
  br label %157

135:                                              ; preds = %149
  %136 = icmp eq i64 %153, %37
  br i1 %136, label %157, label %137

137:                                              ; preds = %135, %66
  %138 = phi i64 [ 1, %66 ], [ %153, %135 ]
  %139 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %68, i64 %138, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = add nuw i64 %138, 4294967295
  %142 = and i64 %141, 4294967295
  %143 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %68, i64 %142, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp ugt i32 %140, %144
  br i1 %145, label %149, label %146

146:                                              ; preds = %137
  %147 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %148 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %147, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.34, i64 0, i64 0), i32 %140, i32 %144) #9
  br label %157

149:                                              ; preds = %137
  %150 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %68, i64 %142, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp ugt i32 %140, %151
  %153 = add nuw nsw i64 %138, 1
  br i1 %152, label %135, label %154

154:                                              ; preds = %149
  %155 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %156 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %155, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.35, i64 0, i64 0), i32 %140, i32 %151) #9
  br label %157

157:                                              ; preds = %135, %64, %154, %146, %92, %132, %124, %114, %11, %19, %39, %25, %6
  %158 = phi i1 [ %8, %6 ], [ %22, %19 ], [ %13, %11 ], [ %41, %39 ], [ %27, %25 ], [ %94, %92 ], [ %134, %132 ], [ %126, %124 ], [ %121, %114 ], [ %156, %154 ], [ %148, %146 ], [ true, %64 ], [ true, %135 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP10Parse31013EPKhmt(%"class.ots::OpenTypeCMAP"*, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 8
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %8 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.36, i64 0, i64 0)) #9
  br label %150

9:                                                ; preds = %4
  %10 = icmp ult i64 %2, 12
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %13 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %12, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0)) #9
  br label %150

14:                                               ; preds = %9
  %15 = getelementptr inbounds i8, i8* %1, i64 8
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = tail call i32 @llvm.bswap.i32(i32 %17) #9
  %21 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %21, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.38, i64 0, i64 0), i32 %20) #9
  br label %150

23:                                               ; preds = %14
  %24 = icmp ult i64 %2, 16
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %27 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %26, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.39, i64 0, i64 0)) #9
  br label %150

28:                                               ; preds = %23
  %29 = getelementptr inbounds i8, i8* %1, i64 12
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 1
  %32 = tail call i32 @llvm.bswap.i32(i32 %31) #9
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = add i64 %2, -16
  %36 = udiv i64 %35, 12
  %37 = zext i32 %32 to i64
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %34, %28
  %40 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %41 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %40, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i64 0, i64 0), i32 %32) #9
  br label %150

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10
  %44 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10, i32 0, i32 1
  %45 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.43"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = sdiv exact i64 %49, 12
  %51 = icmp ult i64 %50, %37
  %52 = inttoptr i64 %48 to %"struct.ots::OpenTypeCMAPSubtableRange"*
  br i1 %51, label %53, label %55

53:                                               ; preds = %42
  %54 = sub nsw i64 %37, %50
  tail call void @_ZNSt3__16vectorIN3ots25OpenTypeCMAPSubtableRangeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.43"* %43, i64 %54) #9
  br label %59

55:                                               ; preds = %42
  %56 = icmp ugt i64 %50, %37
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %52, i64 %37
  store %"struct.ots::OpenTypeCMAPSubtableRange"* %58, %"struct.ots::OpenTypeCMAPSubtableRange"** %44, align 8
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %43, i64 0, i32 0, i32 0
  %61 = zext i16 %3 to i32
  br label %69

62:                                               ; preds = %122
  %63 = icmp ult i64 %124, %37
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  %65 = icmp ugt i32 %32, 1
  br i1 %65, label %66, label %150

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %43, i64 0, i32 0, i32 0
  %68 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %67, align 8
  br label %130

69:                                               ; preds = %59, %62
  %70 = phi i64 [ 0, %59 ], [ %124, %62 ]
  %71 = phi i64 [ 16, %59 ], [ %90, %62 ]
  %72 = add nuw nsw i64 %71, 4
  %73 = icmp ugt i64 %72, %2
  br i1 %73, label %92, label %74

74:                                               ; preds = %69
  %75 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %76 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %75, i64 %70, i32 0
  %77 = getelementptr inbounds i8, i8* %1, i64 %71
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 1
  %80 = tail call i32 @llvm.bswap.i32(i32 %79) #9
  store i32 %80, i32* %76, align 4
  %81 = add nuw nsw i64 %71, 8
  %82 = icmp ugt i64 %81, %2
  br i1 %82, label %92, label %83

83:                                               ; preds = %74
  %84 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %85 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %84, i64 %70, i32 1
  %86 = getelementptr inbounds i8, i8* %1, i64 %72
  %87 = bitcast i8* %86 to i32*
  %88 = load i32, i32* %87, align 1
  %89 = tail call i32 @llvm.bswap.i32(i32 %88) #9
  store i32 %89, i32* %85, align 4
  %90 = add nuw nsw i64 %71, 12
  %91 = icmp ugt i64 %90, %2
  br i1 %91, label %92, label %95

92:                                               ; preds = %83, %74, %69
  %93 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %94 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %93, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.41, i64 0, i64 0)) #9
  br label %150

95:                                               ; preds = %83
  %96 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %97 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %96, i64 %70, i32 2
  %98 = getelementptr inbounds i8, i8* %1, i64 %81
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 1
  %101 = tail call i32 @llvm.bswap.i32(i32 %100) #9
  store i32 %101, i32* %97, align 4
  %102 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %60, align 8
  %103 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %70, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp ugt i32 %104, 1114111
  br i1 %105, label %114, label %106

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %70, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = icmp ugt i32 %108, 1114111
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %70, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp ugt i32 %112, 65535
  br i1 %113, label %114, label %122

114:                                              ; preds = %110, %106, %95
  %115 = and i64 %70, 4294967295
  %116 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %117 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %115, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %102, i64 %115, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %116, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.42, i64 0, i64 0), i32 %104, i32 %118, i32 %120) #9
  br label %150

122:                                              ; preds = %110
  %123 = icmp ult i32 %112, %61
  %124 = add nuw nsw i64 %70, 1
  br i1 %123, label %62, label %125

125:                                              ; preds = %122
  %126 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %127 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %126, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.43, i64 0, i64 0), i32 %112, i32 %61) #9
  br label %150

128:                                              ; preds = %142
  %129 = icmp eq i64 %146, %37
  br i1 %129, label %150, label %130

130:                                              ; preds = %128, %66
  %131 = phi i64 [ 1, %66 ], [ %146, %128 ]
  %132 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %68, i64 %131, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = add nuw i64 %131, 4294967295
  %135 = and i64 %134, 4294967295
  %136 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %68, i64 %135, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp ugt i32 %133, %137
  br i1 %138, label %142, label %139

139:                                              ; preds = %130
  %140 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %141 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %140, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.44, i64 0, i64 0), i32 %133, i32 %137) #9
  br label %150

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %68, i64 %135, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp ugt i32 %133, %144
  %146 = add nuw nsw i64 %131, 1
  br i1 %145, label %128, label %147

147:                                              ; preds = %142
  %148 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %149 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %148, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0), i32 %133, i32 %144) #9
  br label %150

150:                                              ; preds = %128, %64, %147, %139, %92, %125, %114, %11, %19, %39, %25, %6
  %151 = phi i1 [ %8, %6 ], [ %22, %19 ], [ %13, %11 ], [ %41, %39 ], [ %27, %25 ], [ %94, %92 ], [ %127, %125 ], [ %121, %114 ], [ %149, %147 ], [ %141, %139 ], [ true, %64 ], [ true, %128 ]
  ret i1 %151
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP9Parse0514EPKhm(%"class.ots::OpenTypeCMAP"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 6
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %7 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i64 0, i64 0)) #9
  br label %405

8:                                                ; preds = %3
  %9 = icmp ult i64 %2, 10
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %12 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %11, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.47, i64 0, i64 0)) #9
  br label %405

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %1, i64 6
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 1
  %17 = tail call i32 @llvm.bswap.i32(i32 %16) #9
  %18 = add i32 %17, -1
  %19 = icmp ugt i32 %18, 258
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %21, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i64 0, i64 0), i32 %17) #9
  br label %405

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 4
  %25 = zext i32 %17 to i64
  %26 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 4, i32 0, i32 1
  %27 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 6
  %33 = icmp ult i64 %32, %25
  %34 = inttoptr i64 %30 to %"struct.ots::OpenTypeCMAPSubtableVSRecord"*
  %35 = inttoptr i64 %28 to %"struct.ots::OpenTypeCMAPSubtableVSRecord"*
  br i1 %33, label %36, label %38

36:                                               ; preds = %23
  %37 = sub nsw i64 %25, %32
  tail call void @_ZNSt3__16vectorIN3ots28OpenTypeCMAPSubtableVSRecordENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector"* %24, i64 %37) #9
  br label %66

38:                                               ; preds = %23
  %39 = icmp ugt i64 %32, %25
  br i1 %39, label %40, label %66

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %34, i64 %25
  %42 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %41, %35
  br i1 %42, label %65, label %43

43:                                               ; preds = %40, %63
  %44 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %45, %63 ], [ %35, %40 ]
  %45 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %44, i64 -1
  %46 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %44, i64 -1, i32 4, i32 0, i32 0
  %47 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %46, align 8
  %48 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %47 to i64
  %51 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %44, i64 -1, i32 4, i32 0, i32 1
  %52 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %47 to i8*
  tail call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %49, %43
  %55 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %44, i64 -1, i32 3, i32 0, i32 0
  %56 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %55, align 8
  %57 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRange"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %56 to i64
  %60 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %44, i64 -1, i32 3, i32 0, i32 1
  %61 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %56 to i8*
  tail call void @_ZdlPv(i8* %62) #10
  br label %63

63:                                               ; preds = %58, %54
  %64 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %45, %41
  br i1 %64, label %65, label %43

65:                                               ; preds = %63, %40
  store %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %41, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %26, align 8
  br label %66

66:                                               ; preds = %36, %38, %65
  %67 = icmp eq i32 %16, 0
  br i1 %67, label %397, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  br label %73

70:                                               ; preds = %174
  br i1 %67, label %397, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  br label %177

73:                                               ; preds = %68, %174
  %74 = phi i32 [ 0, %68 ], [ %175, %174 ]
  %75 = phi i64 [ 10, %68 ], [ %106, %174 ]
  %76 = zext i32 %74 to i64
  %77 = add nuw nsw i64 %75, 3
  %78 = icmp ugt i64 %77, %2
  br i1 %78, label %108, label %79

79:                                               ; preds = %73
  %80 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %69, align 8
  %81 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %80, i64 %76, i32 0
  %82 = getelementptr inbounds i8, i8* %1, i64 %75
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 16
  %86 = add nuw nsw i64 %75, 1
  %87 = getelementptr inbounds i8, i8* %1, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = shl nuw nsw i32 %89, 8
  %91 = or i32 %90, %85
  %92 = add nuw nsw i64 %75, 2
  %93 = getelementptr inbounds i8, i8* %1, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = or i32 %91, %95
  store i32 %96, i32* %81, align 4
  %97 = add nuw nsw i64 %75, 7
  %98 = icmp ugt i64 %97, %2
  br i1 %98, label %108, label %99

99:                                               ; preds = %79
  %100 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %69, align 8
  %101 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %100, i64 %76, i32 1
  %102 = getelementptr inbounds i8, i8* %1, i64 %77
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 1
  %105 = tail call i32 @llvm.bswap.i32(i32 %104) #9
  store i32 %105, i32* %101, align 4
  %106 = add nuw nsw i64 %75, 11
  %107 = icmp ugt i64 %106, %2
  br i1 %107, label %108, label %111

108:                                              ; preds = %99, %79, %73
  %109 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %110 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %109, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.49, i64 0, i64 0), i32 %74) #9
  br label %405

111:                                              ; preds = %99
  %112 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %69, align 8
  %113 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %112, i64 %76, i32 2
  %114 = getelementptr inbounds i8, i8* %1, i64 %97
  %115 = bitcast i8* %114 to i32*
  %116 = load i32, i32* %115, align 1
  %117 = tail call i32 @llvm.bswap.i32(i32 %116) #9
  store i32 %117, i32* %113, align 4
  %118 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %69, align 8
  %119 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %118, i64 %76, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = icmp ugt i32 %120, 6154
  br i1 %121, label %122, label %131

122:                                              ; preds = %111
  %123 = icmp ult i32 %120, 6158
  br i1 %123, label %134, label %124

124:                                              ; preds = %122
  %125 = icmp ugt i32 %120, 65023
  br i1 %125, label %126, label %131

126:                                              ; preds = %124
  %127 = icmp ult i32 %120, 65040
  %128 = add i32 %120, -917760
  %129 = icmp ult i32 %128, 240
  %130 = or i1 %127, %129
  br i1 %130, label %134, label %131

131:                                              ; preds = %126, %111, %124
  %132 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %133 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %132, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.50, i64 0, i64 0), i32 %120, i32 %74) #9
  br label %405

134:                                              ; preds = %126, %122
  %135 = icmp eq i32 %74, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %134
  %137 = add i32 %74, -1
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %118, i64 %138, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp ult i32 %140, %120
  br i1 %141, label %145, label %142

142:                                              ; preds = %136
  %143 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %144 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %143, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.51, i64 0, i64 0), i32 %140, i32 %120, i32 %74) #9
  br label %405

145:                                              ; preds = %136, %134
  %146 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %118, i64 %76, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %118, i64 %76, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %165

153:                                              ; preds = %149
  %154 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %155 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %154, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.52, i64 0, i64 0), i32 %74) #9
  br label %405

156:                                              ; preds = %145
  %157 = zext i32 %147 to i64
  %158 = icmp ult i64 %157, %2
  br i1 %158, label %159, label %162

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %118, i64 %76, i32 2
  %161 = load i32, i32* %160, align 8
  br label %165

162:                                              ; preds = %156
  %163 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %164 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %163, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.53, i64 0, i64 0), i32 %147, i64 %2, i32 %74) #9
  br label %405

165:                                              ; preds = %159, %149
  %166 = phi i32 [ %161, %159 ], [ %151, %149 ]
  %167 = icmp eq i32 %166, 0
  %168 = zext i32 %166 to i64
  %169 = icmp ult i64 %168, %2
  %170 = or i1 %167, %169
  br i1 %170, label %174, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %173 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %172, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.54, i64 0, i64 0), i32 %166, i64 %2, i32 %74) #9
  br label %405

174:                                              ; preds = %165
  %175 = add i32 %74, 1
  %176 = icmp ult i32 %175, %17
  br i1 %176, label %73, label %70

177:                                              ; preds = %71, %393
  %178 = phi i64 [ 0, %71 ], [ %395, %393 ]
  %179 = phi i64 [ %106, %71 ], [ %394, %393 ]
  %180 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %72, align 8
  %181 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %180, i64 %178, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %285, label %184

184:                                              ; preds = %177
  %185 = zext i32 %182 to i64
  %186 = add nuw nsw i64 %185, 4
  %187 = icmp ugt i64 %186, %2
  br i1 %187, label %188, label %192

188:                                              ; preds = %184
  %189 = trunc i64 %178 to i32
  %190 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %191 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %190, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.55, i64 0, i64 0), i32 %189) #9
  br label %405

192:                                              ; preds = %184
  %193 = getelementptr inbounds i8, i8* %1, i64 %185
  %194 = bitcast i8* %193 to i32*
  %195 = load i32, i32* %194, align 1
  %196 = tail call i32 @llvm.bswap.i32(i32 %195) #9
  %197 = icmp eq i32 %195, 0
  br i1 %197, label %203, label %198

198:                                              ; preds = %192
  %199 = sub i64 %2, %186
  %200 = lshr i64 %199, 2
  %201 = zext i32 %196 to i64
  %202 = icmp ult i64 %200, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %198, %192
  %204 = trunc i64 %178 to i32
  %205 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %206 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %205, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i32 %196, i32 %204) #9
  br label %405

207:                                              ; preds = %198
  %208 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %180, i64 %178, i32 3
  %209 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %180, i64 %178, i32 3, i32 0, i32 1
  %210 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.std::__1::vector.24"* %208 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = sub i64 %211, %213
  %215 = ashr exact i64 %214, 3
  %216 = icmp ult i64 %215, %201
  %217 = inttoptr i64 %213 to %"struct.ots::OpenTypeCMAPSubtableVSRange"*
  br i1 %216, label %218, label %220

218:                                              ; preds = %207
  %219 = sub nsw i64 %201, %215
  tail call void @_ZNSt3__16vectorIN3ots27OpenTypeCMAPSubtableVSRangeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.24"* %208, i64 %219) #9
  br label %224

220:                                              ; preds = %207
  %221 = icmp ugt i64 %215, %201
  br i1 %221, label %222, label %224

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %217, i64 %201
  store %"struct.ots::OpenTypeCMAPSubtableVSRange"* %223, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %209, align 8
  br label %224

224:                                              ; preds = %222, %220, %218
  %225 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %208, i64 0, i32 0, i32 0
  br label %226

226:                                              ; preds = %224, %282
  %227 = phi i64 [ 0, %224 ], [ %283, %282 ]
  %228 = phi i32 [ 0, %224 ], [ %267, %282 ]
  %229 = phi i64 [ %186, %224 ], [ %250, %282 ]
  %230 = add i64 %229, 3
  %231 = icmp ugt i64 %230, %2
  br i1 %231, label %252, label %232

232:                                              ; preds = %226
  %233 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %225, align 8
  %234 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %233, i64 %227, i32 0
  %235 = getelementptr inbounds i8, i8* %1, i64 %229
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = shl nuw nsw i32 %237, 16
  %239 = add i64 %229, 1
  %240 = getelementptr inbounds i8, i8* %1, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = shl nuw nsw i32 %242, 8
  %244 = or i32 %243, %238
  %245 = add i64 %229, 2
  %246 = getelementptr inbounds i8, i8* %1, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = or i32 %244, %248
  store i32 %249, i32* %234, align 4
  %250 = add i64 %229, 4
  %251 = icmp ugt i64 %250, %2
  br i1 %251, label %252, label %256

252:                                              ; preds = %232, %226
  %253 = trunc i64 %178 to i32
  %254 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %255 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %254, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.57, i64 0, i64 0), i32 %253) #9
  br label %405

256:                                              ; preds = %232
  %257 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %225, align 8
  %258 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %257, i64 %227, i32 1
  %259 = getelementptr inbounds i8, i8* %1, i64 %230
  %260 = load i8, i8* %259, align 1
  store i8 %260, i8* %258, align 1
  %261 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %225, align 8
  %262 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %261, i64 %227, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %261, i64 %227, i32 1
  %265 = load i8, i8* %264, align 4
  %266 = zext i8 %265 to i32
  %267 = add i32 %263, %266
  %268 = icmp eq i32 %263, 0
  br i1 %268, label %277, label %269

269:                                              ; preds = %256
  %270 = icmp ugt i32 %263, 1114111
  %271 = icmp ugt i32 %267, 16777215
  %272 = or i1 %270, %271
  br i1 %272, label %277, label %273

273:                                              ; preds = %269
  %274 = icmp eq i32 %228, 0
  %275 = icmp ugt i32 %263, %228
  %276 = or i1 %274, %275
  br i1 %276, label %282, label %277

277:                                              ; preds = %273, %256, %269
  %278 = trunc i64 %178 to i32
  %279 = trunc i64 %227 to i32
  %280 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %281 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %280, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.58, i64 0, i64 0), i32 %263, i32 %279, i32 %278) #9
  br label %405

282:                                              ; preds = %273
  %283 = add nuw nsw i64 %227, 1
  %284 = icmp ult i64 %283, %201
  br i1 %284, label %226, label %285

285:                                              ; preds = %282, %177
  %286 = phi i64 [ %179, %177 ], [ %250, %282 ]
  %287 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %72, align 8
  %288 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %287, i64 %178, i32 2
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %393, label %291

291:                                              ; preds = %285
  %292 = zext i32 %289 to i64
  %293 = add nuw nsw i64 %292, 4
  %294 = icmp ugt i64 %293, %2
  br i1 %294, label %295, label %299

295:                                              ; preds = %291
  %296 = trunc i64 %178 to i32
  %297 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %298 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %297, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.59, i64 0, i64 0), i32 %296) #9
  br label %405

299:                                              ; preds = %291
  %300 = getelementptr inbounds i8, i8* %1, i64 %292
  %301 = bitcast i8* %300 to i32*
  %302 = load i32, i32* %301, align 1
  %303 = tail call i32 @llvm.bswap.i32(i32 %302) #9
  %304 = icmp eq i32 %302, 0
  br i1 %304, label %310, label %305

305:                                              ; preds = %299
  %306 = sub i64 %2, %293
  %307 = udiv i64 %306, 5
  %308 = zext i32 %303 to i64
  %309 = icmp ult i64 %307, %308
  br i1 %309, label %310, label %314

310:                                              ; preds = %305, %299
  %311 = trunc i64 %178 to i32
  %312 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %313 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %312, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.60, i64 0, i64 0), i32 %303, i32 %311) #9
  br label %405

314:                                              ; preds = %305
  %315 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %287, i64 %178, i32 4
  %316 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %287, i64 %178, i32 4, i32 0, i32 1
  %317 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.std::__1::vector.31"* %315 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %318, %320
  %322 = ashr exact i64 %321, 3
  %323 = icmp ult i64 %322, %308
  %324 = inttoptr i64 %320 to %"struct.ots::OpenTypeCMAPSubtableVSMapping"*
  br i1 %323, label %325, label %327

325:                                              ; preds = %314
  %326 = sub nsw i64 %308, %322
  tail call void @_ZNSt3__16vectorIN3ots29OpenTypeCMAPSubtableVSMappingENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.31"* %315, i64 %326) #9
  br label %331

327:                                              ; preds = %314
  %328 = icmp ugt i64 %322, %308
  br i1 %328, label %329, label %331

329:                                              ; preds = %327
  %330 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %324, i64 %308
  store %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %330, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %316, align 8
  br label %331

331:                                              ; preds = %329, %327, %325
  %332 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %315, i64 0, i32 0, i32 0
  br label %333

333:                                              ; preds = %331, %390
  %334 = phi i64 [ 0, %331 ], [ %391, %390 ]
  %335 = phi i32 [ 0, %331 ], [ %376, %390 ]
  %336 = phi i64 [ %293, %331 ], [ %357, %390 ]
  %337 = add i64 %336, 3
  %338 = icmp ugt i64 %337, %2
  br i1 %338, label %359, label %339

339:                                              ; preds = %333
  %340 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %332, align 8
  %341 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %340, i64 %334, i32 0
  %342 = getelementptr inbounds i8, i8* %1, i64 %336
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = shl nuw nsw i32 %344, 16
  %346 = add nuw nsw i64 %336, 1
  %347 = getelementptr inbounds i8, i8* %1, i64 %346
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i32
  %350 = shl nuw nsw i32 %349, 8
  %351 = or i32 %350, %345
  %352 = add i64 %336, 2
  %353 = getelementptr inbounds i8, i8* %1, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = or i32 %351, %355
  store i32 %356, i32* %341, align 4
  %357 = add i64 %336, 5
  %358 = icmp ugt i64 %357, %2
  br i1 %358, label %359, label %364

359:                                              ; preds = %339, %333
  %360 = trunc i64 %178 to i32
  %361 = trunc i64 %334 to i32
  %362 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %363 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %362, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.61, i64 0, i64 0), i32 %361, i32 %360) #9
  br label %405

364:                                              ; preds = %339
  %365 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %332, align 8
  %366 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %365, i64 %334, i32 1
  %367 = getelementptr inbounds i8, i8* %1, i64 %337
  %368 = bitcast i8* %367 to i16*
  %369 = load i16, i16* %368, align 1
  %370 = tail call i16 @llvm.bswap.i16(i16 %369) #9
  store i16 %370, i16* %366, align 2
  %371 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %332, align 8
  %372 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %371, i64 %334, i32 1
  %373 = load i16, i16* %372, align 4
  %374 = icmp eq i16 %373, 0
  %375 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %371, i64 %334, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = add i32 %376, -1
  %378 = icmp ugt i32 %377, 1114110
  %379 = or i1 %374, %378
  br i1 %379, label %384, label %380

380:                                              ; preds = %364
  %381 = icmp eq i32 %335, 0
  %382 = icmp ugt i32 %376, %335
  %383 = or i1 %381, %382
  br i1 %383, label %390, label %384

384:                                              ; preds = %380, %364
  %385 = trunc i64 %334 to i32
  %386 = trunc i64 %178 to i32
  %387 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %388 = zext i16 %373 to i32
  %389 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %387, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 %376, i32 %388, i32 %385, i32 %386) #9
  br label %405

390:                                              ; preds = %380
  %391 = add nuw nsw i64 %334, 1
  %392 = icmp ult i64 %391, %308
  br i1 %392, label %333, label %393

393:                                              ; preds = %390, %285
  %394 = phi i64 [ %286, %285 ], [ %357, %390 ]
  %395 = add nuw nsw i64 %178, 1
  %396 = icmp ult i64 %395, %25
  br i1 %396, label %177, label %397

397:                                              ; preds = %393, %66, %70
  %398 = phi i64 [ %106, %70 ], [ 10, %66 ], [ %394, %393 ]
  %399 = icmp eq i64 %398, %2
  br i1 %399, label %403, label %400

400:                                              ; preds = %397
  %401 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %402 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %401, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i64 %398, i64 %2) #9
  br label %405

403:                                              ; preds = %397
  %404 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 3
  store i64 %2, i64* %404, align 8
  br label %405

405:                                              ; preds = %359, %384, %295, %310, %252, %277, %188, %203, %108, %131, %153, %171, %162, %142, %10, %20, %403, %400, %5
  %406 = phi i1 [ %7, %5 ], [ %22, %20 ], [ %12, %10 ], [ %402, %400 ], [ true, %403 ], [ %110, %108 ], [ %133, %131 ], [ %155, %153 ], [ %173, %171 ], [ %164, %162 ], [ %144, %142 ], [ %191, %188 ], [ %206, %203 ], [ %255, %252 ], [ %281, %277 ], [ %298, %295 ], [ %313, %310 ], [ %363, %359 ], [ %389, %384 ]
  ret i1 %406
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP8Parse100EPKhm(%"class.ots::OpenTypeCMAP"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 4
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %7 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i64 0, i64 0)) #9
  br label %115

8:                                                ; preds = %3
  %9 = icmp ult i64 %2, 6
  br i1 %9, label %10, label %13

10:                                               ; preds = %8
  %11 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %12 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %11, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.65, i64 0, i64 0)) #9
  br label %115

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %1, i64 4
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = tail call i16 @llvm.bswap.i16(i16 %16) #9
  %20 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %21 = zext i16 %19 to i32
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %20, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.66, i64 0, i64 0), i32 %21) #9
  br label %23

23:                                               ; preds = %13, %18
  %24 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11
  %25 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.50"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp ult i64 %30, 256
  %32 = inttoptr i64 %29 to i8*
  br i1 %31, label %33, label %49

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11, i32 0, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %29
  %38 = tail call i8* @_Znwm(i64 256) #10
  %39 = getelementptr inbounds i8, i8* %38, i64 %37
  %40 = ptrtoint i8* %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 256
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %38 to i64
  %44 = icmp sgt i64 %37, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %33
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %38, i8* align 1 %32, i64 %37, i1 false) #9
  br label %46

46:                                               ; preds = %45, %33
  store i64 %43, i64* %28, align 8
  store i64 %40, i64* %35, align 8
  store i64 %42, i64* %26, align 8
  %47 = icmp eq i64 %29, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  tail call void @_ZdlPv(i8* nonnull %32) #10
  br label %49

49:                                               ; preds = %23, %46, %48
  %50 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11, i32 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %24, i64 0, i32 0, i32 0
  br label %53

53:                                               ; preds = %109, %49
  %54 = phi i64 [ 0, %49 ], [ %110, %109 ]
  %55 = phi i64 [ 6, %49 ], [ %56, %109 ]
  %56 = add nuw nsw i64 %55, 1
  %57 = icmp ult i64 %55, %2
  br i1 %57, label %58, label %112

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %1, i64 %55
  %60 = load i8, i8* %59, align 1
  %61 = load i8*, i8** %50, align 8
  %62 = load i8*, i8** %25, align 8
  %63 = icmp eq i8* %61, %62
  %64 = ptrtoint i8* %62 to i64
  br i1 %63, label %68, label %65

65:                                               ; preds = %58
  store i8 %60, i8* %61, align 1
  %66 = getelementptr inbounds i8, i8* %61, i64 1
  %67 = ptrtoint i8* %66 to i64
  store i64 %67, i64* %51, align 8
  br label %109

68:                                               ; preds = %58
  %69 = ptrtoint i8* %61 to i64
  %70 = load i64, i64* %28, align 8
  %71 = sub i64 %69, %70
  %72 = add i64 %71, 1
  %73 = icmp slt i64 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.std::__1::vector.50"* %24 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %75) #11
  unreachable

76:                                               ; preds = %68
  %77 = sub i64 %64, %70
  %78 = icmp ult i64 %77, 4611686018427387903
  br i1 %78, label %79, label %84

79:                                               ; preds = %76
  %80 = shl i64 %77, 1
  %81 = icmp ult i64 %80, %72
  %82 = select i1 %81, i64 %72, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %79, %76
  %85 = phi i64 [ %82, %79 ], [ 9223372036854775807, %76 ]
  %86 = tail call i8* @_Znwm(i64 %85) #10
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi i64 [ %85, %84 ], [ 0, %79 ]
  %89 = phi i8* [ %86, %84 ], [ null, %79 ]
  %90 = getelementptr inbounds i8, i8* %89, i64 %71
  %91 = getelementptr inbounds i8, i8* %89, i64 %88
  %92 = ptrtoint i8* %91 to i64
  store i8 %60, i8* %90, align 1
  %93 = getelementptr inbounds i8, i8* %90, i64 1
  %94 = ptrtoint i8* %93 to i64
  %95 = load i8*, i8** %52, align 8
  %96 = load i64, i64* %51, align 8
  %97 = ptrtoint i8* %95 to i64
  %98 = sub i64 %96, %97
  %99 = sub i64 0, %98
  %100 = getelementptr inbounds i8, i8* %90, i64 %99
  %101 = ptrtoint i8* %100 to i64
  %102 = icmp sgt i64 %98, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %87
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %95, i64 %98, i1 false) #9
  %104 = load i8*, i8** %52, align 8
  br label %105

105:                                              ; preds = %103, %87
  %106 = phi i8* [ %95, %87 ], [ %104, %103 ]
  store i64 %101, i64* %28, align 8
  store i64 %94, i64* %51, align 8
  store i64 %92, i64* %26, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  tail call void @_ZdlPv(i8* nonnull %106) #10
  br label %109

109:                                              ; preds = %65, %105, %108
  %110 = add nuw nsw i64 %54, 1
  %111 = icmp eq i64 %110, 256
  br i1 %111, label %115, label %53

112:                                              ; preds = %53
  %113 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %114 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %113, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.67, i64 0, i64 0), i64 %54) #9
  br label %115

115:                                              ; preds = %109, %10, %112, %5
  %116 = phi i1 [ %7, %5 ], [ %12, %10 ], [ %114, %112 ], [ true, %109 ]
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP5ParseEPKhm(%"class.ots::OpenTypeCMAP"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less.115", align 1
  %5 = alloca %"class.std::__1::vector.64", align 8
  %6 = alloca { i16, i32, i32 }, align 8
  %7 = alloca %"class.std::__1::set", align 8
  %8 = alloca %"class.std::__1::vector.80", align 8
  %9 = icmp ult i64 %2, 2
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = bitcast i8* %1 to i16*
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #9
  %14 = icmp ult i64 %2, 4
  br i1 %14, label %15, label %18

15:                                               ; preds = %10, %3
  %16 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %17 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i64 0, i64 0)) #9
  br label %767

18:                                               ; preds = %10
  %19 = getelementptr inbounds i8, i8* %1, i64 2
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %21) #9
  %23 = icmp eq i16 %12, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = zext i16 %13 to i32
  %26 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %27 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i32 %25) #9
  br label %767

28:                                               ; preds = %18
  %29 = icmp eq i16 %21, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %32 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i64 0, i64 0)) #9
  br label %767

33:                                               ; preds = %28
  %34 = bitcast %"class.std::__1::vector.64"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %5, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %5, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = zext i16 %22 to i64
  %39 = bitcast %"struct.(anonymous namespace)::CMAPSubtableHeader"** %37 to i64*
  %40 = bitcast %"class.std::__1::vector.64"* %5 to i64*
  %41 = bitcast %"struct.(anonymous namespace)::CMAPSubtableHeader"** %36 to i64*
  %42 = mul nuw nsw i64 %38, 20
  %43 = tail call i8* @_Znwm(i64 %42) #10
  %44 = bitcast i8* %43 to %"struct.(anonymous namespace)::CMAPSubtableHeader"*
  %45 = ptrtoint i8* %43 to i64
  %46 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %44, i64 %38
  %47 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %46 to i64
  store i64 %45, i64* %40, align 8
  store i64 %45, i64* %41, align 8
  store i64 %47, i64* %39, align 8
  %48 = zext i16 %22 to i32
  %49 = bitcast { i16, i32, i32 }* %6 to i8*
  %50 = bitcast %"struct.(anonymous namespace)::CMAPSubtableHeader"** %36 to i64*
  br label %54

51:                                               ; preds = %136
  %52 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %53 = zext i16 %22 to i64
  br label %147

54:                                               ; preds = %33, %136
  %55 = phi i64 [ %45, %33 ], [ %137, %136 ]
  %56 = phi %"struct.(anonymous namespace)::CMAPSubtableHeader"* [ %44, %33 ], [ %138, %136 ]
  %57 = phi i32 [ 0, %33 ], [ %139, %136 ]
  %58 = phi i64 [ 4, %33 ], [ %73, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %49)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* align 4 bitcast (i16* getelementptr inbounds ({ i16, i16, i32, i16, [2 x i8], i32, i32 }, { i16, i16, i32, i16, [2 x i8], i32, i32 }* @__const._ZN3ots12OpenTypeCMAP5ParseEPKhm.subt, i64 0, i32 3) to i8*), i64 12, i1 false)
  %59 = or i64 %58, 2
  %60 = icmp ugt i64 %59, %2
  br i1 %60, label %141, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %1, i64 %58
  %63 = bitcast i8* %62 to i16*
  %64 = load i16, i16* %63, align 1
  %65 = tail call i16 @llvm.bswap.i16(i16 %64) #9
  %66 = add nuw nsw i64 %58, 4
  %67 = icmp ugt i64 %66, %2
  br i1 %67, label %141, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds i8, i8* %1, i64 %59
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 1
  %72 = tail call i16 @llvm.bswap.i16(i16 %71) #9
  %73 = add nuw nsw i64 %58, 8
  %74 = icmp ugt i64 %73, %2
  br i1 %74, label %141, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds i8, i8* %1, i64 %66
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 1
  %79 = tail call i32 @llvm.bswap.i32(i32 %78) #9
  %80 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %37, align 8
  %81 = icmp eq %"struct.(anonymous namespace)::CMAPSubtableHeader"* %56, %80
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %56, i64 0, i32 0
  store i16 %65, i16* %83, align 4
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %56, i64 0, i32 1
  store i16 %72, i16* %84, align 2
  %85 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %56, i64 0, i32 2
  store i32 %79, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %56, i64 0, i32 3
  %87 = bitcast i16* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* nonnull align 8 %49, i64 12, i1 false)
  %88 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %56, i64 1
  %89 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %88 to i64
  store i64 %89, i64* %50, align 8
  br label %136

90:                                               ; preds = %75
  %91 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %80 to i64
  %92 = load i64, i64* %40, align 8
  %93 = sub i64 %91, %92
  %94 = sdiv exact i64 %93, 20
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, 922337203685477580
  br i1 %96, label %97, label %99

97:                                               ; preds = %90
  %98 = bitcast %"class.std::__1::vector.64"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %98) #11
  unreachable

99:                                               ; preds = %90
  %100 = icmp ult i64 %94, 461168601842738790
  br i1 %100, label %101, label %106

101:                                              ; preds = %99
  %102 = shl nsw i64 %94, 1
  %103 = icmp ult i64 %102, %95
  %104 = select i1 %103, i64 %95, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %111, label %106

106:                                              ; preds = %101, %99
  %107 = phi i64 [ %104, %101 ], [ 922337203685477580, %99 ]
  %108 = mul i64 %107, 20
  %109 = tail call i8* @_Znwm(i64 %108) #10
  %110 = bitcast i8* %109 to %"struct.(anonymous namespace)::CMAPSubtableHeader"*
  br label %111

111:                                              ; preds = %106, %101
  %112 = phi i64 [ %107, %106 ], [ 0, %101 ]
  %113 = phi %"struct.(anonymous namespace)::CMAPSubtableHeader"* [ %110, %106 ], [ null, %101 ]
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %113, i64 %94
  %115 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %113, i64 %112
  %116 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %115 to i64
  %117 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %114, i64 0, i32 0
  store i16 %65, i16* %117, align 4
  %118 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %113, i64 %94, i32 1
  store i16 %72, i16* %118, align 2
  %119 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %113, i64 %94, i32 2
  store i32 %79, i32* %119, align 4
  %120 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %113, i64 %94, i32 3
  %121 = bitcast i16* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* nonnull align 8 %49, i64 12, i1 false)
  %122 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %114, i64 1
  %123 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %122 to i64
  %124 = sub i64 %55, %92
  %125 = sdiv exact i64 %124, -20
  %126 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %114, i64 %125
  %127 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %126 to i64
  %128 = icmp sgt i64 %124, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %111
  %130 = bitcast %"struct.(anonymous namespace)::CMAPSubtableHeader"* %126 to i8*
  %131 = inttoptr i64 %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 %124, i1 false) #9
  br label %132

132:                                              ; preds = %129, %111
  store i64 %127, i64* %40, align 8
  store i64 %123, i64* %50, align 8
  store i64 %116, i64* %39, align 8
  %133 = icmp eq i64 %92, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %82, %132, %134
  %137 = phi i64 [ %89, %82 ], [ %123, %132 ], [ %123, %134 ]
  %138 = phi %"struct.(anonymous namespace)::CMAPSubtableHeader"* [ %88, %82 ], [ %122, %132 ], [ %122, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %49)
  %139 = add nuw nsw i32 %57, 1
  %140 = icmp ult i32 %139, %48
  br i1 %140, label %54, label %51

141:                                              ; preds = %68, %61, %54
  %142 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %143 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %142, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.71, i64 0, i64 0), i32 %57) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %49)
  br label %758

144:                                              ; preds = %165
  %145 = add i64 %2, -2
  %146 = zext i16 %22 to i64
  br label %174

147:                                              ; preds = %51, %165
  %148 = phi i64 [ 0, %51 ], [ %166, %165 ]
  %149 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %52, i64 %148, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp ugt i32 %150, 1073741824
  br i1 %151, label %152, label %156

152:                                              ; preds = %147
  %153 = trunc i64 %148 to i32
  %154 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %155 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %154, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.72, i64 0, i64 0), i32 %153) #9
  br label %758

156:                                              ; preds = %147
  %157 = zext i32 %150 to i64
  %158 = icmp ule i64 %73, %157
  %159 = icmp ult i64 %157, %2
  %160 = and i1 %158, %159
  br i1 %160, label %165, label %161

161:                                              ; preds = %156
  %162 = trunc i64 %148 to i32
  %163 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %164 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %163, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.73, i64 0, i64 0), i32 %150, i32 %162) #9
  br label %758

165:                                              ; preds = %156
  %166 = add nuw nsw i64 %148, 1
  %167 = icmp ult i64 %166, %53
  br i1 %167, label %147, label %144

168:                                              ; preds = %277
  %169 = icmp ugt i16 %22, 1
  br i1 %169, label %170, label %280

170:                                              ; preds = %168
  %171 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %172 = zext i16 %22 to i64
  %173 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  br label %283

174:                                              ; preds = %144, %277
  %175 = phi i64 [ 0, %144 ], [ %278, %277 ]
  %176 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %177 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %176, i64 %175, i32 2
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = add nuw nsw i64 %179, 2
  %181 = icmp ugt i64 %180, %2
  br i1 %181, label %182, label %186

182:                                              ; preds = %174
  %183 = trunc i64 %175 to i32
  %184 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %185 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %184, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.74, i64 0, i64 0), i32 %183) #9
  br label %758

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %176, i64 %175, i32 3
  %188 = getelementptr inbounds i8, i8* %1, i64 %179
  %189 = bitcast i8* %188 to i16*
  %190 = load i16, i16* %189, align 1
  %191 = tail call i16 @llvm.bswap.i16(i16 %190) #9
  store i16 %191, i16* %187, align 2
  %192 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %193 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %192, i64 %175, i32 3
  %194 = load i16, i16* %193, align 4
  switch i16 %194, label %273 [
    i16 0, label %195
    i16 4, label %195
    i16 12, label %223
    i16 13, label %223
    i16 14, label %258
  ]

195:                                              ; preds = %186, %186
  %196 = add nuw nsw i64 %179, 4
  %197 = icmp ugt i64 %196, %2
  br i1 %197, label %198, label %202

198:                                              ; preds = %195
  %199 = trunc i64 %175 to i32
  %200 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %201 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %200, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75, i64 0, i64 0), i32 %199) #9
  br label %758

202:                                              ; preds = %195
  %203 = add nuw nsw i64 %179, 6
  %204 = icmp ugt i64 %203, %2
  br i1 %204, label %205, label %209

205:                                              ; preds = %202
  %206 = trunc i64 %175 to i32
  %207 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %208 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %207, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76, i64 0, i64 0), i32 %206) #9
  br label %758

209:                                              ; preds = %202
  %210 = getelementptr inbounds i8, i8* %1, i64 %180
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 1
  %213 = tail call i16 @llvm.bswap.i16(i16 %212) #9
  %214 = getelementptr inbounds i8, i8* %1, i64 %196
  %215 = bitcast i8* %214 to i16*
  %216 = load i16, i16* %215, align 1
  %217 = tail call i16 @llvm.bswap.i16(i16 %216) #9
  %218 = zext i16 %213 to i32
  %219 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %192, i64 %175, i32 4
  store i32 %218, i32* %219, align 4
  %220 = zext i16 %217 to i32
  %221 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %222 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %221, i64 %175, i32 5
  store i32 %220, i32* %222, align 4
  br label %277

223:                                              ; preds = %186, %186
  %224 = add nuw nsw i64 %179, 4
  %225 = icmp ugt i64 %224, %2
  %226 = icmp ugt i64 %180, %145
  %227 = or i1 %225, %226
  br i1 %227, label %228, label %232

228:                                              ; preds = %223
  %229 = trunc i64 %175 to i32
  %230 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %231 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %230, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.77, i64 0, i64 0), i32 %229) #9
  br label %758

232:                                              ; preds = %223
  %233 = add nuw nsw i64 %179, 8
  %234 = icmp ugt i64 %233, %2
  br i1 %234, label %235, label %239

235:                                              ; preds = %232
  %236 = trunc i64 %175 to i32
  %237 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %238 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %237, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i64 0, i64 0), i32 %236) #9
  br label %758

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %192, i64 %175, i32 4
  %241 = getelementptr inbounds i8, i8* %1, i64 %224
  %242 = bitcast i8* %241 to i32*
  %243 = load i32, i32* %242, align 1
  %244 = tail call i32 @llvm.bswap.i32(i32 %243) #9
  store i32 %244, i32* %240, align 4
  %245 = add nuw nsw i64 %179, 12
  %246 = icmp ugt i64 %245, %2
  br i1 %246, label %254, label %247

247:                                              ; preds = %239
  %248 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %249 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %248, i64 %175, i32 5
  %250 = getelementptr inbounds i8, i8* %1, i64 %233
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 1
  %253 = tail call i32 @llvm.bswap.i32(i32 %252) #9
  store i32 %253, i32* %249, align 4
  br label %277

254:                                              ; preds = %239
  %255 = trunc i64 %175 to i32
  %256 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %257 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %256, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.76, i64 0, i64 0), i32 %255) #9
  br label %758

258:                                              ; preds = %186
  %259 = add nuw nsw i64 %179, 6
  %260 = icmp ugt i64 %259, %2
  br i1 %260, label %261, label %265

261:                                              ; preds = %258
  %262 = trunc i64 %175 to i32
  %263 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %264 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %263, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.75, i64 0, i64 0), i32 %262) #9
  br label %758

265:                                              ; preds = %258
  %266 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %192, i64 %175, i32 4
  %267 = getelementptr inbounds i8, i8* %1, i64 %180
  %268 = bitcast i8* %267 to i32*
  %269 = load i32, i32* %268, align 1
  %270 = tail call i32 @llvm.bswap.i32(i32 %269) #9
  store i32 %270, i32* %266, align 4
  %271 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %272 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %271, i64 %175, i32 5
  store i32 0, i32* %272, align 4
  br label %277

273:                                              ; preds = %186
  %274 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %192, i64 %175, i32 4
  store i32 0, i32* %274, align 4
  %275 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %276 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %275, i64 %175, i32 5
  store i32 0, i32* %276, align 4
  br label %277

277:                                              ; preds = %273, %265, %209, %247
  %278 = add nuw nsw i64 %175, 1
  %279 = icmp ult i64 %278, %146
  br i1 %279, label %174, label %168

280:                                              ; preds = %325, %168
  %281 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %282 = zext i16 %22 to i64
  br label %328

283:                                              ; preds = %325, %170
  %284 = phi i64 [ 1, %170 ], [ %326, %325 ]
  %285 = add nsw i64 %284, -1
  %286 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %285, i32 0
  %287 = load i16, i16* %286, align 4
  %288 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %284, i32 0
  %289 = load i16, i16* %288, align 4
  %290 = icmp ugt i16 %287, %289
  br i1 %290, label %291, label %296

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %284, i32 1
  %293 = load i16, i16* %292, align 2
  %294 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %285, i32 1
  %295 = load i16, i16* %294, align 2
  br label %312

296:                                              ; preds = %283
  %297 = icmp eq i16 %287, %289
  br i1 %297, label %298, label %325

298:                                              ; preds = %296
  %299 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %285, i32 1
  %300 = load i16, i16* %299, align 2
  %301 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %284, i32 1
  %302 = load i16, i16* %301, align 2
  %303 = icmp ugt i16 %300, %302
  br i1 %303, label %312, label %304

304:                                              ; preds = %298
  %305 = icmp eq i16 %300, %302
  br i1 %305, label %306, label %325

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %285, i32 5
  %308 = load i32, i32* %307, align 4
  %309 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %284, i32 5
  %310 = load i32, i32* %309, align 4
  %311 = icmp ugt i32 %308, %310
  br i1 %311, label %312, label %325

312:                                              ; preds = %291, %306, %298
  %313 = phi i16 [ %295, %291 ], [ %300, %306 ], [ %300, %298 ]
  %314 = phi i16 [ %293, %291 ], [ %300, %306 ], [ %302, %298 ]
  %315 = zext i16 %289 to i32
  %316 = zext i16 %314 to i32
  %317 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %284, i32 5
  %318 = load i32, i32* %317, align 4
  %319 = zext i16 %287 to i32
  %320 = zext i16 %313 to i32
  %321 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %173, i64 %285, i32 5
  %322 = load i32, i32* %321, align 4
  %323 = trunc i64 %284 to i32
  %324 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %171, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.79, i64 0, i64 0), i32 %323, i32 %315, i32 %316, i32 %318, i32 %319, i32 %320, i32 %322) #9
  br label %325

325:                                              ; preds = %296, %304, %306, %312
  %326 = add nuw nsw i64 %284, 1
  %327 = icmp eq i64 %326, %172
  br i1 %327, label %280, label %283

328:                                              ; preds = %280, %349
  %329 = phi i64 [ 0, %280 ], [ %350, %349 ]
  %330 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %281, i64 %329, i32 4
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %349, label %333

333:                                              ; preds = %328
  %334 = icmp ugt i32 %331, 1073741824
  br i1 %334, label %335, label %339

335:                                              ; preds = %333
  %336 = trunc i64 %329 to i32
  %337 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %338 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %337, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80, i64 0, i64 0), i32 %336) #9
  br label %758

339:                                              ; preds = %333
  %340 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %281, i64 %329, i32 2
  %341 = load i32, i32* %340, align 4
  %342 = add i32 %341, %331
  %343 = zext i32 %342 to i64
  %344 = icmp ugt i64 %343, %2
  br i1 %344, label %345, label %349

345:                                              ; preds = %339
  %346 = trunc i64 %329 to i32
  %347 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %348 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %347, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.81, i64 0, i64 0), i32 %346, i32 %341, i32 %331) #9
  br label %758

349:                                              ; preds = %339, %328
  %350 = add nuw nsw i64 %329, 1
  %351 = icmp ult i64 %350, %282
  br i1 %351, label %328, label %352

352:                                              ; preds = %349
  %353 = bitcast %"class.std::__1::set"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %353) #9
  %354 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 0
  %355 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %356 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %358 = bitcast %"class.std::__1::__tree_node_base"** %355 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %358, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %357, %"class.std::__1::__tree_end_node"** %354, align 8
  %359 = bitcast %"class.std::__1::vector.80"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %359) #9
  %360 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %8, i64 0, i32 0, i32 0
  %361 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %8, i64 0, i32 0, i32 1
  %362 = getelementptr inbounds %"class.std::__1::vector.80", %"class.std::__1::vector.80"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %359, i8 0, i64 24, i1 false) #9
  %363 = bitcast %"class.std::__1::__tree_end_node"* %357 to %"class.std::__1::__tree_node"**
  %364 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %357, i64 0, i32 0
  %365 = bitcast %"class.std::__1::set"* %7 to i64*
  %366 = bitcast %"struct.std::__1::pair"** %361 to i64*
  %367 = bitcast %"class.std::__1::vector.80"* %8 to i64*
  %368 = bitcast %"struct.std::__1::pair"** %362 to i64*
  %369 = zext i16 %22 to i64
  br label %381

370:                                              ; preds = %570
  %371 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %360, align 8
  %372 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %361, align 8
  %373 = getelementptr inbounds %"struct.std::__1::__less.115", %"struct.std::__1::__less.115"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %373) #9
  call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %371, %"struct.std::__1::pair"* %372, %"struct.std::__1::__less.115"* nonnull dereferenceable(1) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %373) #9
  %374 = load i64, i64* %366, align 8
  %375 = load i64, i64* %367, align 8
  %376 = icmp eq i64 %374, %375
  %377 = inttoptr i64 %375 to %"struct.std::__1::pair"*
  br i1 %376, label %592, label %378

378:                                              ; preds = %370
  %379 = sub i64 %374, %375
  %380 = ashr exact i64 %379, 3
  br label %578

381:                                              ; preds = %573, %352
  %382 = phi %"class.std::__1::__tree_node"* [ null, %352 ], [ %574, %573 ]
  %383 = phi i64 [ 0, %352 ], [ %571, %573 ]
  %384 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %385 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %384, i64 %383, i32 2
  %386 = load i32, i32* %385, align 4
  %387 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %384, i64 %383, i32 4
  %388 = load i32, i32* %387, align 4
  %389 = add i32 %388, %386
  %390 = zext i32 %389 to i64
  %391 = shl nuw i64 %390, 32
  %392 = icmp eq %"class.std::__1::__tree_node"* %382, null
  br i1 %392, label %425, label %393

393:                                              ; preds = %381, %421
  %394 = phi %"class.std::__1::__tree_node"* [ %424, %421 ], [ %382, %381 ]
  %395 = phi %"class.std::__1::__tree_node_base"** [ %423, %421 ], [ %355, %381 ]
  %396 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 1, i32 0
  %397 = load i32, i32* %396, align 4
  %398 = icmp ult i32 %386, %397
  br i1 %398, label %405, label %399

399:                                              ; preds = %393
  %400 = icmp ult i32 %397, %386
  br i1 %400, label %413, label %401

401:                                              ; preds = %399
  %402 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 1, i32 1
  %403 = load i32, i32* %402, align 4
  %404 = icmp ult i32 %389, %403
  br i1 %404, label %405, label %411

405:                                              ; preds = %401, %393
  %406 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 0, i32 0, i32 0
  %407 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %406, align 8
  %408 = icmp eq %"class.std::__1::__tree_node_base"* %407, null
  br i1 %408, label %409, label %421

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 0, i32 0
  br label %425

411:                                              ; preds = %401
  %412 = icmp ult i32 %403, %389
  br i1 %412, label %413, label %419

413:                                              ; preds = %411, %399
  %414 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 0, i32 1
  %415 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %414, align 8
  %416 = icmp eq %"class.std::__1::__tree_node_base"* %415, null
  br i1 %416, label %417, label %421

417:                                              ; preds = %413
  %418 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 0, i32 0
  br label %425

419:                                              ; preds = %411
  %420 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %394, i64 0, i32 0, i32 0
  br label %425

421:                                              ; preds = %413, %405
  %422 = phi %"class.std::__1::__tree_node_base"* [ %407, %405 ], [ %415, %413 ]
  %423 = phi %"class.std::__1::__tree_node_base"** [ %406, %405 ], [ %414, %413 ]
  %424 = bitcast %"class.std::__1::__tree_node_base"* %422 to %"class.std::__1::__tree_node"*
  br label %393

425:                                              ; preds = %381, %419, %417, %409
  %426 = phi %"class.std::__1::__tree_end_node"* [ %410, %409 ], [ %418, %417 ], [ %420, %419 ], [ %357, %381 ]
  %427 = phi %"class.std::__1::__tree_node_base"** [ %406, %409 ], [ %414, %417 ], [ %395, %419 ], [ %364, %381 ]
  %428 = bitcast %"class.std::__1::__tree_node_base"** %427 to %"class.std::__1::__tree_node"**
  %429 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %428, align 8
  %430 = icmp eq %"class.std::__1::__tree_node"* %429, null
  br i1 %430, label %431, label %570

431:                                              ; preds = %425
  %432 = call i8* @_Znwm(i64 40) #10, !noalias !2
  %433 = getelementptr inbounds i8, i8* %432, i64 28
  %434 = bitcast i8* %433 to i64*
  %435 = zext i32 %386 to i64
  %436 = or i64 %391, %435
  store i64 %436, i64* %434, align 4, !noalias !2
  %437 = bitcast i8* %432 to %"class.std::__1::__tree_node_base"*
  %438 = getelementptr inbounds i8, i8* %432, i64 16
  %439 = bitcast i8* %438 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %426, %"class.std::__1::__tree_end_node"** %439, align 8
  %440 = bitcast %"class.std::__1::__tree_node_base"** %427 to i8**
  store i8* %432, i8** %440, align 8
  %441 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %354, align 8
  %442 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %441, i64 0, i32 0
  %443 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %442, align 8
  %444 = icmp eq %"class.std::__1::__tree_node_base"* %443, null
  br i1 %444, label %448, label %445

445:                                              ; preds = %431
  %446 = ptrtoint %"class.std::__1::__tree_node_base"* %443 to i64
  store i64 %446, i64* %365, align 8
  %447 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %427, align 8
  br label %448

448:                                              ; preds = %445, %431
  %449 = phi %"class.std::__1::__tree_node_base"* [ %437, %431 ], [ %447, %445 ]
  %450 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %355, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %450, %"class.std::__1::__tree_node_base"* %449) #9
  %451 = load i64, i64* %356, align 8
  %452 = add i64 %451, 1
  store i64 %452, i64* %356, align 8
  %453 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %454 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %453, i64 %383, i32 2
  %455 = load i32, i32* %454, align 4
  %456 = zext i32 %455 to i64
  %457 = or i64 %456, 4294967296
  %458 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %361, align 8
  %459 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %362, align 8
  %460 = icmp ult %"struct.std::__1::pair"* %458, %459
  %461 = ptrtoint %"struct.std::__1::pair"* %459 to i64
  br i1 %460, label %462, label %466

462:                                              ; preds = %448
  %463 = bitcast %"struct.std::__1::pair"* %458 to i64*
  store i64 %457, i64* %463, align 4
  %464 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %458, i64 1
  %465 = ptrtoint %"struct.std::__1::pair"* %464 to i64
  store i64 %465, i64* %366, align 8
  br label %512

466:                                              ; preds = %448
  %467 = ptrtoint %"struct.std::__1::pair"* %458 to i64
  %468 = load i64, i64* %367, align 8
  %469 = sub i64 %467, %468
  %470 = ashr exact i64 %469, 3
  %471 = add nsw i64 %470, 1
  %472 = icmp ugt i64 %471, 2305843009213693951
  br i1 %472, label %473, label %475

473:                                              ; preds = %466
  %474 = bitcast %"class.std::__1::vector.80"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %474) #11
  unreachable

475:                                              ; preds = %466
  %476 = sub i64 %461, %468
  %477 = ashr exact i64 %476, 3
  %478 = icmp ult i64 %477, 1152921504606846975
  br i1 %478, label %479, label %487

479:                                              ; preds = %475
  %480 = ashr exact i64 %476, 2
  %481 = icmp ult i64 %480, %471
  %482 = select i1 %481, i64 %471, i64 %480
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %492, label %484

484:                                              ; preds = %479
  %485 = icmp ugt i64 %482, 2305843009213693951
  br i1 %485, label %486, label %487

486:                                              ; preds = %484
  call void @abort() #11
  unreachable

487:                                              ; preds = %484, %475
  %488 = phi i64 [ %482, %484 ], [ 2305843009213693951, %475 ]
  %489 = shl i64 %488, 3
  %490 = call i8* @_Znwm(i64 %489) #10
  %491 = bitcast i8* %490 to %"struct.std::__1::pair"*
  br label %492

492:                                              ; preds = %487, %479
  %493 = phi i64 [ %488, %487 ], [ 0, %479 ]
  %494 = phi i8* [ %490, %487 ], [ null, %479 ]
  %495 = phi %"struct.std::__1::pair"* [ %491, %487 ], [ null, %479 ]
  %496 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %495, i64 %470
  %497 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %495, i64 %493
  %498 = ptrtoint %"struct.std::__1::pair"* %497 to i64
  %499 = bitcast %"struct.std::__1::pair"* %496 to i64*
  store i64 %457, i64* %499, align 4
  %500 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %496, i64 1
  %501 = ptrtoint %"struct.std::__1::pair"* %500 to i64
  %502 = ptrtoint %"struct.std::__1::pair"* %495 to i64
  %503 = icmp sgt i64 %469, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %492
  %505 = inttoptr i64 %468 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %494, i8* align 4 %505, i64 %469, i1 false) #9
  br label %506

506:                                              ; preds = %504, %492
  store i64 %502, i64* %367, align 8
  store i64 %501, i64* %366, align 8
  store i64 %498, i64* %368, align 8
  %507 = icmp eq i64 %468, 0
  br i1 %507, label %512, label %508

508:                                              ; preds = %506
  %509 = inttoptr i64 %468 to i8*
  call void @_ZdlPv(i8* %509) #10
  %510 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %361, align 8
  %511 = ptrtoint %"struct.std::__1::pair"* %510 to i64
  br label %512

512:                                              ; preds = %462, %506, %508
  %513 = phi i64 [ %465, %462 ], [ %501, %506 ], [ %511, %508 ]
  %514 = phi %"struct.std::__1::pair"* [ %464, %462 ], [ %500, %506 ], [ %510, %508 ]
  %515 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %362, align 8
  %516 = icmp ult %"struct.std::__1::pair"* %514, %515
  %517 = ptrtoint %"struct.std::__1::pair"* %515 to i64
  br i1 %516, label %518, label %522

518:                                              ; preds = %512
  %519 = bitcast %"struct.std::__1::pair"* %514 to i64*
  store i64 %390, i64* %519, align 4
  %520 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %514, i64 1
  %521 = ptrtoint %"struct.std::__1::pair"* %520 to i64
  store i64 %521, i64* %366, align 8
  br label %570

522:                                              ; preds = %512
  %523 = ptrtoint %"struct.std::__1::pair"* %514 to i64
  %524 = load i64, i64* %367, align 8
  %525 = sub i64 %523, %524
  %526 = ashr exact i64 %525, 3
  %527 = add nsw i64 %526, 1
  %528 = icmp ugt i64 %527, 2305843009213693951
  br i1 %528, label %529, label %531

529:                                              ; preds = %522
  %530 = bitcast %"class.std::__1::vector.80"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %530) #11
  unreachable

531:                                              ; preds = %522
  %532 = sub i64 %517, %524
  %533 = ashr exact i64 %532, 3
  %534 = icmp ult i64 %533, 1152921504606846975
  br i1 %534, label %535, label %543

535:                                              ; preds = %531
  %536 = ashr exact i64 %532, 2
  %537 = icmp ult i64 %536, %527
  %538 = select i1 %537, i64 %527, i64 %536
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %548, label %540

540:                                              ; preds = %535
  %541 = icmp ugt i64 %538, 2305843009213693951
  br i1 %541, label %542, label %543

542:                                              ; preds = %540
  call void @abort() #11
  unreachable

543:                                              ; preds = %540, %531
  %544 = phi i64 [ %538, %540 ], [ 2305843009213693951, %531 ]
  %545 = shl i64 %544, 3
  %546 = call i8* @_Znwm(i64 %545) #10
  %547 = bitcast i8* %546 to %"struct.std::__1::pair"*
  br label %548

548:                                              ; preds = %543, %535
  %549 = phi i64 [ %544, %543 ], [ 0, %535 ]
  %550 = phi %"struct.std::__1::pair"* [ %547, %543 ], [ null, %535 ]
  %551 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %550, i64 %526
  %552 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %550, i64 %549
  %553 = ptrtoint %"struct.std::__1::pair"* %552 to i64
  %554 = bitcast %"struct.std::__1::pair"* %551 to i64*
  store i64 %390, i64* %554, align 4
  %555 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %551, i64 1
  %556 = ptrtoint %"struct.std::__1::pair"* %555 to i64
  %557 = sub i64 %513, %524
  %558 = ashr exact i64 %557, 3
  %559 = sub nsw i64 0, %558
  %560 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %551, i64 %559
  %561 = ptrtoint %"struct.std::__1::pair"* %560 to i64
  %562 = icmp sgt i64 %557, 0
  br i1 %562, label %563, label %566

563:                                              ; preds = %548
  %564 = bitcast %"struct.std::__1::pair"* %560 to i8*
  %565 = inttoptr i64 %524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %564, i8* align 4 %565, i64 %557, i1 false) #9
  br label %566

566:                                              ; preds = %563, %548
  store i64 %561, i64* %367, align 8
  store i64 %556, i64* %366, align 8
  store i64 %553, i64* %368, align 8
  %567 = icmp eq i64 %524, 0
  br i1 %567, label %570, label %568

568:                                              ; preds = %566
  %569 = inttoptr i64 %524 to i8*
  call void @_ZdlPv(i8* %569) #10
  br label %570

570:                                              ; preds = %425, %568, %566, %518
  %571 = add nuw nsw i64 %383, 1
  %572 = icmp ult i64 %571, %369
  br i1 %572, label %573, label %370

573:                                              ; preds = %570
  %574 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %363, align 8
  br label %381

575:                                              ; preds = %578
  %576 = zext i32 %588 to i64
  %577 = icmp ugt i64 %380, %576
  br i1 %577, label %578, label %592

578:                                              ; preds = %378, %575
  %579 = phi i64 [ 0, %378 ], [ %576, %575 ]
  %580 = phi i32 [ 0, %378 ], [ %588, %575 ]
  %581 = phi i32 [ 0, %378 ], [ %586, %575 ]
  %582 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %377, i64 %579, i32 1
  %583 = load i8, i8* %582, align 4
  %584 = icmp eq i8 %583, 0
  %585 = select i1 %584, i32 -1, i32 1
  %586 = add nsw i32 %585, %581
  %587 = icmp sgt i32 %586, 1
  %588 = add i32 %580, 1
  br i1 %587, label %589, label %575

589:                                              ; preds = %578
  %590 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %591 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %590, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.82, i64 0, i64 0), i32 %586) #9
  br label %747

592:                                              ; preds = %575, %370
  %593 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %594 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 0, i32 3
  %595 = load %"struct.ots::Font"*, %"struct.ots::Font"** %594, align 8
  %596 = call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %595, i32 1835104368) #9
  %597 = icmp eq %"class.ots::Table"* %596, null
  br i1 %597, label %598, label %600

598:                                              ; preds = %592
  %599 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %593, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.83, i64 0, i64 0)) #9
  br label %747

600:                                              ; preds = %592
  %601 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %596, i64 0, i32 5, i64 1
  %602 = bitcast i8* %601 to i16*
  %603 = load i16, i16* %602, align 2
  %604 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10
  %605 = bitcast %"class.std::__1::vector.43"* %604 to i64*
  %606 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10, i32 0, i32 1
  %607 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %606 to i64*
  %608 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9
  %609 = bitcast %"class.std::__1::vector.43"* %608 to i64*
  %610 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9, i32 0, i32 1
  %611 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %610 to i64*
  %612 = zext i16 %22 to i64
  br label %613

613:                                              ; preds = %600, %744
  %614 = phi i64 [ 0, %600 ], [ %745, %744 ]
  %615 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %616 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 0
  %617 = load i16, i16* %616, align 4
  switch i16 %617, label %744 [
    i16 0, label %618
    i16 1, label %687
    i16 3, label %704
  ]

618:                                              ; preds = %613
  %619 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 1
  %620 = load i16, i16* %619, align 2
  switch i16 %620, label %744 [
    i16 0, label %624
    i16 1, label %624
    i16 3, label %640
    i16 4, label %621
    i16 5, label %671
  ]

621:                                              ; preds = %618
  %622 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %623 = load i16, i16* %622, align 4
  br label %656

624:                                              ; preds = %618, %618
  %625 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %626 = load i16, i16* %625, align 4
  %627 = icmp eq i16 %626, 4
  br i1 %627, label %628, label %744

628:                                              ; preds = %624
  %629 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %630 = load i32, i32* %629, align 4
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds i8, i8* %1, i64 %631
  %633 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %634 = load i32, i32* %633, align 4
  %635 = zext i32 %634 to i64
  %636 = call zeroext i1 @_ZN3ots12OpenTypeCMAP12ParseFormat4EiiPKhmt(%"class.ots::OpenTypeCMAP"* %0, i32 3, i32 1, i8* %632, i64 %635, i16 zeroext %603)
  br i1 %636, label %744, label %637

637:                                              ; preds = %628
  %638 = trunc i64 %614 to i32
  %639 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %593, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.84, i64 0, i64 0), i32 %638) #9
  br label %747

640:                                              ; preds = %618
  %641 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %642 = load i16, i16* %641, align 4
  %643 = icmp eq i16 %642, 4
  br i1 %643, label %644, label %656

644:                                              ; preds = %640
  %645 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %646 = load i32, i32* %645, align 4
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds i8, i8* %1, i64 %647
  %649 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %650 = load i32, i32* %649, align 4
  %651 = zext i32 %650 to i64
  %652 = call zeroext i1 @_ZN3ots12OpenTypeCMAP12ParseFormat4EiiPKhmt(%"class.ots::OpenTypeCMAP"* %0, i32 0, i32 3, i8* %648, i64 %651, i16 zeroext %603)
  br i1 %652, label %744, label %653

653:                                              ; preds = %644
  %654 = trunc i64 %614 to i32
  %655 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %593, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.84, i64 0, i64 0), i32 %654) #9
  br label %747

656:                                              ; preds = %621, %640
  %657 = phi i16 [ %623, %621 ], [ %642, %640 ]
  %658 = icmp eq i16 %657, 12
  br i1 %658, label %659, label %744

659:                                              ; preds = %656
  %660 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %661 = load i32, i32* %660, align 4
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds i8, i8* %1, i64 %662
  %664 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %665 = load i32, i32* %664, align 4
  %666 = zext i32 %665 to i64
  %667 = call zeroext i1 @_ZN3ots12OpenTypeCMAP10Parse31012EPKhmt(%"class.ots::OpenTypeCMAP"* %0, i8* %663, i64 %666, i16 zeroext %603)
  br i1 %667, label %744, label %668

668:                                              ; preds = %659
  %669 = trunc i64 %614 to i32
  %670 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %593, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.85, i64 0, i64 0), i32 %669) #9
  br label %747

671:                                              ; preds = %618
  %672 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %673 = load i16, i16* %672, align 4
  %674 = icmp eq i16 %673, 14
  br i1 %674, label %675, label %744

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %677 = load i32, i32* %676, align 4
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds i8, i8* %1, i64 %678
  %680 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %681 = load i32, i32* %680, align 4
  %682 = zext i32 %681 to i64
  %683 = call zeroext i1 @_ZN3ots12OpenTypeCMAP9Parse0514EPKhm(%"class.ots::OpenTypeCMAP"* %0, i8* %679, i64 %682)
  br i1 %683, label %744, label %684

684:                                              ; preds = %675
  %685 = trunc i64 %614 to i32
  %686 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %593, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.86, i64 0, i64 0), i32 %685) #9
  br label %747

687:                                              ; preds = %613
  %688 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 1
  %689 = load i16, i16* %688, align 2
  %690 = icmp eq i16 %689, 0
  br i1 %690, label %691, label %744

691:                                              ; preds = %687
  %692 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %693 = load i16, i16* %692, align 4
  %694 = icmp eq i16 %693, 0
  br i1 %694, label %695, label %744

695:                                              ; preds = %691
  %696 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %697 = load i32, i32* %696, align 4
  %698 = zext i32 %697 to i64
  %699 = getelementptr inbounds i8, i8* %1, i64 %698
  %700 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %701 = load i32, i32* %700, align 4
  %702 = zext i32 %701 to i64
  %703 = call zeroext i1 @_ZN3ots12OpenTypeCMAP8Parse100EPKhm(%"class.ots::OpenTypeCMAP"* %0, i8* %699, i64 %702)
  br i1 %703, label %744, label %747

704:                                              ; preds = %613
  %705 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 1
  %706 = load i16, i16* %705, align 2
  switch i16 %706, label %744 [
    i16 0, label %707
    i16 1, label %707
    i16 10, label %721
  ]

707:                                              ; preds = %704, %704
  %708 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %709 = load i16, i16* %708, align 4
  %710 = icmp eq i16 %709, 4
  br i1 %710, label %711, label %744

711:                                              ; preds = %707
  %712 = zext i16 %706 to i32
  %713 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %714 = load i32, i32* %713, align 4
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds i8, i8* %1, i64 %715
  %717 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %718 = load i32, i32* %717, align 4
  %719 = zext i32 %718 to i64
  %720 = call zeroext i1 @_ZN3ots12OpenTypeCMAP12ParseFormat4EiiPKhmt(%"class.ots::OpenTypeCMAP"* %0, i32 3, i32 %712, i8* %716, i64 %719, i16 zeroext %603)
  br i1 %720, label %744, label %747

721:                                              ; preds = %704
  %722 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 3
  %723 = load i16, i16* %722, align 4
  switch i16 %723, label %744 [
    i16 12, label %724
    i16 13, label %734
  ]

724:                                              ; preds = %721
  %725 = load i64, i64* %609, align 8
  store i64 %725, i64* %611, align 8
  %726 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %727 = load i32, i32* %726, align 4
  %728 = zext i32 %727 to i64
  %729 = getelementptr inbounds i8, i8* %1, i64 %728
  %730 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %731 = load i32, i32* %730, align 4
  %732 = zext i32 %731 to i64
  %733 = call zeroext i1 @_ZN3ots12OpenTypeCMAP10Parse31012EPKhmt(%"class.ots::OpenTypeCMAP"* %0, i8* %729, i64 %732, i16 zeroext %603)
  br i1 %733, label %744, label %747

734:                                              ; preds = %721
  %735 = load i64, i64* %605, align 8
  store i64 %735, i64* %607, align 8
  %736 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 2
  %737 = load i32, i32* %736, align 4
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds i8, i8* %1, i64 %738
  %740 = getelementptr inbounds %"struct.(anonymous namespace)::CMAPSubtableHeader", %"struct.(anonymous namespace)::CMAPSubtableHeader"* %615, i64 %614, i32 4
  %741 = load i32, i32* %740, align 4
  %742 = zext i32 %741 to i64
  %743 = call zeroext i1 @_ZN3ots12OpenTypeCMAP10Parse31013EPKhmt(%"class.ots::OpenTypeCMAP"* %0, i8* %739, i64 %742, i16 zeroext %603)
  br i1 %743, label %744, label %747

744:                                              ; preds = %721, %613, %618, %624, %656, %644, %671, %675, %659, %628, %724, %734, %707, %711, %704, %687, %691, %695
  %745 = add nuw nsw i64 %614, 1
  %746 = icmp ult i64 %745, %612
  br i1 %746, label %613, label %747

747:                                              ; preds = %744, %695, %711, %724, %734, %684, %668, %653, %637, %589, %598
  %748 = phi i1 [ %591, %589 ], [ %599, %598 ], [ %686, %684 ], [ %670, %668 ], [ %655, %653 ], [ %639, %637 ], [ true, %744 ], [ false, %695 ], [ false, %711 ], [ false, %724 ], [ false, %734 ]
  %749 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %360, align 8
  %750 = icmp eq %"struct.std::__1::pair"* %749, null
  br i1 %750, label %754, label %751

751:                                              ; preds = %747
  %752 = ptrtoint %"struct.std::__1::pair"* %749 to i64
  store i64 %752, i64* %366, align 8
  %753 = bitcast %"struct.std::__1::pair"* %749 to i8*
  call void @_ZdlPv(i8* %753) #10
  br label %754

754:                                              ; preds = %747, %751
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %359) #9
  %755 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %7, i64 0, i32 0
  %756 = bitcast %"class.std::__1::__tree_end_node"* %357 to %"class.std::__1::__tree_node"**
  %757 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %756, align 8
  call void @_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.71"* nonnull %755, %"class.std::__1::__tree_node"* %757) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %353) #9
  br label %758

758:                                              ; preds = %345, %335, %198, %205, %228, %235, %254, %261, %182, %161, %152, %141, %754
  %759 = phi i1 [ %143, %141 ], [ %748, %754 ], [ %164, %161 ], [ %155, %152 ], [ %185, %182 ], [ %201, %198 ], [ %208, %205 ], [ %231, %228 ], [ %238, %235 ], [ %257, %254 ], [ %264, %261 ], [ %348, %345 ], [ %338, %335 ]
  %760 = load %"struct.(anonymous namespace)::CMAPSubtableHeader"*, %"struct.(anonymous namespace)::CMAPSubtableHeader"** %35, align 8
  %761 = icmp eq %"struct.(anonymous namespace)::CMAPSubtableHeader"* %760, null
  br i1 %761, label %766, label %762

762:                                              ; preds = %758
  %763 = ptrtoint %"struct.(anonymous namespace)::CMAPSubtableHeader"* %760 to i64
  %764 = bitcast %"struct.(anonymous namespace)::CMAPSubtableHeader"** %36 to i64*
  store i64 %763, i64* %764, align 8
  %765 = bitcast %"struct.(anonymous namespace)::CMAPSubtableHeader"* %760 to i8*
  call void @_ZdlPv(i8* %765) #10
  br label %766

766:                                              ; preds = %758, %762
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #9
  br label %767

767:                                              ; preds = %766, %30, %24, %15
  %768 = phi i1 [ %27, %24 ], [ %759, %766 ], [ %32, %30 ], [ %17, %15 ]
  ret i1 %768
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeCMAP9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeCMAP"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i16, align 2
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i16, align 2
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i16, align 2
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i16, align 2
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i16, align 2
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i16, align 2
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i16, align 2
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca i16, align 2
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  %84 = alloca i32, align 4
  %85 = alloca i32, align 4
  %86 = alloca i32, align 4
  %87 = alloca i32, align 4
  %88 = alloca i32, align 4
  %89 = alloca i32, align 4
  %90 = alloca i32, align 4
  %91 = alloca i32, align 4
  %92 = alloca i32, align 4
  %93 = alloca i32, align 4
  %94 = alloca i32, align 4
  %95 = alloca i32, align 4
  %96 = alloca i32, align 4
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca i32, align 4
  %100 = alloca i32, align 4
  %101 = alloca i16, align 2
  %102 = alloca i32, align 4
  %103 = alloca i32, align 4
  %104 = alloca i16, align 2
  %105 = alloca i32, align 4
  %106 = alloca i32, align 4
  %107 = alloca i32, align 4
  %108 = alloca i32, align 4
  %109 = alloca i32, align 4
  %110 = alloca i32, align 4
  %111 = alloca i32, align 4
  %112 = alloca i32, align 4
  %113 = alloca i16, align 2
  %114 = alloca i32, align 4
  %115 = alloca i32, align 4
  %116 = alloca i16, align 2
  %117 = alloca i32, align 4
  %118 = alloca i32, align 4
  %119 = alloca i16, align 2
  %120 = alloca i32, align 4
  %121 = alloca i32, align 4
  %122 = alloca i16, align 2
  %123 = alloca i32, align 4
  %124 = alloca i32, align 4
  %125 = alloca i32, align 4
  %126 = alloca i32, align 4
  %127 = alloca i32, align 4
  %128 = alloca i32, align 4
  %129 = alloca i32, align 4
  %130 = alloca i32, align 4
  %131 = alloca i16, align 2
  %132 = alloca i32, align 4
  %133 = alloca i8, align 1
  %134 = alloca i32, align 4
  %135 = alloca i32, align 4
  %136 = alloca i32, align 4
  %137 = alloca i32, align 4
  %138 = alloca i32, align 4
  %139 = alloca i32, align 4
  %140 = alloca i32, align 4
  %141 = alloca i32, align 4
  %142 = alloca i32, align 4
  %143 = alloca i32, align 4
  %144 = alloca i32, align 4
  %145 = alloca i32, align 4
  %146 = alloca i32, align 4
  %147 = alloca i32, align 4
  %148 = alloca i32, align 4
  %149 = alloca i32, align 4
  %150 = alloca i32, align 4
  %151 = alloca i32, align 4
  %152 = alloca i32, align 4
  %153 = alloca i32, align 4
  %154 = alloca i32, align 4
  %155 = alloca i32, align 4
  %156 = alloca i32, align 4
  %157 = alloca i16, align 2
  %158 = alloca i32, align 4
  %159 = alloca i32, align 4
  %160 = alloca i32, align 4
  %161 = alloca i32, align 4
  %162 = alloca i16, align 2
  %163 = alloca i32, align 4
  %164 = alloca i32, align 4
  %165 = alloca i16, align 2
  %166 = alloca i32, align 4
  %167 = alloca i32, align 4
  %168 = alloca i16, align 2
  %169 = alloca i32, align 4
  %170 = alloca i32, align 4
  %171 = alloca i32, align 4
  %172 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 1
  %173 = load i8*, i8** %172, align 8
  %174 = icmp ne i8* %173, null
  %175 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 4
  %176 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 4, i32 0, i32 1
  %177 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.std::__1::vector"* %175 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = icmp ne i64 %178, %180
  %182 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11
  %183 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11, i32 0, i32 1
  %184 = bitcast i8** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.std::__1::vector.50"* %182 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = icmp ne i64 %185, %187
  %189 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 5
  %190 = load i8*, i8** %189, align 8
  %191 = icmp ne i8* %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %2
  %193 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 7
  %194 = load i8*, i8** %193, align 8
  %195 = icmp ne i8* %194, null
  br label %196

196:                                              ; preds = %192, %2
  %197 = phi i1 [ false, %2 ], [ %195, %192 ]
  %198 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9
  %199 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9, i32 0, i32 1
  %200 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.std::__1::vector.43"* %198 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = sub i64 %201, %203
  %205 = icmp ne i64 %204, 0
  %206 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10
  %207 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10, i32 0, i32 1
  %208 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.std::__1::vector.43"* %206 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = sub i64 %209, %211
  %213 = icmp ne i64 %212, 0
  %214 = zext i1 %174 to i16
  %215 = zext i1 %181 to i16
  %216 = add nuw nsw i16 %215, %214
  %217 = zext i1 %188 to i16
  %218 = add nuw nsw i16 %216, %217
  %219 = zext i1 %191 to i16
  %220 = add nuw nsw i16 %218, %219
  %221 = zext i1 %197 to i16
  %222 = add nuw nsw i16 %220, %221
  %223 = zext i1 %205 to i16
  %224 = add nuw nsw i16 %222, %223
  %225 = zext i1 %213 to i16
  %226 = add nuw nsw i16 %224, %225
  %227 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %228 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %229 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %228, i64 4
  %230 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %229, align 8
  %231 = tail call i64 %230(%"class.ots::OTSStream"* %1) #9
  %232 = or i1 %191, %197
  %233 = or i1 %174, %232
  %234 = or i64 %212, %204
  %235 = icmp ne i64 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %240, label %237

237:                                              ; preds = %196
  %238 = bitcast %"class.ots::OpenTypeCMAP"* %0 to %"class.ots::Table"*
  %239 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %238, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.87, i64 0, i64 0)) #9
  br label %3081

240:                                              ; preds = %196
  %241 = bitcast i16* %165 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %241)
  store i16 0, i16* %165, align 2
  %242 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %243 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %242, i64 4
  %244 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %243, align 8
  %245 = tail call i64 %244(%"class.ots::OTSStream"* %1) #9
  %246 = and i64 %245, 3
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %251

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %250 = load i32, i32* %249, align 8
  br label %263

251:                                              ; preds = %240
  %252 = sub nuw nsw i64 4, %246
  %253 = icmp ult i64 %252, 2
  %254 = select i1 %253, i64 %252, i64 2
  %255 = bitcast i32* %163 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255) #9
  store i32 0, i32* %163, align 4
  %256 = getelementptr inbounds i8, i8* %255, i64 %246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %256, i8* nonnull align 2 %241, i64 %254, i1 false) #9
  %257 = load i32, i32* %163, align 4
  %258 = tail call i32 @llvm.bswap.i32(i32 %257) #9
  %259 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = add i32 %260, %258
  store i32 %261, i32* %259, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255) #9
  %262 = icmp eq i64 %246, 3
  br i1 %262, label %263, label %273

263:                                              ; preds = %251, %248
  %264 = phi i32 [ %261, %251 ], [ %250, %248 ]
  %265 = phi i64 [ %254, %251 ], [ 0, %248 ]
  %266 = phi i64 [ 1, %251 ], [ 2, %248 ]
  %267 = bitcast i32* %164 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %267)
  store i32 0, i32* %164, align 4
  %268 = getelementptr inbounds i8, i8* %241, i64 %265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %267, i8* align 1 %268, i64 %266, i1 false) #9
  %269 = load i32, i32* %164, align 4
  %270 = tail call i32 @llvm.bswap.i32(i32 %269) #9
  %271 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %272 = add i32 %270, %264
  store i32 %272, i32* %271, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %267)
  br label %273

273:                                              ; preds = %251, %263
  %274 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %275 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %276 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %275, i64 2
  %277 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %276, align 8
  %278 = call zeroext i1 %277(%"class.ots::OTSStream"* %1, i8* nonnull %241, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %241)
  br i1 %278, label %279, label %3081

279:                                              ; preds = %273
  %280 = bitcast i16* %162 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %280)
  %281 = call i16 @llvm.bswap.i16(i16 %226) #9
  store i16 %281, i16* %162, align 2
  %282 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %283 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %282, i64 4
  %284 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %283, align 8
  %285 = call i64 %284(%"class.ots::OTSStream"* %1) #9
  %286 = and i64 %285, 3
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %291

288:                                              ; preds = %279
  %289 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %290 = load i32, i32* %289, align 8
  br label %303

291:                                              ; preds = %279
  %292 = sub nuw nsw i64 4, %286
  %293 = icmp ult i64 %292, 2
  %294 = select i1 %293, i64 %292, i64 2
  %295 = bitcast i32* %160 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #9
  store i32 0, i32* %160, align 4
  %296 = getelementptr inbounds i8, i8* %295, i64 %286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* nonnull align 2 %280, i64 %294, i1 false) #9
  %297 = load i32, i32* %160, align 4
  %298 = call i32 @llvm.bswap.i32(i32 %297) #9
  %299 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %300 = load i32, i32* %299, align 8
  %301 = add i32 %300, %298
  store i32 %301, i32* %299, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #9
  %302 = icmp eq i64 %286, 3
  br i1 %302, label %303, label %313

303:                                              ; preds = %291, %288
  %304 = phi i32 [ %301, %291 ], [ %290, %288 ]
  %305 = phi i64 [ %294, %291 ], [ 0, %288 ]
  %306 = phi i64 [ 1, %291 ], [ 2, %288 ]
  %307 = bitcast i32* %161 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %307)
  store i32 0, i32* %161, align 4
  %308 = getelementptr inbounds i8, i8* %280, i64 %305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %307, i8* align 1 %308, i64 %306, i1 false) #9
  %309 = load i32, i32* %161, align 4
  %310 = call i32 @llvm.bswap.i32(i32 %309) #9
  %311 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %312 = add i32 %310, %304
  store i32 %312, i32* %311, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %307)
  br label %313

313:                                              ; preds = %291, %303
  %314 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %315 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %314, i64 2
  %316 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %315, align 8
  %317 = call zeroext i1 %316(%"class.ots::OTSStream"* %1, i8* nonnull %280, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %280)
  br i1 %317, label %318, label %3081

318:                                              ; preds = %313
  %319 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %320 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %319, i64 4
  %321 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %320, align 8
  %322 = call i64 %321(%"class.ots::OTSStream"* %1) #9
  %323 = zext i16 %226 to i64
  %324 = shl nuw nsw i64 %323, 3
  %325 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i64)***
  %326 = load i1 (%"class.ots::OTSStream"*, i64)**, i1 (%"class.ots::OTSStream"*, i64)*** %325, align 8
  %327 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %326, i64 5
  %328 = load i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %327, align 8
  %329 = call zeroext i1 %328(%"class.ots::OTSStream"* %1, i64 %324) #9
  br i1 %329, label %330, label %3081

330:                                              ; preds = %318
  %331 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %332 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %331, i64 4
  %333 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %332, align 8
  %334 = call i64 %333(%"class.ots::OTSStream"* %1) #9
  br i1 %174, label %335, label %441

335:                                              ; preds = %330
  %336 = load i8*, i8** %172, align 8
  %337 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 2
  %338 = load i64, i64* %337, align 8
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %3081, label %340

340:                                              ; preds = %335
  %341 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %342 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %341, i64 4
  %343 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %342, align 8
  %344 = call i64 %343(%"class.ots::OTSStream"* %1) #9
  %345 = and i64 %344, 3
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %359, label %347

347:                                              ; preds = %340
  %348 = sub nuw nsw i64 4, %345
  %349 = icmp ult i64 %348, %338
  %350 = select i1 %349, i64 %348, i64 %338
  %351 = bitcast i32* %158 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %351) #9
  store i32 0, i32* %158, align 4
  %352 = getelementptr inbounds i8, i8* %351, i64 %345
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %352, i8* align 1 %336, i64 %350, i1 false) #9
  %353 = load i32, i32* %158, align 4
  %354 = call i32 @llvm.bswap.i32(i32 %353) #9
  %355 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %356 = load i32, i32* %355, align 8
  %357 = add i32 %356, %354
  store i32 %357, i32* %355, align 8
  %358 = sub i64 %338, %350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %351) #9
  br label %359

359:                                              ; preds = %347, %340
  %360 = phi i64 [ %338, %340 ], [ %358, %347 ]
  %361 = phi i64 [ 0, %340 ], [ %350, %347 ]
  %362 = icmp ugt i64 %360, 3
  br i1 %362, label %363, label %424

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %365 = load i32, i32* %364, align 8
  %366 = add i64 %360, -4
  %367 = lshr i64 %366, 2
  %368 = add nuw nsw i64 %367, 1
  %369 = and i64 %368, 3
  %370 = icmp eq i64 %369, 0
  br i1 %370, label %385, label %371

371:                                              ; preds = %363, %371
  %372 = phi i32 [ %380, %371 ], [ %365, %363 ]
  %373 = phi i64 [ %382, %371 ], [ %361, %363 ]
  %374 = phi i64 [ %381, %371 ], [ %360, %363 ]
  %375 = phi i64 [ %383, %371 ], [ %369, %363 ]
  %376 = getelementptr inbounds i8, i8* %336, i64 %373
  %377 = bitcast i8* %376 to i32*
  %378 = load i32, i32* %377, align 1
  %379 = call i32 @llvm.bswap.i32(i32 %378) #9
  %380 = add i32 %379, %372
  store i32 %380, i32* %364, align 8
  %381 = add i64 %374, -4
  %382 = add i64 %373, 4
  %383 = add i64 %375, -1
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %385, label %371, !llvm.loop !5

385:                                              ; preds = %371, %363
  %386 = phi i32 [ %365, %363 ], [ %380, %371 ]
  %387 = phi i64 [ %361, %363 ], [ %382, %371 ]
  %388 = phi i64 [ %360, %363 ], [ %381, %371 ]
  %389 = phi i64 [ undef, %363 ], [ %382, %371 ]
  %390 = icmp ult i64 %366, 12
  br i1 %390, label %421, label %391

391:                                              ; preds = %385, %391
  %392 = phi i32 [ %417, %391 ], [ %386, %385 ]
  %393 = phi i64 [ %419, %391 ], [ %387, %385 ]
  %394 = phi i64 [ %418, %391 ], [ %388, %385 ]
  %395 = getelementptr inbounds i8, i8* %336, i64 %393
  %396 = bitcast i8* %395 to i32*
  %397 = load i32, i32* %396, align 1
  %398 = call i32 @llvm.bswap.i32(i32 %397) #9
  %399 = add i32 %398, %392
  store i32 %399, i32* %364, align 8
  %400 = add i64 %393, 4
  %401 = getelementptr inbounds i8, i8* %336, i64 %400
  %402 = bitcast i8* %401 to i32*
  %403 = load i32, i32* %402, align 1
  %404 = call i32 @llvm.bswap.i32(i32 %403) #9
  %405 = add i32 %404, %399
  store i32 %405, i32* %364, align 8
  %406 = add i64 %393, 8
  %407 = getelementptr inbounds i8, i8* %336, i64 %406
  %408 = bitcast i8* %407 to i32*
  %409 = load i32, i32* %408, align 1
  %410 = call i32 @llvm.bswap.i32(i32 %409) #9
  %411 = add i32 %410, %405
  store i32 %411, i32* %364, align 8
  %412 = add i64 %393, 12
  %413 = getelementptr inbounds i8, i8* %336, i64 %412
  %414 = bitcast i8* %413 to i32*
  %415 = load i32, i32* %414, align 1
  %416 = call i32 @llvm.bswap.i32(i32 %415) #9
  %417 = add i32 %416, %411
  store i32 %417, i32* %364, align 8
  %418 = add i64 %394, -16
  %419 = add i64 %393, 16
  %420 = icmp ugt i64 %418, 3
  br i1 %420, label %391, label %421

421:                                              ; preds = %391, %385
  %422 = phi i64 [ %389, %385 ], [ %419, %391 ]
  %423 = and i64 %360, 3
  br label %424

424:                                              ; preds = %421, %359
  %425 = phi i64 [ %360, %359 ], [ %423, %421 ]
  %426 = phi i64 [ %361, %359 ], [ %422, %421 ]
  %427 = icmp eq i64 %425, 0
  br i1 %427, label %436, label %428

428:                                              ; preds = %424
  %429 = bitcast i32* %159 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %429)
  store i32 0, i32* %159, align 4
  %430 = getelementptr inbounds i8, i8* %336, i64 %426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %429, i8* align 1 %430, i64 %425, i1 false) #9
  %431 = load i32, i32* %159, align 4
  %432 = call i32 @llvm.bswap.i32(i32 %431) #9
  %433 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %434 = load i32, i32* %433, align 8
  %435 = add i32 %434, %432
  store i32 %435, i32* %433, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %429)
  br label %436

436:                                              ; preds = %424, %428
  %437 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %438 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %437, i64 2
  %439 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %438, align 8
  %440 = call zeroext i1 %439(%"class.ots::OTSStream"* %1, i8* %336, i64 %338) #9
  br i1 %440, label %441, label %3081

441:                                              ; preds = %436, %330
  %442 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %443 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %442, i64 4
  %444 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %443, align 8
  %445 = call i64 %444(%"class.ots::OTSStream"* %1) #9
  br i1 %181, label %446, label %1024

446:                                              ; preds = %441
  %447 = load i64, i64* %177, align 8
  %448 = load i64, i64* %179, align 8
  %449 = sub i64 %447, %448
  %450 = lshr exact i64 %449, 6
  %451 = trunc i64 %450 to i32
  %452 = bitcast i16* %157 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %452)
  store i16 3584, i16* %157, align 2
  %453 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %454 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %453, i64 4
  %455 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %454, align 8
  %456 = call i64 %455(%"class.ots::OTSStream"* %1) #9
  %457 = and i64 %456, 3
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %459, label %462

459:                                              ; preds = %446
  %460 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %461 = load i32, i32* %460, align 8
  br label %474

462:                                              ; preds = %446
  %463 = sub nuw nsw i64 4, %457
  %464 = icmp ult i64 %463, 2
  %465 = select i1 %464, i64 %463, i64 2
  %466 = bitcast i32* %155 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %466) #9
  store i32 0, i32* %155, align 4
  %467 = getelementptr inbounds i8, i8* %466, i64 %457
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %467, i8* nonnull align 2 %452, i64 %465, i1 false) #9
  %468 = load i32, i32* %155, align 4
  %469 = call i32 @llvm.bswap.i32(i32 %468) #9
  %470 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %471 = load i32, i32* %470, align 8
  %472 = add i32 %471, %469
  store i32 %472, i32* %470, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %466) #9
  %473 = icmp eq i64 %457, 3
  br i1 %473, label %474, label %484

474:                                              ; preds = %462, %459
  %475 = phi i32 [ %472, %462 ], [ %461, %459 ]
  %476 = phi i64 [ %465, %462 ], [ 0, %459 ]
  %477 = phi i64 [ 1, %462 ], [ 2, %459 ]
  %478 = bitcast i32* %156 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %478)
  store i32 0, i32* %156, align 4
  %479 = getelementptr inbounds i8, i8* %452, i64 %476
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %478, i8* align 1 %479, i64 %477, i1 false) #9
  %480 = load i32, i32* %156, align 4
  %481 = call i32 @llvm.bswap.i32(i32 %480) #9
  %482 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %483 = add i32 %481, %475
  store i32 %483, i32* %482, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %478)
  br label %484

484:                                              ; preds = %462, %474
  %485 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %486 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %485, i64 2
  %487 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %486, align 8
  %488 = call zeroext i1 %487(%"class.ots::OTSStream"* %1, i8* nonnull %452, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %452)
  br i1 %488, label %489, label %3081

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 3
  %491 = load i64, i64* %490, align 8
  %492 = trunc i64 %491 to i32
  %493 = bitcast i32* %154 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %493)
  %494 = call i32 @llvm.bswap.i32(i32 %492) #9
  store i32 %494, i32* %154, align 4
  %495 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %496 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %495, i64 4
  %497 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %496, align 8
  %498 = call i64 %497(%"class.ots::OTSStream"* %1) #9
  %499 = and i64 %498, 3
  %500 = icmp eq i64 %499, 0
  br i1 %500, label %501, label %504

501:                                              ; preds = %489
  %502 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %503 = load i32, i32* %502, align 8
  br label %516

504:                                              ; preds = %489
  %505 = sub nuw nsw i64 4, %499
  %506 = icmp ult i64 %505, 4
  %507 = select i1 %506, i64 %505, i64 4
  %508 = bitcast i32* %152 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %508) #9
  store i32 0, i32* %152, align 4
  %509 = getelementptr inbounds i8, i8* %508, i64 %499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %509, i8* nonnull align 4 %493, i64 %507, i1 false) #9
  %510 = load i32, i32* %152, align 4
  %511 = call i32 @llvm.bswap.i32(i32 %510) #9
  %512 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %513 = load i32, i32* %512, align 8
  %514 = add i32 %513, %511
  store i32 %514, i32* %512, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %508) #9
  %515 = icmp eq i64 %507, 0
  br i1 %515, label %516, label %525

516:                                              ; preds = %504, %501
  %517 = phi i32 [ %514, %504 ], [ %503, %501 ]
  %518 = phi i64 [ %505, %504 ], [ 0, %501 ]
  %519 = getelementptr inbounds i8, i8* %493, i64 %518
  %520 = bitcast i8* %519 to i32*
  %521 = load i32, i32* %520, align 1
  %522 = call i32 @llvm.bswap.i32(i32 %521) #9
  %523 = add i32 %522, %517
  %524 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %523, i32* %524, align 8
  br label %532

525:                                              ; preds = %504
  %526 = sub nuw nsw i64 4, %507
  %527 = bitcast i32* %153 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %527)
  store i32 0, i32* %153, align 4
  %528 = getelementptr inbounds i8, i8* %493, i64 %505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %527, i8* align 1 %528, i64 %526, i1 false) #9
  %529 = load i32, i32* %153, align 4
  %530 = call i32 @llvm.bswap.i32(i32 %529) #9
  %531 = add i32 %530, %514
  store i32 %531, i32* %512, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %527)
  br label %532

532:                                              ; preds = %516, %525
  %533 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %534 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %533, i64 2
  %535 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %534, align 8
  %536 = call zeroext i1 %535(%"class.ots::OTSStream"* %1, i8* nonnull %493, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %493)
  br i1 %536, label %537, label %3081

537:                                              ; preds = %532
  %538 = bitcast i32* %151 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %538)
  %539 = call i32 @llvm.bswap.i32(i32 %451) #9
  store i32 %539, i32* %151, align 4
  %540 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %541 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %540, i64 4
  %542 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %541, align 8
  %543 = call i64 %542(%"class.ots::OTSStream"* %1) #9
  %544 = and i64 %543, 3
  %545 = icmp eq i64 %544, 0
  br i1 %545, label %546, label %549

546:                                              ; preds = %537
  %547 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %548 = load i32, i32* %547, align 8
  br label %561

549:                                              ; preds = %537
  %550 = sub nuw nsw i64 4, %544
  %551 = icmp ult i64 %550, 4
  %552 = select i1 %551, i64 %550, i64 4
  %553 = bitcast i32* %149 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %553) #9
  store i32 0, i32* %149, align 4
  %554 = getelementptr inbounds i8, i8* %553, i64 %544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %554, i8* nonnull align 4 %538, i64 %552, i1 false) #9
  %555 = load i32, i32* %149, align 4
  %556 = call i32 @llvm.bswap.i32(i32 %555) #9
  %557 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %558 = load i32, i32* %557, align 8
  %559 = add i32 %558, %556
  store i32 %559, i32* %557, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %553) #9
  %560 = icmp eq i64 %552, 0
  br i1 %560, label %561, label %570

561:                                              ; preds = %549, %546
  %562 = phi i32 [ %559, %549 ], [ %548, %546 ]
  %563 = phi i64 [ %550, %549 ], [ 0, %546 ]
  %564 = getelementptr inbounds i8, i8* %538, i64 %563
  %565 = bitcast i8* %564 to i32*
  %566 = load i32, i32* %565, align 1
  %567 = call i32 @llvm.bswap.i32(i32 %566) #9
  %568 = add i32 %567, %562
  %569 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %568, i32* %569, align 8
  br label %577

570:                                              ; preds = %549
  %571 = sub nuw nsw i64 4, %552
  %572 = bitcast i32* %150 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %572)
  store i32 0, i32* %150, align 4
  %573 = getelementptr inbounds i8, i8* %538, i64 %550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %572, i8* align 1 %573, i64 %571, i1 false) #9
  %574 = load i32, i32* %150, align 4
  %575 = call i32 @llvm.bswap.i32(i32 %574) #9
  %576 = add i32 %575, %559
  store i32 %576, i32* %557, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %572)
  br label %577

577:                                              ; preds = %561, %570
  %578 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %579 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %578, i64 2
  %580 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %579, align 8
  %581 = call zeroext i1 %580(%"class.ots::OTSStream"* %1, i8* nonnull %538, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %538)
  br i1 %581, label %582, label %3081

582:                                              ; preds = %577
  %583 = icmp eq i32 %451, 0
  br i1 %583, label %1024, label %584

584:                                              ; preds = %582
  %585 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %175, i64 0, i32 0, i32 0
  %586 = bitcast i32* %148 to i8*
  %587 = getelementptr inbounds i8, i8* %586, i64 1
  %588 = bitcast i32* %146 to i8*
  %589 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %590 = bitcast i32* %147 to i8*
  %591 = bitcast i32* %145 to i8*
  %592 = bitcast i32* %143 to i8*
  %593 = bitcast i32* %144 to i8*
  %594 = bitcast i32* %142 to i8*
  %595 = bitcast i32* %140 to i8*
  %596 = bitcast i32* %141 to i8*
  %597 = and i64 %450, 4294967295
  br label %623

598:                                              ; preds = %740
  %599 = icmp eq i64 %745, %597
  br i1 %599, label %600, label %623

600:                                              ; preds = %598
  br i1 %583, label %1024, label %601

601:                                              ; preds = %600
  %602 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %175, i64 0, i32 0, i32 0
  %603 = bitcast i32* %139 to i8*
  %604 = bitcast i32* %137 to i8*
  %605 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %606 = bitcast i32* %138 to i8*
  %607 = bitcast i32* %136 to i8*
  %608 = getelementptr inbounds i8, i8* %607, i64 1
  %609 = bitcast i32* %134 to i8*
  %610 = bitcast i32* %135 to i8*
  %611 = bitcast i32* %132 to i8*
  %612 = bitcast i32* %128 to i8*
  %613 = bitcast i32* %126 to i8*
  %614 = bitcast i32* %127 to i8*
  %615 = bitcast i32* %125 to i8*
  %616 = getelementptr inbounds i8, i8* %615, i64 1
  %617 = bitcast i32* %123 to i8*
  %618 = bitcast i32* %124 to i8*
  %619 = bitcast i16* %122 to i8*
  %620 = bitcast i32* %120 to i8*
  %621 = bitcast i32* %121 to i8*
  %622 = and i64 %450, 4294967295
  br label %746

623:                                              ; preds = %598, %584
  %624 = phi i64 [ 0, %584 ], [ %745, %598 ]
  %625 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %585, align 8
  %626 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %625, i64 %624, i32 0
  %627 = load i32, i32* %626, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %586)
  %628 = call i32 @llvm.bswap.i32(i32 %627) #9
  store i32 %628, i32* %148, align 4
  %629 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %630 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %629, i64 4
  %631 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %630, align 8
  %632 = call i64 %631(%"class.ots::OTSStream"* %1) #9
  %633 = and i64 %632, 3
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %635, label %637

635:                                              ; preds = %623
  %636 = load i32, i32* %589, align 8
  br label %648

637:                                              ; preds = %623
  %638 = sub nuw nsw i64 4, %633
  %639 = icmp ult i64 %638, 3
  %640 = select i1 %639, i64 %638, i64 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %588) #9
  store i32 0, i32* %146, align 4
  %641 = getelementptr inbounds i8, i8* %588, i64 %633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %641, i8* align 1 %587, i64 %640, i1 false) #9
  %642 = load i32, i32* %146, align 4
  %643 = call i32 @llvm.bswap.i32(i32 %642) #9
  %644 = load i32, i32* %589, align 8
  %645 = add i32 %644, %643
  store i32 %645, i32* %589, align 8
  %646 = xor i64 %640, 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %588) #9
  %647 = icmp eq i64 %646, 0
  br i1 %647, label %656, label %648

648:                                              ; preds = %637, %635
  %649 = phi i32 [ %645, %637 ], [ %636, %635 ]
  %650 = phi i64 [ %640, %637 ], [ 0, %635 ]
  %651 = phi i64 [ %646, %637 ], [ 3, %635 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %590)
  store i32 0, i32* %147, align 4
  %652 = getelementptr inbounds i8, i8* %587, i64 %650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %590, i8* align 1 %652, i64 %651, i1 false) #9
  %653 = load i32, i32* %147, align 4
  %654 = call i32 @llvm.bswap.i32(i32 %653) #9
  %655 = add i32 %654, %649
  store i32 %655, i32* %589, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %590)
  br label %656

656:                                              ; preds = %637, %648
  %657 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %658 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %657, i64 2
  %659 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %658, align 8
  %660 = call zeroext i1 %659(%"class.ots::OTSStream"* %1, i8* %587, i64 3) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %586)
  br i1 %660, label %661, label %3081

661:                                              ; preds = %656
  %662 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %585, align 8
  %663 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %662, i64 %624, i32 1
  %664 = load i32, i32* %663, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %591)
  %665 = call i32 @llvm.bswap.i32(i32 %664) #9
  store i32 %665, i32* %145, align 4
  %666 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %667 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %666, i64 4
  %668 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %667, align 8
  %669 = call i64 %668(%"class.ots::OTSStream"* %1) #9
  %670 = and i64 %669, 3
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %672, label %674

672:                                              ; preds = %661
  %673 = load i32, i32* %589, align 8
  br label %684

674:                                              ; preds = %661
  %675 = sub nuw nsw i64 4, %670
  %676 = icmp ult i64 %675, 4
  %677 = select i1 %676, i64 %675, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %592) #9
  store i32 0, i32* %143, align 4
  %678 = getelementptr inbounds i8, i8* %592, i64 %670
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %678, i8* nonnull align 4 %591, i64 %677, i1 false) #9
  %679 = load i32, i32* %143, align 4
  %680 = call i32 @llvm.bswap.i32(i32 %679) #9
  %681 = load i32, i32* %589, align 8
  %682 = add i32 %681, %680
  store i32 %682, i32* %589, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %592) #9
  %683 = icmp eq i64 %677, 0
  br i1 %683, label %684, label %692

684:                                              ; preds = %674, %672
  %685 = phi i32 [ %682, %674 ], [ %673, %672 ]
  %686 = phi i64 [ %675, %674 ], [ 0, %672 ]
  %687 = getelementptr inbounds i8, i8* %591, i64 %686
  %688 = bitcast i8* %687 to i32*
  %689 = load i32, i32* %688, align 1
  %690 = call i32 @llvm.bswap.i32(i32 %689) #9
  %691 = add i32 %690, %685
  store i32 %691, i32* %589, align 8
  br label %698

692:                                              ; preds = %674
  %693 = sub nuw nsw i64 4, %677
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %593)
  store i32 0, i32* %144, align 4
  %694 = getelementptr inbounds i8, i8* %591, i64 %675
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %593, i8* align 1 %694, i64 %693, i1 false) #9
  %695 = load i32, i32* %144, align 4
  %696 = call i32 @llvm.bswap.i32(i32 %695) #9
  %697 = add i32 %696, %682
  store i32 %697, i32* %589, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %593)
  br label %698

698:                                              ; preds = %684, %692
  %699 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %700 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %699, i64 2
  %701 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %700, align 8
  %702 = call zeroext i1 %701(%"class.ots::OTSStream"* %1, i8* nonnull %591, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %591)
  br i1 %702, label %703, label %3081

703:                                              ; preds = %698
  %704 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %585, align 8
  %705 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %704, i64 %624, i32 2
  %706 = load i32, i32* %705, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %594)
  %707 = call i32 @llvm.bswap.i32(i32 %706) #9
  store i32 %707, i32* %142, align 4
  %708 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %709 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %708, i64 4
  %710 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %709, align 8
  %711 = call i64 %710(%"class.ots::OTSStream"* %1) #9
  %712 = and i64 %711, 3
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %716

714:                                              ; preds = %703
  %715 = load i32, i32* %589, align 8
  br label %726

716:                                              ; preds = %703
  %717 = sub nuw nsw i64 4, %712
  %718 = icmp ult i64 %717, 4
  %719 = select i1 %718, i64 %717, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %595) #9
  store i32 0, i32* %140, align 4
  %720 = getelementptr inbounds i8, i8* %595, i64 %712
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %720, i8* nonnull align 4 %594, i64 %719, i1 false) #9
  %721 = load i32, i32* %140, align 4
  %722 = call i32 @llvm.bswap.i32(i32 %721) #9
  %723 = load i32, i32* %589, align 8
  %724 = add i32 %723, %722
  store i32 %724, i32* %589, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %595) #9
  %725 = icmp eq i64 %719, 0
  br i1 %725, label %726, label %734

726:                                              ; preds = %716, %714
  %727 = phi i32 [ %724, %716 ], [ %715, %714 ]
  %728 = phi i64 [ %717, %716 ], [ 0, %714 ]
  %729 = getelementptr inbounds i8, i8* %594, i64 %728
  %730 = bitcast i8* %729 to i32*
  %731 = load i32, i32* %730, align 1
  %732 = call i32 @llvm.bswap.i32(i32 %731) #9
  %733 = add i32 %732, %727
  store i32 %733, i32* %589, align 8
  br label %740

734:                                              ; preds = %716
  %735 = sub nuw nsw i64 4, %719
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %596)
  store i32 0, i32* %141, align 4
  %736 = getelementptr inbounds i8, i8* %594, i64 %717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %596, i8* align 1 %736, i64 %735, i1 false) #9
  %737 = load i32, i32* %141, align 4
  %738 = call i32 @llvm.bswap.i32(i32 %737) #9
  %739 = add i32 %738, %724
  store i32 %739, i32* %589, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %596)
  br label %740

740:                                              ; preds = %726, %734
  %741 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %742 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %741, i64 2
  %743 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %742, align 8
  %744 = call zeroext i1 %743(%"class.ots::OTSStream"* %1, i8* nonnull %594, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %594)
  %745 = add nuw nsw i64 %624, 1
  br i1 %744, label %598, label %3081

746:                                              ; preds = %1021, %601
  %747 = phi i64 [ 0, %601 ], [ %1022, %1021 ]
  %748 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %602, align 8
  %749 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %748, i64 %747, i32 1
  %750 = load i32, i32* %749, align 4
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %879, label %752

752:                                              ; preds = %746
  %753 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %748, i64 %747, i32 3
  %754 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %748, i64 %747, i32 3, i32 0, i32 1
  %755 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %754 to i64*
  %756 = load i64, i64* %755, align 8
  %757 = bitcast %"class.std::__1::vector.24"* %753 to i64*
  %758 = load i64, i64* %757, align 8
  %759 = sub i64 %756, %758
  %760 = lshr exact i64 %759, 3
  %761 = trunc i64 %760 to i32
  %762 = zext i32 %750 to i64
  %763 = add nsw i64 %445, %762
  %764 = load i1 (%"class.ots::OTSStream"*, i64)**, i1 (%"class.ots::OTSStream"*, i64)*** %325, align 8
  %765 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %764, i64 3
  %766 = load i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %765, align 8
  %767 = call zeroext i1 %766(%"class.ots::OTSStream"* %1, i64 %763) #9
  br i1 %767, label %768, label %3081

768:                                              ; preds = %752
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %603)
  %769 = call i32 @llvm.bswap.i32(i32 %761) #9
  store i32 %769, i32* %139, align 4
  %770 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %771 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %770, i64 4
  %772 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %771, align 8
  %773 = call i64 %772(%"class.ots::OTSStream"* %1) #9
  %774 = and i64 %773, 3
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %776, label %778

776:                                              ; preds = %768
  %777 = load i32, i32* %605, align 8
  br label %788

778:                                              ; preds = %768
  %779 = sub nuw nsw i64 4, %774
  %780 = icmp ult i64 %779, 4
  %781 = select i1 %780, i64 %779, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %604) #9
  store i32 0, i32* %137, align 4
  %782 = getelementptr inbounds i8, i8* %604, i64 %774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %782, i8* nonnull align 4 %603, i64 %781, i1 false) #9
  %783 = load i32, i32* %137, align 4
  %784 = call i32 @llvm.bswap.i32(i32 %783) #9
  %785 = load i32, i32* %605, align 8
  %786 = add i32 %785, %784
  store i32 %786, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %604) #9
  %787 = icmp eq i64 %781, 0
  br i1 %787, label %788, label %796

788:                                              ; preds = %778, %776
  %789 = phi i32 [ %786, %778 ], [ %777, %776 ]
  %790 = phi i64 [ %779, %778 ], [ 0, %776 ]
  %791 = getelementptr inbounds i8, i8* %603, i64 %790
  %792 = bitcast i8* %791 to i32*
  %793 = load i32, i32* %792, align 1
  %794 = call i32 @llvm.bswap.i32(i32 %793) #9
  %795 = add i32 %794, %789
  store i32 %795, i32* %605, align 8
  br label %802

796:                                              ; preds = %778
  %797 = sub nuw nsw i64 4, %781
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %606)
  store i32 0, i32* %138, align 4
  %798 = getelementptr inbounds i8, i8* %603, i64 %779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %606, i8* align 1 %798, i64 %797, i1 false) #9
  %799 = load i32, i32* %138, align 4
  %800 = call i32 @llvm.bswap.i32(i32 %799) #9
  %801 = add i32 %800, %786
  store i32 %801, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %606)
  br label %802

802:                                              ; preds = %788, %796
  %803 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %804 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %803, i64 2
  %805 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %804, align 8
  %806 = call zeroext i1 %805(%"class.ots::OTSStream"* %1, i8* nonnull %603, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %603)
  br i1 %806, label %807, label %3081

807:                                              ; preds = %802
  %808 = icmp eq i32 %761, 0
  br i1 %808, label %879, label %809

809:                                              ; preds = %807
  %810 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %753, i64 0, i32 0, i32 0
  %811 = and i64 %760, 4294967295
  br label %814

812:                                              ; preds = %873
  %813 = icmp eq i64 %878, %811
  br i1 %813, label %879, label %814

814:                                              ; preds = %812, %809
  %815 = phi i64 [ 0, %809 ], [ %878, %812 ]
  %816 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %810, align 8
  %817 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %816, i64 %815, i32 0
  %818 = load i32, i32* %817, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %607)
  %819 = call i32 @llvm.bswap.i32(i32 %818) #9
  store i32 %819, i32* %136, align 4
  %820 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %821 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %820, i64 4
  %822 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %821, align 8
  %823 = call i64 %822(%"class.ots::OTSStream"* %1) #9
  %824 = and i64 %823, 3
  %825 = icmp eq i64 %824, 0
  br i1 %825, label %826, label %828

826:                                              ; preds = %814
  %827 = load i32, i32* %605, align 8
  br label %839

828:                                              ; preds = %814
  %829 = sub nuw nsw i64 4, %824
  %830 = icmp ult i64 %829, 3
  %831 = select i1 %830, i64 %829, i64 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %609) #9
  store i32 0, i32* %134, align 4
  %832 = getelementptr inbounds i8, i8* %609, i64 %824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %832, i8* align 1 %608, i64 %831, i1 false) #9
  %833 = load i32, i32* %134, align 4
  %834 = call i32 @llvm.bswap.i32(i32 %833) #9
  %835 = load i32, i32* %605, align 8
  %836 = add i32 %835, %834
  store i32 %836, i32* %605, align 8
  %837 = xor i64 %831, 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %609) #9
  %838 = icmp eq i64 %837, 0
  br i1 %838, label %847, label %839

839:                                              ; preds = %828, %826
  %840 = phi i32 [ %836, %828 ], [ %827, %826 ]
  %841 = phi i64 [ %831, %828 ], [ 0, %826 ]
  %842 = phi i64 [ %837, %828 ], [ 3, %826 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %610)
  store i32 0, i32* %135, align 4
  %843 = getelementptr inbounds i8, i8* %608, i64 %841
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %610, i8* align 1 %843, i64 %842, i1 false) #9
  %844 = load i32, i32* %135, align 4
  %845 = call i32 @llvm.bswap.i32(i32 %844) #9
  %846 = add i32 %845, %840
  store i32 %846, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %610)
  br label %847

847:                                              ; preds = %828, %839
  %848 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %849 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %848, i64 2
  %850 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %849, align 8
  %851 = call zeroext i1 %850(%"class.ots::OTSStream"* %1, i8* %608, i64 3) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %607)
  br i1 %851, label %852, label %3081

852:                                              ; preds = %847
  %853 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %810, align 8
  %854 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %853, i64 %815, i32 1
  %855 = load i8, i8* %854, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %133)
  store i8 %855, i8* %133, align 1
  %856 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %857 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %856, i64 4
  %858 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %857, align 8
  %859 = call i64 %858(%"class.ots::OTSStream"* %1) #9
  %860 = and i64 %859, 3
  %861 = icmp eq i64 %860, 0
  br i1 %861, label %868, label %862

862:                                              ; preds = %852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %611) #9
  store i32 0, i32* %132, align 4
  %863 = getelementptr inbounds i8, i8* %611, i64 %860
  store i8 %855, i8* %863, align 1
  %864 = load i32, i32* %132, align 4
  %865 = call i32 @llvm.bswap.i32(i32 %864) #9
  %866 = load i32, i32* %605, align 8
  %867 = add i32 %866, %865
  store i32 %867, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %611) #9
  br label %873

868:                                              ; preds = %852
  %869 = zext i8 %855 to i32
  %870 = call i32 @llvm.bswap.i32(i32 %869) #9
  %871 = load i32, i32* %605, align 8
  %872 = add i32 %871, %870
  store i32 %872, i32* %605, align 8
  br label %873

873:                                              ; preds = %862, %868
  %874 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %875 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %874, i64 2
  %876 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %875, align 8
  %877 = call zeroext i1 %876(%"class.ots::OTSStream"* %1, i8* nonnull %133, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %133)
  %878 = add nuw nsw i64 %815, 1
  br i1 %877, label %812, label %3081

879:                                              ; preds = %812, %807, %746
  %880 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %602, align 8
  %881 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %880, i64 %747, i32 2
  %882 = load i32, i32* %881, align 8
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %1021, label %884

884:                                              ; preds = %879
  %885 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %880, i64 %747, i32 4
  %886 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %880, i64 %747, i32 4, i32 0, i32 1
  %887 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %886 to i64*
  %888 = load i64, i64* %887, align 8
  %889 = bitcast %"class.std::__1::vector.31"* %885 to i64*
  %890 = load i64, i64* %889, align 8
  %891 = sub i64 %888, %890
  %892 = lshr exact i64 %891, 3
  %893 = trunc i64 %892 to i32
  %894 = zext i32 %882 to i64
  %895 = add nsw i64 %445, %894
  %896 = load i1 (%"class.ots::OTSStream"*, i64)**, i1 (%"class.ots::OTSStream"*, i64)*** %325, align 8
  %897 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %896, i64 3
  %898 = load i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %897, align 8
  %899 = call zeroext i1 %898(%"class.ots::OTSStream"* %1, i64 %895) #9
  br i1 %899, label %900, label %3081

900:                                              ; preds = %884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %612)
  %901 = call i32 @llvm.bswap.i32(i32 %893) #9
  store i32 %901, i32* %128, align 4
  %902 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %903 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %902, i64 4
  %904 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %903, align 8
  %905 = call i64 %904(%"class.ots::OTSStream"* %1) #9
  %906 = and i64 %905, 3
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %908, label %910

908:                                              ; preds = %900
  %909 = load i32, i32* %605, align 8
  br label %920

910:                                              ; preds = %900
  %911 = sub nuw nsw i64 4, %906
  %912 = icmp ult i64 %911, 4
  %913 = select i1 %912, i64 %911, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %613) #9
  store i32 0, i32* %126, align 4
  %914 = getelementptr inbounds i8, i8* %613, i64 %906
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %914, i8* nonnull align 4 %612, i64 %913, i1 false) #9
  %915 = load i32, i32* %126, align 4
  %916 = call i32 @llvm.bswap.i32(i32 %915) #9
  %917 = load i32, i32* %605, align 8
  %918 = add i32 %917, %916
  store i32 %918, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %613) #9
  %919 = icmp eq i64 %913, 0
  br i1 %919, label %920, label %928

920:                                              ; preds = %910, %908
  %921 = phi i32 [ %918, %910 ], [ %909, %908 ]
  %922 = phi i64 [ %911, %910 ], [ 0, %908 ]
  %923 = getelementptr inbounds i8, i8* %612, i64 %922
  %924 = bitcast i8* %923 to i32*
  %925 = load i32, i32* %924, align 1
  %926 = call i32 @llvm.bswap.i32(i32 %925) #9
  %927 = add i32 %926, %921
  store i32 %927, i32* %605, align 8
  br label %934

928:                                              ; preds = %910
  %929 = sub nuw nsw i64 4, %913
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %614)
  store i32 0, i32* %127, align 4
  %930 = getelementptr inbounds i8, i8* %612, i64 %911
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %614, i8* align 1 %930, i64 %929, i1 false) #9
  %931 = load i32, i32* %127, align 4
  %932 = call i32 @llvm.bswap.i32(i32 %931) #9
  %933 = add i32 %932, %918
  store i32 %933, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %614)
  br label %934

934:                                              ; preds = %920, %928
  %935 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %936 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %935, i64 2
  %937 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %936, align 8
  %938 = call zeroext i1 %937(%"class.ots::OTSStream"* %1, i8* nonnull %612, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %612)
  br i1 %938, label %939, label %3081

939:                                              ; preds = %934
  %940 = icmp eq i32 %893, 0
  br i1 %940, label %1021, label %941

941:                                              ; preds = %939
  %942 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %885, i64 0, i32 0, i32 0
  %943 = and i64 %892, 4294967295
  br label %946

944:                                              ; preds = %1015
  %945 = icmp eq i64 %1020, %943
  br i1 %945, label %1021, label %946

946:                                              ; preds = %944, %941
  %947 = phi i64 [ 0, %941 ], [ %1020, %944 ]
  %948 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %942, align 8
  %949 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %948, i64 %947, i32 0
  %950 = load i32, i32* %949, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %615)
  %951 = call i32 @llvm.bswap.i32(i32 %950) #9
  store i32 %951, i32* %125, align 4
  %952 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %953 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %952, i64 4
  %954 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %953, align 8
  %955 = call i64 %954(%"class.ots::OTSStream"* %1) #9
  %956 = and i64 %955, 3
  %957 = icmp eq i64 %956, 0
  br i1 %957, label %958, label %960

958:                                              ; preds = %946
  %959 = load i32, i32* %605, align 8
  br label %971

960:                                              ; preds = %946
  %961 = sub nuw nsw i64 4, %956
  %962 = icmp ult i64 %961, 3
  %963 = select i1 %962, i64 %961, i64 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %617) #9
  store i32 0, i32* %123, align 4
  %964 = getelementptr inbounds i8, i8* %617, i64 %956
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %964, i8* align 1 %616, i64 %963, i1 false) #9
  %965 = load i32, i32* %123, align 4
  %966 = call i32 @llvm.bswap.i32(i32 %965) #9
  %967 = load i32, i32* %605, align 8
  %968 = add i32 %967, %966
  store i32 %968, i32* %605, align 8
  %969 = xor i64 %963, 3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %617) #9
  %970 = icmp eq i64 %969, 0
  br i1 %970, label %979, label %971

971:                                              ; preds = %960, %958
  %972 = phi i32 [ %968, %960 ], [ %959, %958 ]
  %973 = phi i64 [ %963, %960 ], [ 0, %958 ]
  %974 = phi i64 [ %969, %960 ], [ 3, %958 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %618)
  store i32 0, i32* %124, align 4
  %975 = getelementptr inbounds i8, i8* %616, i64 %973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %618, i8* align 1 %975, i64 %974, i1 false) #9
  %976 = load i32, i32* %124, align 4
  %977 = call i32 @llvm.bswap.i32(i32 %976) #9
  %978 = add i32 %977, %972
  store i32 %978, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %618)
  br label %979

979:                                              ; preds = %960, %971
  %980 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %981 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %980, i64 2
  %982 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %981, align 8
  %983 = call zeroext i1 %982(%"class.ots::OTSStream"* %1, i8* %616, i64 3) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %615)
  br i1 %983, label %984, label %3081

984:                                              ; preds = %979
  %985 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %942, align 8
  %986 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %985, i64 %947, i32 1
  %987 = load i16, i16* %986, align 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %619)
  %988 = call i16 @llvm.bswap.i16(i16 %987) #9
  store i16 %988, i16* %122, align 2
  %989 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %990 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %989, i64 4
  %991 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %990, align 8
  %992 = call i64 %991(%"class.ots::OTSStream"* %1) #9
  %993 = and i64 %992, 3
  %994 = icmp eq i64 %993, 0
  br i1 %994, label %995, label %997

995:                                              ; preds = %984
  %996 = load i32, i32* %605, align 8
  br label %1007

997:                                              ; preds = %984
  %998 = sub nuw nsw i64 4, %993
  %999 = icmp ult i64 %998, 2
  %1000 = select i1 %999, i64 %998, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %620) #9
  store i32 0, i32* %120, align 4
  %1001 = getelementptr inbounds i8, i8* %620, i64 %993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1001, i8* nonnull align 2 %619, i64 %1000, i1 false) #9
  %1002 = load i32, i32* %120, align 4
  %1003 = call i32 @llvm.bswap.i32(i32 %1002) #9
  %1004 = load i32, i32* %605, align 8
  %1005 = add i32 %1004, %1003
  store i32 %1005, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %620) #9
  %1006 = icmp eq i64 %993, 3
  br i1 %1006, label %1007, label %1015

1007:                                             ; preds = %997, %995
  %1008 = phi i32 [ %1005, %997 ], [ %996, %995 ]
  %1009 = phi i64 [ %1000, %997 ], [ 0, %995 ]
  %1010 = phi i64 [ 1, %997 ], [ 2, %995 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %621)
  store i32 0, i32* %121, align 4
  %1011 = getelementptr inbounds i8, i8* %619, i64 %1009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %621, i8* align 1 %1011, i64 %1010, i1 false) #9
  %1012 = load i32, i32* %121, align 4
  %1013 = call i32 @llvm.bswap.i32(i32 %1012) #9
  %1014 = add i32 %1013, %1008
  store i32 %1014, i32* %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %621)
  br label %1015

1015:                                             ; preds = %997, %1007
  %1016 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1017 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1016, i64 2
  %1018 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1017, align 8
  %1019 = call zeroext i1 %1018(%"class.ots::OTSStream"* %1, i8* nonnull %619, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %619)
  %1020 = add nuw nsw i64 %947, 1
  br i1 %1019, label %944, label %3081

1021:                                             ; preds = %944, %939, %879
  %1022 = add nuw nsw i64 %747, 1
  %1023 = icmp eq i64 %1022, %622
  br i1 %1023, label %1024, label %746

1024:                                             ; preds = %1021, %582, %600, %441
  %1025 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1026 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1025, i64 4
  %1027 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1026, align 8
  %1028 = call i64 %1027(%"class.ots::OTSStream"* %1) #9
  br i1 %188, label %1029, label %1242

1029:                                             ; preds = %1024
  %1030 = bitcast i16* %119 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1030)
  store i16 0, i16* %119, align 2
  %1031 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1032 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1031, i64 4
  %1033 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1032, align 8
  %1034 = call i64 %1033(%"class.ots::OTSStream"* %1) #9
  %1035 = and i64 %1034, 3
  %1036 = icmp eq i64 %1035, 0
  br i1 %1036, label %1037, label %1040

1037:                                             ; preds = %1029
  %1038 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1039 = load i32, i32* %1038, align 8
  br label %1052

1040:                                             ; preds = %1029
  %1041 = sub nuw nsw i64 4, %1035
  %1042 = icmp ult i64 %1041, 2
  %1043 = select i1 %1042, i64 %1041, i64 2
  %1044 = bitcast i32* %117 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1044) #9
  store i32 0, i32* %117, align 4
  %1045 = getelementptr inbounds i8, i8* %1044, i64 %1035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1045, i8* nonnull align 2 %1030, i64 %1043, i1 false) #9
  %1046 = load i32, i32* %117, align 4
  %1047 = call i32 @llvm.bswap.i32(i32 %1046) #9
  %1048 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1049 = load i32, i32* %1048, align 8
  %1050 = add i32 %1049, %1047
  store i32 %1050, i32* %1048, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1044) #9
  %1051 = icmp eq i64 %1035, 3
  br i1 %1051, label %1052, label %1062

1052:                                             ; preds = %1040, %1037
  %1053 = phi i32 [ %1050, %1040 ], [ %1039, %1037 ]
  %1054 = phi i64 [ %1043, %1040 ], [ 0, %1037 ]
  %1055 = phi i64 [ 1, %1040 ], [ 2, %1037 ]
  %1056 = bitcast i32* %118 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1056)
  store i32 0, i32* %118, align 4
  %1057 = getelementptr inbounds i8, i8* %1030, i64 %1054
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1056, i8* align 1 %1057, i64 %1055, i1 false) #9
  %1058 = load i32, i32* %118, align 4
  %1059 = call i32 @llvm.bswap.i32(i32 %1058) #9
  %1060 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1061 = add i32 %1059, %1053
  store i32 %1061, i32* %1060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1056)
  br label %1062

1062:                                             ; preds = %1040, %1052
  %1063 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1064 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1063, i64 2
  %1065 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1064, align 8
  %1066 = call zeroext i1 %1065(%"class.ots::OTSStream"* %1, i8* nonnull %1030, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1030)
  br i1 %1066, label %1067, label %3081

1067:                                             ; preds = %1062
  %1068 = bitcast i16* %116 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1068)
  store i16 1537, i16* %116, align 2
  %1069 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1070 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1069, i64 4
  %1071 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1070, align 8
  %1072 = call i64 %1071(%"class.ots::OTSStream"* %1) #9
  %1073 = and i64 %1072, 3
  %1074 = icmp eq i64 %1073, 0
  br i1 %1074, label %1075, label %1078

1075:                                             ; preds = %1067
  %1076 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1077 = load i32, i32* %1076, align 8
  br label %1090

1078:                                             ; preds = %1067
  %1079 = sub nuw nsw i64 4, %1073
  %1080 = icmp ult i64 %1079, 2
  %1081 = select i1 %1080, i64 %1079, i64 2
  %1082 = bitcast i32* %114 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1082) #9
  store i32 0, i32* %114, align 4
  %1083 = getelementptr inbounds i8, i8* %1082, i64 %1073
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1083, i8* nonnull align 2 %1068, i64 %1081, i1 false) #9
  %1084 = load i32, i32* %114, align 4
  %1085 = call i32 @llvm.bswap.i32(i32 %1084) #9
  %1086 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1087 = load i32, i32* %1086, align 8
  %1088 = add i32 %1087, %1085
  store i32 %1088, i32* %1086, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1082) #9
  %1089 = icmp eq i64 %1073, 3
  br i1 %1089, label %1090, label %1100

1090:                                             ; preds = %1078, %1075
  %1091 = phi i32 [ %1088, %1078 ], [ %1077, %1075 ]
  %1092 = phi i64 [ %1081, %1078 ], [ 0, %1075 ]
  %1093 = phi i64 [ 1, %1078 ], [ 2, %1075 ]
  %1094 = bitcast i32* %115 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1094)
  store i32 0, i32* %115, align 4
  %1095 = getelementptr inbounds i8, i8* %1068, i64 %1092
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1094, i8* align 1 %1095, i64 %1093, i1 false) #9
  %1096 = load i32, i32* %115, align 4
  %1097 = call i32 @llvm.bswap.i32(i32 %1096) #9
  %1098 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1099 = add i32 %1097, %1091
  store i32 %1099, i32* %1098, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1094)
  br label %1100

1100:                                             ; preds = %1078, %1090
  %1101 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1102 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1101, i64 2
  %1103 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1102, align 8
  %1104 = call zeroext i1 %1103(%"class.ots::OTSStream"* %1, i8* nonnull %1068, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1068)
  br i1 %1104, label %1105, label %3081

1105:                                             ; preds = %1100
  %1106 = bitcast i16* %113 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1106)
  store i16 0, i16* %113, align 2
  %1107 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1108 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1107, i64 4
  %1109 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1108, align 8
  %1110 = call i64 %1109(%"class.ots::OTSStream"* %1) #9
  %1111 = and i64 %1110, 3
  %1112 = icmp eq i64 %1111, 0
  br i1 %1112, label %1113, label %1116

1113:                                             ; preds = %1105
  %1114 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1115 = load i32, i32* %1114, align 8
  br label %1128

1116:                                             ; preds = %1105
  %1117 = sub nuw nsw i64 4, %1111
  %1118 = icmp ult i64 %1117, 2
  %1119 = select i1 %1118, i64 %1117, i64 2
  %1120 = bitcast i32* %111 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1120) #9
  store i32 0, i32* %111, align 4
  %1121 = getelementptr inbounds i8, i8* %1120, i64 %1111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1121, i8* nonnull align 2 %1106, i64 %1119, i1 false) #9
  %1122 = load i32, i32* %111, align 4
  %1123 = call i32 @llvm.bswap.i32(i32 %1122) #9
  %1124 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1125 = load i32, i32* %1124, align 8
  %1126 = add i32 %1125, %1123
  store i32 %1126, i32* %1124, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1120) #9
  %1127 = icmp eq i64 %1111, 3
  br i1 %1127, label %1128, label %1138

1128:                                             ; preds = %1116, %1113
  %1129 = phi i32 [ %1126, %1116 ], [ %1115, %1113 ]
  %1130 = phi i64 [ %1119, %1116 ], [ 0, %1113 ]
  %1131 = phi i64 [ 1, %1116 ], [ 2, %1113 ]
  %1132 = bitcast i32* %112 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1132)
  store i32 0, i32* %112, align 4
  %1133 = getelementptr inbounds i8, i8* %1106, i64 %1130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1132, i8* align 1 %1133, i64 %1131, i1 false) #9
  %1134 = load i32, i32* %112, align 4
  %1135 = call i32 @llvm.bswap.i32(i32 %1134) #9
  %1136 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1137 = add i32 %1135, %1129
  store i32 %1137, i32* %1136, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1132)
  br label %1138

1138:                                             ; preds = %1116, %1128
  %1139 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1140 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1139, i64 2
  %1141 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1140, align 8
  %1142 = call zeroext i1 %1141(%"class.ots::OTSStream"* %1, i8* nonnull %1106, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1106)
  br i1 %1142, label %1143, label %3081

1143:                                             ; preds = %1138
  %1144 = getelementptr inbounds %"class.std::__1::vector.50", %"class.std::__1::vector.50"* %182, i64 0, i32 0, i32 0
  %1145 = load i8*, i8** %1144, align 8
  %1146 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1147 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1146, i64 4
  %1148 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1147, align 8
  %1149 = call i64 %1148(%"class.ots::OTSStream"* %1) #9
  %1150 = and i64 %1149, 3
  %1151 = icmp eq i64 %1150, 0
  br i1 %1151, label %1152, label %1155

1152:                                             ; preds = %1143
  %1153 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1154 = load i32, i32* %1153, align 8
  br label %1165

1155:                                             ; preds = %1143
  %1156 = sub nuw nsw i64 4, %1150
  %1157 = bitcast i32* %109 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1157) #9
  store i32 0, i32* %109, align 4
  %1158 = getelementptr inbounds i8, i8* %1157, i64 %1150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1158, i8* align 1 %1145, i64 %1156, i1 false) #9
  %1159 = load i32, i32* %109, align 4
  %1160 = call i32 @llvm.bswap.i32(i32 %1159) #9
  %1161 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1162 = load i32, i32* %1161, align 8
  %1163 = add i32 %1162, %1160
  store i32 %1163, i32* %1161, align 8
  %1164 = or i64 %1150, 252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1157) #9
  br label %1165

1165:                                             ; preds = %1152, %1155
  %1166 = phi i32 [ %1154, %1152 ], [ %1163, %1155 ]
  %1167 = phi i64 [ 256, %1152 ], [ %1164, %1155 ]
  %1168 = phi i64 [ 0, %1152 ], [ %1156, %1155 ]
  %1169 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1170 = add nsw i64 %1167, -4
  %1171 = lshr i64 %1170, 2
  %1172 = add nuw nsw i64 %1171, 1
  %1173 = and i64 %1172, 3
  %1174 = icmp eq i64 %1173, 0
  br i1 %1174, label %1189, label %1175

1175:                                             ; preds = %1165, %1175
  %1176 = phi i32 [ %1184, %1175 ], [ %1166, %1165 ]
  %1177 = phi i64 [ %1186, %1175 ], [ %1168, %1165 ]
  %1178 = phi i64 [ %1185, %1175 ], [ %1167, %1165 ]
  %1179 = phi i64 [ %1187, %1175 ], [ %1173, %1165 ]
  %1180 = getelementptr inbounds i8, i8* %1145, i64 %1177
  %1181 = bitcast i8* %1180 to i32*
  %1182 = load i32, i32* %1181, align 1
  %1183 = call i32 @llvm.bswap.i32(i32 %1182) #9
  %1184 = add i32 %1183, %1176
  store i32 %1184, i32* %1169, align 8
  %1185 = add nsw i64 %1178, -4
  %1186 = add nuw nsw i64 %1177, 4
  %1187 = add i64 %1179, -1
  %1188 = icmp eq i64 %1187, 0
  br i1 %1188, label %1189, label %1175, !llvm.loop !7

1189:                                             ; preds = %1175, %1165
  %1190 = phi i32 [ %1166, %1165 ], [ %1184, %1175 ]
  %1191 = phi i64 [ %1168, %1165 ], [ %1186, %1175 ]
  %1192 = phi i64 [ %1167, %1165 ], [ %1185, %1175 ]
  %1193 = phi i32 [ undef, %1165 ], [ %1184, %1175 ]
  %1194 = phi i64 [ undef, %1165 ], [ %1186, %1175 ]
  %1195 = icmp ult i64 %1170, 12
  br i1 %1195, label %1226, label %1196

1196:                                             ; preds = %1189, %1196
  %1197 = phi i32 [ %1222, %1196 ], [ %1190, %1189 ]
  %1198 = phi i64 [ %1224, %1196 ], [ %1191, %1189 ]
  %1199 = phi i64 [ %1223, %1196 ], [ %1192, %1189 ]
  %1200 = getelementptr inbounds i8, i8* %1145, i64 %1198
  %1201 = bitcast i8* %1200 to i32*
  %1202 = load i32, i32* %1201, align 1
  %1203 = call i32 @llvm.bswap.i32(i32 %1202) #9
  %1204 = add i32 %1203, %1197
  store i32 %1204, i32* %1169, align 8
  %1205 = add nuw nsw i64 %1198, 4
  %1206 = getelementptr inbounds i8, i8* %1145, i64 %1205
  %1207 = bitcast i8* %1206 to i32*
  %1208 = load i32, i32* %1207, align 1
  %1209 = call i32 @llvm.bswap.i32(i32 %1208) #9
  %1210 = add i32 %1209, %1204
  store i32 %1210, i32* %1169, align 8
  %1211 = add nuw nsw i64 %1198, 8
  %1212 = getelementptr inbounds i8, i8* %1145, i64 %1211
  %1213 = bitcast i8* %1212 to i32*
  %1214 = load i32, i32* %1213, align 1
  %1215 = call i32 @llvm.bswap.i32(i32 %1214) #9
  %1216 = add i32 %1215, %1210
  store i32 %1216, i32* %1169, align 8
  %1217 = add nuw nsw i64 %1198, 12
  %1218 = getelementptr inbounds i8, i8* %1145, i64 %1217
  %1219 = bitcast i8* %1218 to i32*
  %1220 = load i32, i32* %1219, align 1
  %1221 = call i32 @llvm.bswap.i32(i32 %1220) #9
  %1222 = add i32 %1221, %1216
  store i32 %1222, i32* %1169, align 8
  %1223 = add nsw i64 %1199, -16
  %1224 = add nuw nsw i64 %1198, 16
  %1225 = icmp ugt i64 %1223, 3
  br i1 %1225, label %1196, label %1226

1226:                                             ; preds = %1196, %1189
  %1227 = phi i32 [ %1193, %1189 ], [ %1222, %1196 ]
  %1228 = phi i64 [ %1194, %1189 ], [ %1224, %1196 ]
  %1229 = and i64 %1167, 3
  %1230 = icmp eq i64 %1229, 0
  br i1 %1230, label %1237, label %1231

1231:                                             ; preds = %1226
  %1232 = bitcast i32* %110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1232)
  store i32 0, i32* %110, align 4
  %1233 = getelementptr inbounds i8, i8* %1145, i64 %1228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1232, i8* align 1 %1233, i64 %1229, i1 false) #9
  %1234 = load i32, i32* %110, align 4
  %1235 = call i32 @llvm.bswap.i32(i32 %1234) #9
  %1236 = add i32 %1227, %1235
  store i32 %1236, i32* %1169, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1232)
  br label %1237

1237:                                             ; preds = %1226, %1231
  %1238 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1239 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1238, i64 2
  %1240 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1239, align 8
  %1241 = call zeroext i1 %1240(%"class.ots::OTSStream"* %1, i8* %1145, i64 256) #9
  br i1 %1241, label %1242, label %3081

1242:                                             ; preds = %1237, %1024
  %1243 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1244 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1243, i64 4
  %1245 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1244, align 8
  %1246 = call i64 %1245(%"class.ots::OTSStream"* %1) #9
  br i1 %191, label %1247, label %1353

1247:                                             ; preds = %1242
  %1248 = load i8*, i8** %189, align 8
  %1249 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 6
  %1250 = load i64, i64* %1249, align 8
  %1251 = icmp eq i64 %1250, 0
  br i1 %1251, label %3081, label %1252

1252:                                             ; preds = %1247
  %1253 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1254 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1253, i64 4
  %1255 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1254, align 8
  %1256 = call i64 %1255(%"class.ots::OTSStream"* %1) #9
  %1257 = and i64 %1256, 3
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1271, label %1259

1259:                                             ; preds = %1252
  %1260 = sub nuw nsw i64 4, %1257
  %1261 = icmp ult i64 %1260, %1250
  %1262 = select i1 %1261, i64 %1260, i64 %1250
  %1263 = bitcast i32* %107 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1263) #9
  store i32 0, i32* %107, align 4
  %1264 = getelementptr inbounds i8, i8* %1263, i64 %1257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1264, i8* align 1 %1248, i64 %1262, i1 false) #9
  %1265 = load i32, i32* %107, align 4
  %1266 = call i32 @llvm.bswap.i32(i32 %1265) #9
  %1267 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1268 = load i32, i32* %1267, align 8
  %1269 = add i32 %1268, %1266
  store i32 %1269, i32* %1267, align 8
  %1270 = sub i64 %1250, %1262
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1263) #9
  br label %1271

1271:                                             ; preds = %1259, %1252
  %1272 = phi i64 [ %1250, %1252 ], [ %1270, %1259 ]
  %1273 = phi i64 [ 0, %1252 ], [ %1262, %1259 ]
  %1274 = icmp ugt i64 %1272, 3
  br i1 %1274, label %1275, label %1336

1275:                                             ; preds = %1271
  %1276 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1277 = load i32, i32* %1276, align 8
  %1278 = add i64 %1272, -4
  %1279 = lshr i64 %1278, 2
  %1280 = add nuw nsw i64 %1279, 1
  %1281 = and i64 %1280, 3
  %1282 = icmp eq i64 %1281, 0
  br i1 %1282, label %1297, label %1283

1283:                                             ; preds = %1275, %1283
  %1284 = phi i32 [ %1292, %1283 ], [ %1277, %1275 ]
  %1285 = phi i64 [ %1294, %1283 ], [ %1273, %1275 ]
  %1286 = phi i64 [ %1293, %1283 ], [ %1272, %1275 ]
  %1287 = phi i64 [ %1295, %1283 ], [ %1281, %1275 ]
  %1288 = getelementptr inbounds i8, i8* %1248, i64 %1285
  %1289 = bitcast i8* %1288 to i32*
  %1290 = load i32, i32* %1289, align 1
  %1291 = call i32 @llvm.bswap.i32(i32 %1290) #9
  %1292 = add i32 %1291, %1284
  store i32 %1292, i32* %1276, align 8
  %1293 = add i64 %1286, -4
  %1294 = add i64 %1285, 4
  %1295 = add i64 %1287, -1
  %1296 = icmp eq i64 %1295, 0
  br i1 %1296, label %1297, label %1283, !llvm.loop !8

1297:                                             ; preds = %1283, %1275
  %1298 = phi i32 [ %1277, %1275 ], [ %1292, %1283 ]
  %1299 = phi i64 [ %1273, %1275 ], [ %1294, %1283 ]
  %1300 = phi i64 [ %1272, %1275 ], [ %1293, %1283 ]
  %1301 = phi i64 [ undef, %1275 ], [ %1294, %1283 ]
  %1302 = icmp ult i64 %1278, 12
  br i1 %1302, label %1333, label %1303

1303:                                             ; preds = %1297, %1303
  %1304 = phi i32 [ %1329, %1303 ], [ %1298, %1297 ]
  %1305 = phi i64 [ %1331, %1303 ], [ %1299, %1297 ]
  %1306 = phi i64 [ %1330, %1303 ], [ %1300, %1297 ]
  %1307 = getelementptr inbounds i8, i8* %1248, i64 %1305
  %1308 = bitcast i8* %1307 to i32*
  %1309 = load i32, i32* %1308, align 1
  %1310 = call i32 @llvm.bswap.i32(i32 %1309) #9
  %1311 = add i32 %1310, %1304
  store i32 %1311, i32* %1276, align 8
  %1312 = add i64 %1305, 4
  %1313 = getelementptr inbounds i8, i8* %1248, i64 %1312
  %1314 = bitcast i8* %1313 to i32*
  %1315 = load i32, i32* %1314, align 1
  %1316 = call i32 @llvm.bswap.i32(i32 %1315) #9
  %1317 = add i32 %1316, %1311
  store i32 %1317, i32* %1276, align 8
  %1318 = add i64 %1305, 8
  %1319 = getelementptr inbounds i8, i8* %1248, i64 %1318
  %1320 = bitcast i8* %1319 to i32*
  %1321 = load i32, i32* %1320, align 1
  %1322 = call i32 @llvm.bswap.i32(i32 %1321) #9
  %1323 = add i32 %1322, %1317
  store i32 %1323, i32* %1276, align 8
  %1324 = add i64 %1305, 12
  %1325 = getelementptr inbounds i8, i8* %1248, i64 %1324
  %1326 = bitcast i8* %1325 to i32*
  %1327 = load i32, i32* %1326, align 1
  %1328 = call i32 @llvm.bswap.i32(i32 %1327) #9
  %1329 = add i32 %1328, %1323
  store i32 %1329, i32* %1276, align 8
  %1330 = add i64 %1306, -16
  %1331 = add i64 %1305, 16
  %1332 = icmp ugt i64 %1330, 3
  br i1 %1332, label %1303, label %1333

1333:                                             ; preds = %1303, %1297
  %1334 = phi i64 [ %1301, %1297 ], [ %1331, %1303 ]
  %1335 = and i64 %1272, 3
  br label %1336

1336:                                             ; preds = %1333, %1271
  %1337 = phi i64 [ %1272, %1271 ], [ %1335, %1333 ]
  %1338 = phi i64 [ %1273, %1271 ], [ %1334, %1333 ]
  %1339 = icmp eq i64 %1337, 0
  br i1 %1339, label %1348, label %1340

1340:                                             ; preds = %1336
  %1341 = bitcast i32* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1341)
  store i32 0, i32* %108, align 4
  %1342 = getelementptr inbounds i8, i8* %1248, i64 %1338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1341, i8* align 1 %1342, i64 %1337, i1 false) #9
  %1343 = load i32, i32* %108, align 4
  %1344 = call i32 @llvm.bswap.i32(i32 %1343) #9
  %1345 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1346 = load i32, i32* %1345, align 8
  %1347 = add i32 %1346, %1344
  store i32 %1347, i32* %1345, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1341)
  br label %1348

1348:                                             ; preds = %1336, %1340
  %1349 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1350 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1349, i64 2
  %1351 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1350, align 8
  %1352 = call zeroext i1 %1351(%"class.ots::OTSStream"* %1, i8* %1248, i64 %1250) #9
  br i1 %1352, label %1353, label %3081

1353:                                             ; preds = %1348, %1242
  %1354 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1355 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1354, i64 4
  %1356 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1355, align 8
  %1357 = call i64 %1356(%"class.ots::OTSStream"* %1) #9
  br i1 %197, label %1358, label %1465

1358:                                             ; preds = %1353
  %1359 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 7
  %1360 = load i8*, i8** %1359, align 8
  %1361 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 8
  %1362 = load i64, i64* %1361, align 8
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %3081, label %1364

1364:                                             ; preds = %1358
  %1365 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1366 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1365, i64 4
  %1367 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1366, align 8
  %1368 = call i64 %1367(%"class.ots::OTSStream"* %1) #9
  %1369 = and i64 %1368, 3
  %1370 = icmp eq i64 %1369, 0
  br i1 %1370, label %1383, label %1371

1371:                                             ; preds = %1364
  %1372 = sub nuw nsw i64 4, %1369
  %1373 = icmp ult i64 %1372, %1362
  %1374 = select i1 %1373, i64 %1372, i64 %1362
  %1375 = bitcast i32* %105 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1375) #9
  store i32 0, i32* %105, align 4
  %1376 = getelementptr inbounds i8, i8* %1375, i64 %1369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1376, i8* align 1 %1360, i64 %1374, i1 false) #9
  %1377 = load i32, i32* %105, align 4
  %1378 = call i32 @llvm.bswap.i32(i32 %1377) #9
  %1379 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1380 = load i32, i32* %1379, align 8
  %1381 = add i32 %1380, %1378
  store i32 %1381, i32* %1379, align 8
  %1382 = sub i64 %1362, %1374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1375) #9
  br label %1383

1383:                                             ; preds = %1371, %1364
  %1384 = phi i64 [ %1362, %1364 ], [ %1382, %1371 ]
  %1385 = phi i64 [ 0, %1364 ], [ %1374, %1371 ]
  %1386 = icmp ugt i64 %1384, 3
  br i1 %1386, label %1387, label %1448

1387:                                             ; preds = %1383
  %1388 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1389 = load i32, i32* %1388, align 8
  %1390 = add i64 %1384, -4
  %1391 = lshr i64 %1390, 2
  %1392 = add nuw nsw i64 %1391, 1
  %1393 = and i64 %1392, 3
  %1394 = icmp eq i64 %1393, 0
  br i1 %1394, label %1409, label %1395

1395:                                             ; preds = %1387, %1395
  %1396 = phi i32 [ %1404, %1395 ], [ %1389, %1387 ]
  %1397 = phi i64 [ %1406, %1395 ], [ %1385, %1387 ]
  %1398 = phi i64 [ %1405, %1395 ], [ %1384, %1387 ]
  %1399 = phi i64 [ %1407, %1395 ], [ %1393, %1387 ]
  %1400 = getelementptr inbounds i8, i8* %1360, i64 %1397
  %1401 = bitcast i8* %1400 to i32*
  %1402 = load i32, i32* %1401, align 1
  %1403 = call i32 @llvm.bswap.i32(i32 %1402) #9
  %1404 = add i32 %1403, %1396
  store i32 %1404, i32* %1388, align 8
  %1405 = add i64 %1398, -4
  %1406 = add i64 %1397, 4
  %1407 = add i64 %1399, -1
  %1408 = icmp eq i64 %1407, 0
  br i1 %1408, label %1409, label %1395, !llvm.loop !9

1409:                                             ; preds = %1395, %1387
  %1410 = phi i32 [ %1389, %1387 ], [ %1404, %1395 ]
  %1411 = phi i64 [ %1385, %1387 ], [ %1406, %1395 ]
  %1412 = phi i64 [ %1384, %1387 ], [ %1405, %1395 ]
  %1413 = phi i64 [ undef, %1387 ], [ %1406, %1395 ]
  %1414 = icmp ult i64 %1390, 12
  br i1 %1414, label %1445, label %1415

1415:                                             ; preds = %1409, %1415
  %1416 = phi i32 [ %1441, %1415 ], [ %1410, %1409 ]
  %1417 = phi i64 [ %1443, %1415 ], [ %1411, %1409 ]
  %1418 = phi i64 [ %1442, %1415 ], [ %1412, %1409 ]
  %1419 = getelementptr inbounds i8, i8* %1360, i64 %1417
  %1420 = bitcast i8* %1419 to i32*
  %1421 = load i32, i32* %1420, align 1
  %1422 = call i32 @llvm.bswap.i32(i32 %1421) #9
  %1423 = add i32 %1422, %1416
  store i32 %1423, i32* %1388, align 8
  %1424 = add i64 %1417, 4
  %1425 = getelementptr inbounds i8, i8* %1360, i64 %1424
  %1426 = bitcast i8* %1425 to i32*
  %1427 = load i32, i32* %1426, align 1
  %1428 = call i32 @llvm.bswap.i32(i32 %1427) #9
  %1429 = add i32 %1428, %1423
  store i32 %1429, i32* %1388, align 8
  %1430 = add i64 %1417, 8
  %1431 = getelementptr inbounds i8, i8* %1360, i64 %1430
  %1432 = bitcast i8* %1431 to i32*
  %1433 = load i32, i32* %1432, align 1
  %1434 = call i32 @llvm.bswap.i32(i32 %1433) #9
  %1435 = add i32 %1434, %1429
  store i32 %1435, i32* %1388, align 8
  %1436 = add i64 %1417, 12
  %1437 = getelementptr inbounds i8, i8* %1360, i64 %1436
  %1438 = bitcast i8* %1437 to i32*
  %1439 = load i32, i32* %1438, align 1
  %1440 = call i32 @llvm.bswap.i32(i32 %1439) #9
  %1441 = add i32 %1440, %1435
  store i32 %1441, i32* %1388, align 8
  %1442 = add i64 %1418, -16
  %1443 = add i64 %1417, 16
  %1444 = icmp ugt i64 %1442, 3
  br i1 %1444, label %1415, label %1445

1445:                                             ; preds = %1415, %1409
  %1446 = phi i64 [ %1413, %1409 ], [ %1443, %1415 ]
  %1447 = and i64 %1384, 3
  br label %1448

1448:                                             ; preds = %1445, %1383
  %1449 = phi i64 [ %1384, %1383 ], [ %1447, %1445 ]
  %1450 = phi i64 [ %1385, %1383 ], [ %1446, %1445 ]
  %1451 = icmp eq i64 %1449, 0
  br i1 %1451, label %1460, label %1452

1452:                                             ; preds = %1448
  %1453 = bitcast i32* %106 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1453)
  store i32 0, i32* %106, align 4
  %1454 = getelementptr inbounds i8, i8* %1360, i64 %1450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1453, i8* align 1 %1454, i64 %1449, i1 false) #9
  %1455 = load i32, i32* %106, align 4
  %1456 = call i32 @llvm.bswap.i32(i32 %1455) #9
  %1457 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1458 = load i32, i32* %1457, align 8
  %1459 = add i32 %1458, %1456
  store i32 %1459, i32* %1457, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1453)
  br label %1460

1460:                                             ; preds = %1448, %1452
  %1461 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1462 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1461, i64 2
  %1463 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1462, align 8
  %1464 = call zeroext i1 %1463(%"class.ots::OTSStream"* %1, i8* %1360, i64 %1362) #9
  br i1 %1464, label %1465, label %3081

1465:                                             ; preds = %1460, %1353
  %1466 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1467 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1466, i64 4
  %1468 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1467, align 8
  %1469 = call i64 %1468(%"class.ots::OTSStream"* %1) #9
  br i1 %205, label %1470, label %1832

1470:                                             ; preds = %1465
  %1471 = load i64, i64* %200, align 8
  %1472 = load i64, i64* %202, align 8
  %1473 = sub i64 %1471, %1472
  %1474 = sdiv exact i64 %1473, 12
  %1475 = trunc i64 %1474 to i32
  %1476 = bitcast i16* %104 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1476)
  store i16 3072, i16* %104, align 2
  %1477 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1478 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1477, i64 4
  %1479 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1478, align 8
  %1480 = call i64 %1479(%"class.ots::OTSStream"* %1) #9
  %1481 = and i64 %1480, 3
  %1482 = icmp eq i64 %1481, 0
  br i1 %1482, label %1483, label %1486

1483:                                             ; preds = %1470
  %1484 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1485 = load i32, i32* %1484, align 8
  br label %1498

1486:                                             ; preds = %1470
  %1487 = sub nuw nsw i64 4, %1481
  %1488 = icmp ult i64 %1487, 2
  %1489 = select i1 %1488, i64 %1487, i64 2
  %1490 = bitcast i32* %102 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1490) #9
  store i32 0, i32* %102, align 4
  %1491 = getelementptr inbounds i8, i8* %1490, i64 %1481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1491, i8* nonnull align 2 %1476, i64 %1489, i1 false) #9
  %1492 = load i32, i32* %102, align 4
  %1493 = call i32 @llvm.bswap.i32(i32 %1492) #9
  %1494 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1495 = load i32, i32* %1494, align 8
  %1496 = add i32 %1495, %1493
  store i32 %1496, i32* %1494, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1490) #9
  %1497 = icmp eq i64 %1481, 3
  br i1 %1497, label %1498, label %1508

1498:                                             ; preds = %1486, %1483
  %1499 = phi i32 [ %1496, %1486 ], [ %1485, %1483 ]
  %1500 = phi i64 [ %1489, %1486 ], [ 0, %1483 ]
  %1501 = phi i64 [ 1, %1486 ], [ 2, %1483 ]
  %1502 = bitcast i32* %103 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1502)
  store i32 0, i32* %103, align 4
  %1503 = getelementptr inbounds i8, i8* %1476, i64 %1500
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1502, i8* align 1 %1503, i64 %1501, i1 false) #9
  %1504 = load i32, i32* %103, align 4
  %1505 = call i32 @llvm.bswap.i32(i32 %1504) #9
  %1506 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1507 = add i32 %1505, %1499
  store i32 %1507, i32* %1506, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1502)
  br label %1508

1508:                                             ; preds = %1486, %1498
  %1509 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1510 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1509, i64 2
  %1511 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1510, align 8
  %1512 = call zeroext i1 %1511(%"class.ots::OTSStream"* %1, i8* nonnull %1476, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1476)
  br i1 %1512, label %1513, label %3081

1513:                                             ; preds = %1508
  %1514 = bitcast i16* %101 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1514)
  store i16 0, i16* %101, align 2
  %1515 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1516 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1515, i64 4
  %1517 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1516, align 8
  %1518 = call i64 %1517(%"class.ots::OTSStream"* %1) #9
  %1519 = and i64 %1518, 3
  %1520 = icmp eq i64 %1519, 0
  br i1 %1520, label %1521, label %1524

1521:                                             ; preds = %1513
  %1522 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1523 = load i32, i32* %1522, align 8
  br label %1536

1524:                                             ; preds = %1513
  %1525 = sub nuw nsw i64 4, %1519
  %1526 = icmp ult i64 %1525, 2
  %1527 = select i1 %1526, i64 %1525, i64 2
  %1528 = bitcast i32* %99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1528) #9
  store i32 0, i32* %99, align 4
  %1529 = getelementptr inbounds i8, i8* %1528, i64 %1519
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1529, i8* nonnull align 2 %1514, i64 %1527, i1 false) #9
  %1530 = load i32, i32* %99, align 4
  %1531 = call i32 @llvm.bswap.i32(i32 %1530) #9
  %1532 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1533 = load i32, i32* %1532, align 8
  %1534 = add i32 %1533, %1531
  store i32 %1534, i32* %1532, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1528) #9
  %1535 = icmp eq i64 %1519, 3
  br i1 %1535, label %1536, label %1546

1536:                                             ; preds = %1524, %1521
  %1537 = phi i32 [ %1534, %1524 ], [ %1523, %1521 ]
  %1538 = phi i64 [ %1527, %1524 ], [ 0, %1521 ]
  %1539 = phi i64 [ 1, %1524 ], [ 2, %1521 ]
  %1540 = bitcast i32* %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1540)
  store i32 0, i32* %100, align 4
  %1541 = getelementptr inbounds i8, i8* %1514, i64 %1538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1540, i8* align 1 %1541, i64 %1539, i1 false) #9
  %1542 = load i32, i32* %100, align 4
  %1543 = call i32 @llvm.bswap.i32(i32 %1542) #9
  %1544 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1545 = add i32 %1543, %1537
  store i32 %1545, i32* %1544, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1540)
  br label %1546

1546:                                             ; preds = %1524, %1536
  %1547 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1548 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1547, i64 2
  %1549 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1548, align 8
  %1550 = call zeroext i1 %1549(%"class.ots::OTSStream"* %1, i8* nonnull %1514, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1514)
  br i1 %1550, label %1551, label %3081

1551:                                             ; preds = %1546
  %1552 = mul i32 %1475, 12
  %1553 = add i32 %1552, 16
  %1554 = bitcast i32* %98 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1554)
  %1555 = call i32 @llvm.bswap.i32(i32 %1553) #9
  store i32 %1555, i32* %98, align 4
  %1556 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1557 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1556, i64 4
  %1558 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1557, align 8
  %1559 = call i64 %1558(%"class.ots::OTSStream"* %1) #9
  %1560 = and i64 %1559, 3
  %1561 = icmp eq i64 %1560, 0
  br i1 %1561, label %1562, label %1565

1562:                                             ; preds = %1551
  %1563 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1564 = load i32, i32* %1563, align 8
  br label %1577

1565:                                             ; preds = %1551
  %1566 = sub nuw nsw i64 4, %1560
  %1567 = icmp ult i64 %1566, 4
  %1568 = select i1 %1567, i64 %1566, i64 4
  %1569 = bitcast i32* %96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1569) #9
  store i32 0, i32* %96, align 4
  %1570 = getelementptr inbounds i8, i8* %1569, i64 %1560
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1570, i8* nonnull align 4 %1554, i64 %1568, i1 false) #9
  %1571 = load i32, i32* %96, align 4
  %1572 = call i32 @llvm.bswap.i32(i32 %1571) #9
  %1573 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1574 = load i32, i32* %1573, align 8
  %1575 = add i32 %1574, %1572
  store i32 %1575, i32* %1573, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1569) #9
  %1576 = icmp eq i64 %1568, 0
  br i1 %1576, label %1577, label %1586

1577:                                             ; preds = %1565, %1562
  %1578 = phi i32 [ %1575, %1565 ], [ %1564, %1562 ]
  %1579 = phi i64 [ %1566, %1565 ], [ 0, %1562 ]
  %1580 = getelementptr inbounds i8, i8* %1554, i64 %1579
  %1581 = bitcast i8* %1580 to i32*
  %1582 = load i32, i32* %1581, align 1
  %1583 = call i32 @llvm.bswap.i32(i32 %1582) #9
  %1584 = add i32 %1583, %1578
  %1585 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %1584, i32* %1585, align 8
  br label %1593

1586:                                             ; preds = %1565
  %1587 = sub nuw nsw i64 4, %1568
  %1588 = bitcast i32* %97 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1588)
  store i32 0, i32* %97, align 4
  %1589 = getelementptr inbounds i8, i8* %1554, i64 %1566
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1588, i8* align 1 %1589, i64 %1587, i1 false) #9
  %1590 = load i32, i32* %97, align 4
  %1591 = call i32 @llvm.bswap.i32(i32 %1590) #9
  %1592 = add i32 %1591, %1575
  store i32 %1592, i32* %1573, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1588)
  br label %1593

1593:                                             ; preds = %1577, %1586
  %1594 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1595 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1594, i64 2
  %1596 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1595, align 8
  %1597 = call zeroext i1 %1596(%"class.ots::OTSStream"* %1, i8* nonnull %1554, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1554)
  br i1 %1597, label %1598, label %3081

1598:                                             ; preds = %1593
  %1599 = bitcast i32* %95 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1599)
  store i32 0, i32* %95, align 4
  %1600 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1601 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1600, i64 4
  %1602 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1601, align 8
  %1603 = call i64 %1602(%"class.ots::OTSStream"* %1) #9
  %1604 = and i64 %1603, 3
  %1605 = icmp eq i64 %1604, 0
  br i1 %1605, label %1606, label %1609

1606:                                             ; preds = %1598
  %1607 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1608 = load i32, i32* %1607, align 8
  br label %1621

1609:                                             ; preds = %1598
  %1610 = sub nuw nsw i64 4, %1604
  %1611 = icmp ult i64 %1610, 4
  %1612 = select i1 %1611, i64 %1610, i64 4
  %1613 = bitcast i32* %93 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1613) #9
  store i32 0, i32* %93, align 4
  %1614 = getelementptr inbounds i8, i8* %1613, i64 %1604
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1614, i8* nonnull align 4 %1599, i64 %1612, i1 false) #9
  %1615 = load i32, i32* %93, align 4
  %1616 = call i32 @llvm.bswap.i32(i32 %1615) #9
  %1617 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1618 = load i32, i32* %1617, align 8
  %1619 = add i32 %1618, %1616
  store i32 %1619, i32* %1617, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1613) #9
  %1620 = icmp eq i64 %1612, 0
  br i1 %1620, label %1621, label %1630

1621:                                             ; preds = %1609, %1606
  %1622 = phi i32 [ %1619, %1609 ], [ %1608, %1606 ]
  %1623 = phi i64 [ %1610, %1609 ], [ 0, %1606 ]
  %1624 = getelementptr inbounds i8, i8* %1599, i64 %1623
  %1625 = bitcast i8* %1624 to i32*
  %1626 = load i32, i32* %1625, align 1
  %1627 = call i32 @llvm.bswap.i32(i32 %1626) #9
  %1628 = add i32 %1627, %1622
  %1629 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %1628, i32* %1629, align 8
  br label %1637

1630:                                             ; preds = %1609
  %1631 = sub nuw nsw i64 4, %1612
  %1632 = bitcast i32* %94 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1632)
  store i32 0, i32* %94, align 4
  %1633 = getelementptr inbounds i8, i8* %1599, i64 %1610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1632, i8* align 1 %1633, i64 %1631, i1 false) #9
  %1634 = load i32, i32* %94, align 4
  %1635 = call i32 @llvm.bswap.i32(i32 %1634) #9
  %1636 = add i32 %1635, %1619
  store i32 %1636, i32* %1617, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1632)
  br label %1637

1637:                                             ; preds = %1621, %1630
  %1638 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1639 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1638, i64 2
  %1640 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1639, align 8
  %1641 = call zeroext i1 %1640(%"class.ots::OTSStream"* %1, i8* nonnull %1599, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1599)
  br i1 %1641, label %1642, label %3081

1642:                                             ; preds = %1637
  %1643 = bitcast i32* %92 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1643)
  %1644 = call i32 @llvm.bswap.i32(i32 %1475) #9
  store i32 %1644, i32* %92, align 4
  %1645 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1646 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1645, i64 4
  %1647 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1646, align 8
  %1648 = call i64 %1647(%"class.ots::OTSStream"* %1) #9
  %1649 = and i64 %1648, 3
  %1650 = icmp eq i64 %1649, 0
  br i1 %1650, label %1651, label %1654

1651:                                             ; preds = %1642
  %1652 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1653 = load i32, i32* %1652, align 8
  br label %1666

1654:                                             ; preds = %1642
  %1655 = sub nuw nsw i64 4, %1649
  %1656 = icmp ult i64 %1655, 4
  %1657 = select i1 %1656, i64 %1655, i64 4
  %1658 = bitcast i32* %90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1658) #9
  store i32 0, i32* %90, align 4
  %1659 = getelementptr inbounds i8, i8* %1658, i64 %1649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1659, i8* nonnull align 4 %1643, i64 %1657, i1 false) #9
  %1660 = load i32, i32* %90, align 4
  %1661 = call i32 @llvm.bswap.i32(i32 %1660) #9
  %1662 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1663 = load i32, i32* %1662, align 8
  %1664 = add i32 %1663, %1661
  store i32 %1664, i32* %1662, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1658) #9
  %1665 = icmp eq i64 %1657, 0
  br i1 %1665, label %1666, label %1675

1666:                                             ; preds = %1654, %1651
  %1667 = phi i32 [ %1664, %1654 ], [ %1653, %1651 ]
  %1668 = phi i64 [ %1655, %1654 ], [ 0, %1651 ]
  %1669 = getelementptr inbounds i8, i8* %1643, i64 %1668
  %1670 = bitcast i8* %1669 to i32*
  %1671 = load i32, i32* %1670, align 1
  %1672 = call i32 @llvm.bswap.i32(i32 %1671) #9
  %1673 = add i32 %1672, %1667
  %1674 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %1673, i32* %1674, align 8
  br label %1682

1675:                                             ; preds = %1654
  %1676 = sub nuw nsw i64 4, %1657
  %1677 = bitcast i32* %91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1677)
  store i32 0, i32* %91, align 4
  %1678 = getelementptr inbounds i8, i8* %1643, i64 %1655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1677, i8* align 1 %1678, i64 %1676, i1 false) #9
  %1679 = load i32, i32* %91, align 4
  %1680 = call i32 @llvm.bswap.i32(i32 %1679) #9
  %1681 = add i32 %1680, %1664
  store i32 %1681, i32* %1662, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1677)
  br label %1682

1682:                                             ; preds = %1666, %1675
  %1683 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1684 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1683, i64 2
  %1685 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1684, align 8
  %1686 = call zeroext i1 %1685(%"class.ots::OTSStream"* %1, i8* nonnull %1643, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1643)
  br i1 %1686, label %1687, label %3081

1687:                                             ; preds = %1682
  %1688 = icmp eq i32 %1475, 0
  br i1 %1688, label %1832, label %1689

1689:                                             ; preds = %1687
  %1690 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %198, i64 0, i32 0, i32 0
  %1691 = bitcast i32* %89 to i8*
  %1692 = bitcast i32* %87 to i8*
  %1693 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1694 = bitcast i32* %88 to i8*
  %1695 = bitcast i32* %86 to i8*
  %1696 = bitcast i32* %84 to i8*
  %1697 = bitcast i32* %85 to i8*
  %1698 = bitcast i32* %83 to i8*
  %1699 = bitcast i32* %81 to i8*
  %1700 = bitcast i32* %82 to i8*
  %1701 = and i64 %1474, 4294967295
  br label %1704

1702:                                             ; preds = %1826
  %1703 = icmp eq i64 %1831, %1701
  br i1 %1703, label %1832, label %1704

1704:                                             ; preds = %1702, %1689
  %1705 = phi i64 [ 0, %1689 ], [ %1831, %1702 ]
  %1706 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %1690, align 8
  %1707 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %1706, i64 %1705, i32 0
  %1708 = load i32, i32* %1707, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1691)
  %1709 = call i32 @llvm.bswap.i32(i32 %1708) #9
  store i32 %1709, i32* %89, align 4
  %1710 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1711 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1710, i64 4
  %1712 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1711, align 8
  %1713 = call i64 %1712(%"class.ots::OTSStream"* %1) #9
  %1714 = and i64 %1713, 3
  %1715 = icmp eq i64 %1714, 0
  br i1 %1715, label %1716, label %1718

1716:                                             ; preds = %1704
  %1717 = load i32, i32* %1693, align 8
  br label %1728

1718:                                             ; preds = %1704
  %1719 = sub nuw nsw i64 4, %1714
  %1720 = icmp ult i64 %1719, 4
  %1721 = select i1 %1720, i64 %1719, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1692) #9
  store i32 0, i32* %87, align 4
  %1722 = getelementptr inbounds i8, i8* %1692, i64 %1714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1722, i8* nonnull align 4 %1691, i64 %1721, i1 false) #9
  %1723 = load i32, i32* %87, align 4
  %1724 = call i32 @llvm.bswap.i32(i32 %1723) #9
  %1725 = load i32, i32* %1693, align 8
  %1726 = add i32 %1725, %1724
  store i32 %1726, i32* %1693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1692) #9
  %1727 = icmp eq i64 %1721, 0
  br i1 %1727, label %1728, label %1736

1728:                                             ; preds = %1718, %1716
  %1729 = phi i32 [ %1726, %1718 ], [ %1717, %1716 ]
  %1730 = phi i64 [ %1719, %1718 ], [ 0, %1716 ]
  %1731 = getelementptr inbounds i8, i8* %1691, i64 %1730
  %1732 = bitcast i8* %1731 to i32*
  %1733 = load i32, i32* %1732, align 1
  %1734 = call i32 @llvm.bswap.i32(i32 %1733) #9
  %1735 = add i32 %1734, %1729
  store i32 %1735, i32* %1693, align 8
  br label %1742

1736:                                             ; preds = %1718
  %1737 = sub nuw nsw i64 4, %1721
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1694)
  store i32 0, i32* %88, align 4
  %1738 = getelementptr inbounds i8, i8* %1691, i64 %1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1694, i8* align 1 %1738, i64 %1737, i1 false) #9
  %1739 = load i32, i32* %88, align 4
  %1740 = call i32 @llvm.bswap.i32(i32 %1739) #9
  %1741 = add i32 %1740, %1726
  store i32 %1741, i32* %1693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1694)
  br label %1742

1742:                                             ; preds = %1728, %1736
  %1743 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1744 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1743, i64 2
  %1745 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1744, align 8
  %1746 = call zeroext i1 %1745(%"class.ots::OTSStream"* %1, i8* nonnull %1691, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1691)
  br i1 %1746, label %1747, label %3081

1747:                                             ; preds = %1742
  %1748 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %1690, align 8
  %1749 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %1748, i64 %1705, i32 1
  %1750 = load i32, i32* %1749, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1695)
  %1751 = call i32 @llvm.bswap.i32(i32 %1750) #9
  store i32 %1751, i32* %86, align 4
  %1752 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1753 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1752, i64 4
  %1754 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1753, align 8
  %1755 = call i64 %1754(%"class.ots::OTSStream"* %1) #9
  %1756 = and i64 %1755, 3
  %1757 = icmp eq i64 %1756, 0
  br i1 %1757, label %1758, label %1760

1758:                                             ; preds = %1747
  %1759 = load i32, i32* %1693, align 8
  br label %1770

1760:                                             ; preds = %1747
  %1761 = sub nuw nsw i64 4, %1756
  %1762 = icmp ult i64 %1761, 4
  %1763 = select i1 %1762, i64 %1761, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1696) #9
  store i32 0, i32* %84, align 4
  %1764 = getelementptr inbounds i8, i8* %1696, i64 %1756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1764, i8* nonnull align 4 %1695, i64 %1763, i1 false) #9
  %1765 = load i32, i32* %84, align 4
  %1766 = call i32 @llvm.bswap.i32(i32 %1765) #9
  %1767 = load i32, i32* %1693, align 8
  %1768 = add i32 %1767, %1766
  store i32 %1768, i32* %1693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1696) #9
  %1769 = icmp eq i64 %1763, 0
  br i1 %1769, label %1770, label %1778

1770:                                             ; preds = %1760, %1758
  %1771 = phi i32 [ %1768, %1760 ], [ %1759, %1758 ]
  %1772 = phi i64 [ %1761, %1760 ], [ 0, %1758 ]
  %1773 = getelementptr inbounds i8, i8* %1695, i64 %1772
  %1774 = bitcast i8* %1773 to i32*
  %1775 = load i32, i32* %1774, align 1
  %1776 = call i32 @llvm.bswap.i32(i32 %1775) #9
  %1777 = add i32 %1776, %1771
  store i32 %1777, i32* %1693, align 8
  br label %1784

1778:                                             ; preds = %1760
  %1779 = sub nuw nsw i64 4, %1763
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1697)
  store i32 0, i32* %85, align 4
  %1780 = getelementptr inbounds i8, i8* %1695, i64 %1761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1697, i8* align 1 %1780, i64 %1779, i1 false) #9
  %1781 = load i32, i32* %85, align 4
  %1782 = call i32 @llvm.bswap.i32(i32 %1781) #9
  %1783 = add i32 %1782, %1768
  store i32 %1783, i32* %1693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1697)
  br label %1784

1784:                                             ; preds = %1770, %1778
  %1785 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1786 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1785, i64 2
  %1787 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1786, align 8
  %1788 = call zeroext i1 %1787(%"class.ots::OTSStream"* %1, i8* nonnull %1695, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1695)
  br i1 %1788, label %1789, label %3081

1789:                                             ; preds = %1784
  %1790 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %1690, align 8
  %1791 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %1790, i64 %1705, i32 2
  %1792 = load i32, i32* %1791, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1698)
  %1793 = call i32 @llvm.bswap.i32(i32 %1792) #9
  store i32 %1793, i32* %83, align 4
  %1794 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1795 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1794, i64 4
  %1796 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1795, align 8
  %1797 = call i64 %1796(%"class.ots::OTSStream"* %1) #9
  %1798 = and i64 %1797, 3
  %1799 = icmp eq i64 %1798, 0
  br i1 %1799, label %1800, label %1802

1800:                                             ; preds = %1789
  %1801 = load i32, i32* %1693, align 8
  br label %1812

1802:                                             ; preds = %1789
  %1803 = sub nuw nsw i64 4, %1798
  %1804 = icmp ult i64 %1803, 4
  %1805 = select i1 %1804, i64 %1803, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1699) #9
  store i32 0, i32* %81, align 4
  %1806 = getelementptr inbounds i8, i8* %1699, i64 %1798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1806, i8* nonnull align 4 %1698, i64 %1805, i1 false) #9
  %1807 = load i32, i32* %81, align 4
  %1808 = call i32 @llvm.bswap.i32(i32 %1807) #9
  %1809 = load i32, i32* %1693, align 8
  %1810 = add i32 %1809, %1808
  store i32 %1810, i32* %1693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1699) #9
  %1811 = icmp eq i64 %1805, 0
  br i1 %1811, label %1812, label %1820

1812:                                             ; preds = %1802, %1800
  %1813 = phi i32 [ %1810, %1802 ], [ %1801, %1800 ]
  %1814 = phi i64 [ %1803, %1802 ], [ 0, %1800 ]
  %1815 = getelementptr inbounds i8, i8* %1698, i64 %1814
  %1816 = bitcast i8* %1815 to i32*
  %1817 = load i32, i32* %1816, align 1
  %1818 = call i32 @llvm.bswap.i32(i32 %1817) #9
  %1819 = add i32 %1818, %1813
  store i32 %1819, i32* %1693, align 8
  br label %1826

1820:                                             ; preds = %1802
  %1821 = sub nuw nsw i64 4, %1805
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1700)
  store i32 0, i32* %82, align 4
  %1822 = getelementptr inbounds i8, i8* %1698, i64 %1803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1700, i8* align 1 %1822, i64 %1821, i1 false) #9
  %1823 = load i32, i32* %82, align 4
  %1824 = call i32 @llvm.bswap.i32(i32 %1823) #9
  %1825 = add i32 %1824, %1810
  store i32 %1825, i32* %1693, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1700)
  br label %1826

1826:                                             ; preds = %1812, %1820
  %1827 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1828 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1827, i64 2
  %1829 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1828, align 8
  %1830 = call zeroext i1 %1829(%"class.ots::OTSStream"* %1, i8* nonnull %1698, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1698)
  %1831 = add nuw nsw i64 %1705, 1
  br i1 %1830, label %1702, label %3081

1832:                                             ; preds = %1702, %1687, %1465
  %1833 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1834 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1833, i64 4
  %1835 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1834, align 8
  %1836 = call i64 %1835(%"class.ots::OTSStream"* %1) #9
  br i1 %213, label %1837, label %2199

1837:                                             ; preds = %1832
  %1838 = load i64, i64* %208, align 8
  %1839 = load i64, i64* %210, align 8
  %1840 = sub i64 %1838, %1839
  %1841 = sdiv exact i64 %1840, 12
  %1842 = trunc i64 %1841 to i32
  %1843 = bitcast i16* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1843)
  store i16 3328, i16* %80, align 2
  %1844 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1845 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1844, i64 4
  %1846 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1845, align 8
  %1847 = call i64 %1846(%"class.ots::OTSStream"* %1) #9
  %1848 = and i64 %1847, 3
  %1849 = icmp eq i64 %1848, 0
  br i1 %1849, label %1850, label %1853

1850:                                             ; preds = %1837
  %1851 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1852 = load i32, i32* %1851, align 8
  br label %1865

1853:                                             ; preds = %1837
  %1854 = sub nuw nsw i64 4, %1848
  %1855 = icmp ult i64 %1854, 2
  %1856 = select i1 %1855, i64 %1854, i64 2
  %1857 = bitcast i32* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1857) #9
  store i32 0, i32* %78, align 4
  %1858 = getelementptr inbounds i8, i8* %1857, i64 %1848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1858, i8* nonnull align 2 %1843, i64 %1856, i1 false) #9
  %1859 = load i32, i32* %78, align 4
  %1860 = call i32 @llvm.bswap.i32(i32 %1859) #9
  %1861 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1862 = load i32, i32* %1861, align 8
  %1863 = add i32 %1862, %1860
  store i32 %1863, i32* %1861, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1857) #9
  %1864 = icmp eq i64 %1848, 3
  br i1 %1864, label %1865, label %1875

1865:                                             ; preds = %1853, %1850
  %1866 = phi i32 [ %1863, %1853 ], [ %1852, %1850 ]
  %1867 = phi i64 [ %1856, %1853 ], [ 0, %1850 ]
  %1868 = phi i64 [ 1, %1853 ], [ 2, %1850 ]
  %1869 = bitcast i32* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1869)
  store i32 0, i32* %79, align 4
  %1870 = getelementptr inbounds i8, i8* %1843, i64 %1867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1869, i8* align 1 %1870, i64 %1868, i1 false) #9
  %1871 = load i32, i32* %79, align 4
  %1872 = call i32 @llvm.bswap.i32(i32 %1871) #9
  %1873 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1874 = add i32 %1872, %1866
  store i32 %1874, i32* %1873, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1869)
  br label %1875

1875:                                             ; preds = %1853, %1865
  %1876 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1877 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1876, i64 2
  %1878 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1877, align 8
  %1879 = call zeroext i1 %1878(%"class.ots::OTSStream"* %1, i8* nonnull %1843, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1843)
  br i1 %1879, label %1880, label %3081

1880:                                             ; preds = %1875
  %1881 = bitcast i16* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1881)
  store i16 0, i16* %77, align 2
  %1882 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1883 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1882, i64 4
  %1884 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1883, align 8
  %1885 = call i64 %1884(%"class.ots::OTSStream"* %1) #9
  %1886 = and i64 %1885, 3
  %1887 = icmp eq i64 %1886, 0
  br i1 %1887, label %1888, label %1891

1888:                                             ; preds = %1880
  %1889 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1890 = load i32, i32* %1889, align 8
  br label %1903

1891:                                             ; preds = %1880
  %1892 = sub nuw nsw i64 4, %1886
  %1893 = icmp ult i64 %1892, 2
  %1894 = select i1 %1893, i64 %1892, i64 2
  %1895 = bitcast i32* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1895) #9
  store i32 0, i32* %75, align 4
  %1896 = getelementptr inbounds i8, i8* %1895, i64 %1886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1896, i8* nonnull align 2 %1881, i64 %1894, i1 false) #9
  %1897 = load i32, i32* %75, align 4
  %1898 = call i32 @llvm.bswap.i32(i32 %1897) #9
  %1899 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1900 = load i32, i32* %1899, align 8
  %1901 = add i32 %1900, %1898
  store i32 %1901, i32* %1899, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1895) #9
  %1902 = icmp eq i64 %1886, 3
  br i1 %1902, label %1903, label %1913

1903:                                             ; preds = %1891, %1888
  %1904 = phi i32 [ %1901, %1891 ], [ %1890, %1888 ]
  %1905 = phi i64 [ %1894, %1891 ], [ 0, %1888 ]
  %1906 = phi i64 [ 1, %1891 ], [ 2, %1888 ]
  %1907 = bitcast i32* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1907)
  store i32 0, i32* %76, align 4
  %1908 = getelementptr inbounds i8, i8* %1881, i64 %1905
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1907, i8* align 1 %1908, i64 %1906, i1 false) #9
  %1909 = load i32, i32* %76, align 4
  %1910 = call i32 @llvm.bswap.i32(i32 %1909) #9
  %1911 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1912 = add i32 %1910, %1904
  store i32 %1912, i32* %1911, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1907)
  br label %1913

1913:                                             ; preds = %1891, %1903
  %1914 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1915 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1914, i64 2
  %1916 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1915, align 8
  %1917 = call zeroext i1 %1916(%"class.ots::OTSStream"* %1, i8* nonnull %1881, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1881)
  br i1 %1917, label %1918, label %3081

1918:                                             ; preds = %1913
  %1919 = mul i32 %1842, 12
  %1920 = add i32 %1919, 16
  %1921 = bitcast i32* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1921)
  %1922 = call i32 @llvm.bswap.i32(i32 %1920) #9
  store i32 %1922, i32* %74, align 4
  %1923 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1924 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1923, i64 4
  %1925 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1924, align 8
  %1926 = call i64 %1925(%"class.ots::OTSStream"* %1) #9
  %1927 = and i64 %1926, 3
  %1928 = icmp eq i64 %1927, 0
  br i1 %1928, label %1929, label %1932

1929:                                             ; preds = %1918
  %1930 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1931 = load i32, i32* %1930, align 8
  br label %1944

1932:                                             ; preds = %1918
  %1933 = sub nuw nsw i64 4, %1927
  %1934 = icmp ult i64 %1933, 4
  %1935 = select i1 %1934, i64 %1933, i64 4
  %1936 = bitcast i32* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1936) #9
  store i32 0, i32* %72, align 4
  %1937 = getelementptr inbounds i8, i8* %1936, i64 %1927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1937, i8* nonnull align 4 %1921, i64 %1935, i1 false) #9
  %1938 = load i32, i32* %72, align 4
  %1939 = call i32 @llvm.bswap.i32(i32 %1938) #9
  %1940 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1941 = load i32, i32* %1940, align 8
  %1942 = add i32 %1941, %1939
  store i32 %1942, i32* %1940, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1936) #9
  %1943 = icmp eq i64 %1935, 0
  br i1 %1943, label %1944, label %1953

1944:                                             ; preds = %1932, %1929
  %1945 = phi i32 [ %1942, %1932 ], [ %1931, %1929 ]
  %1946 = phi i64 [ %1933, %1932 ], [ 0, %1929 ]
  %1947 = getelementptr inbounds i8, i8* %1921, i64 %1946
  %1948 = bitcast i8* %1947 to i32*
  %1949 = load i32, i32* %1948, align 1
  %1950 = call i32 @llvm.bswap.i32(i32 %1949) #9
  %1951 = add i32 %1950, %1945
  %1952 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %1951, i32* %1952, align 8
  br label %1960

1953:                                             ; preds = %1932
  %1954 = sub nuw nsw i64 4, %1935
  %1955 = bitcast i32* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1955)
  store i32 0, i32* %73, align 4
  %1956 = getelementptr inbounds i8, i8* %1921, i64 %1933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1955, i8* align 1 %1956, i64 %1954, i1 false) #9
  %1957 = load i32, i32* %73, align 4
  %1958 = call i32 @llvm.bswap.i32(i32 %1957) #9
  %1959 = add i32 %1958, %1942
  store i32 %1959, i32* %1940, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1955)
  br label %1960

1960:                                             ; preds = %1944, %1953
  %1961 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %1962 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1961, i64 2
  %1963 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %1962, align 8
  %1964 = call zeroext i1 %1963(%"class.ots::OTSStream"* %1, i8* nonnull %1921, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1921)
  br i1 %1964, label %1965, label %3081

1965:                                             ; preds = %1960
  %1966 = bitcast i32* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1966)
  store i32 0, i32* %71, align 4
  %1967 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %1968 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1967, i64 4
  %1969 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %1968, align 8
  %1970 = call i64 %1969(%"class.ots::OTSStream"* %1) #9
  %1971 = and i64 %1970, 3
  %1972 = icmp eq i64 %1971, 0
  br i1 %1972, label %1973, label %1976

1973:                                             ; preds = %1965
  %1974 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1975 = load i32, i32* %1974, align 8
  br label %1988

1976:                                             ; preds = %1965
  %1977 = sub nuw nsw i64 4, %1971
  %1978 = icmp ult i64 %1977, 4
  %1979 = select i1 %1978, i64 %1977, i64 4
  %1980 = bitcast i32* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1980) #9
  store i32 0, i32* %69, align 4
  %1981 = getelementptr inbounds i8, i8* %1980, i64 %1971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1981, i8* nonnull align 4 %1966, i64 %1979, i1 false) #9
  %1982 = load i32, i32* %69, align 4
  %1983 = call i32 @llvm.bswap.i32(i32 %1982) #9
  %1984 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %1985 = load i32, i32* %1984, align 8
  %1986 = add i32 %1985, %1983
  store i32 %1986, i32* %1984, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1980) #9
  %1987 = icmp eq i64 %1979, 0
  br i1 %1987, label %1988, label %1997

1988:                                             ; preds = %1976, %1973
  %1989 = phi i32 [ %1986, %1976 ], [ %1975, %1973 ]
  %1990 = phi i64 [ %1977, %1976 ], [ 0, %1973 ]
  %1991 = getelementptr inbounds i8, i8* %1966, i64 %1990
  %1992 = bitcast i8* %1991 to i32*
  %1993 = load i32, i32* %1992, align 1
  %1994 = call i32 @llvm.bswap.i32(i32 %1993) #9
  %1995 = add i32 %1994, %1989
  %1996 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %1995, i32* %1996, align 8
  br label %2004

1997:                                             ; preds = %1976
  %1998 = sub nuw nsw i64 4, %1979
  %1999 = bitcast i32* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1999)
  store i32 0, i32* %70, align 4
  %2000 = getelementptr inbounds i8, i8* %1966, i64 %1977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1999, i8* align 1 %2000, i64 %1998, i1 false) #9
  %2001 = load i32, i32* %70, align 4
  %2002 = call i32 @llvm.bswap.i32(i32 %2001) #9
  %2003 = add i32 %2002, %1986
  store i32 %2003, i32* %1984, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1999)
  br label %2004

2004:                                             ; preds = %1988, %1997
  %2005 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2006 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2005, i64 2
  %2007 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2006, align 8
  %2008 = call zeroext i1 %2007(%"class.ots::OTSStream"* %1, i8* nonnull %1966, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1966)
  br i1 %2008, label %2009, label %3081

2009:                                             ; preds = %2004
  %2010 = bitcast i32* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2010)
  %2011 = call i32 @llvm.bswap.i32(i32 %1842) #9
  store i32 %2011, i32* %68, align 4
  %2012 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2013 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2012, i64 4
  %2014 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2013, align 8
  %2015 = call i64 %2014(%"class.ots::OTSStream"* %1) #9
  %2016 = and i64 %2015, 3
  %2017 = icmp eq i64 %2016, 0
  br i1 %2017, label %2018, label %2021

2018:                                             ; preds = %2009
  %2019 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2020 = load i32, i32* %2019, align 8
  br label %2033

2021:                                             ; preds = %2009
  %2022 = sub nuw nsw i64 4, %2016
  %2023 = icmp ult i64 %2022, 4
  %2024 = select i1 %2023, i64 %2022, i64 4
  %2025 = bitcast i32* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2025) #9
  store i32 0, i32* %66, align 4
  %2026 = getelementptr inbounds i8, i8* %2025, i64 %2016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2026, i8* nonnull align 4 %2010, i64 %2024, i1 false) #9
  %2027 = load i32, i32* %66, align 4
  %2028 = call i32 @llvm.bswap.i32(i32 %2027) #9
  %2029 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2030 = load i32, i32* %2029, align 8
  %2031 = add i32 %2030, %2028
  store i32 %2031, i32* %2029, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2025) #9
  %2032 = icmp eq i64 %2024, 0
  br i1 %2032, label %2033, label %2042

2033:                                             ; preds = %2021, %2018
  %2034 = phi i32 [ %2031, %2021 ], [ %2020, %2018 ]
  %2035 = phi i64 [ %2022, %2021 ], [ 0, %2018 ]
  %2036 = getelementptr inbounds i8, i8* %2010, i64 %2035
  %2037 = bitcast i8* %2036 to i32*
  %2038 = load i32, i32* %2037, align 1
  %2039 = call i32 @llvm.bswap.i32(i32 %2038) #9
  %2040 = add i32 %2039, %2034
  %2041 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2040, i32* %2041, align 8
  br label %2049

2042:                                             ; preds = %2021
  %2043 = sub nuw nsw i64 4, %2024
  %2044 = bitcast i32* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2044)
  store i32 0, i32* %67, align 4
  %2045 = getelementptr inbounds i8, i8* %2010, i64 %2022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2044, i8* align 1 %2045, i64 %2043, i1 false) #9
  %2046 = load i32, i32* %67, align 4
  %2047 = call i32 @llvm.bswap.i32(i32 %2046) #9
  %2048 = add i32 %2047, %2031
  store i32 %2048, i32* %2029, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2044)
  br label %2049

2049:                                             ; preds = %2033, %2042
  %2050 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2051 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2050, i64 2
  %2052 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2051, align 8
  %2053 = call zeroext i1 %2052(%"class.ots::OTSStream"* %1, i8* nonnull %2010, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2010)
  br i1 %2053, label %2054, label %3081

2054:                                             ; preds = %2049
  %2055 = icmp eq i32 %1842, 0
  br i1 %2055, label %2199, label %2056

2056:                                             ; preds = %2054
  %2057 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %206, i64 0, i32 0, i32 0
  %2058 = bitcast i32* %65 to i8*
  %2059 = bitcast i32* %63 to i8*
  %2060 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2061 = bitcast i32* %64 to i8*
  %2062 = bitcast i32* %62 to i8*
  %2063 = bitcast i32* %60 to i8*
  %2064 = bitcast i32* %61 to i8*
  %2065 = bitcast i32* %59 to i8*
  %2066 = bitcast i32* %57 to i8*
  %2067 = bitcast i32* %58 to i8*
  %2068 = and i64 %1841, 4294967295
  br label %2071

2069:                                             ; preds = %2193
  %2070 = icmp eq i64 %2198, %2068
  br i1 %2070, label %2199, label %2071

2071:                                             ; preds = %2069, %2056
  %2072 = phi i64 [ 0, %2056 ], [ %2198, %2069 ]
  %2073 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %2057, align 8
  %2074 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %2073, i64 %2072, i32 0
  %2075 = load i32, i32* %2074, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2058)
  %2076 = call i32 @llvm.bswap.i32(i32 %2075) #9
  store i32 %2076, i32* %65, align 4
  %2077 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2078 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2077, i64 4
  %2079 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2078, align 8
  %2080 = call i64 %2079(%"class.ots::OTSStream"* %1) #9
  %2081 = and i64 %2080, 3
  %2082 = icmp eq i64 %2081, 0
  br i1 %2082, label %2083, label %2085

2083:                                             ; preds = %2071
  %2084 = load i32, i32* %2060, align 8
  br label %2095

2085:                                             ; preds = %2071
  %2086 = sub nuw nsw i64 4, %2081
  %2087 = icmp ult i64 %2086, 4
  %2088 = select i1 %2087, i64 %2086, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2059) #9
  store i32 0, i32* %63, align 4
  %2089 = getelementptr inbounds i8, i8* %2059, i64 %2081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2089, i8* nonnull align 4 %2058, i64 %2088, i1 false) #9
  %2090 = load i32, i32* %63, align 4
  %2091 = call i32 @llvm.bswap.i32(i32 %2090) #9
  %2092 = load i32, i32* %2060, align 8
  %2093 = add i32 %2092, %2091
  store i32 %2093, i32* %2060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2059) #9
  %2094 = icmp eq i64 %2088, 0
  br i1 %2094, label %2095, label %2103

2095:                                             ; preds = %2085, %2083
  %2096 = phi i32 [ %2093, %2085 ], [ %2084, %2083 ]
  %2097 = phi i64 [ %2086, %2085 ], [ 0, %2083 ]
  %2098 = getelementptr inbounds i8, i8* %2058, i64 %2097
  %2099 = bitcast i8* %2098 to i32*
  %2100 = load i32, i32* %2099, align 1
  %2101 = call i32 @llvm.bswap.i32(i32 %2100) #9
  %2102 = add i32 %2101, %2096
  store i32 %2102, i32* %2060, align 8
  br label %2109

2103:                                             ; preds = %2085
  %2104 = sub nuw nsw i64 4, %2088
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2061)
  store i32 0, i32* %64, align 4
  %2105 = getelementptr inbounds i8, i8* %2058, i64 %2086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2061, i8* align 1 %2105, i64 %2104, i1 false) #9
  %2106 = load i32, i32* %64, align 4
  %2107 = call i32 @llvm.bswap.i32(i32 %2106) #9
  %2108 = add i32 %2107, %2093
  store i32 %2108, i32* %2060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2061)
  br label %2109

2109:                                             ; preds = %2095, %2103
  %2110 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2111 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2110, i64 2
  %2112 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2111, align 8
  %2113 = call zeroext i1 %2112(%"class.ots::OTSStream"* %1, i8* nonnull %2058, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2058)
  br i1 %2113, label %2114, label %3081

2114:                                             ; preds = %2109
  %2115 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %2057, align 8
  %2116 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %2115, i64 %2072, i32 1
  %2117 = load i32, i32* %2116, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2062)
  %2118 = call i32 @llvm.bswap.i32(i32 %2117) #9
  store i32 %2118, i32* %62, align 4
  %2119 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2120 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2119, i64 4
  %2121 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2120, align 8
  %2122 = call i64 %2121(%"class.ots::OTSStream"* %1) #9
  %2123 = and i64 %2122, 3
  %2124 = icmp eq i64 %2123, 0
  br i1 %2124, label %2125, label %2127

2125:                                             ; preds = %2114
  %2126 = load i32, i32* %2060, align 8
  br label %2137

2127:                                             ; preds = %2114
  %2128 = sub nuw nsw i64 4, %2123
  %2129 = icmp ult i64 %2128, 4
  %2130 = select i1 %2129, i64 %2128, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2063) #9
  store i32 0, i32* %60, align 4
  %2131 = getelementptr inbounds i8, i8* %2063, i64 %2123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2131, i8* nonnull align 4 %2062, i64 %2130, i1 false) #9
  %2132 = load i32, i32* %60, align 4
  %2133 = call i32 @llvm.bswap.i32(i32 %2132) #9
  %2134 = load i32, i32* %2060, align 8
  %2135 = add i32 %2134, %2133
  store i32 %2135, i32* %2060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2063) #9
  %2136 = icmp eq i64 %2130, 0
  br i1 %2136, label %2137, label %2145

2137:                                             ; preds = %2127, %2125
  %2138 = phi i32 [ %2135, %2127 ], [ %2126, %2125 ]
  %2139 = phi i64 [ %2128, %2127 ], [ 0, %2125 ]
  %2140 = getelementptr inbounds i8, i8* %2062, i64 %2139
  %2141 = bitcast i8* %2140 to i32*
  %2142 = load i32, i32* %2141, align 1
  %2143 = call i32 @llvm.bswap.i32(i32 %2142) #9
  %2144 = add i32 %2143, %2138
  store i32 %2144, i32* %2060, align 8
  br label %2151

2145:                                             ; preds = %2127
  %2146 = sub nuw nsw i64 4, %2130
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2064)
  store i32 0, i32* %61, align 4
  %2147 = getelementptr inbounds i8, i8* %2062, i64 %2128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2064, i8* align 1 %2147, i64 %2146, i1 false) #9
  %2148 = load i32, i32* %61, align 4
  %2149 = call i32 @llvm.bswap.i32(i32 %2148) #9
  %2150 = add i32 %2149, %2135
  store i32 %2150, i32* %2060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2064)
  br label %2151

2151:                                             ; preds = %2137, %2145
  %2152 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2153 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2152, i64 2
  %2154 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2153, align 8
  %2155 = call zeroext i1 %2154(%"class.ots::OTSStream"* %1, i8* nonnull %2062, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2062)
  br i1 %2155, label %2156, label %3081

2156:                                             ; preds = %2151
  %2157 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %2057, align 8
  %2158 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %2157, i64 %2072, i32 2
  %2159 = load i32, i32* %2158, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2065)
  %2160 = call i32 @llvm.bswap.i32(i32 %2159) #9
  store i32 %2160, i32* %59, align 4
  %2161 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2162 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2161, i64 4
  %2163 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2162, align 8
  %2164 = call i64 %2163(%"class.ots::OTSStream"* %1) #9
  %2165 = and i64 %2164, 3
  %2166 = icmp eq i64 %2165, 0
  br i1 %2166, label %2167, label %2169

2167:                                             ; preds = %2156
  %2168 = load i32, i32* %2060, align 8
  br label %2179

2169:                                             ; preds = %2156
  %2170 = sub nuw nsw i64 4, %2165
  %2171 = icmp ult i64 %2170, 4
  %2172 = select i1 %2171, i64 %2170, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2066) #9
  store i32 0, i32* %57, align 4
  %2173 = getelementptr inbounds i8, i8* %2066, i64 %2165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2173, i8* nonnull align 4 %2065, i64 %2172, i1 false) #9
  %2174 = load i32, i32* %57, align 4
  %2175 = call i32 @llvm.bswap.i32(i32 %2174) #9
  %2176 = load i32, i32* %2060, align 8
  %2177 = add i32 %2176, %2175
  store i32 %2177, i32* %2060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2066) #9
  %2178 = icmp eq i64 %2172, 0
  br i1 %2178, label %2179, label %2187

2179:                                             ; preds = %2169, %2167
  %2180 = phi i32 [ %2177, %2169 ], [ %2168, %2167 ]
  %2181 = phi i64 [ %2170, %2169 ], [ 0, %2167 ]
  %2182 = getelementptr inbounds i8, i8* %2065, i64 %2181
  %2183 = bitcast i8* %2182 to i32*
  %2184 = load i32, i32* %2183, align 1
  %2185 = call i32 @llvm.bswap.i32(i32 %2184) #9
  %2186 = add i32 %2185, %2180
  store i32 %2186, i32* %2060, align 8
  br label %2193

2187:                                             ; preds = %2169
  %2188 = sub nuw nsw i64 4, %2172
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2067)
  store i32 0, i32* %58, align 4
  %2189 = getelementptr inbounds i8, i8* %2065, i64 %2170
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2067, i8* align 1 %2189, i64 %2188, i1 false) #9
  %2190 = load i32, i32* %58, align 4
  %2191 = call i32 @llvm.bswap.i32(i32 %2190) #9
  %2192 = add i32 %2191, %2177
  store i32 %2192, i32* %2060, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2067)
  br label %2193

2193:                                             ; preds = %2179, %2187
  %2194 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2195 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2194, i64 2
  %2196 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2195, align 8
  %2197 = call zeroext i1 %2196(%"class.ots::OTSStream"* %1, i8* nonnull %2065, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2065)
  %2198 = add nuw nsw i64 %2072, 1
  br i1 %2197, label %2069, label %3081

2199:                                             ; preds = %2069, %2054, %1832
  %2200 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2201 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2200, i64 4
  %2202 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2201, align 8
  %2203 = call i64 %2202(%"class.ots::OTSStream"* %1) #9
  %2204 = load i1 (%"class.ots::OTSStream"*, i64)**, i1 (%"class.ots::OTSStream"*, i64)*** %325, align 8
  %2205 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %2204, i64 3
  %2206 = load i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %2205, align 8
  %2207 = call zeroext i1 %2206(%"class.ots::OTSStream"* %1, i64 %322) #9
  br i1 %2207, label %2208, label %3081

2208:                                             ; preds = %2199
  br i1 %174, label %2209, label %2332

2209:                                             ; preds = %2208
  %2210 = bitcast i16* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2210)
  store i16 0, i16* %56, align 2
  %2211 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2212 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2211, i64 4
  %2213 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2212, align 8
  %2214 = call i64 %2213(%"class.ots::OTSStream"* %1) #9
  %2215 = and i64 %2214, 3
  %2216 = icmp eq i64 %2215, 0
  br i1 %2216, label %2217, label %2220

2217:                                             ; preds = %2209
  %2218 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2219 = load i32, i32* %2218, align 8
  br label %2232

2220:                                             ; preds = %2209
  %2221 = sub nuw nsw i64 4, %2215
  %2222 = icmp ult i64 %2221, 2
  %2223 = select i1 %2222, i64 %2221, i64 2
  %2224 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2224) #9
  store i32 0, i32* %54, align 4
  %2225 = getelementptr inbounds i8, i8* %2224, i64 %2215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2225, i8* nonnull align 2 %2210, i64 %2223, i1 false) #9
  %2226 = load i32, i32* %54, align 4
  %2227 = call i32 @llvm.bswap.i32(i32 %2226) #9
  %2228 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2229 = load i32, i32* %2228, align 8
  %2230 = add i32 %2229, %2227
  store i32 %2230, i32* %2228, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2224) #9
  %2231 = icmp eq i64 %2215, 3
  br i1 %2231, label %2232, label %2242

2232:                                             ; preds = %2220, %2217
  %2233 = phi i32 [ %2230, %2220 ], [ %2219, %2217 ]
  %2234 = phi i64 [ %2223, %2220 ], [ 0, %2217 ]
  %2235 = phi i64 [ 1, %2220 ], [ 2, %2217 ]
  %2236 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2236)
  store i32 0, i32* %55, align 4
  %2237 = getelementptr inbounds i8, i8* %2210, i64 %2234
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2236, i8* align 1 %2237, i64 %2235, i1 false) #9
  %2238 = load i32, i32* %55, align 4
  %2239 = call i32 @llvm.bswap.i32(i32 %2238) #9
  %2240 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2241 = add i32 %2239, %2233
  store i32 %2241, i32* %2240, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2236)
  br label %2242

2242:                                             ; preds = %2220, %2232
  %2243 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2244 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2243, i64 2
  %2245 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2244, align 8
  %2246 = call zeroext i1 %2245(%"class.ots::OTSStream"* %1, i8* nonnull %2210, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2210)
  br i1 %2246, label %2247, label %3081

2247:                                             ; preds = %2242
  %2248 = bitcast i16* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2248)
  store i16 768, i16* %53, align 2
  %2249 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2250 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2249, i64 4
  %2251 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2250, align 8
  %2252 = call i64 %2251(%"class.ots::OTSStream"* %1) #9
  %2253 = and i64 %2252, 3
  %2254 = icmp eq i64 %2253, 0
  br i1 %2254, label %2255, label %2258

2255:                                             ; preds = %2247
  %2256 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2257 = load i32, i32* %2256, align 8
  br label %2270

2258:                                             ; preds = %2247
  %2259 = sub nuw nsw i64 4, %2253
  %2260 = icmp ult i64 %2259, 2
  %2261 = select i1 %2260, i64 %2259, i64 2
  %2262 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2262) #9
  store i32 0, i32* %51, align 4
  %2263 = getelementptr inbounds i8, i8* %2262, i64 %2253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2263, i8* nonnull align 2 %2248, i64 %2261, i1 false) #9
  %2264 = load i32, i32* %51, align 4
  %2265 = call i32 @llvm.bswap.i32(i32 %2264) #9
  %2266 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2267 = load i32, i32* %2266, align 8
  %2268 = add i32 %2267, %2265
  store i32 %2268, i32* %2266, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2262) #9
  %2269 = icmp eq i64 %2253, 3
  br i1 %2269, label %2270, label %2280

2270:                                             ; preds = %2258, %2255
  %2271 = phi i32 [ %2268, %2258 ], [ %2257, %2255 ]
  %2272 = phi i64 [ %2261, %2258 ], [ 0, %2255 ]
  %2273 = phi i64 [ 1, %2258 ], [ 2, %2255 ]
  %2274 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2274)
  store i32 0, i32* %52, align 4
  %2275 = getelementptr inbounds i8, i8* %2248, i64 %2272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2274, i8* align 1 %2275, i64 %2273, i1 false) #9
  %2276 = load i32, i32* %52, align 4
  %2277 = call i32 @llvm.bswap.i32(i32 %2276) #9
  %2278 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2279 = add i32 %2277, %2271
  store i32 %2279, i32* %2278, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2274)
  br label %2280

2280:                                             ; preds = %2258, %2270
  %2281 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2282 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2281, i64 2
  %2283 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2282, align 8
  %2284 = call zeroext i1 %2283(%"class.ots::OTSStream"* %1, i8* nonnull %2248, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2248)
  br i1 %2284, label %2285, label %3081

2285:                                             ; preds = %2280
  %2286 = sub nsw i64 %334, %231
  %2287 = trunc i64 %2286 to i32
  %2288 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2288)
  %2289 = call i32 @llvm.bswap.i32(i32 %2287) #9
  store i32 %2289, i32* %50, align 4
  %2290 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2291 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2290, i64 4
  %2292 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2291, align 8
  %2293 = call i64 %2292(%"class.ots::OTSStream"* %1) #9
  %2294 = and i64 %2293, 3
  %2295 = icmp eq i64 %2294, 0
  br i1 %2295, label %2296, label %2299

2296:                                             ; preds = %2285
  %2297 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2298 = load i32, i32* %2297, align 8
  br label %2311

2299:                                             ; preds = %2285
  %2300 = sub nuw nsw i64 4, %2294
  %2301 = icmp ult i64 %2300, 4
  %2302 = select i1 %2301, i64 %2300, i64 4
  %2303 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2303) #9
  store i32 0, i32* %48, align 4
  %2304 = getelementptr inbounds i8, i8* %2303, i64 %2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2304, i8* nonnull align 4 %2288, i64 %2302, i1 false) #9
  %2305 = load i32, i32* %48, align 4
  %2306 = call i32 @llvm.bswap.i32(i32 %2305) #9
  %2307 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2308 = load i32, i32* %2307, align 8
  %2309 = add i32 %2308, %2306
  store i32 %2309, i32* %2307, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2303) #9
  %2310 = icmp eq i64 %2302, 0
  br i1 %2310, label %2311, label %2320

2311:                                             ; preds = %2299, %2296
  %2312 = phi i32 [ %2309, %2299 ], [ %2298, %2296 ]
  %2313 = phi i64 [ %2300, %2299 ], [ 0, %2296 ]
  %2314 = getelementptr inbounds i8, i8* %2288, i64 %2313
  %2315 = bitcast i8* %2314 to i32*
  %2316 = load i32, i32* %2315, align 1
  %2317 = call i32 @llvm.bswap.i32(i32 %2316) #9
  %2318 = add i32 %2317, %2312
  %2319 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2318, i32* %2319, align 8
  br label %2327

2320:                                             ; preds = %2299
  %2321 = sub nuw nsw i64 4, %2302
  %2322 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2322)
  store i32 0, i32* %49, align 4
  %2323 = getelementptr inbounds i8, i8* %2288, i64 %2300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2322, i8* align 1 %2323, i64 %2321, i1 false) #9
  %2324 = load i32, i32* %49, align 4
  %2325 = call i32 @llvm.bswap.i32(i32 %2324) #9
  %2326 = add i32 %2325, %2309
  store i32 %2326, i32* %2307, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2322)
  br label %2327

2327:                                             ; preds = %2311, %2320
  %2328 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2329 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2328, i64 2
  %2330 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2329, align 8
  %2331 = call zeroext i1 %2330(%"class.ots::OTSStream"* %1, i8* nonnull %2288, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2288)
  br i1 %2331, label %2332, label %3081

2332:                                             ; preds = %2327, %2208
  br i1 %181, label %2333, label %2456

2333:                                             ; preds = %2332
  %2334 = bitcast i16* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2334)
  store i16 0, i16* %47, align 2
  %2335 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2336 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2335, i64 4
  %2337 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2336, align 8
  %2338 = call i64 %2337(%"class.ots::OTSStream"* %1) #9
  %2339 = and i64 %2338, 3
  %2340 = icmp eq i64 %2339, 0
  br i1 %2340, label %2341, label %2344

2341:                                             ; preds = %2333
  %2342 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2343 = load i32, i32* %2342, align 8
  br label %2356

2344:                                             ; preds = %2333
  %2345 = sub nuw nsw i64 4, %2339
  %2346 = icmp ult i64 %2345, 2
  %2347 = select i1 %2346, i64 %2345, i64 2
  %2348 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2348) #9
  store i32 0, i32* %45, align 4
  %2349 = getelementptr inbounds i8, i8* %2348, i64 %2339
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2349, i8* nonnull align 2 %2334, i64 %2347, i1 false) #9
  %2350 = load i32, i32* %45, align 4
  %2351 = call i32 @llvm.bswap.i32(i32 %2350) #9
  %2352 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2353 = load i32, i32* %2352, align 8
  %2354 = add i32 %2353, %2351
  store i32 %2354, i32* %2352, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2348) #9
  %2355 = icmp eq i64 %2339, 3
  br i1 %2355, label %2356, label %2366

2356:                                             ; preds = %2344, %2341
  %2357 = phi i32 [ %2354, %2344 ], [ %2343, %2341 ]
  %2358 = phi i64 [ %2347, %2344 ], [ 0, %2341 ]
  %2359 = phi i64 [ 1, %2344 ], [ 2, %2341 ]
  %2360 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2360)
  store i32 0, i32* %46, align 4
  %2361 = getelementptr inbounds i8, i8* %2334, i64 %2358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2360, i8* align 1 %2361, i64 %2359, i1 false) #9
  %2362 = load i32, i32* %46, align 4
  %2363 = call i32 @llvm.bswap.i32(i32 %2362) #9
  %2364 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2365 = add i32 %2363, %2357
  store i32 %2365, i32* %2364, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2360)
  br label %2366

2366:                                             ; preds = %2344, %2356
  %2367 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2368 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2367, i64 2
  %2369 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2368, align 8
  %2370 = call zeroext i1 %2369(%"class.ots::OTSStream"* %1, i8* nonnull %2334, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2334)
  br i1 %2370, label %2371, label %3081

2371:                                             ; preds = %2366
  %2372 = bitcast i16* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2372)
  store i16 1280, i16* %44, align 2
  %2373 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2374 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2373, i64 4
  %2375 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2374, align 8
  %2376 = call i64 %2375(%"class.ots::OTSStream"* %1) #9
  %2377 = and i64 %2376, 3
  %2378 = icmp eq i64 %2377, 0
  br i1 %2378, label %2379, label %2382

2379:                                             ; preds = %2371
  %2380 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2381 = load i32, i32* %2380, align 8
  br label %2394

2382:                                             ; preds = %2371
  %2383 = sub nuw nsw i64 4, %2377
  %2384 = icmp ult i64 %2383, 2
  %2385 = select i1 %2384, i64 %2383, i64 2
  %2386 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2386) #9
  store i32 0, i32* %42, align 4
  %2387 = getelementptr inbounds i8, i8* %2386, i64 %2377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2387, i8* nonnull align 2 %2372, i64 %2385, i1 false) #9
  %2388 = load i32, i32* %42, align 4
  %2389 = call i32 @llvm.bswap.i32(i32 %2388) #9
  %2390 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2391 = load i32, i32* %2390, align 8
  %2392 = add i32 %2391, %2389
  store i32 %2392, i32* %2390, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2386) #9
  %2393 = icmp eq i64 %2377, 3
  br i1 %2393, label %2394, label %2404

2394:                                             ; preds = %2382, %2379
  %2395 = phi i32 [ %2392, %2382 ], [ %2381, %2379 ]
  %2396 = phi i64 [ %2385, %2382 ], [ 0, %2379 ]
  %2397 = phi i64 [ 1, %2382 ], [ 2, %2379 ]
  %2398 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2398)
  store i32 0, i32* %43, align 4
  %2399 = getelementptr inbounds i8, i8* %2372, i64 %2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2398, i8* align 1 %2399, i64 %2397, i1 false) #9
  %2400 = load i32, i32* %43, align 4
  %2401 = call i32 @llvm.bswap.i32(i32 %2400) #9
  %2402 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2403 = add i32 %2401, %2395
  store i32 %2403, i32* %2402, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2398)
  br label %2404

2404:                                             ; preds = %2382, %2394
  %2405 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2406 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2405, i64 2
  %2407 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2406, align 8
  %2408 = call zeroext i1 %2407(%"class.ots::OTSStream"* %1, i8* nonnull %2372, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2372)
  br i1 %2408, label %2409, label %3081

2409:                                             ; preds = %2404
  %2410 = sub nsw i64 %445, %231
  %2411 = trunc i64 %2410 to i32
  %2412 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2412)
  %2413 = call i32 @llvm.bswap.i32(i32 %2411) #9
  store i32 %2413, i32* %41, align 4
  %2414 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2415 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2414, i64 4
  %2416 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2415, align 8
  %2417 = call i64 %2416(%"class.ots::OTSStream"* %1) #9
  %2418 = and i64 %2417, 3
  %2419 = icmp eq i64 %2418, 0
  br i1 %2419, label %2420, label %2423

2420:                                             ; preds = %2409
  %2421 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2422 = load i32, i32* %2421, align 8
  br label %2435

2423:                                             ; preds = %2409
  %2424 = sub nuw nsw i64 4, %2418
  %2425 = icmp ult i64 %2424, 4
  %2426 = select i1 %2425, i64 %2424, i64 4
  %2427 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2427) #9
  store i32 0, i32* %39, align 4
  %2428 = getelementptr inbounds i8, i8* %2427, i64 %2418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2428, i8* nonnull align 4 %2412, i64 %2426, i1 false) #9
  %2429 = load i32, i32* %39, align 4
  %2430 = call i32 @llvm.bswap.i32(i32 %2429) #9
  %2431 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2432 = load i32, i32* %2431, align 8
  %2433 = add i32 %2432, %2430
  store i32 %2433, i32* %2431, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2427) #9
  %2434 = icmp eq i64 %2426, 0
  br i1 %2434, label %2435, label %2444

2435:                                             ; preds = %2423, %2420
  %2436 = phi i32 [ %2433, %2423 ], [ %2422, %2420 ]
  %2437 = phi i64 [ %2424, %2423 ], [ 0, %2420 ]
  %2438 = getelementptr inbounds i8, i8* %2412, i64 %2437
  %2439 = bitcast i8* %2438 to i32*
  %2440 = load i32, i32* %2439, align 1
  %2441 = call i32 @llvm.bswap.i32(i32 %2440) #9
  %2442 = add i32 %2441, %2436
  %2443 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2442, i32* %2443, align 8
  br label %2451

2444:                                             ; preds = %2423
  %2445 = sub nuw nsw i64 4, %2426
  %2446 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2446)
  store i32 0, i32* %40, align 4
  %2447 = getelementptr inbounds i8, i8* %2412, i64 %2424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2446, i8* align 1 %2447, i64 %2445, i1 false) #9
  %2448 = load i32, i32* %40, align 4
  %2449 = call i32 @llvm.bswap.i32(i32 %2448) #9
  %2450 = add i32 %2449, %2433
  store i32 %2450, i32* %2431, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2446)
  br label %2451

2451:                                             ; preds = %2435, %2444
  %2452 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2453 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2452, i64 2
  %2454 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2453, align 8
  %2455 = call zeroext i1 %2454(%"class.ots::OTSStream"* %1, i8* nonnull %2412, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2412)
  br i1 %2455, label %2456, label %3081

2456:                                             ; preds = %2451, %2332
  br i1 %188, label %2457, label %2580

2457:                                             ; preds = %2456
  %2458 = bitcast i16* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2458)
  store i16 256, i16* %38, align 2
  %2459 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2460 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2459, i64 4
  %2461 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2460, align 8
  %2462 = call i64 %2461(%"class.ots::OTSStream"* %1) #9
  %2463 = and i64 %2462, 3
  %2464 = icmp eq i64 %2463, 0
  br i1 %2464, label %2465, label %2468

2465:                                             ; preds = %2457
  %2466 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2467 = load i32, i32* %2466, align 8
  br label %2480

2468:                                             ; preds = %2457
  %2469 = sub nuw nsw i64 4, %2463
  %2470 = icmp ult i64 %2469, 2
  %2471 = select i1 %2470, i64 %2469, i64 2
  %2472 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2472) #9
  store i32 0, i32* %36, align 4
  %2473 = getelementptr inbounds i8, i8* %2472, i64 %2463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2473, i8* nonnull align 2 %2458, i64 %2471, i1 false) #9
  %2474 = load i32, i32* %36, align 4
  %2475 = call i32 @llvm.bswap.i32(i32 %2474) #9
  %2476 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2477 = load i32, i32* %2476, align 8
  %2478 = add i32 %2477, %2475
  store i32 %2478, i32* %2476, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2472) #9
  %2479 = icmp eq i64 %2463, 3
  br i1 %2479, label %2480, label %2490

2480:                                             ; preds = %2468, %2465
  %2481 = phi i32 [ %2478, %2468 ], [ %2467, %2465 ]
  %2482 = phi i64 [ %2471, %2468 ], [ 0, %2465 ]
  %2483 = phi i64 [ 1, %2468 ], [ 2, %2465 ]
  %2484 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2484)
  store i32 0, i32* %37, align 4
  %2485 = getelementptr inbounds i8, i8* %2458, i64 %2482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2484, i8* align 1 %2485, i64 %2483, i1 false) #9
  %2486 = load i32, i32* %37, align 4
  %2487 = call i32 @llvm.bswap.i32(i32 %2486) #9
  %2488 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2489 = add i32 %2487, %2481
  store i32 %2489, i32* %2488, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2484)
  br label %2490

2490:                                             ; preds = %2468, %2480
  %2491 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2492 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2491, i64 2
  %2493 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2492, align 8
  %2494 = call zeroext i1 %2493(%"class.ots::OTSStream"* %1, i8* nonnull %2458, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2458)
  br i1 %2494, label %2495, label %3081

2495:                                             ; preds = %2490
  %2496 = bitcast i16* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2496)
  store i16 0, i16* %35, align 2
  %2497 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2498 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2497, i64 4
  %2499 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2498, align 8
  %2500 = call i64 %2499(%"class.ots::OTSStream"* %1) #9
  %2501 = and i64 %2500, 3
  %2502 = icmp eq i64 %2501, 0
  br i1 %2502, label %2503, label %2506

2503:                                             ; preds = %2495
  %2504 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2505 = load i32, i32* %2504, align 8
  br label %2518

2506:                                             ; preds = %2495
  %2507 = sub nuw nsw i64 4, %2501
  %2508 = icmp ult i64 %2507, 2
  %2509 = select i1 %2508, i64 %2507, i64 2
  %2510 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2510) #9
  store i32 0, i32* %33, align 4
  %2511 = getelementptr inbounds i8, i8* %2510, i64 %2501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2511, i8* nonnull align 2 %2496, i64 %2509, i1 false) #9
  %2512 = load i32, i32* %33, align 4
  %2513 = call i32 @llvm.bswap.i32(i32 %2512) #9
  %2514 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2515 = load i32, i32* %2514, align 8
  %2516 = add i32 %2515, %2513
  store i32 %2516, i32* %2514, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2510) #9
  %2517 = icmp eq i64 %2501, 3
  br i1 %2517, label %2518, label %2528

2518:                                             ; preds = %2506, %2503
  %2519 = phi i32 [ %2516, %2506 ], [ %2505, %2503 ]
  %2520 = phi i64 [ %2509, %2506 ], [ 0, %2503 ]
  %2521 = phi i64 [ 1, %2506 ], [ 2, %2503 ]
  %2522 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2522)
  store i32 0, i32* %34, align 4
  %2523 = getelementptr inbounds i8, i8* %2496, i64 %2520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2522, i8* align 1 %2523, i64 %2521, i1 false) #9
  %2524 = load i32, i32* %34, align 4
  %2525 = call i32 @llvm.bswap.i32(i32 %2524) #9
  %2526 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2527 = add i32 %2525, %2519
  store i32 %2527, i32* %2526, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2522)
  br label %2528

2528:                                             ; preds = %2506, %2518
  %2529 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2530 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2529, i64 2
  %2531 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2530, align 8
  %2532 = call zeroext i1 %2531(%"class.ots::OTSStream"* %1, i8* nonnull %2496, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2496)
  br i1 %2532, label %2533, label %3081

2533:                                             ; preds = %2528
  %2534 = sub nsw i64 %1028, %231
  %2535 = trunc i64 %2534 to i32
  %2536 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2536)
  %2537 = call i32 @llvm.bswap.i32(i32 %2535) #9
  store i32 %2537, i32* %32, align 4
  %2538 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2539 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2538, i64 4
  %2540 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2539, align 8
  %2541 = call i64 %2540(%"class.ots::OTSStream"* %1) #9
  %2542 = and i64 %2541, 3
  %2543 = icmp eq i64 %2542, 0
  br i1 %2543, label %2544, label %2547

2544:                                             ; preds = %2533
  %2545 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2546 = load i32, i32* %2545, align 8
  br label %2559

2547:                                             ; preds = %2533
  %2548 = sub nuw nsw i64 4, %2542
  %2549 = icmp ult i64 %2548, 4
  %2550 = select i1 %2549, i64 %2548, i64 4
  %2551 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2551) #9
  store i32 0, i32* %30, align 4
  %2552 = getelementptr inbounds i8, i8* %2551, i64 %2542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2552, i8* nonnull align 4 %2536, i64 %2550, i1 false) #9
  %2553 = load i32, i32* %30, align 4
  %2554 = call i32 @llvm.bswap.i32(i32 %2553) #9
  %2555 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2556 = load i32, i32* %2555, align 8
  %2557 = add i32 %2556, %2554
  store i32 %2557, i32* %2555, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2551) #9
  %2558 = icmp eq i64 %2550, 0
  br i1 %2558, label %2559, label %2568

2559:                                             ; preds = %2547, %2544
  %2560 = phi i32 [ %2557, %2547 ], [ %2546, %2544 ]
  %2561 = phi i64 [ %2548, %2547 ], [ 0, %2544 ]
  %2562 = getelementptr inbounds i8, i8* %2536, i64 %2561
  %2563 = bitcast i8* %2562 to i32*
  %2564 = load i32, i32* %2563, align 1
  %2565 = call i32 @llvm.bswap.i32(i32 %2564) #9
  %2566 = add i32 %2565, %2560
  %2567 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2566, i32* %2567, align 8
  br label %2575

2568:                                             ; preds = %2547
  %2569 = sub nuw nsw i64 4, %2550
  %2570 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2570)
  store i32 0, i32* %31, align 4
  %2571 = getelementptr inbounds i8, i8* %2536, i64 %2548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2570, i8* align 1 %2571, i64 %2569, i1 false) #9
  %2572 = load i32, i32* %31, align 4
  %2573 = call i32 @llvm.bswap.i32(i32 %2572) #9
  %2574 = add i32 %2573, %2557
  store i32 %2574, i32* %2555, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2570)
  br label %2575

2575:                                             ; preds = %2559, %2568
  %2576 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2577 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2576, i64 2
  %2578 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2577, align 8
  %2579 = call zeroext i1 %2578(%"class.ots::OTSStream"* %1, i8* nonnull %2536, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2536)
  br i1 %2579, label %2580, label %3081

2580:                                             ; preds = %2575, %2456
  br i1 %191, label %2581, label %2704

2581:                                             ; preds = %2580
  %2582 = bitcast i16* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2582)
  store i16 768, i16* %29, align 2
  %2583 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2584 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2583, i64 4
  %2585 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2584, align 8
  %2586 = call i64 %2585(%"class.ots::OTSStream"* %1) #9
  %2587 = and i64 %2586, 3
  %2588 = icmp eq i64 %2587, 0
  br i1 %2588, label %2589, label %2592

2589:                                             ; preds = %2581
  %2590 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2591 = load i32, i32* %2590, align 8
  br label %2604

2592:                                             ; preds = %2581
  %2593 = sub nuw nsw i64 4, %2587
  %2594 = icmp ult i64 %2593, 2
  %2595 = select i1 %2594, i64 %2593, i64 2
  %2596 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2596) #9
  store i32 0, i32* %27, align 4
  %2597 = getelementptr inbounds i8, i8* %2596, i64 %2587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2597, i8* nonnull align 2 %2582, i64 %2595, i1 false) #9
  %2598 = load i32, i32* %27, align 4
  %2599 = call i32 @llvm.bswap.i32(i32 %2598) #9
  %2600 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2601 = load i32, i32* %2600, align 8
  %2602 = add i32 %2601, %2599
  store i32 %2602, i32* %2600, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2596) #9
  %2603 = icmp eq i64 %2587, 3
  br i1 %2603, label %2604, label %2614

2604:                                             ; preds = %2592, %2589
  %2605 = phi i32 [ %2602, %2592 ], [ %2591, %2589 ]
  %2606 = phi i64 [ %2595, %2592 ], [ 0, %2589 ]
  %2607 = phi i64 [ 1, %2592 ], [ 2, %2589 ]
  %2608 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2608)
  store i32 0, i32* %28, align 4
  %2609 = getelementptr inbounds i8, i8* %2582, i64 %2606
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2608, i8* align 1 %2609, i64 %2607, i1 false) #9
  %2610 = load i32, i32* %28, align 4
  %2611 = call i32 @llvm.bswap.i32(i32 %2610) #9
  %2612 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2613 = add i32 %2611, %2605
  store i32 %2613, i32* %2612, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2608)
  br label %2614

2614:                                             ; preds = %2592, %2604
  %2615 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2616 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2615, i64 2
  %2617 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2616, align 8
  %2618 = call zeroext i1 %2617(%"class.ots::OTSStream"* %1, i8* nonnull %2582, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2582)
  br i1 %2618, label %2619, label %3081

2619:                                             ; preds = %2614
  %2620 = bitcast i16* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2620)
  store i16 0, i16* %26, align 2
  %2621 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2622 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2621, i64 4
  %2623 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2622, align 8
  %2624 = call i64 %2623(%"class.ots::OTSStream"* %1) #9
  %2625 = and i64 %2624, 3
  %2626 = icmp eq i64 %2625, 0
  br i1 %2626, label %2627, label %2630

2627:                                             ; preds = %2619
  %2628 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2629 = load i32, i32* %2628, align 8
  br label %2642

2630:                                             ; preds = %2619
  %2631 = sub nuw nsw i64 4, %2625
  %2632 = icmp ult i64 %2631, 2
  %2633 = select i1 %2632, i64 %2631, i64 2
  %2634 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2634) #9
  store i32 0, i32* %24, align 4
  %2635 = getelementptr inbounds i8, i8* %2634, i64 %2625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2635, i8* nonnull align 2 %2620, i64 %2633, i1 false) #9
  %2636 = load i32, i32* %24, align 4
  %2637 = call i32 @llvm.bswap.i32(i32 %2636) #9
  %2638 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2639 = load i32, i32* %2638, align 8
  %2640 = add i32 %2639, %2637
  store i32 %2640, i32* %2638, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2634) #9
  %2641 = icmp eq i64 %2625, 3
  br i1 %2641, label %2642, label %2652

2642:                                             ; preds = %2630, %2627
  %2643 = phi i32 [ %2640, %2630 ], [ %2629, %2627 ]
  %2644 = phi i64 [ %2633, %2630 ], [ 0, %2627 ]
  %2645 = phi i64 [ 1, %2630 ], [ 2, %2627 ]
  %2646 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2646)
  store i32 0, i32* %25, align 4
  %2647 = getelementptr inbounds i8, i8* %2620, i64 %2644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2646, i8* align 1 %2647, i64 %2645, i1 false) #9
  %2648 = load i32, i32* %25, align 4
  %2649 = call i32 @llvm.bswap.i32(i32 %2648) #9
  %2650 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2651 = add i32 %2649, %2643
  store i32 %2651, i32* %2650, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2646)
  br label %2652

2652:                                             ; preds = %2630, %2642
  %2653 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2654 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2653, i64 2
  %2655 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2654, align 8
  %2656 = call zeroext i1 %2655(%"class.ots::OTSStream"* %1, i8* nonnull %2620, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2620)
  br i1 %2656, label %2657, label %3081

2657:                                             ; preds = %2652
  %2658 = sub nsw i64 %1246, %231
  %2659 = trunc i64 %2658 to i32
  %2660 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2660)
  %2661 = call i32 @llvm.bswap.i32(i32 %2659) #9
  store i32 %2661, i32* %23, align 4
  %2662 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2663 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2662, i64 4
  %2664 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2663, align 8
  %2665 = call i64 %2664(%"class.ots::OTSStream"* %1) #9
  %2666 = and i64 %2665, 3
  %2667 = icmp eq i64 %2666, 0
  br i1 %2667, label %2668, label %2671

2668:                                             ; preds = %2657
  %2669 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2670 = load i32, i32* %2669, align 8
  br label %2683

2671:                                             ; preds = %2657
  %2672 = sub nuw nsw i64 4, %2666
  %2673 = icmp ult i64 %2672, 4
  %2674 = select i1 %2673, i64 %2672, i64 4
  %2675 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2675) #9
  store i32 0, i32* %21, align 4
  %2676 = getelementptr inbounds i8, i8* %2675, i64 %2666
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2676, i8* nonnull align 4 %2660, i64 %2674, i1 false) #9
  %2677 = load i32, i32* %21, align 4
  %2678 = call i32 @llvm.bswap.i32(i32 %2677) #9
  %2679 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2680 = load i32, i32* %2679, align 8
  %2681 = add i32 %2680, %2678
  store i32 %2681, i32* %2679, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2675) #9
  %2682 = icmp eq i64 %2674, 0
  br i1 %2682, label %2683, label %2692

2683:                                             ; preds = %2671, %2668
  %2684 = phi i32 [ %2681, %2671 ], [ %2670, %2668 ]
  %2685 = phi i64 [ %2672, %2671 ], [ 0, %2668 ]
  %2686 = getelementptr inbounds i8, i8* %2660, i64 %2685
  %2687 = bitcast i8* %2686 to i32*
  %2688 = load i32, i32* %2687, align 1
  %2689 = call i32 @llvm.bswap.i32(i32 %2688) #9
  %2690 = add i32 %2689, %2684
  %2691 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2690, i32* %2691, align 8
  br label %2699

2692:                                             ; preds = %2671
  %2693 = sub nuw nsw i64 4, %2674
  %2694 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2694)
  store i32 0, i32* %22, align 4
  %2695 = getelementptr inbounds i8, i8* %2660, i64 %2672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2694, i8* align 1 %2695, i64 %2693, i1 false) #9
  %2696 = load i32, i32* %22, align 4
  %2697 = call i32 @llvm.bswap.i32(i32 %2696) #9
  %2698 = add i32 %2697, %2681
  store i32 %2698, i32* %2679, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2694)
  br label %2699

2699:                                             ; preds = %2683, %2692
  %2700 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2701 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2700, i64 2
  %2702 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2701, align 8
  %2703 = call zeroext i1 %2702(%"class.ots::OTSStream"* %1, i8* nonnull %2660, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2660)
  br i1 %2703, label %2704, label %3081

2704:                                             ; preds = %2699, %2580
  br i1 %197, label %2705, label %2828

2705:                                             ; preds = %2704
  %2706 = bitcast i16* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2706)
  store i16 768, i16* %20, align 2
  %2707 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2708 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2707, i64 4
  %2709 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2708, align 8
  %2710 = call i64 %2709(%"class.ots::OTSStream"* %1) #9
  %2711 = and i64 %2710, 3
  %2712 = icmp eq i64 %2711, 0
  br i1 %2712, label %2713, label %2716

2713:                                             ; preds = %2705
  %2714 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2715 = load i32, i32* %2714, align 8
  br label %2728

2716:                                             ; preds = %2705
  %2717 = sub nuw nsw i64 4, %2711
  %2718 = icmp ult i64 %2717, 2
  %2719 = select i1 %2718, i64 %2717, i64 2
  %2720 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2720) #9
  store i32 0, i32* %18, align 4
  %2721 = getelementptr inbounds i8, i8* %2720, i64 %2711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2721, i8* nonnull align 2 %2706, i64 %2719, i1 false) #9
  %2722 = load i32, i32* %18, align 4
  %2723 = call i32 @llvm.bswap.i32(i32 %2722) #9
  %2724 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2725 = load i32, i32* %2724, align 8
  %2726 = add i32 %2725, %2723
  store i32 %2726, i32* %2724, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2720) #9
  %2727 = icmp eq i64 %2711, 3
  br i1 %2727, label %2728, label %2738

2728:                                             ; preds = %2716, %2713
  %2729 = phi i32 [ %2726, %2716 ], [ %2715, %2713 ]
  %2730 = phi i64 [ %2719, %2716 ], [ 0, %2713 ]
  %2731 = phi i64 [ 1, %2716 ], [ 2, %2713 ]
  %2732 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2732)
  store i32 0, i32* %19, align 4
  %2733 = getelementptr inbounds i8, i8* %2706, i64 %2730
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2732, i8* align 1 %2733, i64 %2731, i1 false) #9
  %2734 = load i32, i32* %19, align 4
  %2735 = call i32 @llvm.bswap.i32(i32 %2734) #9
  %2736 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2737 = add i32 %2735, %2729
  store i32 %2737, i32* %2736, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2732)
  br label %2738

2738:                                             ; preds = %2716, %2728
  %2739 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2740 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2739, i64 2
  %2741 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2740, align 8
  %2742 = call zeroext i1 %2741(%"class.ots::OTSStream"* %1, i8* nonnull %2706, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2706)
  br i1 %2742, label %2743, label %3081

2743:                                             ; preds = %2738
  %2744 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2744)
  store i16 256, i16* %17, align 2
  %2745 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2746 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2745, i64 4
  %2747 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2746, align 8
  %2748 = call i64 %2747(%"class.ots::OTSStream"* %1) #9
  %2749 = and i64 %2748, 3
  %2750 = icmp eq i64 %2749, 0
  br i1 %2750, label %2751, label %2754

2751:                                             ; preds = %2743
  %2752 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2753 = load i32, i32* %2752, align 8
  br label %2766

2754:                                             ; preds = %2743
  %2755 = sub nuw nsw i64 4, %2749
  %2756 = icmp ult i64 %2755, 2
  %2757 = select i1 %2756, i64 %2755, i64 2
  %2758 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2758) #9
  store i32 0, i32* %15, align 4
  %2759 = getelementptr inbounds i8, i8* %2758, i64 %2749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2759, i8* nonnull align 2 %2744, i64 %2757, i1 false) #9
  %2760 = load i32, i32* %15, align 4
  %2761 = call i32 @llvm.bswap.i32(i32 %2760) #9
  %2762 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2763 = load i32, i32* %2762, align 8
  %2764 = add i32 %2763, %2761
  store i32 %2764, i32* %2762, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2758) #9
  %2765 = icmp eq i64 %2749, 3
  br i1 %2765, label %2766, label %2776

2766:                                             ; preds = %2754, %2751
  %2767 = phi i32 [ %2764, %2754 ], [ %2753, %2751 ]
  %2768 = phi i64 [ %2757, %2754 ], [ 0, %2751 ]
  %2769 = phi i64 [ 1, %2754 ], [ 2, %2751 ]
  %2770 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2770)
  store i32 0, i32* %16, align 4
  %2771 = getelementptr inbounds i8, i8* %2744, i64 %2768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2770, i8* align 1 %2771, i64 %2769, i1 false) #9
  %2772 = load i32, i32* %16, align 4
  %2773 = call i32 @llvm.bswap.i32(i32 %2772) #9
  %2774 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2775 = add i32 %2773, %2767
  store i32 %2775, i32* %2774, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2770)
  br label %2776

2776:                                             ; preds = %2754, %2766
  %2777 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2778 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2777, i64 2
  %2779 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2778, align 8
  %2780 = call zeroext i1 %2779(%"class.ots::OTSStream"* %1, i8* nonnull %2744, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2744)
  br i1 %2780, label %2781, label %3081

2781:                                             ; preds = %2776
  %2782 = sub nsw i64 %1357, %231
  %2783 = trunc i64 %2782 to i32
  %2784 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2784)
  %2785 = call i32 @llvm.bswap.i32(i32 %2783) #9
  store i32 %2785, i32* %14, align 4
  %2786 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2787 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2786, i64 4
  %2788 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2787, align 8
  %2789 = call i64 %2788(%"class.ots::OTSStream"* %1) #9
  %2790 = and i64 %2789, 3
  %2791 = icmp eq i64 %2790, 0
  br i1 %2791, label %2792, label %2795

2792:                                             ; preds = %2781
  %2793 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2794 = load i32, i32* %2793, align 8
  br label %2807

2795:                                             ; preds = %2781
  %2796 = sub nuw nsw i64 4, %2790
  %2797 = icmp ult i64 %2796, 4
  %2798 = select i1 %2797, i64 %2796, i64 4
  %2799 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2799) #9
  store i32 0, i32* %12, align 4
  %2800 = getelementptr inbounds i8, i8* %2799, i64 %2790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2800, i8* nonnull align 4 %2784, i64 %2798, i1 false) #9
  %2801 = load i32, i32* %12, align 4
  %2802 = call i32 @llvm.bswap.i32(i32 %2801) #9
  %2803 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2804 = load i32, i32* %2803, align 8
  %2805 = add i32 %2804, %2802
  store i32 %2805, i32* %2803, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2799) #9
  %2806 = icmp eq i64 %2798, 0
  br i1 %2806, label %2807, label %2816

2807:                                             ; preds = %2795, %2792
  %2808 = phi i32 [ %2805, %2795 ], [ %2794, %2792 ]
  %2809 = phi i64 [ %2796, %2795 ], [ 0, %2792 ]
  %2810 = getelementptr inbounds i8, i8* %2784, i64 %2809
  %2811 = bitcast i8* %2810 to i32*
  %2812 = load i32, i32* %2811, align 1
  %2813 = call i32 @llvm.bswap.i32(i32 %2812) #9
  %2814 = add i32 %2813, %2808
  %2815 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2814, i32* %2815, align 8
  br label %2823

2816:                                             ; preds = %2795
  %2817 = sub nuw nsw i64 4, %2798
  %2818 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2818)
  store i32 0, i32* %13, align 4
  %2819 = getelementptr inbounds i8, i8* %2784, i64 %2796
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2818, i8* align 1 %2819, i64 %2817, i1 false) #9
  %2820 = load i32, i32* %13, align 4
  %2821 = call i32 @llvm.bswap.i32(i32 %2820) #9
  %2822 = add i32 %2821, %2805
  store i32 %2822, i32* %2803, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2818)
  br label %2823

2823:                                             ; preds = %2807, %2816
  %2824 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2825 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2824, i64 2
  %2826 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2825, align 8
  %2827 = call zeroext i1 %2826(%"class.ots::OTSStream"* %1, i8* nonnull %2784, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2784)
  br i1 %2827, label %2828, label %3081

2828:                                             ; preds = %2823, %2704
  br i1 %205, label %2829, label %2952

2829:                                             ; preds = %2828
  %2830 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2830)
  store i16 768, i16* %11, align 2
  %2831 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2832 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2831, i64 4
  %2833 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2832, align 8
  %2834 = call i64 %2833(%"class.ots::OTSStream"* %1) #9
  %2835 = and i64 %2834, 3
  %2836 = icmp eq i64 %2835, 0
  br i1 %2836, label %2837, label %2840

2837:                                             ; preds = %2829
  %2838 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2839 = load i32, i32* %2838, align 8
  br label %2852

2840:                                             ; preds = %2829
  %2841 = sub nuw nsw i64 4, %2835
  %2842 = icmp ult i64 %2841, 2
  %2843 = select i1 %2842, i64 %2841, i64 2
  %2844 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2844) #9
  store i32 0, i32* %9, align 4
  %2845 = getelementptr inbounds i8, i8* %2844, i64 %2835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2845, i8* nonnull align 2 %2830, i64 %2843, i1 false) #9
  %2846 = load i32, i32* %9, align 4
  %2847 = call i32 @llvm.bswap.i32(i32 %2846) #9
  %2848 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2849 = load i32, i32* %2848, align 8
  %2850 = add i32 %2849, %2847
  store i32 %2850, i32* %2848, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2844) #9
  %2851 = icmp eq i64 %2835, 3
  br i1 %2851, label %2852, label %2862

2852:                                             ; preds = %2840, %2837
  %2853 = phi i32 [ %2850, %2840 ], [ %2839, %2837 ]
  %2854 = phi i64 [ %2843, %2840 ], [ 0, %2837 ]
  %2855 = phi i64 [ 1, %2840 ], [ 2, %2837 ]
  %2856 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2856)
  store i32 0, i32* %10, align 4
  %2857 = getelementptr inbounds i8, i8* %2830, i64 %2854
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2856, i8* align 1 %2857, i64 %2855, i1 false) #9
  %2858 = load i32, i32* %10, align 4
  %2859 = call i32 @llvm.bswap.i32(i32 %2858) #9
  %2860 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2861 = add i32 %2859, %2853
  store i32 %2861, i32* %2860, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2856)
  br label %2862

2862:                                             ; preds = %2840, %2852
  %2863 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2864 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2863, i64 2
  %2865 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2864, align 8
  %2866 = call zeroext i1 %2865(%"class.ots::OTSStream"* %1, i8* nonnull %2830, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2830)
  br i1 %2866, label %2867, label %3081

2867:                                             ; preds = %2862
  %2868 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2868)
  store i16 2560, i16* %8, align 2
  %2869 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2870 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2869, i64 4
  %2871 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2870, align 8
  %2872 = call i64 %2871(%"class.ots::OTSStream"* %1) #9
  %2873 = and i64 %2872, 3
  %2874 = icmp eq i64 %2873, 0
  br i1 %2874, label %2875, label %2878

2875:                                             ; preds = %2867
  %2876 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2877 = load i32, i32* %2876, align 8
  br label %2890

2878:                                             ; preds = %2867
  %2879 = sub nuw nsw i64 4, %2873
  %2880 = icmp ult i64 %2879, 2
  %2881 = select i1 %2880, i64 %2879, i64 2
  %2882 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2882) #9
  store i32 0, i32* %6, align 4
  %2883 = getelementptr inbounds i8, i8* %2882, i64 %2873
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2883, i8* nonnull align 2 %2868, i64 %2881, i1 false) #9
  %2884 = load i32, i32* %6, align 4
  %2885 = call i32 @llvm.bswap.i32(i32 %2884) #9
  %2886 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2887 = load i32, i32* %2886, align 8
  %2888 = add i32 %2887, %2885
  store i32 %2888, i32* %2886, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2882) #9
  %2889 = icmp eq i64 %2873, 3
  br i1 %2889, label %2890, label %2900

2890:                                             ; preds = %2878, %2875
  %2891 = phi i32 [ %2888, %2878 ], [ %2877, %2875 ]
  %2892 = phi i64 [ %2881, %2878 ], [ 0, %2875 ]
  %2893 = phi i64 [ 1, %2878 ], [ 2, %2875 ]
  %2894 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2894)
  store i32 0, i32* %7, align 4
  %2895 = getelementptr inbounds i8, i8* %2868, i64 %2892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2894, i8* align 1 %2895, i64 %2893, i1 false) #9
  %2896 = load i32, i32* %7, align 4
  %2897 = call i32 @llvm.bswap.i32(i32 %2896) #9
  %2898 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2899 = add i32 %2897, %2891
  store i32 %2899, i32* %2898, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2894)
  br label %2900

2900:                                             ; preds = %2878, %2890
  %2901 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2902 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2901, i64 2
  %2903 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2902, align 8
  %2904 = call zeroext i1 %2903(%"class.ots::OTSStream"* %1, i8* nonnull %2868, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2868)
  br i1 %2904, label %2905, label %3081

2905:                                             ; preds = %2900
  %2906 = sub nsw i64 %1469, %231
  %2907 = trunc i64 %2906 to i32
  %2908 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2908)
  %2909 = call i32 @llvm.bswap.i32(i32 %2907) #9
  store i32 %2909, i32* %5, align 4
  %2910 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2911 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2910, i64 4
  %2912 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2911, align 8
  %2913 = call i64 %2912(%"class.ots::OTSStream"* %1) #9
  %2914 = and i64 %2913, 3
  %2915 = icmp eq i64 %2914, 0
  br i1 %2915, label %2916, label %2919

2916:                                             ; preds = %2905
  %2917 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2918 = load i32, i32* %2917, align 8
  br label %2931

2919:                                             ; preds = %2905
  %2920 = sub nuw nsw i64 4, %2914
  %2921 = icmp ult i64 %2920, 4
  %2922 = select i1 %2921, i64 %2920, i64 4
  %2923 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2923) #9
  store i32 0, i32* %3, align 4
  %2924 = getelementptr inbounds i8, i8* %2923, i64 %2914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2924, i8* nonnull align 4 %2908, i64 %2922, i1 false) #9
  %2925 = load i32, i32* %3, align 4
  %2926 = call i32 @llvm.bswap.i32(i32 %2925) #9
  %2927 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2928 = load i32, i32* %2927, align 8
  %2929 = add i32 %2928, %2926
  store i32 %2929, i32* %2927, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2923) #9
  %2930 = icmp eq i64 %2922, 0
  br i1 %2930, label %2931, label %2940

2931:                                             ; preds = %2919, %2916
  %2932 = phi i32 [ %2929, %2919 ], [ %2918, %2916 ]
  %2933 = phi i64 [ %2920, %2919 ], [ 0, %2916 ]
  %2934 = getelementptr inbounds i8, i8* %2908, i64 %2933
  %2935 = bitcast i8* %2934 to i32*
  %2936 = load i32, i32* %2935, align 1
  %2937 = call i32 @llvm.bswap.i32(i32 %2936) #9
  %2938 = add i32 %2937, %2932
  %2939 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %2938, i32* %2939, align 8
  br label %2947

2940:                                             ; preds = %2919
  %2941 = sub nuw nsw i64 4, %2922
  %2942 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2942)
  store i32 0, i32* %4, align 4
  %2943 = getelementptr inbounds i8, i8* %2908, i64 %2920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2942, i8* align 1 %2943, i64 %2941, i1 false) #9
  %2944 = load i32, i32* %4, align 4
  %2945 = call i32 @llvm.bswap.i32(i32 %2944) #9
  %2946 = add i32 %2945, %2929
  store i32 %2946, i32* %2927, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2942)
  br label %2947

2947:                                             ; preds = %2931, %2940
  %2948 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2949 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2948, i64 2
  %2950 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2949, align 8
  %2951 = call zeroext i1 %2950(%"class.ots::OTSStream"* %1, i8* nonnull %2908, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2908)
  br i1 %2951, label %2952, label %3081

2952:                                             ; preds = %2947, %2828
  br i1 %213, label %2953, label %3076

2953:                                             ; preds = %2952
  %2954 = bitcast i16* %131 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2954)
  store i16 768, i16* %131, align 2
  %2955 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2956 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2955, i64 4
  %2957 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2956, align 8
  %2958 = call i64 %2957(%"class.ots::OTSStream"* %1) #9
  %2959 = and i64 %2958, 3
  %2960 = icmp eq i64 %2959, 0
  br i1 %2960, label %2961, label %2964

2961:                                             ; preds = %2953
  %2962 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2963 = load i32, i32* %2962, align 8
  br label %2976

2964:                                             ; preds = %2953
  %2965 = sub nuw nsw i64 4, %2959
  %2966 = icmp ult i64 %2965, 2
  %2967 = select i1 %2966, i64 %2965, i64 2
  %2968 = bitcast i32* %129 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2968) #9
  store i32 0, i32* %129, align 4
  %2969 = getelementptr inbounds i8, i8* %2968, i64 %2959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2969, i8* nonnull align 2 %2954, i64 %2967, i1 false) #9
  %2970 = load i32, i32* %129, align 4
  %2971 = call i32 @llvm.bswap.i32(i32 %2970) #9
  %2972 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2973 = load i32, i32* %2972, align 8
  %2974 = add i32 %2973, %2971
  store i32 %2974, i32* %2972, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2968) #9
  %2975 = icmp eq i64 %2959, 3
  br i1 %2975, label %2976, label %2986

2976:                                             ; preds = %2964, %2961
  %2977 = phi i32 [ %2974, %2964 ], [ %2963, %2961 ]
  %2978 = phi i64 [ %2967, %2964 ], [ 0, %2961 ]
  %2979 = phi i64 [ 1, %2964 ], [ 2, %2961 ]
  %2980 = bitcast i32* %130 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2980)
  store i32 0, i32* %130, align 4
  %2981 = getelementptr inbounds i8, i8* %2954, i64 %2978
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %2980, i8* align 1 %2981, i64 %2979, i1 false) #9
  %2982 = load i32, i32* %130, align 4
  %2983 = call i32 @llvm.bswap.i32(i32 %2982) #9
  %2984 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %2985 = add i32 %2983, %2977
  store i32 %2985, i32* %2984, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2980)
  br label %2986

2986:                                             ; preds = %2964, %2976
  %2987 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %2988 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2987, i64 2
  %2989 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %2988, align 8
  %2990 = call zeroext i1 %2989(%"class.ots::OTSStream"* %1, i8* nonnull %2954, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2954)
  br i1 %2990, label %2991, label %3081

2991:                                             ; preds = %2986
  %2992 = bitcast i16* %168 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %2992)
  store i16 2560, i16* %168, align 2
  %2993 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %2994 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2993, i64 4
  %2995 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %2994, align 8
  %2996 = call i64 %2995(%"class.ots::OTSStream"* %1) #9
  %2997 = and i64 %2996, 3
  %2998 = icmp eq i64 %2997, 0
  br i1 %2998, label %2999, label %3002

2999:                                             ; preds = %2991
  %3000 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %3001 = load i32, i32* %3000, align 8
  br label %3014

3002:                                             ; preds = %2991
  %3003 = sub nuw nsw i64 4, %2997
  %3004 = icmp ult i64 %3003, 2
  %3005 = select i1 %3004, i64 %3003, i64 2
  %3006 = bitcast i32* %166 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3006) #9
  store i32 0, i32* %166, align 4
  %3007 = getelementptr inbounds i8, i8* %3006, i64 %2997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3007, i8* nonnull align 2 %2992, i64 %3005, i1 false) #9
  %3008 = load i32, i32* %166, align 4
  %3009 = call i32 @llvm.bswap.i32(i32 %3008) #9
  %3010 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %3011 = load i32, i32* %3010, align 8
  %3012 = add i32 %3011, %3009
  store i32 %3012, i32* %3010, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3006) #9
  %3013 = icmp eq i64 %2997, 3
  br i1 %3013, label %3014, label %3024

3014:                                             ; preds = %3002, %2999
  %3015 = phi i32 [ %3012, %3002 ], [ %3001, %2999 ]
  %3016 = phi i64 [ %3005, %3002 ], [ 0, %2999 ]
  %3017 = phi i64 [ 1, %3002 ], [ 2, %2999 ]
  %3018 = bitcast i32* %167 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3018)
  store i32 0, i32* %167, align 4
  %3019 = getelementptr inbounds i8, i8* %2992, i64 %3016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3018, i8* align 1 %3019, i64 %3017, i1 false) #9
  %3020 = load i32, i32* %167, align 4
  %3021 = call i32 @llvm.bswap.i32(i32 %3020) #9
  %3022 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %3023 = add i32 %3021, %3015
  store i32 %3023, i32* %3022, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3018)
  br label %3024

3024:                                             ; preds = %3002, %3014
  %3025 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %3026 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %3025, i64 2
  %3027 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %3026, align 8
  %3028 = call zeroext i1 %3027(%"class.ots::OTSStream"* %1, i8* nonnull %2992, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2992)
  br i1 %3028, label %3029, label %3081

3029:                                             ; preds = %3024
  %3030 = sub nsw i64 %1836, %231
  %3031 = trunc i64 %3030 to i32
  %3032 = bitcast i32* %171 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3032)
  %3033 = call i32 @llvm.bswap.i32(i32 %3031) #9
  store i32 %3033, i32* %171, align 4
  %3034 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %227, align 8
  %3035 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %3034, i64 4
  %3036 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %3035, align 8
  %3037 = call i64 %3036(%"class.ots::OTSStream"* %1) #9
  %3038 = and i64 %3037, 3
  %3039 = icmp eq i64 %3038, 0
  br i1 %3039, label %3040, label %3043

3040:                                             ; preds = %3029
  %3041 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %3042 = load i32, i32* %3041, align 8
  br label %3055

3043:                                             ; preds = %3029
  %3044 = sub nuw nsw i64 4, %3038
  %3045 = icmp ult i64 %3044, 4
  %3046 = select i1 %3045, i64 %3044, i64 4
  %3047 = bitcast i32* %169 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3047) #9
  store i32 0, i32* %169, align 4
  %3048 = getelementptr inbounds i8, i8* %3047, i64 %3038
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3048, i8* nonnull align 4 %3032, i64 %3046, i1 false) #9
  %3049 = load i32, i32* %169, align 4
  %3050 = call i32 @llvm.bswap.i32(i32 %3049) #9
  %3051 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %3052 = load i32, i32* %3051, align 8
  %3053 = add i32 %3052, %3050
  store i32 %3053, i32* %3051, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3047) #9
  %3054 = icmp eq i64 %3046, 0
  br i1 %3054, label %3055, label %3064

3055:                                             ; preds = %3043, %3040
  %3056 = phi i32 [ %3053, %3043 ], [ %3042, %3040 ]
  %3057 = phi i64 [ %3044, %3043 ], [ 0, %3040 ]
  %3058 = getelementptr inbounds i8, i8* %3032, i64 %3057
  %3059 = bitcast i8* %3058 to i32*
  %3060 = load i32, i32* %3059, align 1
  %3061 = call i32 @llvm.bswap.i32(i32 %3060) #9
  %3062 = add i32 %3061, %3056
  %3063 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %3062, i32* %3063, align 8
  br label %3071

3064:                                             ; preds = %3043
  %3065 = sub nuw nsw i64 4, %3046
  %3066 = bitcast i32* %170 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3066)
  store i32 0, i32* %170, align 4
  %3067 = getelementptr inbounds i8, i8* %3032, i64 %3044
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3066, i8* align 1 %3067, i64 %3065, i1 false) #9
  %3068 = load i32, i32* %170, align 4
  %3069 = call i32 @llvm.bswap.i32(i32 %3068) #9
  %3070 = add i32 %3069, %3053
  store i32 %3070, i32* %3051, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3066)
  br label %3071

3071:                                             ; preds = %3055, %3064
  %3072 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %274, align 8
  %3073 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %3072, i64 2
  %3074 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %3073, align 8
  %3075 = call zeroext i1 %3074(%"class.ots::OTSStream"* %1, i8* nonnull %3032, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3032)
  br i1 %3075, label %3076, label %3081

3076:                                             ; preds = %3071, %2952
  %3077 = load i1 (%"class.ots::OTSStream"*, i64)**, i1 (%"class.ots::OTSStream"*, i64)*** %325, align 8
  %3078 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %3077, i64 3
  %3079 = load i1 (%"class.ots::OTSStream"*, i64)*, i1 (%"class.ots::OTSStream"*, i64)** %3078, align 8
  %3080 = call zeroext i1 %3079(%"class.ots::OTSStream"* %1, i64 %2203) #9
  br label %3081

3081:                                             ; preds = %740, %698, %656, %884, %934, %752, %802, %847, %873, %979, %1015, %1742, %1784, %1826, %2109, %2151, %2193, %1358, %1247, %484, %532, %577, %335, %318, %1348, %1875, %1913, %1960, %2004, %2049, %2199, %2327, %2280, %2242, %2451, %2404, %2366, %2575, %2528, %2490, %2699, %2652, %2614, %2823, %2776, %2738, %2947, %2900, %2862, %3071, %3024, %2986, %3076, %1682, %1637, %1593, %1546, %1508, %1460, %1237, %1062, %1100, %1138, %436, %273, %313, %237
  %3082 = phi i1 [ %239, %237 ], [ false, %313 ], [ false, %273 ], [ false, %318 ], [ false, %436 ], [ false, %1138 ], [ false, %1100 ], [ false, %1062 ], [ false, %1237 ], [ false, %1348 ], [ false, %1460 ], [ false, %2199 ], [ false, %2327 ], [ false, %2280 ], [ false, %2242 ], [ false, %2451 ], [ false, %2404 ], [ false, %2366 ], [ false, %2575 ], [ false, %2528 ], [ false, %2490 ], [ false, %2699 ], [ false, %2652 ], [ false, %2614 ], [ false, %2823 ], [ false, %2776 ], [ false, %2738 ], [ false, %2947 ], [ false, %2900 ], [ false, %2862 ], [ false, %3071 ], [ false, %3024 ], [ false, %2986 ], [ %3080, %3076 ], [ false, %2049 ], [ false, %2004 ], [ false, %1960 ], [ false, %1913 ], [ false, %1875 ], [ false, %1682 ], [ false, %1637 ], [ false, %1593 ], [ false, %1546 ], [ false, %1508 ], [ false, %335 ], [ false, %577 ], [ false, %532 ], [ false, %484 ], [ false, %1247 ], [ false, %1358 ], [ false, %2193 ], [ false, %2151 ], [ false, %2109 ], [ false, %1826 ], [ false, %1784 ], [ false, %1742 ], [ false, %1015 ], [ false, %979 ], [ false, %873 ], [ false, %847 ], [ false, %802 ], [ false, %752 ], [ false, %934 ], [ false, %884 ], [ false, %656 ], [ false, %698 ], [ false, %740 ]
  ret i1 %3082
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeCMAPD2Ev(%"class.ots::OpenTypeCMAP"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeCMAPE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 11, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #10
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10, i32 0, i32 0
  %12 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %11, align 8
  %13 = icmp eq %"struct.ots::OpenTypeCMAPSubtableRange"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %12 to i64
  %16 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 10, i32 0, i32 1
  %17 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9, i32 0, i32 0
  %21 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %20, align 8
  %22 = icmp eq %"struct.ots::OpenTypeCMAPSubtableRange"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %21 to i64
  %25 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 9, i32 0, i32 1
  %26 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %29, i64 0, i32 0, i32 0
  %31 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %30, align 8
  %32 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %31, null
  br i1 %32, label %65, label %33

33:                                               ; preds = %28
  %34 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %31 to i8*
  %35 = getelementptr inbounds %"class.ots::OpenTypeCMAP", %"class.ots::OpenTypeCMAP"* %0, i64 0, i32 4, i32 0, i32 1
  %36 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %35, align 8
  %37 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %36, %31
  br i1 %37, label %63, label %38

38:                                               ; preds = %33, %58
  %39 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %40, %58 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %39, i64 -1
  %41 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %39, i64 -1, i32 4, i32 0, i32 0
  %42 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %41, align 8
  %43 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %38
  %45 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %42 to i64
  %46 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %39, i64 -1, i32 4, i32 0, i32 1
  %47 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %42 to i8*
  tail call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %44, %38
  %50 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %39, i64 -1, i32 3, i32 0, i32 0
  %51 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %50, align 8
  %52 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRange"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %51 to i64
  %55 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %39, i64 -1, i32 3, i32 0, i32 1
  %56 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %51 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %53, %49
  %59 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %40, %31
  br i1 %59, label %60, label %38

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector"* %29 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %33
  %64 = phi i8* [ %62, %60 ], [ %34, %33 ]
  store %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %31, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %35, align 8
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %28, %63
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeCMAPD0Ev(%"class.ots::OpenTypeCMAP"*) unnamed_addr #3 comdat align 2 {
  tail call void @_ZN3ots12OpenTypeCMAPD2Ev(%"class.ots::OpenTypeCMAP"* %0) #9
  %2 = bitcast %"class.ots::OpenTypeCMAP"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots25OpenTypeCMAPSubtableRangeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.43"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 12
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.ots::OpenTypeCMAPSubtableRange"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 12
  %25 = add i64 %23, 12
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %26, i1 false) #9
  %27 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.43"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 12
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 1537228672809129301
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.43"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #11
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 12
  %42 = icmp ult i64 %41, 768614336404564650
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 1537228672809129301, %39 ]
  %50 = mul i64 %49, 12
  %51 = tail call i8* @_Znwm(i64 %50) #10
  %52 = bitcast i8* %51 to %"struct.ots::OpenTypeCMAPSubtableRange"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.ots::OpenTypeCMAPSubtableRange"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %55, i64 %34
  %57 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"* %56 to i8*
  %58 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %56, i64 %1
  %60 = mul nsw i64 %1, 12
  %61 = add i64 %60, -12
  %62 = urem i64 %61, 12
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %58 to i64
  %66 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -12
  %73 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableRange", %"struct.ots::OpenTypeCMAPSubtableRange"* %56, i64 %72
  %74 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableRange"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"* %73 to i8*
  %78 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %71, i1 false) #9
  %79 = load %"struct.ots::OpenTypeCMAPSubtableRange"*, %"struct.ots::OpenTypeCMAPSubtableRange"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.ots::OpenTypeCMAPSubtableRange"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.ots::OpenTypeCMAPSubtableRange"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.ots::OpenTypeCMAPSubtableRange"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots28OpenTypeCMAPSubtableVSRecordENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 6
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.ots::OpenTypeCMAPSubtableVSRecord"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 64
  %25 = and i64 %24, -64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %191

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 6
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 288230376151711743
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 6
  %41 = icmp ult i64 %40, 144115188075855871
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 5
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 288230376151711743
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 288230376151711743, %38 ]
  %52 = shl i64 %51, 6
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %"struct.ots::OpenTypeCMAPSubtableVSRecord"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %57, i64 %33
  %59 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %58 to i64
  %60 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %58, i64 %1
  %62 = shl nsw i64 %1, 6
  %63 = add i64 %62, -64
  %64 = lshr exact i64 %63, 6
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 64, i1 false) #9
  %73 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %69, i64 1
  %74 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !10

77:                                               ; preds = %68
  %78 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 448
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 64, i1 false) #9
  %87 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 1
  %88 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 64, i1 false) #9
  %89 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 2
  %90 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 64, i1 false) #9
  %91 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 3
  %92 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 64, i1 false) #9
  %93 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 4
  %94 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 64, i1 false) #9
  %95 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 5
  %96 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 64, i1 false) #9
  %97 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 6
  %98 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 64, i1 false) #9
  %99 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 7
  %100 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 64, i1 false) #9
  %101 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %84, i64 8
  %102 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %101 to i64
  %103 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %60 to i64
  %106 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %108 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %107, align 8
  %109 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %6, align 8
  %110 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %109, %108
  br i1 %110, label %111, label %113

111:                                              ; preds = %104
  %112 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %108 to i64
  br label %159

113:                                              ; preds = %104, %113
  %114 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %116, %113 ], [ %58, %104 ]
  %115 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %117, %113 ], [ %109, %104 ]
  %116 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1
  %117 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1
  %118 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %116 to i8*
  %119 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 12, i1 false) #9
  %120 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1, i32 3
  %121 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1, i32 3
  %122 = bitcast %"class.std::__1::vector.24"* %120 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 24, i1 false) #9
  %123 = bitcast %"class.std::__1::vector.24"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.24"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1, i32 3, i32 0, i32 1
  %127 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1, i32 3, i32 0, i32 1
  %130 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %135 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"class.std::__1::vector.24"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 24, i1 false) #9
  %137 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1, i32 4
  %138 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1, i32 4
  %139 = bitcast %"class.std::__1::vector.31"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #9
  %140 = bitcast %"class.std::__1::vector.31"* %138 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector.31"* %137 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1, i32 4, i32 0, i32 1
  %144 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1, i32 4, i32 0, i32 1
  %147 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %115, i64 -1, i32 4, i32 0, i32 2, i32 0, i32 0
  %149 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %114, i64 -1, i32 4, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"class.std::__1::vector.31"* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #9
  %154 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %117, %108
  br i1 %154, label %155, label %113

155:                                              ; preds = %113
  %156 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %116 to i64
  %157 = load i64, i64* %30, align 8
  %158 = load %"struct.ots::OpenTypeCMAPSubtableVSRecord"*, %"struct.ots::OpenTypeCMAPSubtableVSRecord"** %6, align 8
  br label %159

159:                                              ; preds = %111, %155
  %160 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %108, %111 ], [ %158, %155 ]
  %161 = phi i64 [ %59, %111 ], [ %156, %155 ]
  %162 = phi i64 [ %112, %111 ], [ %157, %155 ]
  store i64 %161, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %163 = inttoptr i64 %162 to %"struct.ots::OpenTypeCMAPSubtableVSRecord"*
  %164 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %160, %163
  br i1 %164, label %187, label %165

165:                                              ; preds = %159, %185
  %166 = phi %"struct.ots::OpenTypeCMAPSubtableVSRecord"* [ %167, %185 ], [ %160, %159 ]
  %167 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %166, i64 -1
  %168 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %166, i64 -1, i32 4, i32 0, i32 0
  %169 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %168, align 8
  %170 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %165
  %172 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %169 to i64
  %173 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %166, i64 -1, i32 4, i32 0, i32 1
  %174 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %169 to i8*
  tail call void @_ZdlPv(i8* %175) #10
  br label %176

176:                                              ; preds = %171, %165
  %177 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %166, i64 -1, i32 3, i32 0, i32 0
  %178 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %177, align 8
  %179 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRange"* %178, null
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %178 to i64
  %182 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRecord", %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %166, i64 -1, i32 3, i32 0, i32 1
  %183 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %178 to i8*
  tail call void @_ZdlPv(i8* %184) #10
  br label %185

185:                                              ; preds = %180, %176
  %186 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRecord"* %167, %163
  br i1 %186, label %187, label %165

187:                                              ; preds = %185, %159
  %188 = icmp eq i64 %162, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = inttoptr i64 %162 to i8*
  tail call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %189, %187, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots27OpenTypeCMAPSubtableVSRangeENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.24"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.ots::OpenTypeCMAPSubtableVSRange"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.24"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.24"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %"struct.ots::OpenTypeCMAPSubtableVSRange"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.ots::OpenTypeCMAPSubtableVSRange"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %57, i64 %33
  %59 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %58 to i8*
  %60 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %60 to i64
  %64 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSRange", %"struct.ots::OpenTypeCMAPSubtableVSRange"* %58, i64 %71
  %73 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSRange"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %72 to i8*
  %77 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #9
  %78 = load %"struct.ots::OpenTypeCMAPSubtableVSRange"*, %"struct.ots::OpenTypeCMAPSubtableVSRange"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.ots::OpenTypeCMAPSubtableVSRange"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSRange"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSRange"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots29OpenTypeCMAPSubtableVSMappingENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.31"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.ots::OpenTypeCMAPSubtableVSMapping"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #9
  %26 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %"struct.ots::OpenTypeCMAPSubtableVSMapping"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.ots::OpenTypeCMAPSubtableVSMapping"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %57, i64 %33
  %59 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %58 to i8*
  %60 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %60 to i64
  %64 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.ots::OpenTypeCMAPSubtableVSMapping", %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %58, i64 %71
  %73 = ptrtoint %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %72 to i8*
  %77 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #9
  %78 = load %"struct.ots::OpenTypeCMAPSubtableVSMapping"*, %"struct.ots::OpenTypeCMAPSubtableVSMapping"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.ots::OpenTypeCMAPSubtableVSMapping"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.ots::OpenTypeCMAPSubtableVSMapping"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.71"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.71"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.71"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !11
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !11
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.115"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %367, %3
  %5 = phi %"struct.std::__1::pair"* [ %1, %3 ], [ %337, %367 ]
  %6 = phi %"struct.std::__1::pair"* [ %0, %3 ], [ %17, %367 ]
  %7 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -2
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %13 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  br label %14

14:                                               ; preds = %376, %4
  %15 = phi %"struct.std::__1::pair"* [ %6, %4 ], [ %377, %376 ]
  br label %16

16:                                               ; preds = %233, %14
  %17 = phi %"struct.std::__1::pair"* [ %15, %14 ], [ %202, %233 ]
  %18 = ptrtoint %"struct.std::__1::pair"* %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %55 [
    i64 0, label %380
    i64 1, label %380
    i64 2, label %21
    i64 3, label %40
    i64 4, label %44
    i64 5, label %49
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %23, %25
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = icmp ult i32 %25, %23
  br i1 %28, label %380, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %31 = load i8, i8* %30, align 4
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %33 = load i8, i8* %32, align 4
  %34 = icmp ult i8 %31, %33
  br i1 %34, label %35, label %380

35:                                               ; preds = %21, %29
  store i32 %23, i32* %24, align 4
  store i32 %25, i32* %22, align 4
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 1
  %38 = load i8, i8* %36, align 1
  %39 = load i8, i8* %37, align 1
  store i8 %39, i8* %36, align 1
  store i8 %38, i8* %37, align 1
  br label %380

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %43 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %41, %"struct.std::__1::pair"* %42, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %380

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 2
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %45, %"struct.std::__1::pair"* %46, %"struct.std::__1::pair"* %47, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %380

49:                                               ; preds = %16
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 2
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 3
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1
  %54 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %50, %"struct.std::__1::pair"* %51, %"struct.std::__1::pair"* %52, %"struct.std::__1::pair"* %53, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %380

55:                                               ; preds = %16
  %56 = icmp slt i64 %19, 56
  br i1 %56, label %57, label %119

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 2
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %60 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %59, %"struct.std::__1::pair"* %58, %"struct.std::__1::__less.115"* dereferenceable(1) %2) #9
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 3
  %62 = icmp eq %"struct.std::__1::pair"* %61, %5
  br i1 %62, label %380, label %63

63:                                               ; preds = %57, %116
  %64 = phi %"struct.std::__1::pair"* [ %117, %116 ], [ %61, %57 ]
  %65 = phi %"struct.std::__1::pair"* [ %64, %116 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp ult i32 %67, %69
  br i1 %70, label %79, label %71

71:                                               ; preds = %63
  %72 = icmp ult i32 %69, %67
  br i1 %72, label %116, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 0, i32 1
  %75 = load i8, i8* %74, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 0, i32 1
  %77 = load i8, i8* %76, align 4
  %78 = icmp ult i8 %75, %77
  br i1 %78, label %79, label %116

79:                                               ; preds = %73, %63
  %80 = bitcast %"struct.std::__1::pair"* %64 to i64*
  %81 = load i64, i64* %80, align 4
  %82 = trunc i64 %81 to i32
  %83 = lshr i64 %81, 32
  %84 = trunc i64 %83 to i8
  store i32 %69, i32* %66, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 0, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 0, i32 1
  store i8 %86, i8* %87, align 4
  %88 = icmp eq %"struct.std::__1::pair"* %65, %17
  br i1 %88, label %113, label %89

89:                                               ; preds = %79, %107
  %90 = phi i8* [ %108, %107 ], [ %85, %79 ]
  %91 = phi i32* [ %92, %107 ], [ %68, %79 ]
  %92 = getelementptr inbounds i32, i32* %91, i64 -2
  %93 = bitcast i32* %92 to %"struct.std::__1::pair"*
  %94 = load i32, i32* %92, align 4
  %95 = icmp ugt i32 %94, %82
  br i1 %95, label %96, label %100

96:                                               ; preds = %89
  %97 = getelementptr inbounds i32, i32* %91, i64 -1
  %98 = bitcast i32* %97 to i8*
  %99 = load i8, i8* %98, align 1
  br label %107

100:                                              ; preds = %89
  %101 = icmp ult i32 %94, %82
  br i1 %101, label %113, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds i32, i32* %91, i64 -1
  %104 = bitcast i32* %103 to i8*
  %105 = load i8, i8* %104, align 4
  %106 = icmp ugt i8 %105, %84
  br i1 %106, label %107, label %113

107:                                              ; preds = %102, %96
  %108 = phi i8* [ %104, %102 ], [ %98, %96 ]
  %109 = phi i8 [ %105, %102 ], [ %99, %96 ]
  store i32 %94, i32* %91, align 4
  %110 = getelementptr inbounds i32, i32* %91, i64 1
  %111 = bitcast i32* %110 to i8*
  store i8 %109, i8* %111, align 4
  %112 = icmp eq %"struct.std::__1::pair"* %17, %93
  br i1 %112, label %113, label %89

113:                                              ; preds = %100, %102, %107, %79
  %114 = phi i32* [ %68, %79 ], [ %91, %100 ], [ %91, %102 ], [ %92, %107 ]
  %115 = phi i8* [ %85, %79 ], [ %90, %100 ], [ %90, %102 ], [ %108, %107 ]
  store i32 %82, i32* %114, align 4
  store i8 %84, i8* %115, align 4
  br label %116

116:                                              ; preds = %113, %73, %71
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %64, i64 1
  %118 = icmp eq %"struct.std::__1::pair"* %117, %5
  br i1 %118, label %380, label %63

119:                                              ; preds = %55
  %120 = icmp sgt i64 %19, 7992
  %121 = sdiv i64 %20, 2
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %121
  br i1 %120, label %123, label %128

123:                                              ; preds = %119
  %124 = sdiv i64 %20, 4
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %124
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 %124
  %127 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %125, %"struct.std::__1::pair"* %122, %"struct.std::__1::pair"* %126, %"struct.std::__1::pair"* %8, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %130

128:                                              ; preds = %119
  %129 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %122, %"struct.std::__1::pair"* %8, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %130

130:                                              ; preds = %128, %123
  %131 = phi i32 [ %127, %123 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %122, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp ult i32 %133, %135
  br i1 %136, label %265, label %137

137:                                              ; preds = %130
  %138 = icmp ult i32 %135, %133
  br i1 %138, label %145, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %141 = load i8, i8* %140, align 4
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %121, i32 1
  %143 = load i8, i8* %142, align 4
  %144 = icmp ult i8 %141, %143
  br i1 %144, label %265, label %145

145:                                              ; preds = %139, %137
  %146 = icmp eq %"struct.std::__1::pair"* %17, %9
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 %121, i32 1
  br label %242

149:                                              ; preds = %255, %145
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %151 = load i32, i32* %10, align 4
  %152 = icmp ult i32 %133, %151
  br i1 %152, label %185, label %153

153:                                              ; preds = %149
  %154 = icmp ult i32 %151, %133
  br i1 %154, label %160, label %155

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %157 = load i8, i8* %156, align 4
  %158 = load i8, i8* %11, align 4
  %159 = icmp ult i8 %157, %158
  br i1 %159, label %185, label %160

160:                                              ; preds = %155, %153
  %161 = icmp eq %"struct.std::__1::pair"* %150, %8
  br i1 %161, label %380, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  br label %164

164:                                              ; preds = %162, %182
  %165 = phi %"struct.std::__1::pair"* [ %150, %162 ], [ %183, %182 ]
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = icmp ult i32 %133, %167
  br i1 %168, label %176, label %169

169:                                              ; preds = %164
  %170 = icmp ult i32 %167, %133
  br i1 %170, label %182, label %171

171:                                              ; preds = %169
  %172 = load i8, i8* %163, align 4
  %173 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 0, i32 1
  %174 = load i8, i8* %173, align 4
  %175 = icmp ult i8 %172, %174
  br i1 %175, label %176, label %182

176:                                              ; preds = %164, %171
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 0, i32 0
  store i32 %151, i32* %177, align 4
  store i32 %167, i32* %10, align 4
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 0, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = load i8, i8* %12, align 1
  store i8 %180, i8* %178, align 1
  store i8 %179, i8* %12, align 1
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 1
  br label %185

182:                                              ; preds = %169, %171
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %165, i64 1
  %184 = icmp eq %"struct.std::__1::pair"* %183, %8
  br i1 %184, label %380, label %164

185:                                              ; preds = %149, %155, %176
  %186 = phi %"struct.std::__1::pair"* [ %181, %176 ], [ %150, %155 ], [ %150, %149 ]
  %187 = icmp eq %"struct.std::__1::pair"* %186, %8
  br i1 %187, label %380, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  br label %190

190:                                              ; preds = %188, %235
  %191 = phi %"struct.std::__1::pair"* [ %241, %235 ], [ %186, %188 ]
  %192 = phi %"struct.std::__1::pair"* [ %221, %235 ], [ %8, %188 ]
  %193 = load i32, i32* %132, align 4
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %191, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp ult i32 %193, %195
  br i1 %196, label %201, label %205

197:                                              ; preds = %209, %215
  %198 = phi i32* [ %216, %215 ], [ %207, %209 ]
  %199 = phi i32 [ %217, %215 ], [ %206, %209 ]
  %200 = bitcast i32* %198 to %"struct.std::__1::pair"*
  br label %201

201:                                              ; preds = %197, %190
  %202 = phi %"struct.std::__1::pair"* [ %191, %190 ], [ %200, %197 ]
  %203 = phi i32* [ %194, %190 ], [ %198, %197 ]
  %204 = phi i32 [ %195, %190 ], [ %199, %197 ]
  br label %219

205:                                              ; preds = %190, %215
  %206 = phi i32 [ %217, %215 ], [ %195, %190 ]
  %207 = phi i32* [ %216, %215 ], [ %194, %190 ]
  %208 = icmp ult i32 %206, %193
  br i1 %208, label %215, label %209

209:                                              ; preds = %205
  %210 = load i8, i8* %189, align 4
  %211 = getelementptr inbounds i32, i32* %207, i64 1
  %212 = bitcast i32* %211 to i8*
  %213 = load i8, i8* %212, align 4
  %214 = icmp ult i8 %210, %213
  br i1 %214, label %197, label %215

215:                                              ; preds = %205, %209
  %216 = getelementptr inbounds i32, i32* %207, i64 2
  %217 = load i32, i32* %216, align 4
  %218 = icmp ult i32 %193, %217
  br i1 %218, label %197, label %205

219:                                              ; preds = %232, %201
  %220 = phi %"struct.std::__1::pair"* [ %192, %201 ], [ %221, %232 ]
  %221 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %220, i64 -1
  %222 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %221, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp ult i32 %193, %223
  br i1 %224, label %232, label %225

225:                                              ; preds = %219
  %226 = icmp ult i32 %223, %193
  br i1 %226, label %233, label %227

227:                                              ; preds = %225
  %228 = load i8, i8* %189, align 4
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %220, i64 -1, i32 1
  %230 = load i8, i8* %229, align 4
  %231 = icmp ult i8 %228, %230
  br i1 %231, label %232, label %233

232:                                              ; preds = %227, %219
  br label %219

233:                                              ; preds = %225, %227
  %234 = icmp ult %"struct.std::__1::pair"* %202, %221
  br i1 %234, label %235, label %16

235:                                              ; preds = %233
  %236 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %221, i64 0, i32 0
  store i32 %223, i32* %203, align 4
  store i32 %204, i32* %236, align 4
  %237 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 0, i32 1
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %220, i64 -1, i32 1
  %239 = load i8, i8* %237, align 1
  %240 = load i8, i8* %238, align 1
  store i8 %240, i8* %237, align 1
  store i8 %239, i8* %238, align 1
  %241 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %202, i64 1
  br label %190

242:                                              ; preds = %147, %255
  %243 = phi %"struct.std::__1::pair"* [ %9, %147 ], [ %256, %255 ]
  %244 = phi %"struct.std::__1::pair"* [ %8, %147 ], [ %243, %255 ]
  %245 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = icmp ult i32 %246, %135
  br i1 %247, label %258, label %248

248:                                              ; preds = %242
  %249 = icmp ult i32 %135, %246
  br i1 %249, label %255, label %250

250:                                              ; preds = %248
  %251 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %244, i64 -1, i32 1
  %252 = load i8, i8* %251, align 4
  %253 = load i8, i8* %148, align 4
  %254 = icmp ult i8 %252, %253
  br i1 %254, label %258, label %255

255:                                              ; preds = %250, %248
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 -1
  %257 = icmp eq %"struct.std::__1::pair"* %17, %256
  br i1 %257, label %149, label %242

258:                                              ; preds = %242, %250
  %259 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %243, i64 0, i32 0
  store i32 %246, i32* %132, align 4
  store i32 %133, i32* %259, align 4
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %261 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %244, i64 -1, i32 1
  %262 = load i8, i8* %260, align 1
  %263 = load i8, i8* %261, align 1
  store i8 %263, i8* %260, align 1
  store i8 %262, i8* %261, align 1
  %264 = add i32 %131, 1
  br label %265

265:                                              ; preds = %130, %139, %258
  %266 = phi i32 [ %264, %258 ], [ %131, %139 ], [ %131, %130 ]
  %267 = phi %"struct.std::__1::pair"* [ %243, %258 ], [ %8, %139 ], [ %8, %130 ]
  %268 = ptrtoint %"struct.std::__1::pair"* %17 to i64
  %269 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %270 = icmp ult %"struct.std::__1::pair"* %269, %267
  br i1 %270, label %271, label %334

271:                                              ; preds = %265, %325
  %272 = phi %"struct.std::__1::pair"* [ %332, %325 ], [ %122, %265 ]
  %273 = phi i32 [ %330, %325 ], [ %266, %265 ]
  %274 = phi %"struct.std::__1::pair"* [ %333, %325 ], [ %269, %265 ]
  %275 = phi %"struct.std::__1::pair"* [ %321, %325 ], [ %267, %265 ]
  %276 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %272, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %272, i64 0, i32 1
  br label %279

279:                                              ; preds = %297, %271
  %280 = phi %"struct.std::__1::pair"* [ %274, %271 ], [ %298, %297 ]
  %281 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp ult i32 %282, %277
  br i1 %283, label %297, label %284

284:                                              ; preds = %279
  %285 = icmp ult i32 %277, %282
  br i1 %285, label %286, label %292

286:                                              ; preds = %292, %284
  %287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 0, i32 0
  %288 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %275, i64 -1
  %289 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = icmp ult i32 %290, %277
  br i1 %291, label %319, label %299

292:                                              ; preds = %284
  %293 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 0, i32 1
  %294 = load i8, i8* %293, align 4
  %295 = load i8, i8* %278, align 4
  %296 = icmp ult i8 %294, %295
  br i1 %296, label %297, label %286

297:                                              ; preds = %279, %292
  %298 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 1
  br label %279

299:                                              ; preds = %286, %310
  %300 = phi i32 [ %312, %310 ], [ %290, %286 ]
  %301 = phi i32* [ %311, %310 ], [ %289, %286 ]
  %302 = phi %"struct.std::__1::pair"* [ %303, %310 ], [ %275, %286 ]
  %303 = bitcast i32* %301 to %"struct.std::__1::pair"*
  %304 = icmp ult i32 %277, %300
  br i1 %304, label %310, label %305

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %302, i64 -1, i32 1
  %307 = load i8, i8* %306, align 4
  %308 = load i8, i8* %278, align 4
  %309 = icmp ult i8 %307, %308
  br i1 %309, label %317, label %310

310:                                              ; preds = %305, %299
  %311 = getelementptr inbounds i32, i32* %301, i64 -2
  %312 = load i32, i32* %311, align 4
  %313 = icmp ult i32 %312, %277
  br i1 %313, label %314, label %299

314:                                              ; preds = %310
  %315 = bitcast i32* %301 to %"struct.std::__1::pair"*
  %316 = bitcast i32* %311 to %"struct.std::__1::pair"*
  br label %319

317:                                              ; preds = %305
  %318 = bitcast i32* %301 to %"struct.std::__1::pair"*
  br label %319

319:                                              ; preds = %314, %317, %286
  %320 = phi %"struct.std::__1::pair"* [ %275, %286 ], [ %315, %314 ], [ %302, %317 ]
  %321 = phi %"struct.std::__1::pair"* [ %288, %286 ], [ %316, %314 ], [ %318, %317 ]
  %322 = phi i32* [ %289, %286 ], [ %311, %314 ], [ %301, %317 ]
  %323 = phi i32 [ %290, %286 ], [ %312, %314 ], [ %300, %317 ]
  %324 = icmp ugt %"struct.std::__1::pair"* %280, %321
  br i1 %324, label %334, label %325

325:                                              ; preds = %319
  store i32 %323, i32* %287, align 4
  store i32 %282, i32* %322, align 4
  %326 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 0, i32 1
  %327 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %320, i64 -1, i32 1
  %328 = load i8, i8* %326, align 1
  %329 = load i8, i8* %327, align 1
  store i8 %329, i8* %326, align 1
  store i8 %328, i8* %327, align 1
  %330 = add i32 %273, 1
  %331 = icmp eq %"struct.std::__1::pair"* %272, %280
  %332 = select i1 %331, %"struct.std::__1::pair"* %321, %"struct.std::__1::pair"* %272
  %333 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %280, i64 1
  br label %271

334:                                              ; preds = %319, %265
  %335 = phi %"struct.std::__1::pair"* [ %122, %265 ], [ %272, %319 ]
  %336 = phi i32 [ %266, %265 ], [ %273, %319 ]
  %337 = phi %"struct.std::__1::pair"* [ %269, %265 ], [ %280, %319 ]
  %338 = icmp eq %"struct.std::__1::pair"* %337, %335
  br i1 %338, label %359, label %339

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %335, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  %342 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = icmp ult i32 %341, %343
  br i1 %344, label %353, label %345

345:                                              ; preds = %339
  %346 = icmp ult i32 %343, %341
  br i1 %346, label %359, label %347

347:                                              ; preds = %345
  %348 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %335, i64 0, i32 1
  %349 = load i8, i8* %348, align 4
  %350 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 0, i32 1
  %351 = load i8, i8* %350, align 4
  %352 = icmp ult i8 %349, %351
  br i1 %352, label %353, label %359

353:                                              ; preds = %339, %347
  store i32 %341, i32* %342, align 4
  store i32 %343, i32* %340, align 4
  %354 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 0, i32 1
  %355 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %335, i64 0, i32 1
  %356 = load i8, i8* %354, align 1
  %357 = load i8, i8* %355, align 1
  store i8 %357, i8* %354, align 1
  store i8 %356, i8* %355, align 1
  %358 = add i32 %336, 1
  br label %359

359:                                              ; preds = %345, %334, %353, %347
  %360 = phi i32 [ %358, %353 ], [ %336, %347 ], [ %336, %334 ], [ %336, %345 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %369

362:                                              ; preds = %359
  %363 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %337, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  %364 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 1
  %365 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair"* %364, %"struct.std::__1::pair"* %5, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br i1 %365, label %366, label %368

366:                                              ; preds = %362
  br i1 %363, label %380, label %367

367:                                              ; preds = %366, %378
  br label %4

368:                                              ; preds = %362
  br i1 %363, label %376, label %369

369:                                              ; preds = %368, %359
  %370 = ptrtoint %"struct.std::__1::pair"* %337 to i64
  %371 = sub i64 %370, %268
  %372 = sub i64 %13, %370
  %373 = icmp slt i64 %371, %372
  br i1 %373, label %374, label %378

374:                                              ; preds = %369
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %17, %"struct.std::__1::pair"* %337, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  %375 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 1
  br label %376

376:                                              ; preds = %374, %368
  %377 = phi %"struct.std::__1::pair"* [ %364, %368 ], [ %375, %374 ]
  br label %14

378:                                              ; preds = %369
  %379 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %337, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEvT0_S7_T_(%"struct.std::__1::pair"* %379, %"struct.std::__1::pair"* %5, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %367

380:                                              ; preds = %366, %185, %16, %16, %160, %182, %116, %27, %57, %29, %35, %40, %44, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.115"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %18, label %10

10:                                               ; preds = %4
  %11 = icmp ult i32 %8, %6
  br i1 %11, label %18, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 4
  %17 = icmp ult i8 %14, %16
  br label %18

18:                                               ; preds = %4, %10, %12
  %19 = phi i1 [ true, %4 ], [ false, %10 ], [ %17, %12 ]
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp ult i32 %21, %6
  br i1 %22, label %31, label %23

23:                                               ; preds = %18
  %24 = icmp ult i32 %6, %21
  br i1 %24, label %31, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %27 = load i8, i8* %26, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %29 = load i8, i8* %28, align 4
  %30 = icmp ult i8 %27, %29
  br label %31

31:                                               ; preds = %18, %23, %25
  %32 = phi i1 [ true, %18 ], [ false, %23 ], [ %30, %25 ]
  br i1 %19, label %53, label %33

33:                                               ; preds = %31
  br i1 %32, label %34, label %77

34:                                               ; preds = %33
  store i32 %21, i32* %5, align 4
  store i32 %6, i32* %20, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %37 = load i8, i8* %35, align 1
  %38 = load i8, i8* %36, align 1
  store i8 %38, i8* %35, align 1
  store i8 %37, i8* %36, align 1
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %7, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %34
  %43 = icmp ult i32 %40, %39
  br i1 %43, label %77, label %44

44:                                               ; preds = %42
  %45 = load i8, i8* %35, align 4
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %47 = load i8, i8* %46, align 4
  %48 = icmp ult i8 %45, %47
  br i1 %48, label %49, label %77

49:                                               ; preds = %34, %44
  store i32 %39, i32* %7, align 4
  store i32 %40, i32* %5, align 4
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = load i8, i8* %35, align 1
  store i8 %52, i8* %50, align 1
  store i8 %51, i8* %35, align 1
  br label %77

53:                                               ; preds = %31
  br i1 %32, label %54, label %59

54:                                               ; preds = %53
  store i32 %21, i32* %7, align 4
  store i32 %8, i32* %20, align 4
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %57 = load i8, i8* %55, align 1
  %58 = load i8, i8* %56, align 1
  store i8 %58, i8* %55, align 1
  store i8 %57, i8* %56, align 1
  br label %77

59:                                               ; preds = %53
  store i32 %6, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %62 = load i8, i8* %60, align 1
  %63 = load i8, i8* %61, align 1
  store i8 %63, i8* %60, align 1
  store i8 %62, i8* %61, align 1
  %64 = load i32, i32* %20, align 4
  %65 = load i32, i32* %5, align 4
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %73, label %67

67:                                               ; preds = %59
  %68 = icmp ult i32 %65, %64
  br i1 %68, label %77, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %71 = load i8, i8* %70, align 4
  %72 = icmp ult i8 %71, %62
  br i1 %72, label %73, label %77

73:                                               ; preds = %59, %69
  store i32 %64, i32* %5, align 4
  store i32 %65, i32* %20, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %75 = load i8, i8* %61, align 1
  %76 = load i8, i8* %74, align 1
  store i8 %76, i8* %61, align 1
  store i8 %75, i8* %74, align 1
  br label %77

77:                                               ; preds = %67, %42, %69, %73, %44, %49, %33, %54
  %78 = phi i32 [ 1, %54 ], [ 0, %33 ], [ 2, %49 ], [ 1, %44 ], [ 2, %73 ], [ 1, %69 ], [ 1, %42 ], [ 1, %67 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.115"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::__less.115"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %5
  %13 = icmp ult i32 %10, %8
  br i1 %13, label %58, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %16 = load i8, i8* %15, align 4
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %18 = load i8, i8* %17, align 4
  %19 = icmp ult i8 %16, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %5, %14
  store i32 %8, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %23 = load i8, i8* %21, align 1
  %24 = load i8, i8* %22, align 1
  store i8 %24, i8* %21, align 1
  store i8 %23, i8* %22, align 1
  %25 = add i32 %6, 1
  %26 = load i32, i32* %9, align 4
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %37, label %30

30:                                               ; preds = %20
  %31 = icmp ult i32 %28, %26
  br i1 %31, label %58, label %32

32:                                               ; preds = %30
  %33 = load i8, i8* %21, align 4
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %35 = load i8, i8* %34, align 4
  %36 = icmp ult i8 %33, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %20, %32
  store i32 %26, i32* %27, align 4
  store i32 %28, i32* %9, align 4
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %21, align 1
  store i8 %40, i8* %38, align 1
  store i8 %39, i8* %21, align 1
  %41 = add i32 %6, 2
  %42 = load i32, i32* %27, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp ult i32 %42, %44
  br i1 %45, label %53, label %46

46:                                               ; preds = %37
  %47 = icmp ult i32 %44, %42
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = load i8, i8* %38, align 4
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %51 = load i8, i8* %50, align 4
  %52 = icmp ult i8 %49, %51
  br i1 %52, label %53, label %58

53:                                               ; preds = %37, %48
  store i32 %42, i32* %43, align 4
  store i32 %44, i32* %27, align 4
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = load i8, i8* %38, align 1
  store i8 %56, i8* %54, align 1
  store i8 %55, i8* %38, align 1
  %57 = add i32 %6, 3
  br label %58

58:                                               ; preds = %46, %30, %12, %32, %53, %48, %14
  %59 = phi i32 [ %57, %53 ], [ %41, %48 ], [ %25, %32 ], [ %6, %14 ], [ %6, %12 ], [ %25, %30 ], [ %41, %46 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.115"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %1, %"struct.std::__1::pair"* %2, %"struct.std::__1::pair"* %3, %"struct.std::__1::__less.115"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %9, %11
  br i1 %12, label %21, label %13

13:                                               ; preds = %6
  %14 = icmp ult i32 %11, %9
  br i1 %14, label %75, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %17 = load i8, i8* %16, align 4
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %19 = load i8, i8* %18, align 4
  %20 = icmp ult i8 %17, %19
  br i1 %20, label %21, label %75

21:                                               ; preds = %6, %15
  store i32 %9, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %24 = load i8, i8* %22, align 1
  %25 = load i8, i8* %23, align 1
  store i8 %25, i8* %22, align 1
  store i8 %24, i8* %23, align 1
  %26 = add i32 %7, 1
  %27 = load i32, i32* %10, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %21
  %32 = icmp ult i32 %29, %27
  br i1 %32, label %75, label %33

33:                                               ; preds = %31
  %34 = load i8, i8* %22, align 4
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %36 = load i8, i8* %35, align 4
  %37 = icmp ult i8 %34, %36
  br i1 %37, label %38, label %75

38:                                               ; preds = %21, %33
  store i32 %27, i32* %28, align 4
  store i32 %29, i32* %10, align 4
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = load i8, i8* %22, align 1
  store i8 %41, i8* %39, align 1
  store i8 %40, i8* %22, align 1
  %42 = add i32 %7, 2
  %43 = load i32, i32* %28, align 4
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %54, label %47

47:                                               ; preds = %38
  %48 = icmp ult i32 %45, %43
  br i1 %48, label %75, label %49

49:                                               ; preds = %47
  %50 = load i8, i8* %39, align 4
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %52 = load i8, i8* %51, align 4
  %53 = icmp ult i8 %50, %52
  br i1 %53, label %54, label %75

54:                                               ; preds = %38, %49
  store i32 %43, i32* %44, align 4
  store i32 %45, i32* %28, align 4
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = load i8, i8* %39, align 1
  store i8 %57, i8* %55, align 1
  store i8 %56, i8* %39, align 1
  %58 = add i32 %7, 3
  %59 = load i32, i32* %44, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp ult i32 %59, %61
  br i1 %62, label %70, label %63

63:                                               ; preds = %54
  %64 = icmp ult i32 %61, %59
  br i1 %64, label %75, label %65

65:                                               ; preds = %63
  %66 = load i8, i8* %55, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %68 = load i8, i8* %67, align 4
  %69 = icmp ult i8 %66, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %54, %65
  store i32 %59, i32* %60, align 4
  store i32 %61, i32* %44, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = load i8, i8* %55, align 1
  store i8 %73, i8* %71, align 1
  store i8 %72, i8* %55, align 1
  %74 = add i32 %7, 4
  br label %75

75:                                               ; preds = %63, %47, %31, %13, %33, %65, %70, %49, %15
  %76 = phi i32 [ %74, %70 ], [ %58, %65 ], [ %42, %49 ], [ %26, %33 ], [ %7, %15 ], [ %7, %13 ], [ %26, %31 ], [ %42, %47 ], [ %58, %63 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIjhEES3_EEPS3_EEbT0_S7_T_(%"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::__less.115"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %42 [
    i64 0, label %114
    i64 1, label %114
    i64 2, label %8
    i64 3, label %27
    i64 4, label %31
    i64 5, label %36
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = icmp ult i32 %12, %10
  br i1 %15, label %114, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %18 = load i8, i8* %17, align 4
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %20 = load i8, i8* %19, align 4
  %21 = icmp ult i8 %18, %20
  br i1 %21, label %22, label %114

22:                                               ; preds = %8, %16
  store i32 %10, i32* %11, align 4
  store i32 %12, i32* %9, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %25 = load i8, i8* %23, align 1
  %26 = load i8, i8* %24, align 1
  store i8 %26, i8* %23, align 1
  store i8 %25, i8* %24, align 1
  br label %114

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %30 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %28, %"struct.std::__1::pair"* %29, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %114

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %35 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %32, %"struct.std::__1::pair"* %33, %"struct.std::__1::pair"* %34, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %114

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %41 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %37, %"struct.std::__1::pair"* %38, %"struct.std::__1::pair"* %39, %"struct.std::__1::pair"* %40, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  br label %114

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 2
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 1
  %45 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_4pairIjhEES3_EEPS3_EEjT0_S7_S7_T_(%"struct.std::__1::pair"* %0, %"struct.std::__1::pair"* %44, %"struct.std::__1::pair"* %43, %"struct.std::__1::__less.115"* dereferenceable(1) %2)
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 3
  %47 = icmp eq %"struct.std::__1::pair"* %46, %1
  br i1 %47, label %114, label %48

48:                                               ; preds = %42, %107
  %49 = phi %"struct.std::__1::pair"* [ %109, %107 ], [ %46, %42 ]
  %50 = phi i32 [ %108, %107 ], [ 0, %42 ]
  %51 = phi %"struct.std::__1::pair"* [ %49, %107 ], [ %43, %42 ]
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %53, %55
  br i1 %56, label %65, label %57

57:                                               ; preds = %48
  %58 = icmp ult i32 %55, %53
  br i1 %58, label %107, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  %61 = load i8, i8* %60, align 4
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1
  %63 = load i8, i8* %62, align 4
  %64 = icmp ult i8 %61, %63
  br i1 %64, label %65, label %107

65:                                               ; preds = %48, %59
  %66 = bitcast %"struct.std::__1::pair"* %49 to i64*
  %67 = load i64, i64* %66, align 4
  %68 = trunc i64 %67 to i32
  %69 = lshr i64 %67, 32
  %70 = trunc i64 %69 to i8
  store i32 %55, i32* %52, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 0, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 1
  store i8 %72, i8* %73, align 4
  %74 = icmp eq %"struct.std::__1::pair"* %51, %0
  br i1 %74, label %102, label %75

75:                                               ; preds = %65, %93
  %76 = phi i8* [ %96, %93 ], [ %71, %65 ]
  %77 = phi i32* [ %78, %93 ], [ %54, %65 ]
  %78 = getelementptr inbounds i32, i32* %77, i64 -2
  %79 = bitcast i32* %78 to %"struct.std::__1::pair"*
  %80 = load i32, i32* %78, align 4
  %81 = icmp ugt i32 %80, %68
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  %83 = getelementptr inbounds i32, i32* %77, i64 -1
  %84 = bitcast i32* %83 to i8*
  %85 = load i8, i8* %84, align 1
  br label %93

86:                                               ; preds = %75
  %87 = icmp ult i32 %80, %68
  br i1 %87, label %102, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds i32, i32* %77, i64 -1
  %90 = bitcast i32* %89 to i8*
  %91 = load i8, i8* %90, align 4
  %92 = icmp ugt i8 %91, %70
  br i1 %92, label %93, label %102

93:                                               ; preds = %82, %88
  %94 = phi i8 [ %85, %82 ], [ %91, %88 ]
  store i32 %80, i32* %77, align 4
  %95 = getelementptr inbounds i32, i32* %77, i64 -1
  %96 = bitcast i32* %95 to i8*
  %97 = getelementptr inbounds i32, i32* %77, i64 1
  %98 = bitcast i32* %97 to i8*
  store i8 %94, i8* %98, align 4
  %99 = icmp eq %"struct.std::__1::pair"* %79, %0
  br i1 %99, label %100, label %75

100:                                              ; preds = %93
  %101 = bitcast i32* %95 to i8*
  br label %102

102:                                              ; preds = %86, %88, %100, %65
  %103 = phi i32* [ %54, %65 ], [ %78, %100 ], [ %77, %88 ], [ %77, %86 ]
  %104 = phi i8* [ %71, %65 ], [ %101, %100 ], [ %76, %88 ], [ %76, %86 ]
  store i32 %68, i32* %103, align 4
  store i8 %70, i8* %104, align 4
  %105 = add i32 %50, 1
  %106 = icmp eq i32 %105, 8
  br i1 %106, label %111, label %107

107:                                              ; preds = %102, %57, %59
  %108 = phi i32 [ %105, %102 ], [ %50, %59 ], [ %50, %57 ]
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %110 = icmp eq %"struct.std::__1::pair"* %109, %1
  br i1 %110, label %114, label %48

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 1
  %113 = icmp eq %"struct.std::__1::pair"* %112, %1
  br label %114

114:                                              ; preds = %107, %111, %42, %14, %16, %22, %3, %3, %36, %31, %27
  %115 = phi i1 [ true, %36 ], [ true, %31 ], [ true, %27 ], [ true, %3 ], [ true, %3 ], [ true, %22 ], [ true, %16 ], [ true, %14 ], [ true, %42 ], [ %113, %111 ], [ true, %107 ]
  ret i1 %115
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_4pairIjjEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISC_EEEEEEDpOT_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = !{i8 0, i8 2}
