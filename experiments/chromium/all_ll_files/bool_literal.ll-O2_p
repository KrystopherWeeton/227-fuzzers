; ModuleID = '../../third_party/dawn/third_party/tint/src/ast/bool_literal.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/ast/bool_literal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.tint::ast::BoolLiteral" = type <{ %"class.tint::Castable", i8, [7 x i8] }>
%"class.tint::Castable" = type { %"class.tint::ast::Literal" }
%"class.tint::ast::Literal" = type { %"class.tint::Castable.0" }
%"class.tint::Castable.0" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Node" = type { %"class.tint::Castable.1", %"class.tint::ProgramID", %"class.tint::Source" }
%"class.tint::Castable.1" = type { %"class.tint::Cloneable" }
%"class.tint::Cloneable" = type { %"class.tint::Castable.2" }
%"class.tint::Castable.2" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.tint::ProgramID" = type { i32 }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.tint::sem::Info" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.24", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { float }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.tint::CloneContext" = type { %"class.tint::ProgramBuilder"*, %"class.tint::Program"*, %"class.std::__1::unordered_map.189", %"class.std::__1::unordered_map.217", %"class.std::__1::vector.241", %"class.std::__1::unordered_map.249", %"class.std::__1::function.277" }
%"class.tint::ProgramBuilder" = type <{ i32 (...)**, %"class.tint::ProgramBuilder::TypesBuilder", %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.63", %"class.tint::BlockAllocator.72", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", %"class.tint::Source", i8, i8, [6 x i8] }>
%"class.tint::ProgramBuilder::TypesBuilder" = type { %"class.tint::ProgramBuilder"* }
%"class.tint::sem::Manager" = type { %"class.std::__1::unordered_map.27", %"class.tint::BlockAllocator" }
%"class.std::__1::unordered_map.27" = type { %"class.std::__1::__hash_table.28" }
%"class.std::__1::__hash_table.28" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base.32"** }
%"struct.std::__1::__hash_node_base.32" = type { %"struct.std::__1::__hash_node_base.32"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator.34" }
%"class.std::__1::__bucket_list_deallocator.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base.32" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.tint::BlockAllocator" = type { %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"class.std::__1::unique_ptr.57"*, %"class.std::__1::unique_ptr.57"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::unique_ptr.57" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::unique_ptr.57"* }
%"class.tint::BlockAllocator.63" = type { %"class.std::__1::vector.64" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.tint::ast::Node"* }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.66"* }
%"class.tint::BlockAllocator.72" = type { %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.std::__1::unique_ptr.75"*, %"class.std::__1::unique_ptr.75"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::unique_ptr.75" = type opaque
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::unique_ptr.75"* }
%"class.tint::ast::Module" = type { %"class.tint::Castable.81", %"class.std::__1::vector.82", %"class.std::__1::vector.89", %"class.tint::ast::FunctionList", %"class.std::__1::vector.101" }
%"class.tint::Castable.81" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.tint::ast::Node"**, %"class.tint::ast::Node"**, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.tint::ast::Node"** }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.tint::ast::NamedType"**, %"class.tint::ast::NamedType"**, %"class.std::__1::__compressed_pair.93" }
%"class.tint::ast::NamedType" = type { %"class.tint::Castable.91", %"class.tint::Symbol" }
%"class.tint::Castable.91" = type { %"class.tint::ast::Type" }
%"class.tint::ast::Type" = type { %"class.tint::Castable.92" }
%"class.tint::Castable.92" = type { %"class.tint::ast::Node" }
%"class.tint::Symbol" = type { i32, %"class.tint::ProgramID" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.tint::ast::NamedType"** }
%"class.tint::ast::FunctionList" = type { %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.tint::ast::Function"**, %"class.tint::ast::Function"**, %"class.std::__1::__compressed_pair.127" }
%"class.tint::ast::Function" = type { %"class.tint::Castable.100", %"class.tint::Symbol", %"class.std::__1::vector.101", %"class.tint::ast::Type"*, %"class.tint::ast::BlockStatement"*, %"class.std::__1::vector.105", %"class.std::__1::vector.105" }
%"class.tint::Castable.100" = type { %"class.tint::ast::Node" }
%"class.tint::ast::BlockStatement" = type { %"class.tint::Castable.118", %"class.std::__1::vector.120" }
%"class.tint::Castable.118" = type { %"class.tint::ast::Statement" }
%"class.tint::ast::Statement" = type { %"class.tint::Castable.119" }
%"class.tint::Castable.119" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"class.tint::ast::Statement"**, %"class.tint::ast::Statement"**, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.tint::ast::Statement"** }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"class.tint::ast::Decoration"**, %"class.tint::ast::Decoration"**, %"class.std::__1::__compressed_pair.108" }
%"class.tint::ast::Decoration" = type { %"class.tint::Castable.107" }
%"class.tint::Castable.107" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.tint::ast::Decoration"** }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.tint::ast::Function"** }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.tint::ast::Variable"**, %"class.tint::ast::Variable"**, %"class.std::__1::__compressed_pair.113" }
%"class.tint::ast::Variable" = type <{ %"class.tint::Castable.103", %"class.tint::Symbol", %"class.tint::ast::Type"*, i8, [7 x i8], %"class.tint::ast::Expression"*, %"class.std::__1::vector.105", i32, [4 x i8] }>
%"class.tint::Castable.103" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Expression" = type { %"class.tint::Castable.104" }
%"class.tint::Castable.104" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.tint::ast::Variable"** }
%"class.tint::SymbolTable" = type { i32, [4 x i8], %"class.std::__1::unordered_map.132", %"class.std::__1::unordered_map.158", %"class.tint::ProgramID", [4 x i8] }
%"class.std::__1::unordered_map.132" = type { %"class.std::__1::__hash_table.133" }
%"class.std::__1::__hash_table.133" = type <{ %"class.std::__1::unique_ptr.134", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.152", [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136", %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.137"** }
%"struct.std::__1::__hash_node_base.137" = type { %"struct.std::__1::__hash_node_base.137"* }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::__bucket_list_deallocator.139" }
%"class.std::__1::__bucket_list_deallocator.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.137" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unordered_map.158" = type { %"class.std::__1::__hash_table.159" }
%"class.std::__1::__hash_table.159" = type <{ %"class.std::__1::unique_ptr.160", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.178", [4 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162", %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::__hash_node_base.163"** }
%"struct.std::__1::__hash_node_base.163" = type { %"struct.std::__1::__hash_node_base.163"* }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.std::__1::__bucket_list_deallocator.165" }
%"class.std::__1::__bucket_list_deallocator.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::__hash_node_base.163" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.tint::diag::List" = type { %"class.std::__1::vector.182", i64 }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"class.tint::diag::Diagnostic"*, %"class.tint::diag::Diagnostic"*, %"class.std::__1::__compressed_pair.184" }
%"class.tint::diag::Diagnostic" = type { i32, %"class.tint::Source", %"class.std::__1::basic_string", i8* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.tint::diag::Diagnostic"* }
%"class.tint::Program" = type <{ %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.63", %"class.tint::BlockAllocator.72", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map.189" = type { %"class.std::__1::__hash_table.190" }
%"class.std::__1::__hash_table.190" = type <{ %"class.std::__1::unique_ptr.191", %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.211", [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193", %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base.194"** }
%"struct.std::__1::__hash_node_base.194" = type { %"struct.std::__1::__hash_node_base.194"* }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::__bucket_list_deallocator.196" }
%"class.std::__1::__bucket_list_deallocator.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.std::__1::__hash_node_base.194" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unordered_map.217" = type { %"class.std::__1::__hash_table.218" }
%"class.std::__1::__hash_table.218" = type <{ %"class.std::__1::unique_ptr.219", %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.237", [4 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::__hash_node_base.222"** }
%"struct.std::__1::__hash_node_base.222" = type { %"struct.std::__1::__hash_node_base.222"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator.224" }
%"class.std::__1::__bucket_list_deallocator.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.222" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"*, %"class.std::__1::__compressed_pair.244" }
%"struct.tint::CloneContext::CloneableTransform" = type { %"struct.tint::TypeInfo"*, %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.tint::Cloneable"* (%"union.std::__1::__function::__policy_storage"*, %"class.tint::Cloneable"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.tint::CloneContext::CloneableTransform"* }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.271", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::function.277" = type { %"class.std::__1::__function::__policy_func.281" }
%"class.std::__1::__function::__policy_func.281" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.282", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.282" = type { void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)* }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.tint::ast::BoolLiteral"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4tint8CastableINS_3ast11BoolLiteralENS1_7LiteralEE8TypeInfoEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_11BoolLiteralENS5_ISC_EEEEEEEvDpOT_ = comdat any

@_ZN4tint6detail10TypeInfoOfINS_3ast7LiteralEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [23 x i8] c"tint::ast::BoolLiteral\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3ast11BoolLiteralEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast7LiteralEE4infoE, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
@_ZTVN4tint3ast11BoolLiteralE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::ast::BoolLiteral"*)* @_ZN4tint3ast11BoolLiteralD2Ev to i8*), i8* bitcast (void (%"class.tint::ast::BoolLiteral"*)* @_ZN4tint3ast11BoolLiteralD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_3ast11BoolLiteralENS1_7LiteralEE8TypeInfoEv to i8*), i8* bitcast (%"class.tint::ast::BoolLiteral"* (%"class.tint::ast::BoolLiteral"*, %"class.tint::CloneContext"*)* @_ZNK4tint3ast11BoolLiteral5CloneEPNS_12CloneContextE to i8*), i8* bitcast (void (%"class.tint::ast::Literal"*, %"class.tint::sem::Info"*, %"class.std::__1::basic_ostream"*, i64)* @_ZNK4tint3ast7Literal6to_strERKNS_3sem4InfoERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEm to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.tint::ast::BoolLiteral"*, %"class.tint::sem::Info"*)* @_ZNK4tint3ast11BoolLiteral6to_strERKNS_3sem4InfoE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.tint::ast::BoolLiteral"*)* @_ZNK4tint3ast11BoolLiteral4nameEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"__bool_true\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"__bool_false\00", align 1

@_ZN4tint3ast11BoolLiteralC1ENS_9ProgramIDERKNS_6SourceEb = hidden unnamed_addr alias void (%"class.tint::ast::BoolLiteral"*, i32, %"class.tint::Source"*, i1), void (%"class.tint::ast::BoolLiteral"*, i32, %"class.tint::Source"*, i1)* @_ZN4tint3ast11BoolLiteralC2ENS_9ProgramIDERKNS_6SourceEb
@_ZN4tint3ast11BoolLiteralD1Ev = hidden unnamed_addr alias void (%"class.tint::ast::BoolLiteral"*), void (%"class.tint::ast::BoolLiteral"*)* @_ZN4tint3ast11BoolLiteralD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast11BoolLiteralC2ENS_9ProgramIDERKNS_6SourceEb(%"class.tint::ast::BoolLiteral"*, i32, %"class.tint::Source"* dereferenceable(64), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast7LiteralC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Literal"* %6, i32 %1, %"class.tint::Source"* dereferenceable(64) %2) #9
  %7 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast11BoolLiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 1
  store i8 %5, i8* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast11BoolLiteralD2Ev(%"class.tint::ast::BoolLiteral"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast7LiteralD2Ev(%"class.tint::ast::Literal"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast11BoolLiteralD0Ev(%"class.tint::ast::BoolLiteral"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast7LiteralD2Ev(%"class.tint::ast::Literal"* %2) #9
  %3 = bitcast %"class.tint::ast::BoolLiteral"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4tint3ast11BoolLiteral6to_strERKNS_3sem4InfoE(%"class.std::__1::basic_string"* noalias sret, %"class.tint::ast::BoolLiteral"* nocapture readonly, %"class.tint::sem::Info"* nocapture readnone dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)
  %8 = select i1 %6, i64 5, i64 4
  %9 = trunc i64 %8 to i8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 %9, i8* %11, align 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 1 %7, i64 %8, i1 false) #9
  %13 = getelementptr inbounds i8, i8* %12, i64 %8
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4tint3ast11BoolLiteral4nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.tint::ast::BoolLiteral"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)
  %7 = select i1 %5, i64 12, i64 11
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #9
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.tint::ast::BoolLiteral"* @_ZNK4tint3ast11BoolLiteral5CloneEPNS_12CloneContextE(%"class.tint::ast::BoolLiteral"* nocapture readonly, %"class.tint::CloneContext"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.286", align 8
  %4 = alloca %"class.tint::Source", align 8
  %5 = bitcast %"class.tint::Source"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.tint::Source"* %6 to i8*
  %8 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %4, i64 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %7, i64 32, i1 false) #9
  %10 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1, !noalias !3
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #9
  br label %24

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8, !noalias !3
  %22 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %10, i8* %21, i64 %23) #9
  br label %24

24:                                               ; preds = %16, %19
  %25 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %4, i64 0, i32 2
  %26 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %27 = bitcast %"class.tint::Source::FileContent"** %26 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !3
  %29 = bitcast %"class.tint::Source::FileContent"** %25 to i64*
  store i64 %28, i64* %29, align 8, !alias.scope !3
  %30 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %1, i64 0, i32 0
  %31 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %30, align 8
  %32 = getelementptr inbounds %"class.tint::ast::BoolLiteral", %"class.tint::ast::BoolLiteral"* %0, i64 0, i32 1
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %31) #9
  %33 = bitcast %"class.std::__1::unique_ptr.286"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = call i8* @_Znwm(i64 88) #10
  %36 = bitcast i8* %35 to %"class.tint::ast::BoolLiteral"*
  %37 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %31, i64 0, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = load i8, i8* %32, align 1, !range !2
  %40 = bitcast i8* %35 to %"class.tint::ast::Literal"*
  call void @_ZN4tint3ast7LiteralC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Literal"* nonnull %40, i32 %38, %"class.tint::Source"* nonnull dereferenceable(64) %4) #9
  %41 = bitcast i8* %35 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast11BoolLiteralE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 80
  store i8 %39, i8* %42, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.286"* %3 to i8**
  store i8* %35, i8** %43, align 8
  %44 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %31, i64 0, i32 5, i32 0, i32 0, i32 1
  %45 = load %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"** %44, align 8
  %46 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %31, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"** %46, align 8
  %48 = icmp ult %"class.std::__1::unique_ptr.66"* %45, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %24
  %50 = ptrtoint i8* %35 to i64
  store %"class.tint::ast::BoolLiteral"* null, %"class.tint::ast::BoolLiteral"** %34, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.66"* %45 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %45, i64 1
  %53 = ptrtoint %"class.std::__1::unique_ptr.66"* %52 to i64
  %54 = bitcast %"class.std::__1::unique_ptr.66"** %44 to i64*
  store i64 %53, i64* %54, align 8
  br label %57

55:                                               ; preds = %24
  %56 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %31, i64 0, i32 5, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_11BoolLiteralENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.64"* %56, %"class.std::__1::unique_ptr.286"* nonnull dereferenceable(8) %3) #9
  br label %57

57:                                               ; preds = %55, %49
  %58 = load %"class.tint::ast::BoolLiteral"*, %"class.tint::ast::BoolLiteral"** %34, align 8
  store %"class.tint::ast::BoolLiteral"* null, %"class.tint::ast::BoolLiteral"** %34, align 8
  %59 = icmp eq %"class.tint::ast::BoolLiteral"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %57
  %61 = bitcast %"class.tint::ast::BoolLiteral"* %58 to void (%"class.tint::ast::BoolLiteral"*)***
  %62 = load void (%"class.tint::ast::BoolLiteral"*)**, void (%"class.tint::ast::BoolLiteral"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.tint::ast::BoolLiteral"*)*, void (%"class.tint::ast::BoolLiteral"*)** %62, i64 1
  %64 = load void (%"class.tint::ast::BoolLiteral"*)*, void (%"class.tint::ast::BoolLiteral"*)** %63, align 8
  call void %64(%"class.tint::ast::BoolLiteral"* nonnull %58) #9
  br label %65

65:                                               ; preds = %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %66 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #9
  ret %"class.tint::ast::BoolLiteral"* %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_3ast11BoolLiteralENS1_7LiteralEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast11BoolLiteralEE4infoE
}

declare void @_ZNK4tint3ast7Literal6to_strERKNS_3sem4InfoERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEm(%"class.tint::ast::Literal"*, %"class.tint::sem::Info"* dereferenceable(40), %"class.std::__1::basic_ostream"* dereferenceable(160), i64) unnamed_addr #3

declare void @_ZN4tint3ast7LiteralC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Literal"*, i32, %"class.tint::Source"* dereferenceable(64)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4tint3ast7LiteralD2Ev(%"class.tint::ast::Literal"*) unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_11BoolLiteralENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.64"*, %"class.std::__1::unique_ptr.286"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.66"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.64"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.64"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.66"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.66"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.66"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.66"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.286"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.286"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.tint::ast::BoolLiteral"* null, %"class.tint::ast::BoolLiteral"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.66"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.66"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.66"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.66"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.tint::ast::Node"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.66"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.66"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.66"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.66"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !6

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.66"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.66"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.66"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.66"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.66"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.66"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.66"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.66"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.66"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.66"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.66"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.66"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.66"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.66"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.66"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.66"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.66"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.66"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.66"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.66"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.66"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.66"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.66"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.66"*, %"class.std::__1::unique_ptr.66"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.66"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.66"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.66"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.66"*
  %138 = icmp eq %"class.std::__1::unique_ptr.66"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.66"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.tint::ast::Node"*, %"class.tint::ast::Node"** %142, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %142, align 8
  %144 = icmp eq %"class.tint::ast::Node"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.tint::ast::Node"* %143 to void (%"class.tint::ast::Node"*)***
  %147 = load void (%"class.tint::ast::Node"*)**, void (%"class.tint::ast::Node"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.tint::ast::Node"*)*, void (%"class.tint::ast::Node"*)** %147, i64 1
  %149 = load void (%"class.tint::ast::Node"*)*, void (%"class.tint::ast::Node"*)** %148, align 8
  tail call void %149(%"class.tint::ast::Node"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.66"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4tint12CloneContext5CloneERKNS_6SourceE: argument 0"}
!5 = distinct !{!5, !"_ZNK4tint12CloneContext5CloneERKNS_6SourceE"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
