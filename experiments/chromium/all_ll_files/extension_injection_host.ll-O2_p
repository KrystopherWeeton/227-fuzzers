; ModuleID = '../../extensions/renderer/extension_injection_host.cc'
source_filename = "../../extensions/renderer/extension_injection_host.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ExtensionInjectionHost" = type { %class.InjectionHost, %"class.extensions::Extension"* }
%class.InjectionHost = type { i32 (...)**, %"class.extensions::mojom::HostID" }
%"class.extensions::mojom::HostID" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.82", %"class.std::__1::map.123", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type { i32 (...)**, %"class.std::__1::basic_string", i32, i32, %"class.base::Lock", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.absl::optional", %"class.std::__1::map.44", %"class.std::__1::unique_ptr.55" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.extensions::PermissionSet"* }
%"class.extensions::PermissionSet" = type { %"class.extensions::APIPermissionSet", %"class.extensions::ManifestPermissionSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", i32, i32 }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.extensions::ManifestPermissionSet" = type { %"class.extensions::BaseSetOperators.28" }
%"class.extensions::BaseSetOperators.28" = type { %"class.std::__1::map.29" }
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.43 }
%union.anon.43 = type { i32 }
%"class.std::__1::map.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.base::ThreadChecker"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.64" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.69" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i32*, i32*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i32* }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.88" }
%"union.absl::variant_internal::DestructibleUnionImpl.88" = type { %"union.absl::variant_internal::DestructibleUnionImpl.89" }
%"union.absl::variant_internal::DestructibleUnionImpl.89" = type { %"union.absl::variant_internal::DestructibleUnionImpl.90" }
%"union.absl::variant_internal::DestructibleUnionImpl.90" = type { %"union.absl::variant_internal::DestructibleUnionImpl.91" }
%"union.absl::variant_internal::DestructibleUnionImpl.91" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.123" = type { %"class.std::__1::__tree.124" }
%"class.std::__1::__tree.124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.extensions::RendererExtensionRegistry" = type { %"class.extensions::ExtensionSet", %"class.std::__1::map.147", %"class.base::Lock" }
%"class.extensions::ExtensionSet" = type { %"class.std::__1::map.138" }
%"class.std::__1::map.138" = type { %"class.std::__1::__tree.139" }
%"class.std::__1::__tree.139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::map.147" = type { %"class.std::__1::__tree.148" }
%"class.std::__1::__tree.148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.162", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.162" = type { %"class.std::__1::__tree.163" }
%"class.std::__1::__tree.163" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN10extensions22ExtensionInjectionHostE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ExtensionInjectionHost"*)* @_ZN10extensions22ExtensionInjectionHostD2Ev to i8*), i8* bitcast (void (%"class.extensions::ExtensionInjectionHost"*)* @_ZN10extensions22ExtensionInjectionHostD0Ev to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.extensions::ExtensionInjectionHost"*)* @_ZNK10extensions22ExtensionInjectionHost24GetContentSecurityPolicyEv to i8*), i8* bitcast (%class.GURL* (%"class.extensions::ExtensionInjectionHost"*)* @_ZNK10extensions22ExtensionInjectionHost3urlEv to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.extensions::ExtensionInjectionHost"*)* @_ZNK10extensions22ExtensionInjectionHost4nameEv to i8*), i8* bitcast (i32 (%"class.extensions::ExtensionInjectionHost"*, %class.GURL*, %"class.content::RenderFrame"*, i32, i1)* @_ZNK10extensions22ExtensionInjectionHost17CanExecuteOnFrameERK4GURLPN7content11RenderFrameEib to i8*)] }, align 8
@_ZN10extensions16kExtensionSchemeE = external constant [0 x i8], align 1

@_ZN10extensions22ExtensionInjectionHostC1EPKNS_9ExtensionE = hidden unnamed_addr alias void (%"class.extensions::ExtensionInjectionHost"*, %"class.extensions::Extension"*), void (%"class.extensions::ExtensionInjectionHost"*, %"class.extensions::Extension"*)* @_ZN10extensions22ExtensionInjectionHostC2EPKNS_9ExtensionE
@_ZN10extensions22ExtensionInjectionHostD1Ev = hidden unnamed_addr alias void (%"class.extensions::ExtensionInjectionHost"*), void (%"class.extensions::ExtensionInjectionHost"*)* @_ZN10extensions22ExtensionInjectionHostD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionInjectionHostC2EPKNS_9ExtensionE(%"class.extensions::ExtensionInjectionHost"*, %"class.extensions::Extension"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.extensions::mojom::HostID", align 8
  %4 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 0
  %5 = bitcast %"class.extensions::mojom::HostID"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #9
  call void @_ZN10extensions5mojom6HostIDC1ENS0_15HostID_HostTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.extensions::mojom::HostID"* nonnull %3, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %6) #9
  call void @_ZN13InjectionHostC2ERKN10extensions5mojom6HostIDE(%class.InjectionHost* %4, %"class.extensions::mojom::HostID"* nonnull dereferenceable(32) %3) #9
  call void @_ZN10extensions5mojom6HostIDD1Ev(%"class.extensions::mojom::HostID"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  %7 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions22ExtensionInjectionHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 1
  store %"class.extensions::Extension"* %1, %"class.extensions::Extension"** %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #2

declare void @_ZN10extensions5mojom6HostIDC1ENS0_15HostID_HostTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.extensions::mojom::HostID"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN13InjectionHostC2ERKN10extensions5mojom6HostIDE(%class.InjectionHost*, %"class.extensions::mojom::HostID"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions5mojom6HostIDD1Ev(%"class.extensions::mojom::HostID"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN13InjectionHostD2Ev(%class.InjectionHost*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionInjectionHostD2Ev(%"class.extensions::ExtensionInjectionHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 0
  tail call void @_ZN13InjectionHostD2Ev(%class.InjectionHost* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions22ExtensionInjectionHostD0Ev(%"class.extensions::ExtensionInjectionHost"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 0
  tail call void @_ZN13InjectionHostD2Ev(%class.InjectionHost* %2) #9
  %3 = bitcast %"class.extensions::ExtensionInjectionHost"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.InjectionHost* @_ZN10extensions22ExtensionInjectionHost6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.extensions::mojom::HostID", align 8
  %3 = tail call %"class.extensions::RendererExtensionRegistry"* @_ZN10extensions25RendererExtensionRegistry3GetEv() #9
  %4 = tail call %"class.extensions::Extension"* @_ZNK10extensions25RendererExtensionRegistry7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::RendererExtensionRegistry"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %0) #9
  %5 = icmp eq %"class.extensions::Extension"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 48) #10
  %8 = bitcast i8* %7 to %class.InjectionHost*
  %9 = bitcast %"class.extensions::mojom::HostID"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #9
  %10 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* nonnull %4) #9
  call void @_ZN10extensions5mojom6HostIDC1ENS0_15HostID_HostTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.extensions::mojom::HostID"* nonnull %2, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %10) #9
  call void @_ZN13InjectionHostC2ERKN10extensions5mojom6HostIDE(%class.InjectionHost* nonnull %8, %"class.extensions::mojom::HostID"* nonnull dereferenceable(32) %2) #9
  call void @_ZN10extensions5mojom6HostIDD1Ev(%"class.extensions::mojom::HostID"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #9
  %11 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions22ExtensionInjectionHostE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 40
  %13 = bitcast i8* %12 to %"class.extensions::Extension"**
  store %"class.extensions::Extension"* %4, %"class.extensions::Extension"** %13, align 8
  br label %14

14:                                               ; preds = %1, %6
  %15 = phi %class.InjectionHost* [ %8, %6 ], [ null, %1 ]
  ret %class.InjectionHost* %15
}

declare %"class.extensions::RendererExtensionRegistry"* @_ZN10extensions25RendererExtensionRegistry3GetEv() local_unnamed_addr #2

declare %"class.extensions::Extension"* @_ZNK10extensions25RendererExtensionRegistry7GetByIDERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::RendererExtensionRegistry"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::basic_string"* @_ZNK10extensions22ExtensionInjectionHost24GetContentSecurityPolicyEv(%"class.extensions::ExtensionInjectionHost"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 1
  %3 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %2, align 8
  %4 = tail call %"class.std::__1::basic_string"* @_ZN10extensions7CSPInfo19GetIsolatedWorldCSPERKNS_9ExtensionE(%"class.extensions::Extension"* dereferenceable(472) %3) #9
  ret %"class.std::__1::basic_string"* %4
}

declare %"class.std::__1::basic_string"* @_ZN10extensions7CSPInfo19GetIsolatedWorldCSPERKNS_9ExtensionE(%"class.extensions::Extension"* dereferenceable(472)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK10extensions22ExtensionInjectionHost3urlEv(%"class.extensions::ExtensionInjectionHost"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 1
  %3 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %3, i64 0, i32 10
  ret %class.GURL* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions22ExtensionInjectionHost4nameEv(%"class.extensions::ExtensionInjectionHost"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 1
  %3 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %2, align 8
  %4 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %3, i64 0, i32 1
  ret %"class.std::__1::basic_string"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10extensions22ExtensionInjectionHost17CanExecuteOnFrameERK4GURLPN7content11RenderFrameEib(%"class.extensions::ExtensionInjectionHost"* nocapture readonly, %class.GURL* dereferenceable(120), %"class.content::RenderFrame"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::WebSecurityOrigin", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::WebString", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.blink::WebString", align 8
  %11 = bitcast %"class.blink::WebSecurityOrigin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.blink::WebSecurityOrigin", %"class.blink::WebSecurityOrigin"* %6, i64 0, i32 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = bitcast %"class.content::RenderFrame"* %2 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %14 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %14, i64 15
  %16 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %15, align 8
  %17 = tail call %"class.blink::WebLocalFrame"* %16(%"class.content::RenderFrame"* %2) #9
  %18 = getelementptr inbounds %"class.blink::WebLocalFrame", %"class.blink::WebLocalFrame"* %17, i64 0, i32 0
  %19 = tail call %"class.blink::WebFrame"* @_ZNK5blink8WebFrame3TopEv(%"class.blink::WebFrame"* %18) #9
  call void @_ZNK5blink8WebFrame17GetSecurityOriginEv(%"class.blink::WebSecurityOrigin"* nonnull sret %6, %"class.blink::WebFrame"* %19) #9
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #9
  %21 = bitcast %"class.blink::WebString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZNK5blink17WebSecurityOrigin8ProtocolEv(%"class.blink::WebString"* nonnull sret %8, %"class.blink::WebSecurityOrigin"* nonnull %6) #9
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.blink::WebString"* nonnull %8, i32 0) #9
  %22 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0)) #9
  %23 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp eq i64 %22, %30
  br i1 %31, label %32, label %107

32:                                               ; preds = %5
  %33 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %7, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions16kExtensionSchemeE, i64 0, i64 0), i64 %22) #9
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %107

35:                                               ; preds = %32
  %36 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  %37 = bitcast %"class.blink::WebString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  call void @_ZNK5blink17WebSecurityOrigin4HostEv(%"class.blink::WebString"* nonnull sret %10, %"class.blink::WebSecurityOrigin"* nonnull %6) #9
  call void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.blink::WebString"* nonnull %10, i32 0) #9
  %38 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 1
  %39 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %38, align 8
  %40 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %39) #9
  %41 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %48, %56
  br i1 %57, label %58, label %89

58:                                               ; preds = %35
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = select i1 %44, i8* %60, i8* %36
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %65 = select i1 %52, i8* %63, i8* %64
  %66 = icmp eq i64 %48, 0
  br i1 %44, label %73, label %67

67:                                               ; preds = %58
  br i1 %66, label %105, label %68

68:                                               ; preds = %67
  %69 = ptrtoint i8* %60 to i64
  %70 = trunc i64 %69 to i8
  %71 = load i8, i8* %65, align 1
  %72 = icmp eq i8 %71, %70
  br i1 %72, label %74, label %89

73:                                               ; preds = %58
  br i1 %66, label %101, label %86

74:                                               ; preds = %68, %81
  %75 = phi i64 [ %78, %81 ], [ %47, %68 ]
  %76 = phi i8* [ %79, %81 ], [ %36, %68 ]
  %77 = phi i8* [ %82, %81 ], [ %65, %68 ]
  %78 = add i64 %75, -1
  %79 = getelementptr inbounds i8, i8* %76, i64 1
  %80 = icmp eq i64 %78, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds i8, i8* %77, i64 1
  %83 = load i8, i8* %79, align 1
  %84 = load i8, i8* %82, align 1
  %85 = icmp eq i8 %83, %84
  br i1 %85, label %74, label %89

86:                                               ; preds = %73
  %87 = call i32 @bcmp(i8* %61, i8* %65, i64 %48) #9
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %81, %68, %86, %35
  %90 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %38, align 8
  %91 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %90) #9
  %92 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %38, align 8
  %93 = call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %92) #9
  %94 = call zeroext i1 @_ZN10extensions15PermissionsData26CanExecuteScriptEverywhereERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5mojom16ManifestLocationE(%"class.std::__1::basic_string"* dereferenceable(24) %91, i32 %93) #9
  %95 = xor i1 %94, true
  %96 = load i8, i8* %42, align 1
  br label %97

97:                                               ; preds = %74, %89
  %98 = phi i8 [ %96, %89 ], [ %43, %74 ]
  %99 = phi i1 [ %95, %89 ], [ false, %74 ]
  %100 = icmp slt i8 %98, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %73, %86, %97
  %102 = phi i1 [ %99, %97 ], [ false, %86 ], [ false, %73 ]
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %67, %97, %101
  %106 = phi i1 [ %99, %97 ], [ %102, %101 ], [ false, %67 ]
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  br label %107

107:                                              ; preds = %5, %32, %105
  %108 = phi i1 [ %106, %105 ], [ false, %32 ], [ false, %5 ]
  %109 = load i8, i8* %24, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %113) #10
  br label %114

114:                                              ; preds = %107, %111
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #9
  br i1 %108, label %138, label %115

115:                                              ; preds = %114
  %116 = getelementptr inbounds %"class.extensions::ExtensionInjectionHost", %"class.extensions::ExtensionInjectionHost"* %0, i64 0, i32 1
  %117 = load %"class.extensions::Extension"*, %"class.extensions::Extension"** %116, align 8
  %118 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %117, i64 0, i32 8, i32 0, i32 0, i32 0
  %119 = load %"class.extensions::PermissionsData"*, %"class.extensions::PermissionsData"** %118, align 8
  br i1 %4, label %120, label %122

120:                                              ; preds = %115
  %121 = call i32 @_ZNK10extensions15PermissionsData13GetPageAccessERK4GURLiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::PermissionsData"* %119, %class.GURL* dereferenceable(120) %1, i32 %3, %"class.std::__1::basic_string"* null) #9
  br label %124

122:                                              ; preds = %115
  %123 = call i32 @_ZNK10extensions15PermissionsData22GetContentScriptAccessERK4GURLiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::PermissionsData"* %119, %class.GURL* dereferenceable(120) %1, i32 %3, %"class.std::__1::basic_string"* null) #9
  br label %124

124:                                              ; preds = %122, %120
  %125 = phi i32 [ %121, %120 ], [ %123, %122 ]
  %126 = icmp eq i32 %125, 2
  br i1 %126, label %127, label %138

127:                                              ; preds = %124
  %128 = icmp eq i32 %3, -1
  br i1 %128, label %137, label %129

129:                                              ; preds = %127
  %130 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %13, align 8
  %131 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %130, i64 15
  %132 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %131, align 8
  %133 = call %"class.blink::WebLocalFrame"* %132(%"class.content::RenderFrame"* %2) #9
  %134 = getelementptr inbounds %"class.blink::WebLocalFrame", %"class.blink::WebLocalFrame"* %133, i64 0, i32 0
  %135 = call %"class.blink::WebFrame"* @_ZNK5blink8WebFrame6ParentEv(%"class.blink::WebFrame"* %134) #9
  %136 = icmp eq %"class.blink::WebFrame"* %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %129, %127
  br label %138

138:                                              ; preds = %124, %137, %129, %114
  %139 = phi i32 [ 0, %114 ], [ 0, %137 ], [ 2, %129 ], [ %125, %124 ]
  call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  ret i32 %139
}

declare %"class.blink::WebFrame"* @_ZNK5blink8WebFrame3TopEv(%"class.blink::WebFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink8WebFrame17GetSecurityOriginEv(%"class.blink::WebSecurityOrigin"* sret, %"class.blink::WebFrame"*) local_unnamed_addr #2

declare void @_ZNK5blink17WebSecurityOrigin8ProtocolEv(%"class.blink::WebString"* sret, %"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare void @_ZNK5blink9WebString4Utf8ENS0_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.blink::WebString"*, i32) local_unnamed_addr #2

declare void @_ZNK5blink17WebSecurityOrigin4HostEv(%"class.blink::WebString"* sret, %"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare zeroext i1 @_ZN10extensions15PermissionsData26CanExecuteScriptEverywhereERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_5mojom16ManifestLocationE(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

declare i32 @_ZNK10extensions15PermissionsData13GetPageAccessERK4GURLiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::PermissionsData"*, %class.GURL* dereferenceable(120), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare i32 @_ZNK10extensions15PermissionsData22GetContentScriptAccessERK4GURLiPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::PermissionsData"*, %class.GURL* dereferenceable(120), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare %"class.blink::WebFrame"* @_ZNK5blink8WebFrame6ParentEv(%"class.blink::WebFrame"*) local_unnamed_addr #2

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
