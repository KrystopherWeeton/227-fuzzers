; ModuleID = '../../net/filter/filter_source_stream.cc'
source_filename = "../../net/filter/filter_source_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::FilterSourceStream" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.2, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8, [7 x i8] }>
%"class.net::SourceStream.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SourceStream"* }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%class.scoped_refptr.2 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3net18FilterSourceStreamE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::FilterSourceStream"*)* @_ZN3net18FilterSourceStreamD2Ev to i8*), i8* bitcast (void (%"class.net::FilterSourceStream"*)* @_ZN3net18FilterSourceStreamD0Ev to i8*), i8* bitcast (i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream11DescriptionEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream12NeedMoreDataEv to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZN3net12_GLOBAL__N_17kBrotliE = internal constant [3 x i8] c"br\00", align 1
@_ZN3net12_GLOBAL__N_18kDeflateE = internal constant [8 x i8] c"deflate\00", align 1
@_ZN3net12_GLOBAL__N_15kGZipE = internal constant [5 x i8] c"gzip\00", align 1
@_ZN3net12_GLOBAL__N_16kXGZipE = internal constant [7 x i8] c"x-gzip\00", align 1

@_ZN3net18FilterSourceStreamD1Ev = hidden unnamed_addr alias void (%"class.net::FilterSourceStream"*), void (%"class.net::FilterSourceStream"*)* @_ZN3net18FilterSourceStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"*, i32, %"class.net::SourceStream"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.net::SourceStream"* %2 to i64
  %5 = bitcast %"class.net::FilterSourceStream"* %0 to %"class.net::SourceStream"*
  tail call void @_ZN3net12SourceStreamC2ENS0_10SourceTypeE(%"class.net::SourceStream"* %5, i32 %1) #10
  %6 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net18FilterSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 5, i32 0
  %11 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %12 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 11
  store i8 0, i8* %12, align 8
  %13 = bitcast %"class.net::IOBuffer"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 28, i1 false)
  ret void
}

declare void @_ZN3net12SourceStreamC2ENS0_10SourceTypeE(%"class.net::SourceStream"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net18FilterSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 7, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #10
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 6, i32 0
  %21 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %20, align 8
  %22 = icmp eq %"class.net::DrainableIOBuffer"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %21, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.net::IOBuffer"*
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %29 to void (%"class.net::IOBuffer"*)***
  %32 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %32, i64 1
  %34 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %33, align 8
  tail call void %34(%"class.net::IOBuffer"* nonnull %30) #10
  br label %35

35:                                               ; preds = %19, %23, %28
  %36 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 5, i32 0
  %37 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %36, align 8
  %38 = icmp eq %"class.net::IOBuffer"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %37, i64 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %51

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %40, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %45 to %"class.net::IOBuffer"*
  %47 = bitcast %"class.base::RefCountedThreadSafe"* %45 to void (%"class.net::IOBuffer"*)***
  %48 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %48, i64 1
  %50 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %49, align 8
  tail call void %50(%"class.net::IOBuffer"* nonnull %46) #10
  br label %51

51:                                               ; preds = %35, %39, %44
  %52 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.net::SourceStream"*, %"class.net::SourceStream"** %52, align 8
  store %"class.net::SourceStream"* null, %"class.net::SourceStream"** %52, align 8
  %54 = icmp eq %"class.net::SourceStream"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.net::SourceStream"* %53 to void (%"class.net::SourceStream"*)***
  %57 = load void (%"class.net::SourceStream"*)**, void (%"class.net::SourceStream"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.net::SourceStream"*)*, void (%"class.net::SourceStream"*)** %57, i64 1
  %59 = load void (%"class.net::SourceStream"*)*, void (%"class.net::SourceStream"*)** %58, align 8
  tail call void %59(%"class.net::SourceStream"* nonnull %53) #10
  br label %60

60:                                               ; preds = %51, %55
  %61 = bitcast %"class.net::FilterSourceStream"* %0 to %"class.net::SourceStream"*
  tail call void @_ZN3net12SourceStreamD2Ev(%"class.net::SourceStream"* %61) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net12SourceStreamD2Ev(%"class.net::SourceStream"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net18FilterSourceStreamD0Ev(%"class.net::FilterSourceStream"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %6, align 8
  %8 = icmp eq %"class.net::IOBuffer"* %7, null
  br i1 %8, label %9, label %31

9:                                                ; preds = %4
  %10 = tail call i8* @_Znwm(i64 32) #12
  %11 = bitcast i8* %10 to %"class.net::IOBufferWithSize"*
  tail call void @_ZN3net16IOBufferWithSizeC1Em(%"class.net::IOBufferWithSize"* nonnull %11, i64 32768) #10
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  %15 = ptrtoint i8* %10 to i64
  %16 = bitcast %class.scoped_refptr* %5 to i64*
  %17 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %6, align 8
  store i64 %15, i64* %16, align 8
  %18 = icmp eq %"class.net::IOBuffer"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %17, i64 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.net::IOBuffer"*
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %25 to void (%"class.net::IOBuffer"*)***
  %28 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %28, i64 1
  %30 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %29, align 8
  tail call void %30(%"class.net::IOBuffer"* nonnull %26) #10
  br label %31

31:                                               ; preds = %4, %9, %19, %24
  %32 = phi i32 [ 1, %24 ], [ 1, %19 ], [ 1, %9 ], [ 3, %4 ]
  %33 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 3
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 7
  %35 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic
  br label %39

39:                                               ; preds = %36, %31
  %40 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %41 = bitcast %class.scoped_refptr* %34 to i64*
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %34, i64 0, i32 0
  %43 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %42, align 8
  store i64 %40, i64* %41, align 8
  %44 = icmp eq %"class.net::IOBuffer"* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %43, i64 0, i32 1
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %51 to %"class.net::IOBuffer"*
  %53 = bitcast %"class.base::RefCountedThreadSafe"* %51 to void (%"class.net::IOBuffer"*)***
  %54 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %54, i64 1
  %56 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %55, align 8
  tail call void %56(%"class.net::IOBuffer"* nonnull %52) #10
  br label %57

57:                                               ; preds = %39, %45, %50
  %58 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 8
  store i32 %2, i32* %58, align 8
  %59 = tail call i32 @_ZN3net18FilterSourceStream6DoLoopEi(%"class.net::FilterSourceStream"* %0, i32 0)
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 10, i32 0
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %64 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %62, %"class.base::internal::CallbackBase"* dereferenceable(8) %63) #10
  br label %65

65:                                               ; preds = %61, %57
  ret i32 %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net18FilterSourceStream6DoLoopEi(%"class.net::FilterSourceStream"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 3
  %6 = bitcast i32* %3 to i8*
  %7 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 7, i32 0
  %8 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 6, i32 0
  %10 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 11
  %11 = bitcast %"class.net::FilterSourceStream"* %0 to i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)***
  %12 = bitcast %"class.net::FilterSourceStream"* %0 to i1 (%"class.net::FilterSourceStream"*)***
  %13 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 6
  %15 = bitcast %class.scoped_refptr.2* %14 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %14, i64 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %18 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = ptrtoint %"class.net::FilterSourceStream"* %0 to i64
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8**
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %22 = load i32, i32* %5, align 8
  br label %23

23:                                               ; preds = %102, %2
  %24 = phi i32 [ %22, %2 ], [ %103, %102 ]
  %25 = phi i32 [ %1, %2 ], [ %104, %102 ]
  store i32 0, i32* %5, align 8
  switch i32 %24, label %106 [
    i32 1, label %26
    i32 2, label %40
    i32 3, label %72
  ]

26:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i32 2, i32* %5, align 8
  %27 = load %"class.net::SourceStream"*, %"class.net::SourceStream"** %18, align 8
  %28 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %13, align 8
  %29 = call i8* @_Znwm(i64 56) #12, !noalias !2
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %31 = getelementptr inbounds i8, i8* %29, i64 32
  %32 = bitcast i8* %31 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::FilterSourceStream"*, i32)* @_ZN3net18FilterSourceStream12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %32, align 8, !noalias !2
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %19, i64* %34, align 8, !noalias !2
  store i8* %29, i8** %20, align 8, !alias.scope !2
  %35 = bitcast %"class.net::SourceStream"* %27 to i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %36 = load i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %35, align 8
  %37 = getelementptr inbounds i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %36, i64 2
  %38 = load i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %37, align 8
  %39 = call i32 %38(%"class.net::SourceStream"* %27, %"class.net::IOBuffer"* %28, i32 32768, %"class.base::OnceCallback"* nonnull %4) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %97

40:                                               ; preds = %23
  %41 = icmp sgt i32 %25, -1
  br i1 %41, label %42, label %71

42:                                               ; preds = %40
  %43 = call i8* @_Znwm(i64 40) #12
  %44 = bitcast i8* %43 to %"class.net::DrainableIOBuffer"*
  %45 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %13, align 8
  %46 = icmp eq %"class.net::IOBuffer"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  br label %50

50:                                               ; preds = %47, %42
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %44, %"class.net::IOBuffer"* %45, i32 %25) #10
  %51 = getelementptr inbounds i8, i8* %43, i64 8
  %52 = bitcast i8* %51 to i32*
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = ptrtoint i8* %43 to i64
  %55 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %16, align 8
  store i64 %54, i64* %15, align 8
  %56 = icmp eq %"class.net::DrainableIOBuffer"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %55, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %58, i64 -2
  %64 = bitcast %"class.base::RefCountedThreadSafe"* %63 to %"class.net::IOBuffer"*
  %65 = bitcast %"class.base::RefCountedThreadSafe"* %63 to void (%"class.net::IOBuffer"*)***
  %66 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %66, i64 1
  %68 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %67, align 8
  call void %68(%"class.net::IOBuffer"* nonnull %64) #10
  br label %69

69:                                               ; preds = %62, %57, %50
  store i32 3, i32* %5, align 8
  %70 = icmp slt i32 %25, 1
  br i1 %70, label %71, label %102

71:                                               ; preds = %69, %40
  store i8 1, i8* %10, align 8
  br label %97

72:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  store i32 0, i32* %3, align 4
  %73 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %7, align 8
  %74 = load i32, i32* %8, align 8
  %75 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %9, align 8
  %76 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %75, i64 0, i32 0
  %77 = call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %75) #10
  %78 = load i8, i8* %10, align 8, !range !7
  %79 = icmp ne i8 %78, 0
  %80 = load i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)**, i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*** %11, align 8
  %81 = getelementptr inbounds i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*, i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)** %80, i64 5
  %82 = load i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*, i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)** %81, align 8
  %83 = call i32 %82(%"class.net::FilterSourceStream"* %0, %"class.net::IOBuffer"* %73, i32 %74, %"class.net::IOBuffer"* %76, i32 %77, i32* nonnull %3, i1 zeroext %79) #10
  %84 = load i32, i32* %3, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %72
  %87 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %9, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %87, i32 %84) #10
  br label %88

88:                                               ; preds = %86, %72
  %89 = icmp eq i32 %83, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %88
  %91 = load i1 (%"class.net::FilterSourceStream"*)**, i1 (%"class.net::FilterSourceStream"*)*** %12, align 8
  %92 = getelementptr inbounds i1 (%"class.net::FilterSourceStream"*)*, i1 (%"class.net::FilterSourceStream"*)** %91, i64 7
  %93 = load i1 (%"class.net::FilterSourceStream"*)*, i1 (%"class.net::FilterSourceStream"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.net::FilterSourceStream"* %0) #10
  br i1 %94, label %95, label %96

95:                                               ; preds = %90
  store i32 1, i32* %5, align 8
  br label %96

96:                                               ; preds = %88, %90, %95
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  br label %97

97:                                               ; preds = %71, %96, %26
  %98 = phi i32 [ %83, %96 ], [ %39, %26 ], [ %25, %71 ]
  %99 = icmp eq i32 %98, -1
  br i1 %99, label %106, label %100

100:                                              ; preds = %97
  %101 = load i32, i32* %5, align 8
  br label %102

102:                                              ; preds = %100, %69
  %103 = phi i32 [ %101, %100 ], [ 3, %69 ]
  %104 = phi i32 [ %98, %100 ], [ %25, %69 ]
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %106, label %23

106:                                              ; preds = %23, %102, %97
  %107 = phi i32 [ %104, %102 ], [ -1, %97 ], [ -9, %23 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net18FilterSourceStream11DescriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::FilterSourceStream"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %"class.net::SourceStream"*, %"class.net::SourceStream"** %9, align 8
  %12 = bitcast %"class.net::SourceStream"* %11 to void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)***
  %13 = load void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)**, void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)** %13, i64 3
  %15 = load void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)*, void (%"class.std::__1::basic_string"*, %"class.net::SourceStream"*)** %14, align 8
  call void %15(%"class.std::__1::basic_string"* nonnull sret %3, %"class.net::SourceStream"* %11) #10
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i64, i64* %8, align 8
  %21 = zext i8 %18 to i64
  %22 = select i1 %19, i64 %20, i64 %21
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = bitcast %"class.net::FilterSourceStream"* %1 to void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)***
  %26 = load void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)**, void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)*, void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)** %26, i64 6
  %28 = load void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)*, void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)** %27, align 8
  call void %28(%"class.std::__1::basic_string"* sret %0, %"class.net::FilterSourceStream"* %1) #10
  br label %86

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #10, !alias.scope !8
  %34 = load i8*, i8** %7, align 8
  %35 = select i1 %19, i8* %34, i8* %6
  %36 = add i64 %22, 1
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #11
  unreachable

40:                                               ; preds = %29
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %42, label %46

42:                                               ; preds = %40
  %43 = trunc i64 %22 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1, !alias.scope !8
  br label %51

46:                                               ; preds = %40
  %47 = add nuw i64 %22, 17
  %48 = and i64 %47, -16
  %49 = call i8* @_Znwm(i64 %48) #12
  store i8* %49, i8** %31, align 8, !alias.scope !8
  %50 = or i64 %48, -9223372036854775808
  store i64 %50, i64* %33, align 8, !alias.scope !8
  store i64 %22, i64* %32, align 8, !alias.scope !8
  br label %51

51:                                               ; preds = %46, %42
  %52 = phi i8* [ %30, %42 ], [ %49, %46 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 %35, i64 %22, i1 false) #10
  %53 = getelementptr inbounds i8, i8* %52, i64 %22
  store i8 0, i8* %53, align 1
  %54 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #10
  %55 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #10
  %56 = bitcast %"class.net::FilterSourceStream"* %1 to void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)***
  %57 = load void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)**, void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)*, void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)** %57, i64 6
  %59 = load void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)*, void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)** %58, align 8
  call void %59(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::FilterSourceStream"* %1) #10
  %60 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1, !noalias !11
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8, !noalias !11
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8, !noalias !11
  %68 = zext i8 %62 to i64
  %69 = select i1 %63, i8* %65, i8* %55
  %70 = select i1 %63, i64 %67, i64 %68
  %71 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %69, i64 %70) #10, !noalias !11
  %72 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #10, !noalias !11
  %74 = load i8, i8* %61, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %51
  %77 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %77) #12
  br label %78

78:                                               ; preds = %51, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #10
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %78, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  br label %86

86:                                               ; preds = %85, %24
  %87 = load i8, i8* %17, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv(%"class.net::FilterSourceStream"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net18FilterSourceStream17ParseEncodingTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %45, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = select i1 %5, i8* %13, i8* %14
  %16 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %15, i64 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN3net12_GLOBAL__N_17kBrotliE, i64 0, i64 0), i64 2) #10
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = load i8, i8* %3, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %12, align 8
  %21 = select i1 %19, i8* %20, i8* %14
  %22 = load i64, i64* %6, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %21, i64 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN3net12_GLOBAL__N_18kDeflateE, i64 0, i64 0), i64 7) #10
  br i1 %25, label %45, label %26

26:                                               ; preds = %17
  %27 = load i8, i8* %3, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %12, align 8
  %30 = select i1 %28, i8* %29, i8* %14
  %31 = load i64, i64* %6, align 8
  %32 = zext i8 %27 to i64
  %33 = select i1 %28, i64 %31, i64 %32
  %34 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %30, i64 %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN3net12_GLOBAL__N_15kGZipE, i64 0, i64 0), i64 4) #10
  br i1 %34, label %45, label %35

35:                                               ; preds = %26
  %36 = load i8, i8* %3, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %12, align 8
  %39 = select i1 %37, i8* %38, i8* %14
  %40 = load i64, i64* %6, align 8
  %41 = zext i8 %36 to i64
  %42 = select i1 %37, i64 %40, i64 %41
  %43 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %39, i64 %42, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN3net12_GLOBAL__N_16kXGZipE, i64 0, i64 0), i64 6) #10
  %44 = select i1 %43, i32 2, i32 3
  ret i32 %44

45:                                               ; preds = %26, %17, %11, %1
  %46 = phi i32 [ 4, %1 ], [ 0, %11 ], [ 1, %17 ], [ 2, %26 ]
  ret i32 %46
}

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net18FilterSourceStream10DoReadDataEv(%"class.net::FilterSourceStream"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 3
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.net::SourceStream"*, %"class.net::SourceStream"** %4, align 8
  %6 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %6, align 8
  %8 = ptrtoint %"class.net::FilterSourceStream"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 56) #12, !noalias !14
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !14
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::FilterSourceStream"*, i32)* @_ZN3net18FilterSourceStream12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !14
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8, !noalias !14
  %15 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %9, i8** %15, align 8, !alias.scope !14
  %16 = bitcast %"class.net::SourceStream"* %5 to i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %17 = load i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %17, i64 2
  %19 = load i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::SourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %18, align 8
  %20 = call i32 %19(%"class.net::SourceStream"* %5, %"class.net::IOBuffer"* %7, i32 32768, %"class.base::OnceCallback"* nonnull %2) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net18FilterSourceStream18DoReadDataCompleteEi(%"class.net::FilterSourceStream"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %38

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 40) #12
  %6 = bitcast i8* %5 to %"class.net::DrainableIOBuffer"*
  %7 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %7, align 8
  %9 = icmp eq %"class.net::IOBuffer"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %4, %10
  tail call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %6, %"class.net::IOBuffer"* %8, i32 %1) #10
  %14 = getelementptr inbounds i8, i8* %5, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 6
  %18 = ptrtoint i8* %5 to i64
  %19 = bitcast %class.scoped_refptr.2* %17 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %17, i64 0, i32 0
  %21 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %20, align 8
  store i64 %18, i64* %19, align 8
  %22 = icmp eq %"class.net::DrainableIOBuffer"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %21, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe"* %29 to %"class.net::IOBuffer"*
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %29 to void (%"class.net::IOBuffer"*)***
  %32 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %32, i64 1
  %34 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %33, align 8
  tail call void %34(%"class.net::IOBuffer"* nonnull %30) #10
  br label %35

35:                                               ; preds = %28, %23, %13
  %36 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 3
  store i32 3, i32* %36, align 8
  %37 = icmp slt i32 %1, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %2, %35
  %39 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 11
  store i8 1, i8* %39, align 8
  br label %40

40:                                               ; preds = %38, %35
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net18FilterSourceStream12DoFilterDataEv(%"class.net::FilterSourceStream"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 7, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 6, i32 0
  %9 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %8, align 8
  %10 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %9, i64 0, i32 0
  %11 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %9) #10
  %12 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 11
  %13 = load i8, i8* %12, align 8, !range !7
  %14 = icmp ne i8 %13, 0
  %15 = bitcast %"class.net::FilterSourceStream"* %0 to i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)***
  %16 = load i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)**, i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*, i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)** %16, i64 5
  %18 = load i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*, i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)** %17, align 8
  %19 = call i32 %18(%"class.net::FilterSourceStream"* %0, %"class.net::IOBuffer"* %5, i32 %7, %"class.net::IOBuffer"* %10, i32 %11, i32* nonnull %2, i1 zeroext %14) #10
  %20 = load i32, i32* %2, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %1
  %23 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %8, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %23, i32 %20) #10
  br label %24

24:                                               ; preds = %22, %1
  %25 = icmp eq i32 %19, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %24
  %27 = bitcast %"class.net::FilterSourceStream"* %0 to i1 (%"class.net::FilterSourceStream"*)***
  %28 = load i1 (%"class.net::FilterSourceStream"*)**, i1 (%"class.net::FilterSourceStream"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.net::FilterSourceStream"*)*, i1 (%"class.net::FilterSourceStream"*)** %28, i64 7
  %30 = load i1 (%"class.net::FilterSourceStream"*)*, i1 (%"class.net::FilterSourceStream"*)** %29, align 8
  %31 = call zeroext i1 %30(%"class.net::FilterSourceStream"* %0) #10
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 3
  store i32 1, i32* %33, align 8
  br label %34

34:                                               ; preds = %26, %32, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18FilterSourceStream12OnIOCompleteEi(%"class.net::FilterSourceStream"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call i32 @_ZN3net18FilterSourceStream6DoLoopEi(%"class.net::FilterSourceStream"* %0, i32 %1)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 7
  %8 = bitcast %class.scoped_refptr* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %10 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %9, align 8
  store i64 0, i64* %8, align 8
  %11 = icmp eq %"class.net::IOBuffer"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %10, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.net::IOBuffer"*
  %20 = bitcast %"class.base::RefCountedThreadSafe"* %18 to void (%"class.net::IOBuffer"*)***
  %21 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %21, i64 1
  %23 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %22, align 8
  tail call void %23(%"class.net::IOBuffer"* nonnull %19) #10
  br label %24

24:                                               ; preds = %6, %12, %17
  %25 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 8
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 10
  %27 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %33 = inttoptr i64 %30 to %"class.base::internal::BindStateBase"*
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*, i32)**
  %36 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %35, align 8
  tail call void %36(%"class.base::internal::BindStateBase"* %33, i32 %4) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %37

37:                                               ; preds = %2, %24
  ret void
}

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #1

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net18FilterSourceStream12NeedMoreDataEv(%"class.net::FilterSourceStream"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::FilterSourceStream", %"class.net::FilterSourceStream"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN3net16IOBufferWithSizeC1Em(%"class.net::IOBufferWithSize"*, i64) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::FilterSourceStream"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::FilterSourceStream"*, i32)**
  %22 = load void (%"class.net::FilterSourceStream"*, i32)*, void (%"class.net::FilterSourceStream"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::FilterSourceStream"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::FilterSourceStream"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::FilterSourceStream"* %13, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN3net18FilterSourceStreamEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN3net18FilterSourceStreamEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net18FilterSourceStreamEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIMN3net18FilterSourceStreamEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIMN3net18FilterSourceStreamEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
