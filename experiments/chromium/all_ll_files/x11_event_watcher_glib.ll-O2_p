; ModuleID = '../../ui/events/platform/x11/x11_event_watcher_glib.cc'
source_filename = "../../ui/events/platform/x11/x11_event_watcher_glib.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._GSourceFuncs = type { i32 (%struct._GSource*, i32*)*, i32 (%struct._GSource*)*, i32 (%struct._GSource*, i32 (i8*)*, i8*)*, void (%struct._GSource*)*, i32 (i8*)*, void ()* }
%struct._GSource = type { i8*, %struct._GSourceCallbackFuncs*, %struct._GSourceFuncs*, i32, %struct._GMainContext*, i32, i32, i32, %struct._GSList*, %struct._GSource*, %struct._GSource*, i8*, %struct._GSourcePrivate* }
%struct._GSourceCallbackFuncs = type { void (i8*)*, void (i8*)*, void (i8*, %struct._GSource*, i32 (i8*)**, i8**)* }
%struct._GMainContext = type opaque
%struct._GSList = type { i8*, %struct._GSList* }
%struct._GSourcePrivate = type opaque
%"class.ui::X11EventWatcherGlib" = type <{ %"class.ui::X11EventWatcher", %"class.ui::X11EventSource"*, %struct._GSource*, %"class.std::__1::unique_ptr.275", i8, [7 x i8] }>
%"class.ui::X11EventWatcher" = type { i32 (...)** }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %struct._GPollFD* }
%struct._GPollFD = type { i32, i16, i16 }
%"class.ui::X11EventSource" = type { %"class.ui::PlatformEventSource", %"class.x11::EventObserver", %"class.std::__1::unique_ptr", %"class.x11::Connection"*, i8, i32, i32, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269" }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.1" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.1" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.2", i64, i32, [4 x i8] }>
%"class.base::LinkedList.2" = type { %"class.base::LinkNode.3" }
%"class.base::LinkNode.3" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.ui::X11EventWatcher"* }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.188", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.194", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.240", %"class.base::circular_deque", %"class.base::ObserverList.246", %"class.x11::Event"*, %"class.base::circular_deque.250", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.262" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.ui::PlatformEventSource"* }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.205", %"class.std::__1::vector.212" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.207" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.214" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.216" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.233" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.246" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.247", i64, i32, [4 x i8] }>
%"class.base::LinkedList.247" = type { %"class.base::LinkNode.248" }
%"class.base::LinkNode.248" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.250" = type { %"class.base::internal::VectorBuffer.251", i64, i64 }
%"class.base::internal::VectorBuffer.251" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.253, %"class.std::__1::unique_ptr.255" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.253 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.254", [4 x i8] }>
%"class.base::RefCountedThreadSafe.254" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.261 }
%union.anon.261 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.262" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.x11::XScopedEventSelector"* }
%"class.x11::XScopedEventSelector" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.ui::X11HotplugEventHandler"* }
%"class.ui::X11HotplugEventHandler" = type opaque

@_ZTVN2ui19X11EventWatcherGlibE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::X11EventWatcherGlib"*)* @_ZN2ui19X11EventWatcherGlibD2Ev to i8*), i8* bitcast (void (%"class.ui::X11EventWatcherGlib"*)* @_ZN2ui19X11EventWatcherGlibD0Ev to i8*), i8* bitcast (void (%"class.ui::X11EventWatcherGlib"*)* @_ZN2ui19X11EventWatcherGlib13StartWatchingEv to i8*), i8* bitcast (void (%"class.ui::X11EventWatcherGlib"*)* @_ZN2ui19X11EventWatcherGlib12StopWatchingEv to i8*)] }, align 8
@_ZN2ui12_GLOBAL__N_112XSourceFuncsE = internal global %struct._GSourceFuncs { i32 (%struct._GSource*, i32*)* @_ZN2ui12_GLOBAL__N_114XSourcePrepareEP8_GSourcePi, i32 (%struct._GSource*)* @_ZN2ui12_GLOBAL__N_112XSourceCheckEP8_GSource, i32 (%struct._GSource*, i32 (i8*)*, i8*)* @_ZN2ui12_GLOBAL__N_115XSourceDispatchEP8_GSourcePFiPvES3_, void (%struct._GSource*)* null, i32 (i8*)* null, void ()* null }, align 8

@_ZN2ui19X11EventWatcherGlibC1EPNS_14X11EventSourceE = hidden unnamed_addr alias void (%"class.ui::X11EventWatcherGlib"*, %"class.ui::X11EventSource"*), void (%"class.ui::X11EventWatcherGlib"*, %"class.ui::X11EventSource"*)* @_ZN2ui19X11EventWatcherGlibC2EPNS_14X11EventSourceE
@_ZN2ui19X11EventWatcherGlibD1Ev = hidden unnamed_addr alias void (%"class.ui::X11EventWatcherGlib"*), void (%"class.ui::X11EventWatcherGlib"*)* @_ZN2ui19X11EventWatcherGlibD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui19X11EventWatcherGlibC2EPNS_14X11EventSourceE(%"class.ui::X11EventWatcherGlib"* nocapture, %"class.ui::X11EventSource"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui19X11EventWatcherGlibE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 1
  store %"class.ui::X11EventSource"* %1, %"class.ui::X11EventSource"** %4, align 8
  %5 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 2
  %6 = bitcast %struct._GSource** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19X11EventWatcherGlibD2Ev(%"class.ui::X11EventWatcherGlib"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui19X11EventWatcherGlibE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 2
  %8 = load %struct._GSource*, %struct._GSource** %7, align 8
  tail call void @g_source_destroy(%struct._GSource* %8) #6
  %9 = load %struct._GSource*, %struct._GSource** %7, align 8
  tail call void @g_source_unref(%struct._GSource* %9) #6
  store i8 0, i8* %3, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %struct._GPollFD*, %struct._GPollFD** %11, align 8
  store %struct._GPollFD* null, %struct._GPollFD** %11, align 8
  %13 = icmp eq %struct._GPollFD* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %struct._GPollFD* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19X11EventWatcherGlibD0Ev(%"class.ui::X11EventWatcherGlib"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2ui19X11EventWatcherGlibE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 2
  %8 = load %struct._GSource*, %struct._GSource** %7, align 8
  tail call void @g_source_destroy(%struct._GSource* %8) #6
  %9 = load %struct._GSource*, %struct._GSource** %7, align 8
  tail call void @g_source_unref(%struct._GSource* %9) #6
  store i8 0, i8* %3, align 8
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %struct._GPollFD*, %struct._GPollFD** %11, align 8
  store %struct._GPollFD* null, %struct._GPollFD** %11, align 8
  %13 = icmp eq %struct._GPollFD* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %struct._GPollFD* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  br label %16

16:                                               ; preds = %10, %14
  %17 = bitcast %"class.ui::X11EventWatcherGlib"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19X11EventWatcherGlib13StartWatchingEv(%"class.ui::X11EventWatcherGlib"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %51

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 1
  %7 = load %"class.ui::X11EventSource"*, %"class.ui::X11EventSource"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %7, i64 0, i32 3
  %9 = load %"class.x11::Connection"*, %"class.x11::Connection"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %9) #6
  br i1 %10, label %11, label %51

11:                                               ; preds = %5
  %12 = tail call i8* @_Znwm(i64 8) #7
  %13 = bitcast i8* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = ptrtoint i8* %12 to i64
  %15 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.275"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %struct._GPollFD*, %struct._GPollFD** %16, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.275"* %15 to i64*
  store i64 %14, i64* %18, align 8
  %19 = icmp eq %struct._GPollFD* %17, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %11
  %21 = bitcast %struct._GPollFD* %17 to i8*
  tail call void @_ZdlPv(i8* %21) #7
  br label %22

22:                                               ; preds = %20, %11
  %23 = tail call i32 @_ZN3x1110Connection5GetFdEv(%"class.x11::Connection"* %9) #6
  %24 = load %struct._GPollFD*, %struct._GPollFD** %16, align 8
  %25 = getelementptr inbounds %struct._GPollFD, %struct._GPollFD* %24, i64 0, i32 0
  store i32 %23, i32* %25, align 4
  %26 = load %struct._GPollFD*, %struct._GPollFD** %16, align 8
  %27 = getelementptr inbounds %struct._GPollFD, %struct._GPollFD* %26, i64 0, i32 1
  store i16 1, i16* %27, align 4
  %28 = load %struct._GPollFD*, %struct._GPollFD** %16, align 8
  %29 = getelementptr inbounds %struct._GPollFD, %struct._GPollFD* %28, i64 0, i32 2
  store i16 0, i16* %29, align 2
  %30 = tail call %struct._GSource* @g_source_new(%struct._GSourceFuncs* nonnull @_ZN2ui12_GLOBAL__N_112XSourceFuncsE, i32 112) #6
  %31 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #6
  %32 = getelementptr inbounds %struct._GSource, %struct._GSource* %30, i64 1
  %33 = bitcast %struct._GSource* %32 to %"class.x11::Connection"**
  store %"class.x11::Connection"* %31, %"class.x11::Connection"** %33, align 8
  %34 = load i64, i64* %18, align 8
  %35 = getelementptr inbounds %struct._GSource, %struct._GSource* %30, i64 1, i32 1
  %36 = bitcast %struct._GSourceCallbackFuncs** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 2
  store %struct._GSource* %30, %struct._GSource** %37, align 8
  %38 = load %struct._GPollFD*, %struct._GPollFD** %16, align 8
  tail call void @g_source_add_poll(%struct._GSource* %30, %struct._GPollFD* %38) #6
  %39 = load %struct._GSource*, %struct._GSource** %37, align 8
  tail call void @g_source_set_can_recurse(%struct._GSource* %39, i32 1) #6
  %40 = load %struct._GSource*, %struct._GSource** %37, align 8
  %41 = bitcast %"class.ui::X11EventSource"** %6 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @g_source_set_callback(%struct._GSource* %40, i32 (i8*)* null, i8* %42, void (i8*)* null) #6
  %43 = tail call %struct._GMainContext* @g_main_context_get_thread_default() #6
  %44 = icmp eq %struct._GMainContext* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %22
  %46 = tail call %struct._GMainContext* @g_main_context_default() #6
  br label %47

47:                                               ; preds = %22, %45
  %48 = phi %struct._GMainContext* [ %43, %22 ], [ %46, %45 ]
  %49 = load %struct._GSource*, %struct._GSource** %37, align 8
  %50 = tail call i32 @g_source_attach(%struct._GSource* %49, %struct._GMainContext* %48) #6
  store i8 1, i8* %2, align 8
  br label %51

51:                                               ; preds = %47, %5, %1
  ret void
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #3

declare i32 @_ZN3x1110Connection5GetFdEv(%"class.x11::Connection"*) local_unnamed_addr #3

declare %struct._GSource* @g_source_new(%struct._GSourceFuncs*, i32) local_unnamed_addr #3

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #3

declare void @g_source_add_poll(%struct._GSource*, %struct._GPollFD*) local_unnamed_addr #3

declare void @g_source_set_can_recurse(%struct._GSource*, i32) local_unnamed_addr #3

declare void @g_source_set_callback(%struct._GSource*, i32 (i8*)*, i8*, void (i8*)*) local_unnamed_addr #3

declare %struct._GMainContext* @g_main_context_get_thread_default() local_unnamed_addr #3

declare %struct._GMainContext* @g_main_context_default() local_unnamed_addr #3

declare i32 @g_source_attach(%struct._GSource*, %struct._GMainContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui19X11EventWatcherGlib12StopWatchingEv(%"class.ui::X11EventWatcherGlib"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::X11EventWatcherGlib", %"class.ui::X11EventWatcherGlib"* %0, i64 0, i32 2
  %7 = load %struct._GSource*, %struct._GSource** %6, align 8
  tail call void @g_source_destroy(%struct._GSource* %7) #6
  %8 = load %struct._GSource*, %struct._GSource** %6, align 8
  tail call void @g_source_unref(%struct._GSource* %8) #6
  store i8 0, i8* %2, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

declare void @g_source_destroy(%struct._GSource*) local_unnamed_addr #3

declare void @g_source_unref(%struct._GSource*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN2ui12_GLOBAL__N_114XSourcePrepareEP8_GSourcePi(%struct._GSource* nocapture readonly, i32* nocapture) #1 {
  store i32 -1, i32* %1, align 4
  %3 = getelementptr inbounds %struct._GSource, %struct._GSource* %0, i64 1
  %4 = bitcast %struct._GSource* %3 to %"class.x11::Connection"**
  %5 = load %"class.x11::Connection"*, %"class.x11::Connection"** %4, align 8
  tail call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %5) #6
  %6 = tail call zeroext i1 @_ZN3x1110Connection12ReadResponseEb(%"class.x11::Connection"* %5, i1 zeroext true) #6
  %7 = tail call zeroext i1 @_ZN3x1110Connection19HasPendingResponsesEv(%"class.x11::Connection"* %5) #6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN2ui12_GLOBAL__N_112XSourceCheckEP8_GSource(%struct._GSource* nocapture readonly) #1 {
  %2 = getelementptr inbounds %struct._GSource, %struct._GSource* %0, i64 1, i32 1
  %3 = bitcast %struct._GSourceCallbackFuncs** %2 to %struct._GPollFD**
  %4 = load %struct._GPollFD*, %struct._GPollFD** %3, align 8
  %5 = getelementptr inbounds %struct._GPollFD, %struct._GPollFD* %4, i64 0, i32 2
  %6 = load i16, i16* %5, align 2
  %7 = and i16 %6, 1
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._GSource, %struct._GSource* %0, i64 1
  %11 = bitcast %struct._GSource* %10 to %"class.x11::Connection"**
  %12 = load %"class.x11::Connection"*, %"class.x11::Connection"** %11, align 8
  %13 = tail call zeroext i1 @_ZN3x1110Connection12ReadResponseEb(%"class.x11::Connection"* %12, i1 zeroext false) #6
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %struct._GSource, %struct._GSource* %0, i64 1
  %16 = bitcast %struct._GSource* %15 to %"class.x11::Connection"**
  %17 = load %"class.x11::Connection"*, %"class.x11::Connection"** %16, align 8
  %18 = tail call zeroext i1 @_ZN3x1110Connection19HasPendingResponsesEv(%"class.x11::Connection"* %17) #6
  %19 = zext i1 %18 to i32
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN2ui12_GLOBAL__N_115XSourceDispatchEP8_GSourcePFiPvES3_(%struct._GSource* nocapture readonly, i32 (i8*)* nocapture readnone, i8* nocapture readnone) #1 {
  %4 = getelementptr inbounds %struct._GSource, %struct._GSource* %0, i64 1
  %5 = bitcast %struct._GSource* %4 to %"class.x11::Connection"**
  %6 = load %"class.x11::Connection"*, %"class.x11::Connection"** %5, align 8
  %7 = tail call zeroext i1 @_ZN3x1110Connection8DispatchEv(%"class.x11::Connection"* %6) #6
  tail call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %6) #6
  ret i32 1
}

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3x1110Connection12ReadResponseEb(%"class.x11::Connection"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN3x1110Connection19HasPendingResponsesEv(%"class.x11::Connection"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3x1110Connection8DispatchEv(%"class.x11::Connection"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
