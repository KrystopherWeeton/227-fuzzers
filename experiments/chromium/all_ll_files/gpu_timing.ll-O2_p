; ModuleID = '../../ui/gl/gpu_timing.cc'
source_filename = "../../ui/gl/gpu_timing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gl::TimerQuery" = type { i32 (...)**, %"class.base::RefCounted", i32, i64 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gl::GPUTimingImpl" = type { %"class.gl::GPUTiming", %"class.base::RepeatingCallback", i32, i32, i64, i8, i8, i32, i32, i32, i32, i64, i32, %class.scoped_refptr.2, %"class.base::circular_deque" }
%"class.gl::GPUTiming" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.2 = type { %"class.gl::TimeElapsedTimerQuery"* }
%"class.gl::TimeElapsedTimerQuery" = type { %"class.gl::TimerQuery", i8, i32, i64, i64, %class.scoped_refptr.3, %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.gl::QueryResult"* }
%"class.gl::QueryResult" = type { %"class.base::RefCounted.4", i8, i64, i64 }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %class.scoped_refptr.5*, i64 }
%class.scoped_refptr.5 = type { %"class.gl::TimerQuery"* }
%"class.gl::GLContextReal" = type <{ %"class.gl::GLContext.base", [7 x i8], %"class.std::__1::unique_ptr.69", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.gl::GLContext.base" = type <{ i32 (...)**, %"class.base::RefCounted.6", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.41", %"class.gl::RealGLApi"*, %class.scoped_refptr.47, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", i8 }>
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.8", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.47 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.48", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.48" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i64 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.6", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.41", %"class.gl::RealGLApi"*, %class.scoped_refptr.47, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.gl::GLVersionInfo"* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gl::GPUTiming"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.75" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::BasicStringPiece"* }
%"class.gl::GPUTimer" = type { i8, i32, %class.scoped_refptr.80, %class.scoped_refptr.3, %class.scoped_refptr.3 }
%class.scoped_refptr.80 = type { %"class.gl::GPUTimingClient"* }
%"class.gl::GPUTimingClient" = type { i32 (...)**, %"class.base::RefCounted.81", %"class.gl::GPUTimingImpl"*, i32, i32 }
%"class.base::RefCounted.81" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.gl::TimeStampTimerQuery" = type { %"class.gl::TimerQuery", i32, %class.scoped_refptr.3 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN2gl21TimeElapsedTimerQuery10StartQueryEPNS_13GPUTimingImplE = comdat any

$_ZN2gl21TimeElapsedTimerQuery8EndQueryEPNS_13GPUTimingImplE13scoped_refptrINS_11QueryResultEE = comdat any

$_ZN2gl19TimeStampTimerQuery7DoQueryEv = comdat any

$_ZN2gl10TimerQuery17PrepareNextUpdateE13scoped_refptrIS0_E = comdat any

$_ZN2gl21TimeElapsedTimerQuery7DestroyEv = comdat any

$_ZN2gl21TimeElapsedTimerQuery11IsAvailableEPNS_13GPUTimingImplE = comdat any

$_ZN2gl21TimeElapsedTimerQuery18UpdateQueryResultsEPNS_13GPUTimingImplE = comdat any

$_ZN2gl21TimeElapsedTimerQuery17PrepareNextUpdateE13scoped_refptrINS_10TimerQueryEE = comdat any

$_ZN2gl21TimeElapsedTimerQueryD2Ev = comdat any

$_ZN2gl21TimeElapsedTimerQueryD0Ev = comdat any

$_ZN2gl19TimeStampTimerQuery7DestroyEv = comdat any

$_ZN2gl19TimeStampTimerQuery11IsAvailableEPNS_13GPUTimingImplE = comdat any

$_ZN2gl19TimeStampTimerQuery18UpdateQueryResultsEPNS_13GPUTimingImplE = comdat any

$_ZN2gl19TimeStampTimerQueryD2Ev = comdat any

$_ZN2gl19TimeStampTimerQueryD0Ev = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeIS5_Li0EEEvPS5_S8_ = comdat any

$_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN2gl10TimerQueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_ = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_ = comdat any

$_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZTVN2gl21TimeElapsedTimerQueryE = comdat any

$_ZTVN2gl19TimeStampTimerQueryE = comdat any

@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN2gl10TimerQueryE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)* @_ZN2gl10TimerQuery17PrepareNextUpdateE13scoped_refptrIS0_E to i8*), i8* bitcast (void (%"class.gl::TimerQuery"*)* @_ZN2gl10TimerQueryD2Ev to i8*), i8* bitcast (void (%"class.gl::TimerQuery"*)* @_ZN2gl10TimerQueryD0Ev to i8*)] }, align 8
@_ZTVN2gl13GPUTimingImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::GPUTimingImpl"*)* @_ZN2gl13GPUTimingImplD2Ev to i8*), i8* bitcast (void (%"class.gl::GPUTimingImpl"*)* @_ZN2gl13GPUTimingImplD0Ev to i8*), i8* bitcast (%"class.gl::GPUTimingClient"* (%"class.gl::GPUTimingImpl"*)* @_ZN2gl13GPUTimingImpl21CreateGPUTimingClientEv to i8*)] }, align 8
@.str = private unnamed_addr constant [28 x i8] c"GL_EXT_disjoint_timer_query\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"GL_ARB_timer_query\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"GL_EXT_timer_query\00", align 1
@_ZTVN2gl9GPUTimingE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::GPUTiming"*)* @_ZN2gl9GPUTimingD2Ev to i8*), i8* bitcast (void (%"class.gl::GPUTiming"*)* @_ZN2gl9GPUTimingD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN2gl15GPUTimingClientE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::GPUTimingClient"*)* @_ZN2gl15GPUTimingClientD2Ev to i8*), i8* bitcast (void (%"class.gl::GPUTimingClient"*)* @_ZN2gl15GPUTimingClientD0Ev to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@_ZTVN2gl21TimeElapsedTimerQueryE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TimeElapsedTimerQuery"*)* @_ZN2gl21TimeElapsedTimerQuery7DestroyEv to i8*), i8* bitcast (i1 (%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::GPUTimingImpl"*)* @_ZN2gl21TimeElapsedTimerQuery11IsAvailableEPNS_13GPUTimingImplE to i8*), i8* bitcast (void (%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::GPUTimingImpl"*)* @_ZN2gl21TimeElapsedTimerQuery18UpdateQueryResultsEPNS_13GPUTimingImplE to i8*), i8* bitcast (void (%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimerQuery"*)* @_ZN2gl21TimeElapsedTimerQuery17PrepareNextUpdateE13scoped_refptrINS_10TimerQueryEE to i8*), i8* bitcast (void (%"class.gl::TimeElapsedTimerQuery"*)* @_ZN2gl21TimeElapsedTimerQueryD2Ev to i8*), i8* bitcast (void (%"class.gl::TimeElapsedTimerQuery"*)* @_ZN2gl21TimeElapsedTimerQueryD0Ev to i8*)] }, comdat, align 8
@_ZTVN2gl19TimeStampTimerQueryE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::TimeStampTimerQuery"*)* @_ZN2gl19TimeStampTimerQuery7DestroyEv to i8*), i8* bitcast (i1 (%"class.gl::TimeStampTimerQuery"*, %"class.gl::GPUTimingImpl"*)* @_ZN2gl19TimeStampTimerQuery11IsAvailableEPNS_13GPUTimingImplE to i8*), i8* bitcast (void (%"class.gl::TimeStampTimerQuery"*, %"class.gl::GPUTimingImpl"*)* @_ZN2gl19TimeStampTimerQuery18UpdateQueryResultsEPNS_13GPUTimingImplE to i8*), i8* bitcast (void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)* @_ZN2gl10TimerQuery17PrepareNextUpdateE13scoped_refptrIS0_E to i8*), i8* bitcast (void (%"class.gl::TimeStampTimerQuery"*)* @_ZN2gl19TimeStampTimerQueryD2Ev to i8*), i8* bitcast (void (%"class.gl::TimeStampTimerQuery"*)* @_ZN2gl19TimeStampTimerQueryD0Ev to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@switch.table._ZNK2gl15GPUTimingClient16GetTimerTypeNameEv = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)], align 8

@_ZN2gl10TimerQueryD1Ev = hidden unnamed_addr alias void (%"class.gl::TimerQuery"*), void (%"class.gl::TimerQuery"*)* @_ZN2gl10TimerQueryD2Ev
@_ZN2gl13GPUTimingImplC1EPNS_13GLContextRealE = hidden unnamed_addr alias void (%"class.gl::GPUTimingImpl"*, %"class.gl::GLContextReal"*), void (%"class.gl::GPUTimingImpl"*, %"class.gl::GLContextReal"*)* @_ZN2gl13GPUTimingImplC2EPNS_13GLContextRealE
@_ZN2gl13GPUTimingImplD1Ev = hidden unnamed_addr alias void (%"class.gl::GPUTimingImpl"*), void (%"class.gl::GPUTimingImpl"*)* @_ZN2gl13GPUTimingImplD2Ev
@_ZN2gl9GPUTimingD1Ev = hidden unnamed_addr alias void (%"class.gl::GPUTiming"*), void (%"class.gl::GPUTiming"*)* @_ZN2gl9GPUTimingD2Ev
@_ZN2gl8GPUTimerD1Ev = hidden unnamed_addr alias void (%"class.gl::GPUTimer"*), void (%"class.gl::GPUTimer"*)* @_ZN2gl8GPUTimerD2Ev
@_ZN2gl8GPUTimerC1E13scoped_refptrINS_15GPUTimingClientEEb = hidden unnamed_addr alias void (%"class.gl::GPUTimer"*, %"class.gl::GPUTimingClient"*, i1), void (%"class.gl::GPUTimer"*, %"class.gl::GPUTimingClient"*, i1)* @_ZN2gl8GPUTimerC2E13scoped_refptrINS_15GPUTimingClientEEb
@_ZN2gl15GPUTimingClientC1EPNS_13GPUTimingImplE = hidden unnamed_addr alias void (%"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingImpl"*), void (%"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingImpl"*)* @_ZN2gl15GPUTimingClientC2EPNS_13GPUTimingImplE
@_ZN2gl15GPUTimingClientD1Ev = hidden unnamed_addr alias void (%"class.gl::GPUTimingClient"*), void (%"class.gl::GPUTimingClient"*)* @_ZN2gl15GPUTimingClientD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2gl11NanoToMicroEm(i64) local_unnamed_addr #0 {
  %2 = add i64 %0, 500
  %3 = udiv i64 %2, 1000
  ret i64 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl18QueryTimestampBitsEv() local_unnamed_addr #2 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #15
  store i32 0, i32* %1, align 4
  %3 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %4 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %3, i64 0, i32 0
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #15
  %6 = bitcast i8* %5 to %"class.gl::GLApi"**
  %7 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %6, align 8
  %8 = bitcast %"class.gl::GLApi"* %7 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %9 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %9, i64 219
  %11 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %10, align 8
  call void %11(%"class.gl::GLApi"* %7, i32 36392, i32 34916, i32* nonnull %1) #15
  %12 = load i32, i32* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #15
  ret i32 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl10TimerQueryC2Ej(%"class.gl::TimerQuery"* nocapture, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl10TimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %0, i64 0, i32 2
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %0, i64 0, i32 3
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl10TimerQueryD2Ev(%"class.gl::TimerQuery"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2gl10TimerQueryD0Ev(%"class.gl::TimerQuery"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImplC2EPNS_13GLContextRealE(%"class.gl::GPUTimingImpl"* nocapture, %"class.gl::GLContextReal"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl13GPUTimingImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %5 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 2
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 7
  %9 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 14, i1 false)
  %10 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 0, i32 0>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 11
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 12
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 13, i32 0
  %14 = bitcast %"class.gl::GLContextReal"* %1 to %"class.gl::GLContext"*
  %15 = bitcast %"class.gl::TimeElapsedTimerQuery"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 40, i1 false)
  %16 = tail call %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"* %14) #15
  %17 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #15
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  store i32 2, i32* %5, align 8
  br label %25

19:                                               ; preds = %2
  %20 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #15
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  store i32 1, i32* %5, align 8
  br label %25

22:                                               ; preds = %19
  %23 = tail call zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"* %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0)) #15
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  store i32 0, i32* %5, align 8
  store i8 1, i8* %7, align 1
  store i32 0, i32* %8, align 4
  br label %25

25:                                               ; preds = %21, %24, %22, %18
  %26 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %16, i64 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %16, i64 0, i32 8
  %30 = load i32, i32* %29, align 8
  br i1 %28, label %33, label %31

31:                                               ; preds = %25
  %32 = icmp ugt i32 %30, 2
  br i1 %32, label %42, label %41

33:                                               ; preds = %25
  %34 = icmp ugt i32 %30, 3
  br i1 %34, label %42, label %35

35:                                               ; preds = %33
  %36 = icmp eq i32 %30, 3
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"struct.gl::GLVersionInfo", %"struct.gl::GLVersionInfo"* %16, i64 0, i32 9
  %39 = load i32, i32* %38, align 4
  %40 = icmp ugt i32 %39, 1
  br i1 %40, label %42, label %41

41:                                               ; preds = %31, %35, %37
  store i8 1, i8* %7, align 1
  store i32 0, i32* %8, align 4
  br label %42

42:                                               ; preds = %33, %31, %41, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl9GPUTimingC2Ev(%"class.gl::GPUTiming"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTiming", %"class.gl::GPUTiming"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl9GPUTimingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

declare %"struct.gl::GLVersionInfo"* @_ZN2gl9GLContext14GetVersionInfoEv(%"class.gl::GLContext"*) local_unnamed_addr #6

declare zeroext i1 @_ZN2gl9GLContext12HasExtensionEPKc(%"class.gl::GLContext"*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImplD2Ev(%"class.gl::GPUTimingImpl"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl13GPUTimingImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #15
  %8 = bitcast %"class.base::circular_deque"* %3 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #15
  %10 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 13, i32 0
  %11 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %10, align 8
  %12 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %11, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #15
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -2
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.gl::TimerQuery"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.gl::TimerQuery"*)***
  %23 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %23, i64 5
  %25 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %24, align 8
  tail call void %25(%"class.gl::TimerQuery"* nonnull %21) #15
  br label %26

26:                                               ; preds = %1, %13, %19
  %27 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %27) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl9GPUTimingD2Ev(%"class.gl::GPUTiming"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImplD0Ev(%"class.gl::GPUTimingImpl"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2gl13GPUTimingImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeEmm(%"class.base::circular_deque"* %3, i64 %5, i64 %7) #15
  %8 = bitcast %"class.base::circular_deque"* %3 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #15
  %10 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 13, i32 0
  %11 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %10, align 8
  %12 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %11, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #15
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -2
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.gl::TimerQuery"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.gl::TimerQuery"*)***
  %23 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %23, i64 5
  %25 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %24, align 8
  tail call void %25(%"class.gl::TimerQuery"* nonnull %21) #15
  br label %26

26:                                               ; preds = %1, %13, %19
  %27 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %27) #15
  %28 = bitcast %"class.gl::GPUTimingImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GPUTimingImpl16GetDisjointCountEv(%"class.gl::GPUTimingImpl"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %25

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #15
  store i32 0, i32* %2, align 4
  %8 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %9 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %8, i64 0, i32 0
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #15
  %11 = bitcast i8* %10 to %"class.gl::GLApi"**
  %12 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %11, align 8
  %13 = bitcast %"class.gl::GLApi"* %12 to void (%"class.gl::GLApi"*, i32, i32*)***
  %14 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %14, i64 193
  %16 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %15, align 8
  call void %16(%"class.gl::GLApi"* %12, i32 36795, i32* nonnull %2) #15
  %17 = load i32, i32* %2, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 5
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %21, align 4
  br label %24

24:                                               ; preds = %6, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #15
  br label %25

25:                                               ; preds = %24, %1
  %26 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2gl13GPUTimingImpl20CalculateTimerOffsetEv(%"class.gl::GPUTimingImpl"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %60

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %12, label %58

12:                                               ; preds = %7
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  store i64 0, i64* %2, align 8
  %14 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %15 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %14, i64 0, i32 0
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #15
  %17 = bitcast i8* %16 to %"class.gl::GLApi"**
  %18 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %17, align 8
  %19 = bitcast %"class.gl::GLApi"* %18 to void (%"class.gl::GLApi"*, i32, i64*)***
  %20 = load void (%"class.gl::GLApi"*, i32, i64*)**, void (%"class.gl::GLApi"*, i32, i64*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i64*)*, void (%"class.gl::GLApi"*, i32, i64*)** %20, i64 189
  %22 = load void (%"class.gl::GLApi"*, i32, i64*)*, void (%"class.gl::GLApi"*, i32, i64*)** %21, align 8
  call void %22(%"class.gl::GLApi"* %18, i32 36392, i64* nonnull %2) #15
  %23 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = icmp eq %"class.base::internal::BindStateBase"* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %12
  %27 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  br label %33

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %30 = bitcast void ()** %29 to i64 (%"class.base::internal::BindStateBase"*)**
  %31 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %30, align 8
  %32 = call i64 %31(%"class.base::internal::BindStateBase"* nonnull %24) #15
  br label %33

33:                                               ; preds = %26, %28
  %34 = phi i64 [ %27, %26 ], [ %32, %28 ]
  %35 = load i64, i64* %2, align 8
  %36 = add i64 %35, 500
  %37 = udiv i64 %36, 1000
  %38 = sub nsw i64 %34, %37
  %39 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = sub nsw i64 %38, %40
  %42 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  %43 = icmp eq i64 %41, -9223372036854775808
  br i1 %43, label %48, label %44

44:                                               ; preds = %33
  %45 = icmp slt i64 %41, 0
  %46 = sub nsw i64 0, %41
  %47 = select i1 %45, i64 %46, i64 %41
  br label %48

48:                                               ; preds = %33, %44
  %49 = phi i64 [ %47, %44 ], [ 9223372036854775807, %33 ]
  %50 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #15
  %52 = icmp sgt i64 %51, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  store i64 %38, i64* %39, align 8
  %54 = load i32, i32* %8, align 8
  %55 = icmp eq i32 %54, 1
  %56 = zext i1 %55 to i8
  store i8 %56, i8* %4, align 8
  br label %57

57:                                               ; preds = %53, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  br label %60

58:                                               ; preds = %7
  %59 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 4
  store i64 0, i64* %59, align 8
  store i8 1, i8* %4, align 8
  br label %60

60:                                               ; preds = %1, %57, %58
  %61 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 4
  %62 = load i64, i64* %61, align 8
  ret i64 %62
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::QueryResult"* @_ZN2gl13GPUTimingImpl21BeginElapsedTimeQueryEv(%"class.gl::GPUTimingImpl"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14
  %3 = tail call i8* @_Znwm(i64 64) #17
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %3, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 %5, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 0, i64* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl21TimeElapsedTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 24
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %3, i64 28
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 36, i1 false) #15
  %17 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %18 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %17, i64 0, i32 0
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #15
  %20 = bitcast i8* %19 to %"class.gl::GLApi"**
  %21 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %20, align 8
  %22 = bitcast %"class.gl::GLApi"* %21 to void (%"class.gl::GLApi"*, i32, i32*)***
  %23 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %23, i64 152
  %25 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %24, align 8
  tail call void %25(%"class.gl::GLApi"* %21, i32 1, i32* %16) #15
  %26 = ptrtoint i8* %3 to i64
  %27 = bitcast i8* %7 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #15
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %2, i64 1) #15
  %28 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %2, i64 0, i32 0
  %29 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %28, i64 %30) #15
  %32 = bitcast %class.scoped_refptr.5* %31 to i64*
  store i64 %26, i64* %32, align 8
  %33 = load i64, i64* %29, align 8
  %34 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, -1
  %37 = icmp eq i64 %33, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %1
  store i64 0, i64* %29, align 8
  br label %42

39:                                               ; preds = %1
  %40 = add i64 %33, 1
  store i64 %40, i64* %29, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39, %38
  br label %43

43:                                               ; preds = %42, %39
  %44 = phi i64 [ %36, %42 ], [ %33, %39 ]
  %45 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %28, i64 %44) #15
  %46 = load i64, i64* %29, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load i64, i64* %34, align 8
  br label %50

50:                                               ; preds = %43, %48
  %51 = phi i64 [ %49, %48 ], [ %46, %43 ]
  %52 = add i64 %51, -1
  %53 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %28, i64 %52) #15
  %54 = bitcast %class.scoped_refptr.5* %53 to %"class.gl::TimeElapsedTimerQuery"**
  %55 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %54, align 8
  %56 = tail call %"class.gl::QueryResult"* @_ZN2gl21TimeElapsedTimerQuery10StartQueryEPNS_13GPUTimingImplE(%"class.gl::TimeElapsedTimerQuery"* %55, %"class.gl::GPUTimingImpl"* %0)
  ret %"class.gl::QueryResult"* %56
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::QueryResult"* @_ZN2gl21TimeElapsedTimerQuery10StartQueryEPNS_13GPUTimingImplE(%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::GPUTimingImpl"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  br label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %10 = bitcast void ()** %9 to i64 (%"class.base::internal::BindStateBase"*)**
  %11 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::internal::BindStateBase"* nonnull %4) #15
  br label %13

13:                                               ; preds = %6, %8
  %14 = phi i64 [ %7, %6 ], [ %12, %8 ]
  %15 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 4
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 1
  store i8 1, i8* %20, align 8
  br label %31

21:                                               ; preds = %13
  %22 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %23 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %22, i64 0, i32 0
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #15
  %25 = bitcast i8* %24 to %"class.gl::GLApi"**
  %26 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %25, align 8
  %27 = bitcast %"class.gl::GLApi"* %26 to void (%"class.gl::GLApi"*, i32)***
  %28 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %28, i64 128
  %30 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %29, align 8
  tail call void %30(%"class.gl::GLApi"* %26, i32 35007) #15
  br label %31

31:                                               ; preds = %21, %19
  %32 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %33 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %32, i64 0, i32 0
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #15
  %35 = bitcast i8* %34 to %"class.gl::GLApi"**
  %36 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %35, align 8
  %37 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = bitcast %"class.gl::GLApi"* %36 to void (%"class.gl::GLApi"*, i32, i32)***
  %40 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %40, i64 6
  %42 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %41, align 8
  tail call void %42(%"class.gl::GLApi"* %36, i32 35007, i32 %38) #15
  %43 = tail call i8* @_Znwm(i64 24) #17
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %43, i64 4
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds i8, i8* %43, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #15
  %47 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 5
  %48 = bitcast i8* %43 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %48) #15
  %49 = ptrtoint i8* %43 to i64
  %50 = bitcast %class.scoped_refptr.3* %47 to i64*
  %51 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %47, i64 0, i32 0
  %52 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.gl::QueryResult"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %31
  %55 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %52, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #15
  %56 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %52, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = bitcast %"class.gl::QueryResult"* %52 to i8*
  tail call void @_ZdlPv(i8* %60) #17
  br label %61

61:                                               ; preds = %31, %54, %59
  %62 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %0, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #15
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #15
  br label %65

65:                                               ; preds = %61, %63
  %66 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 13
  %67 = ptrtoint %"class.gl::TimeElapsedTimerQuery"* %0 to i64
  %68 = bitcast %class.scoped_refptr.2* %66 to i64*
  %69 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %66, i64 0, i32 0
  %70 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %69, align 8
  store i64 %67, i64* %68, align 8
  %71 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %70, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %73, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %74) #15
  %75 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %73, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %85

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %73, i64 -2
  %80 = bitcast %"class.base::RefCounted"* %79 to %"class.gl::TimerQuery"*
  %81 = bitcast %"class.base::RefCounted"* %79 to void (%"class.gl::TimerQuery"*)***
  %82 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %82, i64 5
  %84 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %83, align 8
  tail call void %84(%"class.gl::TimerQuery"* nonnull %80) #15
  br label %85

85:                                               ; preds = %78, %72, %65
  br i1 %62, label %99, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #15
  %89 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 -2
  %94 = bitcast %"class.base::RefCounted"* %93 to %"class.gl::TimerQuery"*
  %95 = bitcast %"class.base::RefCounted"* %93 to void (%"class.gl::TimerQuery"*)***
  %96 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %96, i64 5
  %98 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %97, align 8
  tail call void %98(%"class.gl::TimerQuery"* nonnull %94) #15
  br label %99

99:                                               ; preds = %85, %86, %92
  %100 = load i32, i32* %16, align 8
  %101 = add i32 %100, 1
  store i32 %101, i32* %16, align 8
  %102 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %51, align 8
  %103 = icmp eq %"class.gl::QueryResult"* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %102, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #15
  br label %106

106:                                              ; preds = %99, %104
  ret %"class.gl::QueryResult"* %102
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImpl19EndElapsedTimeQueryE13scoped_refptrINS_11QueryResultEE(%"class.gl::GPUTimingImpl"*, %"class.gl::QueryResult"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 12
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, 1
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14
  %8 = tail call i8* @_Znwm(i64 64) #17
  %9 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 8
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = bitcast i8* %8 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %8, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 %10, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %8, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl21TimeElapsedTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds i8, i8* %8, i64 28
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 36, i1 false) #15
  %22 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %23 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %22, i64 0, i32 0
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #15
  %25 = bitcast i8* %24 to %"class.gl::GLApi"**
  %26 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %25, align 8
  %27 = bitcast %"class.gl::GLApi"* %26 to void (%"class.gl::GLApi"*, i32, i32*)***
  %28 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %28, i64 152
  %30 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %29, align 8
  tail call void %30(%"class.gl::GLApi"* %26, i32 1, i32* %21) #15
  %31 = ptrtoint i8* %8 to i64
  %32 = bitcast i8* %12 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #15
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %7, i64 1) #15
  %33 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %7, i64 0, i32 0
  %34 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %35) #15
  %37 = bitcast %class.scoped_refptr.5* %36 to i64*
  store i64 %31, i64* %37, align 8
  %38 = load i64, i64* %34, align 8
  %39 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  %42 = icmp eq i64 %38, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %6
  store i64 0, i64* %34, align 8
  br label %47

44:                                               ; preds = %6
  %45 = add i64 %38, 1
  store i64 %45, i64* %34, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44, %43
  br label %48

48:                                               ; preds = %47, %44
  %49 = phi i64 [ %41, %47 ], [ %38, %44 ]
  %50 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %49) #15
  %51 = load i64, i64* %34, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load i64, i64* %39, align 8
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i64 [ %54, %53 ], [ %51, %48 ]
  %57 = add i64 %56, -1
  %58 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %33, i64 %57) #15
  %59 = bitcast %class.scoped_refptr.5* %58 to %"class.gl::TimeElapsedTimerQuery"**
  %60 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %59, align 8
  %61 = icmp eq %"class.gl::QueryResult"* %1, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %63) #15
  br label %64

64:                                               ; preds = %55, %62
  tail call void @_ZN2gl21TimeElapsedTimerQuery8EndQueryEPNS_13GPUTimingImplE13scoped_refptrINS_11QueryResultEE(%"class.gl::TimeElapsedTimerQuery"* %60, %"class.gl::GPUTimingImpl"* %0, %"class.gl::QueryResult"* %1)
  br label %89

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 13, i32 0
  %67 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %66, align 8
  %68 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %67, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #15
  br label %71

71:                                               ; preds = %65, %69
  %72 = icmp eq %"class.gl::QueryResult"* %1, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %74) #15
  br label %75

75:                                               ; preds = %71, %73
  tail call void @_ZN2gl21TimeElapsedTimerQuery8EndQueryEPNS_13GPUTimingImplE13scoped_refptrINS_11QueryResultEE(%"class.gl::TimeElapsedTimerQuery"* %67, %"class.gl::GPUTimingImpl"* %0, %"class.gl::QueryResult"* %1)
  br i1 %68, label %89, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %67, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %77, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %78) #15
  %79 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %77, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %77, i64 -2
  %84 = bitcast %"class.base::RefCounted"* %83 to %"class.gl::TimerQuery"*
  %85 = bitcast %"class.base::RefCounted"* %83 to void (%"class.gl::TimerQuery"*)***
  %86 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %86, i64 5
  %88 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %87, align 8
  tail call void %88(%"class.gl::TimerQuery"* nonnull %84) #15
  br label %89

89:                                               ; preds = %82, %76, %75, %64
  %90 = icmp eq %"class.gl::QueryResult"* %1, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %92) #15
  %93 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %1, i64 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = bitcast %"class.gl::QueryResult"* %1 to i8*
  tail call void @_ZdlPv(i8* %97) #17
  br label %98

98:                                               ; preds = %89, %91, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21TimeElapsedTimerQuery8EndQueryEPNS_13GPUTimingImplE13scoped_refptrINS_11QueryResultEE(%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::GPUTimingImpl"*, %"class.gl::QueryResult"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 13, i32 0
  %5 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %4, align 8
  %6 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %5, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  br label %9

9:                                                ; preds = %3, %7
  %10 = icmp eq %"class.gl::QueryResult"* %2, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %2, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #15
  br label %13

13:                                               ; preds = %9, %11
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %5, i64 0, i32 6
  %15 = ptrtoint %"class.gl::QueryResult"* %2 to i64
  %16 = bitcast %class.scoped_refptr.3* %14 to i64*
  %17 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %14, i64 0, i32 0
  %18 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %17, align 8
  store i64 %15, i64* %16, align 8
  %19 = icmp eq %"class.gl::QueryResult"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %22 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = bitcast %"class.gl::QueryResult"* %18 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %13, %20, %25
  %28 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 12
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, -1
  store i32 %30, i32* %28, align 8
  %31 = icmp eq i32 %30, 0
  %32 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %33 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %32, i64 0, i32 0
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #15
  %35 = bitcast i8* %34 to %"class.gl::GLApi"**
  %36 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %35, align 8
  %37 = bitcast %"class.gl::GLApi"* %36 to void (%"class.gl::GLApi"*, i32)***
  %38 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %38, i64 128
  %40 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %39, align 8
  tail call void %40(%"class.gl::GLApi"* %36, i32 35007) #15
  br i1 %31, label %90, label %41

41:                                               ; preds = %27
  %42 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %43 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %42, i64 0, i32 0
  %44 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %43) #15
  %45 = bitcast i8* %44 to %"class.gl::GLApi"**
  %46 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %45, align 8
  %47 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = bitcast %"class.gl::GLApi"* %46 to void (%"class.gl::GLApi"*, i32, i32)***
  %50 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %50, i64 6
  %52 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %51, align 8
  tail call void %52(%"class.gl::GLApi"* %46, i32 35007, i32 %48) #15
  %53 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %0, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %41
  %55 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %55) #15
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %55) #15
  br label %56

56:                                               ; preds = %41, %54
  %57 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 13
  %58 = ptrtoint %"class.gl::TimeElapsedTimerQuery"* %0 to i64
  %59 = bitcast %class.scoped_refptr.2* %57 to i64*
  %60 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %57, i64 0, i32 0
  %61 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %61, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %64, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %65) #15
  %66 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %64, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %64, i64 -2
  %71 = bitcast %"class.base::RefCounted"* %70 to %"class.gl::TimerQuery"*
  %72 = bitcast %"class.base::RefCounted"* %70 to void (%"class.gl::TimerQuery"*)***
  %73 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %73, i64 5
  %75 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %74, align 8
  tail call void %75(%"class.gl::TimerQuery"* nonnull %71) #15
  br label %76

76:                                               ; preds = %69, %63, %56
  br i1 %53, label %109, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %78, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %79) #15
  %80 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %78, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %109

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %78, i64 -2
  %85 = bitcast %"class.base::RefCounted"* %84 to %"class.gl::TimerQuery"*
  %86 = bitcast %"class.base::RefCounted"* %84 to void (%"class.gl::TimerQuery"*)***
  %87 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %87, i64 5
  %89 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %88, align 8
  tail call void %89(%"class.gl::TimerQuery"* nonnull %85) #15
  br label %109

90:                                               ; preds = %27
  %91 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 13
  %92 = bitcast %class.scoped_refptr.2* %91 to i64*
  %93 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %91, i64 0, i32 0
  %94 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %93, align 8
  store i64 0, i64* %92, align 8
  %95 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %94, i64 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #15
  %99 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 -2
  %104 = bitcast %"class.base::RefCounted"* %103 to %"class.gl::TimerQuery"*
  %105 = bitcast %"class.base::RefCounted"* %103 to void (%"class.gl::TimerQuery"*)***
  %106 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %106, i64 5
  %108 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %107, align 8
  tail call void %108(%"class.gl::TimerQuery"* nonnull %104) #15
  br label %109

109:                                              ; preds = %102, %96, %90, %83, %77, %76
  br i1 %6, label %123, label %110

110:                                              ; preds = %109
  %111 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %5, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %111, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %112) #15
  %113 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %111, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %123

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %111, i64 -2
  %118 = bitcast %"class.base::RefCounted"* %117 to %"class.gl::TimerQuery"*
  %119 = bitcast %"class.base::RefCounted"* %117 to void (%"class.gl::TimerQuery"*)***
  %120 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %120, i64 5
  %122 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %121, align 8
  tail call void %122(%"class.gl::TimerQuery"* nonnull %118) #15
  br label %123

123:                                              ; preds = %109, %110, %116
  br i1 %10, label %131, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %2, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %125) #15
  %126 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %2, i64 0, i32 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  %130 = bitcast %"class.gl::QueryResult"* %2 to i8*
  tail call void @_ZdlPv(i8* %130) #17
  br label %131

131:                                              ; preds = %123, %124, %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::TimeElapsedTimerQuery"* @_ZN2gl13GPUTimingImpl19GetLastElapsedQueryEv(%"class.gl::GPUTimingImpl"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %2, align 8
  %4 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %3, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.gl::TimeElapsedTimerQuery"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::QueryResult"* @_ZN2gl13GPUTimingImpl16DoTimeStampQueryEv(%"class.gl::GPUTimingImpl"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 6
  %8 = load i8, i8* %7, align 1, !range !2
  br label %26

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #15
  store i32 0, i32* %2, align 4
  %11 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %12 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %11, i64 0, i32 0
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #15
  %14 = bitcast i8* %13 to %"class.gl::GLApi"**
  %15 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %14, align 8
  %16 = bitcast %"class.gl::GLApi"* %15 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %17 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %17, i64 219
  %19 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %18, align 8
  call void %19(%"class.gl::GLApi"* %15, i32 36392, i32 34916, i32* nonnull %2) #15
  %20 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #15
  store i32 %20, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 6
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = or i8 %24, %22
  store i8 %25, i8* %23, align 1
  br label %26

26:                                               ; preds = %6, %9
  %27 = phi i8 [ %8, %6 ], [ %25, %9 ]
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %26
  %30 = call %"class.gl::QueryResult"* @_ZN2gl13GPUTimingImpl21BeginElapsedTimeQueryEv(%"class.gl::GPUTimingImpl"* %0)
  %31 = icmp eq %"class.gl::QueryResult"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %30, i64 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %33) #15
  br label %34

34:                                               ; preds = %29, %32
  call void @_ZN2gl13GPUTimingImpl19EndElapsedTimeQueryE13scoped_refptrINS_11QueryResultEE(%"class.gl::GPUTimingImpl"* %0, %"class.gl::QueryResult"* %30)
  br label %92

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14
  %37 = call i8* @_Znwm(i64 40) #17
  %38 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 8
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  %41 = getelementptr inbounds i8, i8* %37, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 0, i32* %42, align 4
  %43 = bitcast i8* %37 to i32 (...)***
  %44 = getelementptr inbounds i8, i8* %37, i64 12
  %45 = bitcast i8* %44 to i32*
  store i32 %39, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %37, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl19TimeStampTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 24
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %37, i64 32
  %51 = bitcast i8* %50 to %"class.gl::QueryResult"**
  store %"class.gl::QueryResult"* null, %"class.gl::QueryResult"** %51, align 8
  %52 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %53 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %52, i64 0, i32 0
  %54 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #15
  %55 = bitcast i8* %54 to %"class.gl::GLApi"**
  %56 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %55, align 8
  %57 = bitcast %"class.gl::GLApi"* %56 to void (%"class.gl::GLApi"*, i32, i32*)***
  %58 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %58, i64 152
  %60 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %59, align 8
  call void %60(%"class.gl::GLApi"* %56, i32 1, i32* %49) #15
  %61 = ptrtoint i8* %37 to i64
  %62 = bitcast i8* %41 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %62) #15
  call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %36, i64 1) #15
  %63 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %36, i64 0, i32 0
  %64 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %65) #15
  %67 = bitcast %class.scoped_refptr.5* %66 to i64*
  store i64 %61, i64* %67, align 8
  %68 = load i64, i64* %64, align 8
  %69 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  %72 = icmp eq i64 %68, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %35
  store i64 0, i64* %64, align 8
  br label %77

74:                                               ; preds = %35
  %75 = add i64 %68, 1
  store i64 %75, i64* %64, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74, %73
  br label %78

78:                                               ; preds = %77, %74
  %79 = phi i64 [ %71, %77 ], [ %68, %74 ]
  %80 = call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %79) #15
  %81 = load i64, i64* %64, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = load i64, i64* %69, align 8
  br label %85

85:                                               ; preds = %78, %83
  %86 = phi i64 [ %84, %83 ], [ %81, %78 ]
  %87 = add i64 %86, -1
  %88 = call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %63, i64 %87) #15
  %89 = bitcast %class.scoped_refptr.5* %88 to %"class.gl::TimeStampTimerQuery"**
  %90 = load %"class.gl::TimeStampTimerQuery"*, %"class.gl::TimeStampTimerQuery"** %89, align 8
  %91 = call %"class.gl::QueryResult"* @_ZN2gl19TimeStampTimerQuery7DoQueryEv(%"class.gl::TimeStampTimerQuery"* %90)
  br label %92

92:                                               ; preds = %34, %85
  %93 = phi %"class.gl::QueryResult"* [ %91, %85 ], [ %30, %34 ]
  ret %"class.gl::QueryResult"* %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.gl::QueryResult"* @_ZN2gl19TimeStampTimerQuery7DoQueryEv(%"class.gl::TimeStampTimerQuery"*) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i32, i32)***
  %10 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %10, i64 373
  %12 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %11, align 8
  tail call void %12(%"class.gl::GLApi"* %6, i32 %8, i32 36392) #15
  %13 = tail call i8* @_Znwm(i64 24) #17
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %13, i64 4
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #15
  %17 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 2
  %18 = bitcast i8* %13 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %18) #15
  %19 = ptrtoint i8* %13 to i64
  %20 = bitcast %class.scoped_refptr.3* %17 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %17, i64 0, i32 0
  %22 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.gl::QueryResult"* %22, null
  %24 = bitcast i8* %13 to %"class.gl::QueryResult"*
  br i1 %23, label %35, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %22, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #15
  %27 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %22, i64 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.gl::QueryResult"* %22 to i8*
  tail call void @_ZdlPv(i8* %31) #17
  br label %32

32:                                               ; preds = %25, %30
  %33 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %21, align 8
  %34 = icmp eq %"class.gl::QueryResult"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %1, %32
  %36 = phi %"class.gl::QueryResult"* [ %33, %32 ], [ %24, %1 ]
  %37 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %36, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %37) #15
  br label %38

38:                                               ; preds = %32, %35
  %39 = phi %"class.gl::QueryResult"* [ null, %32 ], [ %36, %35 ]
  ret %"class.gl::QueryResult"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImpl18UpdateQueryResultsEv(%"class.gl::GPUTimingImpl"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %31, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 0, i32 1
  br label %12

12:                                               ; preds = %9, %25
  %13 = phi i32 [ 0, %9 ], [ %24, %25 ]
  %14 = phi i64 [ %5, %9 ], [ %29, %25 ]
  %15 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %14) #15
  %16 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %15, i64 0, i32 0
  %17 = load %"class.gl::TimerQuery"*, %"class.gl::TimerQuery"** %16, align 8
  %18 = bitcast %"class.gl::TimerQuery"* %17 to i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)***
  %19 = load i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)**, i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)*, i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)** %19, i64 1
  %21 = load i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)*, i1 (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.gl::TimerQuery"* %17, %"class.gl::GPUTimingImpl"* %0) #15
  %23 = zext i1 %22 to i32
  %24 = add nuw nsw i32 %13, %23
  br i1 %22, label %25, label %31

25:                                               ; preds = %12
  %26 = add i64 %14, 1
  %27 = load i64, i64* %11, align 8
  %28 = icmp eq i64 %26, %27
  %29 = select i1 %28, i64 0, i64 %26
  %30 = icmp eq i64 %29, %7
  br i1 %30, label %31, label %12

31:                                               ; preds = %12, %25, %1
  %32 = phi i32 [ 0, %1 ], [ %24, %25 ], [ %24, %12 ]
  %33 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %55

36:                                               ; preds = %31
  %37 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #15
  store i32 0, i32* %2, align 4
  %38 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %39 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %38, i64 0, i32 0
  %40 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %39) #15
  %41 = bitcast i8* %40 to %"class.gl::GLApi"**
  %42 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %41, align 8
  %43 = bitcast %"class.gl::GLApi"* %42 to void (%"class.gl::GLApi"*, i32, i32*)***
  %44 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %44, i64 193
  %46 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %45, align 8
  call void %46(%"class.gl::GLApi"* %42, i32 36795, i32* nonnull %2) #15
  %47 = load i32, i32* %2, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 5
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %51, align 4
  br label %54

54:                                               ; preds = %49, %36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #15
  br label %55

55:                                               ; preds = %31, %54
  %56 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 10
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 8
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 9
  store i32 %63, i32* %64, align 4
  store i32 %57, i32* %58, align 8
  br label %65

65:                                               ; preds = %55, %61
  %66 = icmp sgt i32 %32, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %69 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 9
  %70 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 11
  %71 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 14, i32 0, i32 1
  br label %73

72:                                               ; preds = %139, %65
  ret void

73:                                               ; preds = %139, %67
  %74 = phi i32 [ 0, %67 ], [ %140, %139 ]
  %75 = load i64, i64* %4, align 8
  %76 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %68, i64 %75) #15
  %77 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %76, i64 0, i32 0
  %78 = load %"class.gl::TimerQuery"*, %"class.gl::TimerQuery"** %77, align 8
  %79 = icmp eq %"class.gl::TimerQuery"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %78, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #15
  br label %82

82:                                               ; preds = %73, %80
  %83 = bitcast %"class.gl::TimerQuery"* %78 to void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)***
  %84 = load void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)**, void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)*, void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)** %84, i64 2
  %86 = load void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)*, void (%"class.gl::TimerQuery"*, %"class.gl::GPUTimingImpl"*)** %85, align 8
  call void %86(%"class.gl::TimerQuery"* %78, %"class.gl::GPUTimingImpl"* %0) #15
  %87 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %78, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %69, align 4
  %90 = icmp ugt i32 %89, %88
  br i1 %90, label %97, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %78, i64 0, i32 3
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %70, align 8
  %95 = icmp slt i64 %94, %93
  %96 = select i1 %95, i64 %93, i64 %94
  store i64 %96, i64* %70, align 8
  br label %97

97:                                               ; preds = %82, %91
  %98 = bitcast %"class.gl::TimerQuery"* %78 to void (%"class.gl::TimerQuery"*)***
  %99 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %98, align 8
  %100 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %99, align 8
  call void %100(%"class.gl::TimerQuery"* %78) #15
  %101 = load i64, i64* %4, align 8
  %102 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %68, i64 %101) #15
  %103 = load i64, i64* %4, align 8
  %104 = add i64 %103, 1
  %105 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %68, i64 %104) #15
  call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %68, %class.scoped_refptr.5* %102, %class.scoped_refptr.5* %105) #15
  %106 = load i64, i64* %4, align 8
  %107 = add i64 %106, 1
  %108 = load i64, i64* %71, align 8
  %109 = icmp eq i64 %107, %108
  %110 = select i1 %109, i64 0, i64 %107
  store i64 %110, i64* %4, align 8
  call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %3) #15
  %111 = load i64, i64* %4, align 8
  %112 = load i64, i64* %6, align 8
  %113 = icmp eq i64 %111, %112
  br i1 %113, label %125, label %114

114:                                              ; preds = %97
  %115 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %68, i64 %111) #15
  %116 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %115, i64 0, i32 0
  %117 = load %"class.gl::TimerQuery"*, %"class.gl::TimerQuery"** %116, align 8
  br i1 %79, label %120, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %78, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #15
  br label %120

120:                                              ; preds = %114, %118
  %121 = bitcast %"class.gl::TimerQuery"* %117 to void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)***
  %122 = load void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)** %122, i64 3
  %124 = load void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*)** %123, align 8
  call void %124(%"class.gl::TimerQuery"* %117, %"class.gl::TimerQuery"* %78) #15
  br label %125

125:                                              ; preds = %120, %97
  br i1 %79, label %139, label %126

126:                                              ; preds = %125
  %127 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %78, i64 0, i32 1
  %128 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %127, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #15
  %129 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %127, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %139

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %127, i64 -2
  %134 = bitcast %"class.base::RefCounted"* %133 to %"class.gl::TimerQuery"*
  %135 = bitcast %"class.base::RefCounted"* %133 to void (%"class.gl::TimerQuery"*)***
  %136 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %136, i64 5
  %138 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %137, align 8
  call void %138(%"class.gl::TimerQuery"* nonnull %134) #15
  br label %139

139:                                              ; preds = %125, %126, %132
  %140 = add nuw nsw i32 %74, 1
  %141 = icmp eq i32 %140, %32
  br i1 %141, label %72, label %73
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl13GPUTimingImpl13IsGoodQueryIDEj(%"class.gl::GPUTimingImpl"* nocapture readonly, i32) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 4
  %5 = icmp ule i32 %4, %1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImpl19SetLastElapsedQueryE13scoped_refptrINS_21TimeElapsedTimerQueryEE(%"class.gl::GPUTimingImpl"* nocapture, %"class.gl::TimeElapsedTimerQuery"*) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %1, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %5) #15
  br label %6

6:                                                ; preds = %2, %4
  %7 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 13
  %8 = ptrtoint %"class.gl::TimeElapsedTimerQuery"* %1 to i64
  %9 = bitcast %class.scoped_refptr.2* %7 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %7, i64 0, i32 0
  %11 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %10, align 8
  store i64 %8, i64* %9, align 8
  %12 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %11, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #15
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -2
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.gl::TimerQuery"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.gl::TimerQuery"*)***
  %23 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %23, i64 5
  %25 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %24, align 8
  tail call void %25(%"class.gl::TimerQuery"* nonnull %21) #15
  br label %26

26:                                               ; preds = %6, %13, %19
  br i1 %3, label %40, label %27

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %1, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #15
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 -2
  %35 = bitcast %"class.base::RefCounted"* %34 to %"class.gl::TimerQuery"*
  %36 = bitcast %"class.base::RefCounted"* %34 to void (%"class.gl::TimerQuery"*)***
  %37 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %37, i64 5
  %39 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %38, align 8
  tail call void %39(%"class.gl::TimerQuery"* nonnull %35) #15
  br label %40

40:                                               ; preds = %26, %27, %33
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl13GPUTimingImpl14HandleBadQueryEv(%"class.gl::GPUTimingImpl"* nocapture) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 9
  store i32 %3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 5
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 10
  store i32 %8, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::GPUTimingClient"* @_ZN2gl13GPUTimingImpl21CreateGPUTimingClientEv(%"class.gl::GPUTimingImpl"*) unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = tail call i8* @_Znwm(i64 32) #17
  %4 = bitcast i8* %3 to %"class.gl::GPUTimingClient"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 4
  %7 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl15GPUTimingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = bitcast i8* %8 to %"class.gl::GPUTimingImpl"**
  store %"class.gl::GPUTimingImpl"* %0, %"class.gl::GPUTimingImpl"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 24
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 28
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = icmp eq %"class.gl::GPUTimingImpl"* %0, null
  br i1 %14, label %41, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %11, align 8
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %19, label %38

19:                                               ; preds = %15
  %20 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #15
  store i32 0, i32* %2, align 4
  %21 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %22 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %21, i64 0, i32 0
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #15
  %24 = bitcast i8* %23 to %"class.gl::GLApi"**
  %25 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %24, align 8
  %26 = bitcast %"class.gl::GLApi"* %25 to void (%"class.gl::GLApi"*, i32, i32*)***
  %27 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %27, i64 193
  %29 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %28, align 8
  call void %29(%"class.gl::GLApi"* %25, i32 36795, i32* nonnull %2) #15
  %30 = load i32, i32* %2, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %19
  %33 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 5
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %34, align 4
  br label %37

37:                                               ; preds = %32, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #15
  br label %38

38:                                               ; preds = %37, %15
  %39 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %13, align 4
  br label %41

41:                                               ; preds = %1, %38
  %42 = bitcast i8* %5 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #15
  ret %"class.gl::GPUTimingClient"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.gl::GPUTiming"* @_ZN2gl9GPUTiming15CreateGPUTimingEPNS_13GLContextRealE(%"class.gl::GLContextReal"*) local_unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 112) #17
  %3 = bitcast i8* %2 to %"class.gl::GPUTimingImpl"*
  tail call void @_ZN2gl13GPUTimingImplC2EPNS_13GLContextRealE(%"class.gl::GPUTimingImpl"* nonnull %3, %"class.gl::GLContextReal"* %0)
  %4 = bitcast i8* %2 to %"class.gl::GPUTiming"*
  ret %"class.gl::GPUTiming"* %4
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2gl9GPUTimingD0Ev(%"class.gl::GPUTiming"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimerD2Ev(%"class.gl::GPUTimer"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %2, align 8
  %4 = icmp eq %"class.gl::QueryResult"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %3, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = bitcast %"class.gl::QueryResult"* %3 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %1, %5, %10
  %13 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3, i32 0
  %14 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %13, align 8
  %15 = icmp eq %"class.gl::QueryResult"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %14, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #15
  %18 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %14, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.gl::QueryResult"* %14 to i8*
  tail call void @_ZdlPv(i8* %22) #17
  br label %23

23:                                               ; preds = %12, %16, %21
  %24 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %25 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %24, align 8
  %26 = icmp eq %"class.gl::GPUTimingClient"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %25, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %28, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #15
  %30 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %28, i64 -2
  %35 = bitcast %"class.base::RefCounted.81"* %34 to %"class.gl::GPUTimingClient"*
  %36 = bitcast %"class.base::RefCounted.81"* %34 to void (%"class.gl::GPUTimingClient"*)***
  %37 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %37, i64 1
  %39 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %38, align 8
  tail call void %39(%"class.gl::GPUTimingClient"* nonnull %35) #15
  br label %40

40:                                               ; preds = %23, %27, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimer7DestroyEb(%"class.gl::GPUTimer"* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  br i1 %1, label %3, label %18

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %9 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %9, i64 0, i32 2
  %11 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4, i32 0
  %13 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %12, align 8
  %14 = icmp eq %"class.gl::QueryResult"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %13, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #15
  br label %17

17:                                               ; preds = %7, %15
  tail call void @_ZN2gl13GPUTimingImpl19EndElapsedTimeQueryE13scoped_refptrINS_11QueryResultEE(%"class.gl::GPUTimingImpl"* %11, %"class.gl::QueryResult"* %13)
  br label %18

18:                                               ; preds = %3, %17, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimer5ResetEv(%"class.gl::GPUTimer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3
  %3 = bitcast %class.scoped_refptr.3* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %2, i64 0, i32 0
  %5 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.gl::QueryResult"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %5, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %"class.gl::QueryResult"* %5 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %1, %7, %12
  %15 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4
  %16 = bitcast %class.scoped_refptr.3* %15 to i64*
  %17 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %15, i64 0, i32 0
  %18 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %17, align 8
  store i64 0, i64* %16, align 8
  %19 = icmp eq %"class.gl::QueryResult"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %22 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = bitcast %"class.gl::QueryResult"* %18 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %14, %20, %25
  %28 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  store i32 0, i32* %28, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimer14QueryTimeStampEv(%"class.gl::GPUTimer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3
  %3 = bitcast %class.scoped_refptr.3* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %2, i64 0, i32 0
  %5 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.gl::QueryResult"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %5, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %"class.gl::QueryResult"* %5 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %12, %7, %1
  %15 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4
  %16 = bitcast %class.scoped_refptr.3* %15 to i64*
  %17 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %15, i64 0, i32 0
  %18 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %17, align 8
  store i64 0, i64* %16, align 8
  %19 = icmp eq %"class.gl::QueryResult"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %22 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = bitcast %"class.gl::QueryResult"* %18 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %14, %20, %25
  %28 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %30 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %29, align 8
  %31 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %30, i64 0, i32 2
  %32 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %31, align 8
  %33 = tail call %"class.gl::QueryResult"* @_ZN2gl13GPUTimingImpl16DoTimeStampQueryEv(%"class.gl::GPUTimingImpl"* %32)
  %34 = ptrtoint %"class.gl::QueryResult"* %33 to i64
  %35 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %4, align 8
  store i64 %34, i64* %3, align 8
  %36 = icmp eq %"class.gl::QueryResult"* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %35, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #15
  %39 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %35, i64 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = bitcast %"class.gl::QueryResult"* %35 to i8*
  tail call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %27, %37, %42
  store i32 2, i32* %28, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimer5StartEv(%"class.gl::GPUTimer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3
  %3 = bitcast %class.scoped_refptr.3* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %2, i64 0, i32 0
  %5 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.gl::QueryResult"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %5, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #15
  %9 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %"class.gl::QueryResult"* %5 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %12, %7, %1
  %15 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4
  %16 = bitcast %class.scoped_refptr.3* %15 to i64*
  %17 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %15, i64 0, i32 0
  %18 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %17, align 8
  store i64 0, i64* %16, align 8
  %19 = icmp eq %"class.gl::QueryResult"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %22 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %18, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = bitcast %"class.gl::QueryResult"* %18 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %14, %20, %25
  %28 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %34 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %34, i64 0, i32 2
  %36 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %35, align 8
  %37 = tail call %"class.gl::QueryResult"* @_ZN2gl13GPUTimingImpl16DoTimeStampQueryEv(%"class.gl::GPUTimingImpl"* %36)
  %38 = ptrtoint %"class.gl::QueryResult"* %37 to i64
  %39 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %4, align 8
  store i64 %38, i64* %3, align 8
  %40 = icmp eq %"class.gl::QueryResult"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %39, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #15
  %43 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %39, i64 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = bitcast %"class.gl::QueryResult"* %39 to i8*
  tail call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %46, %41, %32, %27
  %49 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %50 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %49, align 8
  %51 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %50, i64 0, i32 2
  %52 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %51, align 8
  %53 = tail call %"class.gl::QueryResult"* @_ZN2gl13GPUTimingImpl21BeginElapsedTimeQueryEv(%"class.gl::GPUTimingImpl"* %52)
  %54 = ptrtoint %"class.gl::QueryResult"* %53 to i64
  %55 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %17, align 8
  store i64 %54, i64* %16, align 8
  %56 = icmp eq %"class.gl::QueryResult"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %55, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #15
  %59 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %55, i64 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = bitcast %"class.gl::QueryResult"* %55 to i8*
  tail call void @_ZdlPv(i8* %63) #17
  br label %64

64:                                               ; preds = %48, %57, %62
  store i32 1, i32* %28, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimer3EndEv(%"class.gl::GPUTimer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %3, i64 0, i32 2
  %5 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4, i32 0
  %7 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %6, align 8
  %8 = icmp eq %"class.gl::QueryResult"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %7, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #15
  br label %11

11:                                               ; preds = %1, %9
  tail call void @_ZN2gl13GPUTimingImpl19EndElapsedTimeQueryE13scoped_refptrINS_11QueryResultEE(%"class.gl::GPUTimingImpl"* %5, %"class.gl::QueryResult"* %7)
  %12 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  store i32 2, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl8GPUTimer11IsAvailableEv(%"class.gl::GPUTimer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %6, i64 0, i32 0
  %8 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %7, align 8
  %9 = icmp eq %"class.gl::QueryResult"* %8, null
  %10 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3
  %11 = select i1 %9, %class.scoped_refptr.3* %10, %class.scoped_refptr.3* %6
  %12 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %11, i64 0, i32 0
  %13 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %12, align 8
  %14 = icmp eq %"class.gl::QueryResult"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %13, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %16) #15
  br label %17

17:                                               ; preds = %5, %15
  %18 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %13, i64 0, i32 1
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  %23 = load %"class.gl::GPUTimingClient"*, %"class.gl::GPUTimingClient"** %22, align 8
  %24 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %23, i64 0, i32 2
  %25 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %24, align 8
  tail call void @_ZN2gl13GPUTimingImpl18UpdateQueryResultsEv(%"class.gl::GPUTimingImpl"* %25)
  %26 = load i8, i8* %18, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %21, %17
  store i32 3, i32* %2, align 4
  br label %29

29:                                               ; preds = %28, %21
  br i1 %14, label %37, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %13, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #15
  %32 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %13, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = bitcast %"class.gl::QueryResult"* %13 to i8*
  tail call void @_ZdlPv(i8* %36) #17
  br label %37

37:                                               ; preds = %35, %30, %29, %1
  %38 = load i32, i32* %2, align 4
  %39 = icmp eq i32 %38, 3
  ret i1 %39
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimer21GetStartEndTimestampsEPlS1_(%"class.gl::GPUTimer"* nocapture readonly, i64* nocapture, i64* nocapture) local_unnamed_addr #11 align 2 {
  %4 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3, i32 0
  %5 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %4, align 8
  %6 = icmp eq %"class.gl::QueryResult"* %5, null
  %7 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4, i32 0
  %8 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %7, align 8
  %9 = select i1 %6, %"class.gl::QueryResult"* %8, %"class.gl::QueryResult"* %5
  %10 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %9, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq %"class.gl::QueryResult"* %8, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %8, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %8, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 %15, %17
  br label %19

19:                                               ; preds = %3, %13
  %20 = phi i64 [ %18, %13 ], [ 0, %3 ]
  store i64 %11, i64* %1, align 8
  %21 = add nsw i64 %20, %11
  store i64 %21, i64* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2gl8GPUTimer15GetDeltaElapsedEv(%"class.gl::GPUTimer"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %2, align 8
  %4 = icmp eq %"class.gl::QueryResult"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %3, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %3, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %7, %9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i64 [ %10, %5 ], [ 0, %1 ]
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl8GPUTimerC2E13scoped_refptrINS_15GPUTimingClientEEb(%"class.gl::GPUTimer"* nocapture, %"class.gl::GPUTimingClient"*, i1 zeroext) unnamed_addr #2 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 2, i32 0
  store %"class.gl::GPUTimingClient"* %1, %"class.gl::GPUTimingClient"** %7, align 8
  %8 = icmp eq %"class.gl::GPUTimingClient"* %1, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3, i32 0
  %11 = bitcast %"class.gl::QueryResult"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %28

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #15
  %14 = getelementptr inbounds %"class.gl::GPUTimer", %"class.gl::GPUTimer"* %0, i64 0, i32 3, i32 0
  %15 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %15, i64 0, i32 0
  %17 = bitcast %"class.gl::QueryResult"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #15
  %18 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %15, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %15, i64 -2
  %23 = bitcast %"class.base::RefCounted.81"* %22 to %"class.gl::GPUTimingClient"*
  %24 = bitcast %"class.base::RefCounted.81"* %22 to void (%"class.gl::GPUTimingClient"*)***
  %25 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %25, i64 1
  %27 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %26, align 8
  tail call void %27(%"class.gl::GPUTimingClient"* nonnull %23) #15
  br label %28

28:                                               ; preds = %9, %12, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15GPUTimingClientC2EPNS_13GPUTimingImplE(%"class.gl::GPUTimingClient"* nocapture, %"class.gl::GPUTimingImpl"*) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl15GPUTimingClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  store %"class.gl::GPUTimingImpl"* %1, %"class.gl::GPUTimingImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 3
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 4
  %9 = icmp eq %"class.gl::GPUTimingImpl"* %1, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %7, align 8
  %13 = load i32, i32* %11, align 8
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %34

15:                                               ; preds = %10
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #15
  store i32 0, i32* %3, align 4
  %17 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %18 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %17, i64 0, i32 0
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #15
  %20 = bitcast i8* %19 to %"class.gl::GLApi"**
  %21 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %20, align 8
  %22 = bitcast %"class.gl::GLApi"* %21 to void (%"class.gl::GLApi"*, i32, i32*)***
  %23 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %23, i64 193
  %25 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %24, align 8
  call void %25(%"class.gl::GLApi"* %21, i32 36795, i32* nonnull %3) #15
  %26 = load i32, i32* %3, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 5
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 4
  br label %33

33:                                               ; preds = %28, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #15
  br label %34

34:                                               ; preds = %10, %33
  %35 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %8, align 4
  br label %37

37:                                               ; preds = %2, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.gl::GPUTimer"* @_ZN2gl15GPUTimingClient14CreateGPUTimerEb(%"class.gl::GPUTimingClient"*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = or i1 %5, %1
  %7 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  %8 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %7, align 8
  %9 = icmp eq %"class.gl::GPUTimingImpl"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %8, i64 0, i32 6
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = or i1 %6, %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i1 [ %14, %10 ], [ %6, %2 ]
  %17 = tail call i8* @_Znwm(i64 32) #17
  %18 = bitcast i8* %17 to %"class.gl::GPUTimer"*
  %19 = icmp eq %"class.gl::GPUTimingClient"* %0, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %22 = zext i1 %16 to i8
  store i8 %22, i8* %17, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %17, i64 8
  %26 = bitcast i8* %25 to %"class.gl::GPUTimingClient"**
  store %"class.gl::GPUTimingClient"* %0, %"class.gl::GPUTimingClient"** %26, align 8
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #15
  %27 = getelementptr inbounds i8, i8* %17, i64 16
  %28 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %28, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #15
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #15
  %30 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %43

33:                                               ; preds = %15
  %34 = zext i1 %16 to i8
  store i8 %34, i8* %17, align 8
  %35 = getelementptr inbounds i8, i8* %17, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 28, i1 false)
  br label %43

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.base::RefCounted.81", %"class.base::RefCounted.81"* %28, i64 -2
  %38 = bitcast %"class.base::RefCounted.81"* %37 to %"class.gl::GPUTimingClient"*
  %39 = bitcast %"class.base::RefCounted.81"* %37 to void (%"class.gl::GPUTimingClient"*)***
  %40 = load void (%"class.gl::GPUTimingClient"*)**, void (%"class.gl::GPUTimingClient"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %40, i64 1
  %42 = load void (%"class.gl::GPUTimingClient"*)*, void (%"class.gl::GPUTimingClient"*)** %41, align 8
  tail call void %42(%"class.gl::GPUTimingClient"* nonnull %38) #15
  br label %43

43:                                               ; preds = %33, %20, %36
  ret %"class.gl::GPUTimer"* %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl15GPUTimingClient11IsAvailableEv(%"class.gl::GPUTimingClient"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2gl15GPUTimingClient16GetTimerTypeNameEv(%"class.gl::GPUTimingClient"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZNK2gl15GPUTimingClient16GetTimerTypeNameEv, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  ret i8* %8

9:                                                ; preds = %1
  ret i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl15GPUTimingClient24CheckAndResetTimerErrorsEv(%"class.gl::GPUTimingClient"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %37

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  %8 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %31

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 0, i32* %2, align 4
  %14 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %15 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %14, i64 0, i32 0
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #15
  %17 = bitcast i8* %16 to %"class.gl::GLApi"**
  %18 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %17, align 8
  %19 = bitcast %"class.gl::GLApi"* %18 to void (%"class.gl::GLApi"*, i32, i32*)***
  %20 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %20, i64 193
  %22 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %21, align 8
  call void %22(%"class.gl::GLApi"* %18, i32 36795, i32* nonnull %2) #15
  %23 = load i32, i32* %2, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %8, i64 0, i32 5
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %8, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 4
  br label %30

30:                                               ; preds = %25, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  br label %31

31:                                               ; preds = %6, %30
  %32 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %8, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = icmp ne i32 %33, %35
  store i32 %33, i32* %34, align 4
  br label %37

37:                                               ; preds = %1, %31
  %38 = phi i1 [ %36, %31 ], [ false, %1 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2gl15GPUTimingClient17GetCurrentCPUTimeEv(%"class.gl::GPUTimingClient"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  %3 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  br label %14

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %11 = bitcast void ()** %10 to i64 (%"class.base::internal::BindStateBase"*)**
  %12 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::internal::BindStateBase"* nonnull %5) #15
  br label %14

14:                                               ; preds = %7, %9
  %15 = phi i64 [ %8, %7 ], [ %13, %9 ]
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15GPUTimingClient20SetCpuTimeForTestingEN4base17RepeatingCallbackIFlvEEE(%"class.gl::GPUTimingClient"* nocapture readonly, %"class.base::RepeatingCallback"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  %5 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::RepeatingCallback"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %5, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  %12 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %10, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %11) #15
  %13 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #15
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2gl15GPUTimingClient23IsForceTimeElapsedQueryEv(%"class.gl::GPUTimingClient"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  %3 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %3, i64 0, i32 6
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp ne i8 %5, 0
  ret i1 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl15GPUTimingClient21ForceTimeElapsedQueryEv(%"class.gl::GPUTimingClient"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.gl::GPUTimingClient", %"class.gl::GPUTimingClient"* %0, i64 0, i32 2
  %3 = load %"class.gl::GPUTimingImpl"*, %"class.gl::GPUTimingImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %3, i64 0, i32 6
  store i8 1, i8* %4, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl15GPUTimingClientD2Ev(%"class.gl::GPUTimingClient"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl15GPUTimingClientD0Ev(%"class.gl::GPUTimingClient"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.gl::GPUTimingClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl10TimerQuery17PrepareNextUpdateE13scoped_refptrIS0_E(%"class.gl::TimerQuery"*, %"class.gl::TimerQuery"*) unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.gl::TimerQuery"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %5, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %5, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %5, i64 -2
  %12 = bitcast %"class.base::RefCounted"* %11 to %"class.gl::TimerQuery"*
  %13 = bitcast %"class.base::RefCounted"* %11 to void (%"class.gl::TimerQuery"*)***
  %14 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %14, i64 5
  %16 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %15, align 8
  tail call void %16(%"class.gl::TimerQuery"* nonnull %12) #15
  br label %17

17:                                               ; preds = %2, %4, %10
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21TimeElapsedTimerQuery7DestroyEv(%"class.gl::TimeElapsedTimerQuery"*) unnamed_addr #2 comdat align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 2
  %8 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i32, i32*)***
  %9 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %9, i64 90
  %11 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %10, align 8
  tail call void %11(%"class.gl::GLApi"* %6, i32 1, i32* %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl21TimeElapsedTimerQuery11IsAvailableEPNS_13GPUTimingImplE(%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::GPUTimingImpl"*) unnamed_addr #2 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 12
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 13, i32 0
  %9 = load %"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimeElapsedTimerQuery"** %8, align 8
  %10 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %0, null
  br i1 %12, label %44, label %29

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %9, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #15
  %15 = icmp eq %"class.gl::TimeElapsedTimerQuery"* %9, %0
  %16 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %9, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #15
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 -2
  %23 = bitcast %"class.base::RefCounted"* %22 to %"class.gl::TimerQuery"*
  %24 = bitcast %"class.base::RefCounted"* %22 to void (%"class.gl::TimerQuery"*)***
  %25 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %25, i64 5
  %27 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %26, align 8
  tail call void %27(%"class.gl::TimerQuery"* nonnull %23) #15
  br i1 %15, label %44, label %29

28:                                               ; preds = %13
  br i1 %15, label %44, label %29

29:                                               ; preds = %2, %21, %11, %28
  %30 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #15
  store i32 0, i32* %3, align 4
  %31 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %32 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %31, i64 0, i32 0
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #15
  %34 = bitcast i8* %33 to %"class.gl::GLApi"**
  %35 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %34, align 8
  %36 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.gl::GLApi"* %35 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %39 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %39, i64 227
  %41 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %40, align 8
  call void %41(%"class.gl::GLApi"* %35, i32 %37, i32 34919, i32* nonnull %3) #15
  %42 = load i32, i32* %3, align 4
  %43 = icmp ne i32 %42, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15
  br label %44

44:                                               ; preds = %21, %11, %28, %29
  %45 = phi i1 [ %43, %29 ], [ false, %28 ], [ false, %11 ], [ false, %21 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21TimeElapsedTimerQuery18UpdateQueryResultsEPNS_13GPUTimingImplE(%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::GPUTimingImpl"*) unnamed_addr #2 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  store i64 0, i64* %3, align 8
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.gl::GLApi"* %9 to void (%"class.gl::GLApi"*, i32, i32, i64*)***
  %13 = load void (%"class.gl::GLApi"*, i32, i32, i64*)**, void (%"class.gl::GLApi"*, i32, i32, i64*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i64*)*, void (%"class.gl::GLApi"*, i32, i32, i64*)** %13, i64 225
  %15 = load void (%"class.gl::GLApi"*, i32, i32, i64*)*, void (%"class.gl::GLApi"*, i32, i32, i64*)** %14, align 8
  call void %15(%"class.gl::GLApi"* %9, i32 %11, i32 34918, i64* nonnull %3) #15
  %16 = load i64, i64* %3, align 8
  %17 = add i64 %16, 500
  %18 = udiv i64 %17, 1000
  %19 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 1
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 4
  %24 = load i64, i64* %23, align 8
  br label %25

25:                                               ; preds = %2, %22
  %26 = phi i64 [ %24, %22 ], [ 0, %2 ]
  %27 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 11
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %27, align 8
  %31 = icmp slt i64 %30, %29
  %32 = select i1 %31, i64 %29, i64 %30
  %33 = icmp slt i64 %26, %32
  %34 = select i1 %33, i64 %32, i64 %26
  %35 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8
  %37 = icmp eq %"class.base::internal::BindStateBase"* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %25
  %39 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  br label %45

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %36, i64 0, i32 1
  %42 = bitcast void ()** %41 to i64 (%"class.base::internal::BindStateBase"*)**
  %43 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %42, align 8
  %44 = call i64 %43(%"class.base::internal::BindStateBase"* nonnull %36) #15
  br label %45

45:                                               ; preds = %38, %40
  %46 = phi i64 [ %39, %38 ], [ %44, %40 ]
  %47 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = sub nsw i64 %46, %48
  %50 = icmp sgt i64 %18, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 8
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 9
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 5
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"class.gl::GPUTimingImpl", %"class.gl::GPUTimingImpl"* %1, i64 0, i32 10
  store i32 %58, i32* %59, align 8
  br label %60

60:                                               ; preds = %51, %45
  %61 = add nsw i64 %34, %18
  %62 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 3
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 5, i32 0
  %64 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %63, align 8
  %65 = icmp eq %"class.gl::QueryResult"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %64, i64 0, i32 2
  store i64 %34, i64* %67, align 8
  br label %68

68:                                               ; preds = %60, %66
  %69 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 6, i32 0
  %70 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %69, align 8
  %71 = icmp eq %"class.gl::QueryResult"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = load i64, i64* %62, align 8
  %74 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %70, i64 0, i32 1
  store i8 1, i8* %74, align 4
  %75 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %70, i64 0, i32 3
  store i64 %73, i64* %75, align 8
  br label %76

76:                                               ; preds = %68, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21TimeElapsedTimerQuery17PrepareNextUpdateE13scoped_refptrINS_10TimerQueryEE(%"class.gl::TimeElapsedTimerQuery"*, %"class.gl::TimerQuery"*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %1, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 3
  store i64 %4, i64* %5, align 8
  %6 = icmp eq %"class.gl::TimerQuery"* %1, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %8, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %9) #15
  %10 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %8, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %8, i64 -2
  %15 = bitcast %"class.base::RefCounted"* %14 to %"class.gl::TimerQuery"*
  %16 = bitcast %"class.base::RefCounted"* %14 to void (%"class.gl::TimerQuery"*)***
  %17 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %17, i64 5
  %19 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %18, align 8
  tail call void %19(%"class.gl::TimerQuery"* nonnull %15) #15
  br label %20

20:                                               ; preds = %2, %7, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21TimeElapsedTimerQueryD2Ev(%"class.gl::TimeElapsedTimerQuery"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl21TimeElapsedTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %3, align 8
  %5 = icmp eq %"class.gl::QueryResult"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #15
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.gl::QueryResult"* %4 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 5, i32 0
  %15 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %14, align 8
  %16 = icmp eq %"class.gl::QueryResult"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %15, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #15
  %19 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = bitcast %"class.gl::QueryResult"* %15 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %13, %17, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl21TimeElapsedTimerQueryD0Ev(%"class.gl::TimeElapsedTimerQuery"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl21TimeElapsedTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %3, align 8
  %5 = icmp eq %"class.gl::QueryResult"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #15
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.gl::QueryResult"* %4 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  br label %13

13:                                               ; preds = %11, %6, %1
  %14 = getelementptr inbounds %"class.gl::TimeElapsedTimerQuery", %"class.gl::TimeElapsedTimerQuery"* %0, i64 0, i32 5, i32 0
  %15 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %14, align 8
  %16 = icmp eq %"class.gl::QueryResult"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %15, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #15
  %19 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = bitcast %"class.gl::QueryResult"* %15 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %13, %17, %22
  %25 = bitcast %"class.gl::TimeElapsedTimerQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl19TimeStampTimerQuery7DestroyEv(%"class.gl::TimeStampTimerQuery"*) unnamed_addr #2 comdat align 2 {
  %2 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %3 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %2, i64 0, i32 0
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = bitcast i8* %4 to %"class.gl::GLApi"**
  %6 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 1
  %8 = bitcast %"class.gl::GLApi"* %6 to void (%"class.gl::GLApi"*, i32, i32*)***
  %9 = load void (%"class.gl::GLApi"*, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %9, i64 90
  %11 = load void (%"class.gl::GLApi"*, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32*)** %10, align 8
  tail call void %11(%"class.gl::GLApi"* %6, i32 1, i32* %7) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2gl19TimeStampTimerQuery11IsAvailableEPNS_13GPUTimingImplE(%"class.gl::TimeStampTimerQuery"*, %"class.gl::GPUTimingImpl"*) unnamed_addr #2 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store i32 0, i32* %3, align 4
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.gl::GLApi"* %9 to void (%"class.gl::GLApi"*, i32, i32, i32*)***
  %13 = load void (%"class.gl::GLApi"*, i32, i32, i32*)**, void (%"class.gl::GLApi"*, i32, i32, i32*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %13, i64 227
  %15 = load void (%"class.gl::GLApi"*, i32, i32, i32*)*, void (%"class.gl::GLApi"*, i32, i32, i32*)** %14, align 8
  call void %15(%"class.gl::GLApi"* %9, i32 %11, i32 34919, i32* nonnull %3) #15
  %16 = load i32, i32* %3, align 4
  %17 = icmp ne i32 %16, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl19TimeStampTimerQuery18UpdateQueryResultsEPNS_13GPUTimingImplE(%"class.gl::TimeStampTimerQuery"*, %"class.gl::GPUTimingImpl"*) unnamed_addr #2 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  store i64 0, i64* %3, align 8
  %5 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %6 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %5, i64 0, i32 0
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #15
  %8 = bitcast i8* %7 to %"class.gl::GLApi"**
  %9 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.gl::GLApi"* %9 to void (%"class.gl::GLApi"*, i32, i32, i64*)***
  %13 = load void (%"class.gl::GLApi"*, i32, i32, i64*)**, void (%"class.gl::GLApi"*, i32, i32, i64*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i64*)*, void (%"class.gl::GLApi"*, i32, i32, i64*)** %13, i64 225
  %15 = load void (%"class.gl::GLApi"*, i32, i32, i64*)*, void (%"class.gl::GLApi"*, i32, i32, i64*)** %14, align 8
  call void %15(%"class.gl::GLApi"* %9, i32 %11, i32 34918, i64* nonnull %3) #15
  %16 = load i64, i64* %3, align 8
  %17 = add i64 %16, 500
  %18 = udiv i64 %17, 1000
  %19 = call i64 @_ZN2gl13GPUTimingImpl20CalculateTimerOffsetEv(%"class.gl::GPUTimingImpl"* %1)
  %20 = add nsw i64 %18, %19
  %21 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 2, i32 0
  %22 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %21, align 8
  %23 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %22, i64 0, i32 2
  store i64 %20, i64* %23, align 8
  %24 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %21, align 8
  %25 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %24, i64 0, i32 1
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %24, i64 0, i32 3
  store i64 %20, i64* %26, align 8
  %27 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 0, i32 3
  store i64 %20, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl19TimeStampTimerQueryD2Ev(%"class.gl::TimeStampTimerQuery"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl19TimeStampTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %3, align 8
  %5 = icmp eq %"class.gl::QueryResult"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #15
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.gl::QueryResult"* %4 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  br label %13

13:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl19TimeStampTimerQueryD0Ev(%"class.gl::TimeStampTimerQuery"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2gl19TimeStampTimerQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::TimeStampTimerQuery", %"class.gl::TimeStampTimerQuery"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.gl::QueryResult"*, %"class.gl::QueryResult"** %3, align 8
  %5 = icmp eq %"class.gl::QueryResult"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #15
  %8 = getelementptr inbounds %"class.gl::QueryResult", %"class.gl::QueryResult"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.gl::QueryResult"* %4 to i8*
  tail call void @_ZdlPv(i8* %12) #17
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = bitcast %"class.gl::TimeStampTimerQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #17
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #7

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %7, %class.scoped_refptr.5* %8, %class.scoped_refptr.5* %12)
  %13 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %class.scoped_refptr.5* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"* %7, %class.scoped_refptr.5* %15, %class.scoped_refptr.5* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEE13DestructRangeIS5_Li0EEEvPS5_S8_(%"class.base::internal::VectorBuffer"*, %class.scoped_refptr.5*, %class.scoped_refptr.5*) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %class.scoped_refptr.5*, align 8
  %6 = alloca %class.scoped_refptr.5*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %class.scoped_refptr.5* %1, %class.scoped_refptr.5** %5, align 8
  store %class.scoped_refptr.5* %2, %class.scoped_refptr.5** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %class.scoped_refptr.5* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %class.scoped_refptr.5** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN2gl10TimerQueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #15
  %17 = bitcast %class.scoped_refptr.5** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN2gl10TimerQueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* %16, i8* %18) #15
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #15
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %26 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %5, align 8
  %27 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %6, align 8
  %28 = icmp eq %class.scoped_refptr.5* %26, %27
  br i1 %28, label %52, label %29

29:                                               ; preds = %25, %47
  %30 = phi %class.scoped_refptr.5* [ %49, %47 ], [ %26, %25 ]
  %31 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %30, i64 0, i32 0
  %32 = load %"class.gl::TimerQuery"*, %"class.gl::TimerQuery"** %31, align 8
  %33 = icmp eq %"class.gl::TimerQuery"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.gl::TimerQuery", %"class.gl::TimerQuery"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #15
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 -2
  %42 = bitcast %"class.base::RefCounted"* %41 to %"class.gl::TimerQuery"*
  %43 = bitcast %"class.base::RefCounted"* %41 to void (%"class.gl::TimerQuery"*)***
  %44 = load void (%"class.gl::TimerQuery"*)**, void (%"class.gl::TimerQuery"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %44, i64 5
  %46 = load void (%"class.gl::TimerQuery"*)*, void (%"class.gl::TimerQuery"*)** %45, align 8
  call void %46(%"class.gl::TimerQuery"* nonnull %42) #15
  br label %47

47:                                               ; preds = %29, %34, %40
  %48 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %5, align 8
  %49 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %48, i64 1
  store %class.scoped_refptr.5* %49, %class.scoped_refptr.5** %5, align 8
  %50 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %6, align 8
  %51 = icmp eq %class.scoped_refptr.5* %49, %50
  br i1 %51, label %52, label %29

52:                                               ; preds = %47, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %23, align 8
  %25 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %24, i64 %1
  ret %class.scoped_refptr.5* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN2gl10TimerQueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS6_14remove_pointerIS8_E4typeEEE5valueEPcE4typeESA_ENUlRNS6_13basic_ostreamIcNS6_11char_traitsIcEEEEPKvE_8__invokeESL_SN_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #12 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #15
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #15
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #15
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #15
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #15
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #15
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %116

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = ptrtoint %class.scoped_refptr.5* %14 to i64
  %16 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %17 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %18 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %17, align 8
  %19 = icmp ult %class.scoped_refptr.5* %18, %16
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %class.scoped_refptr.5* %18 to i64
  %22 = ptrtoint %class.scoped_refptr.5* %16 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %15) #15
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #15
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %15
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #15
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %class.scoped_refptr.5* %14, %16
  br i1 %37, label %114, label %38

38:                                               ; preds = %36
  %39 = getelementptr %class.scoped_refptr.5, %class.scoped_refptr.5* %16, i64 -1, i32 0
  %40 = ptrtoint %"class.gl::TimerQuery"** %39 to i64
  %41 = sub i64 %40, %15
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 7
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %38, %46
  %47 = phi %class.scoped_refptr.5* [ %55, %46 ], [ %18, %38 ]
  %48 = phi %class.scoped_refptr.5* [ %54, %46 ], [ %14, %38 ]
  %49 = phi i64 [ %56, %46 ], [ %44, %38 ]
  %50 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %48, i64 0, i32 0
  %51 = bitcast %class.scoped_refptr.5* %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.scoped_refptr.5* %47 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %50, align 8
  %54 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %48, i64 1
  %55 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %47, i64 1
  %56 = add i64 %49, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %46, !llvm.loop !4

58:                                               ; preds = %46, %38
  %59 = phi %class.scoped_refptr.5* [ %18, %38 ], [ %55, %46 ]
  %60 = phi %class.scoped_refptr.5* [ %14, %38 ], [ %54, %46 ]
  %61 = icmp ult i64 %41, 56
  br i1 %61, label %114, label %62

62:                                               ; preds = %58, %62
  %63 = phi %class.scoped_refptr.5* [ %112, %62 ], [ %59, %58 ]
  %64 = phi %class.scoped_refptr.5* [ %111, %62 ], [ %60, %58 ]
  %65 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr.5* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr.5* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %65, align 8
  %69 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 1
  %70 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 1
  %71 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %69, i64 0, i32 0
  %72 = bitcast %class.scoped_refptr.5* %69 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %class.scoped_refptr.5* %70 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %71, align 8
  %75 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 2
  %76 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 2
  %77 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %75, i64 0, i32 0
  %78 = bitcast %class.scoped_refptr.5* %75 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %class.scoped_refptr.5* %76 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %77, align 8
  %81 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 3
  %82 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 3
  %83 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %81, i64 0, i32 0
  %84 = bitcast %class.scoped_refptr.5* %81 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %class.scoped_refptr.5* %82 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %83, align 8
  %87 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 4
  %88 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 4
  %89 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %87, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr.5* %87 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %class.scoped_refptr.5* %88 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %89, align 8
  %93 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 5
  %94 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 5
  %95 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %93, i64 0, i32 0
  %96 = bitcast %class.scoped_refptr.5* %93 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.scoped_refptr.5* %94 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %95, align 8
  %99 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 6
  %100 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 6
  %101 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %99, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr.5* %99 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr.5* %100 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %101, align 8
  %105 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 7
  %106 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 7
  %107 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %105, i64 0, i32 0
  %108 = bitcast %class.scoped_refptr.5* %105 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %class.scoped_refptr.5* %106 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %107, align 8
  %111 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %64, i64 8
  %112 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %63, i64 8
  %113 = icmp eq %class.scoped_refptr.5* %111, %16
  br i1 %113, label %114, label %62

114:                                              ; preds = %58, %62, %36
  %115 = sub i64 %2, %1
  br label %322

116:                                              ; preds = %6
  %117 = icmp ult i64 %2, %1
  br i1 %117, label %118, label %322

118:                                              ; preds = %116
  %119 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %120 = ptrtoint %class.scoped_refptr.5* %119 to i64
  %121 = tail call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %122 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %123 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %122, align 8
  %124 = icmp ult %class.scoped_refptr.5* %123, %121
  br i1 %124, label %125, label %141

125:                                              ; preds = %118
  %126 = ptrtoint %class.scoped_refptr.5* %123 to i64
  %127 = ptrtoint %class.scoped_refptr.5* %121 to i64
  %128 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %127, i64 %120) #15
  %129 = extractvalue { i64, i1 } %128, 1
  %130 = extractvalue { i64, i1 } %128, 0
  %131 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %126, i64 %130) #15
  %132 = extractvalue { i64, i1 } %131, 1
  %133 = or i1 %129, %132
  br i1 %133, label %134, label %135, !prof !3

134:                                              ; preds = %125
  tail call void @llvm.trap() #15
  unreachable

135:                                              ; preds = %125
  %136 = extractvalue { i64, i1 } %131, 0
  %137 = icmp ugt i64 %136, %120
  br i1 %137, label %138, label %141

138:                                              ; preds = %135
  %139 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #15
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #15
  br label %141

141:                                              ; preds = %138, %135, %118
  %142 = icmp eq %class.scoped_refptr.5* %119, %121
  br i1 %142, label %219, label %143

143:                                              ; preds = %141
  %144 = getelementptr %class.scoped_refptr.5, %class.scoped_refptr.5* %121, i64 -1, i32 0
  %145 = ptrtoint %"class.gl::TimerQuery"** %144 to i64
  %146 = sub i64 %145, %120
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %143, %151
  %152 = phi %class.scoped_refptr.5* [ %160, %151 ], [ %123, %143 ]
  %153 = phi %class.scoped_refptr.5* [ %159, %151 ], [ %119, %143 ]
  %154 = phi i64 [ %161, %151 ], [ %149, %143 ]
  %155 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %153, i64 0, i32 0
  %156 = bitcast %class.scoped_refptr.5* %153 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %class.scoped_refptr.5* %152 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %155, align 8
  %159 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %153, i64 1
  %160 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %152, i64 1
  %161 = add i64 %154, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %151, !llvm.loop !6

163:                                              ; preds = %151, %143
  %164 = phi %class.scoped_refptr.5* [ %123, %143 ], [ %160, %151 ]
  %165 = phi %class.scoped_refptr.5* [ %119, %143 ], [ %159, %151 ]
  %166 = icmp ult i64 %146, 56
  br i1 %166, label %219, label %167

167:                                              ; preds = %163, %167
  %168 = phi %class.scoped_refptr.5* [ %217, %167 ], [ %164, %163 ]
  %169 = phi %class.scoped_refptr.5* [ %216, %167 ], [ %165, %163 ]
  %170 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 0, i32 0
  %171 = bitcast %class.scoped_refptr.5* %169 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %class.scoped_refptr.5* %168 to i64*
  store i64 %172, i64* %173, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %170, align 8
  %174 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 1
  %175 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 1
  %176 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %174, i64 0, i32 0
  %177 = bitcast %class.scoped_refptr.5* %174 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %class.scoped_refptr.5* %175 to i64*
  store i64 %178, i64* %179, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %176, align 8
  %180 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 2
  %181 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 2
  %182 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %180, i64 0, i32 0
  %183 = bitcast %class.scoped_refptr.5* %180 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %class.scoped_refptr.5* %181 to i64*
  store i64 %184, i64* %185, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %182, align 8
  %186 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 3
  %187 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 3
  %188 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %186, i64 0, i32 0
  %189 = bitcast %class.scoped_refptr.5* %186 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %class.scoped_refptr.5* %187 to i64*
  store i64 %190, i64* %191, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %188, align 8
  %192 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 4
  %193 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 4
  %194 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %192, i64 0, i32 0
  %195 = bitcast %class.scoped_refptr.5* %192 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %class.scoped_refptr.5* %193 to i64*
  store i64 %196, i64* %197, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %194, align 8
  %198 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 5
  %199 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 5
  %200 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %198, i64 0, i32 0
  %201 = bitcast %class.scoped_refptr.5* %198 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %class.scoped_refptr.5* %199 to i64*
  store i64 %202, i64* %203, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %200, align 8
  %204 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 6
  %205 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 6
  %206 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %204, i64 0, i32 0
  %207 = bitcast %class.scoped_refptr.5* %204 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %class.scoped_refptr.5* %205 to i64*
  store i64 %208, i64* %209, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %206, align 8
  %210 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 7
  %211 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 7
  %212 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %210, i64 0, i32 0
  %213 = bitcast %class.scoped_refptr.5* %210 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %class.scoped_refptr.5* %211 to i64*
  store i64 %214, i64* %215, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %212, align 8
  %216 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %169, i64 8
  %217 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %168, i64 8
  %218 = icmp eq %class.scoped_refptr.5* %216, %121
  br i1 %218, label %219, label %167

219:                                              ; preds = %163, %167, %141
  %220 = sub i64 %11, %1
  %221 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %222 = ptrtoint %class.scoped_refptr.5* %221 to i64
  %223 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %224 = call dereferenceable(8) %class.scoped_refptr.5* @_ZN4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %220)
  %225 = icmp ult %class.scoped_refptr.5* %224, %223
  br i1 %225, label %226, label %242

226:                                              ; preds = %219
  %227 = ptrtoint %class.scoped_refptr.5* %224 to i64
  %228 = ptrtoint %class.scoped_refptr.5* %223 to i64
  %229 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %228, i64 %222) #15
  %230 = extractvalue { i64, i1 } %229, 1
  %231 = extractvalue { i64, i1 } %229, 0
  %232 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %227, i64 %231) #15
  %233 = extractvalue { i64, i1 } %232, 1
  %234 = or i1 %230, %233
  br i1 %234, label %235, label %236, !prof !3

235:                                              ; preds = %226
  call void @llvm.trap() #15
  unreachable

236:                                              ; preds = %226
  %237 = extractvalue { i64, i1 } %232, 0
  %238 = icmp ugt i64 %237, %222
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0)) #15
  %241 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #15
  br label %242

242:                                              ; preds = %239, %236, %219
  %243 = icmp eq %class.scoped_refptr.5* %221, %223
  br i1 %243, label %320, label %244

244:                                              ; preds = %242
  %245 = getelementptr %class.scoped_refptr.5, %class.scoped_refptr.5* %223, i64 -1, i32 0
  %246 = ptrtoint %"class.gl::TimerQuery"** %245 to i64
  %247 = sub i64 %246, %222
  %248 = lshr i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %264, label %252

252:                                              ; preds = %244, %252
  %253 = phi %class.scoped_refptr.5* [ %261, %252 ], [ %224, %244 ]
  %254 = phi %class.scoped_refptr.5* [ %260, %252 ], [ %221, %244 ]
  %255 = phi i64 [ %262, %252 ], [ %250, %244 ]
  %256 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %254, i64 0, i32 0
  %257 = bitcast %class.scoped_refptr.5* %254 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %class.scoped_refptr.5* %253 to i64*
  store i64 %258, i64* %259, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %256, align 8
  %260 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %254, i64 1
  %261 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %253, i64 1
  %262 = add i64 %255, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %252, !llvm.loop !7

264:                                              ; preds = %252, %244
  %265 = phi %class.scoped_refptr.5* [ %224, %244 ], [ %261, %252 ]
  %266 = phi %class.scoped_refptr.5* [ %221, %244 ], [ %260, %252 ]
  %267 = icmp ult i64 %247, 56
  br i1 %267, label %320, label %268

268:                                              ; preds = %264, %268
  %269 = phi %class.scoped_refptr.5* [ %318, %268 ], [ %265, %264 ]
  %270 = phi %class.scoped_refptr.5* [ %317, %268 ], [ %266, %264 ]
  %271 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 0, i32 0
  %272 = bitcast %class.scoped_refptr.5* %270 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %class.scoped_refptr.5* %269 to i64*
  store i64 %273, i64* %274, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %271, align 8
  %275 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 1
  %276 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 1
  %277 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %275, i64 0, i32 0
  %278 = bitcast %class.scoped_refptr.5* %275 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %class.scoped_refptr.5* %276 to i64*
  store i64 %279, i64* %280, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %277, align 8
  %281 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 2
  %282 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 2
  %283 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %281, i64 0, i32 0
  %284 = bitcast %class.scoped_refptr.5* %281 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %class.scoped_refptr.5* %282 to i64*
  store i64 %285, i64* %286, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %283, align 8
  %287 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 3
  %288 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 3
  %289 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %287, i64 0, i32 0
  %290 = bitcast %class.scoped_refptr.5* %287 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %class.scoped_refptr.5* %288 to i64*
  store i64 %291, i64* %292, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %289, align 8
  %293 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 4
  %294 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 4
  %295 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %293, i64 0, i32 0
  %296 = bitcast %class.scoped_refptr.5* %293 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %class.scoped_refptr.5* %294 to i64*
  store i64 %297, i64* %298, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %295, align 8
  %299 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 5
  %300 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 5
  %301 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %299, i64 0, i32 0
  %302 = bitcast %class.scoped_refptr.5* %299 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %class.scoped_refptr.5* %300 to i64*
  store i64 %303, i64* %304, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %301, align 8
  %305 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 6
  %306 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 6
  %307 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %305, i64 0, i32 0
  %308 = bitcast %class.scoped_refptr.5* %305 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %class.scoped_refptr.5* %306 to i64*
  store i64 %309, i64* %310, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %307, align 8
  %311 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 7
  %312 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 7
  %313 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %311, i64 0, i32 0
  %314 = bitcast %class.scoped_refptr.5* %311 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %class.scoped_refptr.5* %312 to i64*
  store i64 %315, i64* %316, align 8
  store %"class.gl::TimerQuery"* null, %"class.gl::TimerQuery"** %313, align 8
  %317 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %270, i64 8
  %318 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %269, i64 8
  %319 = icmp eq %class.scoped_refptr.5* %317, %223
  br i1 %319, label %320, label %268

320:                                              ; preds = %264, %268, %242
  %321 = add i64 %220, %2
  br label %322

322:                                              ; preds = %116, %320, %114
  %323 = phi i64 [ %321, %320 ], [ %115, %114 ], [ 0, %116 ]
  store i64 %323, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #14

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.5* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN2gl10TimerQueryEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.scoped_refptr.5*, %class.scoped_refptr.5** %23, align 8
  %25 = getelementptr inbounds %class.scoped_refptr.5, %class.scoped_refptr.5* %24, i64 %1
  ret %class.scoped_refptr.5* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #15
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #15
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #15
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %27
  tail call void @llvm.trap() #15
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #15
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeI13scoped_refptrIN2gl10TimerQueryEEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #15
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #15
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #15
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
