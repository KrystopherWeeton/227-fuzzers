; ModuleID = '../../third_party/blink/renderer/core/svg/animation/element_smil_animations.cc'
source_filename = "../../third_party/blink/renderer/core/svg/animation/element_smil_animations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.145", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.186", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.126", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__cxx_atomic_impl.47" }
%"struct.std::__1::__cxx_atomic_impl.47" = type { %"struct.std::__1::__cxx_atomic_base_impl.48" }
%"struct.std::__1::__cxx_atomic_base_impl.48" = type { i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.44" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.104", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i64 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { float }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.129", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.138" }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.153" }
%"class.WTF::VectorBuffer.153" = type { %"class.WTF::VectorBufferBase.154" }
%"class.WTF::VectorBufferBase.154" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.167" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.190" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.185 }
%class.scoped_refptr.185 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.195" }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ElementSMILAnimations" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::QualifiedName", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SMILAnimationSandwich"* }
%"class.blink::SMILAnimationSandwich" = type { %"class.blink::HeapVector", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.8"*, i32, i32 }
%"class.blink::Member.8" = type opaque
%"class.blink::SVGAnimationElement" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6RehashEjPS7_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_21SMILAnimationSandwichEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_21SMILAnimationSandwichEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21SMILAnimationSandwichEEEPhm = comdat any

$_ZN5blink9NameTraitINS_21SMILAnimationSandwichEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE4findERKS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS2_S7_S8_S9_SE_SC_SF_EE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [79 x i8] c"../../third_party/blink/renderer/core/svg/animation/element_smil_animations.cc\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"it != sandwiches_.end()\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_21SMILAnimationSandwichEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [447 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::QualifiedName, WTF::KeyValuePair<blink::QualifiedName, blink::Member<blink::SMILAnimationSandwich> >, WTF::KeyValuePairKeyExtractor, blink::QualifiedNameHash, WTF::HashMapValueTraits<WTF::HashTraits<blink::QualifiedName>, WTF::HashTraits<blink::Member<blink::SMILAnimationSandwich> > >, WTF::HashTraits<blink::QualifiedName>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SMILAnimationSandwichEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SMILAnimationSandwich]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21SMILAnimationSandwichEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink21ElementSMILAnimationsC1Ev = hidden unnamed_addr alias void (%"class.blink::ElementSMILAnimations"*), void (%"class.blink::ElementSMILAnimations"*)* @_ZN5blink21ElementSMILAnimationsC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ElementSMILAnimationsC2Ev(%"class.blink::ElementSMILAnimations"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::ElementSMILAnimations"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 20, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ElementSMILAnimations12AddAnimationERKNS_13QualifiedNameEPNS_19SVGAnimationElementE(%"class.blink::ElementSMILAnimations"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::SVGAnimationElement"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store i8* null, i8** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %1, i8** nonnull dereferenceable(8) %4) #5
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 0
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %10 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::SMILAnimationSandwich"*, %"class.blink::SMILAnimationSandwich"** %10, align 8
  %12 = icmp eq %"class.blink::SMILAnimationSandwich"* %11, null
  br i1 %12, label %13, label %28

13:                                               ; preds = %3
  %14 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21SMILAnimationSandwichEEEPhm(i64 32) #5
  %15 = bitcast i8* %14 to %"class.blink::SMILAnimationSandwich"*
  call void @_ZN5blink21SMILAnimationSandwichC1Ev(%"class.blink::SMILAnimationSandwich"* %15) #5
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = ptrtoint i8* %14 to i64
  %21 = bitcast %"class.blink::Member"* %9 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %14 to %"class.blink::SMILAnimationSandwich"*
  br i1 %23, label %28, label %25

25:                                               ; preds = %13
  %26 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %14) #5
  %27 = load %"class.blink::SMILAnimationSandwich"*, %"class.blink::SMILAnimationSandwich"** %10, align 8
  br label %28

28:                                               ; preds = %3, %25, %13
  %29 = phi %"class.blink::SMILAnimationSandwich"* [ %11, %3 ], [ %27, %25 ], [ %24, %13 ]
  call void @_ZN5blink21SMILAnimationSandwich3AddEPNS_19SVGAnimationElementE(%"class.blink::SMILAnimationSandwich"* %29, %"class.blink::SVGAnimationElement"* %2) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink21SMILAnimationSandwich3AddEPNS_19SVGAnimationElementE(%"class.blink::SMILAnimationSandwich"*, %"class.blink::SVGAnimationElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ElementSMILAnimations15RemoveAnimationERKNS_13QualifiedNameEPNS_19SVGAnimationElementE(%"class.blink::ElementSMILAnimations"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::SVGAnimationElement"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %1) #5
  %7 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 0
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %6, 1
  %9 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %7, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), i32 25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0)) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %3, %16
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::SMILAnimationSandwich"*, %"class.blink::SMILAnimationSandwich"** %20, align 8
  call void @_ZN5blink21SMILAnimationSandwich6RemoveEPNS_19SVGAnimationElementE(%"class.blink::SMILAnimationSandwich"* %21, %"class.blink::SVGAnimationElement"* %2) #5
  %22 = getelementptr inbounds %"class.blink::SMILAnimationSandwich", %"class.blink::SMILAnimationSandwich"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  call void @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS2_S7_S8_S9_SE_SC_SF_EE(%"class.WTF::HashTable"* %5, %"struct.WTF::KeyValuePair"* %7, %"struct.WTF::KeyValuePair"* %8) #5
  br label %26

26:                                               ; preds = %25, %19
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN5blink21SMILAnimationSandwich6RemoveEPNS_19SVGAnimationElementE(%"class.blink::SMILAnimationSandwich"*, %"class.blink::SVGAnimationElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ElementSMILAnimations5ApplyENS_8SMILTimeE(%"class.blink::ElementSMILAnimations"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ElementSMILAnimations", %"class.blink::ElementSMILAnimations"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %37, label %12

12:                                               ; preds = %2
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %12
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  br label %18

18:                                               ; preds = %25, %14
  %19 = phi %"struct.WTF::KeyValuePair"* [ %7, %14 ], [ %26, %25 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %21, %17
  %23 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %21, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %24 = or i1 %23, %22
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %11
  br i1 %27, label %37, label %18

28:                                               ; preds = %18, %12
  %29 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %19, %18 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %11
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  br label %39

34:                                               ; preds = %39, %60, %57
  %35 = and i8 %45, 1
  %36 = icmp ne i8 %35, 0
  br label %37

37:                                               ; preds = %25, %2, %34, %28
  %38 = phi i1 [ false, %28 ], [ %36, %34 ], [ false, %2 ], [ false, %25 ]
  ret i1 %38

39:                                               ; preds = %31, %60
  %40 = phi i8 [ 0, %31 ], [ %45, %60 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %51, %60 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 0, i32 1, i32 0, i32 0
  %43 = load %"class.blink::SMILAnimationSandwich"*, %"class.blink::SMILAnimationSandwich"** %42, align 8
  tail call void @_ZN5blink21SMILAnimationSandwich26UpdateActiveAnimationStackENS_8SMILTimeE(%"class.blink::SMILAnimationSandwich"* %43, i64 %1) #5
  %44 = tail call zeroext i1 @_ZN5blink21SMILAnimationSandwich20ApplyAnimationValuesEv(%"class.blink::SMILAnimationSandwich"* %43) #5
  %45 = select i1 %44, i8 1, i8 %40
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %41, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %11
  br i1 %47, label %34, label %48

48:                                               ; preds = %39
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  br label %50

50:                                               ; preds = %57, %48
  %51 = phi %"struct.WTF::KeyValuePair"* [ %46, %48 ], [ %58, %57 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %53, %49
  %55 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %53, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %56 = or i1 %55, %54
  br i1 %56, label %57, label %60

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair"* %58, %11
  br i1 %59, label %34, label %50

60:                                               ; preds = %50
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %51, %11
  br i1 %61, label %34, label %39
}

declare void @_ZN5blink21SMILAnimationSandwich26UpdateActiveAnimationStackENS_8SMILTimeE(%"class.blink::SMILAnimationSandwich"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21SMILAnimationSandwich20ApplyAnimationValuesEv(%"class.blink::SMILAnimationSandwich"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21ElementSMILAnimations5TraceEPNS_7VisitorE(%"class.blink::ElementSMILAnimations"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ElementSMILAnimations"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast %"class.blink::ElementSMILAnimations"* %0 to i8**
  %6 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %1, i8** %5) #5
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #5
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS2_DnEENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::QualifiedName"* dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 16777215
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %18) #5
  %25 = load i32, i32* %19, align 4
  %26 = and i32 %24, 16777215
  %27 = and i32 %25, -16777216
  %28 = or i32 %27, %26
  store i32 %28, i32* %19, align 4
  br label %29

29:                                               ; preds = %11, %23
  %30 = phi i32 [ %21, %11 ], [ %26, %23 ]
  %31 = and i32 %30, %15
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %32
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %101, label %40

40:                                               ; preds = %29
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %42 = xor i32 %30, -1
  %43 = lshr i32 %30, 23
  %44 = add nsw i32 %43, %42
  %45 = shl i32 %44, 12
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 7
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 2
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 20
  %52 = xor i32 %51, %50
  %53 = or i32 %52, 1
  %54 = zext i32 %53 to i64
  br label %55

55:                                               ; preds = %40, %66
  %56 = phi %"struct.WTF::KeyValuePair"* [ %33, %40 ], [ %72, %66 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %40 ], [ %67, %66 ]
  %58 = phi i64 [ %32, %40 ], [ %71, %66 ]
  %59 = phi i64 [ 0, %40 ], [ %69, %66 ]
  %60 = bitcast %"struct.WTF::KeyValuePair"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast i8* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, %64
  br i1 %65, label %180, label %66

66:                                               ; preds = %55, %63
  %67 = phi %"struct.WTF::KeyValuePair"* [ %57, %63 ], [ %56, %55 ]
  %68 = icmp eq i64 %59, 0
  %69 = select i1 %68, i64 %54, i64 %59
  %70 = add i64 %69, %58
  %71 = and i64 %70, %16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %38
  br i1 %75, label %76, label %55

76:                                               ; preds = %66
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  %80 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #5
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %38, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8, !alias.scope !2
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %38, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 1
  %85 = load i32, i32* %84, align 4, !noalias !2
  %86 = and i32 %85, 16777216
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #5, !noalias !2
  br label %90

90:                                               ; preds = %78, %83, %88
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1
  %92 = bitcast %"class.blink::Member"* %91 to i64*
  store i64 0, i64* %92, align 8, !alias.scope !2
  %93 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* nonnull %79, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(16) %4) #5
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %94) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #5
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, 2147483647
  %98 = and i32 %97, 2147483647
  %99 = and i32 %96, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %95, align 8
  br label %101

101:                                              ; preds = %29, %76, %90
  %102 = phi %"struct.WTF::KeyValuePair"* [ %67, %90 ], [ %72, %76 ], [ %33, %29 ]
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %104 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 16777216
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %103, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %111) #5
  br label %112

112:                                              ; preds = %110, %105, %101
  %113 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %103 to i64
  %114 = bitcast %"struct.WTF::KeyValuePair"* %102 to i64*
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %102, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %116, null
  br i1 %117, label %130, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 16777216
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #5
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %116) #5
  %129 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %116 to i8*
  call void @free(i8* %129) #5
  br label %130

130:                                              ; preds = %112, %118, %123, %128
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %102, i64 0, i32 1
  %132 = bitcast %"class.blink::Member"* %131 to i64*
  store atomic i64 0, i64* %132 monotonic, align 8
  %133 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %168, label %135

135:                                              ; preds = %130
  %136 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %137 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %136, i64 0, i32 1
  %138 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %137) #5
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %142, !prof !5

140:                                              ; preds = %135
  %141 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %137, i8* %141) #5
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i8* [ %141, %140 ], [ %138, %135 ]
  %144 = bitcast i8* %143 to %"class.blink::ThreadState"**
  %145 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 9
  %147 = load i8, i8* %146, align 1, !range !6
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 13
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %145, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %153, align 8
  %155 = load atomic i64, i64* %132 monotonic, align 8
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %165, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %154, i64 0, i32 0, i32 0
  %159 = inttoptr i64 %155 to i8*
  %160 = bitcast %"class.blink::MarkingVisitor"* %154 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %161, i64 5
  %163 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %162, align 8
  call void %163(%"class.blink::Visitor"* %158, i8* nonnull %159, i8* %159, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv) #5
  %164 = load i64, i64* %150, align 8
  br label %165

165:                                              ; preds = %157, %149
  %166 = phi i64 [ %152, %149 ], [ %164, %157 ]
  %167 = add i64 %166, -1
  store i64 %167, i64* %150, align 8
  br label %168

168:                                              ; preds = %130, %142, %165
  %169 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %173 = load i32, i32* %172, align 8
  %174 = add i32 %173, %171
  %175 = shl i32 %174, 1
  %176 = load i32, i32* %13, align 8
  %177 = icmp ult i32 %175, %176
  br i1 %177, label %180, label %178

178:                                              ; preds = %168
  %179 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %102)
  br label %180

180:                                              ; preds = %63, %168, %178
  %181 = phi i8 [ 1, %168 ], [ 1, %178 ], [ 0, %63 ]
  %182 = phi %"struct.WTF::KeyValuePair"* [ %102, %168 ], [ %179, %178 ], [ %56, %63 ]
  %183 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %182, 0
  %184 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %183, i8 %181, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %184
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #5
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #5
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #5
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable"* %0, i32 %32, %"struct.WTF::KeyValuePair"* %1)
  ret %"struct.WTF::KeyValuePair"* %33
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.WTF::KeyValuePair", align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %7, %1
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #5
  store i8 -86, i8* %5, align 1
  %10 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable"* %0, i32 %1, %"struct.WTF::KeyValuePair"* %2, i8* nonnull dereferenceable(1) %5)
  %11 = load i8, i8* %5, align 1, !range !6
  %12 = icmp eq i8 %11, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #5
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = zext i32 %1 to i64
  %15 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %14) #5
  %16 = bitcast %"class.blink::HeapHashTableBacking"* %15 to %"struct.WTF::KeyValuePair"*
  br label %22

17:                                               ; preds = %3
  %18 = zext i32 %1 to i64
  %19 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %18) #5
  %20 = bitcast %"class.blink::HeapHashTableBacking"* %19 to %"struct.WTF::KeyValuePair"*
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %49, label %22

22:                                               ; preds = %13, %17
  %23 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %20, %17 ]
  %24 = phi i64 [ %14, %13 ], [ %18, %17 ]
  %25 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  %26 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !7
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %26, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 1
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 0, i32 0
  br label %32

32:                                               ; preds = %45, %22
  %33 = phi i64 [ 0, %22 ], [ %47, %45 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #5
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8, !noalias !7
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8, !alias.scope !7
  %37 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4, !noalias !7
  %41 = and i32 %40, 16777216
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #5, !noalias !7
  br label %45

45:                                               ; preds = %43, %38, %32
  store i64 0, i64* %30, align 8, !alias.scope !7
  %46 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %35, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(16) %4) #5
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %31) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #5
  %47 = add nuw nsw i64 %33, 1
  %48 = icmp eq i64 %47, %24
  br i1 %48, label %49, label %32

49:                                               ; preds = %45, %17
  %50 = phi %"struct.WTF::KeyValuePair"* [ %20, %17 ], [ %23, %45 ]
  %51 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %50, i32 %1, %"struct.WTF::KeyValuePair"* %2)
  br label %52

52:                                               ; preds = %9, %49
  %53 = phi %"struct.WTF::KeyValuePair"* [ %51, %49 ], [ %10, %9 ]
  ret %"struct.WTF::KeyValuePair"* %53
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.WTF::KeyValuePair", align 8
  %6 = alloca %"struct.WTF::KeyValuePair", align 8
  %7 = alloca %"struct.WTF::KeyValuePair", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #5
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %4
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #5
  br label %15

15:                                               ; preds = %13, %4
  %16 = phi i8* [ %14, %13 ], [ %11, %4 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 6
  %20 = load i8, i8* %19, align 8, !range !6
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 16
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %30, label %26

26:                                               ; preds = %15, %22
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 13
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %26
  %31 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #5
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5
  br label %33

33:                                               ; preds = %26, %30
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %35 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, null
  br i1 %36, label %170, label %37

37:                                               ; preds = %33
  %38 = zext i32 %1 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = bitcast %"struct.WTF::KeyValuePair"* %35 to i8*
  %41 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %40, i64 %39) #5
  br i1 %41, label %42, label %170

42:                                               ; preds = %37
  store i8 1, i8* %3, align 1
  %43 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %46 = zext i32 %44 to i64
  %47 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #5
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair"*
  %49 = icmp eq i32 %44, 0
  br i1 %49, label %84, label %50

50:                                               ; preds = %42
  %51 = bitcast %"struct.WTF::KeyValuePair"* %7 to i8*
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !10
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %52, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1
  %56 = bitcast %"class.blink::Member"* %55 to i64*
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 0
  br label %58

58:                                               ; preds = %71, %50
  %59 = phi i64 [ 0, %50 ], [ %73, %71 ]
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %59
  %61 = bitcast %"struct.WTF::KeyValuePair"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #5
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8, !noalias !10
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8, !alias.scope !10
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 4, !noalias !10
  %67 = and i32 %66, 16777216
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %70) #5, !noalias !10
  br label %71

71:                                               ; preds = %69, %64, %58
  store i64 0, i64* %56, align 8, !alias.scope !10
  %72 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %61, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(16) %7) #5
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %57) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #5
  %73 = add nuw nsw i64 %59, 1
  %74 = icmp eq i64 %73, %46
  br i1 %74, label %75, label %58

75:                                               ; preds = %71
  br i1 %49, label %84, label %76

76:                                               ; preds = %75
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %77, i64 0, i32 0, i32 0
  %79 = bitcast %"struct.WTF::KeyValuePair"* %6 to i8*
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 1
  %82 = bitcast %"class.blink::Member"* %81 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 0, i32 0
  br label %102

84:                                               ; preds = %148, %42, %75
  %85 = phi %"struct.WTF::KeyValuePair"* [ null, %75 ], [ null, %42 ], [ %109, %148 ]
  %86 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %47, %"class.blink::HeapHashTableBacking"** %86, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %47, i64 0, i32 0
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #5
  br label %92

92:                                               ; preds = %84, %89
  %93 = icmp eq i32 %1, 0
  br i1 %93, label %151, label %94

94:                                               ; preds = %92
  %95 = bitcast %"struct.WTF::KeyValuePair"* %5 to i8*
  %96 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8, !noalias !13
  %97 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %96, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %100 = bitcast %"class.blink::Member"* %99 to i64*
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0
  br label %153

102:                                              ; preds = %148, %76
  %103 = phi i64 [ 0, %76 ], [ %149, %148 ]
  %104 = phi %"struct.WTF::KeyValuePair"* [ null, %76 ], [ %109, %148 ]
  %105 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 %103
  %107 = icmp eq %"struct.WTF::KeyValuePair"* %106, %2
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %103
  %109 = select i1 %107, %"struct.WTF::KeyValuePair"* %108, %"struct.WTF::KeyValuePair"* %104
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %106, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %113 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, %112
  %114 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %111, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %115 = or i1 %114, %113
  br i1 %115, label %116, label %128

116:                                              ; preds = %102
  %117 = bitcast %"struct.WTF::KeyValuePair"* %108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #5
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %112, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8, !alias.scope !16
  %118 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %112, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 1
  %121 = load i32, i32* %120, align 4, !noalias !16
  %122 = and i32 %121, 16777216
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %125) #5, !noalias !16
  br label %126

126:                                              ; preds = %116, %119, %124
  store i64 0, i64* %82, align 8, !alias.scope !16
  %127 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %117, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(16) %6) #5
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %83) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #5
  br label %148

128:                                              ; preds = %102
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %129) #5
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %130, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %132 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %130, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 16777216
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %139) #5
  br label %140

140:                                              ; preds = %128, %133, %138
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %103, i32 1
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %105, i64 %103, i32 1
  %143 = bitcast %"class.blink::Member"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::Member"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %34, align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %146, i64 %103, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %147) #5
  br label %148

148:                                              ; preds = %126, %140
  %149 = add nuw nsw i64 %103, 1
  %150 = icmp eq i64 %149, %46
  br i1 %150, label %84, label %102

151:                                              ; preds = %166, %92
  %152 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %45, i32 %1, %"struct.WTF::KeyValuePair"* %85)
  br label %170

153:                                              ; preds = %166, %94
  %154 = phi i64 [ 0, %94 ], [ %168, %166 ]
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %154
  %156 = bitcast %"struct.WTF::KeyValuePair"* %155 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #5
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8, !noalias !13
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %157, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8, !alias.scope !13
  %158 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %157, null
  br i1 %158, label %166, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 4, !noalias !13
  %162 = and i32 %161, 16777216
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %165) #5, !noalias !13
  br label %166

166:                                              ; preds = %153, %159, %164
  store i64 0, i64* %100, align 8, !alias.scope !13
  %167 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8* %156, %"struct.WTF::KeyValuePair"* nonnull dereferenceable(16) %5) #5
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %101) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #5
  %168 = add nuw nsw i64 %154, 1
  %169 = icmp eq i64 %168, %38
  br i1 %169, label %151, label %153

170:                                              ; preds = %37, %33, %151
  %171 = phi %"struct.WTF::KeyValuePair"* [ %152, %151 ], [ null, %33 ], [ null, %37 ]
  ret %"struct.WTF::KeyValuePair"* %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %27

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %21 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %83

23:                                               ; preds = %122
  %24 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = ptrtoint i8* %25 to i64
  br label %27

27:                                               ; preds = %15, %23
  %28 = phi i64 [ %16, %15 ], [ %26, %23 ]
  %29 = phi i32 [ 0, %15 ], [ %123, %23 ]
  %30 = phi i8* [ %17, %15 ], [ %25, %23 ]
  %31 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %125, %23 ]
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %40

36:                                               ; preds = %27
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %30) #5
  %37 = load i32, i32* %12, align 8
  %38 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %34, %36
  %41 = phi i64* [ %35, %34 ], [ %38, %36 ]
  %42 = phi i64 [ %28, %34 ], [ %39, %36 ]
  %43 = phi i32 [ %29, %34 ], [ %37, %36 ]
  %44 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  store atomic i64 %42, i64* %44 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = inttoptr i64 %42 to i8*
  %50 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #5
  br label %51

51:                                               ; preds = %40, %48
  store i32 %2, i32* %12, align 8
  store i64 %45, i64* %41, align 8
  store i32 %43, i32* %8, align 8
  %52 = inttoptr i64 %45 to %"struct.WTF::KeyValuePair"*
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %79, label %54

54:                                               ; preds = %51
  %55 = icmp eq i32 %43, 0
  br i1 %55, label %77, label %56

56:                                               ; preds = %54
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %57, i64 0, i32 0, i32 0
  %59 = zext i32 %43 to i64
  br label %60

60:                                               ; preds = %74, %56
  %61 = phi i64 [ 0, %56 ], [ %75, %74 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %65
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %68 = or i1 %67, %66
  br i1 %68, label %74, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %70) #5
  %71 = bitcast %"struct.WTF::KeyValuePair"* %62 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 %61, i32 1
  %73 = bitcast %"class.blink::Member"* %72 to i64*
  store atomic i64 0, i64* %73 monotonic, align 8
  br label %74

74:                                               ; preds = %69, %60
  %75 = add nuw nsw i64 %61, 1
  %76 = icmp eq i64 %75, %59
  br i1 %76, label %77, label %60

77:                                               ; preds = %74, %54
  %78 = inttoptr i64 %45 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %78) #5
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %79

79:                                               ; preds = %51, %77
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, -2147483648
  store i32 %82, i32* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret %"struct.WTF::KeyValuePair"* %31

83:                                               ; preds = %18, %122
  %84 = phi i32 [ %13, %18 ], [ %123, %122 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %22, %18 ], [ %124, %122 ]
  %86 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %125, %122 ]
  %87 = phi i32 [ 0, %18 ], [ %126, %122 ]
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 %88
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %93 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, %92
  %94 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %91, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %95 = or i1 %94, %93
  br i1 %95, label %122, label %96

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %97) #5
  %99 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %98, 0
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %100) #5
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %101, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %103 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %101, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 16777216
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %110) #5
  br label %111

111:                                              ; preds = %96, %104, %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 %88, i32 1
  %114 = bitcast %"class.blink::Member"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %117, i64 %88
  %119 = icmp eq %"struct.WTF::KeyValuePair"* %118, %3
  %120 = select i1 %119, %"struct.WTF::KeyValuePair"* %99, %"struct.WTF::KeyValuePair"* %86
  %121 = load i32, i32* %12, align 8
  br label %122

122:                                              ; preds = %83, %111
  %123 = phi i32 [ %84, %83 ], [ %121, %111 ]
  %124 = phi %"struct.WTF::KeyValuePair"* [ %85, %83 ], [ %117, %111 ]
  %125 = phi %"struct.WTF::KeyValuePair"* [ %86, %83 ], [ %120, %111 ]
  %126 = add i32 %87, 1
  %127 = icmp eq i32 %126, %123
  br i1 %127, label %23, label %83
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF15ConstructTraitsINS_12KeyValuePairIN5blink13QualifiedNameENS2_6MemberINS2_21SMILAnimationSandwichEEEEENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENS9_IS6_EEEENS2_13HeapAllocatorEE25ConstructAndNotifyElementIJS7_EEEPS7_PvDpOT_(i8*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = bitcast i8* %0 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %7 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 16777216
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %5, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #5
  br label %15

15:                                               ; preds = %2, %8, %13
  %16 = getelementptr inbounds i8, i8* %0, i64 8
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %18 = bitcast %"class.blink::Member"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %15
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #5
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !5

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #5
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 9
  %35 = load i8, i8* %34, align 1, !range !6
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %41, align 8
  %43 = load atomic i64, i64* %20 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %42, i64 0, i32 0, i32 0
  %47 = inttoptr i64 %43 to i8*
  %48 = bitcast %"class.blink::MarkingVisitor"* %42 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, i64 5
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, align 8
  tail call void %51(%"class.blink::Visitor"* %46, i8* nonnull %47, i8* %47, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv) #5
  %52 = load i64, i64* %38, align 8
  br label %53

53:                                               ; preds = %45, %37
  %54 = phi i64 [ %40, %37 ], [ %52, %45 ]
  %55 = add i64 %54, -1
  store i64 %55, i64* %38, align 8
  br label %56

56:                                               ; preds = %15, %30, %53
  ret %"struct.WTF::KeyValuePair"* %3
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.6, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_21SMILAnimationSandwichEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS1_12KeyValuePairIS3_NS_6MemberINS_21SMILAnimationSandwichEEEEENS1_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([447 x i8], [447 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13QualifiedNameENS_12KeyValuePairIS4_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #5
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %21, i8* %22) #5
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #5
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !5

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #5
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #5
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #5
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS3_12KeyValuePairIS5_NS_6MemberINS_21SMILAnimationSandwichEEEEENS3_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !5

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %18
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %39, %24
  %28 = phi i64 [ 0, %24 ], [ %41, %39 ]
  %29 = phi i32 [ 0, %24 ], [ %40, %39 ]
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %28
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, %33
  %35 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %32, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %36 = or i1 %35, %34
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %38) #5
  br label %39

39:                                               ; preds = %37, %27
  %40 = add i32 %29, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ugt i64 %21, %41
  br i1 %42, label %27, label %43

43:                                               ; preds = %39, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13QualifiedNameENS2_12KeyValuePairIS4_NS_6MemberINS_21SMILAnimationSandwichEEEEENS2_24KeyValuePairKeyExtractorENS_17QualifiedNameHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS4_NS3_6MemberINS3_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS3_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #5
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %20
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %35

34:                                               ; preds = %73, %20
  ret void

35:                                               ; preds = %73, %30
  %36 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %36
  br i1 %28, label %38, label %56

38:                                               ; preds = %35
  %39 = bitcast %"struct.WTF::KeyValuePair"* %37 to i64*
  %40 = load atomic i64, i64* %39 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %41
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %41, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %45 = or i1 %44, %43
  br i1 %45, label %73, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %36, i32 1
  %48 = bitcast %"class.blink::Member"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %0, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv) #5
  br label %73

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %60 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %59
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %62 = or i1 %61, %60
  br i1 %62, label %73, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %36, i32 1
  %65 = bitcast %"class.blink::Member"* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv) #5
  br label %73

73:                                               ; preds = %68, %63, %38, %46, %51, %56
  %74 = add nuw nsw i64 %36, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21SMILAnimationSandwichEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SMILAnimationSandwich"*
  tail call void @_ZNK5blink21SMILAnimationSandwich5TraceEPNS_7VisitorE(%"class.blink::SMILAnimationSandwich"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZNK5blink21SMILAnimationSandwich5TraceEPNS_7VisitorE(%"class.blink::SMILAnimationSandwich"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #5
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %24
  %26 = ptrtoint %"struct.WTF::KeyValuePair"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"struct.WTF::KeyValuePair"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, null
  %54 = ptrtoint %"struct.WTF::KeyValuePair"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %33 ], [ %69, %68 ]
  %58 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %25, %33 ], [ %74, %68 ]
  %60 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %61 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %62 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, inttoptr (i64 -1 to i8*)
  br i1 %64, label %68, label %65

65:                                               ; preds = %56
  %66 = bitcast i8* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %34, %66
  br i1 %67, label %79, label %68

68:                                               ; preds = %65, %56
  %69 = phi %"struct.WTF::KeyValuePair"* [ %57, %65 ], [ %59, %56 ]
  %70 = icmp eq i64 %61, 0
  %71 = select i1 %70, i64 %47, i64 %61
  %72 = add i64 %71, %60
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %73
  %75 = ptrtoint %"struct.WTF::KeyValuePair"* %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %65, %50
  %80 = phi i64 [ %55, %50 ], [ %58, %65 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %65 ]
  %82 = inttoptr i64 %80 to %"struct.WTF::KeyValuePair"*
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %83, i8 %81, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink21SMILAnimationSandwichC1Ev(%"class.blink::SMILAnimationSandwich"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21SMILAnimationSandwichEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !5

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21SMILAnimationSandwichEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SMILAnimationSandwichEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21SMILAnimationSandwichEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE4findERKS2_(%"class.WTF::HashTable"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #5
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %70, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"struct.WTF::KeyValuePair"* [ %27, %34 ], [ %64, %59 ]
  %51 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"*
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %70, label %49

68:                                               ; preds = %49
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %50, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %59, %68, %23, %2
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 %74
  br label %81

76:                                               ; preds = %68
  %77 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %78 = load i32, i32* %7, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %79
  br label %81

81:                                               ; preds = %70, %76
  %82 = phi %"struct.WTF::KeyValuePair"* [ %50, %76 ], [ %75, %70 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %80, %76 ], [ %75, %70 ]
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %82, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %84, %"struct.WTF::KeyValuePair"* %83, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %85
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE5eraseENS_17HashTableIteratorIS2_S7_S8_S9_SE_SC_SF_EE(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %8
  %10 = icmp eq %"struct.WTF::KeyValuePair"* %9, %1
  br i1 %10, label %56, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %12) #5
  %13 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %13, align 8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  %19 = and i32 %18, 2147483647
  %20 = and i32 %17, -2147483648
  %21 = or i32 %19, %20
  store i32 %21, i32* %16, align 8
  %22 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = add i32 %23, -1
  store i32 %24, i32* %22, align 4
  %25 = mul i32 %24, 6
  %26 = load i32, i32* %6, align 8
  %27 = icmp ult i32 %25, %26
  %28 = icmp ugt i32 %26, 8
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %56

30:                                               ; preds = %11
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #5
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !5

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #5
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 6
  %42 = load i8, i8* %41, align 8, !range !6
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 16
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %56, label %48

48:                                               ; preds = %37, %44
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 13
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i32, i32* %6, align 8
  %54 = lshr i32 %53, 1
  %55 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13QualifiedNameENS_12KeyValuePairIS2_NS1_6MemberINS1_21SMILAnimationSandwichEEEEENS_24KeyValuePairKeyExtractorENS1_17QualifiedNameHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSB_IS6_EEEESC_NS1_13HeapAllocatorEE6RehashEjPS7_(%"class.WTF::HashTable"* %0, i32 %54, %"struct.WTF::KeyValuePair"* null) #5
  br label %56

56:                                               ; preds = %44, %11, %52, %48, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv: argument 0"}
!4 = distinct !{!4, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsIN5blink13QualifiedNameEEENS1_INS2_6MemberINS2_21SMILAnimationSandwichEEEEEE10EmptyValueEv"}
