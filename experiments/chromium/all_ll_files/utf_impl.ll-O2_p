; ModuleID = '../../third_party/icu/source/common/utf_impl.cpp'
source_filename = "../../third_party/icu/source/common/utf_impl.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@utf8_countTrailBytes_69 = hidden local_unnamed_addr constant <{ [245 x i8], [11 x i8] }> <{ [245 x i8] cx i8] zeroinitializer }>, align 16
@.str = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@_ZL15utf8_errorValue = internal unnamed_addr constant [6 x i32] [i32 21, i32 159, i32 65535, i32 1114111, i32 0, i32 0], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @utf8_nextCharSafeBody_69(i8* nocapture readonly, i32* nocapture, i32, i32, i8 signext) local_unnamed_addr #0 {
  %6 = load i32, i32* %1, align 4
  %7 = icmp eq i32 %6, %2
  %8 = icmp sgt i32 %3, 244
  %9 = or i1 %8, %7
  br i1 %9, label %148, label %10

10:                                               ; preds = %5
  %11 = icmp sgt i32 %3, 239
  br i1 %11, label %12, label %66

12:                                               ; preds = %10
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = and i32 %3, 7
  %17 = zext i8 %15 to i32
  %18 = lshr i32 %17, 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = shl i32 1, %16
  %24 = and i32 %23, %22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %148, label %26

26:                                               ; preds = %12
  %27 = add nsw i32 %6, 1
  %28 = icmp eq i32 %27, %2
  br i1 %28, label %148, label %29

29:                                               ; preds = %26
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = xor i8 %32, -128
  %34 = zext i8 %33 to i32
  %35 = icmp ult i8 %33, 64
  br i1 %35, label %36, label %148

36:                                               ; preds = %29
  %37 = add nsw i32 %6, 2
  %38 = icmp eq i32 %37, %2
  br i1 %38, label %148, label %39

39:                                               ; preds = %36
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = xor i8 %42, -128
  %44 = icmp ult i8 %43, 64
  br i1 %44, label %45, label %148

45:                                               ; preds = %39
  %46 = zext i8 %43 to i32
  %47 = add nsw i32 %6, 3
  %48 = shl nuw nsw i32 %16, 18
  %49 = shl nuw nsw i32 %17, 12
  %50 = and i32 %49, 258048
  %51 = or i32 %50, %48
  %52 = shl nuw nsw i32 %34, 6
  %53 = or i32 %51, %52
  %54 = or i32 %53, %46
  %55 = icmp sgt i8 %4, 0
  %56 = icmp ugt i32 %54, 64975
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %45
  %59 = icmp ult i32 %54, 65008
  %60 = and i32 %54, 65534
  %61 = icmp eq i32 %60, 65534
  %62 = or i1 %59, %61
  %63 = icmp ult i32 %54, 1114112
  %64 = and i1 %63, %62
  br i1 %64, label %151, label %65

65:                                               ; preds = %45, %58
  store i32 %47, i32* %1, align 4
  br label %164

66:                                               ; preds = %10
  %67 = icmp sgt i32 %3, 223
  br i1 %67, label %68, label %134

68:                                               ; preds = %66
  %69 = and i32 %3, 15
  %70 = icmp eq i8 %4, -2
  %71 = sext i32 %6 to i64
  %72 = getelementptr inbounds i8, i8* %0, i64 %71
  %73 = load i8, i8* %72, align 1
  br i1 %70, label %110, label %74

74:                                               ; preds = %68
  %75 = zext i32 %69 to i64
  %76 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = sext i8 %77 to i32
  %79 = zext i8 %73 to i32
  %80 = lshr i32 %79, 5
  %81 = shl i32 1, %80
  %82 = and i32 %81, %78
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %148, label %84

84:                                               ; preds = %74
  %85 = add nsw i32 %6, 1
  %86 = icmp eq i32 %85, %2
  br i1 %86, label %148, label %87

87:                                               ; preds = %84
  %88 = sext i32 %85 to i64
  %89 = getelementptr inbounds i8, i8* %0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = xor i8 %90, -128
  %92 = icmp ult i8 %91, 64
  br i1 %92, label %93, label %148

93:                                               ; preds = %87
  %94 = zext i8 %91 to i32
  %95 = add nsw i32 %6, 2
  %96 = shl nuw nsw i32 %69, 12
  %97 = shl nuw nsw i32 %79, 6
  %98 = and i32 %97, 4032
  %99 = or i32 %98, %96
  %100 = or i32 %99, %94
  %101 = icmp sgt i8 %4, 0
  %102 = icmp ugt i32 %100, 64975
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %93
  %105 = icmp ult i32 %100, 65008
  %106 = and i32 %100, 65534
  %107 = icmp eq i32 %106, 65534
  %108 = or i1 %105, %107
  br i1 %108, label %151, label %109

109:                                              ; preds = %93, %104
  store i32 %95, i32* %1, align 4
  br label %164

110:                                              ; preds = %68
  %111 = xor i8 %73, -128
  %112 = zext i8 %111 to i32
  %113 = icmp ult i8 %111, 64
  br i1 %113, label %114, label %157

114:                                              ; preds = %110
  %115 = icmp ne i32 %69, 0
  %116 = icmp ugt i8 %111, 31
  %117 = or i1 %115, %116
  br i1 %117, label %118, label %157

118:                                              ; preds = %114
  %119 = add nsw i32 %6, 1
  %120 = icmp eq i32 %119, %2
  br i1 %120, label %157, label %121

121:                                              ; preds = %118
  %122 = sext i32 %119 to i64
  %123 = getelementptr inbounds i8, i8* %0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = xor i8 %124, -128
  %126 = icmp ult i8 %125, 64
  br i1 %126, label %127, label %157

127:                                              ; preds = %121
  %128 = zext i8 %125 to i32
  %129 = add nsw i32 %6, 2
  store i32 %129, i32* %1, align 4
  %130 = shl nuw nsw i32 %69, 12
  %131 = shl nuw nsw i32 %112, 6
  %132 = or i32 %131, %130
  %133 = or i32 %132, %128
  br label %164

134:                                              ; preds = %66
  %135 = icmp sgt i32 %3, 193
  br i1 %135, label %136, label %148

136:                                              ; preds = %134
  %137 = sext i32 %6 to i64
  %138 = getelementptr inbounds i8, i8* %0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = xor i8 %139, -128
  %141 = icmp ult i8 %140, 64
  br i1 %141, label %142, label %148

142:                                              ; preds = %136
  %143 = zext i8 %140 to i32
  %144 = add nsw i32 %6, 1
  store i32 %144, i32* %1, align 4
  %145 = shl i32 %3, 6
  %146 = add nsw i32 %145, -12288
  %147 = or i32 %146, %143
  br label %164

148:                                              ; preds = %136, %87, %74, %84, %29, %39, %12, %26, %36, %134, %5
  %149 = phi i32 [ %6, %5 ], [ %6, %134 ], [ %6, %12 ], [ %2, %26 ], [ %27, %29 ], [ %2, %36 ], [ %37, %39 ], [ %6, %74 ], [ %2, %84 ], [ %85, %87 ], [ %6, %136 ]
  %150 = icmp sgt i8 %4, -1
  br i1 %150, label %151, label %157

151:                                              ; preds = %58, %104, %148
  %152 = phi i32 [ %149, %148 ], [ %95, %104 ], [ %47, %58 ]
  %153 = sub nsw i32 %152, %6
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZL15utf8_errorValue, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  br label %161

157:                                              ; preds = %114, %118, %121, %110, %148
  %158 = phi i32 [ %149, %148 ], [ %6, %114 ], [ %6, %110 ], [ %2, %118 ], [ %119, %121 ]
  %159 = icmp eq i8 %4, -3
  %160 = select i1 %159, i32 65533, i32 -1
  br label %161

161:                                              ; preds = %151, %157
  %162 = phi i32 [ %152, %151 ], [ %158, %157 ]
  %163 = phi i32 [ %156, %151 ], [ %160, %157 ]
  store i32 %162, i32* %1, align 4
  br label %164

164:                                              ; preds = %142, %127, %109, %65, %161
  %165 = phi i32 [ %163, %161 ], [ %54, %65 ], [ %100, %109 ], [ %133, %127 ], [ %147, %142 ]
  ret i32 %165
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @utf8_appendCharSafeBody_69(i8* nocapture, i32, i32, i32, i8*) local_unnamed_addr #1 {
  %6 = icmp ult i32 %3, 2048
  br i1 %6, label %7, label %22

7:                                                ; preds = %5
  %8 = add nsw i32 %1, 1
  %9 = icmp slt i32 %8, %2
  br i1 %9, label %10, label %80

10:                                               ; preds = %7
  %11 = lshr i32 %3, 6
  %12 = trunc i32 %11 to i8
  %13 = or i8 %12, -64
  %14 = sext i32 %1 to i64
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  store i8 %13, i8* %15, align 1
  %16 = trunc i32 %3 to i8
  %17 = and i8 %16, 63
  %18 = or i8 %17, -128
  %19 = add nsw i32 %1, 2
  %20 = sext i32 %8 to i64
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  store i8 %18, i8* %21, align 1
  br label %126

22:                                               ; preds = %5
  %23 = icmp ult i32 %3, 65536
  br i1 %23, label %24, label %49

24:                                               ; preds = %22
  %25 = add nsw i32 %1, 2
  %26 = icmp sge i32 %25, %2
  %27 = and i32 %3, -2048
  %28 = icmp eq i32 %27, 55296
  %29 = or i1 %26, %28
  br i1 %29, label %80, label %30

30:                                               ; preds = %24
  %31 = lshr i32 %3, 12
  %32 = trunc i32 %31 to i8
  %33 = or i8 %32, -32
  %34 = add nsw i32 %1, 1
  %35 = sext i32 %1 to i64
  %36 = getelementptr inbounds i8, i8* %0, i64 %35
  store i8 %33, i8* %36, align 1
  %37 = lshr i32 %3, 6
  %38 = trunc i32 %37 to i8
  %39 = and i8 %38, 63
  %40 = or i8 %39, -128
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds i8, i8* %0, i64 %41
  store i8 %40, i8* %42, align 1
  %43 = trunc i32 %3 to i8
  %44 = and i8 %43, 63
  %45 = or i8 %44, -128
  %46 = add nsw i32 %1, 3
  %47 = sext i32 %25 to i64
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  store i8 %45, i8* %48, align 1
  br label %126

49:                                               ; preds = %22
  %50 = icmp ult i32 %3, 1114112
  %51 = add nsw i32 %1, 3
  %52 = icmp slt i32 %51, %2
  %53 = and i1 %52, %50
  br i1 %53, label %54, label %80

54:                                               ; preds = %49
  %55 = lshr i32 %3, 18
  %56 = trunc i32 %55 to i8
  %57 = or i8 %56, -16
  %58 = add nsw i32 %1, 1
  %59 = sext i32 %1 to i64
  %60 = getelementptr inbounds i8, i8* %0, i64 %59
  store i8 %57, i8* %60, align 1
  %61 = lshr i32 %3, 12
  %62 = trunc i32 %61 to i8
  %63 = and i8 %62, 63
  %64 = or i8 %63, -128
  %65 = add nsw i32 %1, 2
  %66 = sext i32 %58 to i64
  %67 = getelementptr inbounds i8, i8* %0, i64 %66
  store i8 %64, i8* %67, align 1
  %68 = lshr i32 %3, 6
  %69 = trunc i32 %68 to i8
  %70 = and i8 %69, 63
  %71 = or i8 %70, -128
  %72 = sext i32 %65 to i64
  %73 = getelementptr inbounds i8, i8* %0, i64 %72
  store i8 %71, i8* %73, align 1
  %74 = trunc i32 %3 to i8
  %75 = and i8 %74, 63
  %76 = or i8 %75, -128
  %77 = add nsw i32 %1, 4
  %78 = sext i32 %51 to i64
  %79 = getelementptr inbounds i8, i8* %0, i64 %78
  store i8 %76, i8* %79, align 1
  br label %126

80:                                               ; preds = %24, %49, %7
  %81 = icmp eq i8* %4, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %80
  store i8 1, i8* %4, align 1
  br label %126

83:                                               ; preds = %80
  %84 = sub nsw i32 %2, %1
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %126

86:                                               ; preds = %83
  %87 = icmp slt i32 %84, 3
  %88 = select i1 %87, i32 %84, i32 3
  %89 = sext i32 %1 to i64
  %90 = getelementptr inbounds i8, i8* %0, i64 %89
  %91 = add nsw i32 %88, -1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [6 x i32], [6 x i32]* @_ZL15utf8_errorValue, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i64 %92, -1
  %96 = icmp ugt i64 %95, 2
  br i1 %96, label %97, label %99

97:                                               ; preds = %86
  %98 = trunc i32 %94 to i8
  store i8 %98, i8* %90, align 1
  br label %123

99:                                               ; preds = %86
  %100 = or i64 %92, 1
  %101 = icmp eq i64 %100, 3
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = lshr i32 %94, 6
  %104 = trunc i32 %103 to i8
  %105 = or i8 %104, -64
  store i8 %105, i8* %90, align 1
  br label %115

106:                                              ; preds = %99
  %107 = lshr i32 %94, 12
  %108 = trunc i32 %107 to i8
  %109 = or i8 %108, -32
  store i8 %109, i8* %90, align 1
  %110 = lshr i32 %94, 6
  %111 = trunc i32 %110 to i8
  %112 = and i8 %111, 63
  %113 = or i8 %112, -128
  %114 = getelementptr inbounds i8, i8* %90, i64 1
  store i8 %113, i8* %114, align 1
  br label %115

115:                                              ; preds = %106, %102
  %116 = phi i32 [ 1, %102 ], [ 2, %106 ]
  %117 = trunc i32 %94 to i8
  %118 = and i8 %117, 63
  %119 = or i8 %118, -128
  %120 = add nuw nsw i32 %116, 1
  %121 = zext i32 %116 to i64
  %122 = getelementptr inbounds i8, i8* %90, i64 %121
  store i8 %119, i8* %122, align 1
  br label %123

123:                                              ; preds = %115, %97
  %124 = phi i32 [ 1, %97 ], [ %120, %115 ]
  %125 = add nsw i32 %124, %1
  br label %126

126:                                              ; preds = %82, %123, %83, %54, %30, %10
  %127 = phi i32 [ %19, %10 ], [ %46, %30 ], [ %77, %54 ], [ %1, %82 ], [ %125, %123 ], [ %1, %83 ]
  ret i32 %127
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @utf8_prevCharSafeBody_69(i8* nocapture readonly, i32, i32* nocapture, i32, i8 signext) local_unnamed_addr #0 {
  %6 = load i32, i32* %2, align 4
  %7 = trunc i32 %3 to i8
  %8 = icmp slt i8 %7, -64
  %9 = icmp sgt i32 %6, %1
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %161

11:                                               ; preds = %5
  %12 = add nsw i32 %6, -1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = add i8 %15, 62
  %18 = icmp ult i8 %17, 51
  br i1 %18, label %19, label %49

19:                                               ; preds = %11
  %20 = icmp ult i8 %15, -32
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  store i32 %12, i32* %2, align 4
  %22 = shl nuw nsw i32 %16, 6
  %23 = add nsw i32 %22, -12288
  %24 = and i32 %3, 63
  %25 = or i32 %23, %24
  br label %166

26:                                               ; preds = %19
  %27 = icmp ult i8 %15, -16
  %28 = lshr i32 %3, 4
  %29 = and i32 %28, 15
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %30
  %32 = and i32 %16, 15
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %33
  %35 = lshr i32 %3, 5
  %36 = select i1 %27, i32 %35, i32 %16
  %37 = select i1 %27, i8* %34, i8* %31
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = and i32 %36, 7
  %41 = shl i32 1, %40
  %42 = and i32 %41, %39
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %161, label %44

44:                                               ; preds = %26
  store i32 %12, i32* %2, align 4
  %45 = icmp sgt i8 %4, -1
  br i1 %45, label %166, label %46

46:                                               ; preds = %44
  %47 = icmp eq i8 %4, -3
  %48 = select i1 %47, i32 65533, i32 -1
  br label %166

49:                                               ; preds = %11
  %50 = icmp slt i8 %15, -64
  %51 = icmp sgt i32 %12, %1
  %52 = and i1 %51, %50
  br i1 %52, label %53, label %161

53:                                               ; preds = %49
  %54 = and i32 %3, 63
  %55 = add nsw i32 %6, -2
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = add i8 %58, 32
  %61 = icmp ult i8 %60, 21
  br i1 %61, label %62, label %119

62:                                               ; preds = %53
  %63 = icmp ult i8 %58, -16
  br i1 %63, label %64, label %104

64:                                               ; preds = %62
  %65 = and i8 %58, 15
  %66 = icmp eq i8 %4, -2
  br i1 %66, label %92, label %67

67:                                               ; preds = %64
  %68 = zext i8 %65 to i64
  %69 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = lshr i32 %16, 5
  %73 = shl i32 1, %72
  %74 = and i32 %73, %71
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %161, label %76

76:                                               ; preds = %67
  %77 = zext i8 %65 to i32
  store i32 %55, i32* %2, align 4
  %78 = shl nuw nsw i32 %77, 12
  %79 = shl nuw nsw i32 %16, 6
  %80 = and i32 %79, 4032
  %81 = or i32 %80, %54
  %82 = or i32 %81, %78
  %83 = icmp sgt i8 %4, 0
  %84 = icmp ugt i32 %82, 64975
  %85 = and i1 %83, %84
  br i1 %85, label %86, label %166

86:                                               ; preds = %76
  %87 = icmp ult i32 %82, 65008
  %88 = and i32 %82, 65534
  %89 = icmp eq i32 %88, 65534
  %90 = or i1 %87, %89
  %91 = select i1 %90, i32 65535, i32 %82
  ret i32 %91

92:                                               ; preds = %64
  %93 = xor i8 %15, -128
  %94 = icmp ne i8 %65, 0
  %95 = icmp ugt i8 %93, 31
  %96 = or i1 %95, %94
  br i1 %96, label %97, label %163

97:                                               ; preds = %92
  %98 = zext i8 %65 to i32
  store i32 %55, i32* %2, align 4
  %99 = shl nuw nsw i32 %98, 12
  %100 = zext i8 %93 to i32
  %101 = shl nuw nsw i32 %100, 6
  %102 = or i32 %101, %54
  %103 = or i32 %102, %99
  br label %166

104:                                              ; preds = %62
  %105 = lshr i32 %16, 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = sext i8 %108 to i32
  %110 = and i32 %59, 7
  %111 = shl i32 1, %110
  %112 = and i32 %111, %109
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %161, label %114

114:                                              ; preds = %104
  store i32 %55, i32* %2, align 4
  %115 = icmp sgt i8 %4, -1
  br i1 %115, label %166, label %116

116:                                              ; preds = %114
  %117 = icmp eq i8 %4, -3
  %118 = select i1 %117, i32 65533, i32 -1
  br label %166

119:                                              ; preds = %53
  %120 = icmp slt i8 %58, -64
  %121 = icmp sgt i32 %55, %1
  %122 = and i1 %121, %120
  br i1 %122, label %123, label %161

123:                                              ; preds = %119
  %124 = add nsw i32 %6, -3
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = add i8 %127, 16
  %129 = icmp ult i8 %128, 5
  br i1 %129, label %130, label %161

130:                                              ; preds = %123
  %131 = and i8 %127, 7
  %132 = lshr i32 %59, 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = zext i8 %131 to i32
  %138 = shl i32 1, %137
  %139 = and i32 %138, %136
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %161, label %141

141:                                              ; preds = %130
  store i32 %124, i32* %2, align 4
  %142 = shl nuw nsw i32 %137, 18
  %143 = shl nuw nsw i32 %59, 12
  %144 = and i32 %143, 258048
  %145 = shl nuw nsw i32 %16, 6
  %146 = and i32 %145, 4032
  %147 = or i32 %146, %54
  %148 = or i32 %147, %144
  %149 = or i32 %148, %142
  %150 = icmp sgt i8 %4, 0
  %151 = icmp ugt i32 %149, 64975
  %152 = and i1 %150, %151
  br i1 %152, label %153, label %166

153:                                              ; preds = %141
  %154 = icmp ult i32 %149, 65008
  %155 = and i32 %148, 65534
  %156 = icmp eq i32 %155, 65534
  %157 = or i1 %154, %156
  %158 = icmp ult i32 %149, 1114112
  %159 = and i1 %158, %157
  %160 = select i1 %159, i32 1114111, i32 %149
  br label %166

161:                                              ; preds = %49, %26, %119, %104, %67, %123, %130, %5
  %162 = icmp sgt i8 %4, -1
  br i1 %162, label %166, label %163

163:                                              ; preds = %92, %161
  %164 = icmp eq i8 %4, -3
  %165 = select i1 %164, i32 65533, i32 -1
  br label %166

166:                                              ; preds = %153, %141, %116, %114, %76, %97, %163, %161, %21, %44, %46
  %167 = phi i32 [ %25, %21 ], [ %48, %46 ], [ 159, %44 ], [ %165, %163 ], [ 21, %161 ], [ 65535, %114 ], [ %118, %116 ], [ %82, %76 ], [ %103, %97 ], [ %149, %141 ], [ %160, %153 ]
  ret i32 %167
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @utf8_back1SafeBody_69(i8* nocapture readonly, i32, i32) local_unnamed_addr #2 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds i8, i8* %0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, -64
  %8 = icmp sgt i32 %2, %1
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %94

10:                                               ; preds = %3
  %11 = add nsw i32 %2, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = add i8 %14, 62
  %17 = icmp ult i8 %16, 51
  br i1 %17, label %18, label %41

18:                                               ; preds = %10
  %19 = icmp ult i8 %14, -32
  br i1 %19, label %92, label %20

20:                                               ; preds = %18
  %21 = icmp ult i8 %14, -16
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  %23 = and i32 %15, 15
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %24
  %26 = lshr i8 %6, 5
  %27 = zext i8 %26 to i32
  br label %33

28:                                               ; preds = %20
  %29 = lshr i8 %6, 4
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %30
  %32 = and i32 %15, 7
  br label %33

33:                                               ; preds = %28, %22
  %34 = phi i32 [ %32, %28 ], [ %27, %22 ]
  %35 = phi i8* [ %31, %28 ], [ %25, %22 ]
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = shl i32 1, %34
  %39 = and i32 %38, %37
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %94, label %92

41:                                               ; preds = %10
  %42 = icmp slt i8 %14, -64
  %43 = icmp sgt i32 %11, %1
  %44 = and i1 %43, %42
  br i1 %44, label %45, label %94

45:                                               ; preds = %41
  %46 = add nsw i32 %2, -2
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = add i8 %49, 32
  %52 = icmp ult i8 %51, 21
  br i1 %52, label %53, label %70

53:                                               ; preds = %45
  %54 = icmp ult i8 %49, -16
  %55 = lshr i32 %15, 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %56
  %58 = and i32 %50, 7
  %59 = and i32 %50, 15
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %60
  %62 = lshr i32 %15, 5
  %63 = select i1 %54, i32 %62, i32 %58
  %64 = select i1 %54, i8* %61, i8* %57
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = shl i32 1, %63
  %68 = and i32 %67, %66
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %94, label %92

70:                                               ; preds = %45
  %71 = icmp slt i8 %49, -64
  %72 = icmp sgt i32 %46, %1
  %73 = and i1 %72, %71
  br i1 %73, label %74, label %94

74:                                               ; preds = %70
  %75 = add nsw i32 %2, -3
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = add i8 %78, 16
  %80 = icmp ult i8 %79, 5
  br i1 %80, label %81, label %94

81:                                               ; preds = %74
  %82 = lshr i32 %50, 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  %87 = and i8 %78, 7
  %88 = zext i8 %87 to i32
  %89 = shl i32 1, %88
  %90 = and i32 %89, %86
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %33, %18, %53, %81
  %93 = phi i32 [ %11, %18 ], [ %11, %33 ], [ %75, %81 ], [ %46, %53 ]
  br label %94

94:                                               ; preds = %81, %74, %3, %41, %33, %70, %53, %92
  %95 = phi i32 [ %93, %92 ], [ %2, %53 ], [ %2, %70 ], [ %2, %33 ], [ %2, %41 ], [ %2, %3 ], [ %2, %74 ], [ %2, %81 ]
  ret i32 %95
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
