; ModuleID = '../../net/dns/resolve_context.cc'
source_filename = "../../net/dns/resolve_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, %"class.base::TimeDelta" }
%"struct.base::Feature" = type { i8*, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::NoDestructor" = type { [32 x i8] }
%"struct.base::FeatureParam.173" = type { %"struct.base::Feature"*, i8*, double }
%"struct.net::ResolveContext::ServerStats" = type { i32, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.std::__1::unique_ptr" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::SampleVector"* }
%"class.base::SampleVector" = type { %"class.base::SampleVectorBase", %"class.std::__1::vector" }
%"class.base::SampleVectorBase" = type { %"class.base::HistogramSamples", %"struct.std::__1::atomic", %"class.base::BucketRanges"* }
%"class.base::HistogramSamples" = type { i32 (...)**, %"struct.base::HistogramSamples::Metadata"* }
%"struct.base::HistogramSamples::Metadata" = type { i64, i64, i32, %"union.base::HistogramSamples::AtomicSingleSample" }
%"union.base::HistogramSamples::AtomicSingleSample" = type { i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32* }
%"class.base::BucketRanges" = type { %"class.std::__1::vector", i32, %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { i32* }
%"class.net::ResolveContext" = type { %"class.base::CheckedObserver", %"class.net::URLRequestContext"*, %"class.std::__1::unique_ptr.14", %"class.base::TimeDelta", %"class.base::ObserverList", %"class.base::WeakPtr.36", i32, %"class.base::TimeDelta", %"class.std::__1::vector.37", %"class.std::__1::vector.37", %"class.net::IsolationInfo" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.3" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.net::HostCache"* }
%"class.net::HostCache" = type { %"class.std::__1::map", i64, i32, i64, %"class.net::HostCache::PersistenceDelegate"*, %"class.base::TickClock"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.net::HostCache::PersistenceDelegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.28", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.31" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtr.36" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.net::ResolveContext::ServerStats"* }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional", %"class.absl::optional", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.60" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.50" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.55", %"class.absl::optional.55" }
%"class.absl::optional.55" = type { %"class.absl::optional_internal::optional_data.56" }
%"class.absl::optional_internal::optional_data.56" = type { %"class.absl::optional_internal::optional_data_base.57" }
%"class.absl::optional_internal::optional_data_base.57" = type { %"class.absl::optional_internal::optional_data_dtor_base.58" }
%"class.absl::optional_internal::optional_data_dtor_base.58" = type { i8, %union.anon.59 }
%union.anon.59 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.net::URLRequestContext" = type opaque
%"class.net::DnsServerIterator" = type { i32 (...)**, %"class.std::__1::vector", i32, i32, %"class.net::ResolveContext"*, i64, %"class.net::DnsSession"* }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector.77", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.84", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.110", i32, i8, %"class.std::__1::vector.84" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.79" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.112" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::basic_string"* }
%"class.net::DnsSession" = type { %"class.base::RefCounted", %"struct.net::DnsConfig", %"class.std::__1::unique_ptr.117", %"class.net::DnsUdpTracker", %"class.base::RepeatingCallback", %"class.net::NetLog"*, %"class.base::WeakPtrFactory.127" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.net::DnsSocketAllocator"* }
%"class.net::DnsSocketAllocator" = type opaque
%"class.net::DnsUdpTracker" = type { i8, %"class.base::circular_deque", %"class.base::circular_deque.123", %"class.base::circular_deque.123", %"class.base::TickClock"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.net::DnsUdpTracker::QueryData"*, i64 }
%"struct.net::DnsUdpTracker::QueryData" = type opaque
%"class.base::circular_deque.123" = type { %"class.base::internal::VectorBuffer.124", i64, i64 }
%"class.base::internal::VectorBuffer.124" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.125 }
%class.scoped_refptr.125 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.126", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.126" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLog" = type opaque
%"class.base::WeakPtrFactory.127" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.net::ResolveContext::DohStatusObserver" = type { %"class.base::CheckedObserver" }
%"class.base::WeakPtr.164" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"**, %"class.std::__1::__compressed_pair.158" }
%"struct.net::DohProviderEntry" = type <{ %"class.std::__1::basic_string", %"class.absl::optional.133", %"class.std::__1::set.138", %"class.std::__1::set.148", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::set.148", i32, [4 x i8] }>
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { i32 }
%"class.std::__1::set.138" = type { %"class.std::__1::__tree.139" }
%"class.std::__1::__tree.139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::set.148" = type { %"class.std::__1::__tree.149" }
%"class.std::__1::__tree.149" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.net::DohProviderEntry"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::IPAddress", [6 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEED2Ev = comdat any

$_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_ = comdat any

$_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_ = comdat any

$_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_ = comdat any

$_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3net14ResolveContext11ServerStatsENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS_10unique_ptrIN4base12SampleVectorENS_14default_deleteISA_EEEEEEEvDpOT_ = comdat any

$_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv = comdat any

@_ZTVN3net14ResolveContextE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ResolveContext"*)* @_ZN3net14ResolveContextD2Ev to i8*), i8* bitcast (void (%"class.net::ResolveContext"*)* @_ZN3net14ResolveContextD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [44 x i8] c"doh_server_index < doh_server_stats_.size()\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"../../net/dns/resolve_context.cc\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"Net.DNS.DnsTransaction.%s.%s.FailureError\00", align 1
@_ZN3net8features25kDnsMinTransactionTimeoutE = external global %"struct.base::FeatureParam", align 8
@.str.3 = private unnamed_addr constant [73 x i8] c"new_session->config().nameservers.size() == classic_server_stats_.size()\00", align 1
@.str.4 = private unnamed_addr constant [80 x i8] c"new_session->config().dns_over_https_servers.size() == doh_server_stats_.size()\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"session\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"current_session_->config().nameservers.size() == classic_server_stats_.size()\00", align 1
@.str.7 = private unnamed_addr constant [85 x i8] c"current_session_->config().dns_over_https_servers.size() == doh_server_stats_.size()\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"server_index < classic_server_stats_.size()\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"server_index < doh_server_stats_.size()\00", align 1
@_ZN3net12_GLOBAL__N_118kMinFallbackPeriodE = internal unnamed_addr constant %"class.base::TimeDelta" { i64 10000 }, align 8
@.str.10 = private unnamed_addr constant [19 x i8] c"SecureNotValidated\00", align 1
@.str.11 = private unnamed_addr constant [41 x i8] c"Net.DNS.DnsTransaction.%s.%s.SuccessTime\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"Net.DNS.DnsTransaction.%s.%s.FailureTime\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"SecureValidated\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"AsyncDnsMaxTimeoutMsByConnectionType\00", align 1
@_ZTVN3net20DohDnsServerIteratorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN3net24ClassicDnsServerIteratorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.16 = private unnamed_addr constant [41 x i8] c"AsyncDnsInitialTimeoutMsByConnectionType\00", align 1
@_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets = internal global i64 0, align 8
@_ZN3net12_GLOBAL__N_17kRttMaxE = internal constant %"class.base::TimeDelta" { i64 30000000 }, align 8
@.str.18 = private unnamed_addr constant [36 x i8] c"../../base/observer_list_internal.h\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"!weak_ptr_.WasInvalidated()\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZN3net8features32kDnsTransactionTimeoutMultiplierE = external global %"struct.base::FeatureParam.173", align 8

@_ZN3net14ResolveContext11ServerStatsC1ENSt3__110unique_ptrIN4base12SampleVectorENS2_14default_deleteIS5_EEEE = hidden unnamed_addr alias void (%"struct.net::ResolveContext::ServerStats"*, %"class.base::SampleVector"*), void (%"struct.net::ResolveContext::ServerStats"*, %"class.base::SampleVector"*)* @_ZN3net14ResolveContext11ServerStatsC2ENSt3__110unique_ptrIN4base12SampleVectorENS2_14default_deleteIS5_EEEE
@_ZN3net14ResolveContext11ServerStatsC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"*), void (%"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"*)* @_ZN3net14ResolveContext11ServerStatsC2EOS1_
@_ZN3net14ResolveContext11ServerStatsD1Ev = hidden unnamed_addr alias void (%"struct.net::ResolveContext::ServerStats"*), void (%"struct.net::ResolveContext::ServerStats"*)* @_ZN3net14ResolveContext11ServerStatsD2Ev
@_ZN3net14ResolveContextC1EPNS_17URLRequestContextEb = hidden unnamed_addr alias void (%"class.net::ResolveContext"*, %"class.net::URLRequestContext"*, i1), void (%"class.net::ResolveContext"*, %"class.net::URLRequestContext"*, i1)* @_ZN3net14ResolveContextC2EPNS_17URLRequestContextEb
@_ZN3net14ResolveContextD1Ev = hidden unnamed_addr alias void (%"class.net::ResolveContext"*), void (%"class.net::ResolveContext"*)* @_ZN3net14ResolveContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext11ServerStatsC2ENSt3__110unique_ptrIN4base12SampleVectorENS2_14default_deleteIS5_EEEE(%"struct.net::ResolveContext::ServerStats"* nocapture, %"class.base::SampleVector"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SampleVector"* %1 to i64
  %4 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  %9 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  store i64 %3, i64* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext11ServerStatsC2EOS1_(%"struct.net::ResolveContext::ServerStats"* nocapture, %"struct.net::ResolveContext::ServerStats"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::ResolveContext::ServerStats"* %0 to i8*
  %4 = bitcast %"struct.net::ResolveContext::ServerStats"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %1, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext11ServerStatsD2Ev(%"struct.net::ResolveContext::ServerStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %2, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %2, align 8
  %4 = icmp eq %"class.base::SampleVector"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::SampleVector"* %3 to void (%"class.base::SampleVector"*)***
  %7 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %7, i64 1
  %9 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %8, align 8
  tail call void %9(%"class.base::SampleVector"* nonnull %3) #15
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContextC2EPNS_17URLRequestContextEb(%"class.net::ResolveContext"*, %"class.net::URLRequestContext"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %4) #15
  %5 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14ResolveContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 1
  store %"class.net::URLRequestContext"* %1, %"class.net::URLRequestContext"** %6, align 8
  %7 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 2
  br i1 %2, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.net::HostCache"* @_ZN3net9HostCache18CreateDefaultCacheEv() #15
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.net::HostCache"* %9, %"class.net::HostCache"** %10, align 8
  br label %13

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::unique_ptr.14"* %7 to i64*
  store i64 0, i64* %12, align 8
  br label %13

13:                                               ; preds = %11, %8
  %14 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 3, i32 0
  %15 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %16 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15, %"class.base::internal::LinkNodeBase"* %15) #15
  %17 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 2
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %19) #15
  %20 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 6
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 7, i32 0
  %22 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 10
  %23 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 56, i1 false)
  tail call void @_ZN3net13IsolationInfo15CreateTransientEv(%"class.net::IsolationInfo"* sret %22) #15
  %24 = tail call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #15
  %25 = tail call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i64 5000000, i32 %24) #15
  store i64 %25, i64* %14, align 8
  ret void
}

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #2

declare %"class.net::HostCache"* @_ZN3net9HostCache18CreateDefaultCacheEv() local_unnamed_addr #2

declare void @_ZN3net13IsolationInfo15CreateTransientEv(%"class.net::IsolationInfo"* sret) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContextD2Ev(%"class.net::ResolveContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net14ResolveContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 10
  tail call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* %3) #15
  %4 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %5, align 8
  %7 = icmp eq %"struct.net::ResolveContext::ServerStats"* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %1
  %9 = bitcast %"struct.net::ResolveContext::ServerStats"* %6 to i8*
  %10 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %11 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %10, align 8
  %12 = icmp eq %"struct.net::ResolveContext::ServerStats"* %11, %6
  br i1 %12, label %29, label %13

13:                                               ; preds = %8, %24
  %14 = phi %"struct.net::ResolveContext::ServerStats"* [ %15, %24 ], [ %11, %8 ]
  %15 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %14, i64 -1
  %16 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %14, i64 -1, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %16, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %16, align 8
  %18 = icmp eq %"class.base::SampleVector"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.base::SampleVector"* %17 to void (%"class.base::SampleVector"*)***
  %21 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %21, i64 1
  %23 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %22, align 8
  tail call void %23(%"class.base::SampleVector"* nonnull %17) #15
  br label %24

24:                                               ; preds = %19, %13
  %25 = icmp eq %"struct.net::ResolveContext::ServerStats"* %15, %6
  br i1 %25, label %26, label %13

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.37"* %4 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %8
  %30 = phi i8* [ %28, %26 ], [ %9, %8 ]
  store %"struct.net::ResolveContext::ServerStats"* %6, %"struct.net::ResolveContext::ServerStats"** %10, align 8
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %1, %29
  %32 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8
  %33 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %32, i64 0, i32 0, i32 0
  %34 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %33, align 8
  %35 = icmp eq %"struct.net::ResolveContext::ServerStats"* %34, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %31
  %37 = bitcast %"struct.net::ResolveContext::ServerStats"* %34 to i8*
  %38 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 1
  %39 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %38, align 8
  %40 = icmp eq %"struct.net::ResolveContext::ServerStats"* %39, %34
  br i1 %40, label %57, label %41

41:                                               ; preds = %36, %52
  %42 = phi %"struct.net::ResolveContext::ServerStats"* [ %43, %52 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %42, i64 -1
  %44 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %42, i64 -1, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %44, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %44, align 8
  %46 = icmp eq %"class.base::SampleVector"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.base::SampleVector"* %45 to void (%"class.base::SampleVector"*)***
  %49 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %49, i64 1
  %51 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %50, align 8
  tail call void %51(%"class.base::SampleVector"* nonnull %45) #15
  br label %52

52:                                               ; preds = %47, %41
  %53 = icmp eq %"struct.net::ResolveContext::ServerStats"* %43, %34
  br i1 %53, label %54, label %41

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.37"* %32 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %36
  %58 = phi i8* [ %56, %54 ], [ %37, %36 ]
  store %"struct.net::ResolveContext::ServerStats"* %34, %"struct.net::ResolveContext::ServerStats"** %38, align 8
  tail call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %31, %57
  %60 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %60) #15
  %61 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4
  tail call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEED2Ev(%"class.base::ObserverList"* %61) #15
  %62 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %63 = load %"class.net::HostCache"*, %"class.net::HostCache"** %62, align 8
  store %"class.net::HostCache"* null, %"class.net::HostCache"** %62, align 8
  %64 = icmp eq %"class.net::HostCache"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  tail call void @_ZN3net9HostCacheD1Ev(%"class.net::HostCache"* nonnull %63) #15
  %66 = bitcast %"class.net::HostCache"* %63 to i8*
  tail call void @_ZdlPv(i8* %66) #16
  br label %67

67:                                               ; preds = %59, %65
  %68 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"* %68) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEED2Ev(%"class.base::ObserverList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #15
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %7, %13
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %20, align 8
  %22 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  %24 = tail call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %21, %"class.base::internal::CheckedObserverAdapter"* %23) #15
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %19, %27
  %28 = phi %"class.base::internal::CheckedObserverAdapter"* [ %29, %27 ], [ %25, %19 ]
  %29 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %28, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %29) #15
  %30 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %29, %24
  br i1 %30, label %31, label %27

31:                                               ; preds = %27
  store %"class.base::internal::CheckedObserverAdapter"* %24, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  br label %32

32:                                               ; preds = %19, %31
  %33 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %20, align 8
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.base::internal::CheckedObserverAdapter"* %33 to i8*
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %33
  br i1 %37, label %45, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"class.base::internal::CheckedObserverAdapter"* [ %40, %38 ], [ %24, %35 ]
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %39, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %40) #15
  %41 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %40, %33
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.base::ObserverList"* %0 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %35
  %46 = phi i8* [ %44, %42 ], [ %36, %35 ]
  store %"class.base::internal::CheckedObserverAdapter"* %33, %"class.base::internal::CheckedObserverAdapter"** %22, align 8
  tail call void @_ZdlPv(i8* %46) #16
  br label %47

47:                                               ; preds = %32, %45
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base15CheckedObserverD2Ev(%"class.base::CheckedObserver"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContextD0Ev(%"class.net::ResolveContext"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net14ResolveContextD2Ev(%"class.net::ResolveContext"* %0) #15
  %2 = bitcast %"class.net::ResolveContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::DnsServerIterator"* @_ZN3net14ResolveContext14GetDohIteratorERKNS_9DnsConfigERKNS_13SecureDnsModeEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"struct.net::DnsConfig"* nocapture readonly dereferenceable(208), i32* nocapture readonly dereferenceable(4), %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 72) #16
  %6 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9
  %7 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %8 = bitcast %"struct.net::ResolveContext::ServerStats"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.37"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 5
  %14 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %3) #15
  %15 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 10
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  %19 = bitcast i8* %5 to %"class.net::DnsServerIterator"*
  tail call void @_ZN3net17DnsServerIteratorC2EmmiiPKNS_14ResolveContextEPKNS_10DnsSessionE(%"class.net::DnsServerIterator"* nonnull %19, i64 %13, i64 0, i32 %16, i32 %18, %"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %3) #15
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net20DohDnsServerIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 64
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %2, align 4
  store i32 %23, i32* %22, align 8
  ret %"class.net::DnsServerIterator"* %19
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14ResolveContext16FirstServerIndexEbPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i1 zeroext, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %2)
  %7 = xor i1 %6, true
  %8 = or i1 %7, %1
  br i1 %8, label %55, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #15
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %18

18:                                               ; preds = %15, %9
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #15
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %22 = bitcast i64* %21 to %"class.net::DnsSession"**
  %23 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %22, align 8
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi %"class.net::DnsSession"* [ %23, %20 ], [ null, %18 ]
  %26 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %25, i64 0, i32 1, i32 11
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %24
  %30 = load i32, i32* %10, align 8
  %31 = add nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #15
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  br label %37

37:                                               ; preds = %34, %29
  %38 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #15
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = bitcast i64* %40 to %"class.net::DnsSession"**
  %42 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %41, align 8
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi %"class.net::DnsSession"* [ %42, %39 ], [ null, %37 ]
  %45 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %44, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast %"class.net::IPEndPoint"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.77"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = sdiv exact i64 %51, 20
  %53 = urem i64 %32, %52
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %10, align 8
  br label %55

55:                                               ; preds = %3, %43, %24
  %56 = phi i64 [ 0, %3 ], [ %12, %24 ], [ %12, %43 ]
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::DnsServerIterator"* @_ZN3net14ResolveContext21GetClassicDnsIteratorERKNS_9DnsConfigEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"struct.net::DnsConfig"* nocapture readonly dereferenceable(208), %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #16
  %5 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.net::IPEndPoint"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.net::DnsConfig"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 20
  %12 = tail call i64 @_ZN3net14ResolveContext16FirstServerIndexEbPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, i1 zeroext false, %"class.net::DnsSession"* %2)
  %13 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %1, i64 0, i32 9
  %14 = load i32, i32* %13, align 8
  %15 = bitcast i8* %4 to %"class.net::DnsServerIterator"*
  tail call void @_ZN3net17DnsServerIteratorC2EmmiiPKNS_14ResolveContextEPKNS_10DnsSessionE(%"class.net::DnsServerIterator"* nonnull %15, i64 %11, i64 %12, i32 %14, i32 %14, %"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %2) #15
  %16 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net24ClassicDnsServerIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  ret %"class.net::DnsServerIterator"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14ResolveContext24GetDohServerAvailabilityEmPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %2)
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %13 = bitcast %"struct.net::ResolveContext::ServerStats"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.37"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 5
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i64 %18, %1
  br i1 %20, label %21, label %22

21:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %10, align 8
  br label %31

22:                                               ; preds = %8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %18) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %10, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 168, %"class.logging::CheckOpResult"* nonnull %5) #15
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %32 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %11, i64 0, i32 0, i32 0
  %33 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %32, align 8
  %34 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %33, i64 %1, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 10
  %37 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %33, i64 %1, i32 1
  %38 = load i8, i8* %37, align 4
  %39 = icmp ne i8 %38, 0
  %40 = and i1 %36, %39
  br label %41

41:                                               ; preds = %3, %31
  %42 = phi i1 [ %40, %31 ], [ false, %3 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"class.net::DnsSession"* readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = icmp eq %"class.net::DnsSession"* %1, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 399, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #15
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %16

16:                                               ; preds = %2, %13
  %17 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %17) #15
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %21 = bitcast i64* %20 to %"class.net::DnsSession"**
  %22 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %21, align 8
  br label %23

23:                                               ; preds = %16, %19
  %24 = phi %"class.net::DnsSession"* [ %22, %19 ], [ null, %16 ]
  %25 = icmp eq %"class.net::DnsSession"* %24, %1
  br i1 %25, label %26, label %113

26:                                               ; preds = %23
  %27 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %17) #15
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %33

33:                                               ; preds = %30, %26
  %34 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %17) #15
  br i1 %34, label %35, label %39

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %37 = bitcast i64* %36 to %"class.net::DnsSession"**
  %38 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %37, align 8
  br label %39

39:                                               ; preds = %33, %35
  %40 = phi %"class.net::DnsSession"* [ %38, %35 ], [ null, %33 ]
  %41 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %40, i64 0, i32 1, i32 0, i32 0, i32 1
  %43 = bitcast %"class.net::IPEndPoint"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.77"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = sdiv exact i64 %47, 20
  %49 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8
  %50 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 1
  %51 = bitcast %"struct.net::ResolveContext::ServerStats"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.37"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = ashr exact i64 %55, 5
  %57 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57)
  %58 = icmp eq i64 %48, %56
  br i1 %58, label %59, label %60

59:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  store i8* null, i8** %28, align 8
  br label %69

60:                                               ; preds = %39
  %61 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %48) #15
  %62 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %56) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i8* %61, i8* %62) #15
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  store i8* %64, i8** %28, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 402, %"class.logging::CheckOpResult"* nonnull %8) #15
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  br label %69

69:                                               ; preds = %59, %60, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %70 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #15
  %71 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %71, align 8
  %72 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %17) #15
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #15
  br label %76

76:                                               ; preds = %73, %69
  %77 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %17) #15
  br i1 %77, label %78, label %82

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %80 = bitcast i64* %79 to %"class.net::DnsSession"**
  %81 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %80, align 8
  br label %82

82:                                               ; preds = %76, %78
  %83 = phi %"class.net::DnsSession"* [ %81, %78 ], [ null, %76 ]
  %84 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %83, i64 0, i32 1, i32 13
  %85 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %83, i64 0, i32 1, i32 13, i32 0, i32 1
  %86 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector.110"* %84 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = ashr exact i64 %90, 5
  %92 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9
  %93 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %94 = bitcast %"struct.net::ResolveContext::ServerStats"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector.37"* %92 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 5
  %100 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = icmp eq i64 %91, %99
  br i1 %101, label %102, label %103

102:                                              ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  store i8* null, i8** %71, align 8
  br label %112

103:                                              ; preds = %82
  %104 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %91) #15
  %105 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %99) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.7, i64 0, i64 0), i8* %104, i8* %105) #15
  %106 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  store i8* %107, i8** %71, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %103
  %110 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 404, %"class.logging::CheckOpResult"* nonnull %10) #15
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #15
  br label %112

112:                                              ; preds = %102, %103, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #15
  br label %113

113:                                              ; preds = %23, %112
  %114 = phi i1 [ true, %112 ], [ false, %23 ]
  ret i1 %114
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net14ResolveContext28ServerStatsToDohAvailabilityERKNS0_11ServerStatsE(%"struct.net::ResolveContext::ServerStats"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 10
  %5 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = icmp ne i8 %6, 0
  %8 = and i1 %4, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net14ResolveContext22NumAvailableDohServersEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %1)
  br i1 %3, label %4, label %61

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %5, align 8
  %7 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %8 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %7, align 8
  %9 = icmp eq %"struct.net::ResolveContext::ServerStats"* %6, %8
  br i1 %9, label %61, label %10

10:                                               ; preds = %4
  %11 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %6 to i64
  %12 = getelementptr %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %8, i64 -1, i32 0
  %13 = ptrtoint i32* %12 to i64
  %14 = sub i64 %13, %11
  %15 = lshr i64 %14, 5
  %16 = add nuw nsw i64 %15, 1
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %15, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %10
  %20 = sub nuw nsw i64 %16, %17
  br label %21

21:                                               ; preds = %21, %19
  %22 = phi i64 [ 0, %19 ], [ %42, %21 ]
  %23 = phi %"struct.net::ResolveContext::ServerStats"* [ %6, %19 ], [ %43, %21 ]
  %24 = phi i64 [ %20, %19 ], [ %44, %21 ]
  %25 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %23, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %26, 10
  %28 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %23, i64 0, i32 1
  %29 = load i8, i8* %28, align 4
  %30 = icmp ne i8 %29, 0
  %31 = and i1 %27, %30
  %32 = zext i1 %31 to i64
  %33 = add nuw nsw i64 %22, %32
  %34 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %23, i64 1, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 10
  %37 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %23, i64 1, i32 1
  %38 = load i8, i8* %37, align 4
  %39 = icmp ne i8 %38, 0
  %40 = and i1 %36, %39
  %41 = zext i1 %40 to i64
  %42 = add nuw nsw i64 %33, %41
  %43 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %23, i64 2
  %44 = add i64 %24, -2
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %21

46:                                               ; preds = %21, %10
  %47 = phi i64 [ undef, %10 ], [ %42, %21 ]
  %48 = phi i64 [ 0, %10 ], [ %42, %21 ]
  %49 = phi %"struct.net::ResolveContext::ServerStats"* [ %6, %10 ], [ %43, %21 ]
  %50 = icmp eq i64 %17, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %49, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp slt i32 %53, 10
  %55 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %49, i64 0, i32 1
  %56 = load i8, i8* %55, align 4
  %57 = icmp ne i8 %56, 0
  %58 = and i1 %54, %57
  %59 = zext i1 %58 to i64
  %60 = add nuw nsw i64 %48, %59
  br label %61

61:                                               ; preds = %51, %46, %4, %2
  %62 = phi i64 [ 0, %2 ], [ 0, %4 ], [ %47, %46 ], [ %60, %51 ]
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext19RecordServerFailureEmbiPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, i32, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %4)
  br i1 %9, label %10, label %188

10:                                               ; preds = %5
  br i1 %2, label %11, label %57

11:                                               ; preds = %10
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = tail call zeroext i1 @_ZNK3net14ResolveContext24GetDohServerAvailabilityEmPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, i64 %1, %"class.net::DnsSession"* %4) #15, !noalias !3
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  store i8 15, i8* %17, align 1, !alias.scope !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #15
  %19 = getelementptr inbounds i8, i8* %12, i64 15
  store i8 0, i8* %19, align 1, !alias.scope !3
  br label %22

20:                                               ; preds = %11
  store i8 18, i8* %17, align 1, !alias.scope !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18, i1 false) #15
  %21 = getelementptr inbounds i8, i8* %12, i64 18
  store i8 0, i8* %21, align 2, !alias.scope !3
  br label %22

22:                                               ; preds = %18, %20
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #15
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %4, i64 0, i32 1, i32 13, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %25, align 8, !noalias !6
  %28 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %27, i64 %1
  call void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* nonnull sret %7, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32) %28) #15
  %29 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i8*, i8** %24, align 8
  %35 = select i1 %33, i8* %34, i8* %23
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull %6, i8* %35) #15
  %36 = icmp slt i32 %3, 0
  %37 = sub nsw i32 0, %3
  %38 = select i1 %36, i32 %37, i32 %3
  call void @_ZN4base18UmaHistogramSparseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, i32 %38) #15
  %39 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %22
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %22, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  %47 = load i8, i8* %31, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #15
  %52 = load i8, i8* %17, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %55) #16
  br label %56

56:                                               ; preds = %51, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  br label %57

57:                                               ; preds = %56, %10
  %58 = call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %4) #15
  br i1 %58, label %59, label %116

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 0
  %61 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %60, align 8
  %62 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %63 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %62, align 8
  %64 = icmp eq %"struct.net::ResolveContext::ServerStats"* %61, %63
  br i1 %64, label %116, label %65

65:                                               ; preds = %59
  %66 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %61 to i64
  %67 = getelementptr %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %63, i64 -1, i32 0
  %68 = ptrtoint i32* %67 to i64
  %69 = sub i64 %68, %66
  %70 = lshr i64 %69, 5
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 1
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %101, label %74

74:                                               ; preds = %65
  %75 = sub nuw nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %97, %76 ]
  %78 = phi %"struct.net::ResolveContext::ServerStats"* [ %61, %74 ], [ %98, %76 ]
  %79 = phi i64 [ %75, %74 ], [ %99, %76 ]
  %80 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp slt i32 %81, 10
  %83 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 0, i32 1
  %84 = load i8, i8* %83, align 4
  %85 = icmp ne i8 %84, 0
  %86 = and i1 %82, %85
  %87 = zext i1 %86 to i64
  %88 = add nuw nsw i64 %77, %87
  %89 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 1, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp slt i32 %90, 10
  %92 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 1, i32 1
  %93 = load i8, i8* %92, align 4
  %94 = icmp ne i8 %93, 0
  %95 = and i1 %91, %94
  %96 = zext i1 %95 to i64
  %97 = add nuw nsw i64 %88, %96
  %98 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 2
  %99 = add i64 %79, -2
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %76

101:                                              ; preds = %76, %65
  %102 = phi i64 [ undef, %65 ], [ %97, %76 ]
  %103 = phi i64 [ 0, %65 ], [ %97, %76 ]
  %104 = phi %"struct.net::ResolveContext::ServerStats"* [ %61, %65 ], [ %98, %76 ]
  %105 = icmp eq i64 %72, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %104, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp slt i32 %108, 10
  %110 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %104, i64 0, i32 1
  %111 = load i8, i8* %110, align 4
  %112 = icmp ne i8 %111, 0
  %113 = and i1 %109, %112
  %114 = zext i1 %113 to i64
  %115 = add nuw nsw i64 %103, %114
  br label %116

116:                                              ; preds = %106, %101, %57, %59
  %117 = phi i64 [ 0, %57 ], [ 0, %59 ], [ %102, %101 ], [ %115, %106 ]
  %118 = call %"struct.net::ResolveContext::ServerStats"* @_ZN3net14ResolveContext14GetServerStatsEmb(%"class.net::ResolveContext"* %0, i64 %1, i1 zeroext %2)
  %119 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %119, align 8
  %122 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %123 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %118, i64 0, i32 2, i32 0, i32 0
  store i64 %122, i64* %123, align 8
  %124 = call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %4) #15
  br i1 %124, label %125, label %182

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 0
  %127 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %126, align 8
  %128 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %129 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %128, align 8
  %130 = icmp eq %"struct.net::ResolveContext::ServerStats"* %127, %129
  br i1 %130, label %182, label %131

131:                                              ; preds = %125
  %132 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %127 to i64
  %133 = getelementptr %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %129, i64 -1, i32 0
  %134 = ptrtoint i32* %133 to i64
  %135 = sub i64 %134, %132
  %136 = lshr i64 %135, 5
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 1
  %139 = icmp eq i64 %136, 0
  br i1 %139, label %167, label %140

140:                                              ; preds = %131
  %141 = sub nuw nsw i64 %137, %138
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i64 [ 0, %140 ], [ %163, %142 ]
  %144 = phi %"struct.net::ResolveContext::ServerStats"* [ %127, %140 ], [ %164, %142 ]
  %145 = phi i64 [ %141, %140 ], [ %165, %142 ]
  %146 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %144, i64 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = icmp slt i32 %147, 10
  %149 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %144, i64 0, i32 1
  %150 = load i8, i8* %149, align 4
  %151 = icmp ne i8 %150, 0
  %152 = and i1 %148, %151
  %153 = zext i1 %152 to i64
  %154 = add nuw nsw i64 %143, %153
  %155 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %144, i64 1, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp slt i32 %156, 10
  %158 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %144, i64 1, i32 1
  %159 = load i8, i8* %158, align 4
  %160 = icmp ne i8 %159, 0
  %161 = and i1 %157, %160
  %162 = zext i1 %161 to i64
  %163 = add nuw nsw i64 %154, %162
  %164 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %144, i64 2
  %165 = add i64 %145, -2
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %142

167:                                              ; preds = %142, %131
  %168 = phi i64 [ undef, %131 ], [ %163, %142 ]
  %169 = phi i64 [ 0, %131 ], [ %163, %142 ]
  %170 = phi %"struct.net::ResolveContext::ServerStats"* [ %127, %131 ], [ %164, %142 ]
  %171 = icmp eq i64 %138, 0
  br i1 %171, label %182, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = icmp slt i32 %174, 10
  %176 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 0, i32 1
  %177 = load i8, i8* %176, align 4
  %178 = icmp ne i8 %177, 0
  %179 = and i1 %175, %178
  %180 = zext i1 %179 to i64
  %181 = add nuw nsw i64 %169, %180
  br label %182

182:                                              ; preds = %172, %167, %116, %125
  %183 = phi i64 [ 0, %116 ], [ 0, %125 ], [ %168, %167 ], [ %181, %172 ]
  %184 = icmp ult i64 %183, %117
  br i1 %184, label %185, label %188

185:                                              ; preds = %182
  call void @_ZN3net14ResolveContext37NotifyDohStatusObserversOfUnavailableEb(%"class.net::ResolveContext"* %0, i1 zeroext false)
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  call void @_ZN3net21NetworkChangeNotifier25TriggerNonSystemDnsChangeEv() #15
  br label %188

188:                                              ; preds = %182, %187, %185, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext18GetQueryTypeForUmaEmbPKNS_10DnsSessionE(%"class.std::__1::basic_string"* noalias sret, %"class.net::ResolveContext"*, i64, i1 zeroext, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  br i1 %3, label %12, label %6

6:                                                ; preds = %5
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 8, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 7310034214940012105, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast i64* %10 to i8*
  store i8 0, i8* %11, align 8
  br label %22

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK3net14ResolveContext24GetDohServerAvailabilityEmPKNS_10DnsSessionE(%"class.net::ResolveContext"* %1, i64 %2, %"class.net::DnsSession"* %4)
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  br i1 %13, label %16, label %19

16:                                               ; preds = %12
  store i8 15, i8* %15, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #15
  %18 = getelementptr inbounds i8, i8* %17, i64 15
  store i8 0, i8* %18, align 1
  br label %22

19:                                               ; preds = %12
  store i8 18, i8* %15, align 1
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18, i1 false) #15
  %21 = getelementptr inbounds i8, i8* %20, i64 18
  store i8 0, i8* %21, align 2
  br label %22

22:                                               ; preds = %19, %16, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext22GetDohProviderIdForUmaEmbPKNS_10DnsSessionE(%"class.std::__1::basic_string"* noalias sret, %"class.net::ResolveContext"* nocapture readnone, i64, i1 zeroext, %"class.net::DnsSession"* nocapture readonly) local_unnamed_addr #0 align 2 {
  br i1 %3, label %6, label %10

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %4, i64 0, i32 1, i32 13, i32 0, i32 0
  %8 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %7, align 8
  %9 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %8, i64 %2
  tail call void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* sret %0, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32) %9) #15
  br label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %11, align 8
  %13 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %12, i64 %2
  tail call void @_ZN3net42GetDohProviderIdForHistogramFromNameserverERKNS_10IPEndPointE(%"class.std::__1::basic_string"* sret %0, %"class.net::IPEndPoint"* dereferenceable(20) %13) #15
  br label %14

14:                                               ; preds = %10, %6
  ret void
}

declare void @_ZN4base18UmaHistogramSparseERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.net::ResolveContext::ServerStats"* @_ZN3net14ResolveContext14GetServerStatsEmb(%"class.net::ResolveContext"* nocapture readonly, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  br i1 %2, label %33, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 1
  %15 = bitcast %"struct.net::ResolveContext::ServerStats"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.37"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 5
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ugt i64 %20, %1
  br i1 %22, label %23, label %24

23:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %12, align 8
  br label %56

24:                                               ; preds = %10
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %25, i8* %26) #15
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %12, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %56, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 415, %"class.logging::CheckOpResult"* nonnull %6) #15
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  br label %56

33:                                               ; preds = %3
  %34 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9
  %37 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %38 = bitcast %"struct.net::ResolveContext::ServerStats"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.37"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 5
  %44 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = icmp ugt i64 %43, %1
  br i1 %45, label %46, label %47

46:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* null, i8** %35, align 8
  br label %56

47:                                               ; preds = %33
  %48 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #15
  %49 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %43) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0), i8* %48, i8* %49) #15
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  store i8* %51, i8** %35, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 418, %"class.logging::CheckOpResult"* nonnull %8) #15
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  br label %56

56:                                               ; preds = %53, %47, %46, %30, %24, %23
  %57 = phi i8* [ %11, %23 ], [ %11, %24 ], [ %11, %30 ], [ %34, %46 ], [ %34, %47 ], [ %34, %53 ]
  %58 = phi %"class.std::__1::vector.37"* [ %13, %23 ], [ %13, %24 ], [ %13, %30 ], [ %36, %46 ], [ %36, %47 ], [ %36, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #15
  %59 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %58, i64 0, i32 0, i32 0
  %60 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %59, align 8
  %61 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %60, i64 %1
  ret %"struct.net::ResolveContext::ServerStats"* %61
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext37NotifyDohStatusObserversOfUnavailableEb(%"class.net::ResolveContext"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = alloca %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", align 8
  %5 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4
  %6 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %10, align 8, !noalias !9
  %13 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %13, align 8, !noalias !9
  %15 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br i1 %15, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #15, !alias.scope !9
  br label %33

19:                                               ; preds = %2
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8, !alias.scope !9
  %20 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #15
  store i64 0, i64* %8, align 8, !alias.scope !9
  %21 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 3
  %22 = load i32, i32* %21, align 8, !noalias !9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::CheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8, !noalias !9
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8, !noalias !9
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 4
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8, !alias.scope !9
  call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #15
  br label %33

33:                                               ; preds = %17, %31
  %34 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %37 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %38 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %38) #15
  %40 = bitcast %"class.base::ObserverList"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #15, !alias.scope !12
  br label %41

41:                                               ; preds = %154, %33
  %42 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %43 = icmp eq %"class.base::ObserverList"* %42, null
  br i1 %43, label %59, label %44

44:                                               ; preds = %41
  %45 = load i64, i64* %8, align 8
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %42, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.base::internal::CheckedObserverAdapter"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.base::ObserverList"* %42 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 4
  %53 = load i64, i64* %9, align 8
  %54 = icmp ult i64 %52, %53
  %55 = select i1 %54, i64 %52, i64 %53
  %56 = icmp eq i64 %45, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %44
  %58 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  br label %75

59:                                               ; preds = %44, %41
  %60 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %61 = icmp eq %"class.base::ObserverList"* %60, null
  br i1 %61, label %110, label %62

62:                                               ; preds = %59
  %63 = load i64, i64* %36, align 8
  %64 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %60, i64 0, i32 0, i32 0, i32 1
  %65 = bitcast %"class.base::internal::CheckedObserverAdapter"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.base::ObserverList"* %60 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 4
  %71 = load i64, i64* %37, align 8
  %72 = icmp ult i64 %70, %71
  %73 = select i1 %72, i64 %70, i64 %71
  %74 = icmp eq i64 %63, %73
  br i1 %74, label %84, label %75

75:                                               ; preds = %62, %57
  %76 = phi %"class.base::ObserverList"* [ %58, %57 ], [ %60, %62 ]
  %77 = icmp eq %"class.base::ObserverList"* %42, %76
  %78 = load i64, i64* %8, align 8
  %79 = load i64, i64* %36, align 8
  %80 = icmp eq i64 %78, %79
  %81 = and i1 %77, %80
  br i1 %81, label %82, label %139

82:                                               ; preds = %75
  %83 = icmp eq %"class.base::ObserverList"* %42, null
  br i1 %83, label %110, label %84

84:                                               ; preds = %62, %82
  %85 = phi %"class.base::ObserverList"* [ %42, %82 ], [ %60, %62 ]
  %86 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %85, i64 0, i32 1
  %87 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %85, i64 0, i32 1, i32 0, i32 0, i32 1
  %88 = bitcast %"class.base::internal::LinkNodeBase"** %87 to %"class.base::LinkNode"**
  %89 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %88, align 8
  %90 = bitcast %"class.base::LinkedList"* %86 to %"class.base::LinkNode"**
  %91 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %90, align 8
  %92 = icmp eq %"class.base::LinkNode"* %89, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %85, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %94, align 8
  %96 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %85, i64 0, i32 0, i32 0, i32 1
  %97 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %96, align 8
  %98 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %95, %"class.base::internal::CheckedObserverAdapter"* %97) #15
  %99 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %96, align 8
  %100 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %98, %99
  br i1 %100, label %106, label %101

101:                                              ; preds = %93, %101
  %102 = phi %"class.base::internal::CheckedObserverAdapter"* [ %103, %101 ], [ %99, %93 ]
  %103 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %102, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %103) #15
  %104 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %103, %98
  br i1 %104, label %105, label %101

105:                                              ; preds = %101
  store %"class.base::internal::CheckedObserverAdapter"* %98, %"class.base::internal::CheckedObserverAdapter"** %96, align 8
  br label %106

106:                                              ; preds = %105, %93, %84
  %107 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %35, align 8
  %108 = icmp eq %"class.base::ObserverList"* %107, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %35, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %38) #15
  br label %110

110:                                              ; preds = %59, %82, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #15
  %111 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %112 = icmp eq %"class.base::ObserverList"* %111, null
  br i1 %112, label %138, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = bitcast %"class.base::LinkedList"* %114 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode"* %117, %119
  br i1 %120, label %121, label %134

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %111, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  %126 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %123, %"class.base::internal::CheckedObserverAdapter"* %125) #15
  %127 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  %128 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %126, %127
  br i1 %128, label %134, label %129

129:                                              ; preds = %121, %129
  %130 = phi %"class.base::internal::CheckedObserverAdapter"* [ %131, %129 ], [ %127, %121 ]
  %131 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %130, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %131) #15
  %132 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %131, %126
  br i1 %132, label %133, label %129

133:                                              ; preds = %129
  store %"class.base::internal::CheckedObserverAdapter"* %126, %"class.base::internal::CheckedObserverAdapter"** %124, align 8
  br label %134

134:                                              ; preds = %133, %121, %113
  %135 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %136 = icmp eq %"class.base::ObserverList"* %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #15
  br label %138

138:                                              ; preds = %110, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #15
  ret void

139:                                              ; preds = %75
  %140 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %42, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %140, align 8
  %142 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %141, i64 %78, i32 0, i32 0, i32 0
  %143 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %142) #15
  %144 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %141, i64 %78, i32 0, i32 0, i32 1
  %145 = bitcast i64* %144 to %"class.net::ResolveContext::DohStatusObserver"**
  %146 = load %"class.net::ResolveContext::DohStatusObserver"*, %"class.net::ResolveContext::DohStatusObserver"** %145, align 8
  %147 = select i1 %143, %"class.net::ResolveContext::DohStatusObserver"* %146, %"class.net::ResolveContext::DohStatusObserver"* null
  %148 = bitcast %"class.net::ResolveContext::DohStatusObserver"* %147 to void (%"class.net::ResolveContext::DohStatusObserver"*, i1)***
  %149 = load void (%"class.net::ResolveContext::DohStatusObserver"*, i1)**, void (%"class.net::ResolveContext::DohStatusObserver"*, i1)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.net::ResolveContext::DohStatusObserver"*, i1)*, void (%"class.net::ResolveContext::DohStatusObserver"*, i1)** %149, i64 3
  %151 = load void (%"class.net::ResolveContext::DohStatusObserver"*, i1)*, void (%"class.net::ResolveContext::DohStatusObserver"*, i1)** %150, align 8
  call void %151(%"class.net::ResolveContext::DohStatusObserver"* %147, i1 zeroext %1) #15
  %152 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %153 = icmp eq %"class.base::ObserverList"* %152, null
  br i1 %153, label %154, label %155

154:                                              ; preds = %139, %155
  br label %41

155:                                              ; preds = %139
  %156 = load i64, i64* %8, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %8, align 8
  call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* nonnull %3) #15
  br label %154
}

declare void @_ZN3net21NetworkChangeNotifier25TriggerNonSystemDnsChangeEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext19RecordServerSuccessEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %3)
  br i1 %5, label %6, label %140

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %3) #15
  br i1 %7, label %8, label %68

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 0
  %10 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %9, align 8
  %11 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %12 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %11, align 8
  %13 = icmp eq %"struct.net::ResolveContext::ServerStats"* %10, %12
  br i1 %13, label %68, label %14

14:                                               ; preds = %8
  %15 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %10 to i64
  %16 = getelementptr %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %12, i64 -1, i32 0
  %17 = ptrtoint i32* %16 to i64
  %18 = sub i64 %17, %15
  %19 = lshr i64 %18, 5
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %19, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %14
  %24 = sub nuw nsw i64 %20, %21
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %46, %25 ]
  %27 = phi %"struct.net::ResolveContext::ServerStats"* [ %10, %23 ], [ %47, %25 ]
  %28 = phi i64 [ %24, %23 ], [ %48, %25 ]
  %29 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %27, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, 10
  %32 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %27, i64 0, i32 1
  %33 = load i8, i8* %32, align 4
  %34 = icmp ne i8 %33, 0
  %35 = and i1 %31, %34
  %36 = zext i1 %35 to i64
  %37 = add nuw nsw i64 %26, %36
  %38 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %27, i64 1, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %39, 10
  %41 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %27, i64 1, i32 1
  %42 = load i8, i8* %41, align 4
  %43 = icmp ne i8 %42, 0
  %44 = and i1 %40, %43
  %45 = zext i1 %44 to i64
  %46 = add nuw nsw i64 %37, %45
  %47 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %27, i64 2
  %48 = add i64 %28, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %25

50:                                               ; preds = %25, %14
  %51 = phi i64 [ undef, %14 ], [ %46, %25 ]
  %52 = phi i64 [ 0, %14 ], [ %46, %25 ]
  %53 = phi %"struct.net::ResolveContext::ServerStats"* [ %10, %14 ], [ %47, %25 ]
  %54 = icmp eq i64 %21, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %53, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp slt i32 %57, 10
  %59 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %53, i64 0, i32 1
  %60 = load i8, i8* %59, align 4
  %61 = icmp ne i8 %60, 0
  %62 = and i1 %58, %61
  %63 = zext i1 %62 to i64
  %64 = add nuw nsw i64 %52, %63
  br label %65

65:                                               ; preds = %50, %55
  %66 = phi i64 [ %51, %50 ], [ %64, %55 ]
  %67 = icmp ne i64 %66, 0
  br label %68

68:                                               ; preds = %65, %6, %8
  %69 = phi i1 [ false, %6 ], [ false, %8 ], [ %67, %65 ]
  %70 = tail call %"struct.net::ResolveContext::ServerStats"* @_ZN3net14ResolveContext14GetServerStatsEmb(%"class.net::ResolveContext"* %0, i64 %1, i1 zeroext %2)
  %71 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %70, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %70, i64 0, i32 1
  store i8 1, i8* %72, align 4
  %73 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %70, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %73, align 8
  %74 = tail call i64 @_ZN4base9TimeTicks3NowEv() #15
  %75 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %70, i64 0, i32 3, i32 0, i32 0
  store i64 %74, i64* %75, align 8
  %76 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %3) #15
  br i1 %76, label %77, label %119

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 0
  %79 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %78, align 8
  %80 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %81 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %80, align 8
  %82 = icmp eq %"struct.net::ResolveContext::ServerStats"* %79, %81
  br i1 %82, label %119, label %83

83:                                               ; preds = %77
  %84 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %79 to i64
  %85 = getelementptr %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %81, i64 -1, i32 0
  %86 = ptrtoint i32* %85 to i64
  %87 = sub i64 %86, %84
  %88 = lshr i64 %87, 5
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %83
  %93 = sub nuw nsw i64 %89, %90
  br label %94

94:                                               ; preds = %94, %92
  %95 = phi i64 [ 0, %92 ], [ %115, %94 ]
  %96 = phi %"struct.net::ResolveContext::ServerStats"* [ %79, %92 ], [ %116, %94 ]
  %97 = phi i64 [ %93, %92 ], [ %117, %94 ]
  %98 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %96, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp slt i32 %99, 10
  %101 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %96, i64 0, i32 1
  %102 = load i8, i8* %101, align 4
  %103 = icmp ne i8 %102, 0
  %104 = and i1 %100, %103
  %105 = zext i1 %104 to i64
  %106 = add nuw nsw i64 %95, %105
  %107 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %96, i64 1, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp slt i32 %108, 10
  %110 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %96, i64 1, i32 1
  %111 = load i8, i8* %110, align 4
  %112 = icmp ne i8 %111, 0
  %113 = and i1 %109, %112
  %114 = zext i1 %113 to i64
  %115 = add nuw nsw i64 %106, %114
  %116 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %96, i64 2
  %117 = add i64 %97, -2
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %120, label %94

119:                                              ; preds = %77, %68
  br i1 %69, label %139, label %140

120:                                              ; preds = %94, %83
  %121 = phi i64 [ undef, %83 ], [ %115, %94 ]
  %122 = phi i64 [ 0, %83 ], [ %115, %94 ]
  %123 = phi %"struct.net::ResolveContext::ServerStats"* [ %79, %83 ], [ %116, %94 ]
  %124 = icmp eq i64 %90, 0
  br i1 %124, label %135, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %123, i64 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = icmp slt i32 %127, 10
  %129 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %123, i64 0, i32 1
  %130 = load i8, i8* %129, align 4
  %131 = icmp ne i8 %130, 0
  %132 = and i1 %128, %131
  %133 = zext i1 %132 to i64
  %134 = add nuw nsw i64 %122, %133
  br label %135

135:                                              ; preds = %120, %125
  %136 = phi i64 [ %121, %120 ], [ %134, %125 ]
  %137 = icmp ne i64 %136, 0
  %138 = xor i1 %69, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %119, %135
  tail call void @_ZN3net21NetworkChangeNotifier25TriggerNonSystemDnsChangeEv() #15
  br label %140

140:                                              ; preds = %119, %135, %139, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext9RecordRttEmbN4base9TimeDeltaEiPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, i64, i32, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %3, i64* %8, align 8
  %9 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %5)
  br i1 %9, label %10, label %40

10:                                               ; preds = %6
  %11 = tail call %"struct.net::ResolveContext::ServerStats"* @_ZN3net14ResolveContext14GetServerStatsEmb(%"class.net::ResolveContext"* %0, i64 %1, i1 zeroext %2)
  %12 = tail call i64 @_ZN3net14ResolveContext24NextFallbackPeriodHelperEPKNS0_11ServerStatsEi(%"class.net::ResolveContext"* %0, %"struct.net::ResolveContext::ServerStats"* %11, i32 0)
  tail call void @_ZN3net14ResolveContext15RecordRttForUmaEmbN4base9TimeDeltaEiS2_PKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, i64 %1, i1 zeroext %2, i64 %3, i32 %4, i64 undef, %"class.net::DnsSession"* %5)
  %13 = icmp slt i64 %3, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i64 0, i64* %8, align 8
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %16, align 8
  %18 = getelementptr inbounds %"class.base::SampleVector", %"class.base::SampleVector"* %17, i64 0, i32 0
  %19 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %7) #15
  %20 = call i1 @llvm.is.constant.i64(i64 %19) #15
  br i1 %20, label %28, label %21

21:                                               ; preds = %15
  %22 = icmp slt i64 %19, 0
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = add i64 %19, 2147483648
  %25 = icmp ult i64 %24, 4294967296
  %26 = trunc i64 %19 to i32
  %27 = select i1 %25, i32 %26, i32 %23, !prof !15
  br label %34

28:                                               ; preds = %15
  %29 = icmp sgt i64 %19, 2147483647
  br i1 %29, label %34, label %30

30:                                               ; preds = %28
  %31 = icmp sgt i64 %19, -2147483648
  %32 = select i1 %31, i64 %19, i64 -2147483648
  %33 = trunc i64 %32 to i32
  br label %34

34:                                               ; preds = %21, %28, %30
  %35 = phi i32 [ %27, %21 ], [ %33, %30 ], [ 2147483647, %28 ]
  %36 = bitcast %"class.base::SampleVector"* %17 to void (%"class.base::SampleVectorBase"*, i32, i32)***
  %37 = load void (%"class.base::SampleVectorBase"*, i32, i32)**, void (%"class.base::SampleVectorBase"*, i32, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::SampleVectorBase"*, i32, i32)*, void (%"class.base::SampleVectorBase"*, i32, i32)** %37, i64 2
  %39 = load void (%"class.base::SampleVectorBase"*, i32, i32)*, void (%"class.base::SampleVectorBase"*, i32, i32)** %38, align 8
  call void %39(%"class.base::SampleVectorBase"* %18, i32 %35, i32 1) #15
  br label %40

40:                                               ; preds = %6, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14ResolveContext24NextFallbackPeriodHelperEPKNS0_11ServerStatsEi(%"class.net::ResolveContext"* nocapture readonly, %"struct.net::ResolveContext::ServerStats"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 3, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 7, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp sgt i64 %9, %7
  br i1 %10, label %98, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %12, align 8
  %14 = getelementptr inbounds %"class.base::SampleVector", %"class.base::SampleVector"* %13, i64 0, i32 0
  %15 = bitcast %"class.base::SampleVector"* %13 to i32 (%"class.base::SampleVectorBase"*)***
  %16 = load i32 (%"class.base::SampleVectorBase"*)**, i32 (%"class.base::SampleVectorBase"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.base::SampleVectorBase"*)*, i32 (%"class.base::SampleVectorBase"*)** %16, i64 4
  %18 = load i32 (%"class.base::SampleVectorBase"*)*, i32 (%"class.base::SampleVectorBase"*)** %17, align 8
  %19 = tail call i32 %18(%"class.base::SampleVectorBase"* %14) #15
  %20 = mul nsw i32 %19, 99
  %21 = icmp sgt i32 %20, 99
  br i1 %21, label %22, label %50

22:                                               ; preds = %11
  %23 = udiv i32 %20, 100
  br label %24

24:                                               ; preds = %22, %45
  %25 = phi i64 [ %48, %45 ], [ 0, %22 ]
  %26 = phi i32 [ %47, %45 ], [ %23, %22 ]
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %39, !prof !16

29:                                               ; preds = %24
  %30 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %29
  tail call void @_ZN4base12BucketRangesC2Em(%"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*), i64 351) #15
  %33 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull @_ZN3net12_GLOBAL__N_17kRttMaxE) #15
  %34 = add i64 %33, 2147483648
  %35 = icmp ult i64 %34, 4294967296
  br i1 %35, label %37, label %36, !prof !15

36:                                               ; preds = %32
  tail call void @llvm.trap() #15
  unreachable

37:                                               ; preds = %32
  %38 = trunc i64 %33 to i32
  tail call void @_ZN4base9Histogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32 1, i32 %38, %"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*)) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets) #15
  br label %39

39:                                               ; preds = %24, %29, %37
  %40 = load i64, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets, i64 0, i32 0, i64 8) to i64*), align 8
  %41 = load i64, i64* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to i64*), align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 2
  %44 = icmp ult i64 %25, %43
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = tail call i32 @_ZNK4base16SampleVectorBase15GetCountAtIndexEm(%"class.base::SampleVectorBase"* %14, i64 %25) #15
  %47 = sub nsw i32 %26, %46
  %48 = add nuw i64 %25, 1
  %49 = icmp sgt i32 %47, 0
  br i1 %49, label %24, label %50

50:                                               ; preds = %39, %45, %11
  %51 = phi i64 [ 0, %11 ], [ %48, %45 ], [ %25, %39 ]
  %52 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  store i64 -6148914691236517206, i64* %4, align 8
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %65, !prof !16

55:                                               ; preds = %50
  %56 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets) #15
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %55
  tail call void @_ZN4base12BucketRangesC2Em(%"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*), i64 351) #15
  %59 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull @_ZN3net12_GLOBAL__N_17kRttMaxE) #15
  %60 = add i64 %59, 2147483648
  %61 = icmp ult i64 %60, 4294967296
  br i1 %61, label %63, label %62, !prof !15

62:                                               ; preds = %58
  tail call void @llvm.trap() #15
  unreachable

63:                                               ; preds = %58
  %64 = trunc i64 %59 to i32
  tail call void @_ZN4base9Histogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32 1, i32 %64, %"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*)) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets) #15
  br label %65

65:                                               ; preds = %50, %55, %63
  %66 = load i32*, i32** bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to i32**), align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %51
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %69, 1000
  store i64 %70, i64* %4, align 8
  %71 = icmp slt i64 %70, 10000
  %72 = bitcast i64* %4 to %"class.base::TimeDelta"*
  %73 = select i1 %71, %"class.base::TimeDelta"* @_ZN3net12_GLOBAL__N_118kMinFallbackPeriodE, %"class.base::TimeDelta"* %72
  %74 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %4, align 8
  %76 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  %77 = shl i32 1, %2
  %78 = sext i32 %77 to i64
  %79 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %75, i64 %78) #15
  %80 = extractvalue { i64, i1 } %79, 1
  %81 = extractvalue { i64, i1 } %79, 0
  br i1 %80, label %82, label %88

82:                                               ; preds = %65
  %83 = lshr i64 %75, 63
  %84 = trunc i64 %83 to i32
  %85 = lshr i32 %77, 31
  %86 = icmp eq i32 %85, %84
  %87 = select i1 %86, i64 9223372036854775807, i64 -9223372036854775808
  br label %88

88:                                               ; preds = %65, %82
  %89 = phi i64 [ %81, %65 ], [ %87, %82 ]
  store i64 %89, i64* %5, align 8
  %90 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 3
  %91 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %90, i64 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp slt i64 %92, %89
  %94 = bitcast i64* %5 to %"class.base::TimeDelta"*
  %95 = select i1 %93, %"class.base::TimeDelta"* %90, %"class.base::TimeDelta"* %94
  %96 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %95, i64 0, i32 0
  %97 = load i64, i64* %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  br label %98

98:                                               ; preds = %3, %88
  %99 = phi i64 [ %97, %88 ], [ %9, %3 ]
  ret i64 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext15RecordRttForUmaEmbN4base9TimeDeltaEiS2_PKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i1 zeroext, i64, i32, i64, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  br i1 %2, label %16, label %31

16:                                               ; preds = %7
  %17 = tail call zeroext i1 @_ZNK3net14ResolveContext24GetDohServerAvailabilityEmPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, i64 %1, %"class.net::DnsSession"* %6) #15, !noalias !17
  %18 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  br i1 %17, label %20, label %22

20:                                               ; preds = %16
  store i8 15, i8* %19, align 1, !alias.scope !17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i1 false) #15
  %21 = getelementptr inbounds i8, i8* %12, i64 15
  store i8 0, i8* %21, align 1, !alias.scope !17
  br label %24

22:                                               ; preds = %16
  store i8 18, i8* %19, align 1, !alias.scope !17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18, i1 false) #15
  %23 = getelementptr inbounds i8, i8* %12, i64 18
  store i8 0, i8* %23, align 2, !alias.scope !17
  br label %24

24:                                               ; preds = %20, %22
  %25 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %6, i64 0, i32 1, i32 13, i32 0, i32 0
  %29 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %28, align 8, !noalias !20
  %30 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 %1
  call void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* nonnull sret %9, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32) %30) #15
  br label %42

31:                                               ; preds = %7
  %32 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 8, i8* %33, align 1, !alias.scope !17
  %34 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 7310034214940012105, i64* %34, align 8, !alias.scope !17
  %35 = bitcast i64* %14 to i8*
  store i8 0, i8* %35, align 8, !alias.scope !17
  %36 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %39 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8, !noalias !20
  %41 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %40, i64 %1
  call void @_ZN3net42GetDohProviderIdForHistogramFromNameserverERKNS_10IPEndPointE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.net::IPEndPoint"* dereferenceable(20) %41) #15
  br label %42

42:                                               ; preds = %24, %31
  %43 = phi i8** [ %26, %24 ], [ %37, %31 ]
  %44 = phi i8* [ %25, %24 ], [ %36, %31 ]
  %45 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %14, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp eq i64 %51, 18
  br i1 %52, label %53, label %60

53:                                               ; preds = %42
  %54 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %8, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = call zeroext i1 @_ZN3net14ResolveContext26GetProviderUseExtraLoggingEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"* undef, i64 %1, i1 zeroext %2, %"class.net::DnsSession"* %6)
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %101

60:                                               ; preds = %42, %56, %53
  switch i32 %4, label %81 [
    i32 -105, label %61
    i32 0, label %61
  ]

61:                                               ; preds = %60, %60
  %62 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #15
  %63 = load i8, i8* %46, align 1
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %13, align 8
  %66 = select i1 %64, i8* %65, i8* %12
  %67 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i8*, i8** %43, align 8
  %72 = select i1 %70, i8* %71, i8* %44
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.11, i64 0, i64 0), i8* %66, i8* %72) #15
  call void @_ZN4base23UmaHistogramMediumTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, i64 %3) #15
  %73 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %61
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #16
  br label %80

80:                                               ; preds = %61, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #15
  br label %101

81:                                               ; preds = %60
  %82 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #15
  %83 = load i8, i8* %46, align 1
  %84 = icmp slt i8 %83, 0
  %85 = load i8*, i8** %13, align 8
  %86 = select i1 %84, i8* %85, i8* %12
  %87 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i8*, i8** %43, align 8
  %92 = select i1 %90, i8* %91, i8* %44
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i64 0, i64 0), i8* %86, i8* %92) #15
  call void @_ZN4base23UmaHistogramMediumTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, i64 %3) #15
  %93 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #16
  br label %100

100:                                              ; preds = %81, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #15
  br label %101

101:                                              ; preds = %58, %80, %100
  %102 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %59, %58 ], [ %67, %80 ], [ %87, %100 ]
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  %107 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %107) #16
  br label %108

108:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #15
  %109 = load i8, i8* %46, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %112) #16
  br label %113

113:                                              ; preds = %108, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14ResolveContext25NextClassicFallbackPeriodEmiPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, i32, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i64, align 8
  %7 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %3)
  br i1 %7, label %22, label %8

8:                                                ; preds = %4
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = tail call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #15
  %11 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %3, i64 0, i32 1, i32 8, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), i64 %12, i32 %10) #15
  store i64 %13, i64* %6, align 8
  %14 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %16, %13
  %18 = bitcast i64* %6 to %"class.base::TimeDelta"*
  %19 = select i1 %17, %"class.base::TimeDelta"* %14, %"class.base::TimeDelta"* %18
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %19, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  br label %49

22:                                               ; preds = %4
  %23 = tail call %"struct.net::ResolveContext::ServerStats"* @_ZN3net14ResolveContext14GetServerStatsEmb(%"class.net::ResolveContext"* %0, i64 %1, i1 zeroext false)
  %24 = sext i32 %2 to i64
  %25 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %25) #15
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %27, %22
  %31 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %25) #15
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %34 = bitcast i64* %33 to %"class.net::DnsSession"**
  %35 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %34, align 8
  br label %36

36:                                               ; preds = %30, %32
  %37 = phi %"class.net::DnsSession"* [ %35, %32 ], [ null, %30 ]
  %38 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %37, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %37, i64 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast %"class.net::IPEndPoint"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.77"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = sdiv exact i64 %44, 20
  %46 = udiv i64 %24, %45
  %47 = trunc i64 %46 to i32
  %48 = call i64 @_ZN3net14ResolveContext24NextFallbackPeriodHelperEPKNS0_11ServerStatsEi(%"class.net::ResolveContext"* %0, %"struct.net::ResolveContext::ServerStats"* %23, i32 %47)
  br label %49

49:                                               ; preds = %36, %8
  %50 = phi i64 [ %48, %36 ], [ %21, %8 ]
  ret i64 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14ResolveContext21NextDohFallbackPeriodEmPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i64, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %2)
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = tail call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #15
  %9 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %2, i64 0, i32 1, i32 8, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), i64 %10, i32 %8) #15
  store i64 %11, i64* %4, align 8
  %12 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, %11
  %16 = bitcast i64* %4 to %"class.base::TimeDelta"*
  %17 = select i1 %15, %"class.base::TimeDelta"* %12, %"class.base::TimeDelta"* %16
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %17, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  br label %23

20:                                               ; preds = %3
  %21 = tail call %"struct.net::ResolveContext::ServerStats"* @_ZN3net14ResolveContext14GetServerStatsEmb(%"class.net::ResolveContext"* %0, i64 %1, i1 zeroext true)
  %22 = tail call i64 @_ZN3net14ResolveContext24NextFallbackPeriodHelperEPKNS0_11ServerStatsEi(%"class.net::ResolveContext"* %0, %"struct.net::ResolveContext::ServerStats"* %21, i32 0)
  br label %23

23:                                               ; preds = %20, %6
  %24 = phi i64 [ %22, %20 ], [ %19, %6 ]
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14ResolveContext25ClassicTransactionTimeoutEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %1)
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net8features25kDnsMinTransactionTimeoutE) #15
  br label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %9, align 8
  %11 = icmp eq %"struct.net::ResolveContext::ServerStats"* %8, %10
  br i1 %11, label %12, label %28

12:                                               ; preds = %28, %6
  %13 = phi i64 [ 9223372036854775807, %6 ], [ %33, %28 ]
  %14 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.173"* nonnull @_ZN3net8features32kDnsTransactionTimeoutMultiplierE) #15
  %15 = sitofp i64 %13 to double
  %16 = fmul double %14, %15
  %17 = fcmp oge double %16, 0xC3E0000000000000
  %18 = fcmp ole double %16, 0x43DFFFFFFFFFFFFF
  %19 = and i1 %18, %17
  %20 = fptosi double %16 to i64
  br i1 %19, label %36, label %21

21:                                               ; preds = %12
  %22 = lshr i64 %13, 63
  %23 = trunc i64 %22 to i32
  %24 = fcmp olt double %14, 0.000000e+00
  %25 = zext i1 %24 to i32
  %26 = icmp eq i32 %23, %25
  %27 = select i1 %26, i64 9223372036854775807, i64 -9223372036854775808
  br label %36

28:                                               ; preds = %6, %28
  %29 = phi i64 [ %33, %28 ], [ 9223372036854775807, %6 ]
  %30 = phi %"struct.net::ResolveContext::ServerStats"* [ %34, %28 ], [ %8, %6 ]
  %31 = tail call i64 @_ZN3net14ResolveContext24NextFallbackPeriodHelperEPKNS0_11ServerStatsEi(%"class.net::ResolveContext"* %0, %"struct.net::ResolveContext::ServerStats"* %30, i32 0) #15
  %32 = icmp slt i64 %31, %29
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %30, i64 1
  %35 = icmp eq %"struct.net::ResolveContext::ServerStats"* %34, %10
  br i1 %35, label %12, label %28

36:                                               ; preds = %12, %21
  %37 = phi i64 [ %20, %12 ], [ %27, %21 ]
  %38 = tail call i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net8features25kDnsMinTransactionTimeoutE) #15
  %39 = icmp slt i64 %38, %37
  %40 = select i1 %39, i64 %37, i64 %38
  br label %41

41:                                               ; preds = %36, %4
  %42 = phi i64 [ %40, %36 ], [ %5, %4 ]
  ret i64 %42
}

declare i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net14ResolveContext24SecureTransactionTimeoutENS_13SecureDnsModeEPKNS_10DnsSessionE(%"class.net::ResolveContext"*, i32, %"class.net::DnsSession"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK3net14ResolveContext16IsCurrentSessionEPKNS_10DnsSessionE(%"class.net::ResolveContext"* %0, %"class.net::DnsSession"* %2)
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net8features25kDnsMinTransactionTimeoutE) #15
  br label %42

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 0
  %9 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %8, align 8
  %10 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %11 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %10, align 8
  %12 = icmp eq %"struct.net::ResolveContext::ServerStats"* %9, %11
  br i1 %12, label %13, label %29

13:                                               ; preds = %29, %7
  %14 = phi i64 [ 9223372036854775807, %7 ], [ %34, %29 ]
  %15 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.173"* nonnull @_ZN3net8features32kDnsTransactionTimeoutMultiplierE) #15
  %16 = sitofp i64 %14 to double
  %17 = fmul double %15, %16
  %18 = fcmp oge double %17, 0xC3E0000000000000
  %19 = fcmp ole double %17, 0x43DFFFFFFFFFFFFF
  %20 = and i1 %19, %18
  %21 = fptosi double %17 to i64
  br i1 %20, label %37, label %22

22:                                               ; preds = %13
  %23 = lshr i64 %14, 63
  %24 = trunc i64 %23 to i32
  %25 = fcmp olt double %15, 0.000000e+00
  %26 = zext i1 %25 to i32
  %27 = icmp eq i32 %24, %26
  %28 = select i1 %27, i64 9223372036854775807, i64 -9223372036854775808
  br label %37

29:                                               ; preds = %7, %29
  %30 = phi i64 [ %34, %29 ], [ 9223372036854775807, %7 ]
  %31 = phi %"struct.net::ResolveContext::ServerStats"* [ %35, %29 ], [ %9, %7 ]
  %32 = tail call i64 @_ZN3net14ResolveContext24NextFallbackPeriodHelperEPKNS0_11ServerStatsEi(%"class.net::ResolveContext"* %0, %"struct.net::ResolveContext::ServerStats"* %31, i32 0) #15
  %33 = icmp slt i64 %32, %30
  %34 = select i1 %33, i64 %32, i64 %30
  %35 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %31, i64 1
  %36 = icmp eq %"struct.net::ResolveContext::ServerStats"* %35, %11
  br i1 %36, label %13, label %29

37:                                               ; preds = %13, %22
  %38 = phi i64 [ %21, %13 ], [ %28, %22 ]
  %39 = tail call i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net8features25kDnsMinTransactionTimeoutE) #15
  %40 = icmp slt i64 %39, %38
  %41 = select i1 %40, i64 %38, i64 %39
  br label %42

42:                                               ; preds = %37, %5
  %43 = phi i64 [ %41, %37 ], [ %6, %5 ]
  ret i64 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext25RegisterDohStatusObserverEPNS0_17DohStatusObserverE(%"class.net::ResolveContext"*, %"class.net::ResolveContext::DohStatusObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4
  tail call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_(%"class.base::ObserverList"* %3, %"class.net::ResolveContext::DohStatusObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE11AddObserverEPS3_(%"class.base::ObserverList"*, %"class.net::ResolveContext::DohStatusObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::CheckedObserverAdapter", align 8
  %4 = icmp eq %"class.net::ResolveContext::DohStatusObserver"* %1, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %6, align 8
  %8 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %10 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %7, %9
  %11 = getelementptr inbounds %"class.net::ResolveContext::DohStatusObserver", %"class.net::ResolveContext::DohStatusObserver"* %1, i64 0, i32 0
  br i1 %10, label %28, label %12

12:                                               ; preds = %5, %21
  %13 = phi %"class.base::internal::CheckedObserverAdapter"* [ %22, %21 ], [ %7, %5 ]
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #15
  %16 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to %"class.base::CheckedObserver"**
  %18 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %17, align 8
  %19 = select i1 %15, %"class.base::CheckedObserver"* %18, %"class.base::CheckedObserver"* null
  %20 = icmp eq %"class.base::CheckedObserver"* %19, %11
  br i1 %20, label %24, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %13, i64 1
  %23 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %22, %9
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %21
  %25 = phi %"class.base::internal::CheckedObserverAdapter"* [ %9, %21 ], [ %13, %12 ]
  %26 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %8, align 8
  %27 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %25, %26
  br i1 %27, label %28, label %46

28:                                               ; preds = %24, %5, %2
  %29 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = bitcast %"class.base::internal::CheckedObserverAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #15
  %33 = getelementptr inbounds %"class.net::ResolveContext::DohStatusObserver", %"class.net::ResolveContext::DohStatusObserver"* %1, i64 0, i32 0
  call void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"* nonnull %3, %"class.base::CheckedObserver"* %33) #15
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %36, align 8
  %38 = icmp ult %"class.base::internal::CheckedObserverAdapter"* %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %28
  call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %35, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #15
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %35, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::CheckedObserverAdapter"** %34 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.28"* %44, %"class.base::internal::CheckedObserverAdapter"* nonnull dereferenceable(16) %3) #15
  br label %45

45:                                               ; preds = %39, %43
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #15
  br label %46

46:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext27UnregisterDohStatusObserverEPKNS0_17DohStatusObserverE(%"class.net::ResolveContext"*, %"class.net::ResolveContext::DohStatusObserver"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4
  tail call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_(%"class.base::ObserverList"* %3, %"class.net::ResolveContext::DohStatusObserver"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE14RemoveObserverEPKS3_(%"class.base::ObserverList"*, %"class.net::ResolveContext::DohStatusObserver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %6, %8
  %10 = getelementptr inbounds %"class.net::ResolveContext::DohStatusObserver", %"class.net::ResolveContext::DohStatusObserver"* %1, i64 0, i32 0
  br i1 %9, label %97, label %11

11:                                               ; preds = %2, %20
  %12 = phi %"class.base::internal::CheckedObserverAdapter"* [ %21, %20 ], [ %6, %2 ]
  %13 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #15
  %15 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.base::CheckedObserver"**
  %17 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %16, align 8
  %18 = select i1 %14, %"class.base::CheckedObserver"* %17, %"class.base::CheckedObserver"* null
  %19 = icmp eq %"class.base::CheckedObserver"* %18, %10
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %12, i64 1
  %22 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %21, %8
  br i1 %22, label %23, label %11

23:                                               ; preds = %11, %20
  %24 = phi %"class.base::internal::CheckedObserverAdapter"* [ %8, %20 ], [ %12, %11 ]
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %26 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %24, %25
  br i1 %26, label %97, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %33 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %32) #15
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0)) #15
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  br label %37

37:                                               ; preds = %27, %31, %34
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0
  %39 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %38) #15
  %40 = bitcast i64* %28 to %"class.base::CheckedObserver"**
  %41 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %40, align 8
  %42 = icmp eq %"class.base::CheckedObserver"* %41, null
  %43 = xor i1 %39, true
  %44 = or i1 %42, %43
  br i1 %44, label %49, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %45, %37
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %0, i64 0, i32 1, i32 0
  %54 = icmp eq %"class.base::LinkNode"* %52, %53
  br i1 %54, label %55, label %78

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 1
  %57 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %58 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %56, %57
  br i1 %58, label %69, label %59

59:                                               ; preds = %55, %59
  %60 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %59 ], [ %24, %55 ]
  %61 = phi %"class.base::internal::CheckedObserverAdapter"* [ %63, %59 ], [ %56, %55 ]
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %60, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %61) #15
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %60, i64 1
  %65 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %63, %57
  br i1 %65, label %66, label %59

66:                                               ; preds = %59
  %67 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %64
  br i1 %68, label %76, label %69

69:                                               ; preds = %66, %55
  %70 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %24, %55 ]
  %71 = phi %"class.base::internal::CheckedObserverAdapter"* [ %67, %66 ], [ %56, %55 ]
  br label %72

72:                                               ; preds = %72, %69
  %73 = phi %"class.base::internal::CheckedObserverAdapter"* [ %74, %72 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %73, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %74) #15
  %75 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %74, %70
  br i1 %75, label %76, label %72

76:                                               ; preds = %72, %66
  %77 = phi %"class.base::internal::CheckedObserverAdapter"* [ %64, %66 ], [ %70, %72 ]
  store %"class.base::internal::CheckedObserverAdapter"* %77, %"class.base::internal::CheckedObserverAdapter"** %7, align 8
  br label %97

78:                                               ; preds = %49
  %79 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #15
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #15
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %81, align 8
  %84 = bitcast %"class.base::internal::CheckedObserverAdapter"* %24 to i64*
  %85 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.base::internal::WeakReference::Flag"* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %86) #15
  %93 = bitcast %"class.base::internal::WeakReference::Flag"* %86 to i8*
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %78, %88, %92
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %28, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %80) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #15
  br label %97

97:                                               ; preds = %2, %76, %94, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext33InvalidateCachesAndPerSessionDataEPKNS_10DnsSessionEb(%"class.net::ResolveContext"*, %"class.net::DnsSession"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::WeakPtr.164", align 8
  %9 = alloca %"class.base::internal::WeakReference", align 8
  %10 = alloca %"class.base::WeakPtr.36", align 8
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckOpResult", align 8
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.net::HostCache"*, %"class.net::HostCache"** %17, align 8
  %19 = icmp eq %"class.net::HostCache"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %3
  tail call void @_ZN3net9HostCache10InvalidateEv(%"class.net::HostCache"* nonnull %18) #15
  br label %21

21:                                               ; preds = %3, %20
  %22 = icmp ne %"class.net::DnsSession"* %1, null
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %24) #15
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  %28 = bitcast i64* %27 to %"class.net::DnsSession"**
  %29 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %28, align 8
  br label %30

30:                                               ; preds = %23, %26
  %31 = phi %"class.net::DnsSession"* [ %29, %26 ], [ null, %23 ]
  %32 = icmp eq %"class.net::DnsSession"* %31, %1
  br i1 %32, label %292, label %33

33:                                               ; preds = %30, %21
  %34 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5
  %35 = bitcast %"class.base::internal::WeakReference"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %9) #15
  %36 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %9, i64 0, i32 0, i32 0
  %37 = bitcast %"class.base::internal::WeakReference"* %9 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %36, align 8
  %39 = bitcast %"class.base::WeakPtr.36"* %34 to i64*
  %40 = getelementptr inbounds %"class.base::WeakPtr.36", %"class.base::WeakPtr.36"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.base::internal::WeakReference::Flag"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %41) #15
  %48 = bitcast %"class.base::internal::WeakReference::Flag"* %41 to i8*
  call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %33, %43, %47
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  %50 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8
  %52 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %51, i64 0, i32 0, i32 0
  %53 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %52, align 8
  %54 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 1
  %55 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %54, align 8
  %56 = icmp eq %"struct.net::ResolveContext::ServerStats"* %55, %53
  br i1 %56, label %70, label %57

57:                                               ; preds = %49, %68
  %58 = phi %"struct.net::ResolveContext::ServerStats"* [ %59, %68 ], [ %55, %49 ]
  %59 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %58, i64 -1
  %60 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %58, i64 -1, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %60, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %60, align 8
  %62 = icmp eq %"class.base::SampleVector"* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.base::SampleVector"* %61 to void (%"class.base::SampleVector"*)***
  %65 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %65, i64 1
  %67 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %66, align 8
  call void %67(%"class.base::SampleVector"* nonnull %61) #15
  br label %68

68:                                               ; preds = %63, %57
  %69 = icmp eq %"struct.net::ResolveContext::ServerStats"* %59, %53
  br i1 %69, label %70, label %57

70:                                               ; preds = %68, %49
  store %"struct.net::ResolveContext::ServerStats"* %53, %"struct.net::ResolveContext::ServerStats"** %54, align 8
  %71 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9
  %72 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %71, i64 0, i32 0, i32 0
  %73 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %72, align 8
  %74 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 1
  %75 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %74, align 8
  %76 = icmp eq %"struct.net::ResolveContext::ServerStats"* %75, %73
  br i1 %76, label %90, label %77

77:                                               ; preds = %70, %88
  %78 = phi %"struct.net::ResolveContext::ServerStats"* [ %79, %88 ], [ %75, %70 ]
  %79 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 -1
  %80 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %78, i64 -1, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %80, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %80, align 8
  %82 = icmp eq %"class.base::SampleVector"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.base::SampleVector"* %81 to void (%"class.base::SampleVector"*)***
  %85 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %85, i64 1
  %87 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %86, align 8
  call void %87(%"class.base::SampleVector"* nonnull %81) #15
  br label %88

88:                                               ; preds = %83, %77
  %89 = icmp eq %"struct.net::ResolveContext::ServerStats"* %79, %73
  br i1 %89, label %90, label %77

90:                                               ; preds = %88, %70
  store %"struct.net::ResolveContext::ServerStats"* %73, %"struct.net::ResolveContext::ServerStats"** %74, align 8
  %91 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 7, i32 0
  store i64 0, i64* %91, align 8
  %92 = call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #15
  %93 = call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i64 5000000, i32 %92) #15
  %94 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 3, i32 0
  store i64 %93, i64* %94, align 8
  br i1 %22, label %96, label %95

95:                                               ; preds = %90
  call void @_ZN3net14ResolveContext40NotifyDohStatusObserversOfSessionChangedEv(%"class.net::ResolveContext"* %0)
  br label %292

96:                                               ; preds = %90
  %97 = bitcast %"class.base::WeakPtr.36"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #15
  %98 = bitcast %"class.base::WeakPtr.164"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #15, !noalias !23
  %99 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #15, !noalias !26
  %100 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %1, i64 0, i32 6, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %100) #15, !noalias !26
  %101 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %1, i64 0, i32 6, i32 0, i32 1
  %102 = load i64, i64* %101, align 8, !noalias !26
  %103 = getelementptr inbounds %"class.base::WeakPtr.164", %"class.base::WeakPtr.164"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %103, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %102) #15, !noalias !23
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #15, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15, !noalias !26
  %104 = getelementptr inbounds %"class.base::WeakPtr.36", %"class.base::WeakPtr.36"* %10, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.base::WeakPtr.164", %"class.base::WeakPtr.164"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %104, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %105) #15
  %106 = getelementptr inbounds %"class.base::WeakPtr.36", %"class.base::WeakPtr.36"* %10, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.base::WeakPtr.164", %"class.base::WeakPtr.164"* %8, i64 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8, !noalias !23
  store i64 %108, i64* %106, align 8, !alias.scope !23
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %103) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #15, !noalias !23
  %109 = getelementptr inbounds %"class.base::WeakPtr.36", %"class.base::WeakPtr.36"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.base::WeakPtr.36"* %10 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %109, align 8
  %112 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %40, align 8
  store i64 %111, i64* %39, align 8
  %113 = icmp eq %"class.base::internal::WeakReference::Flag"* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %96
  %115 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw sub i32* %115, i32 1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %112) #15
  %119 = bitcast %"class.base::internal::WeakReference::Flag"* %112 to i8*
  call void @_ZdlPv(i8* %119) #16
  br label %120

120:                                              ; preds = %96, %114, %118
  %121 = load i64, i64* %106, align 8
  store i64 %121, i64* %50, align 8
  %122 = getelementptr inbounds %"class.base::WeakPtr.36", %"class.base::WeakPtr.36"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %122) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #15
  %123 = getelementptr inbounds %"class.base::WeakPtr.36", %"class.base::WeakPtr.36"* %34, i64 0, i32 0, i32 0
  %124 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %123) #15
  br i1 %124, label %128, label %125

125:                                              ; preds = %120
  %126 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)) #15
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #15
  br label %128

128:                                              ; preds = %125, %120
  %129 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %123) #15
  br i1 %129, label %130, label %133

130:                                              ; preds = %128
  %131 = bitcast i64* %50 to %"class.net::DnsSession"**
  %132 = load %"class.net::DnsSession"*, %"class.net::DnsSession"** %131, align 8
  br label %133

133:                                              ; preds = %128, %130
  %134 = phi %"class.net::DnsSession"* [ %132, %130 ], [ null, %128 ]
  %135 = call i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() #15
  %136 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %134, i64 0, i32 1, i32 8, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = call i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0), i64 %137, i32 %135) #15
  store i64 %138, i64* %91, align 8
  %139 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %1, i64 0, i32 1
  %140 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %141 = bitcast %"class.net::IPEndPoint"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.net::DnsConfig"* %139 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %142, %144
  br i1 %145, label %151, label %146

146:                                              ; preds = %133
  %147 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %150 = bitcast %"struct.net::ResolveContext::ServerStats"** %54 to i64*
  br label %166

151:                                              ; preds = %192, %133
  %152 = phi i64 [ %142, %133 ], [ %195, %192 ]
  %153 = phi i64 [ %142, %133 ], [ %194, %192 ]
  %154 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %1, i64 0, i32 1, i32 13
  %155 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %1, i64 0, i32 1, i32 13, i32 0, i32 1
  %156 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.std::__1::vector.110"* %154 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = icmp eq i64 %157, %159
  br i1 %160, label %204, label %161

161:                                              ; preds = %151
  %162 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast %"struct.net::ResolveContext::ServerStats"** %74 to i64*
  br label %226

166:                                              ; preds = %199, %146
  %167 = phi i64 [ %138, %146 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %146 ], [ %193, %199 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #15
  %169 = call fastcc %"class.base::SampleVector"* @_ZN3net12_GLOBAL__N_115GetRttHistogramEN4base9TimeDeltaE(i64 %167)
  store %"class.base::SampleVector"* %169, %"class.base::SampleVector"** %148, align 8
  %170 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %54, align 8
  %171 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %149, align 8
  %172 = icmp ult %"struct.net::ResolveContext::ServerStats"* %170, %171
  br i1 %172, label %173, label %183

173:                                              ; preds = %166
  %174 = ptrtoint %"class.base::SampleVector"* %169 to i64
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %148, align 8
  %175 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 0, i32 0
  store i32 0, i32* %175, align 8
  %176 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 0, i32 1
  store i8 0, i8* %176, align 4
  %177 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 0, i32 2, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 0, i32 4
  %179 = bitcast %"class.std::__1::unique_ptr"* %178 to i64*
  %180 = bitcast i64* %177 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #15
  store i64 %174, i64* %179, align 8
  %181 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %170, i64 1
  %182 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %181 to i64
  store i64 %182, i64* %150, align 8
  br label %184

183:                                              ; preds = %166
  call void @_ZNSt3__16vectorIN3net14ResolveContext11ServerStatsENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS_10unique_ptrIN4base12SampleVectorENS_14default_deleteISA_EEEEEEEvDpOT_(%"class.std::__1::vector.37"* %51, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %11) #15
  br label %184

184:                                              ; preds = %173, %183
  %185 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %148, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %148, align 8
  %186 = icmp eq %"class.base::SampleVector"* %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %184
  %188 = bitcast %"class.base::SampleVector"* %185 to void (%"class.base::SampleVector"*)***
  %189 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %189, i64 1
  %191 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %190, align 8
  call void %191(%"class.base::SampleVector"* nonnull %185) #15
  br label %192

192:                                              ; preds = %184, %187
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #15
  %193 = add nuw i64 %168, 1
  %194 = load i64, i64* %141, align 8
  %195 = load i64, i64* %143, align 8
  %196 = sub i64 %194, %195
  %197 = sdiv exact i64 %196, 20
  %198 = icmp ult i64 %193, %197
  br i1 %198, label %199, label %151

199:                                              ; preds = %192
  %200 = load i64, i64* %91, align 8
  br label %166

201:                                              ; preds = %252
  %202 = load i64, i64* %141, align 8
  %203 = load i64, i64* %143, align 8
  br label %204

204:                                              ; preds = %201, %151
  %205 = phi i64 [ %203, %201 ], [ %152, %151 ]
  %206 = phi i64 [ %202, %201 ], [ %153, %151 ]
  %207 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207) #15
  %208 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %208, align 8
  %209 = sub i64 %206, %205
  %210 = sdiv exact i64 %209, 20
  %211 = bitcast %"struct.net::ResolveContext::ServerStats"** %54 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.std::__1::vector.37"* %51 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = sub i64 %212, %214
  %216 = ashr exact i64 %215, 5
  %217 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217)
  %218 = icmp eq i64 %210, %216
  br i1 %218, label %219, label %220

219:                                              ; preds = %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217)
  store i8* null, i8** %208, align 8
  br label %262

220:                                              ; preds = %204
  %221 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %210) #15
  %222 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i8* %221, i8* %222) #15
  %223 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %224 = load i8*, i8** %223, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217)
  store i8* %224, i8** %208, align 8
  %225 = icmp eq i8* %224, null
  br i1 %225, label %262, label %259

226:                                              ; preds = %161, %252
  %227 = phi i64 [ 0, %161 ], [ %253, %252 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #15
  %228 = load i64, i64* %91, align 8
  %229 = call fastcc %"class.base::SampleVector"* @_ZN3net12_GLOBAL__N_115GetRttHistogramEN4base9TimeDeltaE(i64 %228)
  store %"class.base::SampleVector"* %229, %"class.base::SampleVector"** %163, align 8
  %230 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %74, align 8
  %231 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %164, align 8
  %232 = icmp ult %"struct.net::ResolveContext::ServerStats"* %230, %231
  br i1 %232, label %233, label %243

233:                                              ; preds = %226
  %234 = ptrtoint %"class.base::SampleVector"* %229 to i64
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %163, align 8
  %235 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %230, i64 0, i32 0
  store i32 0, i32* %235, align 8
  %236 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %230, i64 0, i32 1
  store i8 0, i8* %236, align 4
  %237 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %230, i64 0, i32 2, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %230, i64 0, i32 4
  %239 = bitcast %"class.std::__1::unique_ptr"* %238 to i64*
  %240 = bitcast i64* %237 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 16, i1 false) #15
  store i64 %234, i64* %239, align 8
  %241 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %230, i64 1
  %242 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %241 to i64
  store i64 %242, i64* %165, align 8
  br label %244

243:                                              ; preds = %226
  call void @_ZNSt3__16vectorIN3net14ResolveContext11ServerStatsENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS_10unique_ptrIN4base12SampleVectorENS_14default_deleteISA_EEEEEEEvDpOT_(%"class.std::__1::vector.37"* %71, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %12) #15
  br label %244

244:                                              ; preds = %233, %243
  %245 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %163, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %163, align 8
  %246 = icmp eq %"class.base::SampleVector"* %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %244
  %248 = bitcast %"class.base::SampleVector"* %245 to void (%"class.base::SampleVector"*)***
  %249 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %249, i64 1
  %251 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %250, align 8
  call void %251(%"class.base::SampleVector"* nonnull %245) #15
  br label %252

252:                                              ; preds = %244, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #15
  %253 = add nuw i64 %227, 1
  %254 = load i64, i64* %156, align 8
  %255 = load i64, i64* %158, align 8
  %256 = sub i64 %254, %255
  %257 = ashr exact i64 %256, 5
  %258 = icmp ult i64 %253, %257
  br i1 %258, label %226, label %201

259:                                              ; preds = %220
  %260 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 371, %"class.logging::CheckOpResult"* nonnull %13) #15
  %261 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #15
  br label %262

262:                                              ; preds = %219, %220, %259
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207) #15
  %263 = bitcast %"class.logging::CheckOpResult"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #15
  %264 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %15, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %264, align 8
  %265 = load i64, i64* %156, align 8
  %266 = load i64, i64* %158, align 8
  %267 = sub i64 %265, %266
  %268 = ashr exact i64 %267, 5
  %269 = bitcast %"struct.net::ResolveContext::ServerStats"** %74 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.std::__1::vector.37"* %71 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = sub i64 %270, %272
  %274 = ashr exact i64 %273, 5
  %275 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275)
  %276 = icmp eq i64 %268, %274
  br i1 %276, label %277, label %278

277:                                              ; preds = %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  store i8* null, i8** %264, align 8
  br label %287

278:                                              ; preds = %262
  %279 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %268) #15
  %280 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %274) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0), i8* %279, i8* %280) #15
  %281 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %282 = load i8*, i8** %281, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  store i8* %282, i8** %264, align 8
  %283 = icmp eq i8* %282, null
  br i1 %283, label %287, label %284

284:                                              ; preds = %278
  %285 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 373, %"class.logging::CheckOpResult"* nonnull %15) #15
  %286 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #15
  br label %287

287:                                              ; preds = %277, %278, %284
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #15
  call void @_ZN3net14ResolveContext40NotifyDohStatusObserversOfSessionChangedEv(%"class.net::ResolveContext"* %0)
  %288 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %72, align 8
  %289 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %74, align 8
  %290 = icmp eq %"struct.net::ResolveContext::ServerStats"* %288, %289
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  call void @_ZN3net14ResolveContext37NotifyDohStatusObserversOfUnavailableEb(%"class.net::ResolveContext"* %0, i1 zeroext %2)
  br label %292

292:                                              ; preds = %30, %95, %291, %287
  ret void
}

declare void @_ZN3net9HostCache10InvalidateEv(%"class.net::HostCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14ResolveContext40NotifyDohStatusObserversOfSessionChangedEv(%"class.net::ResolveContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4
  %5 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  %11 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %9, align 8, !noalias !29
  %12 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %12, align 8, !noalias !29
  %14 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %11, %13
  %15 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %15) #15
  br i1 %14, label %16, label %18

16:                                               ; preds = %1
  %17 = bitcast %"class.base::ObserverList"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #15, !alias.scope !29
  br label %32

18:                                               ; preds = %1
  store %"class.base::ObserverList"* %4, %"class.base::ObserverList"** %6, align 8, !alias.scope !29
  %19 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %15, %"class.base::internal::LinkNodeBase"* %19) #15
  store i64 0, i64* %7, align 8, !alias.scope !29
  %20 = getelementptr inbounds %"class.net::ResolveContext", %"class.net::ResolveContext"* %0, i64 0, i32 4, i32 3
  %21 = load i32, i32* %20, align 8, !noalias !29
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.base::internal::CheckedObserverAdapter"** %12 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !29
  %26 = bitcast %"class.base::ObserverList"* %4 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !29
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 4
  br label %30

30:                                               ; preds = %23, %18
  %31 = phi i64 [ %29, %23 ], [ -1, %18 ]
  store i64 %31, i64* %8, align 8, !alias.scope !29
  call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* nonnull %2) #15
  br label %32

32:                                               ; preds = %16, %30
  %33 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %37 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %37) #15
  %39 = bitcast %"class.base::ObserverList"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #15, !alias.scope !32
  br label %40

40:                                               ; preds = %153, %32
  %41 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %42 = icmp eq %"class.base::ObserverList"* %41, null
  br i1 %42, label %58, label %43

43:                                               ; preds = %40
  %44 = load i64, i64* %7, align 8
  %45 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %41, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast %"class.base::internal::CheckedObserverAdapter"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::ObserverList"* %41 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 4
  %52 = load i64, i64* %8, align 8
  %53 = icmp ult i64 %51, %52
  %54 = select i1 %53, i64 %51, i64 %52
  %55 = icmp eq i64 %44, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %43
  %57 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %34, align 8
  br label %74

58:                                               ; preds = %43, %40
  %59 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %34, align 8
  %60 = icmp eq %"class.base::ObserverList"* %59, null
  br i1 %60, label %109, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %35, align 8
  %63 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %59, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.base::internal::CheckedObserverAdapter"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.base::ObserverList"* %59 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %65, %67
  %69 = ashr exact i64 %68, 4
  %70 = load i64, i64* %36, align 8
  %71 = icmp ult i64 %69, %70
  %72 = select i1 %71, i64 %69, i64 %70
  %73 = icmp eq i64 %62, %72
  br i1 %73, label %83, label %74

74:                                               ; preds = %61, %56
  %75 = phi %"class.base::ObserverList"* [ %57, %56 ], [ %59, %61 ]
  %76 = icmp eq %"class.base::ObserverList"* %41, %75
  %77 = load i64, i64* %7, align 8
  %78 = load i64, i64* %35, align 8
  %79 = icmp eq i64 %77, %78
  %80 = and i1 %76, %79
  br i1 %80, label %81, label %138

81:                                               ; preds = %74
  %82 = icmp eq %"class.base::ObserverList"* %41, null
  br i1 %82, label %109, label %83

83:                                               ; preds = %61, %81
  %84 = phi %"class.base::ObserverList"* [ %41, %81 ], [ %59, %61 ]
  %85 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %84, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %84, i64 0, i32 1, i32 0, i32 0, i32 1
  %87 = bitcast %"class.base::internal::LinkNodeBase"** %86 to %"class.base::LinkNode"**
  %88 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %87, align 8
  %89 = bitcast %"class.base::LinkedList"* %85 to %"class.base::LinkNode"**
  %90 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %89, align 8
  %91 = icmp eq %"class.base::LinkNode"* %88, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %84, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %93, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %84, i64 0, i32 0, i32 0, i32 1
  %96 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %95, align 8
  %97 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %94, %"class.base::internal::CheckedObserverAdapter"* %96) #15
  %98 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %95, align 8
  %99 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %97, %98
  br i1 %99, label %105, label %100

100:                                              ; preds = %92, %100
  %101 = phi %"class.base::internal::CheckedObserverAdapter"* [ %102, %100 ], [ %98, %92 ]
  %102 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %101, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %102) #15
  %103 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %102, %97
  br i1 %103, label %104, label %100

104:                                              ; preds = %100
  store %"class.base::internal::CheckedObserverAdapter"* %97, %"class.base::internal::CheckedObserverAdapter"** %95, align 8
  br label %105

105:                                              ; preds = %104, %92, %83
  %106 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %34, align 8
  %107 = icmp eq %"class.base::ObserverList"* %106, null
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %34, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %37) #15
  br label %109

109:                                              ; preds = %58, %81, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #15
  %110 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %111 = icmp eq %"class.base::ObserverList"* %110, null
  br i1 %111, label %137, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"class.base::internal::LinkNodeBase"** %114 to %"class.base::LinkNode"**
  %116 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %115, align 8
  %117 = bitcast %"class.base::LinkedList"* %113 to %"class.base::LinkNode"**
  %118 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %117, align 8
  %119 = icmp eq %"class.base::LinkNode"* %116, %118
  br i1 %119, label %120, label %133

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %121, align 8
  %123 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %110, i64 0, i32 0, i32 0, i32 1
  %124 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %123, align 8
  %125 = call %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"* %122, %"class.base::internal::CheckedObserverAdapter"* %124) #15
  %126 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %123, align 8
  %127 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %125, %126
  br i1 %127, label %133, label %128

128:                                              ; preds = %120, %128
  %129 = phi %"class.base::internal::CheckedObserverAdapter"* [ %130, %128 ], [ %126, %120 ]
  %130 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %129, i64 -1
  call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %130) #15
  %131 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %130, %125
  br i1 %131, label %132, label %128

132:                                              ; preds = %128
  store %"class.base::internal::CheckedObserverAdapter"* %125, %"class.base::internal::CheckedObserverAdapter"** %123, align 8
  br label %133

133:                                              ; preds = %132, %120, %112
  %134 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %135 = icmp eq %"class.base::ObserverList"* %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %133
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %6, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %15) #15
  br label %137

137:                                              ; preds = %109, %133, %136
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #15
  ret void

138:                                              ; preds = %74
  %139 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %41, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %139, align 8
  %141 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %140, i64 %77, i32 0, i32 0, i32 0
  %142 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %141) #15
  %143 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %140, i64 %77, i32 0, i32 0, i32 1
  %144 = bitcast i64* %143 to %"class.net::ResolveContext::DohStatusObserver"**
  %145 = load %"class.net::ResolveContext::DohStatusObserver"*, %"class.net::ResolveContext::DohStatusObserver"** %144, align 8
  %146 = select i1 %142, %"class.net::ResolveContext::DohStatusObserver"* %145, %"class.net::ResolveContext::DohStatusObserver"* null
  %147 = bitcast %"class.net::ResolveContext::DohStatusObserver"* %146 to void (%"class.net::ResolveContext::DohStatusObserver"*)***
  %148 = load void (%"class.net::ResolveContext::DohStatusObserver"*)**, void (%"class.net::ResolveContext::DohStatusObserver"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.net::ResolveContext::DohStatusObserver"*)*, void (%"class.net::ResolveContext::DohStatusObserver"*)** %148, i64 2
  %150 = load void (%"class.net::ResolveContext::DohStatusObserver"*)*, void (%"class.net::ResolveContext::DohStatusObserver"*)** %149, align 8
  call void %150(%"class.net::ResolveContext::DohStatusObserver"* %146) #15
  %151 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %6, align 8
  %152 = icmp eq %"class.base::ObserverList"* %151, null
  br i1 %152, label %153, label %154

153:                                              ; preds = %138, %154
  br label %40

154:                                              ; preds = %138
  %155 = load i64, i64* %7, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %7, align 8
  call void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* nonnull %2) #15
  br label %153
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.base::SampleVector"* @_ZN3net12_GLOBAL__N_115GetRttHistogramEN4base9TimeDeltaE(i64) unnamed_addr #0 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %16, !prof !16

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  tail call void @_ZN4base12BucketRangesC2Em(%"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*), i64 351) #15
  %10 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull @_ZN3net12_GLOBAL__N_17kRttMaxE) #15
  %11 = add i64 %10, 2147483648
  %12 = icmp ult i64 %11, 4294967296
  br i1 %12, label %14, label %13, !prof !15

13:                                               ; preds = %9
  tail call void @llvm.trap() #15
  unreachable

14:                                               ; preds = %9
  %15 = trunc i64 %10 to i32
  tail call void @_ZN4base9Histogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32 1, i32 %15, %"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*)) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets) #15
  br label %16

16:                                               ; preds = %1, %6, %14
  %17 = tail call i8* @_Znwm(i64 56) #16
  %18 = bitcast i8* %17 to %"class.base::SampleVector"*
  tail call void @_ZN4base12SampleVectorC1EPKNS_12BucketRangesE(%"class.base::SampleVector"* nonnull %18, %"class.base::BucketRanges"* bitcast (%"class.base::NoDestructor"* @_ZZN3net12_GLOBAL__N_113GetRttBucketsEvE7buckets to %"class.base::BucketRanges"*)) #15
  %19 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %2) #15
  %20 = add i64 %19, 2147483648
  %21 = icmp ult i64 %20, 4294967296
  br i1 %21, label %23, label %22, !prof !15

22:                                               ; preds = %16
  call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %16
  %24 = bitcast i8* %17 to %"class.base::SampleVectorBase"*
  %25 = trunc i64 %19 to i32
  %26 = bitcast i8* %17 to void (%"class.base::SampleVectorBase"*, i32, i32)***
  %27 = load void (%"class.base::SampleVectorBase"*, i32, i32)**, void (%"class.base::SampleVectorBase"*, i32, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.base::SampleVectorBase"*, i32, i32)*, void (%"class.base::SampleVectorBase"*, i32, i32)** %27, i64 2
  %29 = load void (%"class.base::SampleVectorBase"*, i32, i32)*, void (%"class.base::SampleVectorBase"*, i32, i32)** %28, align 8
  call void %29(%"class.base::SampleVectorBase"* nonnull %24, i32 %25, i32 2) #15
  ret %"class.base::SampleVector"* %18
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i32 @_ZNK4base16SampleVectorBase15GetCountAtIndexEm(%"class.base::SampleVectorBase"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14ResolveContext26GetProviderUseExtraLoggingEmbPKNS_10DnsSessionE(%"class.net::ResolveContext"* nocapture readnone, i64, i1 zeroext, %"class.net::DnsSession"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.net::DnsOverHttpsServerConfig", align 8
  %6 = alloca %"class.std::__1::vector.131", align 8
  %7 = alloca %"struct.net::DnsOverHttpsServerConfig", align 8
  %8 = alloca %"class.net::IPAddress", align 1
  %9 = alloca %"class.std::__1::vector.131", align 8
  %10 = alloca %"class.net::IPAddress", align 1
  br i1 %2, label %11, label %191

11:                                               ; preds = %4
  %12 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %5, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %3, i64 0, i32 1, i32 13, i32 0, i32 0
  %17 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %16, align 8
  %19 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %18, i64 %1
  %20 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %11
  %25 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %25, i64 24, i1 false) #15
  br label %32

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %5, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %18, i64 %1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %27, i8* %29, i64 %31) #15
  br label %32

32:                                               ; preds = %24, %26
  %33 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %18, i64 %1, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  store i8 %34, i8* %15, align 8
  %35 = bitcast %"class.std::__1::vector.131"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #15
  %36 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %32
  %41 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 8 %12, i64 24, i1 false) #15
  br label %47

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %7, i64 0, i32 0
  %44 = load i8*, i8** %13, align 8
  %45 = load i64, i64* %14, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %43, i8* %44, i64 %45) #15
  %46 = load i8, i8* %15, align 8, !range !2
  br label %47

47:                                               ; preds = %40, %42
  %48 = phi i8 [ %34, %40 ], [ %46, %42 ]
  %49 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %7, i64 0, i32 1
  store i8 %48, i8* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %6, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #15, !alias.scope !35
  %52 = call dereferenceable(24) %"class.std::__1::vector.131"* @_ZN3net16DohProviderEntry7GetListEv() #15, !noalias !35
  %53 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %52, i64 0, i32 0, i32 0
  %54 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %53, align 8, !noalias !35
  %55 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %52, i64 0, i32 0, i32 1
  %56 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %55, align 8, !noalias !35
  %57 = icmp eq %"struct.net::DohProviderEntry"** %54, %56
  br i1 %57, label %175, label %58

58:                                               ; preds = %47
  %59 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %7 to i8*
  %64 = bitcast %"struct.net::DohProviderEntry"*** %50 to i64*
  %65 = bitcast %"class.std::__1::vector.131"* %6 to i64*
  %66 = bitcast %"struct.net::DohProviderEntry"*** %51 to i64*
  br label %67

67:                                               ; preds = %169, %58
  %68 = phi %"struct.net::DohProviderEntry"** [ %54, %58 ], [ %170, %169 ]
  %69 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %68, align 8, !noalias !35
  %70 = ptrtoint %"struct.net::DohProviderEntry"* %69 to i64
  %71 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %69, i64 0, i32 4
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1, !noalias !35
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %69, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8, !noalias !35
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i64 %77, i64 %78
  %80 = load i8, i8* %60, align 1, !noalias !35
  %81 = icmp slt i8 %80, 0
  %82 = load i64, i64* %61, align 8, !noalias !35
  %83 = zext i8 %80 to i64
  %84 = select i1 %81, i64 %82, i64 %83
  %85 = icmp eq i64 %79, %84
  br i1 %85, label %86, label %169

86:                                               ; preds = %67
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8, !noalias !35
  %89 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  %90 = select i1 %75, i8* %88, i8* %89
  %91 = load i8*, i8** %62, align 8, !noalias !35
  %92 = select i1 %81, i8* %91, i8* %63
  %93 = icmp eq i64 %79, 0
  br i1 %75, label %100, label %94

94:                                               ; preds = %86
  br i1 %93, label %116, label %95

95:                                               ; preds = %94
  %96 = ptrtoint i8* %88 to i64
  %97 = trunc i64 %96 to i8
  %98 = load i8, i8* %92, align 1
  %99 = icmp eq i8 %98, %97
  br i1 %99, label %101, label %169

100:                                              ; preds = %86
  br i1 %93, label %116, label %113

101:                                              ; preds = %95, %108
  %102 = phi i64 [ %105, %108 ], [ %78, %95 ]
  %103 = phi i8* [ %106, %108 ], [ %89, %95 ]
  %104 = phi i8* [ %109, %108 ], [ %92, %95 ]
  %105 = add i64 %102, -1
  %106 = getelementptr inbounds i8, i8* %103, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i8, i8* %104, i64 1
  %110 = load i8, i8* %106, align 1
  %111 = load i8, i8* %109, align 1
  %112 = icmp eq i8 %110, %111
  br i1 %112, label %101, label %169

113:                                              ; preds = %100
  %114 = call i32 @bcmp(i8* %90, i8* %92, i64 %79) #15
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %169

116:                                              ; preds = %101, %113, %100, %94
  %117 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %50, align 8, !alias.scope !35
  %118 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %51, align 8, !alias.scope !35
  %119 = icmp eq %"struct.net::DohProviderEntry"** %117, %118
  %120 = ptrtoint %"struct.net::DohProviderEntry"** %118 to i64
  br i1 %119, label %125, label %121

121:                                              ; preds = %116
  %122 = bitcast %"struct.net::DohProviderEntry"** %117 to i64*
  store i64 %70, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %117, i64 1
  %124 = ptrtoint %"struct.net::DohProviderEntry"** %123 to i64
  store i64 %124, i64* %64, align 8, !alias.scope !35
  br label %169

125:                                              ; preds = %116
  %126 = ptrtoint %"struct.net::DohProviderEntry"** %117 to i64
  %127 = load i64, i64* %65, align 8, !alias.scope !35
  %128 = sub i64 %126, %127
  %129 = ashr exact i64 %128, 3
  %130 = add nsw i64 %129, 1
  %131 = icmp ugt i64 %130, 2305843009213693951
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = bitcast %"class.std::__1::vector.131"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %133) #17
  unreachable

134:                                              ; preds = %125
  %135 = sub i64 %120, %127
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 1152921504606846975
  br i1 %137, label %138, label %146

138:                                              ; preds = %134
  %139 = ashr exact i64 %135, 2
  %140 = icmp ult i64 %139, %130
  %141 = select i1 %140, i64 %130, i64 %139
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %151, label %143

143:                                              ; preds = %138
  %144 = icmp ugt i64 %141, 2305843009213693951
  br i1 %144, label %145, label %146

145:                                              ; preds = %143
  call void @abort() #17
  unreachable

146:                                              ; preds = %143, %134
  %147 = phi i64 [ %141, %143 ], [ 2305843009213693951, %134 ]
  %148 = shl i64 %147, 3
  %149 = call i8* @_Znwm(i64 %148) #16
  %150 = bitcast i8* %149 to %"struct.net::DohProviderEntry"**
  br label %151

151:                                              ; preds = %146, %138
  %152 = phi i64 [ %147, %146 ], [ 0, %138 ]
  %153 = phi i8* [ %149, %146 ], [ null, %138 ]
  %154 = phi %"struct.net::DohProviderEntry"** [ %150, %146 ], [ null, %138 ]
  %155 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %154, i64 %129
  %156 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %154, i64 %152
  %157 = ptrtoint %"struct.net::DohProviderEntry"** %156 to i64
  %158 = bitcast %"struct.net::DohProviderEntry"** %155 to i64*
  store i64 %70, i64* %158, align 8, !noalias !35
  %159 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %155, i64 1
  %160 = ptrtoint %"struct.net::DohProviderEntry"** %159 to i64
  %161 = ptrtoint %"struct.net::DohProviderEntry"** %154 to i64
  %162 = icmp sgt i64 %128, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %151
  %164 = inttoptr i64 %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %164, i64 %128, i1 false) #15
  br label %165

165:                                              ; preds = %163, %151
  store i64 %161, i64* %65, align 8, !alias.scope !35
  store i64 %160, i64* %64, align 8, !alias.scope !35
  store i64 %157, i64* %66, align 8, !alias.scope !35
  %166 = icmp eq i64 %127, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %127 to i8*
  call void @_ZdlPv(i8* %168) #16
  br label %169

169:                                              ; preds = %108, %95, %167, %165, %121, %113, %67
  %170 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %68, i64 1
  %171 = icmp eq %"struct.net::DohProviderEntry"** %170, %56
  br i1 %171, label %172, label %67

172:                                              ; preds = %169
  %173 = load i64, i64* %65, align 8
  %174 = load i64, i64* %64, align 8
  br label %175

175:                                              ; preds = %47, %172
  %176 = phi i64 [ %174, %172 ], [ 0, %47 ]
  %177 = phi i64 [ %173, %172 ], [ 0, %47 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #15
  %178 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %178, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #16
  br label %185

185:                                              ; preds = %175, %182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #15
  %186 = load i8, i8* %37, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %185
  %189 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %189) #16
  br label %190

190:                                              ; preds = %185, %188
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #15
  br label %294

191:                                              ; preds = %4
  %192 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %8, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %192) #15
  %193 = getelementptr inbounds %"class.net::DnsSession", %"class.net::DnsSession"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %192, i8 -86, i64 17, i1 false)
  %194 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %193, align 8
  %195 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %194, i64 %1, i32 0
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* nonnull %8, %"class.net::IPAddress"* dereferenceable(17) %195) #15
  %196 = bitcast %"class.std::__1::vector.131"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #15
  call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* nonnull %10, %"class.net::IPAddress"* nonnull dereferenceable(17) %8) #15
  %197 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %9, i64 0, i32 0, i32 1
  %198 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 0, i64 24, i1 false) #15, !alias.scope !38
  %199 = call dereferenceable(24) %"class.std::__1::vector.131"* @_ZN3net16DohProviderEntry7GetListEv() #15, !noalias !38
  %200 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %199, i64 0, i32 0, i32 0
  %201 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %200, align 8, !noalias !38
  %202 = getelementptr inbounds %"class.std::__1::vector.131", %"class.std::__1::vector.131"* %199, i64 0, i32 0, i32 1
  %203 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %202, align 8, !noalias !38
  %204 = icmp eq %"struct.net::DohProviderEntry"** %201, %203
  br i1 %204, label %291, label %205

205:                                              ; preds = %191
  %206 = bitcast %"struct.net::DohProviderEntry"*** %197 to i64*
  %207 = bitcast %"class.std::__1::vector.131"* %9 to i64*
  %208 = bitcast %"struct.net::DohProviderEntry"*** %198 to i64*
  br label %209

209:                                              ; preds = %285, %205
  %210 = phi %"struct.net::DohProviderEntry"** [ %201, %205 ], [ %286, %285 ]
  %211 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %210, align 8, !noalias !38
  %212 = ptrtoint %"struct.net::DohProviderEntry"* %211 to i64
  %213 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %211, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %214 = bitcast %"class.std::__1::__tree_end_node"* %213 to %"class.std::__1::__tree_node"**
  %215 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %214, align 8, !noalias !38
  %216 = icmp eq %"class.std::__1::__tree_node"* %215, null
  br i1 %216, label %285, label %217

217:                                              ; preds = %209, %228
  %218 = phi %"class.std::__1::__tree_node"* [ %230, %228 ], [ %215, %209 ]
  %219 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 1
  %220 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* nonnull %10, %"class.net::IPAddress"* dereferenceable(17) %219) #15, !noalias !38
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = bitcast %"class.std::__1::__tree_node"* %218 to %"class.std::__1::__tree_node"**
  br label %228

223:                                              ; preds = %217
  %224 = call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %219, %"class.net::IPAddress"* nonnull dereferenceable(17) %10) #15, !noalias !38
  br i1 %224, label %225, label %232

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %218, i64 0, i32 0, i32 1
  %227 = bitcast %"class.std::__1::__tree_node_base"** %226 to %"class.std::__1::__tree_node"**
  br label %228

228:                                              ; preds = %225, %221
  %229 = phi %"class.std::__1::__tree_node"** [ %222, %221 ], [ %227, %225 ]
  %230 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_node"* %230, null
  br i1 %231, label %285, label %217

232:                                              ; preds = %223
  %233 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %197, align 8, !alias.scope !38
  %234 = load %"struct.net::DohProviderEntry"**, %"struct.net::DohProviderEntry"*** %198, align 8, !alias.scope !38
  %235 = icmp eq %"struct.net::DohProviderEntry"** %233, %234
  %236 = ptrtoint %"struct.net::DohProviderEntry"** %234 to i64
  br i1 %235, label %241, label %237

237:                                              ; preds = %232
  %238 = bitcast %"struct.net::DohProviderEntry"** %233 to i64*
  store i64 %212, i64* %238, align 8
  %239 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %233, i64 1
  %240 = ptrtoint %"struct.net::DohProviderEntry"** %239 to i64
  store i64 %240, i64* %206, align 8, !alias.scope !38
  br label %285

241:                                              ; preds = %232
  %242 = ptrtoint %"struct.net::DohProviderEntry"** %233 to i64
  %243 = load i64, i64* %207, align 8, !alias.scope !38
  %244 = sub i64 %242, %243
  %245 = ashr exact i64 %244, 3
  %246 = add nsw i64 %245, 1
  %247 = icmp ugt i64 %246, 2305843009213693951
  br i1 %247, label %248, label %250

248:                                              ; preds = %241
  %249 = bitcast %"class.std::__1::vector.131"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %249) #17
  unreachable

250:                                              ; preds = %241
  %251 = sub i64 %236, %243
  %252 = ashr exact i64 %251, 3
  %253 = icmp ult i64 %252, 1152921504606846975
  br i1 %253, label %254, label %262

254:                                              ; preds = %250
  %255 = ashr exact i64 %251, 2
  %256 = icmp ult i64 %255, %246
  %257 = select i1 %256, i64 %246, i64 %255
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %267, label %259

259:                                              ; preds = %254
  %260 = icmp ugt i64 %257, 2305843009213693951
  br i1 %260, label %261, label %262

261:                                              ; preds = %259
  call void @abort() #17
  unreachable

262:                                              ; preds = %259, %250
  %263 = phi i64 [ %257, %259 ], [ 2305843009213693951, %250 ]
  %264 = shl i64 %263, 3
  %265 = call i8* @_Znwm(i64 %264) #16
  %266 = bitcast i8* %265 to %"struct.net::DohProviderEntry"**
  br label %267

267:                                              ; preds = %262, %254
  %268 = phi i64 [ %263, %262 ], [ 0, %254 ]
  %269 = phi i8* [ %265, %262 ], [ null, %254 ]
  %270 = phi %"struct.net::DohProviderEntry"** [ %266, %262 ], [ null, %254 ]
  %271 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %270, i64 %245
  %272 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %270, i64 %268
  %273 = ptrtoint %"struct.net::DohProviderEntry"** %272 to i64
  %274 = bitcast %"struct.net::DohProviderEntry"** %271 to i64*
  store i64 %212, i64* %274, align 8, !noalias !38
  %275 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %271, i64 1
  %276 = ptrtoint %"struct.net::DohProviderEntry"** %275 to i64
  %277 = ptrtoint %"struct.net::DohProviderEntry"** %270 to i64
  %278 = icmp sgt i64 %244, 0
  br i1 %278, label %279, label %281

279:                                              ; preds = %267
  %280 = inttoptr i64 %243 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %280, i64 %244, i1 false) #15
  br label %281

281:                                              ; preds = %279, %267
  store i64 %277, i64* %207, align 8, !alias.scope !38
  store i64 %276, i64* %206, align 8, !alias.scope !38
  store i64 %273, i64* %208, align 8, !alias.scope !38
  %282 = icmp eq i64 %243, 0
  br i1 %282, label %285, label %283

283:                                              ; preds = %281
  %284 = inttoptr i64 %243 to i8*
  call void @_ZdlPv(i8* %284) #16
  br label %285

285:                                              ; preds = %228, %283, %281, %237, %209
  %286 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %210, i64 1
  %287 = icmp eq %"struct.net::DohProviderEntry"** %286, %203
  br i1 %287, label %288, label %209

288:                                              ; preds = %285
  %289 = load i64, i64* %207, align 8
  %290 = load i64, i64* %206, align 8
  br label %291

291:                                              ; preds = %288, %191
  %292 = phi i64 [ %290, %288 ], [ 0, %191 ]
  %293 = phi i64 [ %289, %288 ], [ 0, %191 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 0, i64 24, i1 false) #15
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #15
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %192) #15
  br label %294

294:                                              ; preds = %291, %190
  %295 = phi i64 [ %177, %190 ], [ %293, %291 ]
  %296 = phi i64 [ %176, %190 ], [ %292, %291 ]
  %297 = inttoptr i64 %295 to %"struct.net::DohProviderEntry"**
  %298 = inttoptr i64 %296 to %"struct.net::DohProviderEntry"**
  %299 = icmp eq %"struct.net::DohProviderEntry"** %297, %298
  br i1 %299, label %309, label %302

300:                                              ; preds = %302
  %301 = icmp eq %"struct.net::DohProviderEntry"** %308, %298
  br i1 %301, label %309, label %302

302:                                              ; preds = %294, %300
  %303 = phi %"struct.net::DohProviderEntry"** [ %308, %300 ], [ %297, %294 ]
  %304 = load %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %303, align 8
  %305 = getelementptr inbounds %"struct.net::DohProviderEntry", %"struct.net::DohProviderEntry"* %304, i64 0, i32 10
  %306 = load i32, i32* %305, align 8
  %307 = icmp eq i32 %306, 1
  %308 = getelementptr inbounds %"struct.net::DohProviderEntry"*, %"struct.net::DohProviderEntry"** %303, i64 1
  br i1 %307, label %309, label %300

309:                                              ; preds = %300, %302, %294
  %310 = phi i1 [ false, %294 ], [ true, %302 ], [ false, %300 ]
  %311 = icmp eq i64 %295, 0
  br i1 %311, label %314, label %312

312:                                              ; preds = %309
  %313 = inttoptr i64 %295 to i8*
  call void @_ZdlPv(i8* %313) #16
  br label %314

314:                                              ; preds = %309, %312
  ret i1 %310
}

declare void @_ZN4base23UmaHistogramMediumTimesERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_9TimeDeltaE(%"class.std::__1::basic_string"* dereferenceable(24), i64) local_unnamed_addr #2

declare void @_ZN3net41GetDohProviderIdForHistogramFromDohConfigERKNS_24DnsOverHttpsServerConfigE(%"class.std::__1::basic_string"* sret, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN3net42GetDohProviderIdForHistogramFromNameserverERKNS_10IPEndPointE(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #2

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

declare i32 @_ZN3net21NetworkChangeNotifier17GetConnectionTypeEv() local_unnamed_addr #2

declare i64 @_ZN3net52GetTimeDeltaForConnectionTypeFromFieldTrialOrDefaultEPKcN4base9TimeDeltaENS_21NetworkChangeNotifier14ConnectionTypeE(i8*, i64, i32) local_unnamed_addr #2

declare void @_ZN3net17DnsServerIteratorC2EmmiiPKNS_14ResolveContextEPKNS_10DnsSessionE(%"class.net::DnsServerIterator"*, i64, i64, i32, i32, %"class.net::ResolveContext"*, %"class.net::DnsSession"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #7

declare void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN4base12SampleVectorC1EPKNS_12BucketRangesE(%"class.base::SampleVector"*, %"class.base::BucketRanges"*) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN4base12BucketRangesC2Em(%"class.base::BucketRanges"*, i64) unnamed_addr #2

declare void @_ZN4base9Histogram22InitializeBucketRangesEiiPNS_12BucketRangesE(i32, i32, %"class.base::BucketRanges"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.131"* @_ZN3net16DohProviderEntry7GetListEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9HostCacheD1Ev(%"class.net::HostCache"*) unnamed_addr #3

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::internal::CheckedObserverAdapter"* @_ZNSt3__19remove_ifINS_11__wrap_iterIPN4base8internal22CheckedObserverAdapterEEEZNS2_12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ES4_E7CompactEvEUlTyRKT_E_EESC_SC_SC_T0_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %0, %1
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %8

8:                                                ; preds = %26, %6
  %9 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %6 ], [ %27, %26 ]
  %10 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %14) #15
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0)) #15
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  br label %18

18:                                               ; preds = %16, %13, %8
  %19 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %19) #15
  %21 = bitcast i64* %10 to %"class.base::CheckedObserver"**
  %22 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %21, align 8
  %23 = icmp eq %"class.base::CheckedObserver"* %22, null
  %24 = xor i1 %20, true
  %25 = or i1 %23, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %9, i64 1
  %28 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %27, %1
  br i1 %28, label %29, label %8

29:                                               ; preds = %26
  %30 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %1 to i64
  br label %69

31:                                               ; preds = %18, %2
  %32 = phi %"class.base::internal::CheckedObserverAdapter"* [ %0, %2 ], [ %9, %18 ]
  %33 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %32 to i64
  %34 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %32, %1
  br i1 %34, label %69, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %32, i64 1
  %37 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %36, %1
  br i1 %37, label %69, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %40

40:                                               ; preds = %38, %65
  %41 = phi %"class.base::internal::CheckedObserverAdapter"* [ %36, %38 ], [ %67, %65 ]
  %42 = phi %"class.base::internal::CheckedObserverAdapter"* [ %32, %38 ], [ %41, %65 ]
  %43 = phi i64 [ %33, %38 ], [ %66, %65 ]
  %44 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %42, i64 1, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %48) #15
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0)) #15
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  br label %52

52:                                               ; preds = %40, %47, %50
  %53 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 0, i32 0, i32 0, i32 0
  %54 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %53) #15
  %55 = bitcast i64* %44 to %"class.base::CheckedObserver"**
  %56 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %55, align 8
  %57 = icmp eq %"class.base::CheckedObserver"* %56, null
  %58 = xor i1 %54, true
  %59 = or i1 %57, %58
  br i1 %59, label %65, label %60

60:                                               ; preds = %52
  %61 = inttoptr i64 %43 to %"class.base::internal::CheckedObserverAdapter"*
  %62 = call dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"* %61, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %41) #15
  %63 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %61, i64 1
  %64 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %63 to i64
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %43, %52 ], [ %64, %60 ]
  %67 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %41, i64 1
  %68 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %67, %1
  br i1 %68, label %69, label %40

69:                                               ; preds = %65, %35, %31, %29
  %70 = phi i64 [ %33, %31 ], [ %30, %29 ], [ %33, %35 ], [ %66, %65 ]
  %71 = inttoptr i64 %70 to %"class.base::internal::CheckedObserverAdapter"*
  ret %"class.base::internal::CheckedObserverAdapter"* %71
}

; Function Attrs: nounwind
declare void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"*) unnamed_addr #3

declare dereferenceable(16) %"class.base::internal::CheckedObserverAdapter"* @_ZN4base8internal22CheckedObserverAdapteraSEOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #2

declare double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.173"*) local_unnamed_addr #2

declare void @_ZN4base8internal22CheckedObserverAdapterC1EPKNS_15CheckedObserverE(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::CheckedObserver"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base8internal22CheckedObserverAdapterENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector.28"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::internal::CheckedObserverAdapter"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::internal::CheckedObserverAdapter"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"class.base::internal::CheckedObserverAdapter"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::internal::CheckedObserverAdapter"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %36, i64 %35
  %39 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %38 to i64
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %37, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %1) #15
  %40 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %37, i64 1
  %41 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %42, align 8
  %44 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  %45 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::internal::CheckedObserverAdapter"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::internal::CheckedObserverAdapter"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %50, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"* %51, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16) %52) #15
  %53 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::internal::CheckedObserverAdapter"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::internal::CheckedObserverAdapter"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::internal::CheckedObserverAdapter"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::internal::CheckedObserverAdapter"*
  %63 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::internal::CheckedObserverAdapter"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %65, i64 -1
  tail call void @_ZN4base8internal22CheckedObserverAdapterD1Ev(%"class.base::internal::CheckedObserverAdapter"* %66) #15
  %67 = icmp eq %"class.base::internal::CheckedObserverAdapter"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #16
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN4base8internal22CheckedObserverAdapterC1EOS1_(%"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net14ResolveContext11ServerStatsENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJNS_10unique_ptrIN4base12SampleVectorENS_14default_deleteISA_EEEEEEEvDpOT_(%"class.std::__1::vector.37"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::ResolveContext::ServerStats"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ResolveContext::ServerStats"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"struct.net::ResolveContext::ServerStats"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.net::ResolveContext::ServerStats"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %36, i64 %35
  %39 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %40, align 8
  %43 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %37, i64 0, i32 0
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %36, i64 %9, i32 1
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %36, i64 %9, i32 2, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %36, i64 %9, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  %48 = bitcast i64* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #15
  store i64 %42, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %37, i64 1
  %50 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 0
  %52 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %51, align 8
  %53 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %52 to i64
  %54 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %3, align 8
  %55 = icmp eq %"struct.net::ResolveContext::ServerStats"* %54, %52
  br i1 %55, label %106, label %56

56:                                               ; preds = %34
  %57 = getelementptr %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %54, i64 -1, i32 0
  %58 = ptrtoint i32* %57 to i64
  %59 = sub i64 %58, %53
  %60 = and i64 %59, 32
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %73

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %37, i64 -1
  %64 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %54, i64 -1
  %65 = bitcast %"struct.net::ResolveContext::ServerStats"* %63 to i8*
  %66 = bitcast %"struct.net::ResolveContext::ServerStats"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #15
  %67 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %37, i64 -1, i32 4
  %68 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %54, i64 -1, i32 4
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %69, align 8
  %72 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 %71, i64* %72, align 8
  br label %73

73:                                               ; preds = %62, %56
  %74 = phi %"struct.net::ResolveContext::ServerStats"* [ undef, %56 ], [ %63, %62 ]
  %75 = phi %"struct.net::ResolveContext::ServerStats"* [ %37, %56 ], [ %63, %62 ]
  %76 = phi %"struct.net::ResolveContext::ServerStats"* [ %54, %56 ], [ %64, %62 ]
  %77 = icmp ult i64 %59, 32
  br i1 %77, label %102, label %78

78:                                               ; preds = %73, %78
  %79 = phi %"struct.net::ResolveContext::ServerStats"* [ %91, %78 ], [ %75, %73 ]
  %80 = phi %"struct.net::ResolveContext::ServerStats"* [ %92, %78 ], [ %76, %73 ]
  %81 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %79, i64 -1
  %82 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %80, i64 -1
  %83 = bitcast %"struct.net::ResolveContext::ServerStats"* %81 to i8*
  %84 = bitcast %"struct.net::ResolveContext::ServerStats"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #15
  %85 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %79, i64 -1, i32 4
  %86 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %80, i64 -1, i32 4
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %79, i64 -2
  %92 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %80, i64 -2
  %93 = bitcast %"struct.net::ResolveContext::ServerStats"* %91 to i8*
  %94 = bitcast %"struct.net::ResolveContext::ServerStats"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #15
  %95 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %79, i64 -2, i32 4
  %96 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %80, i64 -2, i32 4
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 %99, i64* %100, align 8
  %101 = icmp eq %"struct.net::ResolveContext::ServerStats"* %92, %52
  br i1 %101, label %102, label %78

102:                                              ; preds = %78, %73
  %103 = phi %"struct.net::ResolveContext::ServerStats"* [ %74, %73 ], [ %91, %78 ]
  %104 = load i64, i64* %6, align 8
  %105 = load %"struct.net::ResolveContext::ServerStats"*, %"struct.net::ResolveContext::ServerStats"** %3, align 8
  br label %106

106:                                              ; preds = %34, %102
  %107 = phi %"struct.net::ResolveContext::ServerStats"* [ %105, %102 ], [ %52, %34 ]
  %108 = phi %"struct.net::ResolveContext::ServerStats"* [ %103, %102 ], [ %37, %34 ]
  %109 = phi i64 [ %104, %102 ], [ %53, %34 ]
  %110 = ptrtoint %"struct.net::ResolveContext::ServerStats"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"struct.net::ResolveContext::ServerStats"*
  %112 = icmp eq %"struct.net::ResolveContext::ServerStats"* %107, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %106, %124
  %114 = phi %"struct.net::ResolveContext::ServerStats"* [ %115, %124 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %114, i64 -1
  %116 = getelementptr inbounds %"struct.net::ResolveContext::ServerStats", %"struct.net::ResolveContext::ServerStats"* %114, i64 -1, i32 4, i32 0, i32 0, i32 0
  %117 = load %"class.base::SampleVector"*, %"class.base::SampleVector"** %116, align 8
  store %"class.base::SampleVector"* null, %"class.base::SampleVector"** %116, align 8
  %118 = icmp eq %"class.base::SampleVector"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = bitcast %"class.base::SampleVector"* %117 to void (%"class.base::SampleVector"*)***
  %121 = load void (%"class.base::SampleVector"*)**, void (%"class.base::SampleVector"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %121, i64 1
  %123 = load void (%"class.base::SampleVector"*)*, void (%"class.base::SampleVector"*)** %122, align 8
  tail call void %123(%"class.base::SampleVector"* nonnull %117) #15
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"struct.net::ResolveContext::ServerStats"* %115, %111
  br i1 %125, label %126, label %113

126:                                              ; preds = %124, %106
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %129) #16
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE4Iter16EnsureValidIndexEv(%"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.base::internal::CheckedObserverAdapter"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ObserverList"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 4
  %13 = load i64, i64* %3, align 8
  %14 = icmp ult i64 %12, %13
  %15 = select i1 %14, i64 %12, i64 %13
  %16 = getelementptr inbounds %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter", %"class.base::ObserverList<net::ResolveContext::DohStatusObserver, true, false, base::internal::CheckedObserverAdapter>::Iter"* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %21

21:                                               ; preds = %47, %19
  %22 = phi %"class.base::ObserverList"* [ %5, %19 ], [ %48, %47 ]
  %23 = phi i64 [ %17, %19 ], [ %45, %47 ]
  %24 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"** %24, align 8
  %26 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23
  %27 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %25, i64 %23, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %32 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %31) #15
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0)) #15
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %35

35:                                               ; preds = %21, %30, %33
  %36 = getelementptr inbounds %"class.base::internal::CheckedObserverAdapter", %"class.base::internal::CheckedObserverAdapter"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %36) #15
  %38 = bitcast i64* %27 to %"class.base::CheckedObserver"**
  %39 = load %"class.base::CheckedObserver"*, %"class.base::CheckedObserver"** %38, align 8
  %40 = icmp eq %"class.base::CheckedObserver"* %39, null
  %41 = xor i1 %37, true
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %49

43:                                               ; preds = %35
  %44 = load i64, i64* %16, align 8
  %45 = add i64 %44, 1
  store i64 %45, i64* %16, align 8
  %46 = icmp ult i64 %45, %15
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %4, align 8
  br label %21

49:                                               ; preds = %35, %43, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3net14ResolveContext18GetQueryTypeForUmaEmbPKNS_10DnsSessionE: argument 0"}
!5 = distinct !{!5, !"_ZN3net14ResolveContext18GetQueryTypeForUmaEmbPKNS_10DnsSessionE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3net14ResolveContext22GetDohProviderIdForUmaEmbPKNS_10DnsSessionE: argument 0"}
!8 = distinct !{!8, !"_ZN3net14ResolveContext22GetDohProviderIdForUmaEmbPKNS_10DnsSessionE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE3endEv"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!"branch_weights", i32 1, i32 1048575}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3net14ResolveContext18GetQueryTypeForUmaEmbPKNS_10DnsSessionE: argument 0"}
!19 = distinct !{!19, !"_ZN3net14ResolveContext18GetQueryTypeForUmaEmbPKNS_10DnsSessionE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN3net14ResolveContext22GetDohProviderIdForUmaEmbPKNS_10DnsSessionE: argument 0"}
!22 = distinct !{!22, !"_ZN3net14ResolveContext22GetDohProviderIdForUmaEmbPKNS_10DnsSessionE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK3net10DnsSession10GetWeakPtrEv: argument 0"}
!25 = distinct !{!25, !"_ZNK3net10DnsSession10GetWeakPtrEv"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZNK4base14WeakPtrFactoryIN3net10DnsSessionEE10GetWeakPtrEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4base14WeakPtrFactoryIN3net10DnsSessionEE10GetWeakPtrEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE3endEv: argument 0"}
!34 = distinct !{!34, !"_ZNK4base12ObserverListIN3net14ResolveContext17DohStatusObserverELb1ELb0ENS_8internal22CheckedObserverAdapterEE3endEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3net12_GLOBAL__N_136FindDohProvidersMatchingServerConfigENS_24DnsOverHttpsServerConfigE: argument 0"}
!37 = distinct !{!37, !"_ZN3net12_GLOBAL__N_136FindDohProvidersMatchingServerConfigENS_24DnsOverHttpsServerConfigE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3net12_GLOBAL__N_137FindDohProvidersAssociatedWithAddressENS_9IPAddressE: argument 0"}
!40 = distinct !{!40, !"_ZN3net12_GLOBAL__N_137FindDohProvidersAssociatedWithAddressENS_9IPAddressE"}
