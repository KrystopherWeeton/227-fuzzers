; ModuleID = '../../third_party/boringssl/src/crypto/x509/x_x509.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x_x509.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.ASN1_VALUE_st = type opaque
%struct.CRYPTO_EX_DATA_CLASS = type { %struct.CRYPTO_STATIC_MUTEX, %struct.stack_st_CRYPTO_EX_DATA_FUNCS*, i8 }
%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.stack_st_CRYPTO_EX_DATA_FUNCS = type opaque
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }

@X509_CINF_seq_tt = internal constant [10 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 145, i64 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_INTEGER_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_INTEGER_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ALGOR_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_NAME_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_VAL_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 40, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_NAME_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_PUBKEY_it }, %struct.ASN1_TEMPLATE_st { i64 137, i64 1, i64 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_BIT_STRING_it }, %struct.ASN1_TEMPLATE_st { i64 137, i64 2, i64 64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_BIT_STRING_it }, %struct.ASN1_TEMPLATE_st { i64 149, i64 3, i64 72, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_EXTENSION_it }], align 16
@X509_CINF_aux = internal constant %struct.ASN1_AUX_st { i8* null, i32 2, i32 0, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* null, i32 80 }, align 8
@.str = private unnamed_addr constant [10 x i8] c"X509_CINF\00", align 1
@X509_CINF_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([10 x %struct.ASN1_TEMPLATE_st], [10 x %struct.ASN1_TEMPLATE_st]* @X509_CINF_seq_tt, i32 0, i32 0), i64 10, i8* bitcast (%struct.ASN1_AUX_st* @X509_CINF_aux to i8*), i64 104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0) }, align 8
@X509_seq_tt = internal constant [3 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_CINF_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_ALGOR_it }, %struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_BIT_STRING_it }], align 16
@X509_aux = internal constant %struct.ASN1_AUX_st { i8* null, i32 1, i32 24, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* @x509_cb, i32 0 }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"X509\00", align 1
@X509_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([3 x %struct.ASN1_TEMPLATE_st], [3 x %struct.ASN1_TEMPLATE_st]* @X509_seq_tt, i32 0, i32 0), i64 3, i8* bitcast (%struct.ASN1_AUX_st* @X509_aux to i8*), i64 232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0) }, align 8
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/boringssl/src/crypto/x509/x_x509.c\00", align 1
@g_ex_data_class = internal global %struct.CRYPTO_EX_DATA_CLASS zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@ASN1_INTEGER_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"serialNumber\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"signature\00", align 1
@X509_ALGOR_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"issuer\00", align 1
@X509_NAME_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"validity\00", align 1
@X509_VAL_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.8 = private unnamed_addr constant [8 x i8] c"subject\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@X509_PUBKEY_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.10 = private unnamed_addr constant [10 x i8] c"issuerUID\00", align 1
@ASN1_BIT_STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.11 = private unnamed_addr constant [11 x i8] c"subjectUID\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"extensions\00", align 1
@X509_EXTENSION_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.13 = private unnamed_addr constant [10 x i8] c"cert_info\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"sig_alg\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_cinf_st* @d2i_X509_CINF(%struct.x509_cinf_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.x509_cinf_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_CINF_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.x509_cinf_st*
  ret %struct.x509_cinf_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_CINF(%struct.x509_cinf_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.x509_cinf_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_CINF_it) #4
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_cinf_st* @X509_CINF_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_CINF_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.x509_cinf_st*
  ret %struct.x509_cinf_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_CINF_free(%struct.x509_cinf_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.x509_cinf_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_CINF_it) #4
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @d2i_X509(%struct.x509_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.x509_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.x509_st*
  ret %struct.x509_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509(%struct.x509_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.x509_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @X509_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.x509_st*
  ret %struct.x509_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509_free(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.x509_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @X509_dup(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.x509_st* %0 to i8*
  %3 = tail call i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* nonnull @X509_it, i8* %2) #4
  %4 = bitcast i8* %3 to %struct.x509_st*
  ret %struct.x509_st* %4
}

declare i8* @ASN1_item_dup(%struct.ASN1_ITEM_st*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @X509_parse_from_buffer(%struct.crypto_buffer_st*) local_unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.x509_st*, align 8
  %4 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 180) #4
  br label %39

7:                                                ; preds = %1
  %8 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %9 = icmp eq %struct.ASN1_VALUE_st* %8, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %7
  %11 = bitcast %struct.ASN1_VALUE_st* %8 to %struct.x509_cinf_st**
  %12 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %11, align 8
  %13 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %12, i64 0, i32 10, i32 3
  %14 = load i8, i8* %13, align 4
  %15 = or i8 %14, 2
  store i8 %15, i8* %13, align 4
  %16 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %0) #4
  store i8* %17, i8** %2, align 8
  %18 = bitcast %struct.x509_st** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  %19 = bitcast %struct.x509_st** %3 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %8, %struct.ASN1_VALUE_st** %19, align 8
  %20 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #4
  %21 = call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** nonnull %19, i8** nonnull %2, i64 %20, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %22 = bitcast %struct.ASN1_VALUE_st* %21 to %struct.x509_st*
  %23 = icmp eq %struct.ASN1_VALUE_st* %21, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %10
  %25 = bitcast i8** %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %0) #4
  %28 = ptrtoint i8* %27 to i64
  %29 = sub i64 %26, %28
  %30 = call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %0) #4
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %24, %10
  %33 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %19, align 8
  call void @ASN1_item_free(%struct.ASN1_VALUE_st* %33, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  br label %37

34:                                               ; preds = %24
  %35 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* %0) #4
  %36 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %22, i64 0, i32 19
  store %struct.crypto_buffer_st* %0, %struct.crypto_buffer_st** %36, align 8
  br label %37

37:                                               ; preds = %34, %32
  %38 = phi %struct.x509_st* [ null, %32 ], [ %22, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br label %39

39:                                               ; preds = %37, %7, %6
  %40 = phi %struct.x509_st* [ null, %6 ], [ %38, %37 ], [ null, %7 ]
  ret %struct.x509_st* %40
}

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_up_ref(%struct.x509_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 3
  tail call void @CRYPTO_refcount_inc(i32* %2) #4
  ret i32 1
}

declare void @CRYPTO_refcount_inc(i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_get_ex_new_index(i64, i8*, i32* nocapture readnone, i32 (%struct.crypto_ex_data_st*, %struct.crypto_ex_data_st*, i8**, i32, i64, i8*)* nocapture readnone, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #4
  store i32 -1431655766, i32* %6, align 4
  %8 = call i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS* nonnull @g_ex_data_class, i32* nonnull %6, i64 %0, i8* %1, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)* %4) #4
  %9 = icmp eq i32 %8, 0
  %10 = load i32, i32* %6, align 4
  %11 = select i1 %9, i32 -1, i32 %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #4
  ret i32 %11
}

declare i32 @CRYPTO_get_ex_new_index(%struct.CRYPTO_EX_DATA_CLASS*, i32*, i64, i8*, void (i8*, i8*, %struct.crypto_ex_data_st*, i32, i64, i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set_ex_data(%struct.x509_st*, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 4
  %5 = tail call i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st* %4, i32 %1, i8* %2) #4
  ret i32 %5
}

declare i32 @CRYPTO_set_ex_data(%struct.crypto_ex_data_st*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @X509_get_ex_data(%struct.x509_st*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 4
  %4 = tail call i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st* %3, i32 %1) #4
  ret i8* %4
}

declare i8* @CRYPTO_get_ex_data(%struct.crypto_ex_data_st*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @d2i_X509_AUX(%struct.x509_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = bitcast i8** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast i8** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = icmp ne %struct.x509_st** %0, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = load %struct.x509_st*, %struct.x509_st** %0, align 8
  %12 = icmp eq %struct.x509_st* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %3
  br label %14

14:                                               ; preds = %13, %10
  %15 = phi i32 [ 1, %13 ], [ 0, %10 ]
  %16 = bitcast %struct.x509_st** %0 to %struct.ASN1_VALUE_st**
  %17 = call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %16, i8** nonnull %4, i64 %2, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %18 = bitcast %struct.ASN1_VALUE_st* %17 to %struct.x509_st*
  %19 = icmp eq %struct.ASN1_VALUE_st* %17, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %14
  %21 = load i64, i64* %8, align 8
  %22 = load i64, i64* %6, align 8
  %23 = sub i64 %22, %21
  %24 = add i64 %23, %2
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %18, i64 0, i32 18
  %28 = call %struct.x509_cert_aux_st* @d2i_X509_CERT_AUX(%struct.x509_cert_aux_st** %27, i8** nonnull %4, i64 %24) #4
  %29 = icmp eq %struct.x509_cert_aux_st* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = load i64, i64* %8, align 8
  br label %32

32:                                               ; preds = %30, %20
  %33 = phi i64 [ %31, %30 ], [ %21, %20 ]
  store i64 %33, i64* %6, align 8
  br label %38

34:                                               ; preds = %26
  %35 = icmp eq i32 %15, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  call void @ASN1_item_free(%struct.ASN1_VALUE_st* nonnull %17, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  br i1 %9, label %37, label %38

37:                                               ; preds = %36
  store %struct.x509_st* null, %struct.x509_st** %0, align 8
  br label %38

38:                                               ; preds = %37, %36, %34, %14, %32
  %39 = phi %struct.x509_st* [ %18, %32 ], [ null, %14 ], [ null, %34 ], [ null, %36 ], [ null, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret %struct.x509_st* %39
}

declare %struct.x509_cert_aux_st* @d2i_X509_CERT_AUX(%struct.x509_cert_aux_st**, i8**, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_AUX(%struct.x509_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %5 = icmp eq i8** %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = load i8*, i8** %1, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %6, %2
  %10 = phi i8* [ null, %2 ], [ %7, %6 ]
  %11 = bitcast %struct.x509_st* %0 to %struct.ASN1_VALUE_st*
  %12 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %11, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %13 = icmp slt i32 %12, 1
  %14 = icmp eq %struct.x509_st* %0, null
  %15 = or i1 %14, %13
  br i1 %15, label %64, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %18 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %17, align 8
  %19 = tail call i32 @i2d_X509_CERT_AUX(%struct.x509_cert_aux_st* %18, i8** %1) #4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = icmp eq i8* %10, null
  br i1 %22, label %64, label %23

23:                                               ; preds = %21
  store i8* %10, i8** %1, align 8
  br label %64

24:                                               ; preds = %16
  %25 = add nuw nsw i32 %19, %12
  br label %64

26:                                               ; preds = %6
  %27 = bitcast %struct.x509_st* %0 to %struct.ASN1_VALUE_st*
  %28 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %27, i8** null, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %29 = icmp slt i32 %28, 1
  %30 = icmp eq %struct.x509_st* %0, null
  %31 = or i1 %30, %29
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %34 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %33, align 8
  %35 = tail call i32 @i2d_X509_CERT_AUX(%struct.x509_cert_aux_st* %34, i8** null) #4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %32
  %38 = add nuw nsw i32 %35, %28
  br label %39

39:                                               ; preds = %26, %37
  %40 = phi i32 [ %38, %37 ], [ %28, %26 ]
  %41 = icmp slt i32 %40, 1
  br i1 %41, label %64, label %42

42:                                               ; preds = %39
  %43 = sext i32 %40 to i64
  %44 = tail call i8* @OPENSSL_malloc(i64 %43) #4
  store i8* %44, i8** %3, align 8
  store i8* %44, i8** %1, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %64, label %46

46:                                               ; preds = %42
  %47 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %27, i8** nonnull %3, %struct.ASN1_ITEM_st* nonnull @X509_it) #4
  %48 = icmp slt i32 %47, 1
  %49 = or i1 %30, %48
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 18
  %52 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %51, align 8
  %53 = call i32 @i2d_X509_CERT_AUX(%struct.x509_cert_aux_st* %52, i8** nonnull %3) #4
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  store i8* %44, i8** %3, align 8
  br label %61

56:                                               ; preds = %50
  %57 = add nuw nsw i32 %53, %47
  br label %58

58:                                               ; preds = %46, %56
  %59 = phi i32 [ %57, %56 ], [ %47, %46 ]
  %60 = icmp slt i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %55, %58
  %62 = phi i32 [ %53, %55 ], [ %59, %58 ]
  %63 = load i8*, i8** %1, align 8
  call void @OPENSSL_free(i8* %63) #4
  store i8* null, i8** %1, align 8
  br label %64

64:                                               ; preds = %32, %24, %23, %21, %9, %58, %61, %42, %39
  %65 = phi i32 [ %40, %39 ], [ -1, %42 ], [ %62, %61 ], [ %59, %58 ], [ %25, %24 ], [ %12, %9 ], [ %19, %21 ], [ %19, %23 ], [ %35, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret i32 %65
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_re_X509_tbs(%struct.x509_st* nocapture readonly, i8**) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %4 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %3, align 8
  %5 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 10, i32 2
  store i32 1, i32* %5, align 8
  %6 = bitcast %struct.x509_st* %0 to %struct.ASN1_VALUE_st**
  %7 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %6, align 8
  %8 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %7, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_CINF_it) #4
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_X509_tbs(%struct.x509_st* nocapture readonly, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.x509_st* %0 to %struct.ASN1_VALUE_st**
  %4 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %3, align 8
  %5 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %4, i8** %1, %struct.ASN1_ITEM_st* nonnull @X509_CINF_it) #4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set1_signature_algo(%struct.x509_st* nocapture, %struct.X509_algor_st*) local_unnamed_addr #0 {
  %3 = tail call %struct.X509_algor_st* @X509_ALGOR_dup(%struct.X509_algor_st* %1) #4
  %4 = tail call %struct.X509_algor_st* @X509_ALGOR_dup(%struct.X509_algor_st* %1) #4
  %5 = icmp eq %struct.X509_algor_st* %3, null
  %6 = icmp eq %struct.X509_algor_st* %4, null
  %7 = or i1 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @X509_ALGOR_free(%struct.X509_algor_st* %3) #4
  tail call void @X509_ALGOR_free(%struct.X509_algor_st* %4) #4
  br label %18

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 1
  %11 = load %struct.X509_algor_st*, %struct.X509_algor_st** %10, align 8
  tail call void @X509_ALGOR_free(%struct.X509_algor_st* %11) #4
  store %struct.X509_algor_st* %3, %struct.X509_algor_st** %10, align 8
  %12 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %13 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %12, align 8
  %14 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %13, i64 0, i32 2
  %15 = load %struct.X509_algor_st*, %struct.X509_algor_st** %14, align 8
  tail call void @X509_ALGOR_free(%struct.X509_algor_st* %15) #4
  %16 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %12, align 8
  %17 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %16, i64 0, i32 2
  store %struct.X509_algor_st* %4, %struct.X509_algor_st** %17, align 8
  br label %18

18:                                               ; preds = %9, %8
  %19 = phi i32 [ 0, %8 ], [ 1, %9 ]
  ret i32 %19
}

declare %struct.X509_algor_st* @X509_ALGOR_dup(%struct.X509_algor_st*) local_unnamed_addr #1

declare void @X509_ALGOR_free(%struct.X509_algor_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_set1_signature_value(%struct.x509_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 2
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  %6 = trunc i64 %2 to i32
  %7 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* %5, i8* %1, i32 %6) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  %11 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %10, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, -16
  store i64 %13, i64* %11, align 8
  %14 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  %15 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %14, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %16, 8
  store i64 %17, i64* %15, align 8
  br label %18

18:                                               ; preds = %3, %9
  %19 = phi i32 [ 1, %9 ], [ 0, %3 ]
  ret i32 %19
}

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @X509_get0_signature(%struct.asn1_string_st**, %struct.X509_algor_st**, %struct.x509_st* nocapture readonly) local_unnamed_addr #3 {
  %4 = icmp eq %struct.asn1_string_st** %0, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %2, i64 0, i32 2
  %7 = bitcast %struct.asn1_string_st** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.asn1_string_st** %0 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %3, %5
  %11 = icmp eq %struct.X509_algor_st** %1, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %2, i64 0, i32 1
  %14 = bitcast %struct.X509_algor_st** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %struct.X509_algor_st** %1 to i64*
  store i64 %15, i64* %16, align 8
  br label %17

17:                                               ; preds = %10, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_get_signature_nid(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 1
  %3 = load %struct.X509_algor_st*, %struct.X509_algor_st** %2, align 8
  %4 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %3, i64 0, i32 0
  %5 = load %struct.asn1_object_st*, %struct.asn1_object_st** %4, align 8
  %6 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* %5) #4
  ret i32 %6
}

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @x509_cb(i32, %struct.ASN1_VALUE_st** nocapture readonly, %struct.ASN1_ITEM_st* nocapture readnone, i8* nocapture readnone) #0 {
  %5 = bitcast %struct.ASN1_VALUE_st** %1 to %struct.x509_st**
  %6 = load %struct.x509_st*, %struct.x509_st** %5, align 8
  switch i32 %0, label %64 [
    i32 1, label %7
    i32 4, label %17
    i32 5, label %20
    i32 3, label %44
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 7
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 5
  store i64 -1, i64* %9, align 8
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 11
  %11 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 18
  %12 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 14
  store %struct.stack_st_DIST_POINT* null, %struct.stack_st_DIST_POINT** %12, align 8
  %13 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 4
  %14 = bitcast %struct.asn1_string_st** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  %15 = bitcast %struct.x509_cert_aux_st** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  tail call void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st* %13) #4
  %16 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 20
  tail call void @CRYPTO_MUTEX_init(%union.crypto_mutex_st* %16) #4
  br label %64

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 19
  %19 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %18, align 8
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %19) #4
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %18, align 8
  br label %64

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 0
  %22 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %21, align 8
  %23 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %22, i64 0, i32 0
  %24 = load %struct.asn1_string_st*, %struct.asn1_string_st** %23, align 8
  %25 = icmp eq %struct.asn1_string_st* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %20
  %27 = tail call i64 @ASN1_INTEGER_get(%struct.asn1_string_st* nonnull %24) #4
  %28 = icmp ugt i64 %27, 2
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @ERR_put_error(i32 11, i32 0, i32 140, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 126) #4
  br label %64

30:                                               ; preds = %26
  %31 = icmp eq i64 %27, 0
  br i1 %31, label %32, label %64

32:                                               ; preds = %30
  %33 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %21, align 8
  br label %34

34:                                               ; preds = %32, %20
  %35 = phi %struct.x509_cinf_st* [ %33, %32 ], [ %22, %20 ]
  %36 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %35, i64 0, i32 7
  %37 = load %struct.asn1_string_st*, %struct.asn1_string_st** %36, align 8
  %38 = icmp eq %struct.asn1_string_st* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %35, i64 0, i32 8
  %41 = load %struct.asn1_string_st*, %struct.asn1_string_st** %40, align 8
  %42 = icmp eq %struct.asn1_string_st* %41, null
  br i1 %42, label %64, label %43

43:                                               ; preds = %39, %34
  tail call void @ERR_put_error(i32 11, i32 0, i32 139, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 134) #4
  br label %64

44:                                               ; preds = %4
  %45 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 20
  tail call void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st* %45) #4
  %46 = bitcast %struct.x509_st* %6 to i8*
  %47 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 4
  tail call void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS* nonnull @g_ex_data_class, i8* %46, %struct.crypto_ex_data_st* %47) #4
  %48 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 18
  %49 = load %struct.x509_cert_aux_st*, %struct.x509_cert_aux_st** %48, align 8
  tail call void @X509_CERT_AUX_free(%struct.x509_cert_aux_st* %49) #4
  %50 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 11
  %51 = load %struct.asn1_string_st*, %struct.asn1_string_st** %50, align 8
  tail call void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* %51) #4
  %52 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 12
  %53 = load %struct.AUTHORITY_KEYID_st*, %struct.AUTHORITY_KEYID_st** %52, align 8
  tail call void @AUTHORITY_KEYID_free(%struct.AUTHORITY_KEYID_st* %53) #4
  %54 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 14
  %55 = load %struct.stack_st_DIST_POINT*, %struct.stack_st_DIST_POINT** %54, align 8
  tail call void @CRL_DIST_POINTS_free(%struct.stack_st_DIST_POINT* %55) #4
  %56 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 13
  %57 = load %struct.X509_POLICY_CACHE_st*, %struct.X509_POLICY_CACHE_st** %56, align 8
  tail call void @policy_cache_free(%struct.X509_POLICY_CACHE_st* %57) #4
  %58 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 15
  %59 = load %struct.stack_st_GENERAL_NAME*, %struct.stack_st_GENERAL_NAME** %58, align 8
  tail call void @GENERAL_NAMES_free(%struct.stack_st_GENERAL_NAME* %59) #4
  %60 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 16
  %61 = load %struct.NAME_CONSTRAINTS_st*, %struct.NAME_CONSTRAINTS_st** %60, align 8
  tail call void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st* %61) #4
  %62 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %6, i64 0, i32 19
  %63 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %62, align 8
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %63) #4
  br label %64

64:                                               ; preds = %7, %17, %44, %4, %30, %39, %43, %29
  %65 = phi i32 [ 0, %29 ], [ 0, %43 ], [ 1, %39 ], [ 1, %30 ], [ 1, %4 ], [ 1, %44 ], [ 1, %17 ], [ 1, %7 ]
  ret i32 %65
}

declare void @CRYPTO_new_ex_data(%struct.crypto_ex_data_st*) local_unnamed_addr #1

declare void @CRYPTO_MUTEX_init(%union.crypto_mutex_st*) local_unnamed_addr #1

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare i64 @ASN1_INTEGER_get(%struct.asn1_string_st*) local_unnamed_addr #1

declare void @CRYPTO_MUTEX_cleanup(%union.crypto_mutex_st*) local_unnamed_addr #1

declare void @CRYPTO_free_ex_data(%struct.CRYPTO_EX_DATA_CLASS*, i8*, %struct.crypto_ex_data_st*) local_unnamed_addr #1

declare void @X509_CERT_AUX_free(%struct.x509_cert_aux_st*) local_unnamed_addr #1

declare void @ASN1_OCTET_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #1

declare void @AUTHORITY_KEYID_free(%struct.AUTHORITY_KEYID_st*) local_unnamed_addr #1

declare void @CRL_DIST_POINTS_free(%struct.stack_st_DIST_POINT*) local_unnamed_addr #1

declare void @policy_cache_free(%struct.X509_POLICY_CACHE_st*) local_unnamed_addr #1

declare void @GENERAL_NAMES_free(%struct.stack_st_GENERAL_NAME*) local_unnamed_addr #1

declare void @NAME_CONSTRAINTS_free(%struct.NAME_CONSTRAINTS_st*) local_unnamed_addr #1

declare i32 @i2d_X509_CERT_AUX(%struct.x509_cert_aux_st*, i8**) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
