; ModuleID = '../../third_party/blink/renderer/modules/compression/inflate_transformer.cc'
source_filename = "../../third_party/blink/renderer/modules/compression/inflate_transformer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.239" }
%"struct.std::__1::atomic.239" = type { %"struct.std::__1::__atomic_base.240" }
%"struct.std::__1::__atomic_base.240" = type { %"struct.std::__1::__atomic_base.241" }
%"struct.std::__1::__atomic_base.241" = type { %"struct.std::__1::__cxx_atomic_impl.242" }
%"struct.std::__1::__cxx_atomic_impl.242" = type { %"struct.std::__1::__cxx_atomic_base_impl.243" }
%"struct.std::__1::__cxx_atomic_base_impl.243" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.186" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.196" }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::InflateTransformer" = type <{ %"class.blink::TransformStreamTransformer", %"class.blink::Member", %struct.z_stream_s, %"class.WTF::Vector.181", i8, i8, [6 x i8] }>
%"class.blink::TransformStreamTransformer" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptState"* }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { i8*, i32, i32 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.177", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.179" }
%"class.blink::Persistent.179" = type { %"class.blink::PersistentBase.180" }
%"class.blink::PersistentBase.180" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.201", %class.scoped_refptr.204 }
%"class.blink::TraceWrapperV8Reference.201" = type { %"class.v8::TracedReference.202" }
%"class.v8::TracedReference.202" = type { %"class.v8::BasicTracedReference.203" }
%"class.v8::BasicTracedReference.203" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.204 = type { %"class.blink::DOMWrapperWorld"* }
%"class.v8::Value" = type { i8 }
%"class.blink::TransformStreamDefaultController" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.191", %"class.blink::Member.193", %"class.blink::Member.193" }
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::TransformStream"* }
%"class.blink::TransformStream" = type opaque
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::StreamAlgorithm"* }
%"class.blink::StreamAlgorithm" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.201" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.WTF::StringImpl"* }
%"class.blink::ArrayBufferOrArrayBufferView" = type { i32, %"class.blink::Member.205", %"class.blink::NotShared" }
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared" = type { %"class.blink::Member.207" }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.209" }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216", [8 x i8] }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::Member.217"*, i32, i32 }
%"class.blink::Member.217" = type { %"class.blink::MemberBase.218" }
%"class.blink::MemberBase.218" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.221", i8* }
%"class.WTF::StringAppend.221" = type { %"class.WTF::String", i8* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.WTF::StringTypeAdapter.245" = type { %"class.WTF::StringTypeAdapter.246" }
%"class.WTF::StringTypeAdapter.246" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.247" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.244" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcEcvS1_Ev = comdat any

$_ZN5blink18InflateTransformer14GetScriptStateEv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_ = comdat any

$_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS9_NS_16VectorBufferBaseIS7_S8_E11OffsetRangeESD_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPcE6lengthEv = comdat any

$_ZN5blink14DOMArrayBuffer6CreateEPKvm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIPS6_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS6_EEE14AllocateObjectISA_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink18InflateTransformerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InflateTransformer"*)* @_ZN5blink18InflateTransformerD2Ev to i8*), i8* bitcast (void (%"class.blink::InflateTransformer"*)* @_ZN5blink18InflateTransformerD0Ev to i8*), i8* bitcast (void (%"class.blink::ScriptPromise"*, %"class.blink::InflateTransformer"*, %"class.v8::Value"*, %"class.blink::TransformStreamDefaultController"*, %"class.blink::ExceptionState"*)* @_ZN5blink18InflateTransformer9TransformEN2v85LocalINS1_5ValueEEEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::ScriptPromise"*, %"class.blink::InflateTransformer"*, %"class.blink::TransformStreamDefaultController"*, %"class.blink::ExceptionState"*)* @_ZN5blink18InflateTransformer5FlushEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE to i8*), i8* bitcast (%"class.blink::ScriptState"* (%"class.blink::InflateTransformer"*)* @_ZN5blink18InflateTransformer14GetScriptStateEv to i8*), i8* bitcast (void (%"class.blink::InflateTransformer"*, %"class.blink::Visitor"*)* @_ZNK5blink18InflateTransformer5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"Buffer size exceeds maximum heap object size.\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"Compressed input was truncated.\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"Junk found after end of compressed data.\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"The compressed data was not valid: \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"The compressed data was not valid.\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.9 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.10 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.21 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEENS_12VectorTraitsIS8_EEEEEEPKcv = private unnamed_addr constant [219 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::DOMTypedArray<uint8_t, v8::Uint8Array> >, WTF::VectorTraits<blink::Member<blink::DOMTypedArray<uint8_t, v8::Uint8Array> > > >]\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.23 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1

@_ZN5blink18InflateTransformerC1EPNS_11ScriptStateENS_17CompressionFormatE = hidden unnamed_addr alias void (%"class.blink::InflateTransformer"*, %"class.blink::ScriptState"*, i32), void (%"class.blink::InflateTransformer"*, %"class.blink::ScriptState"*, i32)* @_ZN5blink18InflateTransformerC2EPNS_11ScriptStateENS_17CompressionFormatE
@_ZN5blink18InflateTransformerD1Ev = hidden unnamed_addr alias void (%"class.blink::InflateTransformer"*), void (%"class.blink::InflateTransformer"*)* @_ZN5blink18InflateTransformerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformerC2EPNS_11ScriptStateENS_17CompressionFormatE(%"class.blink::InflateTransformer"*, %"class.blink::ScriptState"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink18InflateTransformerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 65536) #10
  %10 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.WTF::Vector.181"* %6 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = trunc i64 %9 to i32
  store i32 %13, i32* %8, align 8
  %14 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  store i32 65536, i32* %14, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 65536, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 4
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 5
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2
  %18 = bitcast %struct.z_stream_s* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 112, i1 false)
  tail call void @_ZN5blink18ZlibPartitionAlloc9ConfigureEP10z_stream_s(%struct.z_stream_s* %17) #10
  switch i32 %2, label %23 [
    i32 1, label %20
    i32 0, label %19
  ]

19:                                               ; preds = %3
  br label %20

20:                                               ; preds = %3, %19
  %21 = phi i32 [ 31, %19 ], [ 15, %3 ]
  %22 = tail call i32 @Cr_z_inflateInit2_(%struct.z_stream_s* %17, i32 %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #10
  br label %23

23:                                               ; preds = %20, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink18ZlibPartitionAlloc9ConfigureEP10z_stream_s(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @Cr_z_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformerD2Ev(%"class.blink::InflateTransformer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink18InflateTransformerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2
  %8 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %7) #10
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %19, label %13, !prof !3

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !4

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #10
  store i8* null, i8** %10, align 8
  br label %19

19:                                               ; preds = %9, %18
  ret void
}

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformerD0Ev(%"class.blink::InflateTransformer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink18InflateTransformerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2
  %8 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %7) #10
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %19, label %13, !prof !3

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !4

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #10
  store i8* null, i8** %10, align 8
  br label %19

19:                                               ; preds = %9, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformer9TransformEN2v85LocalINS1_5ValueEEEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::InflateTransformer"*, %"class.v8::Value"*, %"class.blink::TransformStreamDefaultController"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::ArrayBufferOrArrayBufferView", align 8
  %7 = alloca %"class.blink::NotShared", align 8
  %8 = bitcast %"class.blink::ArrayBufferOrArrayBufferView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN5blink28ArrayBufferOrArrayBufferViewC1Ev(%"class.blink::ArrayBufferOrArrayBufferView"* nonnull %6) #10
  %9 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %10, i64 0, i32 0
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  call void @_ZN5blink30V8ArrayBufferOrArrayBufferView6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_28ArrayBufferOrArrayBufferViewENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, %"class.v8::Value"* %2, %"class.blink::ArrayBufferOrArrayBufferView"* nonnull dereferenceable(24) %6, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %5
  %17 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false)
  br label %66

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::ArrayBufferOrArrayBufferView", %"class.blink::ArrayBufferOrArrayBufferView"* %6, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %47

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::NotShared"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* nonnull sret %7, %"class.blink::ArrayBufferOrArrayBufferView"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %7, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  %26 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %27, i64 0, i32 2
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %25, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %22, %31
  %35 = phi i8* [ %33, %31 ], [ null, %22 ]
  %36 = bitcast %"class.blink::DOMArrayBufferView"* %25 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %37 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %37, i64 10
  %39 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %38, align 8
  %40 = call i64 %39(%"class.blink::DOMArrayBufferView"* %25) #10
  %41 = icmp ugt i64 %40, 4294967295
  br i1 %41, label %42, label %44

42:                                               ; preds = %34
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0)) #10
  %43 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false)
  br label %66

44:                                               ; preds = %34
  %45 = trunc i64 %40 to i32
  call void @_ZN5blink18InflateTransformer7InflateEPKhjN4base11StrongAliasINS_13IsFinishedTagEbEEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* %1, i8* %35, i32 %45, i8 0, %"class.blink::TransformStreamDefaultController"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %46 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %9, align 8
  call void @_ZN5blink13ScriptPromise13CastUndefinedEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptState"* %46) #10
  br label %66

47:                                               ; preds = %18
  %48 = call %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"* nonnull %6) #10
  %49 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %48, i64 0, i32 0, i32 1, i32 0, i32 0
  %50 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %49, align 8
  %51 = icmp eq %"class.v8::BackingStore"* %50, null
  br i1 %51, label %61, label %52

52:                                               ; preds = %47
  %53 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %50) #10
  %54 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %49, align 8
  %55 = icmp eq %"class.v8::BackingStore"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %54) #10
  %58 = icmp ugt i64 %57, 4294967295
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0)) #10
  %60 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false)
  br label %66

61:                                               ; preds = %47, %52, %56
  %62 = phi i64 [ %57, %56 ], [ 0, %52 ], [ 0, %47 ]
  %63 = phi i8* [ %53, %56 ], [ %53, %52 ], [ null, %47 ]
  %64 = trunc i64 %62 to i32
  call void @_ZN5blink18InflateTransformer7InflateEPKhjN4base11StrongAliasINS_13IsFinishedTagEbEEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* %1, i8* %63, i32 %64, i8 0, %"class.blink::TransformStreamDefaultController"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %65 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %9, align 8
  call void @_ZN5blink13ScriptPromise13CastUndefinedEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptState"* %65) #10
  br label %66

66:                                               ; preds = %59, %61, %42, %44, %16
  call void @_ZN5blink28ArrayBufferOrArrayBufferViewD1Ev(%"class.blink::ArrayBufferOrArrayBufferView"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink28ArrayBufferOrArrayBufferViewC1Ev(%"class.blink::ArrayBufferOrArrayBufferView"*) unnamed_addr #2

declare void @_ZN5blink30V8ArrayBufferOrArrayBufferView6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_28ArrayBufferOrArrayBufferViewENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ArrayBufferOrArrayBufferView"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZNK5blink28ArrayBufferOrArrayBufferView20GetAsArrayBufferViewEv(%"class.blink::NotShared"* sret, %"class.blink::ArrayBufferOrArrayBufferView"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformer7InflateEPKhjN4base11StrongAliasINS_13IsFinishedTagEbEEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE(%"class.blink::InflateTransformer"*, i8*, i32, i8, %"class.blink::TransformStreamDefaultController"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = alloca %"class.blink::HeapVector", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::DOMTypedArray"*, align 8
  %13 = alloca %"class.blink::HeapVector", align 8
  %14 = alloca %"class.blink::HeapVector", align 8
  %15 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 5
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = icmp ne i32 %2, 0
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %21

20:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %362

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2, i32 1
  store i32 %2, i32* %23, align 8
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %22, i64 0, i32 0
  store i8* %1, i8** %24, align 8
  %25 = bitcast %"class.blink::HeapVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %30 = bitcast %"class.blink::HeapVector"* %7 to i8**
  store i8* %29, i8** %30, align 8
  store i32 1, i32* %27, align 8
  %31 = bitcast i8* %29 to i64*
  store i64 0, i64* %31, align 8
  store i32 0, i32* %28, align 4
  %32 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2, i32 4
  %34 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = bitcast i8** %34 to i64*
  %36 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2, i32 3
  %37 = bitcast i8** %36 to i64*
  %38 = icmp eq i8 %3, 0
  %39 = select i1 %38, i32 0, i32 4
  %40 = bitcast %"class.blink::DOMTypedArray"** %12 to i8*
  %41 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0
  br label %42

42:                                               ; preds = %316, %21
  %43 = load i32, i32* %32, align 4
  store i32 %43, i32* %33, align 8
  %44 = load i64, i64* %35, align 8
  store i64 %44, i64* %37, align 8
  %45 = call i32 @Cr_z_inflate(%struct.z_stream_s* %22, i32 %39) #10
  switch i32 %45, label %46 [
    i32 -5, label %252
    i32 1, label %252
    i32 0, label %252
  ]

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %49 = bitcast %"class.blink::HeapVector"* %8 to i8**
  store i8* %48, i8** %49, align 8
  %50 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %50, align 8
  %51 = bitcast i8* %48 to i64*
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS9_NS_16VectorBufferBaseIS7_S8_E11OffsetRangeESD_(%"class.WTF::VectorBuffer.215"* nonnull %47, %"class.WTF::VectorBuffer.215"* nonnull dereferenceable(24) %53, i64 0, i64 0) #10
  call void @_ZN5blink18InflateTransformer14EnqueueBuffersEPNS_32TransformStreamDefaultControllerENS_10HeapVectorINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1EEERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* %0, %"class.blink::TransformStreamDefaultController"* %4, %"class.blink::HeapVector"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %54 = load i32, i32* %52, align 4
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %56, align 8
  br i1 %55, label %58, label %60, !prof !4

58:                                               ; preds = %46
  %59 = bitcast i8* %48 to %"class.blink::Member.217"*
  br label %66

60:                                               ; preds = %46
  %61 = icmp ne %"class.blink::Member.217"* %57, null
  %62 = bitcast i8* %48 to %"class.blink::Member.217"*
  %63 = icmp ne %"class.blink::Member.217"* %57, %62
  %64 = and i1 %61, %63
  br i1 %64, label %66, label %65

65:                                               ; preds = %60
  store i32 0, i32* %52, align 4
  br label %66

66:                                               ; preds = %58, %65, %60
  %67 = phi %"class.blink::Member.217"* [ %59, %58 ], [ %62, %65 ], [ %62, %60 ]
  %68 = icmp eq %"class.blink::Member.217"* %57, %67
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %66
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"* nonnull %47, %"class.blink::Member.217"* %57) #10
  br label %70

70:                                               ; preds = %66, %69
  store %"class.blink::Member.217"* null, %"class.blink::Member.217"** %56, align 8
  %71 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %344

74:                                               ; preds = %70
  %75 = icmp eq i32 %45, -3
  br i1 %75, label %76, label %251

76:                                               ; preds = %74
  %77 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #10
  %78 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #10
  %79 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i64 35) #10
  %80 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 2, i32 6
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %161, label %85

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %102

92:                                               ; preds = %85
  %93 = zext i32 %91 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #10
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !4

99:                                               ; preds = %92
  call void @llvm.trap() #10
  unreachable

100:                                              ; preds = %92
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %90, align 4
  br label %102

102:                                              ; preds = %85, %100
  %103 = phi i32 [ %101, %100 ], [ %91, %85 ]
  %104 = load atomic i32, i32* %86 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  br i1 %106, label %108, label %118

108:                                              ; preds = %102
  %109 = zext i32 %103 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #10
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !4

115:                                              ; preds = %108
  call void @llvm.trap() #10
  unreachable

116:                                              ; preds = %108
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %116, %102
  %119 = phi i32 [ %117, %116 ], [ %103, %102 ]
  %120 = load atomic i32, i32* %86 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = add i32 %119, -1
  store i32 %124, i32* %107, align 4
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i32 [ %124, %123 ], [ %119, %118 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #10
  br label %129

129:                                              ; preds = %125, %128
  %130 = load atomic i32, i32* %86 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %144

133:                                              ; preds = %129
  %134 = load i32, i32* %107, align 4
  %135 = zext i32 %134 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #10
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !4

141:                                              ; preds = %133
  call void @llvm.trap() #10
  unreachable

142:                                              ; preds = %133
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %107, align 4
  br label %144

144:                                              ; preds = %129, %142
  %145 = ptrtoint i8* %81 to i64
  %146 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %146, align 8
  %147 = load atomic i32, i32* %86 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %167

150:                                              ; preds = %144
  %151 = load i32, i32* %107, align 4
  %152 = zext i32 %151 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #10
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !4

158:                                              ; preds = %150
  call void @llvm.trap() #10
  unreachable

159:                                              ; preds = %150
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %107, align 4
  br label %167

161:                                              ; preds = %76
  %162 = ptrtoint i8* %81 to i64
  %163 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %163, align 8
  %164 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1
  %165 = bitcast i8** %164 to i64*
  store i64 %162, i64* %165, align 8
  %166 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %166, align 8
  br label %181

167:                                              ; preds = %159, %144
  %168 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1
  %169 = bitcast i8** %168 to i64*
  store i64 %145, i64* %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8** %170, align 8
  %171 = load atomic i32, i32* %86 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = load i32, i32* %107, align 4
  br i1 %173, label %175, label %177

175:                                              ; preds = %167
  %176 = add i32 %174, -1
  store i32 %176, i32* %107, align 4
  br label %177

177:                                              ; preds = %175, %167
  %178 = phi i32 [ %176, %175 ], [ %174, %167 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #10
  br label %181

181:                                              ; preds = %161, %177, %180
  %182 = phi %"class.WTF::StringImpl"** [ %163, %161 ], [ %146, %177 ], [ %146, %180 ]
  %183 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %184, align 8
  %185 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %186 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %186, i64 3
  %188 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %187, align 8
  call void %188(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %9) #10
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #10
  br label %204

204:                                              ; preds = %181, %200, %203
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #10
  br label %220

220:                                              ; preds = %204, %216, %219
  br i1 %84, label %234, label %221

221:                                              ; preds = %220
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #10
  br label %234

234:                                              ; preds = %220, %230, %233
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #10
  br label %250

250:                                              ; preds = %234, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #10
  br label %344

251:                                              ; preds = %74
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0)) #10
  br label %344

252:                                              ; preds = %42, %42, %42
  %253 = load i32, i32* %32, align 4
  %254 = load i32, i32* %33, align 8
  %255 = sub i32 %253, %254
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %282, label %257

257:                                              ; preds = %252
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %258 = load i8*, i8** %34, align 8
  %259 = zext i32 %255 to i64
  %260 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8* %258, i64 %259) #10
  %261 = bitcast %"class.blink::DOMArrayBuffer"* %260 to %"class.blink::DOMArrayBufferBase"*
  %262 = call %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIhN2v810Uint8ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"* %261, i64 0, i64 %259) #10
  store %"class.blink::DOMTypedArray"* %262, %"class.blink::DOMTypedArray"** %12, align 8
  %263 = load i32, i32* %28, align 4
  %264 = load i32, i32* %27, align 8
  %265 = icmp eq i32 %263, %264
  br i1 %265, label %280, label %266, !prof !4

266:                                              ; preds = %257
  %267 = ptrtoint %"class.blink::DOMTypedArray"* %262 to i64
  %268 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %26, align 8
  %269 = zext i32 %263 to i64
  %270 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %268, i64 %269
  %271 = bitcast %"class.blink::Member.217"* %270 to i64*
  store atomic i64 %267, i64* %271 monotonic, align 8
  %272 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %277, label %274

274:                                              ; preds = %266
  %275 = bitcast %"class.blink::DOMTypedArray"* %262 to i8*
  %276 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %275) #10
  br label %277

277:                                              ; preds = %274, %266
  %278 = load i32, i32* %28, align 4
  %279 = add i32 %278, 1
  store i32 %279, i32* %28, align 4
  br label %281

280:                                              ; preds = %257
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIPS6_EEvOT_(%"class.WTF::Vector.214"* nonnull %41, %"class.blink::DOMTypedArray"** nonnull dereferenceable(8) %12) #10
  br label %281

281:                                              ; preds = %277, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  br label %282

282:                                              ; preds = %252, %281
  %283 = icmp eq i32 %45, 1
  br i1 %283, label %284, label %316

284:                                              ; preds = %282
  store i8 1, i8* %15, align 1
  %285 = load i32, i32* %23, align 8
  %286 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 1, i64 0
  %288 = bitcast %"class.blink::HeapVector"* %13 to i8**
  store i8* %287, i8** %288, align 8
  %289 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %289, align 8
  %290 = bitcast i8* %287 to i64*
  store i64 0, i64* %290, align 8
  %291 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %291, align 4
  %292 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS9_NS_16VectorBufferBaseIS7_S8_E11OffsetRangeESD_(%"class.WTF::VectorBuffer.215"* nonnull %286, %"class.WTF::VectorBuffer.215"* nonnull dereferenceable(24) %292, i64 0, i64 0) #10
  call void @_ZN5blink18InflateTransformer14EnqueueBuffersEPNS_32TransformStreamDefaultControllerENS_10HeapVectorINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1EEERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* %0, %"class.blink::TransformStreamDefaultController"* %4, %"class.blink::HeapVector"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %293 = load i32, i32* %291, align 4
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %296 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %295, align 8
  br i1 %294, label %297, label %299, !prof !4

297:                                              ; preds = %284
  %298 = bitcast i8* %287 to %"class.blink::Member.217"*
  br label %305

299:                                              ; preds = %284
  %300 = icmp ne %"class.blink::Member.217"* %296, null
  %301 = bitcast i8* %287 to %"class.blink::Member.217"*
  %302 = icmp ne %"class.blink::Member.217"* %296, %301
  %303 = and i1 %300, %302
  br i1 %303, label %305, label %304

304:                                              ; preds = %299
  store i32 0, i32* %291, align 4
  br label %305

305:                                              ; preds = %297, %304, %299
  %306 = phi %"class.blink::Member.217"* [ %298, %297 ], [ %301, %304 ], [ %301, %299 ]
  %307 = icmp eq %"class.blink::Member.217"* %296, %306
  br i1 %307, label %309, label %308, !prof !3

308:                                              ; preds = %305
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"* nonnull %286, %"class.blink::Member.217"* %296) #10
  br label %309

309:                                              ; preds = %305, %308
  store %"class.blink::Member.217"* null, %"class.blink::Member.217"** %295, align 8
  %310 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %311 = load i32, i32* %310, align 8
  %312 = icmp ne i32 %311, 0
  %313 = icmp eq i32 %285, 0
  %314 = or i1 %313, %312
  br i1 %314, label %344, label %315

315:                                              ; preds = %309
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %344

316:                                              ; preds = %282
  %317 = load i32, i32* %33, align 8
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %42, label %319

319:                                              ; preds = %316
  %320 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0
  %321 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 1, i64 0
  %322 = bitcast %"class.blink::HeapVector"* %14 to i8**
  store i8* %321, i8** %322, align 8
  %323 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 1, i32* %323, align 8
  %324 = bitcast i8* %321 to i64*
  store i64 0, i64* %324, align 8
  %325 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %325, align 4
  %326 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS9_NS_16VectorBufferBaseIS7_S8_E11OffsetRangeESD_(%"class.WTF::VectorBuffer.215"* nonnull %320, %"class.WTF::VectorBuffer.215"* nonnull dereferenceable(24) %326, i64 0, i64 0) #10
  call void @_ZN5blink18InflateTransformer14EnqueueBuffersEPNS_32TransformStreamDefaultControllerENS_10HeapVectorINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1EEERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* %0, %"class.blink::TransformStreamDefaultController"* %4, %"class.blink::HeapVector"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  %327 = load i32, i32* %325, align 4
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %330 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %329, align 8
  br i1 %328, label %331, label %333, !prof !4

331:                                              ; preds = %319
  %332 = bitcast i8* %321 to %"class.blink::Member.217"*
  br label %339

333:                                              ; preds = %319
  %334 = icmp ne %"class.blink::Member.217"* %330, null
  %335 = bitcast i8* %321 to %"class.blink::Member.217"*
  %336 = icmp ne %"class.blink::Member.217"* %330, %335
  %337 = and i1 %334, %336
  br i1 %337, label %339, label %338

338:                                              ; preds = %333
  store i32 0, i32* %325, align 4
  br label %339

339:                                              ; preds = %331, %338, %333
  %340 = phi %"class.blink::Member.217"* [ %332, %331 ], [ %335, %338 ], [ %335, %333 ]
  %341 = icmp eq %"class.blink::Member.217"* %330, %340
  br i1 %341, label %343, label %342, !prof !3

342:                                              ; preds = %339
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"* nonnull %320, %"class.blink::Member.217"* %330) #10
  br label %343

343:                                              ; preds = %339, %342
  store %"class.blink::Member.217"* null, %"class.blink::Member.217"** %329, align 8
  br label %344

344:                                              ; preds = %70, %309, %315, %250, %251, %343
  %345 = load i32, i32* %28, align 4
  %346 = icmp eq i32 %345, 0
  %347 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %26, align 8
  br i1 %346, label %348, label %350, !prof !4

348:                                              ; preds = %344
  %349 = bitcast i8* %29 to %"class.blink::Member.217"*
  br label %356

350:                                              ; preds = %344
  %351 = icmp ne %"class.blink::Member.217"* %347, null
  %352 = bitcast i8* %29 to %"class.blink::Member.217"*
  %353 = icmp ne %"class.blink::Member.217"* %347, %352
  %354 = and i1 %351, %353
  br i1 %354, label %356, label %355

355:                                              ; preds = %350
  store i32 0, i32* %28, align 4
  br label %356

356:                                              ; preds = %348, %355, %350
  %357 = phi %"class.blink::Member.217"* [ %349, %348 ], [ %352, %355 ], [ %352, %350 ]
  %358 = icmp eq %"class.blink::Member.217"* %347, %357
  br i1 %358, label %361, label %359, !prof !3

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"* nonnull %360, %"class.blink::Member.217"* %347) #10
  br label %361

361:                                              ; preds = %356, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %362

362:                                              ; preds = %361, %20
  ret void
}

declare void @_ZN5blink13ScriptPromise13CastUndefinedEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZNK5blink28ArrayBufferOrArrayBufferView16GetAsArrayBufferEv(%"class.blink::ArrayBufferOrArrayBufferView"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28ArrayBufferOrArrayBufferViewD1Ev(%"class.blink::ArrayBufferOrArrayBufferView"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformer5FlushEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::InflateTransformer"*, %"class.blink::TransformStreamDefaultController"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 4
  store i8 1, i8* %5, align 8
  tail call void @_ZN5blink18InflateTransformer7InflateEPKhjN4base11StrongAliasINS_13IsFinishedTagEbEEPNS_32TransformStreamDefaultControllerERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* %1, i8* null, i32 0, i8 1, %"class.blink::TransformStreamDefaultController"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %6 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 2
  %7 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %6) #10
  %8 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %12
  %18 = getelementptr inbounds %"class.WTF::Vector.181", %"class.WTF::Vector.181"* %8, i64 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.WTF::Vector.181"* %8 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store i32 0, i32* %9, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %19) #10
  br label %21

21:                                               ; preds = %4, %17
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false)
  br label %35

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 5
  %29 = load i8, i8* %28, align 1, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)) #10
  br label %32

32:                                               ; preds = %27, %31
  %33 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %1, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %33, align 8
  tail call void @_ZN5blink13ScriptPromise13CastUndefinedEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptState"* %34) #10
  br label %35

35:                                               ; preds = %32, %25
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18InflateTransformer14EnqueueBuffersEPNS_32TransformStreamDefaultControllerENS_10HeapVectorINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1EEERNS_14ExceptionStateE(%"class.blink::InflateTransformer"* nocapture readonly, %"class.blink::TransformStreamDefaultController"*, %"class.blink::HeapVector"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %83, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %17 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  %18 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %20

20:                                               ; preds = %77, %13
  %21 = phi %"class.blink::Member.217"* [ %7, %13 ], [ %80, %77 ]
  %22 = bitcast %"class.blink::Member.217"* %21 to %"class.blink::ScriptWrappable"**
  %23 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %22, align 8
  %24 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %14, align 8
  %25 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"class.v8::Context"*, %"class.v8::Context"** %25, align 8
  %27 = icmp eq %"class.v8::Context"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::ScriptState"* %24 to %"class.v8::internal::Isolate"**
  %30 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %29, align 8
  %31 = bitcast %"class.v8::Context"* %26 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %30, i64 %32) #10
  %34 = bitcast i64* %33 to %"class.v8::Context"*
  br label %35

35:                                               ; preds = %28, %20
  %36 = phi %"class.v8::Context"* [ %34, %28 ], [ null, %20 ]
  %37 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %36) #10
  %38 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %24, i64 0, i32 0
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8
  %40 = icmp eq %"class.blink::ScriptWrappable"* %23, null
  br i1 %40, label %41, label %44, !prof !4

41:                                               ; preds = %35
  %42 = ptrtoint %"class.v8::Isolate"* %39 to i64
  %43 = add i64 %42, 176
  br label %60

44:                                               ; preds = %35
  %45 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %23, %"class.v8::Isolate"* %39) #10
  %46 = ptrtoint %"class.v8::Object"* %45 to i64
  %47 = icmp eq %"class.v8::Object"* %45, null
  br i1 %47, label %48, label %60

48:                                               ; preds = %44
  %49 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %37) #10
  %50 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %49) #10
  %51 = bitcast %"class.blink::ScriptWrappable"* %23 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %52 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %52, i64 7
  %54 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %53, align 8
  %55 = call %"class.v8::Value"* %54(%"class.blink::ScriptWrappable"* nonnull %23, %"class.blink::ScriptState"* %50) #10
  %56 = icmp eq %"class.v8::Value"* %55, null
  br i1 %56, label %57, label %58, !prof !4

57:                                               ; preds = %48
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %58

58:                                               ; preds = %57, %48
  %59 = ptrtoint %"class.v8::Value"* %55 to i64
  br label %60

60:                                               ; preds = %41, %44, %58
  %61 = phi i64 [ %43, %41 ], [ %59, %58 ], [ %46, %44 ]
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10, !alias.scope !5
  br label %67

64:                                               ; preds = %60
  %65 = inttoptr i64 %61 to %"class.v8::Value"*
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %38, align 8, !noalias !5
  store %"class.v8::Isolate"* %66, %"class.v8::Isolate"** %15, align 8, !alias.scope !5
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %16, %"class.v8::Isolate"* %66, %"class.v8::Value"* nonnull %65) #10
  br label %67

67:                                               ; preds = %63, %64
  call void @_ZN5blink32TransformStreamDefaultController7enqueueEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::TransformStreamDefaultController"* %1, %"class.blink::ScriptState"* %24, %"class.blink::ScriptValue"* nonnull %5, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  %68 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %69 = icmp eq %"class.blink::DOMWrapperWorld"* %68, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %68, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #10
  %72 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %68) #10
  %76 = bitcast %"class.blink::DOMWrapperWorld"* %68 to i8*
  call void @free(i8* %76) #10
  br label %77

77:                                               ; preds = %67, %70, %75
  %78 = load i32, i32* %19, align 8
  %79 = icmp ne i32 %78, 0
  %80 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %21, i64 1
  %81 = icmp eq %"class.blink::Member.217"* %80, %11
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %20

83:                                               ; preds = %77, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.247", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.245", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.247", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %8 = alloca %"class.WTF::StringTypeAdapter.247", align 8
  %9 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = bitcast %"class.WTF::StringTypeAdapter.244"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %9, i8* %14) #10
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %19 = select i1 %17, %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"* %16
  %20 = bitcast %"class.WTF::StringTypeAdapter.247"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #10
  %22 = load i8*, i8** %21, align 8
  %23 = call i64 @strlen(i8* %22) #11
  call void @_ZN3WTF17StringTypeAdapterIPcEC2ES1_m(%"class.WTF::StringTypeAdapter.247"* nonnull %8, i8* %22, i64 %23) #10
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br i1 %27, label %95, label %28

28:                                               ; preds = %1
  %29 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %30 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %31 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %30, i8** nonnull dereferenceable(8) %10) #10
  %32 = load i8*, i8** %10, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %34 = bitcast %"class.WTF::StringTypeAdapter.244"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false) #10
  %35 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %7, i8* %35) #10
  %36 = bitcast %"class.WTF::StringTypeAdapter.245"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  %37 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %5, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false) #10
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %49

43:                                               ; preds = %28
  %44 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %48 = bitcast %"class.WTF::StringImpl"* %47 to i8*
  br label %49

49:                                               ; preds = %41, %43
  %50 = phi i8* [ null, %41 ], [ %48, %43 ]
  %51 = phi i64 [ %42, %41 ], [ %44, %43 ]
  %52 = phi i32 [ 0, %41 ], [ %46, %43 ]
  %53 = bitcast %"class.WTF::StringTypeAdapter.245"* %5 to i64*
  store i64 %51, i64* %53, align 8
  store i8* %50, i8** %37, align 8
  store i32 %52, i32* %38, align 8
  %54 = bitcast %"class.WTF::StringTypeAdapter.247"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false) #10
  %55 = load i8*, i8** %21, align 8
  %56 = call i64 @strlen(i8* %55) #11
  call void @_ZN3WTF17StringTypeAdapterIPcEC2ES1_m(%"class.WTF::StringTypeAdapter.247"* nonnull %6, i8* %55, i64 %56) #10
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %5, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"* nonnull %57, i8* %32) #10
  %58 = load i32, i32* %38, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %32, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterIPcE7WriteToEPh(%"class.WTF::StringTypeAdapter.247"* nonnull %6, i8* %60) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  %61 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPcE6lengthEv(%"class.WTF::StringAppend.221"* %33) #10
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %32, i64 %62
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.244"* nonnull %7, i8* %63) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  %64 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %64, label %162, label %65

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %82

72:                                               ; preds = %65
  %73 = zext i32 %71 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !4

79:                                               ; preds = %72
  call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %70, align 4
  br label %82

82:                                               ; preds = %65, %80
  %83 = phi i32 [ %81, %80 ], [ %71, %65 ]
  %84 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %85 = load atomic i32, i32* %66 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %90 = add i32 %83, -1
  store i32 %90, i32* %89, align 4
  br label %91

91:                                               ; preds = %88, %82
  %92 = phi i32 [ %90, %88 ], [ %83, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %162

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %162

95:                                               ; preds = %1
  %96 = bitcast i16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %11, align 8
  %97 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %97, i16** nonnull dereferenceable(8) %11) #10
  %99 = load i16*, i16** %11, align 8
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %101 = bitcast %"class.WTF::StringTypeAdapter.244"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false) #10
  %102 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %4, i8* %102) #10
  %103 = bitcast %"class.WTF::StringTypeAdapter.245"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #10
  %104 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 24, i1 false) #10
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %110

108:                                              ; preds = %95
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %116

110:                                              ; preds = %95
  %111 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 1
  %115 = bitcast %"class.WTF::StringImpl"* %114 to i8*
  br label %116

116:                                              ; preds = %108, %110
  %117 = phi i8* [ null, %108 ], [ %115, %110 ]
  %118 = phi i64 [ %109, %108 ], [ %111, %110 ]
  %119 = phi i32 [ 0, %108 ], [ %113, %110 ]
  %120 = bitcast %"class.WTF::StringTypeAdapter.245"* %2 to i64*
  store i64 %118, i64* %120, align 8
  store i8* %117, i8** %104, align 8
  store i32 %119, i32* %105, align 8
  %121 = bitcast %"class.WTF::StringTypeAdapter.247"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 16, i1 false) #10
  %122 = load i8*, i8** %21, align 8
  %123 = call i64 @strlen(i8* %122) #11
  call void @_ZN3WTF17StringTypeAdapterIPcEC2ES1_m(%"class.WTF::StringTypeAdapter.247"* nonnull %3, i8* %122, i64 %123) #10
  %124 = getelementptr inbounds %"class.WTF::StringTypeAdapter.245", %"class.WTF::StringTypeAdapter.245"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"* nonnull %124, i16* %99) #10
  %125 = load i32, i32* %105, align 8
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i16, i16* %99, i64 %126
  call void @_ZNK3WTF17StringTypeAdapterIPcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.247"* nonnull %3, i16* %127) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #10
  %128 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPcE6lengthEv(%"class.WTF::StringAppend.221"* %100) #10
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds i16, i16* %99, i64 %129
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.244"* nonnull %4, i16* %130) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #10
  %131 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %131, label %162, label %132

132:                                              ; preds = %116
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %149

139:                                              ; preds = %132
  %140 = zext i32 %138 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #10
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !4

146:                                              ; preds = %139
  call void @llvm.trap() #10
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %137, align 4
  br label %149

149:                                              ; preds = %132, %147
  %150 = phi i32 [ %148, %147 ], [ %138, %132 ]
  %151 = ptrtoint %"class.WTF::StringImpl"* %98 to i64
  %152 = load atomic i32, i32* %133 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %157 = add i32 %150, -1
  store i32 %157, i32* %156, align 4
  br label %158

158:                                              ; preds = %155, %149
  %159 = phi i32 [ %157, %155 ], [ %150, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %162

162:                                              ; preds = %161, %158, %116, %94, %91, %49
  %163 = phi i8* [ %29, %49 ], [ %29, %91 ], [ %29, %94 ], [ %96, %116 ], [ %96, %158 ], [ %96, %161 ]
  %164 = phi i64 [ 0, %49 ], [ %84, %91 ], [ %84, %94 ], [ 0, %116 ], [ %151, %158 ], [ %151, %161 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #10
  %165 = inttoptr i64 %164 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %165
}

declare void @_ZN5blink32TransformStreamDefaultController7enqueueEPNS_11ScriptStateENS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::TransformStreamDefaultController"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18InflateTransformer5TraceEPNS_7VisitorE(%"class.blink::InflateTransformer"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink18InflateTransformer14GetScriptStateEv(%"class.blink::InflateTransformer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InflateTransformer", %"class.blink::InflateTransformer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  ret %"class.blink::ScriptState"* %3
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"*, %"class.blink::Member.217"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::Member.217"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11ScriptStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptState"*
  tail call void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink11ScriptState5TraceEPNS_7VisitorE(%"class.blink::ScriptState"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16SwapVectorBufferERS9_NS_16VectorBufferBaseIS7_S8_E11OffsetRangeESD_(%"class.WTF::VectorBuffer.215"*, %"class.WTF::VectorBuffer.215"* dereferenceable(24), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = trunc i64 %3 to i32
  %9 = lshr i64 %3, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 1, i64 0
  %14 = bitcast i8* %13 to %"class.blink::Member.217"*
  %15 = icmp eq %"class.blink::Member.217"* %12, %14
  %16 = ptrtoint %"class.blink::Member.217"* %12 to i64
  br i1 %15, label %48, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 1, i64 0
  %21 = bitcast i8* %20 to %"class.blink::Member.217"*
  %22 = icmp eq %"class.blink::Member.217"* %19, %21
  br i1 %22, label %48, label %23

23:                                               ; preds = %17
  %24 = ptrtoint %"class.blink::Member.217"* %19 to i64
  %25 = bitcast %"class.WTF::VectorBuffer.215"* %1 to i64*
  %26 = bitcast %"class.WTF::VectorBuffer.215"* %0 to i64*
  store atomic i64 %16, i64* %25 monotonic, align 8
  store atomic i64 %24, i64* %26 monotonic, align 8
  %27 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 1
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %27, align 4
  store i32 %29, i32* %28, align 4
  %31 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 2
  %33 = load i32, i32* %31, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %31, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.WTF::VectorBuffer.215"* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #10
  br label %41

41:                                               ; preds = %23, %37
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %225, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.WTF::VectorBuffer.215"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #10
  br label %225

48:                                               ; preds = %17, %4
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #10
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !4

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #10
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 14
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %59, align 8
  %62 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %11, align 8
  %63 = icmp eq %"class.blink::Member.217"* %62, %14
  br i1 %63, label %64, label %69

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 1, i64 0
  %68 = bitcast i8* %67 to %"class.blink::Member.217"*
  br label %69

69:                                               ; preds = %55, %64
  %70 = phi i32 [ %7, %64 ], [ 0, %55 ]
  %71 = phi i32 [ %5, %64 ], [ 0, %55 ]
  %72 = phi i32 [ %66, %64 ], [ 0, %55 ]
  %73 = phi i8* [ %13, %64 ], [ null, %55 ]
  %74 = phi %"class.blink::Member.217"* [ %14, %64 ], [ null, %55 ]
  %75 = phi i8* [ %67, %64 ], [ null, %55 ]
  %76 = phi %"class.blink::Member.217"* [ %68, %64 ], [ null, %55 ]
  %77 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 0
  %78 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 1, i64 0
  %80 = bitcast i8* %79 to %"class.blink::Member.217"*
  %81 = icmp eq %"class.blink::Member.217"* %78, %80
  br i1 %81, label %82, label %85

82:                                               ; preds = %69
  %83 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  br label %85

85:                                               ; preds = %69, %82
  %86 = phi i32 [ %10, %82 ], [ 0, %69 ]
  %87 = phi i32 [ %8, %82 ], [ 0, %69 ]
  %88 = phi i32 [ %84, %82 ], [ 0, %69 ]
  %89 = phi i8* [ %79, %82 ], [ null, %69 ]
  %90 = phi %"class.blink::Member.217"* [ %80, %82 ], [ null, %69 ]
  %91 = phi i8* [ %13, %82 ], [ null, %69 ]
  %92 = phi %"class.blink::Member.217"* [ %14, %82 ], [ null, %69 ]
  %93 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 1
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %94, align 4
  store i32 %96, i32* %93, align 4
  store i32 %95, i32* %94, align 4
  %97 = icmp eq %"class.blink::Member.217"* %74, null
  %98 = icmp ne %"class.blink::Member.217"* %90, null
  %99 = or i1 %97, %98
  br i1 %99, label %115, label %100

100:                                              ; preds = %85
  %101 = bitcast %"class.WTF::VectorBuffer.215"* %1 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.WTF::VectorBuffer.215"* %0 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = ptrtoint i8* %79 to i64
  store atomic i64 %104, i64* %101 monotonic, align 8
  %105 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 2
  %106 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 2
  %107 = load i32, i32* %105, align 4
  %108 = load i32, i32* %106, align 4
  store i32 %108, i32* %105, align 4
  store i32 %107, i32* %106, align 4
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %141, label %111

111:                                              ; preds = %100
  %112 = bitcast %"class.WTF::VectorBuffer.215"* %0 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %113) #10
  br label %141

115:                                              ; preds = %85
  %116 = and i1 %97, %98
  br i1 %116, label %117, label %132

117:                                              ; preds = %115
  %118 = bitcast %"class.WTF::VectorBuffer.215"* %0 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::VectorBuffer.215"* %1 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = ptrtoint i8* %13 to i64
  store atomic i64 %121, i64* %118 monotonic, align 8
  %122 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 2
  %123 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 2
  %124 = load i32, i32* %122, align 4
  %125 = load i32, i32* %123, align 4
  store i32 %125, i32* %122, align 4
  store i32 %124, i32* %123, align 4
  %126 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %137, label %128

128:                                              ; preds = %117
  %129 = bitcast %"class.WTF::VectorBuffer.215"* %1 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %130) #10
  br label %137

132:                                              ; preds = %115
  %133 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %0, i64 0, i32 0, i32 2
  %134 = getelementptr inbounds %"class.WTF::VectorBuffer.215", %"class.WTF::VectorBuffer.215"* %1, i64 0, i32 0, i32 2
  %135 = load i32, i32* %133, align 4
  %136 = load i32, i32* %134, align 4
  store i32 %136, i32* %133, align 4
  store i32 %135, i32* %134, align 4
  br label %141

137:                                              ; preds = %128, %117
  %138 = icmp ne i32 %87, %86
  %139 = icmp ne i32 %88, 0
  %140 = and i1 %98, %139
  br i1 %140, label %155, label %211

141:                                              ; preds = %111, %100, %132
  %142 = icmp ne %"class.blink::Member.217"* %74, null
  %143 = icmp ne i32 %87, %86
  %144 = icmp ne i32 %72, 0
  %145 = and i1 %142, %144
  %146 = icmp ne i32 %88, 0
  %147 = and i1 %98, %146
  br i1 %145, label %148, label %154

148:                                              ; preds = %141
  %149 = icmp eq i32 %71, %70
  %150 = icmp ne i32 %71, 0
  %151 = or i1 %149, %150
  %152 = icmp eq i32 %70, 0
  %153 = or i1 %152, %151
  br i1 %147, label %155, label %184

154:                                              ; preds = %141
  br i1 %147, label %155, label %211

155:                                              ; preds = %137, %148, %154
  %156 = phi i1 [ %153, %148 ], [ false, %154 ], [ false, %137 ]
  %157 = phi i1 [ %142, %148 ], [ %142, %154 ], [ false, %137 ]
  %158 = phi i1 [ %143, %148 ], [ %143, %154 ], [ %138, %137 ]
  %159 = icmp eq i32 %87, 0
  %160 = and i1 %159, %158
  %161 = icmp ne i32 %86, 0
  %162 = and i1 %161, %160
  %163 = xor i1 %156, true
  %164 = or i1 %162, %163
  %165 = xor i1 %162, true
  br i1 %164, label %184, label %166

166:                                              ; preds = %155
  %167 = bitcast %"class.blink::Member.217"* %90 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"class.blink::Member.217"* %74 to i64*
  %170 = load i64, i64* %169, align 8
  store atomic i64 %170, i64* %167 monotonic, align 8
  store atomic i64 %168, i64* %169 monotonic, align 8
  %171 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %166
  %174 = bitcast %"class.blink::Member.217"* %74 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %175) #10
  br label %177

177:                                              ; preds = %173, %166
  %178 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %211, label %180

180:                                              ; preds = %177
  %181 = bitcast %"class.blink::Member.217"* %90 to i8**
  %182 = load i8*, i8** %181, align 8
  %183 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %182) #10
  br label %211

184:                                              ; preds = %148, %155
  %185 = phi i1 [ %156, %155 ], [ %153, %148 ]
  %186 = phi i1 [ %157, %155 ], [ %142, %148 ]
  %187 = phi i1 [ %165, %155 ], [ false, %148 ]
  br i1 %185, label %188, label %199

188:                                              ; preds = %184
  %189 = icmp ne %"class.blink::Member.217"* %76, null
  %190 = and i1 %186, %189
  br i1 %190, label %191, label %198, !prof !3

191:                                              ; preds = %188
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %75, i8* nonnull %73, i64 8) #10
  %192 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %198, label %194

194:                                              ; preds = %191
  %195 = bitcast %"class.blink::Member.217"* %76 to i8**
  %196 = load i8*, i8** %195, align 8
  %197 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %196) #10
  br label %198

198:                                              ; preds = %191, %194, %188
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %73, i64 8) #10
  br label %211

199:                                              ; preds = %184
  br i1 %187, label %200, label %211

200:                                              ; preds = %199
  %201 = icmp ne %"class.blink::Member.217"* %92, null
  %202 = and i1 %98, %201
  br i1 %202, label %203, label %210, !prof !3

203:                                              ; preds = %200
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %91, i8* nonnull %89, i64 8) #10
  %204 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %210, label %206

206:                                              ; preds = %203
  %207 = bitcast %"class.blink::Member.217"* %92 to i8**
  %208 = load i8*, i8** %207, align 8
  %209 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %208) #10
  br label %210

210:                                              ; preds = %203, %206, %200
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %89, i64 8) #10
  br label %211

211:                                              ; preds = %154, %137, %177, %180, %210, %199, %198
  %212 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %213 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %212, i64 0, i32 1
  %214 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %213) #10
  %215 = icmp eq i8* %214, null
  br i1 %215, label %216, label %218, !prof !4

216:                                              ; preds = %211
  %217 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %213, i8* %217) #10
  br label %218

218:                                              ; preds = %211, %216
  %219 = phi i8* [ %217, %216 ], [ %214, %211 ]
  %220 = bitcast i8* %219 to %"class.blink::ThreadState"**
  %221 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %221, i64 0, i32 14
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, -1
  store i64 %224, i64* %222, align 8
  br label %225

225:                                              ; preds = %44, %41, %218
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPcEEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.244", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.244"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.244", %"class.WTF::StringTypeAdapter.244"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.244"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPcE6lengthEv(%"class.WTF::StringAppend.221"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPcE6lengthEv(%"class.WTF::StringAppend.221"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.10, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.10, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.244"*, i8*) unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPcEC2ES1_m(%"class.WTF::StringTypeAdapter.247"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPcE6lengthEv(%"class.WTF::StringAppend.221"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.247", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.221", %"class.WTF::StringAppend.221"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.247"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.247", %"class.WTF::StringTypeAdapter.247"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.221", %"class.WTF::StringAppend.221"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.247"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  %22 = tail call i64 @strlen(i8* %21) #11
  call void @_ZN3WTF17StringTypeAdapterIPcEC2ES1_m(%"class.WTF::StringTypeAdapter.247"* nonnull %4, i8* %21, i64 %22) #10
  %23 = load i32, i32* %18, align 8
  %24 = add i32 %23, %16
  %25 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %16
  br i1 %28, label %30, label %29

29:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %32 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %31, i8* %32) #10
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.10, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  %40 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = load i32, i32* %18, align 8
  %43 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = icmp ult i32 %24, %42
  br i1 %44, label %46, label %45

45:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* null, i8** %41, align 8
  br label %55

46:                                               ; preds = %39
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #10
  %48 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %42) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %47, i8* %48) #10
  %49 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* %50, i8** %41, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.10, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #10
  br label %55

55:                                               ; preds = %45, %46, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  ret i32 %24
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.244"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.246"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPcE7WriteToEPh(%"class.WTF::StringTypeAdapter.247"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.244"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.246"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.247"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::ArrayBufferContents", align 8
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca %"class.blink::ArrayBufferContents", align 8
  %7 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"* nonnull %5, i64 %1, i64 1, i32 0, i32 1) #10
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #10
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %2, %13
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #12
  unreachable

17:                                               ; preds = %13
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #10
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %21, %20 ], [ null, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %0, i64 %1, i1 false)
  %24 = bitcast %"class.blink::ArrayBufferContents"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ArrayBufferContents"* %6 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__shared_weak_count"** %27 to i64*
  store i64 %29, i64* %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #10
  %31 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #10
  %32 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #10
  %33 = bitcast i8* %32 to %"class.blink::DOMArrayBuffer"*
  %34 = bitcast %"class.blink::ArrayBufferContents"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #10
  %35 = bitcast %"class.blink::ArrayBufferContents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #10
  %36 = bitcast i8* %32 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64**
  store i64* null, i64** %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %25, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %29, i64* %42, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %32, i64 32
  store i8 0, i8* %43, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %3) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #10
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #10
  %44 = getelementptr inbounds i8, i8* %32, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #10
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %6) #10
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret %"class.blink::DOMArrayBuffer"* %33
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIhN2v810Uint8ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"*, i64, i64) local_unnamed_addr #0 align 2

declare void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"*, i64, i64, i32, i32) unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #8 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #10
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #10
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !8
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !9
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #3

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.196"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.196"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.196"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Value"* null
}

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIPS6_EEvOT_(%"class.WTF::Vector.214"*, %"class.blink::DOMTypedArray"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.214"* %0, i32 %5) #10
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %7, i64 %9
  %11 = bitcast %"class.blink::DOMTypedArray"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member.217"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #10
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.214"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %8, align 8
  %10 = icmp eq %"class.blink::Member.217"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 1
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #10
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 1, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.217"*
  %33 = icmp eq %"class.blink::Member.217"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 2
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEmm(i64 %37) #10
  %39 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %8, align 8
  %40 = icmp eq %"class.blink::Member.217"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 8, %34 ]
  %43 = phi %"class.blink::Member.217"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.217"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #10
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #10
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !4

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #10
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0)) #10
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #10
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.214"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %5, align 8
  %7 = icmp eq %"class.blink::Member.217"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.217"*
  %10 = icmp eq %"class.blink::Member.217"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.217"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !4

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #10
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.217"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.217"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #10
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #10
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"* %20, %"class.blink::Member.217"* %6) #10
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEmm(i64 %44) #10
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm(i64 %46) #10
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.217"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !3

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.217"*
  %58 = icmp ne %"class.blink::Member.217"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.217"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #10
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.217"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.217"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.217"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #10
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #10
  %87 = load %"class.blink::Member.217"*, %"class.blink::Member.217"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.217"*
  %90 = icmp eq %"class.blink::Member.217"* %87, %89
  br i1 %90, label %93, label %91, !prof !3

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS7_(%"class.WTF::VectorBuffer.215"* %92, %"class.blink::Member.217"* %87) #10
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #10
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.21, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS6_EEE14AllocateObjectISA_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS6_EEE14AllocateObjectISA_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.196"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.196"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([219 x i8], [219 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEENS_12VectorTraitsIS8_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.217"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.217", %"class.blink::Member.217"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.217"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEN3WTF12VectorTraitsIS7_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #10
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #10
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #10
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #10
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #10
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.23, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0)) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.23, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0)) #10
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.204, %class.scoped_refptr.204* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #10
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.201"* dereferenceable(8) %9) #10
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #10
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #10
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #10
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.204* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #10
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #10
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #10
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #10
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #10
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.204* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #10
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #10
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.201"* dereferenceable(8)) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink11ScriptValue4FromIRPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEES0_PNS_11ScriptStateEOT_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink11ScriptValue4FromIRPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEES0_PNS_11ScriptStateEOT_"}
!8 = !{i32 -2140060038}
!9 = !{i32 -2140060017}
